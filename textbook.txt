ഉളളടക്കം

യുണിറ്റ്‌ 1 കമ്പ്യൂട്ടിങ്‌ വിജ്ഞാനശാഖ 9
യുണിറ്റ്‌ 2 ഡാറ്റയുടെ പ്രതിനിധാനവും ബുളിയന്‍ ബീജഗണിതവും 31
യുണിറ്റ്‌ 3 കമ്പ്യുട്ടര്‍ സിസ്തത്തിന്റെ ഘടകങ്ങള്‍ 89
യുണിറ്റ്‌ 4 പ്രോഗ്രാമിങ്ങിന്റെ തത്വങ്ങളും പ്രശ്നപരിഹാരവും 127
യുണിറ്റ്‌ 5 C++ പ്രോഗ്രാമിങ്‌ - ഒരു ആമുഖം 155
| യുണിറ്റ്‌ 6 ഡാറ്റ ഉനങ്ങളും ഓഎറേറ്ററുകളും 169

പാഠപുസ്തകത്തില്‍ ഉപയോിച്ചിരിക്കുന്ന സുചനകള്‍

നമുക്ക്‌ ചെയ്യാം

നിങ്ങളുടെ പുരോഗതി അറിയുക

ഇന്‍ഫര്‍മേഷന്‍ ബോക്‌സ്‌

നമുക്ക്‌ പരിശീലിക്കാം

നമുക്ക്‌ സംഗ്രഹിക്കാം

പ്രധാന ആശയങ്ങള്‍

൦ കമ്പൂട്ടിങ്ങിലെ നാഴികമല്ലുകളും യ്ര്ത്രപ ഒരു തരത്തിലല്ലെങ്കില്‍ മറ്റൊരുതരത്തില്‍ കമ്പ്യൂട്ടര്‍ ഇന്ന്‌

ജീവിതത്തിന്റെ മിക്കവാറും എല്ലാ മേഖലകളിലും സ്വാ

രിണാമവും
ധീനം ചെലുത്തിക്കൊണ്ടിരിക്കുന്നു. ഏകദേശം എല്ലാ
O എണ്ണലും, സംഖ്യാനസ്ന്രദായത്തിന്റെ വരും തന്നെ ഇന്ന്‌ കമ്പ്യൂട്ടര്‍ ഉപയോഗിക്കുന്നവരാണ്‌.
വളര്‍ച്ചയും ഇതില്‍ പലരും പ്രോ്രഗാം തയാറാക്കാന്‍ കഴിവുള്ളവരും
ഠ കമ്പ്യൂട്ടിങ്‌ യന്ത്രങ്ങളുടെ വളര്‍ച്ച ആണ്‌. കമ്പ്യൂട്ടറിനെ നമ്മുടെ ഇഷ്ടാനുസരണം

ി @ പ്രവര്‍ത്തിപ്പിക്കുക എന്നത്‌ ശ്രമകരമായ പ്രവ്യത്തിയാ
© കുസ്പൂട്ടിന്റെ തലമുറക ണ്‌. ഉയര്‍ന്നതലത്തില്‍ ചിന്തിച്ചാല്‍ കമ്പ്യൂട്ടര്‍ സയന്‍സ്‌,
ഠ ഒന്നാം തലമുറ കമ്പ്യൂട്ടറുകള്‍ കമ്പ്യൂട്ടര്‍ ഉപയോഗിച്ചുള്ള പ്രശ്ന പരിഹരണത്തിന്റെ
© രണ്ടാം തലമുറ കമ്പയൂട്ടുകര്‍ ശാസ്ര്രശാഖയാണ്‌. കമ്പ്യൂട്ടര്‍ ശാസ്ര്രജ്ഞന്‍മാര്‍
യഥാര്‍ഥ ജീവിതത്തിലെ പ്രശ്നങ്ങള്‍ വിശകലനം
0 മൂന്നാം തലമുറ കമ്പൂട്ടുകള്‍ ചെയ്യാനും, അവ പരിഹരിക്കാനും കഴിവുള്ളവരായിരി
ഠ നാലാം തലമുറ കമ്പ്യൂട്ടറുകള്‍ ക്കണം. ഈ വിജ്ഞാന ശാഖയ്ക്ക്‌ അല്‍ഗോരിത രൂപീ
കരണം പോലെയുള്ള സൈദ്ധാന്തിക വിഷയങ്ങളും,
ഠ അഞ്ചാം തലമുറ കമ്പ്യൂട്ടറുകള്‍
കമ്പ്യൂട്ടര്‍ ആപ്ലിക്കേഷന്‍ തയാറാക്കല്‍ പോലുള്ള
൭ കമ്പുട്ടിങ്ങിന്റെ പരിണാമം പ്രായോഗിക വിഷയങ്ങളും കൈകാര്യം ചെയ്യാനുള്ള
ഠ പ്രോദ്രാമിംര്‌ ഭാഷകള്‍ ശേഷിയുണ്ട്‌. വിവരങ്ങളുടെ വിവരണത്തിനും രൂപമാറ്റ
ത്തിനും ഉതകുന്ന അല്‍ഗോരിത പ്രവര്‍ത്തനങ്ങളുടെ
ഠ അല്‍ഗോരിതവും കമ്പ്യൂട്ടര്‍ പ്രോഗ്രാമും
(സിദ്ധാന്തം, വിശകലനം, നിര്‍മ്മാണം, കാര്യക്ഷമത, നട
ഠ കമ്പുട്ടിങ്ങിന്റെ സിദ്ധാന്തം പ്പിൽ വരുത്തല്‍, പ്രയോഗം തുടങ്ങിയവ) ചിട്ടയായ
പഠനം കമ്പ്യൂട്ടര്‍ സയന്‍സ്‌ എന്ന വിജ്ഞാനശാഖയില്‍

ഉള്‍പ്പെടുന്നു.

കമ്പ്യൂട്ടിങ്‌ എന്ന ആശയം പഴയകാല അബാക്കസു
മുതല്‍ ഇന്നത്തെ സുപ്പര്‍ കമ്പ്യൂട്ടര്‍ വരെയുള്ള OLA
ങ്ങളുടെ പ്രവര്‍ത്തനങ്ങളില്‍ നിന്ന്‌ ഉരുത്തിരിഞ്ഞുണ്ടായ
താണ്‌. വിവിധ കമ്പ്യൂട്ടിങ്‌ യ്ര്രങ്ങളുടെ പരിണാമത്തെ
ക്കുറിച്ചും കമ്പ്യൂട്ടറിന്റെ വിവിധ തലമുറകളെക്കുറിച്ചും

൮ 82 re 3 ഈ അധ്യായത്തില്‍ ചര്‍ച്ച ചെയ്യുന്നു. കൂടാതെ പ്രോഗ്രാ
മിങ്‌ ഭാഷകളുടെ വളര്‍ച്ചയെക്കുറിച്ചും അലന്‍ട്യൂറിംഗ്‌

എന്ന ശാസ്ര്രജ്ഞന്റെ സംഭാവനകളെളക്കുറിച്ചും
ഇവിടെ വിവരിക്കുന്നു.
ഒന്നാം വര്‍ഷ കമ്പ്യൂട്ടര്‍ സയന്‍സ്‌ 1. കമ്പ്യൂട്ടിംഗ്‌ വിജ്ഞാനശാഖ

1.1. കമ്പ്യുട്ടിങ്ങിലെ നാഴികക്കല്ലുകളും യന്ത്രപരിണാമവും

(Computing milestones and machine evolution)

പ്രാചീനകാലത്ത്‌ മനുഷ്യന്‍ എണ്ണുവാന്‍ വേണ്ടി ഉപയോഗിച്ചിരുന്നത്‌ കല്ലുകളായിരുന്നു. അവര്‍
ചുമരില്‍ വരകള്‍ കോറിയിട്ടും, ചരടില്‍ കെട്ടുകളിട്ടും വിവരങ്ങള്‍ രേഖപ്പെടുത്തിയിരുന്നു. ഇതിന്റെ
തുടര്‍ച്ചയായി മനുഷ്യന്റെ കമ്പ്യൂട്ടിങ്‌ ശക്തിയെ യ്യന്രങ്ങളുപയോഗിച്ച്‌ ചെയ്യുവാന്‍ വേണ്ടിയുള്ള
ശ്രമം നടന്നു. എണ്ണുന്നതിനുള്ള പഴയരീതികളെക്കുറിച്ചും, സ്ഥാനീയ സാംഖ്യാനസ്രമ്പദായ
(Positional Number System) ത്തെക്കുറിച്ചും നമുക്ക്‌ ഇവിടെ ചര്‍ച്ച ചെയ്യാം.

1.1.1. എണ്ണലും സംഖ്യാസ്യ്രദായ (Number System) ത്തിന്റെ ക്രമാ
നദുഗതമായ വളര്‍ച്ചയും (Counting and the evolution of the positional
number system)

ചരിത്രം എഴുതപ്പെടുന്നതിനും എത്രയോ മുമ്പ്‌ തന്നെ മനുഷ്യന്റെ സംഖ്യാ ബോധവും എണ്ണല്‍
പ്രക്രിയയും വികാസം പ്രാപിച്ചിരുന്നു. ആദിമ മനുഷ്യന്‌ തന്നെ “കൂടുതല്‍”, “കുറവ്‌” എന്നീ
ആശയങ്ങള്‍ അറിമായിരുന്നു എന്ന്‌ വിശ്വസിക്കപ്പെടുന്നു. മനുഷ്യന്‍ വര്‍ഗങ്ങളും ഗോത്രങ്ങളും
ആയി ജീവിച്ചപ്പോള്‍ സ്വന്തം വിഭാഗത്തിലെയും ശ്രതുപാളയത്തിലെയും അംഗങ്ങളുടെ എണ്ണം
അറിയേണ്ടത്‌ അത്യാവശ്യമായി വന്നു. ആട്ടിന്‍പറ്റങ്ങളുടെയും മറ്റ്‌ വളര്‍ത്തുമൃഗങ്ങളുടെയും
എണ്ണം കൂടുതലാണോ കുറവാണൊ എന്നറിയുക പ്രാധാന്യമുള്ള വിഷയമായിരുന്നു. എണ്ണല്‍
എന്ന പ്രക്രിയയ്ക്ക്‌ ആദ്യകാലത്ത്‌ വടികളും കല്ലുകളും ആയിരുന്നു ഉപയോഗിച്ചിരുന്നത്‌.

ഇനി നമുക്ക്‌ വിവിധ സംഖ്യാ സ്രമ്പദായങ്ങള്‍ എങ്ങനെ വികസിച്ചു വന്നു എന്ന്‌ ചിന്തിക്കാം.
എന്തായാലും ഇന്നു കാണുന്ന സംഖ്യാ സ്രമ്പദായങ്ങള്‍ അനേകായിരം വര്‍ഷങ്ങള്‍ കൊണ്ട്‌
വികസിച്ചു വന്നതാണെന്ന്‌ നമുക്ക്‌ അനുമാനിക്കാം. ഈ വികാസത്തിന്‌ അനേകം ഗോത്രവര്‍ഗ
ങ്ങളും, സംസ്‌കാരങ്ങളും അതിന്റേതായ സംഭാവനകള്‍ നല്‍കിയിട്ടുണ്ട്‌. സംഖ്യാ സ്ര്രദായമെ
ന്നാല്‍ സംഖ്യകള്‍ എഴുതുന്നതിനുള്ള വിവിധ രീതികളാണ്‌. സംഖ്യാ സ്ര്രദായത്തിന്റെ ക്രമാ
നുഗതമായ വളര്‍ച്ചാചരിത്രം ചുവടെ വിവരിക്കുന്നു.

3000 BC യില്‍ ആവിര്‍ഭവിച്ച ഈജിപ്ഷ്യന്‍ സംഖ്യാ സ്ര്രദായത്തില്‍ നമുക്ക്‌ തുടങ്ങാം. ഈ
സഖ്യ സ്ര്പദായം 10 നെ ആധാരസ്യ (Base) ആയി ഉപയോഗിച്ചു. ഈ സ്രമ്പദായത്തില്‍ 1
മുതല്‍ 9 വരെയും, 10 മുതല്‍ 90 വരെയും, 100 മുതല്‍ 900 വരെയും, 1000 മുതല്‍ 9000 വരെയും
വൃത്യസ്തമായ ചിഹ്നങ്ങള്‍ (Symbols) ഉപയോഗിച്ചു. ഈജിപ്തുകാര്‍ സംഖ്യ വലത്തു നിന്ന്‌
ഇടത്തോട്ടാണ്‌ എഴുതിയത്‌. അതായത്‌ ഒരു സംഖ്യയില്‍ 10 ന്റെ ഏറ്റവും വലിയ മൂല്യം വലത്തേ
അറ്റത്തെ അക്കത്തിനായിരുന്നു.

പിന്നീട്‌ സുമേറിയന്‍ /ബാബിലോണിയന്‍ സംഖ്യാ സ്രമ്പദായത്തിന്റെ കാലഘട്ടമായിരുന്നു.
ഇവിടെ 60 ആയിരുന്നു ആധാര സംഖ്യ. ഇത്‌ സെക്സാജസിമല്‍ സംഖ്യാസ്രമ്പദായമെന്ന്‌ അറി
യപ്പെട്ടു. സംഖ്യയില്‍ അക്കങ്ങള്‍ ഇടത്ത്‌ നിന്ന്‌ വലത്തോട്ടാണ്‌ എഴുതിയിരുന്നത്‌. സംഖ്യ സ
ന്രാദയങ്ങളുടെ ചരിത്രത്തില്‍ ഏറ്റവും വലിയ ആധാരസംഖ്യ ഈ സാഖ്യാ സ്രമ്പദായത്തിനാ
യിരുന്നു. ഇവര്‍ പൂജ്യം അടയാളപ്പെടുത്തുന്നതിന്‌ ചിഹ്നം ഉപയോഗിച്ചിരുന്നില്ല. പക്ഷേ, പുജ്യം
എന്ന ആശയം നിലനിന്നിരുന്നു. പൂജ്യം രേഖപ്പെടുത്തേണ്ടി വരുമ്പോള്‍ അവര്‍ സംഖ്യയില്‍
ഒരു ഒഴിവ്‌ (Space) രേഖപ്പെടുത്തുമായിരുന്നു.
(5 ഒന്നാം വര്‍ഷ കമ്പൂട്ടര്‍ സയന്‍സ്‌ 1. കമ്പ്യൂട്ടിംഗ്‌ വിജ്ഞാനശാഖ

2500 BC യില്‍ ആണ്‌ ചൈനീസ്‌ സംഖ്യാസ്രമ്പദായം ഉപയോഗിച്ചിരുന്നത്‌. ഇത്‌ എളുപ്പമുള്ളതും
വളരെ സൌകര്യപ്രദവുമായിരുന്നു. 1 മുതല്‍ 9 വരെയുള്ള അക്കങ്ങള്‍ ഉപയോഗിച്ചു. 10 ആയി
രുന്നു ആധാരസംഖ്യ. ഈ രീതിക്ക്‌ ഇന്നത്തെ സംഖ്യാസ്രമ്പദായവുമായി വളരെ സാദൃശ്യമു
ണ്ടായിരുന്നു. മുളങ്കമ്പുകള്‍ കൊണ്ടാണ്‌ അന്ന്‌ സംഖ്യ രേഖപ്പെടുത്തിയിരുന്നത്‌.

ഏകദേശം 500 BC യില്‍ ഗ്രീക്ക്‌ സംഖ്യാസ്രമ്പദായം (അയോണിയന്‍ സംഖ്യാ സ്രമ്പദായം)
വികസിക്കപ്പെട്ടു. ഇത്‌ 10 ആധാരമായ സ്രമ്പദായമായിരുന്നു. ഇവര്‍ക്കും പൂജ്യം അടയാളപ്പെടു
ത്താന്‍ ചിഹ്നമില്ലായിരുന്നു.

റോമന്‍കാര്‍ ഗണിതശാസ്ര്രം പ്രായോഗിക തലത്തില്‍ കൂടുതലായി ഉപയോഗിക്കുന്നതിന്‌
തുടക്കം കുറിച്ചു. റോഡ്‌, പാലം തുടങ്ങിവയുടെ നിര്‍മ്മാണത്തില്‍ ഇവര്‍ ഗണിതം ഉപയോഗി
ച്ചു. 7 ചിഹ്നങ്ങള്‍ (1,V, X,L, C, D, M) ഉപയോഗിച്ചാണ്‌ ഇവര്‍ സംഖ്യകള്‍ അടയാളപ്പെടുത്തിയി
രുന്നത്‌.

മായന്‍കാര്‍ 20 ആധാരമായ സംഖ്യാ സ്ര്രദായമായിരുന്നു ഉപയോഗിച്ചിരുന്നത്‌. നമ്മുടെ കൈകാ
ലൂകളില്‍ ആകെ 20 വിരലുകള്‍ ഉള്ളതിനാലാണ്‌ 20 എന്ന ആധാര സംഖ്യ സ്വീകരിച്ചത്‌. ഈ
സംഖ്യാ സ്രമ്പദായം ശരിയായ ജ്യോതിശ്ലാസ്രതനിരീക്ഷണങ്ങള്‍ക്കും കുടുതല്‍ കൃത്യമായ
അളവുകള്‍ രേഖപ്പെടുത്തുന്നതിനും വ്യാപകമായി ഉപയോഗിച്ചു.

ഏതാണ്ട്‌ 1500 വര്‍ഷം മുമ്പാണ്‌ ഇന്ന്‌ നാം ഉപയോഗിക്കുന്ന ഹിന്ദു-അറബിക്‌ സംഖ്യാനസ്രമ്പ
ദായം ഇന്ത്യയില്‍ പിറവിയെടുത്തത്‌. ഇത്‌ സ്ഥാനവില ക്രമമുള്ള ഒരു ദശസംഖ്യാന സ്ര്രദായ
മായിരുന്നു. ഇതില്‍ പൂജ്യം അടയാളപ്പെടുത്തുന്നതിന്‌ പ്രത്യേകം ചിഹ്നം ഉപയോഗിച്ചു. പൂജ്യ
ത്തിന്റെ കണ്ടുപിടിത്തം, ലോകത്തിനുള്ള ഇന്ത്യയുടെ ഒരു വലിയ സംഭാവനയായ്‌ കണക്കാക്ക
പ്പെടുന്നു. പിന്നീട്‌ പല രാജ്യങ്ങളും ഈ സംഖ്യാസ്രമ്പദായം ഉപയോഗിച്ചു. ഇനി നമുക്ക്‌ കമ്പ്യൂ
ട്ടിങ്‌ യ്രന്തങ്ങളുടെ പരിണാമത്തെ കുറിച്ച്‌ ചര്‍ച്ച ചെയ്യാം.

1.1.2. കമ്പ്യൂട്ടിങ്‌ യന്ത്രങ്ങളുടെ പരിണാമം

(Evolution of the computing machine)
3000 BC മുതല്‍ 1450 AD വരെയുള്ള കാലഘട്ടത്തില്‍ മനുഷ്യന്‍ ലളിതമായ ചിത്രങ്ങളിലൂടെ
യും, പിന്നീട്‌ എഴുത്തുകളിലൂടെയും ആശയവിനിമയം നടത്തിയിരുന്നു. സംഖ്യകളുടെ കണ്ടു
പിടിത്തം അബാക്കസ്‌ എന്ന യ്രന്തത്തിന്റെ കണ്ടുപിടിത്തത്തിലേക്ക്‌ വഴി തെളിച്ചു. അബാക്ക
THM ആദ്യത്തെ കമ്പ്യൂട്ടിങ്‌ യ്രന്തമായി അറിയപ്പെടുന്നത്‌. താഴെ കൊടുത്ത വിവരണത്തില്‍
നിന്നും കമ്പ്യൂട്ടര്‍ യ്ര്തപരിണാമത്തിലെ ചില പ്രധാന നാഴികക്കല്ലുകള്‍ നമുക്കു പരിചയപ്പെടാം.

a. അബാക്കസ്‌ (Abacus)

ഏകദേശം 3000 BC യോടടുത്താണ്‌ മെസൊപ്പൊ

ട്ടാമിയന്‍മാര്‍ അബാക്കസ്‌ കണ്ടുപിടിച്ചത്‌.

അബാക്കസ്‌ എന്ന വാക്കിന്റെ അര്‍ഥം കണക്കു

കൂട്ടുന്ന ബോര്‍ഡ്‌ എന്നാണ്‌. ചെറിയ കമ്പി

യിലൂടെ ചലിപ്പിക്കാന്‍ കഴിയുന്ന മുത്തുകളാണ്‌

(Beeds) അബാക്കസ്സിന്റെ പ്രധാന ഘടകം. കമ്പി

കളെ രണ്ട്‌ ഭാഗമായി വിഭജിച്ചിരിക്കുന്നു. അബാ ചിത്രം 1.1 അബാക്കവ്‌

ക്കസ്സിനെ അടിസ്ഥാന ഗണിത്രക്രിയകള്‍ ചെയ്യാനുള്ള ആദ്യത്തെ ഉപകരണമായി കണക്കാക്കുന്നു.
അബാക്കസ്സിന്റെ ചിത്രം 1.1. ല്‍ കാണിച്ചിരിക്കുന്നു.
അ ഒന്നാം വര്‍ഷ കമ്പ്യുട്ടര്‍ സയന്‍സ്‌ 1. കമ്പ്യൂട്ടിംഗ്‌ വിജ്ഞാനശാഖ

അബാക്കസ്സിനെ കണ്ടിംഗ്‌ ഫ്രെയിം എന്നും വിളിച്ചിരുന്നു. ഇത്‌

൮ 4 അടിസ്ഥാന ഗണിത്രക്രിയകള്‍ ചെയ്യാനുള്ള ഒരു ഉപകരണമാണ്‌.

ഇതില്‍ ലംബമായുള്ള മൂന്ന്‌ വയറുകളില്‍ ഓരോന്നിലും 7 മുത്തു

& By it കള്‍ ചേര്‍ത്ത്‌ ചൈനക്കാര്‍ അബാക്കസ്സിനെ പരിഷ്കരിച്ചു. ഒരു
തിരശ്ചീനമായ ബാര്‍ 7 മുത്തുകളെയും മുകളില്‍ രണ്ട്‌, താഴെ

തൂ 1 2 [ 2 അഞ്ച്‌ എന്ന ക്രമത്തില്‍ വിഭജിക്കുന്നു. അക്കങ്ങളുടെ സ്ഥാനവി
ലയ്ക്കനുസരിച്ച്‌ മുത്തുകള്‍ ക്രമപ്പെടുത്തി സംഖ്യകളുടെ സങ്ക

+1 = 30 244 ലനവും ഗുണനവും അബാക്കസ്സില്‍ ചെയ്യാവുന്നതാണ്‌.
ചിതം 1.2 (a) അബ്ഥക്കസ്‌
ഉപയോഗിച്ചുള്ള കണക്ക്‌ അബാക്കസ്സ്‌ ശ്രവര്‍ത്തിക്കുന്നത്‌ സംഖ്യകളുടെ സ്ഥാനവില ക്രമ

കൂട്ടല്‍ ത്തിനനുസരിച്ചാണ്‌. അബാക്കസ്സില്‍ കാണിക്കുന്ന സംഖ്യ നമ്മള്‍
എഴുതിയ സംഖ്യ വായിക്കുന്നതു പോലെ വായിക്കാം. ബാറിന്റെ താഴെഭാഗത്ത്‌ കാണുന്ന അഞ്ച്‌
മുത്തുകളുടെ ഓരോന്നിന്റെയും വില 1 ഉം മുകളില്‍ കാണുന്ന 2 മുത്തുകളുടെ ഓരോന്നിന്റെയും
വില ട ഉം ആണ്‌. അബാക്കസ്സിലെ ബാറിനരികിലേക്ക്‌ തള്ളി നീക്കിയ മുത്തുകള്‍ സംഖ്യയെ
പ്രതിനിധികരിക്കുന്നു. ചിത്രം 1.1 ല്‍ അടയാളപ്പെടുത്തിയ സംഖ്യ 2364.

ഇന്നും അബാക്കസ്‌ കുട്ടികള്‍ കണക്ക്‌ കൂട്ടുന്നതിനുവേണ്ടി ഉപയോഗിക്കുന്നു. നന്നായ്‌ പരിശീ
ലിച്ചാല്‍ ഒരു അബാക്കസ്സില്‍ കാല്‍ക്കുലേറ്ററിന്റെ വേഗതയില്‍ കണക്കു കൂട്ടാനാകും. ചിത്രം 1.2
(a) കാണിക്കുന്നത്‌ ഒറ്റ അക്കമുള്ള രണ്ട്‌ സംഖ്യകളുടെ സങ്കലനമാണ്‌ ചിത്രം 1.2 (0) കാണിക്കു
ന്നത്‌ രണ്ട്‌ സംഖ്യകള്‍ (54 ഉം 46 ഉം) പരസ്പരം കൂട്ടുന്നതാണ്‌.

54465100
54+ 46=9(10) AJICINW ഇടത്തോക്ടു

aANDo 1.2 (b) അങ്ഥക്കസ്‌ ഉപയോഗിച്ചുള്ള കണക്കുകുട്ടത്‌ തിക്ക്‌ കൂട്ടുമ്പോശി 100

കിട്ടും

10. നാഷിയറിന്റെ ബോണറദുകള്‍ (Napier’s bones)

AD 1617 ല്‍ ജോണ്‍ നാപ്പിയര്‍ എന്ന ഗണിത ശാസ്ത്രജ്ഞന്‍ സംഖ്യകള്‍ രേഖപ്പെടുത്തിയ
ചില ദണ്ഡുകള്‍ കണ്ടുപിടിച്ചു. ഈ ദണ്ഡുകള്‍ നാപ്പിയര്‍ ബോണ്‍സ്‌ എന്നറിയപ്പെട്ടു. ഇതുപ
യോഗിച്ച്‌ ഗുണന്രകിയകള്‍ എളുപ്പത്തില്‍ ചെയ്യാന്‍ സാധിച്ചിരുന്നു. ഏതു സംഖ്യയെയും 2
മുതല്‍ 9 വരെയുള്ള അക്കങ്ങള്‍ കൊണ്ട്‌ ഗുണിക്കാന്‍ ഈ ഉപകരണത്തിന്‌ കഴിയുമായിരുന്നു.
ഒരു ഗുണന്റരരിയയിലെ ആദ്യസംഖ്യയെ പ്രതിനിധീകരിക്കാന്‍ 0 മുതല്‍ 9 വരെയുള്ള ബോണു
കളും രണ്ടാമത്തെ അക്കത്തെ സൂചിപ്പിക്കാന്‍ പതിനൊന്നാമത്തെ ബോണും ഉപയോഗിച്ചു.

ഒന്നാം വര്‍ഷ കമ്പ്യൂട്ടര്‍ സയന്‍സ്‌

ല്‍

ചിത്രം 1.3 ജോങ്നാഷിമറും (1550 - 1671) നാഷിമര്‍ ബോണുകളും
പ്രയാസമുള്ള ഗുണന്രരരിയകള്‍ സങ്കലനത്തിലൂടെ എളുപ്പമാക്കാന്‍ സഹായിക്കുന്ന ലോഗരിത
പട്ടിക 1614 ല്‍ കണ്ടെത്തിയതും ജോണ്‍ നാപ്പിയറാണ്‌. നാപ്പിയര്‍ ബോണുകള്‍ ചിര്രം 1.3 ല്‍
കാണിച്ചിരിക്കുന്നു.

നാപ്പിയര്‍ ബോണിന്റെ സ്ര്രിപ്പുകള്‍ തവണകളുടെ പട്ടികയാണ്‌. 2% സംഖ്യ, 3% സംഖ്യ തുട
ങ്ങിയ വിലകളാണ്‌ ഓരോ ചതുരത്തിലും നല്‍കുന്നത്‌. പക്ഷെ പത്തുകളും ഒന്നുകളും എഴുതി
യിരിക്കുന്നത്‌ യഥാക്രമം ചരിഞ്ഞവരയുടെ മുകളിലും താഴെയുമാണ്‌. ഒരു വലിയ സംഖ്യയെ
ഒറ്റ അക്കം കൊണ്ട്‌ ഗുണിക്കാന്‍ നാപ്പിയര്‍ ബോണ്‍ അനുയോജ്യമാണ്‌. ഉദാഹരണമായി 425028
നെ 7 കൊണ്ട്‌ ഗുണിക്കണമെന്നിരിക്കട്ടെ, ആദ്യം 4,2,5,9,2,8 എന്നീ അക്കങ്ങളുടെ സ്ദ്രിപ്പുകള്‍
യഥാക്രമം അടുക്കുക എന്നിട്ട്‌ 70) നേരെയുള്ള ചതുരങ്ങള്‍ ശ്രദ്ധിക്കുക (ചിത്രത്തില്‍ പച്ചക്ക
ഉര്‍ നല്‍കിയിരിക്കുന്നു) ഇനി അക്കങ്ങള്‍ വായിക്കുക. ചരിഞ്ഞ രേഖയില്‍ ഉള്ള അക്കങ്ങള്‍
കൂട്ടിക്കാണിക്കണം. അപ്പോള്‍ ഉത്തരം 2(8+1) (443) (5+6) (3) (445)6. അതായത്‌ 297 (11)
496. 11 ഒഴികെയുള്ള എല്ലാ അക്കങ്ങളും കൃത്യ സ്ഥാനത്താണ്‌. 11 ലെ 10 ഇടത്തോട്ട്‌ ക്യാരി
(Carry) ചെയ്യുക. അപ്പോള്‍ 29 (7-1) 1496 എന്നാകുന്നു. അങ്ങനെ ഗുണനഫലമായ 2981496

| 111. പി

22
ree
gee
bce

=2 (8-1) (443) (5+6) (3+1) (445) 6
=297(11)496=2981496

ചിത്രം 1.4 നാഷിയര്‍ ബോണ്‍ ഉപമോഗിച്ചുള്ള ഗുണനം

കം

4
:
z
:

”

൫ ഒന്നാം വര്‍ഷ കമ്പ്യൂട്ടര്‍ സയന്‍സ്‌ 1. കമ്പ്യൂട്ടിംഗ്‌ വിജ്ഞാനശാഖ

൦. പാസ്‌കലൈന്‍ (Pascaline)

ബ്ലെയ്സി പാസ്കല്‍ എന്ന ഫ്രഞ്ച്‌! ഗണിത ശാസ്ര്തരജ്ഞനാണ്‌ ആദ്യമായി കാല്‍ക്കുലേറ്റര്‍
നിര്‍മ്മിച്ചത്‌. 1642 ല്‍ തന്റെ 19-ാമത്തെ വയസ്സിലാണ്‌ അദ്ദേഹം കമ്പ്യൂട്ടിങ്‌ യ്രന്്രം നിര്‍മ്മിച്ചത്‌.
ആ യന്ത്രത്തിന്‌ രണ്ട്‌ സംഖ്യകള്‍ കൂട്ടാനും കുറയ്ക്കാനും കഴിയുമായിരുന്നു. കൂടാതെ
ആവര്‍ത്തന പ്രക്രിയയിലൂടെ ഗുണനവും ഹരണവും ചെയ്യാന്‍ ആ യന്ത്രത്തിനു കഴിയുമായിരു
ന്നു. ടാക്സ്‌ കളക്ഷന്‍ സൂപ്പര്‍വൈസസറായ തന്റെ പിതാവിനെ സഹായിക്കുന്നതിനാണ്‌
പാസ്കല്‍ ഈ യ്യന്ത്രം കണ്ടുപിടിച്ചത്‌. ഈ യന്ത്രത്തില്‍ അനേകം ച്രകങ്ങളും ഗിയറുകളും
സിലിണ്ടറുകളും ഉപയോഗിച്ചിരുന്നു. ഈ യന്ത്രത്തിനെ പാസ്്‌കലൈന്‍ എന്ന്‌ വിളിച്ചു. (ചിത്രം 15)

(ചിത്രം 1.5) ലെയ്‌സ? പഫാമക്കല്‍്‌ (1623 - 1662) Do പാ൯്കമൈദനും

20,81 എന്നീ സംഖ്യകള്‍ പാസ്‌കലൈന്‍ ഉപയോഗിച്ച്‌ കൂട്ടുന്നതിന്റെ ഒരു ഉദാഹരണം നമുക്ക്‌
പരിശോധിക്കാം. 6 അക്കങ്ങളെ പ്രതിനിധാനം ചെയ്യുന്ന 0-6 ച്രകങ്ങളാണ്‌ ശരിക്കും പാസ്‌ക
ലൈനില്‍ ഉണ്ടാവുക. ചിത്രത്തില്‍ - (ചിത്രം 1.6) - 4 അക്കങ്ങള്‍ പ്രതിനിധീകരിക്കുന്ന 4 ച്രക
ങ്ങളാണ്‌ ഉള്ളത്‌, വലത്ത്‌ നിന്ന്‌ ഇടത്തോട്‌ ച്ര്രം - 1, ചരകം - 2, allo - 3, ചക്രം - 4 എന്നി

Pascaline wheel

(0) [0] 0 [9] [9] (0) 2) [9]
1. Dialing the digit 2 of 20 2. Dialing the digit 8 of 81

[6] (2) [9] (0) [0] (a) [0] fa)
3. Dialing the digit 1 of 81 4. Sum of 20 and 81, 101 on Pascaline

ചി(തം 1.6. പാന്‌കലൈ൯ ഉപമോഗിച്ചുള്ള MBLIM0

(5 ഒന്നാം വര്‍ഷ കമ്പ്യൂട്ടര്‍ സയന്‍സ്‌ 1. കമ്പ്യൂട്ടര്‌ വിജ്ഞാനശാഖ

ങ്ങനെ ഇവയ്ക്ക്‌ യഥാക്രമം പേര്‍ നല്‍കാം. 20 ഡയല്‍ ചെയ്യാന്‍ ആദ്യം നിങ്ങള്‍ 2 നു നേരെ
യുള്ള വിടവില്‍ വിരല്‍ അമര്‍ത്തി ച്രകം 2 താഴെത്തെ സ്റ്റോപ്പറില്‍ മുട്ടുംവരെ വലത്തോട്ട്‌ തിരി
ക്കുക. ഈ കറക്കം 2 നെ യ്രത്രത്തില്‍ രേഖപ്പെടുത്തുന്നു. ഇപ്പോള്‍ യ്ര്ത്രത്തില്‍ 0020 എന്ന
സംഖ്യ തെളിയുന്നു.

81 രേഖപ്പെടുത്താന്‍ മുമ്പ്‌ ചെയ്തത്‌ പോലെ ആദ്യം ച്രകഠ-മലെ 81 നേരെയുള്ള വിടവില്‍
വിരലമര്‍ത്തി താഴെ സ്റ്റോപ്പറില്‍ മുട്ടുംവരെ തിരിക്കുക. ച്ര്രഠ-2, 9 എന്ന സംഖ്യ കടക്കുമ്പോള്‍
പാസ്‌കലൈനിനുള്ളിലെ ഗിയര്‍ ബാക്കി ഒന്നിനെ allo - 3ല്‍ രേഖപ്പെടുത്തുകയും യ്രന്ത
ത്തിലെ സംഖ്യ 0100 എന്നാവുകയും ചെയ്യും. ഇനി 81 ലെ 1 നെ രേഖപ്പെടുത്താന്‍ ച്രകഠ- 1
തിരിക്കുക. ഇപ്പോള്‍ യ്രന്തത്തില്‍ 0101 എന്ന സാഖ്യ തെളിയുന്നു. അതായത്‌ 20+81=101.

d. ലെബനീസിന്റെ കാല്‍ക്കുലേറ്റര്‍ (Leibniz’s calculator)

1673ല്‍ ജര്‍മ്മന്‍ ഗണിത ശാസ്ര്രജ്ഞനും തത്വചിന്തകനുമായ ഗോട്ഫ്രൈഡ്‌ വില്യം വണ്‍
ലെബനിസ്‌ സ്റ്റെപ്പ്‌ റക്കണര്‍ എന്ന പേരില്‍ ഒരു കണക്കുകൂട്ടല്‍ യ്ര്്രം നിര്‍മ്മിച്ചു. പാസ്ക
ലിന്റെ യ്രന്രത്തിന്റെ മെച്ചപ്പെടുത്തിയ ഒരു രൂപമായിരുന്നു ഇത്‌. പാസ്‌കലിന്റെ ആശയം കുറച്ചു
കൂടി വികസിപ്പിച്ച്‌ ഗുണനത്തിനും ഹരണത്തിനും ഉപയോഗിക്കാവുന്ന തരത്തിലായിരുന്നു ഈ

ചിത്രം 1.7. മോട്‌ഫൈഥ്‌ വില്യംവോങ്‌ ചെബതിസ്പും (1646 - 1716) DAIMIMIN 30300}
6eI9030

യ്രന്രം തയാറാക്കിയത്‌. പിന്നീട്‌ ലെബനീസ്‌ MY OLA വിജയകരമായി വിപണിയിലിറക്കി.
അദ്ദേഹം പ്രത്യേകമായി ഉപയോഗിച്ച (Wo ആകൃതിയിലുള്ള ഗിയറുകള്‍ പിന്നീട്‌ പല
കണക്കുകൂട്ടല്‍ യന്ത്രങ്ങളുടേയും നിര്‍മ്മാണത്തിന്‌ അടിസ്ഥാനമായി.

൦. ജാക്വേഡിന്റെ തറി (Jacquard’s loom)

1801 ല്‍ ജോസഫ്‌ മേരി ജാക്വേഡ്‌ ഒരു യ്രന്രത്തറി നിര്‍മ്മിച്ചു. സങ്കീര്‍ണമായ ഡിസൈനുകള്‍
ഉപയോഗിക്കുന്ന ടെക്സ്റ്റൈലുകളുടെ പ്രവര്‍ത്തനങ്ങള്‍ ലളിതമാക്കാന്‍ ഈ യന്ത്രത്തിന്‌ കഴി
ഞ്ഞു. ഈ യന്ത്രത്തെ നിയന്ത്രിച്ചത്‌ സുഷിരങ്ങളിട്ടിട്ടുള്ള കാര്‍ഡുകളായിരുന്നു (പഞ്ച്‌ഡ്‌ കാര്‍ഡ്‌).
ഈ കാര്‍ഡിലെ ഒരു വരി സുഷിരങ്ങള്‍, ഒരുവരി ഡിസൈനിനെ പ്രതിനിധീകരിക്കുന്നു. ഇങ്ങ
നെയുള്ള പലവരികള്‍ ചേര്‍ന്നതായിരുന്നു ഒരു പഞ്ച്ഡ്‌ കാര്‍ഡ്‌. ഒരേ തരത്തിലുള്ള കാര്‍ഡു
കള്‍ ക്രമത്തില്‍ അടുക്കി ചില പാറ്റേണുകള്‍ക്ക്‌ രൂപം നല്‍കിയിരുന്നു. പാറ്റേണുകള്‍ ഉപയോ
ഗിച്ച്‌ ആവര്‍ത്തിച്ചുള്ള ടെക്സ്റ്റൈല്‍ നിര്‍മ്മാണം നടത്തിയിരുന്നു. വിവരശേഖരണത്തിന്റെയും,
പുനരുപയോഗത്തിന്റെയും ആദ്യരൂപമായി ഇത്‌ പരിഗണിച്ചിരുന്നു. ഇതിലെ പഞ്ച്ഡ്‌ കാര്‍ഡ്‌
എന്ന ആശയം ചാള്‍സ്‌ ബാബേജ്‌ തന്റെ അനെലറ്റിക്‌ എഞ്ചിനിലും പിന്നീട്‌ ഹോളറിത്ത്‌ തന്റെ
കണ്ടുപിടിത്തങ്ങളിലും ഉപയോഗിച്ചു.
[5 1. കമ്പ്യൂട്ടിംഗ്‌ വിജ്ഞാനശാഖ

ചിത്രം 1.8 ജോന്പഫ്‌ മോദി BIL CAIW{o (1752- 1834) RIB CAMA തറിയും

f. ഡിഫറന്‍സ്‌ എഞ്ചിന്‍ (Difference engine)

കമ്പ്യൂട്ടറിന്റെ കണ്ടുപിടിത്തത്തിലേക്കുള്ള ആദ്യ ചുവടുവയ്പ്പ്‌ നടത്തിയ ഗണിതശാസ്ര്രജ്ഞ
നാണ്‌ ചാള്‍സ്‌ ബാബേജ്‌. കണക്കുകൂട്ടല്‍ യ്രന്തങ്ങളില്‍ മനുഷ്യന്റെ ഇടപെടല്‍ കഴിയുന്ന്രത
ഒഴിവാക്കുക എന്നതായിരുന്നു ബാബേജിന്റെ സ്വപ്നം. വലിയ ഗണിതശാസ്ര്രരകിയകളെ ചെറിയ
ഓപ്പറേഷനുകളായി വിഭജിച്ച്‌ ഒരു ഓട്ടോമാറ്റിക്‌ യ്രന്തത്തിന്റെ തുടര്‍ച്ചയായ പ്രവര്‍ത്തനത്തി
ലൂടെ നിര്‍ധാരണം ചെയ്യുന്ന രീതിയായിരുന്നു അദ്ദേഹം ആസൂത്രണം ചെയ്തത്‌. ആദ്യം അദ്ദേഹം
തയാറാക്കിയത്‌ ഒരു ഡിഫറന്‍സ്‌ എഞ്ചിനായിരുന്നു. അതിന്‌ ഗണിത്രകരിയകള്‍ ചെയ്യാനും ഫലം
പ്രദര്‍ശിപ്പിക്കാനുമുള്ള കഴിവുണ്ടായിരുന്നു. ഗണിത പട്ടികകള്‍ സമാഹരിക്കാന്‍ 1822ലാണ്‌
ബാബേജ്‌ ഡിഫറന്‍സ്‌ എഞ്ചിന്‍ തയ്യാറാക്കിയത്‌. ഈ യന്ത്രത്തിന്റെ നിര്‍മ്മാണത്തോടുകൂടി
ഏതുതരം കണക്കു കൂട്ടലും ചെയ്യാന്‍ ശേഷിയുള്ള ഒരു പുതിയ യന്ത്രത്തിന്റെ ആശയം ബാബേ
ജിന്റെ മനസ്സില്‍ രൂപീകൃതമായി.

ചി(തം 1.9 21906 ബാബേജും (1791- 1871) Wino എഞ്ചിനും

ഉ. അനലിറ്റിക്കല്‍ എഞ്ചിന്‍ (Analytical engine)

ആധുനിക കമ്പ്യൂട്ടറിന്റെ പൂര്‍വകാല രൂപമായ അനലിറ്റിക്കല്‍ എഞ്ചിന്‍ തയാറാക്കുന്ന
പ്രവര്‍ത്തനം 1833ലാണ്‌ ചാള്‍സ്‌ ബാബേജ്‌ തുടങ്ങിയത്‌. സാധാരണ ഗണിത്രക്രിയ്രകിയകള്‍
പരിഹരിക്കുന്നതില്‍ നിന്നും പൊതു ആവശ്യത്തിനുവേണ്ടിയുള്ള കണക്കു കൂട്ടലുകള്‍ നടത്തു
ന്നതിലേക്കുള്ള കമ്പ്യൂട്ടിംഗ്‌ യ്ര്രങ്ങളുടെ വളര്‍ച്ചയെ സൂചിപ്പിക്കുന്നതായിരുന്നു ഇത്‌. ഈ
യ്രന്രത്തില്‍ ഇന്നത്തെ ഡിജിറ്റല്‍ കമ്പ്യൂട്ടറിലെ പല ഘടകങ്ങളും ഒത്തുചേര്‍ന്നിരുന്നു. ഇതില്‍
ഒന്നാം വര്‍ഷ കമ്പ്യൂട്ടര്‍ സയന്‍സ്‌ 1. കമ്പ്യൂട്ടിംഗ്‌ വിഇഞാന,

സംഖ്യകളും പ്രവര്‍ത്തന ഫലങ്ങളും സൂക്ഷി
ക്കുന്നതിനുള്ള സൌകര്യമുണ്ടായിരുന്നു. മില്‍
(Mill) എന്നറിയപ്പെടുന്ന പ്രോസസ്സറാണ്‌ ഇതില്‍
ഗണിത്ക്രിയകള്‍ ചെയ്തിരുന്നത്‌. ഇതിനകത്തെ
ഇന്‍പൂട്ട/ഓട്ട്പുട്ട്‌ ഉപാധികള്‍ നിര്‍ദേശങ്ങളടങ്ങിയ
പഞ്ച്ഡ്‌ കാര്‍ഡ്‌ രൂപത്തിലായിരുന്നു. നിര്‍ദേശങ്ങള്‍
തയാറാക്കിയത്‌ ബാബേജിന്റെ അസിസ്റ്റന്റായിരുന്ന
അഗസ്റ്റ അഡ കിംഗ്‌ (Agust Ada King) ആയിരുന്നു.

അങ്ങനെ അഗസ്റ്റ അഡ കിംഗ്‌ ലോകത്തെ
ചിത്രം 1.10 അനഖറ്റിക്കത്‌

ദ്യത്തെ പ്രോഗ്രമറായി അറിയപ്പെട്ടു. അന്നത്തെ
ആദ്യ പാഠ്യ പ്പു എഞ്ചിന്റെ മാതക

സാങ്കേതികവിദ്യയുടെ കുറവ്‌ മൂലം അനലറ്റിക്കല്‍
എഞ്ചിന്‍ പൂര്‍ണമായി നിര്‍മ്മിക്കപ്പെട്ടിരുന്നില്ല. ഒരു മാതൃകയും കമ്പ്യൂട്ടര്‍ നിര്‍മ്മാണത്തിനുള്ള
എല്ലാ തത്വങ്ങളും ബാബേജ്‌ തയാറാക്കി. ഡിഫറന്‍സ്‌ എഞ്ചിന്റെയും അനലറ്റിക്കല്‍
എഞ്ചിന്റെയും കണ്ടുപിടിത്തം ചാള്‍സ്‌ ബാബേജിന്‌ “കമ്പ്യൂട്ടറിന്റെ പിതാവ്‌” (Father of Com-
puter) എന്ന ബഹുമതി നേടിക്കൊടുത്തു.

h. ഹോളറിത്തിന്റെ യന്ത്രം (Hollerith’s machine)

1887 ല്‍ അമേരിക്കക്കാരനായ ഹെര്‍മ്മന്‍ ഹോളറിത്ത്‌ (Herman Hollarith) ഒരു ഇലക്ട്രോ മെക്കാ
നിക്കല്‍ പഞ്ച്ഡ്‌ കാര്‍ഡ്‌ ടാബുലേറ്റര്‍ നിര്‍മ്മിച്ചു. ഈ യ്രന്രത്തില്‍ നിര്‍ദേശങ്ങള്‍ നല്‍കാനും
ഇന്‍പുട്ട്‌, ഓട്ട്പുട്ട പ്രവര്‍ത്തനങ്ങള്‍ക്കും പഞ്ച്ഡ്‌ കാര്‍ഡാണ്‌ ഉപയോഗിച്ചിരുന്നത്‌. കാര്‍ഡില്‍
സുഷിരങ്ങള്‍ ഒരു പ്രത്യേക മാതൃകയില്‍ നല്‍കി വിവിധ തരം ഡാറ്റയ്ക്ക്‌ രൂപം നല്‍കി. 1880 ല്‍
അമേരിക്കന്‍ സെന്‍സസ്‌ ബ്യൂറോ (US Census Bureau) യ്ക്ക്‌ ധാരാളം ഡാറ്റ പട്ടികപ്പെടുത്തുവാനും
വിശകലനം ചെയ്യാനുമുണ്ടായിരുന്നു. മനുഷ്യന്‍ ചെയ്യുകയാണെങ്കില്‍ 10 വര്‍ഷത്തോളം എടു
ക്കുന്ന ഈ ജോലി ഒരു വര്‍ഷത്തിനുള്ളില്‍ പൂര്‍ത്തിയാക്കാന്‍ ഹോളറിത്ത്‌ യ്ര്രത്തിനു കഴി
ഞ്ഞു. ഈ യന്ത്രത്തിന്റെ ഏറ്റവും വലിയ സവിശേഷത എന്തെന്നാല്‍ അത്‌ വൈദ്യുതി ഉപയോ
ഗിച്ച്‌ പഞ്ച്ഡ്‌ കാര്‍ഡിനെ വായിക്കുകയും, എണ്ണുകയും, തരംതിരിക്കുകയും ചെയ്തു എന്നുള്ള
താണ്‌. 1896 ല്‍ ഹോളറിത്ത്‌ ടാബുലേറ്റിംഗ്‌ മെഷീന്‍ കോര്‍പ്പറേഷന്‍ എന്ന കമ്പനിക്ക്‌ രൂപം
കൊടുത്തു. തുടര്‍ച്ചയായ ലയനങ്ങള്‍ക്കു ശേഷം 1924 ല്‍ ഈ കമ്പനി IBM (ഇന്റര്‍ നാഷണല്‍
ബിസിനസ്‌ മെഷീന്‍) ആയി മാറുകയും ചെയ്തു.

am
a

ചിത്രം 1.11 ഫെര്‍മ൯ ഫോളറിത്ത്‌ (1860 - 1929) ഹോളറിത്തിന്റെ amvabam യ്ര്തവും

ഒന്നാം വര്‍ഷ കമ്പ്യൂട്ടര്‍ സയന്‍സ്‌ 1. കമ്പ്യൂട്ടിംഗ്‌ വിജ്ഞാനശാഖ

1. മാര്‍ക്ക്‌ - I (Mark - I)

1944 ല്‍ ഹോവാഡ്‌ ഐക്കന്‍ (110 Aiken) IBM കമ്പനിയിലെ എഞ്ചിനീയര്‍മാരുമായി ചേര്‍ന്ന്‌
ഒരു വലിയ ഇലക്ട്രോ മെക്കാനിക്കല്‍ കമ്പ്യൂട്ടര്‍ നിര്‍മ്മിച്ചു. ഈ യന്ത്രം ഹാര്‍വാഡ്‌ മാര്‍ക്ക്‌- I
എന്ന്‌ അറിയപ്പെട്ടു. ഈ യ്രന്രത്തിന്റെ പ്രവര്‍ത്തനം ബാബേജിന്റെ അനലിറ്റിക്കല്‍ എഞ്ചിന്റെ
ചുവടുപിടിച്ചായിരുന്നു. 23 സ്ഥാനങ്ങളുള്ള സംഖ്യകളുടെ നാലുവിധത്തിലുള്ള ഗണിത ക്രിയ
കള്‍ ചെയ്യാന്‍ ഈ യന്ത്രത്തിന്‌ കഴിവുണ്ടായിരുന്നു. ലോഗരിതവും, ത്രികോണമിതി ക്രിയകളും
ചെയ്യാവുന്ന തരത്തില്‍ ഈ യ്യനത്രത്തെ പ്രോഠ്രഗാം ചെയ്തിരുന്നു. മാര്‍ക്ക്‌- I ഉപയോഗിച്ച്‌ രണ്ട്‌
സംഖ്യകള്‍ കൂട്ടാന്‍ ഏകദേശം 3 മുതല്‍ 6 സെക്കണ്ട്‌ വരെ സമയം എടുത്തിരുന്നു. ഇന്‍പുട്ട്‌,
ഓട്ട്പുട്ട്‌ എന്നീ പ്രവര്‍ത്തനങ്ങള്‍ക്കു വേണ്ടി ഈ യന്ത്രം പേപ്പര്‍ടേപ്പ്‌ റീഡര്‍, കാര്‍ഡ്‌ റീഡര്‍,
കാര്‍ഡ്‌ പഞ്ച്‌, ടൈപ്പ്റൈറ്റര്‍ എന്നിവ ഉപയോഗിച്ചു.

ചി(തം 1.12 ഫാവാദ്ഥ്‌ ഐക്കും (1900 - 1973) ഥാരക്ക്‌- I കനറ

ള്‍ക്ക്‌ പരിശോധിക്കാം

1 സുമേറിയന്‍ സംഖ്യാ സ്രമ്പദായത്തിന്റെ മറ്റൊരു പേരാണ്‌ —------

2. ഹിന്ദു-അറബിക്‌ സംഖ്യാ സ്ര്രദായത്തിന്റെ പ്രത്യേകതകള്‍ എന്തെല്ലാം?

3. ബാബിലോണിയന്‍ സം്യാ സ്രമ്പദായത്തില്‍ പൂജ്യം എങ്ങനെയായിരു
ന്നു രേഖപ്പെടുത്തിയിരുന്നത്‌.

4. ആരാണ്‌ ലോകത്തിലെ ആദ്യത്തെ പ്രോഗ്രാമര്‍.

5. ബ്ലെയ്സി പാസ്കല്‍ നിര്‍മ്മിച്ച കമ്പ്യൂട്ടിംഗ്‌ യന്ത്രം —---------- _ എന്ന്‌
അറിയപ്പെട്ടു.

1.2. കസ്യൂട്ടറിന്റെ തലമുറകള്‍ (Generations of computers)

16-00 നൂറ്റാണ്ടില്‍ തുടക്കം കുറിച്ച കമ്പ്യൂട്ടിംഗ്‌ യ്രന്രങ്ങളുടെ ക്രമാനുഗതമായ വികാസമാണ്‌
ഇന്നത്തെ ആധുനിക കമ്പൂട്ടറില്‍ എത്തിനില്‍ക്കുന്നത്‌. ആദ്യത്തെ കമ്പ്യൂട്ടര്‍ മുതല്‍, നിര്‍മ്മിത
ബുദ്ധിയുള്ള കമ്പ്യൂട്ടര്‍ വരെ അഞ്ച്‌ തലമുറയായിട്ടാണ്‌ കമ്പ്യൂട്ടറിന്റെ പരിണാമം എഴുതപ്പെട്ടി
രിക്കുന്നത്‌. ഓരോ തലമുറയും അതിന്റെ അടിസ്ഥാനയ്യരന്തഘടകങ്ങളില്‍ വൃത്യാസപ്പെട്ടിരി
ക്കുന്നു. തലമുറകള്‍ കഴിയുന്തോറും കമ്പ്യൂട്ടര്‍ കൂടുതല്‍ ചെറുതും, വില കുറഞ്ഞതും കൂടുതല്‍
പ്രവര്‍ത്തനക്ഷമതയുള്ളതുമായി എന്നത്‌ കമ്പ്യൂട്ടറിന്റെ പരിണാമത്തിലെ പ്രത്യേകതയാണ്‌.

ന്നൊം വര്‍ഷ കമ്പ്യൂട്ടര്‍ സയന്‍സ്‌ 1. കമ്പ്യൂട്ടിംഗ്‌ വിജ്ഞാനശാഖ

വളര്‍ച്ചയുടെ വിവിധ ഘട്ടങ്ങളെ ആസ്പദമാക്കി കമ്പ്യൂട്ടര്‍ പരിണാമത്തിലെ വിവിധ തലമുറ
കള്‍ ചുവടെ ചേര്‍ക്കുന്നു.

° ഒന്നാം തലമുറ കമ്പ്യൂട്ടറുകള്‍ (1940 - 1956)

e രണ്ടാം തലമുറ കമ്പ്യൂട്ടറുകള്‍ (1956 - 1963)

° മൂന്നാം തലമുറ കമ്പ്യൂട്ടറുകള്‍ (1964 - 1971)

° നാലാം തലമുറ കമ്പ്യൂട്ടറുകള്‍ (1971 - ഇന്ന്‌ വരെ)

° അഞ്ചാം തലമുറ കമ്പ്യൂട്ടറുകള്‍ (നിലവിലുള്ളതും വരാനിരിക്കുന്നതും)

1.2.1. ഒന്നാം തലമറുറ കമ്പ്യൂട്ടറുകള്‍ (1940 - 1956)
(First generation computers 1940 - 1956)

ഒന്നാം തലമുറ കമ്പ്യൂട്ടറുകള്‍ നിര്‍മ്മിച്ചത്‌ വാക്വം ട്യൂബുകള്‍ ഉപയോഗിച്ചായിരുന്നു. ഈ തല
മുറയിലാണ്‌ സ്റ്റോര്‍ഡ്‌ പ്രോ്രഗാം (Stored Program) എന്ന ആശയത്തിനു തുടക്കം കുറിച്ചത്‌.
ഒരു അടച്ച ട്യൂബിലെ ശുനൃതയിലൂടെ വൈദ്യുതിയെ നിയന്ത്രിക്കുന്ന ഉപകരണമാണ്‌ വാക്വം
ട്യൂബ്‌. ഈ സിലിണ്ടറാകൃതിയിലുള്ള ട്യൂബ്‌ സുതാര്യമായ ഗ്ലാസ്സ്‌ കൊണ്ടായിരുന്നു നിര്‍മി
ച്ചിരുന്നത്‌. ഇവിടെ ഇന്‍പുട്ട്‌ നടത്തിയിരുന്നത്‌ പഞ്ച്‌ഡ്‌ കാര്‍ഡും പേപ്പര്‍ടേപ്പും ഉപയോഗിച്ചായിരു
ന്നു. കൂടാതെ ഓട്ട്പുട്ട്‌ പ്രിന്റൌട്ടുകളായും നല്‍കിയിരുന്നു.

ആദ്യത്തെ ഇലക്ട്രോണിക്‌ കമ്പ്യൂട്ടറായ ഇലക്ട്രോണിക്‌ ന്യൂമറിക്കല്‍ ഇന്റഗ്രേറ്റര്‍ ആന്റ്‌
കാല്‍ക്കുലേറ്റര്‍ (ENIAC) ഈ തലമുറയിലാണ്‌ ഉള്‍പ്പെടുന്നത്‌. ENIAC നിര്‍മ്മിച്ചത്‌ ജെ.പ്രസ്പര്‍
ഇക്കേര്‍ട്ടും (J. Presper Eckert) ജോണ്‍ വി. മോഷ്ലി (John ൦ /റദ്ധഠ്വ്)യും ചേര്‍ന്നാണ്‌. ഈ
യ്ര്രത്തിന്‌ 30-50 ഫീറ്റ്‌ ഉയരവും 30 ടണ്‍ ഭാരവും ഉണ്ടായിരുന്നു. 18000 വാക്വം ട്യൂബുകളും,
70000 റജിസ്റ്ററുകളും, 10000 കപ്പാസിറ്ററുകളും ഈ യ്രന്തത്തില്‍ ഉപയോഗിച്ചിരുന്നു. 1,50,000 w
വൈദ്യുതി ഈ യ്രന്രം ഉപയോഗിച്ചിരുന്നു. ആദൃതലമുറ കമ്പ്യൂട്ടറുകള്‍ വളരെ വലുപ്പമുള്ളവ

ചിത്രം 1.13: - ENIAC ഉം 09/0 S/JMIgo

യായിരുന്നു. ഇവ സ്ഥാപിക്കാന്‍ വലിയ മുറികളാവശ്യമായിരുന്നു . ഉയര്‍ന്ന താപം പുറത്തു
വിടുന്നത്‌ കാരണം എയര്‍കണ്ടീഷന്‍ ഇതിന്റെ ശരിയായ പ്രവര്‍ത്തനത്തിന്‌ ആവശ്യമായിരുന്നു.

ENIAC നിര്‍മാണം പൂര്‍ത്തീകരിക്കുന്നതിന്‌ മുമ്പ്‌, വോണ്‍ ന്യൂമാന്‍ (Von Newman) എന്ന ശാസ്ത്ര
ജ്ഞന്‍ ഇലക്ട്രോണിക്‌ ഡിസ്ക്രീറ്റ്‌ വേരിയബിള്‍ ഓട്ടോമാറ്റിക്‌ കമ്പ്യൂട്ടര്‍ (EDVAC) എന്ന
മറ്റൊരു യ്രന്തം നിര്‍മിച്ചു. ഈ യ്രന്രത്തില്‍ ഡാറ്റയും പ്രോഗ്രാമും ശേഖരിച്ചുവയ്ക്കാനുള്ള
മെമ്മറി ഉണ്ടായിരുന്നു. പിന്നീട്‌ 1952 ല്‍ ഇക്കേര്‍ട്ട്‌ (Eckert) ഉം മോഷ്ലി (Mauchly) യും ചേര്‍ന്ന്‌
നിര്‍മിച്ച യൂണിവേഴ്‌സല്‍ ഓട്ടോമാറ്റിക്‌ കമ്പ്യൂട്ടര്‍ (UNIVAC) കമ്പ്യൂട്ടര്‍ ചരിത്രത്തിലെ ഒരു വ്യാവ
സായിക വിജയമായിരുന്നു.
ഒന്നാം വര്‍ഷ കമ്പ്യൂട്ടര്‍ സയന്‍സ്‌ 1. കമ്പ്യൂട്ടിംഗ്‌ വിജ്ഞാനശാഖ

വോണ്‍ന്യദുമാന്റെ രൂപഘടന (Von Neumann architecture)

ജോണ്‍ CAEN MAB എന്ന ഗണിത ശാസ്ര്രജ്ഞനാണ്‌ ഇന്ന്‌ ഉപയോഗത്തിലുള്ള കമ്പ്യൂട്ട
റിന്റെ രൂപഘടന ആദ്യമായി നിര്‍മ്മിച്ചത്‌. ഈ മാതൃക വോണ്‍ന്യൂമാന്റെ രൂപഘടന
(Architechture) എന്ന പേരില്‍ പ്രസിദ്ധമായി. അരിത്തമറ്റിക്‌ ലോജിക്‌ യൂണിറ്റും (ALU) കണ്‍ട്രോള്‍
യൂണിറ്റും (CU) അടങ്ങിയ ഒരു സെന്റ്ര്രല്‍ പ്രോസ്സിംഗ്‌ യൂണിറ്റ്‌ (CPU), ഇന്‍പുട്ട്‌ യൂണിറ്റ്‌, ഓട്ട്പൂട്ട്‌
യൂണിറ്റ്‌, ഡാറ്റയും നിര്‍ദേശവും ശേഖരിക്കുന്നതിനുള്ള സ്റ്റോറേജ്‌ യൂണിറ്റ്‌ എന്നിവ ഉള്‍പ്പെട്ടതാ
ണ്‌ ഈ മാതൃക. ഇതില്‍ “സ്റ്റോര്‍ഡ്‌ പ്രോഗ്ഗാം കണ്‍സപ്റ്റ്‌” ഉപയോഗിച്ചിരുന്നു. അതായത്‌
ഡാറ്റയും പ്രോരഗാമും മെമ്മറിയില്‍ ശേഖരിച്ചശേഷമാണ്‌ പ്രോസസ്സിംഗ്‌ നടന്നിരുന്നത്‌.

സെന്‍ട്രല്‍
പ്രോസസ്സിങ്‌ യൂണിറ്റ്‌

ഒട്ടപൂട്ട്‌

മെമറിയൂണിറ്റ്‌

ചിത്രം 1.14. ജോേങ്വോങ്‌ മുദ്മാനും (7902- 1957) NZAIOM ദുപഘെയും

1943 തീ (ബിദ്ടിഷ്ുകാര കൊളോസസ്ത്സ്‌
(colossus) എന്ന പേരി തി, 2262008 e001
യിലെ സദ്ദേശങ്ങള്‍ി ഡികോഡ്‌ 2.107008
ഒരു രഹസ്യ കോഡ്‌-ദ്രഖക്കിംഗ്‌ MI)
96 നിരീമിച്ചു. ടോമി ഫ്ള്വഴ്സ്‌ (Tomy Flowers) എനാ
എഞ്ചി ന?യരീ വഥക്വാട്യുബ്്‌ ഉപയോഗിച്ചായിരുന്നു ഈ

യ്ര്തം നിരമ്മിച്ചിരുന്നത്‌. കൊള്ളോസസ്ത്റിന്‌ കന്പ്യുട

റിന്റെ വളരിച്ചയിത്മി കാര്യമായി സംഭാവന ചെയ്താന്‍ കഴിയാത്തതിന്‌ രണ്ട്‌ കാരണ
ങ്ങള്‍ ചുണ്ടിക്കാണിക്കച്ചെടുത്തു. ഒന്നാമതായി ഇത്‌ രഹസ്ധ്യസ്സന്ദേശങ്ങള്‍ി ഡികോഡ്‌
ചെയ്യാനി മഠ്രതമാണ്‌ ഉപയോഗിച്ചിരുന്നത്‌. രണ്ടാമതായി 1970 വരെ ഇങ്ങനെ ഒരു യ്രന്ത
മുണ്ടെന്ന വിവരം രഹസ്ധ്യമാക്ക? വച്ചിരുന്നു. അതുകൊണ്ടു OOM കൊളോഗസ്ത്റിന്റെ
പ്രശസ്ത? ലോകം അറിയപ്പെടാതെ പോകുകയും DOMNAB രുപകത്‌ച്ഛനയിതി പങ്കാ
ികളായിരുന്ന വ്യക്തികളുടെ സംഭാവനകള്‍ പരിഗണിക്കച്ഛെടാതിരിക്കുകയും ചെയ്തു.

ഒന്നാം വര്‍ഷ കമ്പ്യൂട്ടര്‍ സയന്‍സ്‌ 1. കമ്പ്യൂട്ടിംഗ്‌ വിജ്ഞാനശാഖ

1.2.2. രണ്ടാംതലമറുറ കമ്പ്യൂട്ടറുകള്‍ (1956-1963)
(Second generation computers (1956-1963)

രണ്ടാംതലമുറ കമ്പ്യൂട്ടറുകളില്‍ വാക്വം ട്യൂബുകള്‍ക്ക്‌ പകരം ദ്രാന്‍സിസ്റ്റര്‍ ഉപയോഗിച്ചു.
1947 ല്‍ ബെല്‍ ലബോറട്ടറിയില്‍ വച്ച്‌ ജോണ്‍ബര്‍ഡീന്‍, വാള്‍ട്ടര്‍ (NMOS, വില്യം ഷോക്ക്ലി
എന്നിവര്‍ ചേര്‍ന്നാണ്‌ ദ്രാന്‍സിസ്റ്റര്‍ നിര്‍മ്മിച്ചത്‌. ദ്രാന്‍സിസ്റ്റര്‍ ഉപയോഗിച്ചതു കാരണം കമ്പ്യൂ
ട്ടറിന്റെ വലുപ്പം, വില, വൈദ്യുതി ഉപയോഗം, താപ്പ്പസരണം എന്നിവ കുറയുകയും പ്രവര്‍ത്ത
നശേഷി, വേഗത എന്നിവ വര്‍ധിക്കുകയും ചെയ്തു.

ചിത്രം 7. 752847 1401 ഉം (ടാര്ദ്രിദ്ററുക്ളും

രണ്ടാംതലമുറയിലാണ്‌ പ്രോഗ്രാമിങ്‌ ഭാഷ എന്ന ആശയം ഉടലെടുത്തത്‌. ഈ തലമുറ പ്രൈമറി
മെമ്മറിയായി മാഗ്നറ്റിക്‌ കോര്‍ മെമ്മറിയും സെക്കണ്ടറി മെമ്മറിയായി മാഗറ്റിക്‌ ഡിസ്ക്‌ മെമ്മ
റിയും യഥാക്രമം ഉപയോഗിച്ചു. ഇതേ കാലയളവില്‍ ഒന്നും പൂജ്യവും ഉപയോഗിക്കുന്ന മെഷീന്‍
ലാംഗ്വേജില്‍ നിന്ന്‌ സൂചകങ്ങള്‍ ഉപയോഗിക്കുന്ന അസംബ്ലി ലാംഗ്വേജിലേക്ക്‌ പ്രോഗ്രാം
നിര്‍മ്മാണം പുരോഗമിച്ചു. ഇംഗ്ലീഷ്‌ ഭാഷയിലെ വാക്കുകള്‍ക്ക്‌ സമാനമായ നിര്‍ദേശങ്ങള്‍ അട
ങ്ങിയ ഹൈലെവല്‍ പ്രോഗ്രാമിങ്‌ ഭാഷകളായ FORTRAN, COBOL തുടങ്ങിയവ ഇക്കാല
ത്താണ്‌ നിലവില്‍ വന്നത്‌. IBM 1401, IBM 1620 ഉം എന്നിവ ഈ തലമുറയിലെ പ്രചാരമുള്ള
കമ്പ്യൂട്ടറുകളായിരുന്നു.

1.2.3. മമൂന്നാംതലമറുറ കമ്പ്യൂട്ടറുകള്‍ (1964-1971)
(Third generation computers (1964-1971)

മൂന്നാംതലമുറ കമ്പ്യൂട്ടറുകള്‍ രൂപത്തില്‍ വളരെ ചെറുതായിരുന്നു. കാരണം അവ ഐ.സി.
ചിപ്പ്‌ (IC ചിപ്പ്‌) എന്ന യ്രന്തഘടകമായിരുന്നു ഉപയോഗിച്ചിരുന്നത്‌. അനേകം ദ്രാന്‍സിസ്റ്ററുകള്‍
ഉള്‍ക്കൊള്ളിച്ചു നിര്‍മിച്ച സിലിക്കണ്‍ ചിപ്പാണ്‌, ഐ.സി. ചിപ്പ്‌. ടെക്സാസ്‌ ഇന്‍സ്ട്രുമന്റ്‌ സ്‌
എന്ന കമ്പനിയിലെ ജാക്‌ കില്‍ബി എന്ന എഞ്ചിനീയറാണ്‌ ഐ.സി. ചിപ്പ്‌ നിര്‍മിച്ചത്‌. ഐ.സി.
ചിപ്പ്‌ കമ്പ്യൂട്ടറിന്റെ വലുപ്പം കുറയ്ക്കുകയും, കമ്പ്യൂട്ടറിന്റെ സ്പീഡും കാര്യക്ഷമതയും വർധി
പ്പിക്കുകയും ചെയ്തു. പിന്നീട്‌ മള്‍ട്ടി ലെയര്‍ പ്രിന്റഡ്‌ സര്‍ക്ക്യൂട്ടുപയോഗിക്കുകയും മാഗറ്റിക്‌
കോര്‍മെമ്മറിക്ക്‌ പകരം കൂടുതല്‍ വേഗതയും സംഭരണ ശേഷിയുമുള്ള സോളിഡ്‌ സ്റ്റേറ്റ്‌ onan
NAB ഉപയോഗിക്കുകയും ചെയ്തു.
(5) ഒന്നാം വര്‍ഷ കമ്പ്യൂട്ടര്‍ സയന്‍സ്‌ 1. കമ്പ്യൂട്ടിംഗ്‌ വിജ്ഞാനശാഖ

ചിത്രം 1.161BM 360 ൧൦ ഉന്റ്ഗ്ുദ്‌ mdajJ$jo
ഈ തലമുറ കമ്പ്യൂട്ടറുകള്‍ കൂടുതല്‍ വേഗതയുള്ളവയും വൈദ്യുത ഉപഭോഗം കുറഞ്ഞവയും
ചെലവ്‌ കുറഞ്ഞവയുമായിരുന്നു. ഇന്റഗ്രേറ്റഡ്‌ സര്‍ക്ക്യൂട്ടുകള്‍, കുറച്ചു കൂടി മെച്ചപ്പെട്ട സെക്ക
BO] സ്റ്റോറേജ്‌ ഉപകരണങ്ങള്‍, കീബോഡ്‌, മോണിറ്റര്‍ തുടങ്ങിയ ഇന്‍പുട്ട്‌, ഓട്ടപുട്ട്‌ ഉപകരണ
ങ്ങള്‍ എന്നിവ ഉപയോഗിക്കപ്പെട്ടു. ഗണിത്രകിയകള്‍ മൈക്രോ സെക്കന്റിലും, നാനോസെ
ക്കന്റിലും പൂര്‍ത്തിയാക്കിയിരുന്നു.

ഈ കമ്പ്യൂട്ടറുകള്‍ ഒരു പ്രോസസ്സറും മെമ്മറിയും ഉപയോഗിച്ച്‌ ഒരേ സമയത്ത്‌ പല പ്രോഗ്രാമു
കള്‍ പ്രവര്‍ത്തിപ്പിച്ചിരുന്നു. പ്രോ്രഗാമിംഗ്‌ ലോകത്തെ എളുപ്പമുള്ള ഭാഷയായ ബേസിക്‌
(BASIC) എന്ന ഹൈലെവല്‍ ലാംഗ്വേജ്‌ ഈ കാലത്താണ്‌ തയ്യാറാക്കിയത്‌. കമ്പ്യൂട്ടറിന്‌ വിലയും
വലുപ്പവും കുറഞ്ഞതോടെ മുന്‍കാലത്തെ അപേക്ഷിച്ച്‌ കൂടുതല്‍ ജനങ്ങള്‍ കമ്പ്യൂട്ടറുകള്‍ ഉപ
യോഗിച്ചു തുടങ്ങി. IBM 360, IBM 370 എന്നിവ ഈ തലമുറയിലെ കമ്പ്യൂട്ടറുകളാണ്‌.

vi“

മൂറിന്റെ നിയമം പറയുന്നത്‌ “ഐ.സി. ഛിച്ഛിലെ (ടാരീന്ധി
THYABJOS എണ്ണം ഓരോ രണ്ട്‌ വര്‍ഷങ്ങളിലും ഇരട്ടിച്ചു
കൊങ്ടിരിക്കും'"” എന്താണ്‌. ഗോശീഡനി ഇ. മുരീ എനാ
ശാസ്രജ്ഞ൯ 1958 മുതതി 1965 വരെയുള്ള മാറ്റങ്ങള്‍ മന
സ്ത്രീലാക്കി 1965 തീ ആണ്‌ ഈ പ്രവചനം നടത്തിയത്‌. പത്തുവര്‍ഷം

കുടി ഈ അവസ്ഥ തുടരുമെന്ന്‌ മുരി (്രവ്വചിച്ചു. കേവലം ഒരു നിരക/
ണമാണെങ്കിലും ഈ നിയമം ഫിന്നിട്‌ 50 കൊല്ലത്തോളം കൃത്യമായ? പാലിക്ക
പ്ലെട്ടു എന്നത്‌ ഒരു അത്ഭുത ഗ്രതിഭാസമായി നിലനിതിക്കുന്നു.

1.2.4. നാലാം തലമുറ കമ്പ്യൂട്ടറുകള്‍ (1971 മുതല്‍ ഇന്നു വരെ)

(Fourth generation computers (1971 onwards)

ഇന്ന്‌ നാം ഉപയോഗിക്കുന്ന കമ്പ്യൂട്ടറുകള്‍ ഈ തലമുറയില്‍പെടന്നു. ഈ AMS Aw
മൈക്രോപ്രോസ്സസര്‍ ഉപയോഗിക്കുന്നതിനാല്‍ ഇവ മൈക്രോ ;
കമ്പ്യൂട്ടര്‍ എന്നറിയപ്പെടുന്നു. മൈക്രോപ്രോസ്സസര്‍ എന്നാല്‍
ലാര്‍ജ്‌ സ്‌കെയില്‍ ഇന്റഗ്രേഷന്‍ (LSI) നടത്തിയിട്ടുള്ള ഒരു സിലി
ക്കണ്‍ ചിപ്പാണ്‌. ഇതില്‍ ആയിരക്കണക്കിന്‌ ്രാന്‍സിസ്റ്ററുകള്‍,
റെസിസ്റ്ററുകള്‍, കപ്പാസിറ്ററുകള്‍ എന്നിവ ഉള്‍ക്കൊള്ളുന്നു.
മൈക്രോപ്രോസസ്സര്‍ നിലവില്‍ വന്നതോടെ കമ്പ്യൂട്ടറിന്റെ CPU
തന്നെ ഒറ്റ സിലിക്കണ്‍ ചിപ്പിലേക്ക്‌ ഉള്‍ക്കൊള്ളിക്കാന്‍ സാധി
ച്ചു. ഇതോടെ ഡാറ്റാപ്രോസ്സറസിംഗ്‌ ശേഷി മുന്‍പത്തേതിനേക്കാള്‍

alo 1.17. VLSI ചിക്‌
ന്നൊം വര്‍ഷ കമ്പ്യൂട്ടര്‍ സയന്‍സ്‌ 1. കമ്പ്യൂട്ടിംഗ്‌ വിജ്ഞാനശാഖ

വര്‍ധിച്ചു. ഇന്റഗ്രേഷന്‍ സെക്യില്‍ വീണ്ടും വര്‍ധിച്ച്‌ VLSI (Very Large Scale Integration) 2Nlay
കള്‍ പുറത്തിറങ്ങി. ഈ തലമുറ കമ്പ്യൂട്ടറുകള്‍ രൂപത്തില്‍ വളരെ ചെറുതും പൊതുവേ വേഗത
ഏറിയവയും ആയിരുന്നു.

പഴയകാലത്ത്‌ ഒരു മുറി നിറഞ്ഞിരുന്ന കമ്പ്യൂട്ടറുകള്‍ ഇപ്പോള്‍ ഒരു കൈവെള്ളയില്‍ ഒതുങ്ങി.
ഇവ കമ്പ്യൂട്ടര്‍ ശൃംഖലയാല്‍ പരസ്പരം ബന്ധിപ്പിക്കപ്പെട്ടു. തുടര്‍ന്ന്‌ ഇന്റര്‍നെറ്റ്‌ പോലുള്ള
വലിയ നെറ്റ്വര്‍ക്കുകള്‍ രൂപപ്പെട്ടു. വില കുറയുകയും ഉപയോക്തൃ സൌഹൃദമാവുകയും ചെയ്ത
തോടെ കൂടുതല്‍ ആളുകള്‍ വ്യക്തിപരമായ ആവശ്യങ്ങള്‍ക്കുവേണ്ടി കമ്പ്യൂട്ടറുകള്‍ വാങ്ങു
വാന്‍ തുടങ്ങി. IBM PC, APPLE Il എന്നിവ ഈ തലമുറയിലെ പ്രധാനപ്പെട്ട കമ്പ്യൂട്ടറുകളാണ്‌.

1.2.5. അഞ്ചാം തലമുറ കമ്പ്യൂട്ടറുകള്‍ (ഭാവി തലമുറ)
(Fifth generation computers (1956-1963)

അഞ്ചാം തലമുറ നിര്‍മ്മിത ബുദ്ധിയെ (Artificial Intelligence) അടിസ്ഥാനമാക്കിയുള്ളതാണ്‌.
നിര്‍മ്മിത ബുദ്ധി എന്നത്‌ മനുഷ്യബുദ്ധി യ്ര്രത്തില്‍ സന്നിവേശിപ്പിക്കുന്ന രീതിയാണ്‌. ഇത്തരം
യ്രന്രങ്ങളുടെ നിര്‍മ്മാണം ഇപ്പോള്‍ പുരോഗമിക്കുകയാണ്‌. സ്പീച്ച്‌ റക്കഗ്നിഷന്‍, ഫേസ്‌ റെക്ക
ഗ്നിഷന്‍, റോബോട്ടിക്‌ വിഷന്‍ തുടങ്ങിയ MOM മേഖലകളിലൂടെ നിര്‍മ്മിത ബുദ്ധി എന്ന ആശയം
വികസിച്ച്‌ കൊണ്ടേയിരിക്കുന്നു.

മനുഷ്യബുദ്ധി ഉപയോഗിച്ച്‌ സങ്കീര്‍ണപ്രശ്നങ്ങള്‍ നിര്‍ധാരണം ചെയ്യുന്ന അതേ രീതിയില്‍ പ്രശ്ന
പരിഹാരത്തിനുതകുന്ന കമ്പ്യൂട്ടര്‍ പ്രോഗ്രാമുകള്‍ (Intelligent System) തയാറാക്കുന്ന കമ്പ്യൂട്ടര്‍
സയന്‍സിലെ ഒരു പഠനശാഖയാണ്‌ നിര്‍മിത ബുദ്ധി. (Atificial Intelligence) ഈ മേഖലയിലെ
പ്രധാന പ്രോഗ്രാമിംഗ്‌ ഭാഷകളായി PROLOG, LISP എന്നിവ ഉപയോഗിക്കുന്നു. അഞ്ചാം തലമുറ
കമ്പ്യൂട്ടറുകള്‍ നമ്മുടെ സാധാരണ ഭാഷകള്‍ കൈകാര്യം ചെയ്യുന്നതിലും മിടുക്ക്‌ കാണിക്കുന്നു.
സ്വയം പഠനവും സ്വയം ക്രമീകരണവും ഈ തലമുറ കമ്പ്യൂട്ടറുകളുടെ പ്രത്യേകതകളാണ്‌.

ആദ്യത്തെ ദ്്രോന്സസ്ത്റായ BOS 4004 നിര്‍മ്മിച്ചത്‌ 1971 ലാണ്‌. ഇന്റ്ത്‌
കോദപ്പറേഷധനി നിര്‍മ്മിച്ച ഈ ചിച്ഛിതി 2300 (SIBAVIGYI}AG ഉചയോ
ഗിച്ചു. ഫില ശ്രഥാന പ്രോസ്പസ്ത്ററുകളും അതിലെ (SIBAVIGVE}ABOS
എണ്ണവും ചുവടെ ചേര്‍ക്കുന്നു.

ഇന്റല്‍ 8086 29,000

മോട്ടറോള 68000 (ആപ്പിള്‍ കമ്പ്യൂട്ടറില്‍ 68,000
ഉപമയാഗിക്കുന്നത്‌.)

ഇന്റല്‍ പെന്റിയം 31,00,000
2,20,00,000

GAB Hag) - 7 73,10,00,000

AA ഒന്നാം വര്‍ഷ കമ്പ്യൂട്ടര്‍ സയന്‍സ്‌ 1. കമ്പ്യൂട്ടിംഗ്‌ വിജ്ഞാനശാഖ

തലമുറ

y : മുന്ന്‌
സാങ്കേതിക ട്രാന്‍സിസ്റ്റര്‍ ഐ.സി മൈക്രോ ആര്‍ട്ടിഫിഷ്യല്‍
വിദ്യ പ്രോസസ്സര്‍ ഉന്റലിജന്‍സ്‌
BICC Glow ഉല്ല ഉണ്ട്‌ ഉണ്ട്‌ ഉണ്ട്‌
സിസം

മെഷീന്‍ അസം്ലി ഹൈലവല്‍ | ഹൈലവല്‍ | ഹൈലവല്‍

1940-1956} 1956-1963 | 1964-1971 | 1971 മുതല്‍ | ഉന്നത്േതേതും
OM വരെ വരാനിരിക്കുന്നതും

പട്ടിക 1.1 അഞ്ചു തലമുറ HMNIJGNZHHNG താരതമ്യം ചെയ്യുന്നു.

നിങ്ങള്‍ക്ക്‌ പരിശോധിക്കാം

1 കൊളോസസ്‌ ആരാണ്‌ നിര്‍മ്മിച്ചത്‌?

2. സ്റ്റോര്‍ഡ്‌ പ്രോ്രഗാം കണ്‍സപ്റ്റ്‌ എന്നാല്‍ എന്ത്‌?
3. മൂറിന്റെ നിയമം എഴുതുക

4. “കമ്പ്യൂട്ടറിന്‌ മെഷീന്‍ ലാംഗ്വേജ്‌ മാത്രമേ തിരിച്ചറിയാന്‍ കഴിയൂ” - ശരി/
തെറ്റ്‌

5. ഒന്നാം തലമുറ കമ്പ്യൂട്ടറുകളിലെ പ്രധാന ഘടകമാണ്‌

1.3. കന്ട്ടിങ്ങിന്റെ പരിണാമം (Evolution of computing)

വിവരങ്ങള്‍ ശേഖരിക്കാനും, പ്രോസസ്സ്‌ ചെയ്യാനും, ഉത്തരം പ്രദര്‍ശിപ്പിക്കാനും കമ്പ്യൂട്ടിങ്‌ യ്രന്്ര
ങ്ങള്‍ ഉപയോഗിച്ചു. ഇതില്‍ പ്രോസസിങ്‌ നടന്നിരുന്നത്‌ യ്രന്രത്തിലേക്ക്‌ നല്‍കുന്ന നിര്‍ദ്ദേശ
ങ്ങള്‍ക്ക്‌ അനുസരിച്ചായിരുന്നു. 1940 കളില്‍ നിര്‍മിച്ച ആദ്യകാല കമ്പ്യൂട്ടര്‍ ഒരു കാല്‍ക്കുലേറ്റ
റിനെപ്പോലെ ഒരു കൂട്ടം പ്രവൃത്തികള്‍ ചെയ്യാന്‍ മാത്രം പര്യാപ്തമായിരുന്നു. ഈ പ്രത്യേക
തരം യ്രന്രങ്ങള്‍ പ്രോഗ്രാം ചെയ്യപ്പെട്ടത്‌ ഒരു നിര മെക്കാനിക്കല്‍ സ്വിച്ചുകളോ ജമ്പര്‍ വയര്‍
പ്ലഗ്‌ വഴിയോ ആയിരുന്നു. (ബാഞ്ചിംഗ്‌ ലൂപ്പിംഗ്‌ വാചകങ്ങളുടെ പ്രയോഗവും സബ്റൂട്ടീന്‍ കാളു
കളും ഈ യ്രന്രങ്ങള്‍ക്ക്‌ അപ്രാപ്യമായിരുന്നു. എന്നാല്‍ പിന്നീട്‌ കമ്പ്യൂട്ടറുകള്‍ ഈ പ്രശ്നം
ജോണ്‍വോണ്‍ ന്യൂമാന്റെ സ്റ്റോര്‍ഡ്‌ പ്രോഗ്രാം കണ്‍സപ്റ്റ്‌ ഉപയോ
ഗിച്ച്‌ തരണം ചെയ്തു. ഈ ആശയ്പ്രകാരം ഡാറ്റയും പ്രോഗ്രാമും
മെമ്മറിയില്‍ ആയിരുന്നു ശേഖരിച്ചിരുന്നത്‌. കമ്പ്യൂട്ടറില്‍ ഇങ്ങനെ ഒരു
കൂട്ടം പ്രവൃത്തികള്‍ ചെയ്യാനുള്ള നിര്‍ദ്ദേശങ്ങളുടെ കൂട്ടത്തെ പ്രോഗ്രാം
എന്ന്‌ വിളിച്ചിരുന്നു.

അഗസ്ത അഡ ലവ്ലേസ്‌

അഗസ്റ്റ അഡ കിംഗ്‌: കൌണ്ടസ്‌ ഓഫ്‌ ലവ്ലേസ്‌ സാധാരണയായി

അറിയപ്പെട്ടിരുന്നത്‌ അഡ ലവ്ലേസ്‌ എന്നായിരുന്നു. അവര്‍ ഒരു

ംഗീഷ്‌ ഗണിത ശാസ്ത്രജ്ഞയായിരുന്നു. ചാള്‍സ്‌ ബാബേജിക ചിത്രം 1.18. Gag) അദ്ധ
ത്ഥ
ചവ/ലേര്ധ്‌ (1815 - 1852)

ഒന്നാം വര്‍ഷ കമ്പ്യൂട്ടര്‍ സയന്‍സ്‌ 1. കമ്പ്യൂട്ടിംഗ്‌ വിജ്ഞാനശാഖ

ആദ്യത്തെ മെക്കാനിക്കല്‍ ജനറല്‍ പര്‍പ്പസ്‌ കമ്പ്യൂട്ടറായ അനലറ്റിക്കല്‍ എഞ്ചിനില്‍ പ്രവര്‍ത്ത
നങ്ങള്‍ തയാറാക്കിയതാണ്‌ അഡ ലവ്ലേസിനെ പ്രശസ്തയാക്കിയത്‌. അവരുടെ ആദ്യകാല
നോട്ടുകള്‍ ആദ്യത്തെ അല്‍ഗോരിതമായി കണക്കാക്കപ്പെട്ടു. അങ്ങനെ അഗസ്റ്റ അഡ ലവ്ലേസ്‌
ലോകത്തിലെ ഒന്നാമത്തെ പ്രോ്ഗാമറായി അറിയപ്പെട്ടു.

1.3.1. പ്രോഗ്രാമിങ്‌ ഭാഷകള്‍ (Proramming language)

പ്രോഗ്രാമിങ്‌ ഭാഷ എന്നാല്‍ കമ്പ്യൂട്ടറിലേക്ക്‌ നിര്‍ദേശങ്ങള്‍ നല്‍കാന്‍ വേണ്ടി തയാറാക്കിയ
ഭാഷയാണ്‌. കമ്പ്യൂട്ടറിനെ നിയ്ന്ത്രിക്കാനുതകുന്നതും അല്‍ഗോരിതത്തെ പ്രതിനിധാനം ചെയ്യു
ന്നതുമായ പ്രോഗ്രാമുകളെ നിര്‍മ്മിക്കാനുപയോഗിക്കുന്ന ഭാഷയാണ്‌ പ്രോഗ്രാമിംഗ്‌ ഭാഷ.

കമ്പ്യൂട്ടറില്‍ ഉപയോഗിച്ച ആദ്യത്തെ പ്രോഗ്രാമിങ്‌ ഭാഷയാണ്‌ മെഷീന്‍ ലാംഗ്വേജ്‌. മെഷീന്‍
ലാംഗ്വേജില്‍ ബൈനറി അക്കങ്ങളായ പൂജ്യവും ഒന്നും ചേര്‍ന്നുണ്ടാവുന്ന കൂട്ടങ്ങളാണ്‌ ഉപ
യോഗിക്കുന്നത്‌. ഈ ഭാഷയുടെ കണ്ടുപിടിത്തം പ്രോഗ്രാമിങ്ങിന്റെ വേഗതയും കാര്യക്ഷമതയും
വര്‍ധിപ്പിച്ചു. എന്നാല്‍ മെഷീന്‍ ലാംഗ്വേജ്‌ പ്രോഗ്രാമിങ്ങിന്‌ പല പരിമിതികളുമുണ്ടായിരുന്നു.
ഇതില്‍ തെറ്റുകള്‍ കണ്ടുപിടിക്കാനും അവ തിരുത്താനും പ്രയാസമായിരുന്നു. ഒറ്റവായനയില്‍
അര്‍ഥം ഗ്രഹിക്കാന്‍ കഴിയാത്ത തരത്തില്‍ വിപുലമായിരുന്നു മെഷീന്‍ ലാംഗ്വേജ്‌ പ്രോഗ്രാം.
മെഷീനുമായി അടുത്ത ബന്ധം പുലര്‍ത്തുന്നതിനാല്‍ കമ്പ്യൂട്ടറിന്റെ ഘടന നന്നായി അറിഞ്ഞാല്‍
മാത്രമേ ഈ ഭാഷയില്‍ പ്രോ്രഗാമിങ്‌ സാധ്യമായിരുന്നുള്ളു.

പ്രോഗ്രാമിങ്‌ കുറച്ചുകൂടി എളുപ്പമാക്കാന്‍ ഒന്നിനും പൂജ്യത്തിനും പകരം കൃത്യമായ അര്‍ഥം
നിര്‍വചിച്ചിട്ടുള്ള ചെറിയ ഇംഗ്ലീഷ്‌ കോഡുകള്‍ ഉപയോഗിച്ചിരുന്ന അസംബ്ലി ലാംഗ്വേജാണ്‌ പിന്നീട്‌
നിര്‍മ്മിക്കപ്പെട്ടത്‌. 1949ല്‍ നിര്‍മ്മിച്ച ഇലക്ട്രോണിക്‌ ഡിലെ സ്റ്റോറേജ്‌ ഓട്ടോമാറ്റിക്‌ കാക്കു
ലേറ്റര്‍ (EDSAC) എന്ന കമ്പ്യൂട്ടറില്‍ ആദ്യമായി അസംബ്ലി ലാംഗ്വേജ്‌ പ്രോരഗാമുകള്‍ ഉപയോ
ഗിച്ചു. പ്രോരഗാം എഴുത്ത്‌ എളുപ്പമാക്കിയെങ്കിലും, ഈ ഭാഷയുടെ അമിതമായ ഹാര്‍ഡ്വെയര്‍
ബന്ധം മൂലം കമ്പ്യൂട്ടര്‍ മാറുമ്പോള്‍ വീണ്ടുംവീണ്ടും പ്രോഗ്രാമുകള്‍ മാറ്റേണ്ട സ്ഥിതിവിശേഷം
സംജാതമായി. ഈ ഭാഷയില്‍ എഴുതിയ പ്രോഗ്രാമുകള്‍ ഒരു കമ്പ്യൂട്ടറില്‍ നിന്ന്‌ മറ്റൊരു കമ്പ്യൂ
ട്ടറിലേക്ക്‌ മാറ്റുവാന്‍ സാധ്യമായിരുന്നില്ല.

ഈ പ്രശ്നം പ്രോഗ്രാമിങ്‌ ഭാഷകളുടെ ലോകത്തിലെ പുതിയ ഭാഷ
യായ ഹൈലെവല്‍ ലാംഗ്വേജിന്റെ കണ്ടുപിടിത്തത്തിന്‌ വഴി തെളിച്ചു.
ഹൈലെവല്‍ ലാംഗ്വേജില്‍ ഇംഗ്ലീഷിലേതുപോലുള്ള വാക്കുകള്‍ ഉപ
യോഗിക്കുകയും, അമിത മെഷീന്‍ ബന്ധമില്ലാത്ത പ്രോഗ്രാമുകള്‍
തയാറാക്കുകയും ചെയ്തു. ഹൈലെവല്‍ ലാംഗ്വേജ്‌ പഠിക്കാനും ഉപ
യോഗിക്കാനും എളുപ്പമാണ്‌. കമ്പ്യൂട്ടര്‍ ഹാര്‍ഡ്വെയര്‍ പരിചയമില്ലാ
ത്തവര്‍ക്കും ഈ ഭാഷയില്‍ പ്രോഗ്രാമുകള്‍ തയാറാക്കാം. റിയര്‍ അഡ്മി

റല്‍ ഡോ. ഗ്രേസ്ഹോപ്പര്‍ 195208 തയാറാക്കിയ ൧.0 പ്രോഗ്രാമിങ്‌ ഭാഷ
UNIVAC കമ്പ്യൂട്ടറിന്‌ വേണ്ടി തയാറാക്കിയ ആദ്യത്തെ ഹൈലെവല്‍ ചിത്രം 1.19 ലോ. മ്മ്‌
ലാംഗ്വേജ്‌ ആണ്‌. IBM 370 യ്ക്ക്‌ വേണ്ടി ജോണ്‍ വോക്കസ്‌ തയാറാ ഫോഷര്‍ (1906 - 1992)
ക്കിയ FORTRAN ഉം, ടീം ഹാര്‍ട്ടും മൈക്ക്‌ ലെവിനും /711യില്‍ തയ്യാ

റാക്കിയ LISP എന്ന ഭാഷയും ഹൈലെവല്‍ ലാംഗ്വേജുകള്‍ക്ക്‌ ചില ഉദാഹരണങ്ങളാണ്‌.

(5) ഒന്നാം വര്‍ഷ കമ്പ്യൂട്ടര്‍ സയന്‍സ്‌ 1. കമ്പ്യൂട്ടിംഗ്‌ വിജ്ഞാനശാഖ

1.3.2. അല്‍ഗോരിതവും കമ്പ്യൂട്ടര്‍ പ്രോഗ്രാമും
(Algorithm and computer programs)

പ്രശ്നം നിര്‍ധാരണം ചെയ്യാന്‍ അറിയാമെങ്കില്‍ മാത്രമേ ഒരു പ്രോഗ്രാമര്‍ക്ക്‌ ശരിയായ പ്രോഗ്രാം
എഴുതാന്‍ കഴിയു. അതുകൊണ്ട്‌ പ്രോഗ്രാം എഴുതുന്നതിനു മുമ്പ്‌ തന്നെ പ്രശ്നം നിര്‍ധാരണം
ചെയ്യാനുള്ള പ്രവര്‍ത്തനങ്ങള്‍ ക്രമീകരിക്കണം. ഇങ്ങനെ പ്രോഗ്രാം പദ്ധതികള്‍ ക്രമമായി എഴു
തുന്നതാണ്‌ അല്‍ഗോരിതം. മറ്റൊരു രീതിയില്‍ പറഞ്ഞാല്‍ ഒരു പ്രശ്നത്തിന്റെ (HAIG Cleo
പ്പെട്ട പരിഹാര മാര്‍ഗമാണ്‌ അല്‍ഗോരിതം. അല്‍ഗോരിതത്തിലെ പ്രസ്താവനകളാണ്‌ പിന്നീട്‌
ഒരു പ്രോ്രഗാമിങ്‌ ഭാഷയിലെ നിര്‍ദേശങ്ങളായി മാറ്റപ്പെടുന്നത്‌.

1.3.3. കമ്പ്യൂട്ടിങ്ങിന്റെ സിദ്ധാന്തം (Theory of computing)

വിവിധ കമ്പ്യൂട്ടേഷന്‍ മാതൃകകളും അനുബന്ധ അല്‍ഗോരിതങ്ങളും ഉപയോഗിച്ച്‌ ഒരു പ്രശ്നം
എങ്ങനെ പരിഹരിക്കപ്പെടുന്നു എന്ന വിഷയം കൈകാര്യം ചെയ്യുന്ന പഠനശാഖയാണ്‌ കമ്പ്യൂ
ട്ടിങ്ങിന്റെ സിദ്ധാന്തം. കമ്പ്യൂട്ടേഷനെക്കുറിച്ച്‌ ആധികാരികമായി പഠിക്കാന്‍ കമ്പ്യൂട്ടര്‍ ശാസ്ര്ത
ജ്ഞര്‍ ഇതിന്റെ ഗണിതപരമായ മോഡലുകള്‍ തയാറാക്കിയിരുന്നു. പല മോഡലുകള്‍ ഉപയോ
ഗത്തിലുണ്ടെങ്കിലും അലന്‍ ട്യൂറിങിന്റെ കണ്ടുപിടിത്തമായ ട്യൂറിങ്‌ മെഷീന്‍ എന്ന മോഡലാണ്‌
ഈ മേഖലയില്‍ പൊതുവെ പരീക്ഷിക്കപ്പെട്ടത്‌.

ഒ. അലന്‍ ട്യദൂറിങ്ങിന്റെ സംഭാവന

അലന്‍ എം ട്യൂറിങ്‌ എന്ന ബ്രിട്ടീഷ്‌ ഗണിതശാസ്ര്രജ്ഞന്‍ (1912-1954)
കമ്പ്യൂട്ടര്‍ സയന്‍സിന്റെ വളര്‍ച്ചയ്ക്ക്‌ വേണ്ടി അനേകം സംഭാവനകള്‍
നല്‍കിയിട്ടുണ്ട്‌. അദ്ദേഹം ഒരു തര്‍ക്കശാസ്ര്ര പണ്ഡിതനും ക്രിപ്റ്റോ
ഗ്രാഫറും കമ്പ്യൂട്ടര്‍ ശാസ്ത്രജ്ഞനുമായിരുന്നു. അല്‍ഗോരിതത്തിന്റെയും
കമ്പ്യൂട്ടേഷന്റെയും നൂതന രീതികള്‍ അദ്ദേഹം തന്റെ കണ്ടുപിടിത്ത
മായ ട്യൂറിങ്‌ മെഷീനിലൂടെ നിര്‍വഹിച്ചു. ട്യൂറിംഗ്‌ മെഷീന്‍ ഒരു കമ്പ്യൂ
ട്ടറിന്റെ സൈദ്ധാന്തിക മോഡലായിട്ടാണ്‌ കരുതപ്പെടുന്നത്‌. 1950 തില്‍

അലന്‍ ട്യൂറിങ്‌ മുമ്പോട്ടു വച്ച ചോദ്യം ” യ്ര്രങ്ങള്‍ക്ക്‌ ചിന്തിക്കുവാന്‍

3 ച ചിത്രം 1.20: അച 5/300”
കഴിയുമോ?” എന്നതായിരുന്നു. പിന്നീട്‌ നടന്ന പ്രവര്‍ത്തനങ്ങള്‍ കമ്പ്യൂ (1912- 1954)
ട്ടിങ്‌ മെഷീന്‍ ഇന്റലിജന്‍സിന്റെ പഠനത്തിന്‌ കൃത്യമായ അടിത്തറ
നല്‍കി. ഒരു ചെറിയ നിരീക്ഷണത്തിലൂടെ യന്ത്രത്തിന്റെ ബുദ്ധി (Machine Intelligence) അള
ക്കാന്‍ ടൂറിങ്‌ ശ്രമം നടത്തി. പില്‍ക്കാലത്ത്‌ ഈ ടെസ്റ്റ്‌ ട്യൂറിങ്‌ ടെസ്റ്റ്‌ എന്നറിയപ്പെട്ടു. അങ്ങനെ
അലന്‍ ട്യൂറിങ്‌ പിന്നീട്‌ കമ്പ്യൂട്ടര്‍ സയന്‍സിന്റെയും നിര്‍മ്മിത ബുദ്ധിയുടെയും (Artifical Intelli-

gence) പിതാവായി അറിയപ്പെട്ടു.

1. ട്യൂറിങ്യന്ത്രം (Turing Machine)
1936 ല്‍ അലന്‍ ട്യൂറിങ്‌ സംഭാവന ചെയ്ത
കമ്പ്യൂട്ടര്‍ മോഡലാണ്‌ ട്യൂറിങ്‌ WAH. ഇത്‌

കമ്പ്യൂട്ടറിന്റെ ഉത്തമ മാതൃകയാണ്‌. ഏതൊരു
കമ്പ്യൂട്ടേഷന്‍ പ്രവര്‍ത്തനവും കുറേ സ്റ്റെപ്പുക

ളിലൂടെ നടപ്പാക്കാമെന്നും, ഓരോ സ്റ്റെപ്പിനും
ചി(തം 1.21. 5/3010" 200൭.

ഒന്നാം വര്‍ഷ കമ്പ്യൂട്ടര്‍ സയന്‍സ്‌ 1. കമ്പ്യൂട്ടിംഗ്‌ വിജ്ഞാനശാഖ

ഇടയില്‍ കിട്ടുന്ന ഡാറ്റയെ ശേഖരിച്ച്‌ അത്‌ വീണ്ടും യ്രന്രത്തിലേക്ക്‌ നല്‍കി, യ്രന്തത്തിനെ
പുതിയ അവസ്ഥയിലേക്ക്‌ എത്തിക്കാമെന്നും, ഈ പ്രവര്‍ത്തനം ആവര്‍ത്തിച്ച്‌ അവസാന ഫല
ത്തിലേക്ക്‌ എത്താമെന്നും അലന്‍ ട്യൂറിങ്‌ ചിന്തിച്ചു. യഥാര്‍ഥത്തില്‍ അന്നത്തെ ട്യൂറിങ്‌ യന്ത്ര
ത്തിന്‌ തുടര്‍ച്ചയായ നിര്‍ദേശങ്ങള്‍ക്കനുസരിച്ച്‌ പേപ്പര്‍ ടേപ്പിനു മുകളില്‍ ചിഹ്നങ്ങള്‍ ആലേ
ഖനം ചെയ്യാനുള്ള കഴിവാണുണ്ടായിരുന്നത്‌.

ഈ ട്യൂറിങ്‌ യ്രന്രത്തില്‍ അനന്തമായി നീളുന്ന ഒരു പേപ്പര്‍ ടേപ്പ്‌ ഉണ്ട്‌. ഇത്‌ യഥാര്‍ഥത്തില്‍
കമ്പ്യൂട്ടര്‍ മെമ്മറിയെ പോലെ പ്രവര്‍ത്തിക്കുന്നു. ടേപ്പിലെ സെല്ലുകള്‍ തുടക്കത്തില്‍ ശുന്യമാ
യിരിക്കും. പിന്നീട്‌ ഇതിനുമുകളില്‍ നിര്‍ദേശമനുസരിച്ച്‌ ഒന്നും പുജ്യവും ആലേഖനം ചെയ്യു
പ്പെടും. അങ്ങിനെ 0,1, ശൂന്യം (blank) എന്നീ മൂന്ന്‌ ചിഹ്നങ്ങള്‍ രേഖപ്പെടുത്തുന്നതിനാല്‍ ഈ
ട്യൂറിങ്‌ യ്രന്തം 3-സിമ്പല്‍ ട്യൂറിങ്‌ യ്രന്തം എന്നറിയപ്പെട്ടു. (ചിത്രം 1.22 നോക്കുക). ഓരോ
സ്റ്റെപ്പിലും ഹെഡിനടിയിലെ സെല്ലിനകത്തുള്ള ചിഹ്നം റീഡ്‌ ചെയ്യാനും, ചിഹ്നത്തില്‍ മാറ്റം
വരുത്തി ടാപ്പിനെ ഇടത്തോട്ടോ വലത്തോട്ടോ ഒരു സെല്‍ നീക്കാനും ഈ യന്ത്രത്തിന്‌ കഴിവു
ണ്ട്‌. അതുകൊണ്ട്‌ ഈ യന്ത്രത്തിന്‌ സമീപ സംഖ്യയെ (neighbouring number) വായിക്കാനും
തിരുത്താനും കഴിയും.

ചിത്രം 1.22: ഷിനു ഥുക്ളിലുടെയുള്ള ഫെഗിന്റെ നീക്കം

ഓരോ ഘട്ടത്തിലും ഹെഡ്‌ എന്ത്‌ ചെയ്യണം എന്നതിനുള്ള നിയമത്തിനനുസരിച്ചാണ്‌ ട്യൂറിങ്‌
യ്രന്തത്തിന്റെ പ്രവര്‍ത്തനം നിര്‍വചിക്കപ്പെട്ടിരിക്കുന്നത്‌. ട്യൂറിങ്‌ യ്രന്രത്തിന്റെ പ്രവര്‍ത്തനങ്ങള്‍
നിയന്ത്രിക്കുന്നതിനുള്ള ഘടകങ്ങള്‍ ഇവയാണ്‌.

a. യ്യ്്രത്തിന്റെ ഇപ്പോഴത്തെ അവസ്ഥ.
0. യ്യ്ത്രം ഇപ്പോള്‍ റീഡ്‌ ചെയ്യുന്ന ചിഹ്നം
൦. യന്ത്രത്തിന്റെ അവസ്ഥാന്തര നിയമങ്ങള്‍ (ഇത്‌ യന്ത്രത്തിന്റെ പ്രോ്രഗാമാണ്‌.)

ആധുനിക രീതിയില്‍ പറഞ്ഞാല്‍, ട്യൂറിങ്‌ യ്രന്രത്തിന്റെ ടേപ്പ്‌ മെമ്മറി ആയും റീഡ്‌ /റൈറ്റ്‌
ഹെഡ്‌ ഈ മെമ്മറിയില്‍ ഡാറ്റാ എഴുതുന്ന മെമ്മറി ബസ്‌ ആയും പ്രവര്‍ത്തിക്കുന്നു. ടേപ്പിനു
മുകളില്‍ ആദ്യഘട്ടത്തില്‍ എഴുതിയിരിക്കുന്ന ചിഹ്നങ്ങള്‍ നമുക്ക്‌ ഇന്‍പുട്ടായി പരിഗണിക്കാം.
ട്യൂറിങ്‌ യ്രന്രത്തിന്റെ ഘട്ടങ്ങള്‍ നമുക്ക്‌ കമ്പ്യൂട്ടറിന്റെ പ്രവര്‍ത്തനമായി കാണാം. നല്‍കുന്ന
ഇന്‍പുട്ടിനനുസരിച്ച്‌ കമ്പ്യൂട്ടര്‍ ഏത്‌ രീതിയില്‍ പ്രവര്‍ത്തിക്കുമെന്ന്‌, നല്‍കിയിരിക്കുന്ന നിയമം
പ്രസ്താവിക്കുന്നു. ഇങ്ങനെ പലരീതിയിലും പ്രവര്‍ത്തനത്തില്‍ ആധുനിക കമ്പ്യൂട്ടറുമായി സാമ്ൃ
മുണ്ടെങ്കിലും ട്യൂറിങ്‌ WA പലകാര്യത്തിലും കമ്പ്യൂട്ടറില്‍ നിന്ന്‌ വ്യത്യസ്തമാണ്‌.
ഒന്നാം വര്‍ഷ കമ്പ്യൂട്ടര്‍ സയന്‍സ്‌ 1. കമ്പ്യൂട്ടിംഗ്‌ വിജ്ഞാനശാഖ

ട്യൂറിംഗ്‌ പരീക്ഷണം

“കന്്യുട്ടിംഗ്‌ യ്ൃന്തവും ബുദ്ധിശക്തിയും' എന ഗവേഷണ പ്രഖെ

ന്ഥത്തിതീ അലചന്ി ദ്യുറിംഗ്‌ ഒരു പരികഃ/ണം വിവരിക്കുന്തുണ്ട്‌ ഇത്‌

ട്യൂറിംഗ്‌ ടെന്റ്‌ എന്നറിയല്ലെടുന്നു.
(ഈ പരിക്ഷണത്തിതി ഒരു മനുഷ്യനായ ചോദ്യകരിത്താവും, മത്വരാര്‍ഥികളായ?
ഒരു കമ്പ്യുട്ടറും മറ്റൊരു മനുഷ്യനും ആയിരിക്കും ഉണ്ടാകുക. രണ്ട്‌ മത്സ
രാരീഥികളും ചേദ്യകരിത്താവും വ്യത്യസ്ത മുറികളിതി പരസ്ചരം കാണാനാ
വ്ഥത്തവിഗം ആയിതിക്കുമിരിക്കുന്നത്‌. ചോദ്യകര്‍ത്താവ്‌ ഒരേ ചോദ്യം ഒരേ
സ്മയം രണ്ട്‌ മത്വരാര്‍ഥികശിക്കും നത്കുന്തു. ഉത്തരം NOHJMOND അനുവ
ദിക്കപ്ലെട്‌ സമയത്തിന്‌ ശേഷം മത്സരാര്‍ഥികളിതീ ഏതാണ്‌ കന്മ്യുട്ടരീ എന്നും
ഏതാണ്‌ മനുഷ്യന്‌ എന്തും ചോദ്യകര്‍ത്താവിന്‌ തിരിച്ചറിയാന്‍ കഴിഞ്ഞിള്ലെ!
8108 മത്സരാര്‍ഥിയായ കമ്ധ്യൂട്ടര്‍ ഒ്യുറിംഗ്‌ ടെസ്ത്റിതി വിജയച്ച'തായി കണക്കാ
ക്കുന്നു. ഈ കമ്ധ്യൂട്ടറിനെ ബുദ്ധിയുള്ള കന്്യൂട്ടറായി തിരഞ്ഞെടുക്കുന്നു. രണ്ടാ
യിരമാണ്ടിതി യ്രന്തങ്ങശി ഈ പരിക്ഷണത്തിതി വിജയിക്കും എന്ന്‌ ദ്യുറിംഗ്‌
പ്രവചിച്ചു. മനുഷ്യസ്വഭാവ സാദൃശ്യങ്ങശി പരികഷിക്കുന്നതിന്‌ പല പ്രോഴഗ്രാമു
കള്‍ തയാറാക്കി പല ടെസ്ത്റുകശി നടത്തിയെങ്കിലും ഇതുവരെ ഒരു WLAMALo
പുര്‍ണമായും ട്യൂറിംഗ്‌ ടെസ്ത്റ്‌ വിജയിച്ചിടില്ല.

നമുക്ക്‌ സംഗഗ്രഹിക്കാഥം

ഈ അധ്യായത്തില്‍ വിവിധ സംഖ്യാസ്രമ്പദായങ്ങളുടെയും എണ്ണലിന്റെയും ആവിര്‍ഭാവവും
പരിണാമവും നമ്മള്‍ മനസ്സിലാക്കി. പല കമ്പ്യൂട്ടിംഗ്‌ യ്രന്തങ്ങളുടെ പ്രവര്‍ത്തനങ്ങളും
നമ്മള്‍ പരിചയപ്പെട്ടു. ആധുനിക കമ്പ്യൂട്ടറിന്റെ ഘടന മനസ്സിലാക്കി. കമ്പ്യൂട്ടിംഗിന്റെ പരി
ണാമത്തെക്കുറിച്ച്‌ ചര്‍ച്ച ചെയ്തു. വിവിധ പ്രോ്രഗാമിങ്‌ ഭാഷകളെ കുറിച്ചും കമ്പ്യൂട്ടറിന്റെ
തലമുറകളെക്കുറിച്ചും, അല്‍ഗോരിതങ്ങളെക്കുറിച്ചും നമ്മള്‍ വിശദമായി മനസ്സിലാക്കി. അവ
സാനമായി നമ്മള്‍ കമ്പ്യൂട്ടേഷന്റെ സിദ്ധാന്തത്തെക്കുറിച്ചും അലന്‍ ട്യൂറിംഗിന്റെ സംഭാവ
നകമളെക്കുറിച്ചും ട്യൂറിംഗ്‌ യ്രന്തത്തെക്കുറിച്ചും ഉള്ള അറിവുകള്‍ നേടി.

ഒന്നാം വര്‍ഷ കമ്പ്യൂട്ടര്‍ സയന്‍സ്‌ 1. കമ്പ്യൂട്ടിംഗ്‌ വിജ്ഞാനശാഖ

 മാതുകചോദ്യങ്ങള്‍ ॥॥]!॥॥॥॥॥॥॥॥॥॥॥॥॥॥॥
_ അത

ഈ അധ്യായം പഠിച്ച്‌ തീര്‍ത്തതിന്‌ ശേഷം പഠിതാവ്‌ ആര്‍ജിക്കേണ്ട ശേഷികള്‍

© കമ്പ്യൂട്ടിങ്ങിന്റെ ചരിത്രത്തിലെ നാഴികകല്ലുകളുടെ അടിസ്ഥാന വിവരങ്ങള്‍ വര്‍ഗീകരി
ക്കുക.

൭ ആധുനിക കമ്പ്യൂട്ടിങ്‌ യ്രന്രത്തിന്റെ ഘടന മനസ്സിലാക്കുക.

൭ ഇന്നത്തെ ലോകത്തില്‍ ജോണ്‍വോണ്‍ ന്യൂമാന്റെ രൂപകല്‍പ്പനയുടെ സ്വാധീനം തിരി
ച്ചറിയുക.

൭ AMSG സയന്‍സിലെ മഹാരഥന്മാരെ തിരിച്ചറിയുക.
൭ ഓരോ തലമുറ കമ്പ്യൂട്ടറിന്റെയും സ്വഭാവ സവിശേഷതകള്‍ ലിസ്റ്റ്‌ ചെയ്യുക.
© ട്യൂറിങ്‌ യ്രന്രമെന്ന ആശയവും അലന്‍ ട്യൂറിംഗിന്റെ സംഭാവനകളും വിവരിക്കുക.
ഹ്രസ്വോത്തര ചോദ്യങ്ങള്‍
1 മായന്‍ സാഖ്യാന സ്രമ്പദായത്തിന്റെ ബേസ്‌ എന്ത്‌?
2. ഗ്രീക്ക്‌ സംഖ്യാന സ്ര്പദായം ............ എന്നറിയപ്പെടുന്ന.
3. അടിസ്ഥാന ഗണിത ക്രിയകള്‍ ചെയ്യാനുപയോഗിച്ച ആദ്യത്തെ കമ്പ്യൂട്ടറേത്‌?
4. ലോഗരിതം ആരാണ്‌ കണ്ടുപിടിച്ചത്‌?
5. ബ്ലെയ്സി പാസ്‌കല്‍ നിര്‍മ്മിച്ച യ്രന്രത്തിന്റെ പേര്‌?
6. ലോകത്തിലെ ആദ്യത്തെ പ്രോരഗാമര്‍ ആര്‍?
7. കമ്പ്യൂട്ടിങ്‌ യ്രന്രങ്ങള്‍ക്ക്‌ തിരിച്ചറിയാന്‍ കഴിയുന്ന ഭാഷയാണ്‌...........
8. EDVAC ന്റെ പൂര്‍ണ രൂപം എഴുതുക.
9. ഒരു സാധാരണ കമ്പ്യൂട്ടിങ്‌ യ്രന്രത്തിന്റെ പേരെഴുതുക.
ലഘു ഉപന്യാസ ചോദ്യങ്ങള്‍

1. ഈജിപ്തുകാരുടെ കാഘഘട്ടം മുതല്‍ ചൈനീസുകാരുടെ കാലഘട്ടം വരെയുള്ള സംഖ്യാന
സ്ര്രദായങ്ങള്‍ വിവരിക്കുക.

2. ഹിന്ദു-അറബിക്‌ സംഖ്യാന സ്രമ്രദായം ലോകത്തിന്‌ നല്‍കിയ സംഭാവനയെന്ത്‌?
3. മായന്‍ സംഖ്യാന സ്രമ്പദായവും റോമന്‍ സംഖ്യാന സ്രമ്പദായവും താരതമ്യം ചെയ്യുക.
4. അബാക്കസ്സിന്റെ പ്രത്യേകതകള്‍ വിവരിക്കുക.

5. ചാള്‍സ്‌ ബാബേജിന്റെ അനലറ്റിക്കല്‍ എഞ്ചിനും ഡിഫറന്‍സ്‌ എഞ്ചിനും താരതമ്യം ചെയ്യുക
ഒന്നാം വര്‍ഷ കമ്പ്യൂട്ടര്‍ സയന്‍സ്‌ 1. കമ്പ്യൂട്ടിംഗ്‌ വിജ്ഞാനശാഖ

6. ഹോളറീത്ത്‌ യ്രന്ത്തിന്റെ പ്രാധാന്യം വൃക്തമാക്കുക.

7. രണ്ടാം ലോകമഹായുദ്ധകാലത്ത്‌ നടന്ന കമ്പ്യൂട്ടിങ്‌ യ്രന്തത്തിന്റെ വളര്‍ച്ച എന്ത്‌?

8. മൂറിന്റെ നിയമം എന്താണ്‌? ഇതിന്റെ പ്രാധാന്യം വിവരിക്കുക.

9. കമ്പ്യൂട്ടര്‍ ഭാഷകളുടെ പരിണാമം വിവരിക്കുക.

10. ട്യൂറിങ്‌ യന്ത്രത്തിന്റെ പ്രവര്‍ത്തനം വിവരിക്കുക.

ഉപന്യാസ ചോദ്യങ്ങള്‍

1 കമ്പ്യൂട്ടറിന്റെ വിവിധ തലമുറകള്‍ ലിസ്റ്റ്‌ ചെയ്ത്‌ വിവരിക്കുക.

2. സംഖ്യാന സ്രമ്പദായത്തിന്റെ പരിണാമത്തെക്കുറിച്ച്‌ ഒരു സെമിനാര്‍ റിപ്പോര്‍ട്ട്‌ തയാറാക്കുക.

3. 1900 വരെ പുറത്തിറങ്ങിയ വിവിധ കമ്പ്യൂട്ടിങ്‌ യ്ര്രങ്ങളെക്കുറിച്ച്‌ വിവരിക്കുക.
സംഖ്യാ സന്പ്രദായം

© ദശസംഖ്യ (Decimal Number),
ല്യയസംഖ്യ (Binary Number),
അഷ്ടസംഖ്യ (Octal Number),
ഷോഡരസാംഖ്യ (Hexadecimal
Number) ഹെക്‌സാഡെസിമല്‍ mony
(Hexadecimal Number)

സംഖ്യാ പരിവര്‍ത്തനങ്ങള്‍

ഡാറ്റ പ്രതിനിധീകരണം

© പൂര്‍ണസംഖ്യകളുടെയും ഫ്‌ളോട്ടിങ്‌
പോയിന്റ്‌ സംഖ്യകളുടെയും പ്രതിനി
ധാനം

ഠ അക്ഷരങ്ങളുടെ പ്രതിനിധാനം
ആസ്കി, എബ്സിഡിക്‌ ഉസ്കി,
യൂണികോഡ്‌

ഠ ശബ്ദം, ചിത്രം, വീഡിയോ ഡാറ്റ
പ്രതിനിധാനം

ബൈനറി ഗണിതം

ഠ സങ്കലനം, വ്യവകലനം, പുരകങ്ങള്‍
ബുളിയന്‍ ബീജഗണിതം ഒരു ആമുഖം

ഠ ലോജിക്‌ ഓകറേറററുകളും ഗേറ്റുകളും
ബൂളിയന്‍ അടിസ്ഥാന അംഗീകൃത തര്യം
ലളിതമായ ബൂളിയന്‍ പദപ്രയോഗങ്ങളും
സര്‍കുൂട്ടുകളുടെ രൂപകല്‍ഷനയും
യൂനിവേഴ്‌സല്‍ ഗേറ്റുകള്‍

വൃതൃസ്തതരം ഡാറ്റകള്‍ കൈകാര്യം ചെയ്യാന്‍
ശേഷിയുള്ള ഒരു ഉപകരണമാണ്‌ കമ്പ്യൂട്ടര്‍. ഡാറ്റ
പ്രോസസ്സിംഗ്‌ നടത്തുന്നതിന്‌ വേണ്ടി സംഖ്യകള്‍,
അക്ഷരങ്ങള്‍, ചിധതങ്ങള്‍, വീഡിയോകള്‍, ശബ്ദങ്ങള്‍
തുടങ്ങിയ ഡാറ്റരൂപങ്ങള്‍ നമ്മള്‍ കമ്പ്യൂട്ടറിലേക്ക്‌
നല്‍കാറുണ്ട്‌. വൈദ്യുതിയുടെ രണ്ട്‌ അവസ്ഥകളായ
ഓണ്‍ (04), ഓഫ്‌ (OFF) എന്നിവയെ അടിസ്ഥാന
മാക്കി പ്രവര്‍ത്തിക്കുന്ന ഒരു ഇലക്ര്യോണിക്‌ ഉപകര
ണമാണ്‌ കമ്പ്യൂട്ടര്‍ എന്നത്‌ നമുക്ക്‌ അറിയാം. അതു
പോലെ എല്ലാ ഇലക്ര്രോണിക്‌ സര്‍ക്യൂട്ടുകള്‍ക്കും
തുറന്നിരിക്കുന്നതും അടഞ്ഞിരിക്കുന്നതും ആയ
രണ്ടവസ്ഥകളാണുള്ളത്‌. തുറന്നിരിക്കുന്ന അവസ്ഥയെ
സൂചിപ്പിക്കാനായി ഓഫ്‌ (OFF) അല്ലെങ്കില്‍ പൂജ്യവും
അടഞ്ഞിരിക്കുന്ന അവസ്ഥയെ സൂചിപ്പിക്കാനായി
ഓണ്‍ (ON) അല്ലെങ്കില്‍ ഒന്നും ഉപയോഗിക്കുന്നു. ഈ
രണ്ടവസ്ഥയിലുള്ള പ്രവര്‍ത്തനത്തെ ബൈനറി
ഓപ്പറേഷന്‍ (Binary Operation) എന്ന്‌ പറയുന്നു.
അതുകൊണ്ട്‌ കമ്പ്യൂട്ടറിലേക്ക്‌ നല്‍കുന്ന ഡാറ്റയും
ബൈനറി രൂപത്തിലായിരിക്കണം. സംഖ്യകള്‍,
അക്ഷരങ്ങള്‍, ചിധതങ്ങള്‍, വീഡിയോകള്‍, ശബ്ദങ്ങള്‍

എന്നിവയെ പ്രതിനിധാനം ചെയ്യുന്നതിനുള്ള വിവിധ
രീതികളാണ്‌ ഈ അധ്യായത്തില്‍ ചര്‍ച്ച ചെയ്യുന്നത്‌.

O010
6610488184

ചിത്രം 2.1 WINDJOS MIaYAlJo CHIWCMAAZAID ദുപങ്ങശ്‌

പി 2. ഡാറ്റയുടെ പ്രതിനിധാനവും ബുളിയന്‍ ബീജഗണിതവും

ഒരു കമ്പ്യൂട്ടറില്‍ ഡാറ്റയെ ആന്തരികമായി പ്രതിനിധീകരിക്കുന്നതിന്‌ ഉപയോഗിക്കുന്ന രീതിയാണ്‌
ഡാറ്റയുടെ പ്രതിനിധാനം (Data representation). സംഖ്യകളുടെ പ്രതിനിധാനം ചര്‍ച്ച ചെയ്യുന്നതിന്‌
മുമ്പായി സംഖ്യാ സ്രമ്പദായം (Number System) എന്താണെന്നു നമുക്ക്‌ നോക്കാം.

2.1 സംഖ്യാ സ്യ്രദായം (Number systems)

എണ്ണുന്നതിനും, അടയാളപ്പെടുത്തുന്നതിനും, അളക്കുന്നതിനും ഉള്ള ഗണിതശാസ്ര്രപരമായ
ഉപാധിയാണ്‌ സംഖ്യ. ചിട്ടയോടെ സംഖ്യകളെ പ്രതിനിധാനം ചെയ്യുന്ന രീതിയാണ്‌ സാംഖ്യാന
സ്രമ്പദായം. പത്ത്‌ അക്കങ്ങള്‍ ഉപയോഗിച്ച്‌ കൊണ്ടുള്ള ദശസംഖ്യാ സ്രമ്പദായമാണ്‌ (Decimal
Number System) നമ്മള്‍ നിത്യജീവിതത്തില്‍ ഉപയോഗിച്ച്‌ വരുന്നത്‌. 289 എന്ന സംഖ്യയെ ഇരുന്നൂറ്റി
എണ്‍പത്തി ഒന്‍പത്‌ എന്നാണ്‌ ഉച്ചരിക്കുന്നത്‌. ഇതില്‍ 2, 8, 9 എന്നീ അക്കങ്ങള്‍ അടങ്ങിയിട്ടുണ്ട്‌.
അതുപോലെ മറ്റ്‌ സംഖ്യാ സ്രമ്പദായങ്ങളും നിലവിലുണ്ട്‌. ഓരോന്നിനും അതിന്റേതായ ചിഹ്നങ്ങളും
രീതികളുമാണ്‌ അവയിലെ സാഖ്യ രൂപകല്‍പന ചെയ്യുന്നതിന്‌ ഉപയോഗിക്കുന്നത്‌. ഓരോ സംഖ്യാ
സ്രമ്പദായത്തിനും തനതായ ആധാരം ഉണ്ട്‌. ഇത്‌ ആ സംഖ്യാ സ്രമ്പദായത്തിലെ ചിഹ്നങ്ങളുടെ
എണ്ണത്തെ ആശ്രയിച്ചിരിക്കുന്നു. ഒരു സംഖ്യാ സ്ര്പദായത്തില്‍ ഉപയോഗിക്കുന്ന അക്കങ്ങളുടെ
അല്ലെങ്കില്‍ ചിഹ്നങ്ങളുടെ എണ്ണത്തെ ആ സംഘ്യാ സ്രമ്പദായത്തിലെ ആധാരം (Base) അല്ലെങ്കില്‍
മൂലസംഖ്യ (Radix ) എന്ന്‌ പറയുന്നു.

ചില സംഖ്യാ സ്ര്രദായങ്ങളെ കുറിച്ച്‌ നമുക്ക്‌ ചര്‍ച്ച ചെയ്യാം.
2.1.1 ദശസംഖ്യാ സ്ര്രദായം (Decimal number system)

ദശസംഖ്യാ സ്രമ്പദായത്തില്‍ 0, 1, 2, 3, 4, 5, 6, 7, 8, 9 തുടങ്ങിയ പത്ത്‌ അക്കങ്ങളാണ്‌ സംഖ്യാ
രൂപീകരണത്തിന്‌ ഉപയോഗിക്കുന്നത്‌. ദശസംഖ്യാ സ്രമ്പദായത്തില്‍ പത്ത്‌ അക്കങ്ങള്‍ ഉപയോ
ഗിക്കുന്നതുകൊണ്ട്‌ അതിന്റെ ആധാരം (Base) 10 ആകുന്നു. അതുകൊണ്ടു ദശസംഖ്യാ സ്രമ്പദാ
യത്തെ 10 ആധാരമാക്കിയ സംഖ്യാ സ്രമ്പദായം എന്നു കൂടി വിളിക്കുന്നു.

743. 347 എന്നീ രണ്ട്‌ ദശസംഖ്യകള്‍ പരിഗണിക്കുക.
743 = ഏഴ്‌ നൂറുകള്‍ + നാലു പത്തുകള്‍ - മൂന്ന്‌ ഒന്നുകള്‍ (മഥ + 4x10'+ 3x10")
347 = മൂന്ന്‌ നൂറുകള്‍ + നാലു പത്തുകള്‍ + ഏഴ ഒന്നുകള്‍ (3x10? +4 x10!+ 7x10")

ഇവിടെ ഒന്നാമത്തെ സംഖ്യയായ 743 ല്‍ 7 ന്റെ സ്ഥാനവില (Weight) 10°= 100 ആകുന്നു. എന്നാല്‍
രണ്ടാമത്തെ സംഖ്യയായ 347 ല്‍ 7 ന്റെ സ്ഥാനവില 10°= 1 ആകുന്നു. ഒരു സംഖ്യയുടെ സ്ഥാനവില
അതിന്റെ ആപേക്ഷിക സ്ഥാനത്തെ ആശ്രയിച്ചിരിക്കുന്നു. അത്തരം സംഖ്യാ സ്രമ്പദായത്തെ
സ്ഥാനീയ സംഖ്യാ സ്രമ്പദായം (Positional Number System) എന്നു പറയുന്നു. എല്ലാ സ്ഥാനീയ
സംഖ്യാ സ്ര്പദായത്തിനും ഒരു ആധാരം (Base) ഉണ്ടായിരിക്കും. ഒരു അക്കത്തിന്റെ സ്ഥാനവില
ആധാരത്തിന്റെ ചില കൃത്യങ്കം (Power) ആയിരിക്കും. ഓരോ ദശസംഖ്യ അക്കത്തിന്റെ സ്ഥാന
വില 10 ന്റെ കൃത്യങ്കം ആയിരിക്കും (10°, 101, 10°, ......). 5876 എന്ന ദശസംഖ്യ പരിഗണിക്കുക.
ഈ സംഖ്യ താഴെ കാണിച്ചിരിക്കുന്നത്‌ പോലെ വിപുലീകരിച്ചു എഴുതാം.
| DAO ഒന്നാം വര്‍ഷ കമ്പുട്ടര്‍ സയന്‍സ്‌ 2. ഡാറ്റയുടെ പ്രതിനിധാനവും ബൂളിയന്‍ ബീജഗണിതവും

re

5x10? + 8x10? + 7x10'+ 6x10°
= 5x1000 + 8x100 +7x10+ പെ

5000 + 800 + 70+ 6
= 5876

മുകളില്‍ കൊടുത്തിരിക്കുന്ന ഉദാഹരണത്തില്‍ 5 എന്ന അക്കത്തിന്‌ ഏറ്റവും കൂടിയ സ്ഥാനവിലയായ
10°=1000 ഉം 6 എന്ന അക്കത്തന്‍ ഏറ്റവും കുറഞ്ഞ സ്ഥാനവിലയായ 105] ഉം ആണ്‌. ഏറ്റവും
കൂടിയ സ്ഥാനവിലയുള്ള അക്കത്തെ കൂടിയ പ്രബലതയുള്ള അക്കം (Most Significant Digit - MSD)
എന്നും ഏറ്റവും കുറഞ്ഞ സ്ഥാനവിലയുള്ള അക്കത്തെ കുറഞ്ഞ പ്രബലതയുള്ള അക്കം (Least
Significant - LSD) എന്നും വിളിക്കുന്നു. അതിനാല്‍ മുകളില്‍ കൊടുത്തിരിക്കുന്ന സംഖ്യയില്‍
MSD എന്നത്‌ ഉം LSD എന്നത്‌ 6 ഉം ആകുന്നു.

ഒരു സംഖ്യയുടെ ഏററവും MSO} വശത്മുകൂകു അക്കം 477 ഉം ഏറ്റവും വലതു വശത്തുള്ള
അക്കം LSD ഉം തആമകുമ്മു.

ദശാംശ സംഖ്യകളില്‍ ദശാംശ ബിന്ദുവിന്‌ വലുത്‌ ഭാഗത്തുള്ള സംഖ്യകളുടെ സ്ഥാനവില 10 ന്റെ
നെഗറ്റിവ്‌ കൃത്ൃങ്കങ്ങള്‍ ആണ്‌ (107, 107, 10, ....... ). 249.367 എന്ന സംഖ്യ ഉദാഹരണമായി എടുക്കാം.

ശസാഖ്യ ഇ ന്യ

= 2x10? +4 x10! + 9x10° 301 പെമ

= 2x100+4x10+9x1+3x0.1+6x0.01 +7x0.001
= 200+ 40+9+0.3 + 0.06 + 0.007
= 249.367

ഇതുവരെ 10 അക്കങ്ങള്‍ ഉപയോഗിച്ചുകൊണ്ടുള്ള ഒരു സംഖ്യാ സ്ര്പദായത്തെക്കുറിച്ചാണ്‌ നമ്മള്‍
ചര്‍ച്ചചെയ്തത്‌. ഇനി നമുക്ക്‌ വൃത്യസ്ത ആധാരങ്ങളിലുള്ള മറ്റ്‌ സംഖ്യാ സ്രമ്പദായങ്ങള്‍
രൂപീകരിക്കുന്നതെങ്ങനെ എന്ന്‌ പഠിക്കാം.

2.1.2 ദ്യയസംഖ്യാ സ്ര്രദായം (Binary number system)

ഒരു സംഖ്യ രൂപീകരിക്കാന്‍ 0, 1 എന്നീ രണ്ടക്കങ്ങള്‍ മാര്തം ഉപയോഗിക്കുന്ന സംഖ്യാ MoU
ദായത്തെയാണ്‌ ദ്യസംഖ്യാ സ്രമ്പദായം (Binary Number System) എന്ന്‌ പറയുന്നത്‌. ഇംഗ്ലീഷില്‍ bi
(൫൫ ൫ ഒന്നാം വര്‍ഷ കമ്പ്യൂട്ടര്‍ സയന്‍സ്‌ 2. ഡാറ്റയുടെ പ്രതിനിധാനവും ബൂളിയന്‍ ബീജഗണിതവും

(ബൈ) എന്ന വാക്ക്‌ കൊണ്ട്‌ അര്‍ഥമാക്കുന്നത്‌ 2 എന്നാണ്‌. അതിനാല്‍ ഈ സംഖ്യാ
സ്രമ്പദായത്തിന്റെ ആധാരം 2 ആകുന്നു. അതുകൊണ്ട്‌ ഇതിനെ 2 ആധാരമാക്കിയുള്ള സംഖ്യാ
സ്രമ്പദായം എന്ന്‌ കൂടി വിളിക്കുന്നു. ഒരു സംഖ്യ ദ്യയസംഖ്യയാണെന്ന്‌ സൂചിപ്പിക്കാന്‍ ആ
സംഖ്യയോടു കൂടി 2 കീഴ്ക്കുറിപ്പ്‌ (Subscript) ആയി ഉപയോഗിക്കുന്നു.

ഉദാഹരണങ്ങള്‍ (1101),, (101010), , (1101.11),

ഒരു ദ്യസംഖ്യയിലെ ഓരോ അക്കത്തെയും ബിറ്റ്‌ (bit) എന്നാണ്‌ വിളിക്കുന്നത്‌. ഇംഗ്ലീഷില്‍ bit
ന്റെ പൂര്‍ണരൂപം binary digit എന്നാകുന്നു. ്യസംഖ്യാന സ്രമ്പദായവും ഒരു സ്ഥാനീയ സംഖ്യാന
സ്രമ്പദായമാണ്‌. ഓരോ ദ്വയസംഖ്യ അക്കത്തിന്റെയും സ്ഥാന വില 2 ന്റെ കൃതൃങ്കം (Power)

ആണ്‌. (1101), എന്ന ദ്യസംഖ്യ ഉദാഹരണമായി പരിഗണിക്കുക. ഈ ദ്വയസംഖ്യ താഴെ
കാണിച്ചിരിക്കുന്നത്‌ പോലെ വിപുലീകരിച്ച്‌ എഴുതാം.

നന നിനി

1
MSB LSB

= 1x2? + 1x 2? + 0x2! + 1x2?
= 1x8+1x4+0x2+ 1x1

= 8+4+0+1

= 13

ദ്യസംഖ്യയിലെ ഏറ്റവും വലതുവശത്തു നില്‍ക്കുന്ന അക്കത്തിനെ കുറഞ്ഞ പ്രബലതയുള്ള ബിറ്റ്‌
(Least Significant Bit - LSB) എന്നും ഏറ്റവും ഇടതുവശത്തു നില്‍ക്കുന്ന അക്കത്തിനെ കൂടുതല്‍
പ്രബലതയുള്ള ബിറ്റ്‌ (Most Significant Bit- MSB) എന്നും വിളിക്കുന്നു.

1101 എന്ന ദ്യസംഖ്യ 13 എന്ന ദശസംഖ്യയ്ക്ക്‌ തുല്യമാണ്‌. എന്നാല്‍ 1101 എന്ന സംഖ്യ ദശസംഖ്യാ
സ്ര്രദായത്തിലും ഉണ്ട്‌. പക്ഷെ അതിനെ വ്യാഖ്യാനിക്കുന്നത്‌ ആയിരത്തി ഒരുന്നുറ്റി ഒന്ന്‌ എന്നാണ്‌.
ഈ ആശയക്കുഴപ്പം ഒഴിവാക്കുവാന്‍ വേണ്ടി ദശസംഖ്യാ സ്രമ്പദായം ഒഴികെയുള്ള എല്ലാ സംഖ്യാ
സ്രമ്പദായങ്ങളിലും ആധാരം വ്ൃക്തമായി സൂചിപ്പിക്കണം. അതിന്റെ പൊതുവായ ഘടന താഴെ
കൊടുത്തിരിക്കുന്നു.

(സാംഖ്യ)

ആധാരം

വൃത്യസ്ത ആധാരത്തിലുള്ള സംഖ്യകളെ തരംതിരിച്ചറിയുവാന്‍ ഈ അടയാളപ്പെടുത്തല്‍
സഹായിക്കുന്നു. ഉദാഹരണമായി 1101 എന്ന ദ്യസംഖ്യയെ (1101), എന്ന്‌ എഴുതുകയും അതിനെ
“ഒന്ന്‌ ഒന്ന്‌ പൂജ്യം ഒന്ന്‌ ആധാരം രണ്ട്‌ ' എന്ന്‌ വായിക്കുകയും ചെയ്യണം. ഒരു സംഖ്യയ്ക്ക്‌ ആധാരം
നല്‍കിയിട്ടില്ലെങ്കില്‍ അതിനെ ദശസംഖ്യയായി പരിഗണിക്കണം. അതായത്‌ ദശസംഖ്യക്ക്‌ ആധാരം
സൂചിപ്പിക്കണമെന്ന്‌ നിര്‍ബന്ധമില്ല.

ഭിന്നകമായ ഒരു ദ്യസംഖ്യയുടെ അംശബിന്ദുവിന്‌ (Binary Point) വലതുഭാഗത്തുള്ള അക്കങ്ങളുടെ
സ്ഥാനവില 2 ന്റെ നെഗറ്റിവ്‌ കൃത്യങ്കം ആയിരിക്കും. (2, 25, 25.....). (111011), എന്ന സംഖ്യ
ഉദാഹരണമായി എടുക്കാം.
| (൫൫ ൫ ഒന്നാം വര്‍ഷ കമ്പ്യുട്ടര്‍ സയന്‍സ്‌ 2. ഡാറ്റയുടെ പ്രതിനിധാനവും ബൂളിയന്‍ ബീജഗണിതവും
പി [=] 2]27]=]=] >|

നന നനന നിനി

MSB 6) LSB

= 1x2? + 1x2! + 1x29 +0x27 + 1x27 + 1x23

1 1
= 1x441x2+1x1+0x=+1x— 41x
2 4 8

442+1+0+0.25+0.125
= 7375

കമ്പ്യൂട്ടറില്‍ ദ്യസംഖ്യയുടെ പ്രധാന്യം

ദ്യയസംഖ്യാ സ്രമ്പദായം 1, 0 എന്നീ അക്കങ്ങള്‍ അടിസ്ഥാനമാക്കിയാണെന്നു നമ്മള്‍ കണ്ടല്ലോ.
ചിത്രം 2.2 ല്‍ വൈദ്യുതിയുടെ ഓണ്‍ (0) ആയിരിക്കുന്ന അവസ്ഥ 1 കൊണ്ടും ഓഫ്‌ (OFF)
ആയിരിക്കുന്ന അവസ്ഥ 0 കൊണ്ടും സൂചിപ്പിക്കുന്നു. ഇക്കാരണത്താല്‍, കമ്പ്യൂട്ടറില്‍ ഡാറ്റയെ
പ്രതിനിധാനം ചെയ്യുന്നതിന്‌ അടിസ്ഥാന സംഖ്യാ സ്രമ്പദായമായി ദ്വയസംഖ്യഠന സ്രമ്പദായം
ഉപയോഗിക്കുന്നു.

Wy QW,

yk Le റ?
epee eer.
1
2Oo2.2ON 90OFF on WBN ദുപത്തിമ്റ്‌ പ്രതിനിധാനം

2.1.3 അഷ്ടസംഖ്യാ സ്ര്രദായം (Octal number system)

എട്ട്‌ അക്കങ്ങളായ 0, 1, 2,3, 4, 5, 6, 7 എന്നിവ ഉപയോഗിച്ചുണ്ടാക്കുന്ന സംഖ്യാ സ്രമ്പദായത്തെ
അഷ്ടസംഖ്യാ സ്രമ്പദായം (Octal Number System) എന്ന്‌ പറയുന്നു. ഇംഗ്ലീഷില്‍ Octa (ഒക)
എന്ന വാക്ക്‌ കൊണ്ട്‌ അര്‍ഥമാക്കുന്നത്‌ 8 എന്നാണ്‌. അതിനാലാണ്‌ ഈ സാഖ്യാ സ്രമ്പദായത്തെ
ഒകുല്‍ സംഖ്യാ സ്രമ്പദായം എന്ന്‌ പറയുന്നത്‌. ഈ സംഖ്യാ സ്രമ്പദായത്തിന്റെ ആധാരം 8
ആകുന്നു. അതുകൊണ്ട്‌ ഇതിനെ 8 ആധാരമായ Mojo സ്രമ്പദായം എന്നും വിളിക്കുന്നു.
ഉദാഹരണമായി (236), പരിഗണിക്കുക. ഓരോ BAO. അക്കത്തിന്റെയും സ്ഥാനവില 8 ന്റെ കൃത്യങ്കം
(Power) ആയിരിക്കും (8°, 81, 87, 8%, .....). (236), എന്ന സംഖ്യ താഴെ കാണിച്ചിരിക്കുന്നത്‌ പോലെ
വിപുലീകരിച്ചു എഴുതാം.

ആനി
ക്ട [2

2x8? + 3x8! + 6x8°

= 2x64 + 3x8 + 6x1
= 128+24+6

= 158
അ (അ) 2. ഡാറ്റയുടെ പ്രതിനിധാനവും ബുളിയന്‍ ബീജഗണിതവും

ഭിന്നകമായ ഒരു അഷ്ടസംഖ്യയുടെ അംശബിന്ദുവിന്‌ വലതുഭാഗത്തുള്ള അക്കങ്ങളുടെ സ്ഥാനവില
8 ന്റെ നെഗറ്റിവ്‌ കൃത്യങ്കം ആയിരിക്കും (8, 8-, 8, .......). (172.4), എന്ന സംഖ്യ ഉദാഹരണമായി
എടുക്കാം.

പ്‌ a

ത്ന്ന

1x8? + 7x8! + 2x8! + 4x8!
= 64456424 4x8

= 122+0.5
= 122.5

2.1.4 ഷോഡശ (ഹെക്‌സാഡെസിമല്‍) സംഖ്യാ സ്ര്രദായം
(Hexadecimal number system)

0, 1, 2,3, 4,5, 6, 7, 8,9, A, B, C, D, E, F എന്നീ 16 ചിഹ്നങ്ങള്‍ ഉപയോഗിച്ചുണ്ടാക്കുന്ന സംഖ്യാ
സ്രമ്പദായത്തെ ഹെക്സാഡെസിമല്‍ സംഖ്യാ സ്രമ്പദായം എന്ന്‌ പറയുന്നു. ഈ സാഖ്യാ
സ്രമ്പദായത്തില്‍ 16 ചിഹ്നങ്ങള്‍ ഉപയോഗിക്കുന്നതുകൊണ്ട്‌ ഇതിന്റെ ആധാരം 16 ആകുന്നു.
ആയതിനാല്‍ ഇതിനെ 16 ആധാരമായ സംഖ്യാ സ്രമ്പദായം എന്നും വിളിക്കുന്നു. ഈ സംഖ്യാ
സ്രമ്പദായത്തിലെ A, B,C, 0. 1:, F എന്നീ ചിഹ്നങ്ങള്‍ ഉപയോഗിക്കുന്നത്‌ യഥാക്രമം ദശസംഖ്യാ
സ്രമ്പദായത്തിലെ 10, 11, 12, 13, 14, 15 എന്ന സംഖ്യകളെ സൂചിപ്പിക്കുന്നതിനാണ്‌.

ഹെക്സാഡെസിമല്‍ അക്കങ്ങളും അവയ്ക്ക്‌ തുല്യമായ ദശസംഖ്യകളും ചുവടെ കാണിച്ചിരിക്കുന്നു.

ioe 2 Eee Tae ePee

[അന്നന്ന്‌

ഉദാഹരണമായി (120, എന്ന ഹെക്സാഡെസിമല്‍ സംഖ്യ പരിഗണിക്കുക. ഓരോ ഹെക്സാ
ഡെസിമല്‍ അക്കത്തിന്റെയും സ്ഥാനവില 16 ന്റെ കൃത്യങ്കം (Power) ആയിരിക്കും (16°, 16, 167, 16°,
...). ഈ സംഖ്യയെ താഴെ കാണിച്ചിരിക്കുന്നത്‌ പോലെ വിപുലീകരിച്ചു എഴുതാം.

econ

Sa [2-5 [൦

൧൨൦ 2x16? 10.1 15x 16°
= 1x4096 + 2x256+ 10x16 + 15x1
= 4096 + 512+ 160 +15

= 4783
ഭിന്നകമായ ഒരു OOAMIOWAVIAG സംഖ്യയുടെ അംശബിന്ദുവിന്‌ വലതുഭാഗത്തുള്ള അക്ക
ങ്ങളുടെ സ്ഥാനവില 16 ന്റെ നെഗറ്റിവ്‌ കൃതൃങ്കം ആയിരിക്കും (16, 16%, 1൦...) (2D.4),, എന്ന
സംഖ്യാ ഉദാഹരണമായി എടുക്കാം.
DOO ഒന്നാം വര്‍ഷ കമ്പ്യുട്ടര്‍ സയന്‍സ്‌ 2. ഡാറ്റയുടെ പ്രതിനിധാനവും ബൂളിയന്‍ ബീജഗണിതവും

യസ 22: 4 |
1

= 2x16! + 13x 16° +4x —
16

= 32+13+0.25
= 45.25

പട്ടിക 2.1 ല്‍ വിവിധ സംഖ്യാന സ്ര്പദായത്തില്‍ ഉപയോഗിക്കുന്ന ആധാരവും ചിഹ്നങ്ങളും
കാണിച്ചിരിക്കുന്നു.

സംഖ്യാന സ്രമ്പദായം രം ഉപയോഗിക്കുന്ന ചിഹ്നങ്ങള്‍

ബൈനറി 2 0,1

ഒകൂല്‍ 8 0, 1, 2, 3,4, 5, 6, 7

ഡെസിമല്‍ 10 0, 1, 2, 3, 4, 5, 6,7, 8, 9

ഹെക്സാ ഡെസിമല്‍ 16 0, 1, 2, 3, 4,5, 6, 7, 8, 9, A, B,C, D, E, F

പട്ടിക 2.7 OND Moby) MO(MIBIO COIEIZ2j{BB ആധാരം ചിഹങ്ങളും

BAW, ഹെക്സാഡെസിമല്‍ സംഖ്യാ സ്ര്പദായങ്ങളുടെ പ്രാധാന്യം

കമ്പ്യൂട്ടറില്‍ ഡാറ്റ പ്രോസസ്സ്‌ ചെയ്യുന്നതിനും അതിനെ പ്രതിനിധാനം ചെയ്യുന്നതിനും ബൈനറി
സാഖ്യാ സ്രമ്പദായമാണ്‌ ഉപയോഗിക്കുന്നത്‌ എന്ന്‌ നമ്മള്‍ മനസ്സിലാക്കിക്കഴിഞ്ഞു. ബൈനറി
സംവിധാനത്തില്‍ സംഖ്യകള്‍ പ്രതിനിധാനം ചെയ്യുന്നതിനും അവയുടെ പ്രവര്‍ത്തനങ്ങള്‍ക്കും
കൂടുതല്‍ ബിറ്റുകളും പ്രയത്നങ്ങളും ആവശ്യമാണ്‌. മൂന്നു ബിറ്റുകളുടെ ഗ്രൂപ്പിനെ ഒരു ഒക്ടല്‍
അക്കമായും (കാരണം 2” - 8) നാലു ബിറ്റുകളുടെ ഗ്രൂപ്പിനെ ഒരു ഹെക്സാഡെസിമല്‍ അക്കമായും
(കാരണം 24= 16) മാറ്റാവുന്നതും ഇത്തരം (്ഗൂപ്പുകളെ അവയുടെ തത്തുല്യമായ ഒക്ടല്‍, ഹെക്‌
സാഡെസിമല്‍ ചിഹ്നങ്ങളിലേക്കു മാറ്റാവുന്നതാണ്‌. ബൈനറി സംഖ്യകളുടെ ഒക്ടല്‍, ഹെക്സാ
ഡെസിമല്‍ സാഖ്യാ സ്രമ്പദായത്തിലേക്കുള്ള ഇത്തരം മാറ്റവും തിരിച്ചുള്ള മാറ്റവും വളരെ എളുപ്പ
മാണ്‌. ഇലക്ര്യോണിക്‌ സര്‍ക്യൂട്ടുകളുടെ രൂപകല്‍പ്പനയിലും (്രവര്‍ത്തനത്തിലും ഈ പരിവര്‍ത്തന
പ്രക്രിയ വലിയ തോതില്‍ ഉപയോഗിക്കുന്നു.

സ്വം വിലയിരുത്താം

1. ഒരു സംഖ്യാ സ്രമ്പദായത്തില്‍ ഉപയോഗിച്ചിരിക്കുന്ന ചിഹ്നങ്ങളുടെ

എണ്ണത്തെ ................ എന്ന്‌ വിളിക്കുന്നു.
2. താഴെ കൊടുത്തിരിക്കുന്നതില്‍ നിന്ന്‌ അസാധുവായ സംഖ്യകള്‍
തിരഞ്ഞെടുക്കുക.

i) (1010), 9 0123), 0൭, 99) (ABO),

3. ബിറ്റ്‌ എന്ന പദം നിര്‍വചിക്കുക.

4. 7854.25. എന്ന ദശസംഖ്യയുടെ എം.എസ്‌.ഡി (1512) കണ്ടുപിടിക്കുക.
ഹെക്സാഡെസിമല്‍ സംഖ്യാ സ്രമ്പദായത്തിന്റെ ആധാരം ..
ആകുന്നു.

അഭ) 2. ഡാറ്റയുടെ പ്രതിനിധാനവും ബുളിയന്‍ ബീജഗണിതവും

2.2 സംഖ്യകളുടെ പരിവര്‍ത്തനങ്ങള്‍ (Number conversions)

വിവിധ സംഖ്യാ സ്രമ്പദായങ്ങളെക്കുറിച്ച്‌ നമ്മള്‍ പഠിച്ചു കഴിഞ്ഞു, ഒരാധാരത്തിലുള്ള സംഖ്യകളെ
മറ്റൊരാധാരത്തിലുള്ള തത്തുല്യ സംഖ്യകളാക്കി പരിവര്‍ത്തനം ചെയ്യുന്നതെങ്ങനെയാണെന്നു
നമുക്ക്‌ ചര്‍ച്ച ചെയ്യാം. ദശസംഖ്യയില്‍ നിന്ന്‌ ബൈനറി, ബൈനറിയില്‍ നിന്ന്‌ ദശസംഖ്യ,
ദശസംഖ്യയില്‍ നിന്ന്‌ BOI എന്നിങ്ങനെ പല വിധത്തിലുള്ള സംഖ്യാ സ്ര്രദായത്തിലേക്കു
പരിവര്‍ത്തനം ചെയ്യാം. ഒരു സംഖ്യാ സ്രമ്പദായത്തില്‍ നിന്ന്‌ മറ്റൊരു സംഖ്യാ സ്രമ്പദായത്തിലേക്ക്‌
എങ്ങനെ പരിവര്‍ത്തനം ചെയ്യാമെന്ന്‌ നമുക്ക്‌ നോക്കാം.

2.2.1 ദശസംഖ്യയില്‍ നിന്ന്‌ ബൈനറിസംഖ്യയിലേക്കുള്ള പരിവര്‍ത്തനം
(Decimal to binary conversion)

ആവര്‍ത്തിച്ചുള്ള ഹരണം വഴിയാണ്‌ ദശസംഖ്യയെ ബൈനറി സംഖ്യയിലേക്കു പരിവര്‍ത്തനം
ചെയ്യുന്നത്‌. ഈ രീതിയില്‍ ദശസംഖ്യയെ 2 കൊണ്ട്‌ തുടര്‍ച്ചയായി ഹരിക്കുകയും (സംഖ്യ 0
ആകുന്നത്‌ വരെ), അതിന്റെ ശിഷ്ടങ്ങള്‍ രേഖപ്പെടുത്തുകയും ചെയ്യുന്നു. 1513 അവസാന ശിഷ്ടമായും
LSB ആദ്യത്തെ ശിഷ്ടമായും എടുത്ത്‌ ശിഷ്ടങ്ങളെ കൂട്ടമായി എഴുതിയാല്‍ ദ്യസംഖ്ൃക്ക്‌ തുല്യമായ
സംഖ്യ ലഭിക്കുന്നു. ഓരോ ഘട്ടത്തിലും ഹരിക്കുമ്പോള്‍ കിട്ടുന്ന ശിഷ്ടങ്ങള്‍ ഒന്നുകില്‍ 0 അല്ലെങ്കില്‍
1 എന്നീ ബൈനറി അക്കങ്ങള്‍ ആയിരിക്കും.

ഉദാഹരണങ്ങള്‍ (80), ന്‌ തുല്യമായ ബൈനറി സംഖ്യ
25 എന്ന ദശസംഖ്യയുടെ ബൈനനറിക്ക്‌ കണ്ടുപിടിക്കുക.
തുല്യമായ സംഖ്യ കണ്ടുപിടിക്കുക. 2180 ശിഷ്ടങ്ങള്‍
2 B
2 25 ശിഷ്ടങ്ങള്‍ 20 ° is
2) 2
2 12 1 LSB 0 °
2] 10 0
2| 6 0
215 0
2| 3 0
2 1 1 2|2 1
0 1 MSB ul റ
0 1 MSB

സുചന: BY സംഖ്യയായ ദശസംഖ്യയ്ക്ക്‌ തുല്യമായ ബൈനറി MoU 103 അവസാനിക്കുകയും
ഇരട്ട സംഖ്യയായ ദശസംഖ്യക്ക്‌ തുല്യമായ ബൈനറി സംഖ്യ 0 ല്‍ അവസാനിക്കുകയും ചെയ്യുന്നു.

(൫൫൫ ഒന്നാം വര്‍ഷ കമ്പ്യുട്ടര്‍ സയന്‍സ്‌ 2. ഡാറ്റയുടെ പ്രതിനിധാനവും ബൂളിയന്‍ ബീജഗണിതവും

ദശാംശ സംഖ്യകള്‍ ബൈനറിയിലേക്ക്‌ പരിവര്‍ത്തനം ചെയ്യല്‍

ദശാംശ സംഖ്യകള്‍ ബൈനറിയിലേക്ക്‌ മാറ്റാന്‍ അതിനെ തുടര്‍ച്ചയായി 2 കൊണ്ട്‌ ഗുണിക്കുന്ന
രീതിയാണ്‌ നാം ഉപയോഗിക്കുന്നത്‌. ഉത്തരത്തിന്റെ പൂര്‍ണസംഖ്യഭാഗം ബൈനറി ഭിന്നകത്തിലെ
21513 ആയിരിക്കും. അടുത്ത ബൈനറി ഭിന്നകത്തിന്റെ പ്രബലതയുള്ള ബിറ്റ്‌ കിട്ടുന്നതിന്‌ വീണ്ടും
ഭിന്നക ഭാഗത്തിന്റെ ഉത്തരത്തെ 2 കൊണ്ട്‌ ഗുണിക്കുന്നു. ഭിന്നക ഭാഗം പൂജ്യം ആകുന്നതു വരെയോ
അല്ലെങ്കില്‍ ആവശ്യമുള്ള്രത കൃതൃത (Precision) ലഭിക്കുന്നത്‌ വരെയോ ഈ നടപടിക്രമം
തുടരുന്നു.

ഉദാഹരണങ്ങള്‍:

0.75 നെ ബൈനനറിയിലേക്ക്‌ മാറ്റുക.

0.75 4 2 = 1.50
൧0 x 2 = 1.00

1 25 x 2 = 0.50
0 50 x 2 = 1.00
1 .00

15.25 am ബൈനറിയിലേക്ക്‌ മാറ്റുക.

15 നെ ബൈനനറിയിലേക്കു മാറ്റുക. 0.25നെ ബൈനറിയിലേക്കു മാറ്റുക
2 | 15 ശിഷ്ടങ്ങള്‍
0.25 x 2 59.50
2 7 1
0 50 x 2 = 1.00
2 3
.00
2 1 1
0 1

2.2.2 ദശസംഖ്യയില്‍ നിന്ന്‌ ഒക്ടലിലേക്കുള്ള പരിവര്‍ത്തനം
(Decimal to Octal conversion)

ആവര്‍ത്തിച്ചുള്ള ഹരണം വഴിയാണ്‌ ദശസംഖ്യയെ ഒകൂല്‍ സംഖ്യയിലേക്കു പരിവര്‍ത്തനം
ചെയ്യുന്നത്‌. ദശസംഖ്യയെ 8 കൊണ്ട്‌ തുടര്‍ച്ചയായി ഹരിക്കുകയും (സംഖ്യ 0 ആകുന്നത്‌ വരെ),
അതിന്റെ ശിഷ്ടങ്ങള്‍ രേഖപ്പെടുത്തുകയും ചെയ്യുന്നു. MSD അവസാന ശിഷ്ടമായും LSD ആദ്യത്തെ

DOO ഒന്നാം വര്‍ഷ കമ്പ്യൂട്ടര്‍ സയന്‍സ്‌ 2. ഡാറ്റയുടെ പ്രതിനിധാനവും ബൂളിയന്‍ ബീജഗണിതവും

ശിഷ്ടമായും എടുത്ത്‌ ശിഷ്ടങ്ങളെ കൂട്ടമായി എഴുതിയാല്‍ ഒക്ടല്‍സംഖ്യക്ക്‌ തുല്യമായ സംഖ്യ
ലഭിക്കുന്നു. ഓരോ ഘട്ടത്തിലും ഹരിക്കുമ്പോള്‍ കിട്ടുന്ന ശിഷ്ടങ്ങള്‍ 0, 1,2, 3, 4, 5, 6, 7.എന്നിവയില്‍
ഏതെങ്കിലും ആയിരിക്കും.

ഉദാഹരണങ്ങള്‍:

125 എന്ന ദശസംഖ്യക്ക്‌ തുല്യമായ ഒകുല്‍ സംഖ്യ കണ്ടുപിടിക്കുക.

8 125 ശിഷ്ടങ്ങള്‍
8 15 5 LSD
8 1 7

(400) ,, ന്‌ തുല്യമായ 82403 സംഖ്യ കണ്ടുപിടിക്കുക.

8 400 ശിഷ്ടങ്ങള്‍

8| 50 0
0 6

2.2.3 ദശസംഖ്യയില്‍ നിന്ന്‌ ഹെകസാഡെസിമലിലേക്കറുള്ള പരിവര്‍
ത്തനം (Decimal to hexadecimal conversion)
MaHa6ooiaj}3S8 ഹരണം വഴിയാണ്‌ ദശസംഖ്യയെ ഹെക്്‌സാഡെസിമല്‍ സംഖ്യയിലേക്കു
പരിവര്‍ത്തനം ചെയ്യുന്നത്‌. ദശസംഖ്യയെ 16 കൊണ്ട്‌ തുടര്‍ച്ചയായി ഹരിക്കുകയും (സംഖ്യ 0)
ആകുന്നത്‌ വരെ), അതിന്റെ ശിഷ്ടങ്ങള്‍ രേഖപ്പെടുത്തുകയും ചെയ്യുന്നു. 4512 അവസാന ശിഷ്ടമായും
LSD ആദ്യ ശിഷ്ടമായും എടുത്ത്‌ ശിഷ്ടങ്ങളെ കൂട്ടമായി എഴുതിയാല്‍ ഹെക്സാഡെസിമല്‍ സാഖ്ൃക്ക്‌
തുല്യമായ സാംഖ്യ ലഭിക്കുന്നു. ഓരോ ഘട്ടത്തിലും ഹരിക്കുമ്പോള്‍ കിട്ടുന്ന ശിഷ്ടങ്ങള്‍ 0, 1, 2, 3, 4,
5, 6,7, 8,9, 10, 11, 12, 13, 14, 15 എന്നിവയില്‍ ഏതെങ്കിലും ആയിരിക്കും. കിട്ടുന്ന ശിഷ്ടങ്ങള്‍ 10,
11, 12, 13, 14, 15 ആണെങ്കില്‍ അതിനെ യഥാര്രമം A,B,C, D,E, F എന്നിങ്ങനെ രേഖപ്പെടുത്തണം.

ഉദാഹരണങ്ങള്‍:

155 എന്ന ദശസംഖ്യക്ക്‌ തുല്യമായ ഹെക്സാഡെസിമല്‍ സംഖ്യ കണ്ടുപിടിക്കുക.
16] 155 ശിഷ്ടങ്ങള്‍
16 9 11൫ ന)

> | ED
| (൫൫ ൫ ഒന്നാം വര്‍ഷ കമ്പ്യുട്ടര്‍ സയന്‍സ്‌ 2. ഡാറ്റയുടെ പ്രതിനിധാനവും ബൂളിയന്‍ ബീജഗണിതവും

ഉദാഹരണങ്ങള്‍: 380, തുല്യമായ ഹെക്സാഡെസിമല്‍ സംഖ്യ
കണ്ടുപിടിക്കുക.

16] 380 ശിഷ്ടങ്ങള്‍

2.2.4 ബൈനറിയില്‍ നിന്ന്‌ ദശസംഖ്യയിലേക്കുള്ള പരിവര്‍ത്തനം
(Binary to decimal conversion)

ബൈനറി സംഖ്യകള്‍ക്ക്‌ തുല്യമായ ദശസംഖ്യ കാണുന്നതിന്‌, ബൈനറി സംഖ്യയിലെ ഓരോ
അക്കത്തിനെയും, അതിന്റെ സ്ഥാനവില കൊണ്ടു ക്രമമായി ഗുണിച്ച്‌ തുക കണ്ടാല്‍ മതി.
സ്ഥാനവില 2 ന്റെ കൃതൃങ്കം ആയിരിക്കും (2°, 21, 2, 2, ...)..

ഉദാഹരണങ്ങള്‍:
(10110), നെ ദശസംഖ്യയിലേക്കു മാറ്റുക.
ബൈനറി അക്കം [101110
(10110, 5 1x2*+ 1x2? + മ്മ്മ്‌
= 16+0+4+2+0

(11011), om ദശസംഖ്യയിലേക്കു മാറ്റുക.

(141011), = 1x2'+ 1x2?+ 0x2?+ 1x2! + 1x2”

(1100010), നെ ദശസംഖ്യയിലേക്കു മാറ്റുക.

[രി [1110101011]

(൫൫ ൫ ഒന്നാം വര്‍ഷ കമ്പ്യൂട്ടര്‍ സയന്‍സ്‌ 2. ഡാറ്റയുടെ പ്രതിനിധാനവും ബൂളിയന്‍ ബീജഗണിതവും

(100010, മ 1x2°+ മമ്മ 0x2? മ്മ്‌
64+32+2

: cies

പട്ടിക 2.2 ല്‍ രണ്ടിന്റെ 10 വരെയുള്ള കൃത്യങ്കങ്ങള്‍ കൊടുത്തിരിക്കുന്നു.

1024] 522]

പട്ടിക 2.2 OMIT A) YB60B00

ബൈയറഠി ഭിന്നകങ്ങള്‍ ദശസംഖ്യയിലേക്ക്‌ പരിവര്‍ത്തനം ചെയ്യല്‍

ഒരു ബൈനറി ഭിന്നസംഖ്യ ദശസംഖ്യയിലേക്ക്‌ മാറ്റുന്നതിന്‌, ഓരോ അക്കത്തിനെയും അതിന്റെ
സ്ഥാനവില കൊണ്ടു ക്രമമായി ഗുണിച്ച്‌ തുക കണ്ടാല്‍ മതി. ബൈനറി അംശബിന്ദുവിന്‌ ശേഷമുള്ള
അക്കത്തിന്റെ സ്ഥാനവില 2 ന്റെ നെഗറ്റീവ്‌ കൃത്യങ്കം ആയിരിക്കും (2, 2, 2, ...)

ഉദാഹരണങ്ങള്‍:

(0.1011), നെ ദശസംഖ്യയിലേക്ക്‌ മാറ്റുക.

_ബൈനറിഅകം |! [0111

(0.1011), = 1x21+0x2*+ 1x2°+ 1x24
= 0.5 + 0 + 0.125+0.0625

(0.101),നെ ദശസംഖ്യയിലേക്ക്‌ മാറ്റുക.

[eames 11]

(010), മമ്മി
=0.5 + 0+0.125
= 0.625

(1010.11), നെ ദശസംഖ്യയിലേക്ക്‌ മാറ്റുക.

_ബൈനറിഅക്കം [1 01111
| (൫൫ ൫ ഒന്നാം വര്‍ഷ കമ്പ്യുട്ടര്‍ സയന്‍സ്‌ 2. ഡാറ്റയുടെ പ്രതിനിധാനവും ബൂളിയന്‍ ബീജഗണിതവും

(1010, = 1x2? + 0x2?+ 1x2! + 0x2?
=8+042+40
= 10 (1010), = (10),
(0.11), = 1x2'+ 1x2? monomaile: (Weight) 21 2°

= 0.5 + 0.25
= 0.75 (0.11), =(0.75),,

പട്ടിക 2.3 ല്‍ രണ്ടിന്റെ നെഗറ്റീവ്‌ കൃത്യങ്കങ്ങള്‍ കാണിച്ചിരിക്കുന്നു.

പട്ടിക 2.3 ഞ്ഞിമ്റെ anagia’ കൃതൃത്കങ്ങള്‍

2.2.5 ഒക്ടല്‍ സംഖ്യയില്‍ നിന്ന്‌ ദശസംഖ്യയിലേക്കുള്ള പരിവര്‍ത്തനം

(Octal to decimal conversion)

ഒക്ടല്‍ സംഖ്യയെ ദശസംഖ്യയിലേക്കു മാറ്റുന്നതിന്‌, 8G സംഖ്യയിലെ ഓരോ അക്കത്തിനെയും,
അതിന്റെ സ്ഥാനവില കൊണ്ടു ക്രമമായി ഗുണിച്ച്‌ തുക കണ്ടാല്‍ മതി. സ്ഥാനവില 8 ന്റെ കൃത്യങ്കം
ആയിരിക്കും (8°, 81, 87, 85, ...).

ഉദാഹരണങ്ങള്‍:

(257), നെ ദശസംഖ്യയിലേക്കു മാറ്റുക.

സ്ഥാനവില (Weight) |e 81 8° |
(257), = 2x8? + 5x8! + 7x8"
= 128+ 40+7

(157), നെ ദശസംഖ്യയിലേക്കു മാറ്റുക.

moon we] eT

(൫൫ ൫ ഒന്നാം വര്‍ഷ കമ്പ്യൂട്ടര്‍ സയന്‍സ്‌ 2. ഡാറ്റയുടെ പ്രതിനിധാനവും ബൂളിയന്‍ ബീജഗണിതവും

നൃ = 1x8? + 5x8!+ 7x8"
= 64 +40 +7

(1005), നെ ദശസംഖ്യയിലേക്കു മാറ്റുക.

(1005), = 1x8° + 0x8?+ 0x8!+ 5x8?
= 51245

2.2.6 ഹെകസാഡെസിമല്‍ സംഖ്യയില്‍ നിന്ന്‌ ദശസംഖ്യയിലേക്കറുള്ള
പരിവര്‍ത്തനം (Hexadecimal to decimal conversion)

DANA MIOWAIAG സംഖ്യയെ ദശസംഖ്യയിലേക്കു മാറ്റുന്നതിന്‌, ഹെക്സാഡെസിമല്‍
സംഖ്യയിലെ ഓരോ അക്കത്തിനെയും, അതിന്റെ സ്ഥാനവില കൊണ്ടു ക്രമമായി ഗുണിച്ച്‌ തുക
കണ്ടാല്‍ മതി. സ്ഥാനവില 16 ന്റെ കൃത്യങ്കം ആയിരിക്കും (16°, 161, 167, ...). ഹെക്സാഡെസിമല്‍
അക്കങ്ങള്‍ A, B,C, D, 1, F ആണെങ്കില്‍ അത്‌ യഥാക്രമം 10, 11, 12, 13, 14, 15 എന്നിങ്ങനെ മാറ്റി
എഴുതണം.

ഉദാഹരണങ്ങള്‍:

(൮), നെ ദശസംഖ്യയിലേക്കു മാറ്റുക.

സ്ഥാന വില (നലല) 16!

(AB), = 10x16'+11x16° A=10 B= 11

= 160+ 11
=171

ഉദാഹരണങ്ങള്‍: (215), നെ ദശസംഖ്യയിലേക്കു മാറ്റുക.

സ്ഥാന വില (Weight)

ഹെക്സാഡെസിമല്‍ അക്കം

| (൫൫ ൫ ഒന്നാം വര്‍ഷ കമ്പ്യുട്ടര്‍ സയന്‍സ്‌ 2. ഡാറ്റയുടെ പ്രതിനിധാനവും ബൂളിയന്‍ ബീജഗണിതവും

(2D5),, = 2x16*+13x16'+5x16°

= 512+208+5
= 725

2.2.7 ഒക്ടലില്‍ നിന്‌ ബൈനറിയിലേക്കുള്ള പരിവര്‍ത്തനം
(Octal to binary conversion)

ഓരോ BAGS അക്കവും തത്തുല്യമായ 3 ബിറ്റ്‌ ബൈനറി അക്കത്തിലേക്ക്‌ മാറ്റി എഴുതിയാല്‍ ഒകടല്‍
സംഖ്യ ബൈനറി സംഖ്യയായി പരിവര്‍ത്തനം ചെയ്യാനാകും. സാധ്യമായ എട്ട്‌ ഒക്ടല്‍ അക്കങ്ങളും
അവയുടെ തത്തുല്യ ബൈനറി അക്കങ്ങളും പട്ടിക 2.4 ല്‍ നല്‍കിയിരിക്കുന്നു.

പട്ടിക 2.4 കെല്‍ അക്കങ്ങളുടെ തത്തുല്ുമാമ ബൈനറി ൯ംലു/ക൪.

ഉദാഹരണങ്ങള്‍:
(437), നെ ബൈനറിയിലേക്കു മാറ്റുക.

ഓരോ BAG അക്കത്തിനും തുല്യമായ 3 ബിറ്റ്‌ ബൈനറി അക്കങ്ങള്‍ താഴെക്കൊടുത്തിരിക്കുന്നു.

4 3 7
L V L
100 011 111

(7201), നെ ബൈനറിയിലേക്കു മാറ്റുക.

ഓരോ BAG അക്കത്തിനും തുല്യമായ 3 ബിറ്റ്‌ ബൈനറി അക്കങ്ങള്‍ താഴെക്കൊടുത്തിരിക്കുന്നു.

7 2 0 1
L V L V
111 010 000 001

2.2.8 ഹെകസാഡെസിമലില്‍ നിന്ന്‌ ബൈനറിയിലേക്കറുള്ള പരിവര്‍
ത്തനം (Hexadecimal to binary conversion)

ഓരോ ഹെക്്‌സാഡെസിമല്‍ അക്കവും തത്തുല്യമായ 4 ബിറ്റ്‌ ബൈനറി ആക്കി മാറ്റി എഴുതിയാല്‍
ഹെക്സാഡെസിമല്‍ സംഖ്യ ബൈനറിയായി പരിവര്‍ത്തനം ചെയ്യാനാകും. ഹെക്സാഡെസിമല്‍
അക്കങ്ങളും അവയ്ക്കു തുല്യമായ ബൈനറി അക്കങ്ങളും പട്ടിക 2.5 ല്‍ നല്‍കിയിരിക്കുന്നു.
(൫൫ ൫ ഒന്നാം വര്‍ഷ കമ്പ്യൂട്ടര്‍ സയന്‍സ്‌ 2. ഡാറ്റയുടെ പ്രതിനിധാനവും ബൂളിയന്‍ ബീജഗണിതവും

ഉദാഹരണങ്ങള്‍: തുല്യമായ
(AB), പ നെ ബൈനറിയിലേക്കു മാറ്റുക. ബൈനറി
ഓരോ ഹെക്‌സാഡെസിമല്‍ അക്കത്തിനും തുല്യമായ 4 ബിറ്റ്‌
ബൈനറി അക്കങ്ങള്‍ താഴെക്കൊടുത്തിരിക്കുന്നു.

A B
ട്‌ ട്‌
1010 1011

(൮15) നെ ബൈനറിയിലേക്കു മാറ്റുക
ഓരോ ഹെക്്‌സാഡെസിമല്‍ അക്കത്തിനും തുല്യമായ 4 ബിറ്റ്‌
ബൈനറി അക്കങ്ങള്‍ താഴെക്കൊടുത്തിരിക്കുന്നു.

2 F 1 5
+ \ ഈ \
0010 1111 0001 0101

2.2.9 ബൈനറിയില്‍ നിന്നും ഒക്ടലിലേക്കുടുള്ള

പരിവര്‍ത്തനം (Binary to octal conversion)
തന്നിരിക്കുന്ന ബൈനറി സംഖ്യ വലത്തു നിന്ന്‌ ഇടത്തേക്ക്‌ 3
ബൈനറി ബിറ്റുകളുടെ കൂട്ടങ്ങളാക്കി അതിന്റെ തത്തുല്യമായ
ഒകൂല്‍ അക്കം എഴുതിയാല്‍ ഒരു ബൈനറി സംഖ്യ ഒക്ടല്‍ സംഖ്യ
യിലേക്കു പരിവര്‍ത്തനം ചെയ്യാം. മൂന്നിന്റെ കൂട്ടങ്ങള്‍ ആക്കുമ്പോള്‍ പിക 25 ഫെക്ര്ധാദ്ധദ്ധ്മല്‍

റ അക്കങ്ങളുടെ തത്തുലുമാമ

ഏറ്റവും ഇടത്‌ വശത്തെ കൂട്ടത്തില്‍ 3 ബിറ്റുകള്‍ തികയുന്നില്ലെങ്കില്‍ ബൈനറി അക്കങ്ങള്‍
ഇടത്‌ വശത്ത്‌ ആവശ്യമായ പൂജ്യങ്ങള്‍ കൊടുത്ത്‌ 3 ബിറ്റ്‌
രൂപത്തില്‍ ആക്കണം.

ഉദാഹരണങ്ങള്‍:
(101100111), നെ ഒക്ടലിലേക്കു മാറ്റുക.

ബൈനറി സാംഖ്യ 101100111 ന്റെ വലതുഭാഗത്ത്‌ നിന്ന്‌ ചുവടെ കാണിച്ചിരിക്കുന്നതുപോലെ

കൂട്ടങ്ങളാക്കാം.
101 100 111
L L 1
5 4 7

(10011000011), നെ ഒക്ടലിലേക്കു മാറ്റുക.
| (൫൫ ൫ ഒന്നാം വര്‍ഷ കമ്പ്യുട്ടര്‍ സയന്‍സ്‌ 2. ഡാറ്റയുടെ പ്രതിനിധാനവും ബൂളിയന്‍ ബീജഗണിതവും

ബൈനറി സംഖ്യ 10011000011 ന്റെ വലതുഭാഗത്ത്‌ നിന്ന്‌ ചുവടെ കാണിച്ചിരിക്കുന്നതു പോലെ
കൂട്ടങ്ങളാക്കാം.

010 011 000 011
ഈ \ \ ഈ
2 3 0 3

കൂട്ടങ്ങളാക്കിയശേഷം
ഏറ്റവും DSC} ഭാഥത്തെ കൂട്ട
ത്തില്‍ 3 ബിറ്റുകള്‍ ഉല്ലെങ്കില്‍
ആവശ്യമായ 0 ചേര്‍ത്ത്‌ 3

ബിറ്റുകര്‍ ആക്കുക.

2.2.10 ബൈനറിയില്‍ നിന്‌ ഹെകസാഡെസിമലിലേക്കുള്ള പരിവര്‍

ത്തനം (Binary to hexadecimal conversion)
തന്നിരിക്കുന്ന ബൈനറി സംഖ്യ വലത്തു നിന്ന്‌ ഇടത്തേക്ക്‌ 4 ബൈനറി ബിറ്റുകളുടെ കൂട്ടങ്ങളാക്കി
അതിന്റെ തത്തുല്യമായ ഹെക്സാഡെസിമല്‍ അക്കം എഴുതിയാല്‍ ഒരു ബൈനറി സംഖ്യയെ
ഹെക്സാഡെസിമല്‍ സംഖ്യയിലേക്കു പരിവര്‍ത്തനം ചെയ്യാം. നാലിന്റെ കൂട്ടങ്ങള്‍ ആക്കുമ്പോള്‍
ഏറ്റവും ഇടത്‌ വശത്തെ കൂട്ടത്തില്‍ 4 ബിറ്റുകള്‍ തികയുന്നില്ലെങ്കില്‍ ഇടത്‌ വശത്ത്‌ ആവശ്യമായ
പൂജ്യങ്ങള്‍ കൊടുത്ത്‌ 4 ബിറ്റ്‌ രൂപത്തില്‍ ആക്കണം.
ഉദാഹരണങ്ങള്‍:
(101100111010), നെ ഹെക്്‌സാഡെസിമലിലേക്കു മാറ്റുക.

ബൈനറി സംഖ്യ 101100111010 ന്റെ വലതുഭാഗത്ത്‌ നിന്ന്‌ ചുവടെ കാണിച്ചിരിക്കുന്നതുപപോലെ

കുട്ടങ്ങളാക്കാം.
1011 0011 1010
L ട്‌ L
B 3 A

(110111100001100), നെ ഹെക്‌സാഡെസിമലിലേക്കു മാറ്റുക.

ബൈനറി സാഖ്യ 110111100001100 ന്റെ വലതുഭാഗത്ത്‌ നിന്ന്‌ ചുവടെ കാണിച്ചിരിക്കുന്നതു
പോലെ കൂട്ടങ്ങളാക്കാം.

കൂട്ടങ്ങളാക്കിയശേഷം
ഏറ്റവും DSO ദാനത്തെ കൂട്ടത്തില്‍ 4
ബിറ്റുകള്‍ ഉല്ലെങ്കില്‍ ആവശ്യമായ 0
ചേര്‍ത്ത്‌ 4 ബിറ്റുകള്‍ ആക്കുക.

2.2.11 ഒകടലില്‍ നിന്ന്‌ ഹെകസാഡെസിമലിലേക്കറുള്ള പരിവര്‍ത്തനം.

(Octal to Hexadecimal conversion)

ഒക്ടല്‍ സംഖ്യയില്‍ നിന്ന്‌ ഹെക്‌സാഡെസിമല്‍ സംഖ്യയിലേക്ക്‌ മാറ്റുന്നതിന്‌ രണ്ട്‌ ഘട്ടങ്ങള്‍ ഉണ്ട്‌.
ആദ്യം BACB സംഖ്യ ബൈനറിയായി പരിവര്‍ത്തനം ചെയ്യുക. ഈ ബൈനറി സംഖ്യ തത്തുല്യമായ
ഹെക്്‌സഡെസിമല്‍ സംഖ്യയിലേക്കു മാറ്റുക.
൫൫) ഒന്നാം വര്‍ഷ കമ്പ്യൂട്ടി സയന്‍സ്‌ 2. ഡാറ്റയുടെ പ്രതിനിധാനവും ബൂളിയന്‍ ബീജഗണിതവും

ഉദാഹരണം:
(457), നെ ഹെക്‌സാഡെസിമലിലേക്കു മാറ്റുക.

ഘട്ടം 1. (45) നെ ബൈനറിയിലേക്കു മാറ്റുക.

(457,= 4 5 7
L L L
100 101 111
= (100101111),

ഘട്ടം 2. (100101111), നെ ഹെക്സാഡെസിമലിലേക്കു മാറ്റുക.
(100101111),നെ 4 ബിറ്റുകളുടെ കൂട്ടങ്ങളാക്കി മാറ്റുക.
(100101111), = 0001 0010 1111
L L L

= 1 2 F
= (12P),,

2.2.12 ഹെകസാഡ്െസിമലില്‍ നിന്ന്‌ ഒക്ടലിലേക്കുള്ള പരിവര്‍ത്തനം
(Hexadecimal to Octal conversion)

ഹെക്സാഡെസിമല്‍ സംഖ്യയില്‍ നിന്ന്‌ ഒക്ടല്‍ സംഖ്യയിലേക്ക്‌ മാറ്റുന്നതിന്‌ രണ്ട്‌ ഘട്ടങ്ങള്‍ ഉണ്ട്‌.
ആദ്യം ഹെക്്‌സാഡെസിമല്‍ സംഖ്യ ബൈനറിയായി പരിവര്‍ത്തനം ചെയ്യുക. ഈ ബൈനറി
സാംഖ്യ തത്തുല്യമായ ഒകൂല്‍ സംഖ്യയിലേക്കു മാറ്റുക...

ഉദാഹരണം:
(൧2൧), നെ ഒക്ടലിലേക്കു മാറ്റുക.

ഘട്ടം 1. (൧212), നെ ബൈനറിയിലേക്കു മാറ്റുക.

(A2D),, = A 2 D
L L 1
1010 0010 1101
= (101000101101),

ഘട്ടം 2. (101000101101), നെ ഒക്ടലിലേക്കു മാറ്റുക.
(101000101101), നെ 3 ബിറ്റുകളുടെ കൂട്ടങ്ങളാക്കി മാറ്റുക.

(101000101101), = 101 000 101 101
പൂം പൂം പം
5 0 5 5
= (5055),
2. ഡാറ്റയുടെ പ്രതിനിധാനവും ബുളിയന്‍ ബീജഗണിതവും

പട്ടിക 2.6 ല്‍ വിവിധ സംഖ്യാ പരിവര്‍ത്തനങ്ങളുടെ നടപടിക്രമങ്ങള്‍ കാണിച്ചിക്കുന്നു.

സംഖ്യ പരിവര്‍ത്തനം നടപടിക്രമം
ദശസംഖ്യയി a on തുടര്‍ച്ചയായി 2 കൊണ്ട്‌ ഹരിച്ച്‌ ശിഷ്ടങ്ങള്‍ കൂട്ടങ്ങളാക്കുക.
ബൈനറിയിഃ

ഈം നി
സംഖ്യയില്‍ നിന്ന്‌
|_ഫെട്സാവെനിടിടേക്‌ |

ബൈനറിയില്‍ റ്‌ ബൈനറി സംഖ്യയിലെ ഓരോ അക്കത്തിന്റെയും സ്ഥാനവില (2 ന്റെ കൃത്യങ്കം) കൊണ്ടു
ദശസംഖ്യയിലേ ക്രമമായി ഗുണിച്ച്‌ തുക കാണുക.

ക്രെലില്‍ BHO സംഖ്യയിലെ ഓരോ അക്കത്തിന്റെയും സ്ഥാനവില (8 ന്റെ കൃത്യങ്കം) കൊണ്ടു
ദശസംഖ്യ a, ക്രമമായി ഗുണിച്ച്‌ തുക കാണുക.

ഹെക്‌സാഡെസിമലില്‍ ഫഹെക്‌സാഡ്െസിമല്‍ സംഖ്യയിലെ ഓരോ അക്കത്തിന്റെയും സ്ഥാനവില (16 ന്റെ കൃത്യങ്കം)
നിന്ന്‌ ദശനസംബ്യയിടേക്ക്‌ കൊണ്ടു ക്രമമായി നൂണിച്ച്‌ തുക കാണുക.

ക്ലെലില്‍ നിന്ന്‌ ഓരോ ഒക്ടല്‍ അക്കവും 3 ബിറ്റ്‌ ബൈനറി സംഖ്യ ആയി പരിവര്‍ത്തനം ചെയ്യുക.
ബൈനറിയിലേക്ക്‌

ഹെക്‌സാഡെസിലലില്‍ ഓരോ ഹെക്‌സാഡെസിധല്‍ അക്കവും 4 ബിറ്റ്‌ ബൈനറി സംഖ്യ ആയി പരിവര്‍ത്തനം
നിന്ന്‌ ബെനറിയിലേക്ക്‌ ചെയ്യുക.

ക്ലെലില്‍ നിന്ന്‌ BHAAM ബൈനറിയിലേക്കും തുടര്‍ന്ന്‌ ബൈനറിയില്‍ നിന്ന്‌ ഹെക്സാഡെസിമലി
ഹെക്സാഡെസിമലിലേക്ക്‌ ലേക്കും മാറ്റുക.
ഹെക്സാഡെസിലലില്‍ ഹെക്‌സാഡെസിമലിനെ ബൈനറിയിലേക്കും തുടര്‍ന്ന്‌ ബൈനറിയില്‍ നിന്ന്‌ ഒക്ടലി
നിന്ന്‌ ഒക്ടലിലേക്ക്‌ ലേക്കും മാറ്റുക.

ATA 2.6 വിവിധ MY പരിവര്‍ത്തനങ്ങളുടെ നപടിക്രഥങ്ങള്‍

സ്വയം വിലയിരുത്താം

31 എന്ന ദശസംഖ്യ ബൈനറിയിലേക്കു മാറ്റുക.
(10001), നു തത്തുല്യമായ ദശസംഖ്യ കണ്ടുപിടിക്കുക.
(x), = (101011),, ആയാല്‍ ന്റെ വില കാണുക.

വിട്ട ഭാഗം പൂരിപ്പിക്കുക.

ay(_____), = ഷ്ടം,
b)(__D_),, = (1010 1000),
9 0.25, = ( ),
ട്‌ താഴെ കൊടുത്തിരിക്കുന്ന സംഖ്യകളില്‍ ഏറ്റവും വലിയ സാംഖ്യ കണ്ടുപിടിക്കുക.
(@ (1001), Gi) (A),, Gii) 10), Gv) 1),
(൫൫ ൫ ഒന്നാം വര്‍ഷ കമ്പ്യൂട്ടര്‍ സയന്‍സ്‌ 2. ഡാറ്റയുടെ പ്രതിനിധാനവും ബൂളിയന്‍ ബീജഗണിതവും

2.3 ബൈനറി അരിത്തമറ്റിക്‌

ദശസംഖ്യാ സ്ര്പദായത്തിലുള്ളത്‌ പോലെ ദ്വയയസാഖ്യാ സ്ര്പദായത്തിലും ഗണിത ക്രിയകള്‍
ചെയ്യാം. നമ്മള്‍ രണ്ട്‌ ദശസംഖ്യകള്‍ കമ്പ്യൂട്ടറില്‍ സങ്കലനം (addition) ചെയ്യാന്‍ നിര്‍ദേശം
നല്‍കുമ്പോള്‍, കമ്പ്യൂട്ടര്‍ അതിന്റെ തുല്യമായ ബൈനറി സംഖൃകള്‍ ആണ്‌ കൂട്ടുന്നത്‌. ബൈനറി
സംഖ്യകളുടെ സങ്കലനവും (addition) വ്യവകലനവും (subtraction) എങ്ങനെയാണ്‌ ചെയ്യുന്നത്‌
എന്ന്‌ നമുക്ക്‌ നോക്കാം.

2.3.1 ബൈനറി സംഖ്യകളുടെ സങ്കലനം (Binary addition)

രണ്ട്‌ ബിറ്റുകള്‍ കൂട്ടുവാനുള്ള നിയമങ്ങള്‍ താഴെ കൊടുത്തിരിക്കുന്നു.

ഒന്നും ഒന്നും കൂട്ടുമ്പോള്‍ മഠ്രതമാണ്‌ ശിഷ്ട (ക്യാരി) ബിറ്റ്‌ 1 ഉണ്ടാകുന്നത്‌ എന്ന്‌ ശ്രദ്ധിക്കുക.
മൂന്നു ഒന്നുകള്‍ കൂട്ടുമ്പോള്‍ (1+1+1) തുക 1 ഉം ശിഷ്ടം (ക്യാരി) ബിറ്റ്‌ 1 ഉം കിട്ടുന്നു.

ഉദാഹരണങ്ങള്‍: ബൈനറി സംഖ്യകളായ 110111 ന്റെയും
ബൈനറി സംഖ്യകളായ 1011 ന്റെയും 1001 | 100110 ന്റെയും തുക കണ്ടുപിടിക്കുക.
ന്റെയും തുക കണ്ടുപിടിക്കുക. 110111 +
1011+ 100110
1001 1011101
10100

2.3.2 ബൈനറി സംഖ്യകളുടെ വ്യവകലനം (Binary subtraction)
ഒരു ബൈനറി ബിറ്റില്‍ നിന്ന്‌ മറ്റൊരു ബൈനറി ബിറ്റ്‌ കുറയ്ക്കുവാനുള്ള നിയമം താഴെ
കൊടുത്തിരിക്കുന്നു.

Febwiceccss
000 |
po fai] |
po | ot

0 |

2. ഡാറ്റയുടെ പ്രതിനിധാനവും ബുളിയന്‍ ബീജഗണിതവും

0 ല്‍ നിന്ന്‌ 1 കുറച്ചാല്‍ വൃത്യാസം | ആണ്‌, എന്നാല്‍ ആദ്യത്തെ ബിറ്റിന്റെ ഇടതു ഭാഗത്ത്‌
തൊട്ടടുത്തുള്ള ബിറ്റില്‍ നിന്ന്‌ 1 കടമെടുക്കുന്നു. വലിയ ബൈനറി സംഖ്യയില്‍ നിന്ന്‌ ഒരു ചെറിയ
ബൈനറി സംഖ്യ കുറയ്ക്കുവാന്‍ മാ്രമേ മേല്‍പ്പറഞ്ഞ നിയമങ്ങള്‍ ഉപയോഗിക്കുവാന്‍

സാധിക്കുകയുള്ളു.
ഉദാഹരണങ്ങള്‍: (10111), ഇല്‍ നിന്നും (101000),.
(10101), ഇല്‍ നിന്നും (11111). 101000 -
11111- 20111
10101 10001
01010

2.4 ഡാറ്റയുടെ പ്രതിനിധാനം (Data representation)

സംഖ്യകള്‍, അക്ഷരങ്ങള്‍, all Mess, ശബ്ദങ്ങള്‍, വീഡിയോകള്‍ തുടങ്ങിയ ഡാറ്റയെ
കമ്പ്യൂട്ടറുകളില്‍ നിശ്ചിത ബിറ്റുകളുടെ കൂട്ടങ്ങളായിട്ടാണ്‌ പ്രതിനിധാനം ചെയ്യുന്നത്‌. എന്നിരുന്നാലും
എല്ലാതരം ഡാറ്റകളെയും കമ്പ്യൂട്ടര്‍ പ്രതിനിധാനം ചെയ്യുന്നതും പ്രോസസ്സ്‌ ചെയ്യുന്നതും നിശ്ചിത
എണ്ണം ബിറ്റുകളായിട്ടാണ്‌. ഒരു കമ്പ്യൂട്ടറില്‍ ആന്തരികമായി ഡാറ്റയെ പ്രതിനിധീകരിക്കുന്നതിന്‌
ഉപയോഗിക്കുന്ന രീതിയാണ്‌ ഡാറ്റ പ്രതിനിധാനം. കമ്പ്യൂട്ടറിന്റെ മെമ്മറിയില്‍ വ്ൃത്ൃയസ്ത
തരത്തിലുള്ള ഡാറ്റ എങ്ങനെ പ്രതിനിധീകരിക്കുന്നു എന്ന്‌ നമുക്ക്‌ നോക്കാം.

2.4.1 സംഖ്യകളുടെ പ്രതിനിധാനം (Representation of numbres)

സംഖ്യകളെ പൂര്‍ണസംഖൃകള്‍, ദശാംശസംഖ്യകള്‍ എന്നിങ്ങനെ രണ്ടായി തിരിക്കാം.
പൂര്‍ണസംഖ്യകള്‍ ഭിന്നസംഖ്യാ ഭാഗം ഇല്ലാത്ത സംഖ്യകള്‍ ആകുന്നു. ദശാംശസാഖ്യ (Floating
Point Number) അല്ലെങ്കില്‍ രേഖീയസംഖ്യ ഭിന്നകഭാഗത്തോട്‌ കൂടിയ സംഖ്യ ആകുന്നു. ഈ
രണ്ടു സംഖ്യകളെയും കമ്പ്യൂട്ടറിന്റെ മെമ്മറിയില്‍ വൃതൃസ്തമായിട്ടാണ്‌ കൈകാര്യം ചെയ്യുന്നത്‌.
പൂര്‍ണസംഖ്യകള്‍ എങ്ങനെയാണ്‌ മെമ്മറിയില്‍ പ്രതിനിധാനം ചെയ്യുന്നത്‌ എന്ന്‌ നമുക്ക്‌ നോക്കാം.

ഒ. പമൂര്‍ണസംഖ്യകളുടെ പ്രതിനിധാനം (Representation of integers)

ഒരു പൂര്‍ണ സംഖ്യ കമ്പ്യൂട്ടറിന്റെ മെമ്മറിയില്‍ പ്രതിനിധീകരിക്കുന്നത്‌ മൂന്ന്‌ രീതിയിലാണ്‌.

1) ചിഹനവും മൂല്യവും കൊണ്ടുള്ള പ്രതിനിധാനം (Sign and magnitude representation)
11) 1 ന്റെ പൂരകം കൊണ്ടുള്ള പ്രതിനിധാനം (15 complement representation)

111) 2 ന്റെ പുരകം കൊണ്ടുള്ള പ്രതിനിധാനം (2’s complement representation)

കമ്പ്യൂട്ടര്‍ പ്രോസസ്സര്‍ ഒരു യൂണിറ്റായി കൈകാര്യം ചെയ്യുന്ന നിശ്ചിത വ്യാപ്തിയിലുള്ള ഒരു
കൂട്ടം ബിറ്റുകളെയാണ്‌ പദം (Word) എന്ന്‌ പറയുന്നത്‌. ഒരു പദത്തിലെ ബിറ്റുകളുടെ എണ്ണത്തെ
പദദൈര്‍ഘ്യം (Word length) എന്ന്‌ പറയുന്നു. കമ്പ്യൂട്ടര്‍ രൂപകല്‍പ്പന ചെയ്യുന്ന വിദഗ്ധരാണ്‌
അതിന്റെ പദദൈര്‍ഘ്യം തീരുമാനിക്കുന്നത്‌. 8, 16, 32, 64 എന്നിവ സാധാരണയായി നിലവിലുള്ള
DOO ഒന്നാം വര്‍ഷ കമ്പ്യൂട്ടര്‍ സയന്‍സ്‌ 2. ഡാറ്റയുടെ പ്രതിനിധാനവും ബൂളിയന്‍ ബീജഗണിതവും

ചില പദദൈര്‍ഘ്യങ്ങളാണ്‌. പദങ്ങള്‍ ബിറ്റുകളുടെ കൂട്ടമായതുകൊണ്ട്‌ പദദൈര്‍ഘ്യം രണ്ടിന്റെ
AOSHI ആയിരിക്കും.

ഇനി ഡാറ്റയെ പ്രതിനിധാനം ചെയ്യുന്ന രീതികള്‍ (8 ബിറ്റ്‌ പദദൈര്‍ഘ്യത്തെ അടിസ്ഥാനമാക്കി?)
വിശദമായി പരിശോധിക്കാം.
3. ചിഹ്നവും മുല്യവും കൊണ്ടുള്ള പ്രതിനിധാനം (Sign and magnitude representation)

ഈ രീതിയില്‍, ഇടതുഭാഗത്തെ ആദ്യത്തെ ബിറ്റ്‌ (14513) പൂര്‍ണസംഖ്യയുടെ ചിഹ്നത്തെയും
ബാക്കിയുള്ള 7 ബിറ്റുകള്‍ സംഖ്യയുടെ മൂല്യത്തെയും പ്രതിനിധാനം ചെയ്യുന്നു. ചിഹ്നത്തെ
പ്രതിനിധാനം ചെയ്യുന്ന ബിറ്റ്‌ 1 ആണെങ്കില്‍ അത്‌ നെഗറ്റീവ്‌ പൂര്‍ണസംഖ്യയും 0 ആണെങ്കില്‍
പോസിറ്റീവ്‌ പൂര്‍ണസംഖ്യയുമായിരിയ്ക്കും.

ഉദാഹരണങ്ങള്‍:

23 നെ ചിഹവും മൂല്യവും ഉപയോഗിച്ച്‌
പ്രതിനിധാനം ചെയ്യുക. ചിഹ്നം മൂല്യം -ം

സംഖ്യ പോസിറ്റീവ്‌ ആയതിനാല്‍ ഒന്നാമത്തെ ബിറ്റ്‌
(MSB) 0 ആകുന്നു.

23 ന്‌ തുല്യമായ 7 ബിറ്റ്‌ ബൈനറി സംഖ്യ (0010111),

അതുകൊണ്ട്‌ +23 നെ (00010111), കൊണ്ട്‌
പ്രതിനിധീകരിക്കാം.

-105 നെ ചിഹ്നവും മൂല്യവും രൂപത്തില്‍ പ്രതിനിധാനം
ചെയ്യുക ചിഹ്നം മുല്യം -ം

സംഖ്യ നെഗറ്റീവ്‌ ആയതിനാല്‍ ഒന്നാമത്തെ ബിറ്റ്‌
(MSB) 1 ആകുന്നു.
7 ബിറ്റ്‌ ബൈനറി സംഖ്യ 105 = (1101001),

-105 ന്‌ തുല്യമായ 7 ബിറ്റ്‌ ബൈനറി സംഖ്യ, - (11101001),
അതിനാല്‍ -105 നെ (11101001), കൊണ്ട്‌ പ്രതിനിധീകരിക്കാം

കുറിപ്പ്‌ : ഈ രീതിയില്‍ 8 ബിറ്റ്‌ പദം കൊണ്ട്‌ 2°-1 =255 സംഖ്യകള്‍ പ്രതിനിധാനം ചെയ്യാന്‍
കഴിയുന്നു. സംഖ്യകള്‍ -(27 - 1) മുതല്‍ “(27 - 1) വരെ ആയിരിക്കും. (അതായത്‌ -127 മുതല്‍ +127
വരെ). അതുപോലെ 16 ബിറ്റ്‌ പദം കൊണ്ട്‌ 26 - 1 - 65535 സംഖ്യകള്‍ പ്രതിനിധാനം ചെയ്യാനും
കഴിയുന്നു (അതായത്‌ -32767 മുതല്‍ 32767 വരെ). പൊതുവായി, 7? ബിറ്റ്‌ പദം കൊണ്ട്‌ 27-1
സംഖ്യകള്‍ പ്രതിനിധാനം ചെയ്യാന്‍ കഴിയും (അതായത്‌ —(2"!-1) മുതല്‍ +(27!-1). വരെ).
പൂര്‍ണസംഖ്യയായ പുജ്യത്തെ +0 = 00000000 എന്നും 0 = 10000000 എന്നും രണ്ട്‌ രീതിയില്‍
പ്രതിനിധാനം ചെയ്യാം.

14. 1 ന്റെ പുരകം കൊണ്ടുള്ള പ്രതിനിധാനം (1’s complement representation)

ഈ രീതിയില്‍, പൂര്‍ണസംഖ്യയുടെ കേവല വിലയ്ക്ക്‌ തത്തുല്യമായ 8 ബിറ്റ്‌ ബൈനറി സംഖ്യ
കണ്ടുപിടിക്കുന്നു. ബൈനറി സംഖ്യയ്ക്ക്‌ 8 ബിറ്റുകള്‍ ഇല്ലെങ്കില്‍ ഇടതുവശത്ത്‌ ആവശ്യമായ പൂജ്യം
ചേര്‍ത്ത്‌ 8 ബിറ്റ്‌ സംഖ്യ ആക്കുക. സംഖ്യയിലെ ഓരോ പൂജ്യത്തിനും പകരം ഒന്ന്‌ എന്നും ഓരോ
(൫൫൫ ഒന്നാം വര്‍ഷ കമ്പ്യുട്ടര്‍ സയന്‍സ്‌ 2. ഡാറ്റയുടെ പ്രതിനിധാനവും ബൂളിയന്‍ ബീജഗണിതവും

ഒന്നിന്‌ പകരം പൂജ്യം എന്നും മാറ്റി എഴുതിയാല്‍ ആ സംഖ്യയുടെ 1 ന്റെ പൂരകം ലഭിക്കും. ചില
ബൈനറി സംഖ്യകളും അവയുടെ 1003 പൂരക പ്രതിനിധാനങ്ങളും താഴെ കൊടുത്തിരിക്കുന്നു.

പൂര്‍ണസാഖ്യ ബൈനറി സാഖ്യ ന്റെ പുരക പ്രതിനിധാനം

+25 00011001 00011001
-25 00011001 11100110

സാംഖ്യ നെഗറ്റീവ്‌ ആണെങ്കില്‍ അതിന്റെ തത്തുല്യമായ 8 ബിറ്റ്‌ ബൈനറി രൂപത്തെ | ന്റെ
പൂരകമായി പ്രതിനിധീകരിക്കുന്നു. എന്നാല്‍ സംഖ്യ പോസിറ്റീവ്‌ ആണെങ്കില്‍ സംഖ്യയുടെ 8
ബിറ്റ്‌ പ്രതിനിധാനവും | ന്റെ പൂരക പ്രതിനിധാനവും ഒരു പോലെയായിരിക്കും.

ഉദാഹരണങ്ങള്‍: -

119 നെ 1 ന്റെ പൂരക രൂപത്തില്‍ പ്രതിനിധാനം ചെയ്യുക.

119 ന്റെ 8 ബിറ്റ്‌ ബൈനറി രൂപം = (01110111),

-119 ന്റെ 1ന്റെ പൂരക പ്രതിനിധാന രൂപം = (10001000),
+119 നെ 1ന്റെ പൂരക രൂപത്തില്‍ പ്രതിനിധാനം ചെയ്യുക

119 ന്റെ 8 ബിറ്റില്‍ ഉള്ള ബൈനറി രൂപം = (01110111),

+119 ന്റെ 1ന്റെ പൂരക പ്രതിനിധാന രൂപം = (01110111),

(Mo പോസ്പിറ്റിവ്‌ ആയതിനാല്‍ 1 ന്റ്‌ പുരക ഗ്രതിനിഗാനം കണ്ടുഫിടിക്കേണ്ടതില്ല?

കുറിപ്പ്‌ : ഇത്തരം പ്രതിനിധീകരണത്തില്‍ ഒന്നാമത്തെ ബിറ്റ്‌ (MSB) 0 ആണെങ്കില്‍ സംഖ്യ
പോസിറ്റീവും MSB | ആണെങ്കില്‍ സംഖ്യ നെഗറ്റീവും ആയിരിക്കും. 8 ബിറ്റ്‌ പദദൈര്‍ഘ്യം കൊണ്ട്‌
-127 (10000000) മുതല്‍ +127 (01111111) വരെ പ്രതിനിധാനം ചെയ്യാന്‍ കഴിയുന്നു. ഈ
സംവിധാനത്തിലൂടെ പൂജ്യത്തിനെ +0 - 00000000 എന്നും -0- 11111111 എന്നും രണ്ട്‌ രീതിയില്‍
പ്രതിനിധാനം ചെയ്യാം. പൊതുവായി, 7 ബിറ്റ്‌ പദം കൊണ്ട്‌ 2-1 സംഖ്യകള്‍ പ്രതിനിധാനം
ചെയ്യാന്‍ കഴിയും (അതായത്‌ - (27 - 1) മുതല്‍ “(27 - 1) വരെ.

38. 2 ന്റെ പുരകം കൊണ്ടുള്ള പ്രതിനിധാനം (2’s complement representation)

ഈ രീതിയില്‍, പൂര്‍ണസംഖ്യയുടെ കേവലവിലയ്ക്ക്‌ തത്തുല്യമായ 8 ബിറ്റ്‌ ബൈനറി സംഖ്യ
കണ്ടുപിടിക്കുന്നു. സംഖ്യ നെഗറ്റീവ്‌ ആണെങ്കില്‍ 8 ബിറ്റ്‌ ബൈനറിയുടെ 2 ന്റെ പൂരകരൂപത്തില്‍
അതിനെ പ്രതിനിധാനം ചെയ്യുന്നു. എന്നാല്‍ സംഖ്യ പോസിറ്റീവ്‌ ആണെങ്കില്‍ 8 ബിറ്റ്‌ ബൈനറി
സംഖ്യ തന്നെയാണ്‌ അതിന്റെ 2 ന്റെ പൂരക പ്രതിനിധാനം. ഒരു ബൈനറി സംഖ്യയുടെ 1 ന്റെ പൂര
കത്തോട്‌ 1 കൂട്ടിയാല്‍ അതിന്റെ 2 ന്റെ പൂരകം കിട്ടുന്നു.

ഉദാഹരണമായി നമുക്ക്‌ (10101), ന്റെ 2 ന്റെ പൂരകം കണ്ടുപിടിക്കാം.

(00010101), ന്റെ 1 ന്റെ പൂരകം = (11101010),

(10101), ന്റെ 2 ന്റെ പൂരകം = 11101010 +
1

= (11011010),
Ove

2. ഡാറ്റയുടെ പ്രതിനിധാനവും ബുളിയന്‍ ബീജഗണിതവും

ഉദാഹരണങ്ങള്‍:

-38 നെ 2ന്റെ പൂരക രൂപത്തില്‍ പ്രതിനിധാനം ചെയ്യുക.

38 ന്റെ 8 ബിറ്റിലുള്ള ബൈനറി രൂപം = (00100110),
-38 ന്റെ 2 ന്റെ പൂരക പ്രതിനിധാനം = 11011001
1
= (11011010),
+38 നെ 2ന്റെ പൂരക രൂപത്തില്‍ പ്രതിനിധാനം ചെയ്യുക.
38 ന്റെ 8 ബിറ്റിലുള്ള ബൈനറി രൂപം = (00100110),
+38 ന്റെ 2 ന്റെ പുരക പ്രതിനിധാനം = (00100110), (സംഖ്യ പോസിറ്റീവ്‌

ആയതിനാല്‍ 2008 പൂരക പ്രതിനിധാനം കണ്ടുപിടിക്കേണ്ടതില്ല)

കുറിപ്പ്‌ : ഈ രീതിയില്‍ ഒന്നാമത്തെ ബിറ്റ്‌ (1513) 0 ആണെങ്കില്‍ സംഖ്യ പോസിറ്റീവും MSB 1
ആണെങ്കില്‍ സംഖ്യ നെഗറ്റീവും ആയിരിക്കും. ഇവിടെ പൂജ്യം എന്ന പൂര്‍ണസ്യ 00000000
എന്ന രീതിയില്‍ BOLDED പ്രതിനിധീകരിക്കുവാന്‍ കഴിയൂ. 8 ബിറ്റ്‌ പദം കൊണ്ട്‌ -128 (10000000)
മുതല്‍ +127 (01111111) വരെ പ്രതിനിധാനം ചെയ്യാന്‍ കഴിയുന്നു. പൊതുവായി, / ബിറ്റ്‌ പദം
കൊണ്ട്‌ 2" സംഖ്യകള്‍ പ്രതിനിധാനം ചെയ്യുവാന്‍ കഴിയും. സംഖ്യകള്‍ -(2"') മുതല്‍ (27 1-1).
വരെ ആകുന്നു. ഈ രീതിയാണ്‌ പൂര്‍ണസംഖ്യ പ്രതിനിധീകരിക്കുന്നതിന്‌ സര്‍വസാധാരണമായി
ഉപയോഗിക്കുന്നത്‌. പട്ടിക 2.7 ല്‍ പൂര്‍ണസംഖ്യകളെ 8 ബിറ്റ്‌ പദദൈര്‍ഘ്യത്തില്‍
പ്രതിനിധീകരിക്കുന്നതിനുള്ള വിവിധ രീതികള്‍ താരതമ്യം ചെയ്യുന്നു.

ത -127 മുതല്‍ +127 |-127 മുതല്‍ +127 |-128 മുതല്‍ +127 2 റെ പുരകത്തില്‍
പരിധി കൂടുതലാണ്‌

നന്ന ss

0 ന്റെ പ്രതിനിധാനം [2 രീതിയിലുള്ള 2 രീതിയിലുള്ള
പ്രതിനിധാനം പ്രതിനിധാനം
നിധീകരിക്കുന്നതിന്‌
ഒരു അവ്യക്തതയും
ല്ല.

പോസിറ്റീവ്‌ സംഖ്യയ്കട്‌ തുല്യമായ | സംഖ്യയ്ക്ക്‌ തുല്യമായ | സംഖ്യയ്ക്ക്‌ തുല്യമായ 9 മൂന്നു രീതിയിലും
സംഖ്യകളുടെ 8 ബിറ്റ്‌ ബൈനറി | ബിറ്റ്‌ ബൈനറി രൂപം ബിറ്റ്‌ ബൈനറി ഭൂപം | 868 പോലെയാണ്‌
പ്രതിനിധാനം രൂപം

8 ബിറ്റ്‌ ബൈനറി രൂ |8 ബിറ്റ്‌ ബൈനറി എല്ലാ നെരറ്റീവ്‌
പത്തിലാഭ്കിയ ശേഷം |രൂപത്തിലാക്കിയശേഷം | സാഖ്യകൂളുടെയും
അതിന്റെ 1 ന്റെ അതിന്റെ 2 ന്റെ പൂരകം |MSB 1 ആകുന്നു
പൂരകം കാണുന്നു. കാണുന്നു.

ചിഹ്നം 1 ബിറ്റിലും
മൂല്യം 7 ബിറ്റ്‌ ബൈ
നറി രൂപത്തിലും
പ്രതിനിധീകരി ക്കുന്നു

പട്ടിക 2.7 ത്ഫുര്‍ണ രംല്യക്ളുടെ 8 ബറ്റ്‌ പദാമദൈര്‍ഘ്യത്തിലുള്ള വിവിധ
പ്രതിനിമാനങ്ങളുടെ താതേമും
| eae 2. ഡാറ്റയുടെ പ്രതിനിധാനവും ബുളിയന്‍ ബീജഗണിതവും

DIOP കൊടുത്തിരിക്കുന്ന പട്ട?കയ?ത്‌ 4 ബിറ്റ്‌ പദമൈര്ഘ്യം ഉപയോഗിച്ച്‌ പുര്ണ
സംഖ്യകളുടെ 2 രീതിയിലുള്ള പ്രതിനിധാനങ്ങള്‍ വിശദികതിച്ചിതിക്കുന്തു.

യ ജുമു രും [ടം
0000
0110

പുര്ണ സംഖ്യകളുടെ 2M} രിതിയിലുള്ള (പത?നിധാനത്തിലും MSB സംഖ്യയുടെ ചിഹം
സ്പുചിച്ലിക്കുത്തു. ബിറ്റ്‌ 7 ആണെങ്കില്‍ Moa നെഗറ്റീവും ബിറ്റ്‌ 0 ആഞെങ്ക?ല്‍ സ്പാഖ്യ
ഫോേസ്പിറ്റിവും ആണ്‌. തന്നിരിക്കുന്ന പദദൈര്‍ഘ്യം കൊണ്ട്‌ സംഖ്യകളെ ഏറ്റവും കുടുതത്‌
പ്രതിനിശികരിക്കുവാ൯ സ്ഥശിക്കുന്നത്‌ 2 OB പുരക ര്ത?യിലാണെന്ന്‌ പട്ടികയില്‍ കാഞ്ടുന്നു.
4 പദദൈര്ഘ്യം ഉപര്യാഗിച്ചാത്‌ 7 നെക്കാള്‍ ചെറുതും +7 നെക്കാശ്‌ വലുതും ആയ സംഖ്യകള്‍

സാഖ്യ
7

pe

| oo |
| 6 |
പ

പ്രതിനിഗികരിക്കാരി ചിഹാഡും മുല്യവും CTONOIERS 7 AGB പുരക രീതിയിലും സാശ്യമമ്ല
അതുകൊണ്ട്‌ & ബിറ്റ്‌ പദദൈരിഘ്യമുകൂള (AIDIMIWIN ഉപയോഗിക്കുന്നു. അതുപോലെ മ ന്റ്‌
ALO പ്രതിനിധാന രീതിയി -8 മുതതി +7 ചരിഗിക്ക്‌ പുറത്തുള്ള Worl കൈകാര്യം
ചെയ്യുന്നതിനായി 8 ബിറ്റ്‌ ആവശ്യമാണ്‌.

8 ബിറ്റ്‌ പദദൈര്ഘ്യം ഉപയോഗരിതിയില്‍്‌ -128 മുതല്‍ +127 വരെയുള്ള Worl 2 aap
പുരക ര?ത?യില്‍ പ്രത?നിധികരിക്കാം. എന്താത്‌ മറ്റു രണ്ടു ര?ത?കളായ 7 ന്റെ്‌ ചുരകത്തിലും
ചിഹാവും മുല്യത്തിലും -127 മുതതീ +127 വരെ പരിഗിയുള്ള സ്വാഖ്യകള്‍ പ്രതിനിശാനം ചെയ്യാന്‍
സ്ധാഗിക്കുകയുള്ളു. മേത്ച്ഛറഞ്ഞ പരിഗിക്ക്‌ പുറത്തുള്ള സംഖ്യകള്‍ ,്രതിനിഥാനം ചെയ്യാന്‍
നമ്മശ്‌ 16 ബിറ്റ്‌ ഉപയോഗിക്കുന്നു.
DOO ഒന്നാം വര്‍ഷ കമ്പ്യൂട്ടര്‍ സയന്‍സ്‌ 2. ഡാറ്റയുടെ പ്രതിനിധാനവും ബൂളിയന്‍ ബീജഗണിതവും

പ്രുരകം ഉപയോഗിച്ചുള്ള വ്യവകലനം (Subtraction using complements)

ഒരു ബൈനറി സംഖ്യയില്‍ നിന്ന്‌ മറ്റൊരു ബൈനറി സംഖ്യ വൃവകലനം ചെയ്യുന്ന രീതി നമ്മള്‍
ചര്‍ച്ച ചെയ്തു. പക്ഷേ, ഈ രീതിയിലുള്ള ബൈനറി വൃവകലനം, ഒരു ഇലക്ര്ോണിക്ക്‌ സര്‍ക്യൂട്ട്‌
രൂപകല്‍പ്പന ചെയ്ത്‌ പ്രാവര്‍ത്തികമാക്കുക എന്നത്‌ വളരെ സങ്കീര്‍ണവും പ്രയാസമുള്ളതുമാണ്‌.
എന്നാല്‍ ബൈനറി സങ്കലനത്തിന്റെ MAG HIM സര്‍ക്യൂട്ട്‌ വളരെ ലളിതമാണ്‌. അതിനാല്‍
വ്യവകലനം സങ്കലന്രകിയ വഴി ചെയ്യുന്നതാകും നല്ലത്‌. വൃവകലനം ബൈനറി സംഖ്യയുടെ
പൂരകം എന്ന ആശയം ഉപയോഗിച്ച്‌ സങ്കലന ക്രിയയിലൂടെയാണ്‌ ചെയ്യുന്നത്‌. ഇതിന്‌ രണ്ടു
രീതികള്‍ ഉപയോഗിക്കുന്നു.

1 ന്റെ പൂരകം ഉപയോഗിച്ചുള്ള വ്യവകലനം

ഒരു വലിയ ബൈനറി സംഖ്യയില്‍ നിന്ന്‌ ഒരു ചെറിയ ബൈനറി സാഖ്യ കുറയ്ക്കുന്നതിനുള്ള
ഘട്ടങ്ങള്‍.

ഘട്ടം 1: ചെറിയ ബൈനറി സംഖ്യയുടെ ഇടതുവശത്ത്‌ ആവശ്യമായ 0 ചേര്‍ത്ത്‌ വലിയ
ബൈനറി സംഖ്യയുടെ ബിറ്റുകളുടെ എണ്ണത്തിന്‌ തുല്യമാക്കുക.

ഘട്ടം 2: ഏതു സംഖ്യകൊണ്ടാണോ കുറയ്ക്കേണ്ടത്‌ അതിന്റെ 1 ന്റെ പൂരകം കാണുക. (ഇവിടെ
ചെറിയ ബൈനറി സംഖ്യ)

ഘട്ടം 3: ഏതു സംഖ്യയില്‍ നിന്നാണോ കുറക്കേണ്ടത്‌ അതും, 1 ന്റെ പൂരകവും തമ്മില്‍ കൂട്ടുക.
(ഇവിടെ വലിയ ബൈനറി സഖ്യ )

ഘട്ടം 4: തുകയോട്‌ ശിഷ്ടം വരുന്ന ബിറ്റ്‌ (ക്യാരി) കൂട്ടക്കിട്ടുന്നതാണ്‌ ഉത്തരം.

ഉദാഹരണം: | ന്റെ പൂരക രീതി ഉപയോഗിച്ച്‌ (1010), ല്‍ നിന്നും (100), കുറയ്ക്കുക.

ആദ്യമായി (100), നെ നാല്‌ ബിറ്റ്‌ രൂപത്തിലേക്ക്‌ മാറ്റുക ൦ (0100),
ഏതു സംഖ്യയില്‍ നിന്നാണോ കുറക്കേണ്ടത്‌ അതും
(0100), ന്റെ പുരക സംഖ്യയും തമ്മില്‍ കൂട്ടുക 1010 +
1011
10101
MSB ഒഴിവാക്കി

0101 +

ക്കൊണ്ട്‌ ഉത്തരത്തോട്‌
ക്യാരി കൂട്ടുക 1 കൂട്ടുക.

ഉത്തരം 0110

2 ന്റെ പുരകം ഉപയോഗിച്ചുള്ള വൃവകലനം

ഒരു വലിയ ബൈനറി സംഖ്യയില്‍ നിന്ന്‌ ഒരു ചെറിയ ബൈനറി സാഖ്യ കുറയ്ക്കുന്നതിനുള്ള
ഘട്ടങ്ങള്‍.
(൫൫ ൫ ഒന്നാം വര്‍ഷ കമ്പ്യുട്ടര്‍ സയന്‍സ്‌ 2. ഡാറ്റയുടെ പ്രതിനിധാനവും ബൂളിയന്‍ ബീജഗണിതവും

ഘട്ടം 1: ചെറിയ ബൈനറി സംഖ്യയുടെ ഇടതുവശത്ത്‌ ആവശ്യമായ 0 ചേര്‍ത്ത്‌ വലിയ ബൈനറി
സംഖ്യയുടെ ബിറ്റുകളുടെ എണ്ണത്തിന്‌ തുല്യമാക്കുക.

ഘട്ടം2: ഏതു സംഖ്യകൊണ്ടാണോ കുറയ്ക്കേണ്ടത്‌ അതിന്റെ 2 ന്റെ പൂരകം കാണുക. (ഇവിടെ
ചെറിയ ബൈനറി സംഖ്യ )

ഘട്ടം3: ഏതു സംഖ്യയില്‍ നിന്നാണോ കുറയ്ക്കേണ്ടത്‌ അതും, 2 ന്റെ പുരകവും തമ്മില്‍ കൂട്ടുക.
(ഇവിടെ വലിയ ബൈനറി സംഖ്യ )

ഘട്ടം 4: തുകയില്‍ ശിഷ്ടം വരുന്ന ബിറ്റ്‌ (ക്യാരി) ഒഴിവാക്കി കിട്ടുന്നതാണ്‌ ഉത്തരം.

ഉദാഹരണം: 2 ന്റെ പുരക രീതി ഉപയോഗിച്ച്‌ (1010), ല്‍ നിന്നും (100), കുറയ്ക്കുക.

(100), നെ നാജ്‌ ബിറ്റ്‌ രൂപത്തിലേക്ക്‌ മാറ്റുക 0100
(0100), ന്റെ 2 ന്റെ പൂരകം കണ്ടുപിടിക്കുക 1011 +
1
1100
ഏതു സംഖ്യയില്‍ നിന്നാണോ കുറക്കേണ്ടത്‌ 1010 +

അതും 2 ന്റെ പൂരക സംഖ്യയും തമ്മില്‍ കൂട്ടുക 1100

10110
ശിഷ്ടം .
ഒഴിവാക്കി കിട്ടുന്ന
താണ്‌ ഉത്തരം ഉത്തരം 0110

ബി. ഫ്ടളോട്ടിംന്‌ പോയിന്റ്‌” സംഖ്യകളുടെ പ്രതിനിധാനം
(Representation of floating point numbers)

ഒരു ഫ്‌ളോട്ടിംഗ്‌ പോയിന്റ്‌ സംഖ്യ അല്ലെങ്കില്‍ രേഖീയ സംഖ്യയില്‍ പൂര്‍ണസംഖ്യാഭാഗവും ഭിന്നക
ഭാഗവും അടങ്ങിയിട്ടുണ്ട്‌. ഒരു രേഖീയ സംഖ്യയെ ഫ്‌ളോട്ടിംഗ്‌ പോയിന്റ്‌ എന്ന സവിശേഷമായ
ചിഹ്നസ്രമ്പദായം ഉപയോഗിച്ച്‌ എഴുതാവുന്നതാണ്‌. ഈ ചിഹ്നസ്രമ്പദായം ഉപയോഗിച്ച്‌
എഴുതുമ്പോള്‍ ഏത്‌ സംഖ്യയ്ക്കും മാന്റിസ, എക്സ്പൊണെന്റ്‌ എന്നീ രണ്ട്‌ ഭാഗങ്ങള്‍ ഉണ്ടാകും.
ഉദാഹരണമായി 25.45 നെ 0.2545x10* എന്നെഴുതാം. ഇതില്‍ 0.2545 എന്നത്‌ മാന്റിസയും കൃത്യങ്കം
2 എന്നത്‌ എക്സ്പൊണെന്റുമാണ്‌. (ക്രമാനുസൃതമായ (Normalised) ഫ്‌ളോട്ടിംഗ്‌ പോയിന്റ്‌
പ്രതിനിധാനത്തില്‍ മാന്റിസ 0.1 നും 1 നും ഇടയിലായിരിക്കും). അതുപോലെ 0.0035 എന്ന സംഖ്യ,
-0.350-- എന്ന്‌ എഴുതാം. ഇവിടെ -0.35 എന്നത്‌ മാന്റിസയും കൃത്യങ്കം -2 എന്നത്‌
എക്സ്പൊണെന്റുമാണ്‌.
ചിഹ്നം 32 ബിറ്റുകര്‍ ചിഹ്നം

+ .

a a

ഓാന്റിസ (24 ബിറ്റുകള്‍) എക്സ്പാണെന്റ്ബിറ്റുകര്‍

ചിത്രം 2.3 DCBING ഫോയി്റ്‌ രംലുക്ളുടപ്രൈതിതിമാനം
പ്‌] 2. ഡാറ്റയുടെ പ്രതിനിധാനവും ബുളിയന്‍ ബീജഗണിതവും

32 ബിറ്റ്‌ പദദൈര്‍ഘ്ൃമുള്ള കമ്പ്യൂട്ടറില്‍ ഒരു രേഖീയ സംഖ്യ എങ്ങനെയാണ്‌ പ്രതിനിധാനം
ചെയ്യുന്നതെന്ന്‌ നോക്കാം. ചിത്രം 2.3 ല്‍ കാണുന്നതുപോലെ, ഇതില്‍ 24 ബിറ്റുകള്‍ മാന്റിസ

രേഖീയമ്പംഖ്യകളില്‍ ബൈനറി? അംശബ്ിന്തു BoaZlav, എക്‌സ്ചൊണെന്റ്‌
ഭാഗങ്ങളുടെ വിവരങ്ങള്‍ സുകഷിക്കുന്നു. ബൈനറി അംശഖങ്ചിദ്ദുവിത്റെ സ്ഥാനം
സ്ഥിരമല്ലറാത്തതിനാല്‍ മാന്മിസ എക്സ്പഫൊണെന്റ്‌ എന്നിവയുടെ വിലകള്‍ സംഖ്യകശ്‌
തോറും മാറുന്നു. മറ്റൊരു വിധത്തിത്ച്ഛറഞ്ഞാത്‌ അത്‌ ഫ്ളോട്‌ ചെയ്യുകയാണ്‌
(വെള്ളുതത?ല്‍ പൊങ്ങിക്കിടക്കുനാതുപചോക്ഥ) അത?മാല്‍ ഈ ഥചത?നിധാനത്തെ ഫ്മോടിംഗ്‌
ഫേയിന്ത്‌ പ്രതിനിഗഥാനം എന്തറിയച്ചലെടുന്നു.

രേഖപ്പെടുത്താനും (അതില്‍ ആദ്യത്തെ ബിറ്റ്‌ മാന്റിസയുടെ ചിഹ്നത്തിനുവേണ്ടിയാണ്‌,, 8 ബിറ്റുകള്‍
എക്സ്പൊണെന്റ്‌ രേഖപ്പെടുത്താനും (അതില്‍ ആദ്ൃത്തെ ബിറ്റ്‌ എക്സ്പൊണെന്റിന്റെ
ചിഹ്നത്തിനുവേണ്ടി) ഉപയോഗിക്കുന്നു. ദശാംശബിന്ദു മാന്റിസയുടെ ചിഹ്നം സൂചിപ്പിക്കുന്ന ബിറ്റിന്റെ
വലത്‌ ഭാഗത്താണെന്ന്‌ അനുമാനിക്കുക. ദശാംശസ്ഥാനം സാങ്കല്പികമായതിനാല്‍ അത്‌
രേഖപ്പെടുത്താന്‍ പ്രത്യേകമായി ബിറ്റുകള്‍ ആവശ്യമില്ല.

ഉദാഹരണമായി 25.45 എന്ന രേഖീയ സാഖ്യ മാന്റിസ എക്സ്പൊണെന്റ്‌ രീതിയില്‍ 0.2545 X 10°
എന്ന്‌ എഴുതാം. ഇവിടെ മാന്റിസയായ 0.2545 നെയും എക്സ്പൊണെന്റായ 2 നെയും ബൈനറി
രൂപത്തിലേക്കു മാറ്റി അവയെ അതാതു സ്ഥാനങ്ങളില്‍ രേഖപ്പെടുത്തുന്നു. മാന്റിസയും
എക്സ്പൊണെന്റും രേഖപ്പെടുത്താന്‍ വൃത്യസ്തങ്ങളായ മാനദണ്ഡങ്ങള്‍ ഉപയോഗിക്കുന്നു.
പദദൈര്‍ഘ്യം മാറുന്നതിനനുസരിച്ച്‌ മാന്റിസയും എക്സ്പൊണെന്റും രേഖപ്പെടുത്താന്‍
ഉപയോഗിക്കുന്ന ബിറ്റുകളുടെ എണ്ണത്തിലും മാറ്റം ഉണ്ടാകും.

2.4.2 അക്ഷരങ്ങളുടെ പ്രതിനിധാനം (Representation of characters)

കംപ്യൂട്ടറിന്റെ മെമ്മറിയില്‍ സംഖ്യകള്‍ പ്രതിനിധാനം ചെയ്യുന്നത്‌ എങ്ങനെയെന്ന്‌ നമ്മള്‍ കണ്ടു.
അതുപോലെ അക്ഷരങ്ങളെ (Characters) പ്രതിനിധാനം ചെയ്യുന്നതിന്‌ വ്യത്യസ്തങ്ങളായ
സ്രമ്പദായങ്ങളുണ്ട്‌. അവയില്‍ ചിലതിനെക്കുറിച്ച്‌ ചുവടെ പ്രതിപാദിക്കുന്നു.

എ. ആസ്കി (ASCID

കമ്പ്യൂട്ടറിന്റെ മെമ്മറിയില്‍ 7 ബിറ്റുകള്‍ ഉപയോഗിച്ച്‌ ഓരോ അക്ഷരവും പ്രതിനിധാനം ചെയ്യാന്‍
ഉപയോഗിക്കുന്ന ൧5൪ (ആസ്കി) കോഡ്‌ Amercican Standard Code for Information Interchange
(അമേരിക്കന്‍ സ്റ്റാന്‍ഡേര്‍ഡ്‌ കോഡ്‌ ഫോര്‍ ഇന്‍ഫര്‍മേഷന്‍ ഇന്റര്‍ചേഞ്ചി) എന്നതിന്റെ ചുരുക്ക
രൂപമാണ്‌. അമേരിക്കന്‍ സര്‍ക്കാര്‍ അംഗീകരിച്ച ആസ്്‌കികോഡ്‌ വ്യാപകമായി സ്വീകരിക്കപ്പെട്ടു
കഴിഞ്ഞു. ഇതില്‍ ഓരോ അക്ഷരത്തിനും വത്യസ്ത പൂര്‍ണസംഖ്യ, നിശ്ചയിച്ചിരിക്കുന്നു. ആസ്കി
കോഡ്‌ എന്ന്‌ വിളിക്കുന്ന ഈ പൂര്‍ണസംഖ്യ മെമ്മറിയില്‍ സൂക്ഷിക്കുന്നതിനായി ബൈനറി
സംഖ്യയിലേക്ക്‌ പരിവര്‍ത്തനം ചെയ്യുന്നു. ഉദാഹരണത്തിന്‌ A എന്ന അക്ഷരത്തിന്റെ ആസ്കി
കോഡ്‌ 65 ആകുന്നു. ഇതിന്‌ തുല്യമായ 7 ബിറ്റ്‌ ബൈനറി 1000001 ആണ്‌. 7 ബിറ്റുകള്‍ കൊണ്ട്‌
വത്യസ്തങ്ങളായ 128 സംയോഗങ്ങള്‍ (Unique combination) സൃഷ്ടിക്കാനാകും. ആയതിനാല്‍ 7
ബിറ്റ്‌ ആസ്കി ഉപയോഗിച്ച്‌ 128 അക്ഷരങ്ങളുടെ കോഡുകള്‍ ഉണ്ടാക്കാം.
2. ഡാറ്റയുടെ പ്രതിനിധാനവും ബുളിയന്‍ ബീജഗണിതവും

ഓരോ അക്ഷരത്തിനും 8 ബിറ്റ്‌ ഉപയോഗിക്കുന്ന ഇതിന്റെ മറ്റൊരു പതിപ്പിനെ ആസ്കി 8 അഥവാ
എക്സ്റ്റന്റഡ്‌ ആസ്കി (Extended ASCII) എന്ന്‌ വിളിക്കുന്നു. 8 ബിറ്റ്‌ ആസ്കി കൊണ്ട്‌ 256
വ്ൃത്യസ്താക്ഷരങ്ങളുടെ കോഡുകള്‍ ഉണ്ടാക്കാം. ഉദാഹരണമായി A എന്ന അക്ഷരത്തെ 01000001
എന്നും B എന്ന അക്ഷരത്തെ 01000010 എന്നും കോഡ്‌ ചെയ്യപ്പെടുന്നു. സാധാരണ കീബോര്‍ഡിലെ
മൂഴുവന്‍ അക്ഷരങ്ങള്‍ക്കും കോഡ്‌ നല്‍കുവാന്‍ ആസ്കി 8 ന്‌ കഴിയുന്നു.

ബി. എബ്സിഡിക' (EBCDIC)

എക്സ്റ്റന്റഡ്‌ ബൈനറി കോഡഡ്‌ ഡെസിമല്‍ ഇന്റര്‍ചേഞ്ച്‌ കോഡ്‌ (Extended Binary Coded
Decimal Interchange Code) എന്നതിന്റെ ചുരുക്ക രൂപമാണിത്‌. ഇന്റര്‍നാഷണല്‍ ബിസിനസ്‌
മെഷീന്‍ (ഐ.ബി.എം) നിര്‍മ്മിക്കുന്ന കമ്പ്യൂട്ടറുകളില്‍, ആസ്്‌കിയെ പോലെ ഇതിലും 8 ബിറ്റ്‌
കോഡ്‌ ഉപയോഗിക്കുന്നു. ഇതുപയോഗിച്ച്‌ 256 അക്ഷരങ്ങള്‍ക്ക്‌ കോഡ്‌ നല്‍കാനാവും. ആസ്കിയില്‍
കോഡ്‌ ചെയ്യപ്പെട്ട ഡാറ്റ എബ്സിഡിക്്‌ കോഡ്‌ ഉപയോഗിക്കുന്ന കമ്പ്യൂട്ടറില്‍ ഉപയോഗിക്ക
ണമെങ്കില്‍ ആസ്കി കോഡില്‍ നിന്ന്‌ എബ്സിഡിക്‌ കോഡിലേക്ക്‌ മാറ്റേണ്ടതുണ്ട്‌. അതുപോലെ,
എബ്സിഡിക്‌ കോഡ്‌ ഉപയോഗിച്ചുണ്ടാക്കിയ ഡാറ്റ ആസ്കി കമ്പ്യൂട്ടറില്‍ ഉപയോഗിക്കണമെങ്കില്‍,
ആസ്കിയിലേക്കും മാറ്റേണ്ടതുണ്ട്‌.

സി. ഇസ്്‌കി (ISCIT)

ഇന്ത്യന്‍ സ്റ്റാന്‍ഡേര്‍ഡ്‌ കോഡ്‌ ഫോര്‍ ഇന്‍ഫര്‍മേഷന്‍ ഇന്റര്‍ചേഞ്ച്‌ (Indian Standard Code for
Information Interchage) അല്ലെങ്കില്‍ ഇന്ത്യന്‍ സ്ക്രിപ്റ്റ്‌ കോഡ്‌ ഫോര്‍ ഇന്‍ഫര്‍മേഷന്‍ ഇന്റര്‍ചേഞ്ച്‌
(Indian Script Code for Information Interchage) എന്നതിന്റെ ചുരുക്കരൂപമാണിത്‌. വിവിധ
ഇന്ത്യന്‍ഭാഷകളിലെ അക്ഷരങ്ങളുടെ എന്‍കോഡിംഗ്‌ (Encoding) വ്ൃവസ്ഥയാണിത്‌. 8 ബിറ്റ്‌
ഉപയോഗിച്ചാണ്‌ NAVA) ഡാറ്റ പ്രതിനിധാനം ചെയ്യുന്നത്‌. 1986 ല്‍ ഇലക്ര്രോണിക്‌ വകുപ്പിന്‌
കീഴിലുള്ള നിലവാരം നിശ്ചയിക്കല്‍ സമിതി ചിട്ടപ്പെടുത്തിയ ഈ വ്യവസ്ഥ ബ്യൂറോ ഓഫ്‌ ഇന്ത്യന്‍
സ്റ്റാന്‍ഡേര്‍ഡ്‌സ്‌ (BIS) അംഗീകരിച്ചതാണ്‌. ഇസ്കിക്ക്‌ പകരം യൂനിക്കോഡാണ്‌ ഇപ്പോള്‍
ഉപയോഗിക്കുന്നത്‌.

ഡി. യദൂണികോധഡ്‌ (Unicode)

8 ബിറ്റുകള്‍ ഉപയോഗിക്കുന്ന ആസ്കിക്ക്‌ 256 അക്ഷരങ്ങള്‍ മാതമേ പ്രതിനിധാനം ചെയ്യാനാകൂ.
ലോകം മുഴുവനുമുള്ള ലിഖിതഭാഷകളിലെ അക്ഷരങ്ങളെയും ചിഹങ്ങളേയും പ്രതിനിധാനം
ചെയ്യാന്‍ ഇത്‌ മതിയാകില്ല. ഈ പ്രശ്നം പരിഹരിക്കാനാണ്‌ യൂണിക്കോഡ്‌ വികസിപ്പിച്ചെടുത്തത്‌.
ആഗോളവും കാര്യക്ഷമവും നിലവാരമുള്ളതും ആയ അക്ഷരങ്ങളുടെ എന്‍കോഡിങ്‌ രീതിയാണ്‌
ഇതിന്റെ ലക്ഷ്യം. ഏത്‌ ഭാഷയായാലും ഏത്‌ പ്ലാറ്റ്ഫോമായാലും (Platform) അവയ്ക്കെല്ലാം
വ്യത്യസ്തമായ ഒരക്കം ഇത്‌ നല്‍കുന്നു.

യൂണിക്കോഡില്‍ മൌലികമായി 16 ബിറ്റുകളാണ്‌ ഉപയോഗിക്കുന്നത്‌. അതിന്‌ 65,536 അക്ഷരങ്ങള്‍
പ്രതിനിധീകരിക്കാന്‍ കഴിയും. യൂണിക്കോഡ്‌ കണ്‍സോര്‍ഷും എന്ന ലാഭേച്ഛയില്ലാത്ത സംഘട
നയാണ്‌ ഇത്‌ ചിട്ടപ്പെടുത്തുന്നത്‌. കണ്‍സോര്‍ഷ്യം 1991 ല്‍ ആദ്യപതിപ്പായ 1.0.0 പ്രസിദ്ധീകരിച്ചു.
അതിനെ അടിസ്ഥാനമാക്കി നിലവാരം മെച്ചപ്പെടുത്തുന്നതിനുള്ള ശ്രമം തുടരുകയാണ്‌. ഈ
കാലയളവില്‍ യൂണികോഡ്‌ ഉപയോഗിക്കുന്നത്‌ 1603 അധികം ബിറ്റുകളാണ്‌. അതിനാല്‍ ധാരാളം
അക്ഷരങ്ങളെ പ്രതിനിധാനം ചെയ്യാന്‍ അതിന്‌ സാധിക്കും. ലോകത്തിലെ എല്ലാ ലിഖിത ഭാഷ
കളുടെയും അക്ഷരങ്ങളെ പ്രതിനിധാനം ചെയ്യുവാന്‍ യൂണിക്കോഡിന്‌ സാധിക്കുന്നു.
2. ഡാറ്റയുടെ പ്രതിനിധാനവും ബുളിയന്‍ ബീജഗണിതവും

2.4.3 ശബ്ബ, ചിത്രം, വീഡിയോ എന്നിവയുടെ പ്രതിനിധാനം
(Representation of audio, image and video)

ഇതിന്‌ മുമ്പുള്ള ഭാഗത്തില്‍ അക്കങ്ങളും അക്ഷരങ്ങളും ഉള്‍പ്പെട്ട വിവരങ്ങള്‍ കമ്പ്യൂട്ടറില്‍
പ്രതിനിധാനം ചെയ്യുന്ന വിധവും അവയുടെ വൃത്യസ്ത മാനദണ്ഡങ്ങളും നാം പരിചയപ്പെട്ടു.
ഡിജിറ്റല്‍ കമ്പ്യൂട്ടറുകളുടെ സഹായത്തോടെ നിത്യജീവിതത്തിലെ പ്രശ്നങ്ങള്‍ കൈകാര്യം
ചെയ്യുമ്പോള്‍ മിക്കപ്പോഴും അക്കങ്ങളോ അക്ഷരങ്ങളോ അല്ലാത്ത വിവരങ്ങള്‍ രേഖപ്പെടുത്തുകയോ
പ്രോസസ്സ്‌ ചെയ്യേണ്ടതായോ വരാം. അക്കങ്ങളെയും അക്ഷരങ്ങളെയും പോലെ ശബ്ദം, ചിരം,
വീഡിയോ എന്നിവയിലും ധാരാളം വിവരങ്ങള്‍ അടങ്ങിയിട്ടുണ്ട്‌. ഇവ സംഭരിക്കുന്നതിനുള്ള വിവിധ
ഫയല്‍ ഘടനകളെക്കുറിച്ച്‌ നമുക്ക്‌ ചര്‍ച്ച ചെയ്യാം.

ഡിരിറ്റല്‍ ശബ്ദം, ചിത്രം, വീഡിയോ എന്നിവയുടെ ഫയല്‍ ഘടനകള്‍
(Digital audio, image and video file formats)

ശബ്ദം, ചിത്രം, വീഡിയോ എന്നിങ്ങനെയുള്ള മള്‍ട്ടിമീഡിയ ഡാറ്റ വൃത, SMO ഫയല്‍ ഘടനക
ളിലാണ്‌ സംഭരിക്കുന്നത്‌. ഡാറ്റയുടെ വലുപ്പം കുറയ്ക്കുന്നതിനും ചുരുക്കുന്നതിനും വിവിധ കെട്ടുക
ളാക്കുന്നതിനും വിവിധ സമീപനരീതികള്‍ ഉപയോഗിക്കുമ്പോള്‍ അവ വ്യത്യസ്ത ഫയല്‍ഘടനയ്ക്ക്‌
കാരണമാകുന്നു. ഉദാഹരണത്തിന്‌ ഒരു ചിര്രം സാധാരണനിലയില്‍ ജോയിന്റ്‌ പിക്ചര്‍
എക്സ്പേര്‍ട്ട്‌ന്‌ ഗ്രുപ്പ്‌ (ജെപെഗ്‌ - JPEG) ഫയല്‍ ഘടനയിലാണ്‌ സംഭരിക്കുന്നത്‌. ഈ ചിത്രത്തിന്റെ
ഫയലില്‍ തലക്കെട്ട്‌ (Header) വിവരങ്ങളും ചിത്രത്തിന്റെ (Image) ഡാറ്റയും അടങ്ങിയിരിക്കുന്നു.
ഫയലിന്റെ പേര്‌, വലുപ്പം, പരിഷ്കരിച്ച ഡാറ്റ, ഫയല്‍ഘടന മുതലായ വിവരങ്ങള്‍ തലക്കെട്ട്‌
ഭാഗത്താണ്‌ സംഭരിക്കുന്നത്‌. പിക്സലുകളുടെ തീരവതയെക്കുറിച്ചുള്ള വിവരങ്ങള്‍ ഡാറ്റ ഭാഗത്തും
ശേഖരിക്കുന്നു.

ഫയലിന്റെ വലുപ്പം കുറയ്ക്കുന്നതിന്‌ ഡാറ്റ ചുരുക്കിയോ അല്ലാതെയോ സംഭരിക്കാം. സാധാര
ണനിലയില്‍ ചിത്രം ഡാറ്റയെ ചുരുക്കിയാണ്‌ സംഭരിക്കുന്നത്‌. എന്താണ്‌ ചുരുക്കല്‍ (Compression)
എന്ന്‌ നോക്കാം. 400X400 പിക്സല്‍ വലുപ്പമുള്ള, കറുപ്പ്‌ നിറമുള്ള ഒരു ചിത്രം ഉദാഹരണമായി
എടുക്കാം. 1,60,000 (400x400) പിക്സലിലും കറുപ്പ്‌, കറുപ്പ്‌, .....കറുപ്പ്‌ എന്നിങ്ങനെ ആവര്‍ത്തിച്ച്‌
സംഭരിക്കാം. ഇത്‌ ചുരുക്കാതെയുള്ള രൂപമാണ്‌. അതേസമയം, കറുപ്പ്‌ എന്ന്‌ ഒരു തവണ രേഖപ്പെ
ടുത്തുകയും 1,60,000 തവണ ആവര്‍ത്തനം എന്നും രേഖപ്പെടുത്തുന്നതാണ്‌ ചുരുക്കി സംഭരിക്കല്‍.
ചുരുക്കലിനായി ഇത്തരം നിരവധി രീതികള്‍ ഉപയോഗിക്കാറുണ്ട്‌. ബിറ്റ്മാപ്‌ (BMP), ടാഗ്ഡ്‌ ഇമേജ്‌
ഫയല്‍ ഫോര്‍മറ്റ്‌ (TIFF), ഗ്രാഫിക്സ്‌ ഇന്റര്‍ചേഞ്ച്‌ ഫോര്‍മാറ്റ്‌ (GIF), പോര്‍ട്ടബിള്‍ പബ്ലിക്‌
നെറ്റ്വര്‍ക്ക്‌ ഗ്രാഫ്‌ (PNG) തുടങ്ങി വിവിധ തരത്തിലുള്ള ഫയല്‍ ഘടനകളില്‍ ചിത്രങ്ങള്‍
ഉപയോഗത്തിനനുസരിച്ച്‌ സംഭരിക്കപ്പെടുന്നു.

ചിത്രത്തിന്റെ കാര്യത്തില്‍പ്പറഞ്ഞ തലക്കെട്ട്‌ ഫയല്‍ വിവരങ്ങള്‍, ശബ്ദം, വീഡിയോ എന്നീ ഫയലു
കള്‍ക്കും ബാധകമാണ്‌. "4൧ MP3, MIDI, AIFF മുതലായ വ്യത്യസ്ത ഫയല്‍ ഘടനകളില്‍
ഡിജിറ്റല്‍ ശബ്ദ ഡാറ്റ സംഭരിക്കാന്‍ കഴിയും. ഡിജിറ്റല്‍ ശബ്ദഡാറ്റ സംഭരിക്കുന്നതിന്‌ ഒരു ശബ്ദ
ഫയല്‍ ഘടന വിവരിക്കുന്നുണ്ട്‌. ചില സമയങ്ങളില്‍ ഇത്‌ കണ്ടെയ്നര്‍ ഫോര്‍മാറ്റ്‌ (Container
Format) എന്ന്‌ സൂചിപ്പിക്കാറുണ്ട്‌. ഉദാഹരണമായി WAV ചുരുക്കാത്ത ശബ്ദവും, MP3 ഫയലു
കളില്‍ ചുരുക്കിയ ശബ്ദവുമാണ്‌ ഉള്‍ക്കൊള്ളുക. സംശ്ലേഷണം (synchronous) ചെയ്ത സംഗീത
2. ഡാറ്റയുടെ പ്രതിനിധാനവും ബുളിയന്‍ ബീജഗണിതവും

സ്വയം വിലയിരുത്താം

1. -80 നെ ചിഹ്നവും മൂല്യവും രൂപത്തില്‍ പ്രതിനിധാനം ചെയ്താല്‍
അതിന്റെ MSB ഏതാണ്‌?

28.756 നെ മാന്റിസ എക്സ്പൊണെന്റ്‌ രൂപത്തില്‍ എഴുതുക.
൧൭൮] യുടെ പൂര്‍ണരൂപം എഴുതുക.

60 നെ | ന്റെ പൂരകമായി പ്രതിനിധാനം ചെയ്യുക.

യൂണികോഡ്‌ നിര്‍വചിക്കുക.

Awe YN

ഏതെങ്കിലും രണ്ട്‌ all MoNWG ഘടനകള്‍ എഴുതുക.

ഡാറ്റ ശേഖരിച്ചുവയ്ക്കുന്ന സംവിധാനമാണ്‌ MIDI (Musical Instrument Digital Interface).
അതുപോലെ AVI (Audio Video Interleave) എന്നത്‌ വീഡിയോഫയല്‍ ശേഖരിച്ചുവയ്ക്കുന്ന
മറ്റൊരു സംവിധാനമാണ്‌. 1423, JPEG-2, WMV എന്നീ ഫയല്‍ ഘടനകള്‍ ശബ്ദം, വീഡിയോ
എന്നിവ സംഭരിച്ചുവയ്ക്കുന്നതിനും ഒരേ സമയം പ്രവര്‍ത്തിപ്പിക്കുന്നതിനും ഉപയോഗിക്കുന്നു.

2.5 ബുളിയന്‍ ബീജ ഗണിതത്തിന്‌ ഒരാമുഖം
(Introduction to Boolean algebra)

ശരി അല്ലെങ്കില്‍ തെറ്റ്‌ എന്ന്‌ ഉത്തരം നല്‍കേണ്ട നിരവധി സന്ദര്‍ഭങ്ങള്‍ നമ്മുടെ ജീവിതത്തില്‍
ഉണ്ടാകാറുണ്ട്‌. അതുപോലെ നമ്മുടെ ചിന്തയുടെ ഒരു വലിയ ഭാഗം ശരി അല്ലെങ്കില്‍ തെറ്റ്‌ എന്ന്‌
ഉത്തരം പറയേണ്ടവയാണ്‌. ഇപ്രകാരം സത്യം കണ്ടെത്തുന്നതിനെ
വ്യക്തി വിചിന്തനം (ഹ്യൂമണ്‍ റീസണിങ്‌ - Human Reasoning)
അഥവാ യുക്തി വിചിന്തനം ( Logical Reasoning) എന്ന്‌ പറയുന്നു.
ശരി അല്ലെങ്കില്‍ തെറ്റ്‌ എന്നത്‌ സംഖ്യാപരമായി ഒന്നോ പൂജ്യമോ
ആകാം. ഈ രണ്ട്‌ മൂല്യങ്ങളെ ല്വന്ദമൂല്യങ്ങള്‍ (Binary Values)
അല്ലെങ്കില്‍ ബൂളിയന്‍ മൂല്യങ്ങള്‍ (Boolean Values) എന്ന്‌ പറയുന്നു.
1 അല്ലെങ്കില്‍ 0 എന്നിവയാല്‍ പ്രതിനിധാനം ചെയ്യപ്പെടുന്ന ചരങ്ങ
ളുമായി (variables) ബന്ധപ്പെട്ട (ക്രിയകള്‍ ചെയ്യുന്ന യുക്തിപരമായ
ബീജഗണിതശാനത്രശാഖയാണ്‌ ബൂളിയന്‍ ബീജഗണിതം (Boolean
Algebra). യുക്തിയും ഗണിതശാസ്ര്തവും തമ്മില്‍ ബന്ധം സ്ഥാപിച്ച alto 2.4: ജോര്‍ജ്ബുര്‌
(ബ്രിട്ടീഷ്‌ ഗണിതശാസ്ത്രജ്ഞനായ ജോര്‍ജ്‌ ബൂളിനെ ആദരിച്ചു (1815 1864)

കൊണ്ടാണ്‌ ഈ പേര്‍ നല്‍കിയിരിക്കുന്നത്‌. അദ്ദേഹത്തിന്റെ An Investigation of the Law of Thought
എന്ന വിപ്ലവകരമായ പ്രബന്ധമാണ്‌ ബൂളിയന്‍ ആള്‍ജിവ്രയുടെ ഉല്‍പ്പത്തിക്ക്‌ വഴിയൊരുക്കിയത്‌.

2.5.1 ല്ന്ദമൂല്യമുള്ള അളവുകള്‍ (Binary Valued Quantities)
താഴെ പറയുന്നവ നോക്കുക.
1. ഞാന്‍ ഒരു കുട എടുക്കുന്നതല്ലേ നല്ലത്‌?

2. താങ്കളുടെ പേന എനിക്ക്‌ തരാന്‍ സമ്മതമാണല്ലേോ?
2. ഡാറ്റയുടെ പ്രതിനിധാനവും ബുളിയന്‍ ബീജഗണിതവും

ജോര്‍ജ്‌ ബൂള്‍ ഒരു (ബ്രിട്ടീഷ്‌ ഗണിതശാസ്ര്തജ്ഞനാണ്‌.

3.
4. കേരളം ഇന്ത്യയിലെ ഏറ്റവും വലിയ സംസ്ഥാനമാണ്‌.
5. ഇന്നലെ ഹാജരാകാതിരുന്നത്‌ എന്തുകൊണ്ട്‌ ?

6.

ബൂളിയന്‍ ബീജഗണിതത്തെക്കുറിച്ച്‌ നിങ്ങളുടെ അഭിപ്രായം എന്താണ്‌?

1 ഉം 2 ഉം വാക്യങ്ങള്‍ അതെ (YES) അല്ലെങ്കില്‍ അല്ല (NO) എന്ന്‌ ഉത്തരം പറയാവുന്ന
ചോദ്യങ്ങളാണ്‌. ഇത്തരം സന്ദര്‍ഭങ്ങളെ ബൈനറി തീരുമാനങ്ങള്‍ എന്നും ഇതിന്റെ ഉത്തരങ്ങളെ
ബൈനറി മൂല്യങ്ങള്‍ (Binary Values) എന്നും വിളിക്കുന്നു. മൂന്നാമത്തെ വാകൃത്തിന്റെ ഉത്തരം
ശരി (TRUE) എന്നും നാലാമത്തേതിന്റെ തെറ്റ്‌ (FALSE) എന്നുമാണ്‌. എന്നാല്‍ അഞ്ചും ആറും
ചോദ്യങ്ങള്‍ക്ക്‌ ഇങ്ങനെ ഉത്തരം പറയാനാകില്ല. TRUE, FALSE എന്ന്‌ ഉത്തരം നല്‍കാവുന്ന
വാക്യങ്ങള്‍ യുക്തി പ്രസ്താവനകള്‍ (Logical Statements) അല്ലെങ്കില്‍ (രൂത്ത്‌ ഫങ്ക്‌ഷന്‍ (Truth
function) എന്നും അതിന്റെ ഉത്തരമായി നല്‍കുന്ന TRUE, FALSE എന്നിവയെ ലോജിക്കല്‍
സ്ഥിരമൂല്യങ്ങള്‍ (Logical Constants) അല്ലെങ്കില്‍ ബൈനറി മൂല്യങ്ങള്‍ (Binary Values) എന്നും
പറയുന്നു. ശരി എന്നത്‌ 1 ഉം തെറ്റ്‌ എന്നത്‌ 0 ഉം ആണ്‌. ഈ ലോജിക്കല്‍ കോണ്‍സ്റ്റന്നുകള്‍
കൈകാര്യം ചെയ്യുന്ന വേരിയബിളിനെ ലോജിക്കല്‍ വേരിയബിള്‍ അല്ലെങ്കില്‍ ബൂളിയന്‍ വേരിയബിള്‍
എന്ന്‌ പറയുന്നു.

2.5.2 ബരമൂളിയന്‍ ഓഷറേറ്ററുകളും ലോജിക്കല്‍ ഗേറ്റുകളും
(Boolean operators and logic gates)

കമ്പ്യൂട്ടറിലേക്ക്‌ നമ്മള്‍ നല്‍കുന്ന വിവരങ്ങള്‍ 1, 0 എന്നിവയുടെ ഗണങ്ങളായി മാറ്റേണ്ടതുണ്ട്‌.
കമ്പ്യൂട്ടറിലെ എല്ലാ ഡാറ്റയും, വിവരങ്ങളും, ക്രിയകളും 0, | എന്നീ അക്കങ്ങളിലാണ്‌ പ്രതിനിധാനം
ചെയ്യുന്നത്‌. ബൂളിയന്‍ മൂല്യങ്ങള്‍ അടിസ്ഥാനമാക്കി നിര്‍വഹിക്കപ്പെടുന്ന ഈ പ്രവര്‍ത്തങ്ങളെ
ബൂളിയന്‍ പ്രവര്‍ത്തനങ്ങള്‍ (Boolean റയി എന്ന്‌ വിളിക്കുന്നു. നമുക്കറിയാവുന്നതുപോലെ, ഈ
ശ്രിയകള്‍ ചെയ്യുവാന്‍ ഓപ്പറേറ്ററുകള്‍ ആവശ്യമാണ്‌. ഇത്തരം ഓപ്പറേറ്ററുകളെ ബൂളിയന്‍ ഓപ്പറേ
റ്ററുകള്‍ അല്ലെങ്കില്‍ ലോജിക്കല്‍ ഓപ്പറേറ്ററുകള്‍ എന്ന്‌ വിളിക്കുന്നു. ബൂളിയന്‍ ബീജഗണിതത്തില്‍
മൂന്ന്‌ അടിസ്ഥാന ഓപ്പറേറ്ററുകളാണ്‌ ഉള്ളത്‌. ഈ ഓപ്പറേറ്ററുകളും ബീജഗണിതത്തില്‍ അവയുടെ
പ്രവര്‍ത്തനങ്ങളും ചുവടെ ചേര്‍ത്തിരിക്കുന്ന.

OR => യുക്തിപരമായ സങ്കലനം (Logical Addition)
AND > യുക്തിപരമായ വ്യവകലനം (Logical Multiplication)
NOT -൭: ലോജിക്കല്‍ നിഷേധം (Logical Negation)

ആദ്യത്തെ രണ്ട്‌ ഓപ്പറേറ്റുകളോടൊപ്പം രണ്ട്‌ ഓപ്പറന്റുകളും, മൂന്നാമത്തേതിനോടുകൂടി ഒരു
ഓപ്പറന്റും ഉപയോഗിക്കുന്നു. ഇവിടെ ഓപ്പറന്റുകള്‍ എല്ലായ്പ്പോഴും ബൂളിയന്‍ വേരിയബിള്‍
അല്ലെങ്കില്‍ കോണ്‍സ്റ്റന്റുകള്‍ ആയിരിക്കും. ഇത്തരം ഓപ്പറേഷനുകളുടെ ഉത്തരം ഒന്നുകില്‍ TRUE
(1) അല്ലെങ്കില്‍ 1.51: (0) ആയിരിക്കും.

ഇലക്ര്യോണിക്‌ സര്‍ക്യൂട്ടുകള്‍ ഉപയോഗിച്ചാണ്‌ കമ്പ്യൂട്ടറുകള്‍ ഇത്തരം പ്രവര്‍ത്തങ്ങള്‍ നിര്‍വ
ഹിക്കുന്നത്‌ അവയെ ലോജിക്കല്‍ സര്‍ക്യൂട്ട്‌ (Logical circuite) എന്ന്‌ വിളിക്കുന്നു. ഓരോ വ്യക്തിഗത
യൂണിറ്റുകളാലും നിര്‍മ്മിക്കപ്പെടുന്ന ലോജിക്കല്‍ സര്‍ക്യൂട്ടിനെ ഗേറ്റ്‌ (Gate) എന്ന്‌ പറയുന്നു. ഒരു
2. ഡാറ്റയുടെ പ്രതിനിധാനവും ബുളിയന്‍ ബീജഗണിതവും

ഗേറ്റ്‌ ഒരു ബൂളിയന്‍ പ്രവര്‍ത്തനത്തെ പ്രതിനിധാനം ചെയ്യുന്നു. ഒന്നോ അതിലധികമോ ലോജിക്കല്‍
ഇന്‍പൂട്ടുകളില്‍ ലോജിക്കല്‍ പ്രവര്‍ത്തനം നടത്താനും ഒരേ ഒരു ലോജിക്കല്‍ ഓട്ട്പുട്ട്‌ നല്‍കാനും
കഴിയുന്ന ഭാതികസാമ്രഗിയാണ്‌ ഒരു ലോജിക്‌ ഗേറ്റ്‌ (Logic Gate). ഇലക്ര്ോണിക്‌ സ്വിച്ചുകളായി
പ്രവര്‍ത്തിക്കുന്ന ഡയോഡുകളോ (ടാന്‍സിസ്റ്ററുകളോ ഉപയോഗിച്ചാണ്‌ ലോജിക്കല്‍ ഗേറ്റുകള്‍
നിര്‍മ്മിക്കുന്നത്‌. ബുളിയന്‍ ബീജഗണിതത്തിലെ അടിസ്ഥാനപരമായ മുന്ന്‌ പ്രവര്‍ത്തനങ്ങളായ OR,
AND, NOT എന്നിവ നിര്‍വഹിക്കുന്നത്‌ യഥാരരമം OR, AND, NOT എന്നീ ലോജിക്കല്‍ ഗേറ്റുകള്‍
ഉപയോഗിച്ചാണ്‌.

a. OR ഓചറേറ്ററും OR ഗേറ്റും

ജീവിതത്തിലെ ഒരു സന്ദര്‍ഭം നമുക്ക്‌ നോക്കാം. എപ്പോഴാണ്‌ നാം കുട ഉപയോഗിക്കുക? മഴ
ഉള്ളപ്പോള്‍ മാര്രമാണോ? വെയിലുള്ളപ്പോഴും നാം കുട ഉപയോഗിക്കാറുണ്ടല്ലോ. ഈ രണ്ട്‌
സാഹചര്യങ്ങളും ചേര്‍ത്ത്‌ ഒരു സംയുക്ത
സ്താവന ഇങ്ങനെ ഉണ്ടാകാം, ae | 2% [വെയില്‍ |_കുടയുടെ ആവശ്യം |
ഉള്ളപ്പോഴോ വെയിലുള്ളപ്പോോ നാംകുട | ഇല്ല | ae | oa |
ഉപയോഗിക്കുന്നു.” (Ifit is raining or if it is
sunny, we use an umbrella). ഈ പ്രസ്താ
വനയില്‍ OR ന്റെ ഉപയോഗം ശ്രദ്ധിക്കുക.

പട്ടിക 2.8 ല്‍ ഈ പ്രസ്താവനയുടെ വിശ
കലനം കാണാം. മേല്‍ക്കൊടുത്തിരിക്കുന്ന
ഉദാഹരണത്തില്‍ “കുടയുടെ ആവശ്യം” എന്ന യുക്തി വിചിന്തനത്തിന്‌ ബൂളിയന്‍ OR പ്രവര്‍ത്ത
നവുമായി വളരെയധികം സാദൃശ്യമുണ്ട്‌.

പട്ടിക 2.8 ലോജിക്ക്‌ og പ്രവര്‍ത്തനം

OR ഓപ്പറേറ്റര്‍ ലോജിക്കല്‍ സങ്കലനം നടത്തുന്നു. ഇതിനായി + ചിഹ്നം ഉപയോഗിക്കുന്നു. അതിനാല്‍
A+B എന്ന പദപ്രയോഗം വായിക്കേണ്ടത്‌ A അല്ലെങ്കില്‍ B (A OR 8) എന്നാണ്‌. താഴെ
കൊടുത്തിരിക്കുന്ന പട്ടിക 2.9 OR പ്രവര്‍ത്തന
ത്തിന്റെ (ടൂത്ത്‌ ടേബിളാണ്‌. A, 18 എന്നിവ ഇന്‍പു
ട്ടുകളും (ഓപ്പറന്റുകള്‍), A+B ഓട്ട്പൂട്ടും (ഉത്തരം)
ആണെന്ന്‌ അനുമാനിക്കുക. ഏതെങ്കിലും ഒരു
ഇന്‍പുട്ട്‌ | ആണെങ്കില്‍ ജട്ട്പുട്ട്‌ | ആയിരിക്കുമെന്ന്‌
ട്രൂത്ത്‌ ടേബിളില്‍ വ്യക്തമാക്കാം.

Poi foo |

പട്ടിക 2.9OR പ്രവരീത്തനത്തിമ്റെ (ഴുത്ത്‌ ടേബിള്‍

ബൂളിയന്‍ പ്രവര്‍ത്തനവും അതിന്റെ ഫലവും കാണി
ക്കുന്ന പട്ടികയാണ്‌ (SO) ടേബിള്‍. ഒരു നിശ്ചിത പ്രവര്‍ത്തനത്തിന്റെ സാധ്യമായ എല്ലാ ഇന്‍പുട്ടു
കളും അതനുസരിച്ചുള്ള ഫലവും ഈ പട്ടികയില്‍ ഉണ്ടായിരിക്കും. സാധാരണ നിലയില്‍ ഇത്തരം
പ്രവര്‍ത്തനങ്ങളില്‍ ഓപ്പറന്റ്‌ വേരിയബിളുകളും, ഓപ്പദേറ്ററുകളും

ഉണ്ടായിരിക്കും. ഓപ്പറന്റുകളും ഓപ്പറേറ്ററുകളും ചേര്‍ന്നതാണ്‌ A
ബൂളിയന്‍ പദപ്രയോഗം (Boolean Expression). ന ഓപ്പറന്റുകളും
N ഓപ്പറേറ്ററുകളുള്ള ഒരു ബൂളിയന്‍ പദ്ര്രയോഗത്തിന്റെ (ടൂത്ത്‌
ടേബിളില്‍ 2” നിരകളും M+N കോളങ്ങളും ഉണ്ടായിരിക്കും. ചിത്രാ 2.5 eenxenwbOR eng

A+B
BR

(൫൫ ൫ ഒന്നാം വര്‍ഷ കമ്പ്യൂട്ടര്‍ സയന്‍സ്‌ 2. ഡാറ്റയുടെ പ്രതിനിധാനവും ബൂളിയന്‍ ബീജഗണിതവും

ലോജിക്‌ സര്‍ക്യൂട്ടുകളുടെ രൂപകല്പനയില്‍ ലോജിക്കല്‍ OR പ്രവര്‍ത്തനം നിര്‍വഹിക്കുന്ന ഗേറ്റിനെ
ലോജിക്കല്‍ OR ഗേറ്റ്‌ എന്ന്‌ വിളിക്കുന്നു. ചിതം 2.5 ബൂളിയന്‍ ബീജഗണിതത്തിലെ OR ഗേറ്റിന്റെ
ലോജിക്കല്‍ ചിഹ്നം കാണിച്ചിക്കുന്നു.

ഒരു ഇലക്ര്യോണിക്‌ സര്‍ക്യൂട്ടിന്റെ സഹായത്തോടെ ഈ ഗേറ്റിന്റെ (പ്രവര്‍ത്തനം വിശദീകരിക്കാം.
ചിത്രം 2.6 ല്‍ സമാന്തരമായി വിന്യസിച്ചിട്ടുള്ള രണ്ട്‌ സ്വിച്ചുകള്‍ OR ഗേറ്റ്‌ സര്‍ക്യൂട്ടിനെക്കുറിച്ചുള്ള
സങ്കല്പം വ്യക്തമാക്കുന്നു. ഇതില്‍ A Dio B യും രണ്ട്‌ സ്വിച്ചുകളും Y ഒരു ബള്‍ബുമാണ്‌. ഇതില്‍
സ്വിച്ചുകള്‍ ഒന്നുകില്‍ അടഞ്ഞതോ (ON) അല്ലെങ്കില്‍ തുറന്നതോ (OFF) ആയ അവസ്ഥ
യിലായിരിക്കും. സര്‍ക്യൂട്ടിലെ ഒരു സ്വിച്ചെങ്കിലും അടഞ്ഞിരുന്നാല്‍ ബള്‍ബ്‌ പ്രകാശിക്കും. രണ്ടു

A

8 Y
: ബള്‍ബ്‌ - OFF = 0

[ | Et) ബള്‍ബ്‌ -ON =1

സ്വിച്ച്‌ A- തുറന്നിരിക്കുന്നു = O(OFF), അടഞ്ഞിരിക്കുന്നു = 1 (ON)
Maj 8 - തുറന്നിരിക്കുന്നു = O(OFF), അടഞ്ഞിരിക്കുന്നു = 1 (ON)

ചിത്രം 2.6 BEB സ്വിച്ചും ഒരു ബശ്ബ്ദും മ്ഥാത്തദ്മാനി ബന്ഥിഷിച്ചിുള്ള TUBA/IS”

സ്വിച്ചുകളും തുറന്നിരിക്കുമ്പോള്‍ മാര്രമാണ്‌
ബള്‍ബ്‌ പ്രകാശിക്കാതിരിക്കുന്നത്‌. മേല്‍പ്പറഞ്ഞ
സര്‍ക്യൂട്ടിന്റെ പ്രവര്‍ത്തനം OR ഗേറ്റിന്റെ ശ്രവര്‍ത്ത
നവുമായി നമുക്ക്‌ ബന്ധപ്പെടുത്താം. OFF പ്രതി
നിധീകരിക്കുന്നത്‌ ലോജിക്കല്‍ LOW (0) അവ
സ്ഥയെയും ON ലോജിക്കല്‍ HIGH (1) അവ
സ്ഥയെയുമാണ്‌ A, B സ്വിച്ചുകള്‍ OR ഗേറ്റിന്റെ ഇന്‍
പുട്ടും ബള്‍ബിന്റെ അവസ്ഥ OR ഗേറ്റിന്റെ ഓട്ട്‌
പൂട്ടുമാണെന്ന്‌ കരുതുക. (ടൂത്ത്‌ ടേബിള്‍ 2.9
ഇത്തരം ഒരു OR ഗേറ്റിന്റെ പ്രവര്‍ത്തനം വിശദീ
കരിക്കുന്നു. OR ഗേറ്റിന്റെ ബൂളിയന്‍ പദപ്രയോഗം

Y=A+B 5 5. പുടി 2.10 9907 ഉരപുടുക്ളുള്ള
എന്നാണ്‌ എഴുതുന്നതു OR eagiog (ത്ത്‌ ടേബിള്‍

A 44840 ഒരു OR ഗേറ്റിന്‌ രണ്ടിലേറെ ഇന്‍പുട്ടുകള്‍ കൈ
PR Hi ° കാര്യം ചെയ്യാന്‍ സാധിക്കും. മൂന്ന്‌ ഇന്‍പുട്ടുക
ളുള്ള OR ഗേറ്റിന്റെ ബൂളിയന്‍ പ്രതിനിധാനവും

ലോജിക്കല്‍ ചിഹ്നവും എങ്ങനെയായിരിക്കുമെന്ന്‌
ചിത്രം 2.7 മുത്‌ 0.35388)28 OR മറ്‌

2. ഡാറ്റയുടെ പ്രതിനിധാനവും ബുളിയന്‍ ബീജഗണിതവും

ന cord rstentioas ¥-AYBSG ക്ഷണം
റ്റിന്റെ ബൂളിയന്‍ പ്രതിനിധാനം Y=A+B+C

എന്നാണ്‌. ഇതിന്റെ ലോജിക്കല്‍ ചിഹ്നം

ചിധ്രം 2.7 ല്‍ കൊടുത്തിരിക്കുന്നു. OR
ഗേറ്റിന്റെ ഏതെങ്കിലും ഒരു ഇന്‍പുട്ട്‌ 1
ആണെങ്കില്‍ ഓട്ട്പുട്ടും 1 ആയിരിക്കുമെന്ന്‌
പട്ടിക 2.9, 2.10 എന്നിവയില്‍ നിന്ന്‌ നമുക്ക്‌

പട്ടിക 2.11 ചോജിക്കത.47/70 മ്റെച്രവരിത്തനം
മനസിലാക്കാം. എല്ലാ ഇന്‍പുട്ടുകളും 0

ആണെങ്കില്‍ മഠ്രതമേ OR ഗേറ്റിന്റെ ഓഈട്ട്പുട്ട്‌ 0 ആകുന്നുള്ളു.
2. AND ഓഷദറേറ്ററും AND മേറ്റും

AND എന്ന ബൂളിയന്‍ (കിയ മനസ്സിലാക്കുവാന്‍ നമ്മുക്ക്‌
മറ്റൊരു ഉദാഹരണം നോക്കാം. നിങ്ങള്‍ വീട്ടില്‍ നിന്നും
അകലയാണെന്നും ഇപ്പോള്‍ ഉച്ചഭക്ഷണത്തിനുള്ള സമയ
മായെന്നും വിചാരിക്കുക. ഉച്ച ഭക്ഷണം ലഭിക്കുന്നതിന്‌
ഇവിടെ രണ്ടു കാര്യങ്ങള്‍ ആവശ്യമാണ്‌. 1. ഒരു റെസ്റ്റോ

ont ഉണ്ടായിരിക്കണം. 2. ഭക്ഷണം വാങ്ങുന്നതിനുള്ള

പട്ടിക 2.122AND
പണം നിങ്ങളുടെ പക്കല്‍ ഉണ്ടായിരിക്കണം. ഇവ രണ്ടും പ്രവര്‍ത്തനത്തിന്‍റെ (രൂത്ത്‌ ടബിര്‍

ബന്ധിപ്പിച്ചുകൊണ്ട്‌ നമുക്ക്‌ ഒരു സംയുക്തപ്രസ്താവന

ഉണ്ടാക്കാം. ഒരു റെസ്റ്റോറന്റും ഭക്ഷണം വാങ്ങുന്നതിനുള്ള

പണവും ഉണ്ടെങ്കില്‍ ഭക്ഷണം ലഭിക്കും. ഈ പ്രസ്താവ 4 AB
നയില്‍ "Qo? എന്നതിന്റെ ഉപയോഗം ശ്രദ്ധിക്കുക. പട്ടിക B

2.11 ല്‍ ഭക്ഷണം ലഭിക്കുന്നതിനുള്ള യുക്തിപരമായ

വിശകലനം കാണിക്കുന്നത്‌ അതിന്‌ ബൂളിയന്‍ AND ചിത്രം 2.6 ലോജിക്കല്‍.) മേറ്റ്‌
ക്രിയയുമായുള്ള സാദൃശ്യമാണ്‌.

AND ഓപ്പറേറ്റര്‍ ലോജിക്കല്‍ ഗുണിതം നിര്‍വഹിക്കുന്നു. ഈ പ്രവര്‍ത്തനം സൂപിപ്പിക്കുന്നത്‌ (ഡോട)
ചിഹ്നം ഉപയോഗിച്ചാണ്‌. അതിനാല്‍ A.B എന്ന പദപ്രയോഗം A AND B എന്ന്‌ വായിക്കാം. AND
പ്രവര്‍ത്തനത്തിന്റെ (രൂത്ത്‌ ടേബിള്‍ പട്ടിക 2.12 ല്‍ കൊടുത്തിരിക്കുന്നു. A, 8 എന്നിവ ഇന്‍പുട്ടുകളും
(രഓാപ്പഠന്റ്‌ ) A.B ഓട്ട്പുട്ടും (ഉത്തരം) ആണെന്ന്‌ അനുമാനിക്കാം. എല്ലാ ഇന്‍പുട്ടുകളും |
ആകുമ്പോള്‍ AOA ഓട്ട്പുട്ട്‌ | ലഭിക്കുന്നത്‌. ഏതെങ്കിലും ഒരു ഇന്‍പുട്ട്‌ 0 ആകുമ്പോള്‍
ഓട്ട്പുട്ടും 0 ആകുന്നു.

സര്‍ക്യൂട്ടുകള്‍ രൂപകല്പന ചെയ്യുമ്പോള്‍ യുക്തിപരമായ AND പവര്‍ത്തനം നിര്‍വഹിക്കാന്‍
ഉപയോഗിക്കുന്ന ലോജിക്കല്‍ ഗേറ്റിനെ AND ഗേറ്റ്‌ എന്ന്‌ വിളിക്കുന്നു. ബൂളിയന്‍ ബീജഗണിതത്തിലെ
AND ഗേറ്റിന്റെ ചിഹ്നം ചിത്രം 2.8 ല്‍ കാണിച്ചിരിക്കുന്നു. ചിത്രം 2.9 ല്‍ കൊടുത്തിരിക്കുന്ന
ഇലക്ര്ോണിക്‌ സര്‍ക്യൂട്ട്‌ വഴി ഈ ഗേറ്റിന്റെ ശ്രവര്‍ത്തനം വിശദമാക്കാം. ഈ സര്‍ക്യൂട്ടില്‍ AND
ഗേറ്റ്‌ എന്ന സങ്കല്പം വിശദമാക്കുന്ന ശ്രേണിയായി രണ്ട്‌ സ്വിച്ചുകളുണ്ട്‌. ഇതില്‍ A, B എന്നിവ
സ്വിച്ചുകളും Y ബള്‍ബുമാണ്‌. സര്‍ക്യൂട്ടിലെ രണ്ട്‌ സ്വിച്ചുകളും അടഞ്ഞിരിക്കുമ്പോള്‍ മാത്രമാണ്‌
ബള്‍ബ്‌ പ്രകാശിക്കുന്നത്‌ എന്ന്‌ കാണാം. ഏതെങ്കിലും ഒരു സ്വിച്ച്‌ തുറന്നിരുന്നാല്‍ ബള്‍ബ്‌
(൫൫ (൫ ഒന്നാം വര്‍ഷ കമ്പ്യൂട്ടര്‍ സയന്‍സ്‌ 2. ഡാറ്റയുടെ പ്രതിനിധാനവും ബൂളിയന്‍ ബീജഗണിതവും

പ്രകാശിക്കുന്നില്ല. മേല്‍പ്പറഞ്ഞ സര്‍ക്യൂട്ടിന്റെ A B

ന ബള്‍ബ്‌ OFF = 0
പ്രവര്‍ത്തനം AND ഗേറ്റിന്റെ പ്രവര്‍ത്തനവുമായി ബള്‍ബ്‌ ON 1
നമുക്ക്‌ ബന്ധപ്പെടുത്താം. OFF പ്രതിനിധീക +

Y
രിക്കുന്നത്‌ ലോജിക്കല്‍ 107 (0) അവസ്ഥയെ [ |
യും ON ലോജിക്കല്‍ 111൨1 (1) അവസ്ഥയെയു
മാണ്‌. A, 8 സ്വിച്ചുകള്‍ AND ഗേറ്റിന്റെ ഇന്‍പുട്ടും ila] A momiotansan} = 0 (OFT),

അടഞ്ഞിരിക്കുന്തു = 1(ON)
x j B = 0 (OFF)
ബള്‍ബിന്റെ അവസ്ഥ ANDewglacg ഈട്ട്പൂട്ടു — ai oon ON) (OFF),

അടഞ്ഞുിമിക്കുന്നു =
മാണെന്ന്‌ കരുതുക. (ടുത്ത്‌ ടേബിള്‍ 2.9 ഇത്ത ചിത്രം 2.9 ണ്‌ നയിച്ചും ഒരു ബള്‍ബും മൃശണിയാനി
രം ഒരു AND ഗേറ്റിന്റെ പ്രവര്‍ത്തനം വിശദീകരി ബദ്ധികിച്ചിടുള്ള TIDE RS.

ക്കുന്നു. AND ഗേറ്റിന്റെ ബൂളിയന്‍ പദപ്രയോഗം
Y=AB എന്നാണ്‌ എഴുതുന്നത്‌.

AND ഗേറ്റിന്‌ രണ്ടിലേറെ ഇന്‍പുട്ടുകള്‍ കൈ
കാര്യം ചെയ്യാനാകും. ഇതില്‍ മുന്ന്‌ ഇന്‍പുട്ട്‌
വരുമ്പോള്‍ ബൂളിയന്‍ പ്രതിനിധാനവും ചിഹ്ന
വും എങ്ങനെയാവും എന്ന്‌ നോക്കാം. മുന്ന്‌ ഇന്‍
249388 AND ഗേറ്റിന്റെ ബൂളിയന്‍ പദ്രപയോഗം
Y=A.B.C എന്നാണ്‌.

ചിത്രം 2.10 ല്‍ മൂന്ന്‌ ഇന്‍പുട്ടുകളുള്ള AND ഗേറ്റ്‌

കാണിച്ചിരിക്കുന്നു. AND ഗേറ്റില്‍ ഏതെങ്കിലും
പട്ടിക 2.79. മുന്‌ ഇനിപുട്ടുകളുള്ള

ഇന്‍പുട്ട്‌ 0 ആണെങ്കില്‍ ഓട്ട്പുട്ടും 0 ആയിരി AND. ഒ്റിമ്റ്‌ഴുത്ത്‌ ബിര്‍

ക്കും. എല്ലാ ഇന്‍പുട്ടുകളും 1 ആണെങ്കില്‍
മാത്രമേ ഓട്ട്പുട്ടായി | ലഭിക്കുകയുള്ളു. 2.12,

2.13 എന്നീ ദ്രുത്ത്‌ ടേബിളുകള്‍ ഇത്‌ കാണിച്ചു A A Boe
തരുന്നു. B

c. NOT a@oaieogoge NOT e930 0.

ബൂളിയന്‍ NOT പ്രവര്‍ത്തനം മനസ്സിലാക്കുന്നതിന്‌ ചിത്രം 2.10: മുത്‌ ഉര്‍ഫുടുകളുക്ക.10൧ bog’

നമുക്ക്‌ മറ്റൊരു സാഹചര്യം ചര്‍ച്ച ചെയ്യാം.

എന്നും രാവിലെ നിങ്ങള്‍ വ്യായാമത്തിനായി നടക്കാന്‍ പോകുന്നയാളാണെന്ന്‌ കരുതുക. എല്ലാ
ദിവസവും നിങ്ങള്‍ക്ക്‌ അതിന്‌ കഴിയുമോ? മഴയുണ്ടെങ്കില്‍ നിങ്ങള്‍ക്ക്‌ അതിന്‌ സാധിക്കുമോ?
പട്ടിക 2.14 ല്‍ ഇതുമായി ബന്ധപ്പെട്ട എല്ലാ സാധ്യതകളും കാണിച്ചിരിക്കുന്നു. ഇതിന്‌ ബൂളിയന്‍
NOT പ്രവര്‍ത്തനവുമായി സാമ്യമുണ്ട്‌.
ഇത്‌ ഒരു യുനറി (Unary) ഓപ്പറേറ്ററാണ്‌. അതിനാല്‍ ഇതിന്‌ ഒരേ മം
ഒരു ഓപ്പറന്റ്‌ മാര്രമെ ആവശ്യമുള്ളൂ. NOT ഓപ്പറേറ്റര്‍
യുക്തിപരമായ നിഷേധം (Logical Negation) നിര്‍വഹിക്കുന്നു.
അതിന്റെ ചിഹ്നം ~ (over bar) മുകള്‍വര ആണ്‌. പട്ടിക 2.14 ഫോജികാത്‌7്റഗ്‌

| Ae 2. ഡാറ്റയുടെ പ്രതിനിധാനവും ബുളിയന്‍ ബീജഗണിതവും

NOT ന്റെ പദ്രപയോഗത്തെ A എന്നോ A എന്നോ അടയാളപ്പെ
ടുപ്പെടുത്താം. A എന്നതിനെ A ബാര്‍ എന്നും A എന്നതിനെ A 0 1 |
ഡാഷ്‌ എന്നും ഉച്ചരിക്കുന്നു. ടേബിള്‍ 2.15 ല്‍ 1401 പ്രവര്‍ത്ത 10 |
നത്തിന്റെ (ടൂത്ത്‌ ടേബിള്‍ കൊടുത്തിരിക്കുന്നു.
പട്ടിക 2.15 NOT പ്രവര്‍ത്തരത്തിന്റെ
ഭ്രുത്ത്‌ esas

NOT ഓപ്പറേറ്ററില്‍ A എന്നത്‌ ഇന്‍പുട്ടും (ഓപ്പറന്റും) A എന്നത്‌
ഓട്ട്പുട്ടും (ഉത്തരം) ആണെന്ന്‌ അനുമാനിക്കുക. ഇന്‍പുട്ടിന്റെ രം
വിപരീത മൂല്യമാണ്‌ ഓട്ട്പുട്ട്‌ എന്ന്‌ (ടൂത്ത്‌ ടേബിളില്‍ നിന്ന്‌ പ്‌
മനസ്സിലാക്കാം. 101 പ്രവര്‍ത്തനം നിര്‍വഹിക്കുന്ന ലോജിക്‌

ഗേറ്റിനെ NOT ഗേറ്റ്‌ എന്ന്‌ വിളിക്കുന്നു. ചിരം 2.11 ല്‍ NOT ചിത്രം 2.77 NOT ഒറ്റ്‌
ഗേറ്റിന്റെ ചിഹ്നം കാണിച്ചിരിക്കുന്നു.

സ്വയം വിലയിരുത്താം

ബൂളിയന്‍ വേരിയബിള്‍ എന്ന പദം നിര്‍വചിക്കുക.
ഓരോ വൃക്തിഗത യൂണിറ്റിനാലും നിര്‍മ്മിക്കപ്പെടുന്ന ലോജിക്കല്‍
സര്‍ക്യൂട്ടീനെ ................. എന്ന്‌ വിളിക്കുന്നു.

എല്ലാ ഇന്‍പുട്ടുകളും ഉയര്‍ന്നതായിരിക്കുമ്പോള്‍ (High) മാത്രം ഉയര്‍ന്ന (High)
ഓട്ട്പുട്ട്‌ തരുന്ന ലോജിക്കല്‍ ഓപ്പറേറ്റര്‍ ഗേറ്റ്‌ ന്റെ പേര്‍ എഴുതുക.

4. ട്രൂത്ത്‌ ടേബിള്‍ എന്ന പദം നിര്‍വചിക്കുക.
5. AND ഓപ്പറേഷനില്‍ ലോജിക്കല്‍ ...................... ഉം OR ഓപ്പറേറ്ററില്‍
ലോജിക്കല്‍ ........................ ഉം ആണ്‌ നടക്കുന്നത്‌.

6. OR ഗേറ്റിന്റെ ലോജിക്‌ ചിഹ്നം വരക്കുക.

ഒരു NOT ഗേറ്റിനെ ഇന്‍വര്‍ട്ടര്‍ (Inverter) എന്നും വിളിക്കുന്നു. ഇതിന്‌ ഒരു ഇന്‍പുൂട്ടും ഒരു ഓട്ടപുട്ടും
മാത്രമേയുള്ളൂ. ഇന്‍പുട്ട്‌ എല്ലായ്‌പോഴും വിപരീതാവസ്ഥയിലേക്ക്‌ പരിവര്‍ത്തനം ചെയ്യുന്നു. ഇന്‍പുട്ട്‌
0 ആണെങ്കില്‍ അതിന്റെ ഓട്ട്പുട്ട്‌ വിപരീതം അല്ലെങ്കില്‍ പൂരകം | ആയിരിക്കും. അതുപോലെ
ഇന്‍പുട്ട്‌ 1 ആണെങ്കില്‍ ഈട്ട്പുട്ട്‌ അതിന്റെ പൂരകമായ 0 ആയിരിക്കും.

2.6 ബൂളിയന്‍ ബീജഗണിതത്തിലെ അടിസ്ഥാന അംഗീകൃത തത്വങ്ങള്‍
(Basic postulates of Boolean algebra)

ചില അടിസ്ഥാന നിയമങ്ങളോടുകൂടിയ ഒരു ഗണിതശാസ്ര്ര ശാഖയാണ്‌ ബൂളിയന്‍ ബീജഗണിതം.
ഈ അടിസ്ഥാന നിയമങ്ങളെ അംഗീകൃത തത്വങ്ങള്‍ (Postulates) എന്ന്‌ വിളിക്കുന്നു. ഇവയ്ക്ക്‌
ശാസ്ര്രീയമായ അടിത്തറയില്ലെങ്കിലും കൃത്യമായ ഘടനയോടുകൂടിയ ശാസ്ത തത്വങ്ങള്‍
നിര്‍മ്മിക്കുവാന്‍ ഇവ ഉപയോഗിക്കുന്നു. മറ്റൊരു തരത്തില്‍പ്പറഞ്ഞാല്‍ ഇത്തരം അംഗീകൃത
തത്വങ്ങളും നിയമങ്ങളും ഉപയോഗിച്ച്‌ തെളിയിക്കാന്‍ കഴിയുന്ന ചില സിദ്ധാന്തങ്ങള്‍ ബൂളിയന്‍
ബീജഗണിതത്തില്‍ ഉണ്ട്‌.
പി 2. ഡാറ്റയുടെ പ്രതിനിധാനവും ബുളിയന്‍ ബീജഗണിതവും

അംഗീകൃത തത്വം 1: 0 ന്റെയും 1 ന്റെയും സിദ്ധാന്തങ്ങള്‍
൧.5 |), ആണെങ്കില്‍ A = 190A #1 ആണെങ്കില്‍ ൧-0 ആകുന്നു.

അംഗീകൃത തത്വം 2 : 01% ഓപ്പറേഷന്‍ (യുക്തിപരമായ സങ്കലനം)
0+0=0 O+1=1 1+0=1 1+1=1

അംഗീകൃത തത്വം 3 : AND ഓപ്പറേഷന്‍ (യുക്തിപരമായ ഗുണനം)
0.0=0 0.1=0 1.0=0 1.1=1

അംഗീകൃത തത്വം 4: NOT ഓപ്പറേഷന്‍ (യുക്തിപരമായ നിഷേധം അല്ലെങ്കില്‍ പുരക നിയമം)
ണി 150)

ദ്വൈതസിദ്ധാന്തം (Principle of Duality)

ബൂളിയന്‍ വേരിയബിളും, വിലകളും, ബൂളിയന്‍ ഓപ്പറേറ്റര്‍ വഴി കൂട്ടിച്ചേര്‍ത്തു ബൂളിയന്‍ പദപ്രയോഗം
നിര്‍മ്മിക്കാം. X+Y, A+] എന്നിവ ബൂളിയന്‍ പദ്പയോഗങ്ങള്‍ക്ക്‌ ഉദാഹരണങ്ങളാണ്‌. അതുപോലെ
ബൂളിയന്‍ ബീജഗണിതത്തിന്റെ അംഗീകൃത തത്വങ്ങളായ 2, 3, 4 എന്നിവയും ബൂളിയന്‍
പദ്ര്രയോഗങ്ങളാണ്‌. അംഗീകൃത തത്വം 2 ലെ പ്രസ്താവനകള്‍ നമുക്ക്‌ നോക്കാം. ഇതില്‍
പൂജ്യത്തിനെ ഒന്നായും ഒന്നിനെ പൂജ്യമായും അതുപോലെ ഓപ്പറേറ്ററുകളായ OR (+) നെ AND
(.) ആയും മാറ്റംവരുത്തിയാല്‍ അംഗീകൃത തത്വം 3 ലഭിക്കുന്നു. അതുപോലെ അംഗീകൃത തത്വം
2 പ്രസ്താവനയില്‍ പൂജ്യത്തിനെ ഒന്നായും ഒന്നിനെ പൂജ്യമായും അതുപോലെ ഓാപ്പറേറ്ററുകളായ
AND () നെ OR (+) ആയും മാറ്റം വരുത്തിയാല്‍ അംഗീകൃത തത്വം 3 ലഭിക്കുന്നു. ഈ
ആശയത്തെയാണ്‌ ദ്വൈതസിദ്ധാന്തം എന്ന്‌ പറയുന്നത്‌.

ഏതൊരു ബുളിയന്‍ പ്രസ്താവനയ്ക്കും ഒരു ദ്വൈത രൂപം ഉണ്ടായിരിക്കും. അത്‌ താഴെ പറയുന്ന
മൂന്ന്‌ നിയമങ്ങള്‍ അനുസരിച്ചാണ്‌ വികസിപ്പിക്കുന്നതെന്ന്‌ ദ്വൈതസിദ്ധാന്തം പ്രസ്താവിക്കുന്നു.
(0) ഓരോ OR (+) ഉം AND (.) ആയി മാറ്റുക.

(it) ഓരോ AND (.) ഉം OR (+) ആയി മാറ്റുക.

(iit) ഓരോ 0 ഉം 1 ആയും 1 നെ 0 ആയും മാറ്റുക.

2.7 ബുളിയന്‍ ബീജഗണിതത്തിലെ അടിസ്ഥാന Macon
(Basic theorems of Boolean algebra)

ഓരോ സിദ്ധാന്തത്തിനും ചില അടിസ്ഥാനവും അംഗീകൃതവുമായ നിയമങ്ങളും ഉണ്ട്‌. സിദ്ധാന്ത
ത്തിന്റെ നിയമാവലികള്‍ സ്വയം പ്രമാണം (AXIOMS) എന്നറിയപ്പെടുന്ന. മേല്‍പ്പറഞ്ഞ സ്വയം
പ്രമാണങ്ങളോ അടിസ്ഥാന തത്വങ്ങളോ ഉപയോഗിച്ചുള്ള അനുമാനങ്ങളില്‍ നിന്ന്‌ ഒരു നിഗമനത്തില്‍
എത്തിച്ചേരാവുന്നതാണ്‌. ഇത്തരം നിഗമനങ്ങളെ നിയമങ്ങള്‍ അല്ലെങ്കില്‍ സിദ്ധാന്തങ്ങള്‍ എന്ന്‌
വിളിക്കുന്നു. ബൂളിയന്‍ പദ്ര്പയോഗം ലഘൂകരിക്കുന്നതിനും കൈകാര്യം ചെയ്യുന്നതിനും ഉള്ള
സാമ്രഗികള്‍ ബൂളിയന്‍ ആള്‍ജിര്രയുടെ സിദ്ധാന്തങ്ങള്‍ തരുന്നു. ഇവിടെ ചില ബൂളിയന്‍
നിയമങ്ങളെയും സിദ്ധാന്തങ്ങളെയെയും കുറിച്ച്‌ ചര്‍ച്ച ചെയ്യാം. മുന്‍കൂട്ടി തെളിയിച്ചിട്ടുള്ള ബൂളിയന്‍
നിയമങ്ങളുടെയും (SOW ടേബിളുകളുടെയും സഹായത്താല്‍ മേല്‍പ്പറഞ്ഞ സിദ്ധാന്തങ്ങളും
നിയമങ്ങളും തെളിയിക്കാം.
| DOO ഒന്നാം വര്‍ഷ കമ്പ്യുട്ടര്‍ സയന്‍സ്‌ 2. ഡാറ്റയുടെ പ്രതിനിധാനവും ബൂളിയന്‍ ബീജഗണിതവും

2.7.1 അനന്യത നിയമം (Identity law)

X ഒരു ബുളിയന്‍ വേരിയബിള്‍ ആണെങ്കില്‍, അനന്യത നിയമം പ്രസ്താവിക്കുന്നത്‌ ഇങ്ങനെയാണ്‌.
൫) 0+X=X @ 11451
Gi) O.X=0 @v) 1.X=X

പ്രസ്താവന (1) ഉം (1) ഉം സങ്കലന അനന്യത എന്നും പ്രസ്താവന (11) ഉം (iv) ഉം ഗുണന
അനന്യത എന്നും അറിയപ്പെടുന്നു. പ്രസ്താവന (1), പ്രസ്താവന (iv) ന്റെ ദ്വൈത രൂപവും (Dual
form), അതുപോലെ തിരിച്ചുമാകുന്നു. അതുപോലെ പ്രസ്താവന (11), പ്രസ്താവന (ili) ന്റെ ദ്വൈത
രൂപങ്ങളാകുന്നു. (ടൂത്ത്‌ ടേബിളുകള്‍ 2.16(a), 2.16), 2.17(a), 2.17(b) ഈ നിയമങ്ങള്‍
തെളിയിക്കുന്നു.

പിക 2.16(a) MBE അമമുത നിമ്മം പട്ടി 2.16(b) MBEIN അനുത നിമമം
പട്ടിക 2.16 (a) ലെ 2 ഉം 3 ഉം നിരകളിലെ വിലകള്‍ തുല്യമാണെന്നു കാണാം. അതിനാല്‍ 0-- X
=X എന്ന്‌ തെളിയിക്കപ്പെടുന്നു. അതുപോലെ പട്ടിക 2.16 ൪) ലെ 1 ഉം3 ഉം നിരകളിലെ വിലകള്‍
തുല്ല്യമായതിനാല്‍ 1+ X= 1 എന്ന പ്രസ്താവനയും ശരിയാകുന്നു.

പട്ടിക 2. 772) മുന അനരുത M20 പട്ടിക 2.17(b) ORM GoMTyO തിമ്ഥം

പട്ടിക 2.17(a) ലെ 2 ഉം 3 ഉം നിരകളിലെ വിലകള്‍ തുല്യമാണെന്നു കാണാം. അതിനാല്‍
0.X = 0 എന്ന്‌ തെളിയിക്കപ്പെടുന്നു. അതുപോലെ പട്ടിക 2.17(b) ലെ 2 ഉം 3 ഉം നിരകളിലെ
വിലകള്‍ തുല്യമായതിനാല്‍ 1.X =X എന്ന പ്രസ്താവനയും ശരിയാകുന്നു.

2.7.2 വര്‍ഗസമ നിയമം (idempotent law)

വര്‍ഗസമ നിയമം പ്രന്താവിക്കുന്നത്‌ ഇങ്ങനെയാകുന്നു. (2) X +
xX

X ന്റെ വില 0 ആയാല്‍
പ്രസ്താവന സത്യമാകുന്നു,

പട്ടിക 2,792) : വര്‍റ്ൃമ്ഥനിമ്ഥം
തത്വം 3). പ്രകാരം പ്രസ്താ

വന സത്യമാകുന്നു. അതുപോലെ % ന്റെ വില 1 ആയാലും പ്രസ്താവനകള്‍ ശരിയാകുന്നു. (ടൂത്ത്‌
ടേബിളുകള്‍ 2.18(a), 2.18(b) എന്നിവ ഈ നിയമങ്ങളുടെ തെളിവ്‌ കാണിച്ച്‌ തരുന്നു.
(൫൫ ൫ ഒന്നാം വര്‍ഷ കമ്പ്യൂട്ടര്‍ സയന്‍സ്‌ 2. ഡാറ്റയുടെ പ്രതിനിധാനവും ബൂളിയന്‍ ബീജഗണിതവും

2.7.3 വര്‍ഗപമൂരക നിയമം | Involution law)

ഈ നിയമം പ്രസ്താവിക്കുന്നത്‌ ഇങ്ങനെയാകുന്നു. ചല | x | x | x |
അംഗീകൃത തത്വം പ്രകാരം X=0 ആയാല്‍ പല = ആകുന്നു. [0 1 | 0 |

അതിന്റെ പൂരകം പ്ല 1-0 എന്നത്‌ % നു തുല്യമാകുന്നു.
X ന്റെ വില 1 ആയാലും പ്രസ്താവന സത്യമാകുന്നു.

പട്ടിക 2.19 വരീഗപുര്‍ക നിയമം

ട്രൂത്ത്‌ ടേബിള്‍ 2.19 ലെ 1 ഉം 3 ഉം നിരകള്‍ x=X എന്നത്‌
തെളിയിക്കുന്നു.

2.7.4 ചദൂരക നിയമം (Complementary law)
പൂരക നിയമം പ്രസ്താവിക്കുന്നത്‌ ഇങ്ങനെയാകുന്നു. @ X+ X=1
(i) X. XK =0
X ന്റെ വില 0 ആയാല്‍ KX എന്നത്‌ | ആകുന്നു. ആയതിനാല്‍ K+ KX എന്നത്‌ O+1=1
ആകുന്നു (അംഗീകൃത തത്വം 2). അതുപോലെ % ന്റെ വില | ആയാല്‍ K =0 ആകുന്നു. (രൂത്ത്‌

ടേബിളുകള്‍ 2.20(a), 2.20(b) എന്നിവ സാധ്യമായ വിലകള്‍ ഉള്‍കൊള്ളിച്ചു കൊണ്ട്‌ ഈ നിയമം
തെളിയിക്കുന്നു. പ്രസ്താവനകള്‍ പരസ്പരം ദ്വന്വങ്ങള്‍ ആണെന്ന്‌ ശ്രദ്ധിക്കുക.

പട്ടിക 2.20(A) ഫ്ക നിമുഥം പട്ടിക 2.20(b) പുക തിമ്ഥം
2.7.5 ക്രമനിയമം (Commutative law)

OR, AND എന്നീ ഓപ്പറേഷനുകളില്‍ വേരിയബിളിന്റെ സ്ഥാനം മാറ്റുന്നതിന്‌ ക്രമനിയമം
അനുവദിക്കുന്നു. X ഉം Y ഉം രണ്ട്‌ വേരിയബിളുകള്‍ ആണെങ്കില്‍, ഈ നിയമം പ്രസ്താവിക്കുന്നത്‌

ഇങ്ങനെയാകുന്നു.
X+Y=Y+X
(i) X.Y=Y.X

ട്രൂത്ത്‌ ടേബിളുകള്‍ 2.21 (൭), 2.21(b) എന്നിവ ഈ നിയമത്തെ സാധുകരിക്കുന്നു.

പട്ടിക 227൪) ക്രമനിയഥം പട്ടിക 2.21(b) (901090
| ആഭ 2. ഡാറ്റയുടെ പ്രതിനിധാനവും ബുളിയന്‍ ബീജഗണിതവും

OR, AND എന്നിവയുടെ ഓരോ ഓപ്പറേഷനിലും ഓപ്പറന്ററുകളുടെ (ക്രമം ഓട്ട്പുട്ടിനെ
ബാധിക്കുകയില്ലെന്ന്‌ നിയമം ഉറപ്പുവരുത്തുന്നു.

2.7.6 സംയോജന നിയമം (Associative law)

OR, AND എന്നീ ഓപ്പറേഷനുകളില്‍ മൂന്നു ഓപ്പറന്റുകള്‍ വരുന്ന സന്ദര്‍ഭങ്ങളില്‍, ഓപ്പറന്റുകളെ
വൃതൃസ്ത രീതിയില്‍ ഗ്രൂപ്പ്‌ ചെയ്യുവാന്‍ സംയോജന നിയമം അനുവദിക്കുന്നു. %, Y,Z എന്നിവ
മൂന്ന്‌ വേരിയബിളുകള്‍ ആണെങ്കില്‍ സംയോജന നിയമം ഇങ്ങനെയാകുന്നു.

൫) X+(Y+Z)=(X+Y)+Z

Gi) X.(Y.Z)=(X.Y).Z

ട്രൂത്ത്‌ ടേബിളുകള്‍ 2.22(a), 2.22(b) എന്നിവ ഈ നിയമത്തെ സാധുകരിക്കുന്നു.

നി പ

പട്ടിക 22240 Moewsan തിമ്മം 1

പട്ടിക 2.22(a) യിലെ 6 ഉം 7 ഉം നിരകള്‍ X + (Y + Z) = (00-൩൦ -- 2 എന്ന നിയമത്തെയും
പട്ടിക 2.22(b) യിലെ 6 ഉം? ഉം നിരകള്‍ %. ൩.൧ ൦ (X.Y). ൧ എന്ന നിയമത്തെയും സാധൂകരിക്കുന്നു.

പട്ടിക 22240 moewrsam mage 2
@ Oe) 2. ഡാറ്റയുടെ പ്രതിനിധാനവും ബുളിയന്‍ ബീജഗണിതവും

OR (യുക്തിപരമായ സങ്കലനം) അല്ലെങ്കില്‍ ൧0 (യുക്തിപരമായ ഗുണിതം) പ്രവര്‍ത്തനങ്ങളിലെ
വേരിയബിളുകളുടെ ക്രമവും കൂടിച്ചേരലും അന്തിമ ഓട്ടപുട്ടിനെ ബാധിക്കുന്നില്ലെന്ന്‌ സംയോജന
നിയമം ഉറപ്പാക്കുന്നു.

2.7.7 വിതരണ നിയമം (Distributive law)

ബൂളിയന്‍ പദ്രപയോഗങ്ങള്‍ സാധാരണ ബീജഗണിതത്തിലെപ്പോലെ സങ്കലനത്തിനുമേലുള്ള

ഗുണന വിതരണം വഴിയും അതുപോലെ ഗുണനത്തിനുമേലുള്ള സങ്കലന വിതരണം വഴിയും
വിപുലീകരിക്കാന്‍ വിതരണ നിയമ്രപകാരം സാധിക്കുന്നു. %. ൩ 2 എന്നിവ വേരിയബിളുകള്‍
ആണെങ്കില്‍, ഈ നിയമം പ്രസ്താവിക്കുന്നത്‌ ഇങ്ങനെയാകുന്നു.
@X.(Y+Z)=X.Y+X.2
(i) X+ Y.Z=(X+Y).(X4+Z)

ചുവടെ ചേര്‍ത്തിരിക്കുന്ന (S}OW) ടേബിളുകള്‍ ഈ നിയമത്തെ സാധുകരിക്കുന്നു.

അ ന്നണ്ടിണ്ടി

പട്ടിക 2.2Ha) അമുചനത്തിനുമേുള്ള ഗുണന വിതം
പട്ടിക 2.23(a) യിലെ 5 ഉം 8 ഉം നിരകള്‍ % . (1൩൧2) -% ൩2% ൧ എന്ന നിയമത്തെ
സാധുകരിക്കുന്നു.

പട്ടിക 2240) ozommonlnjesenas meen വിതദണം
| (൫൫ ൫ ഒന്നാം വര്‍ഷ കമ്പ്യുട്ടര്‍ സയന്‍സ്‌ 2. ഡാറ്റയുടെ പ്രതിനിധാനവും ബൂളിയന്‍ ബീജഗണിതവും

പട്ടിക 2.23(b) യിലെ 5 ഉം 8 ഉം നിരകള്‍ X+Y.Z =(X+Y).(X+Z)ogam നിയമത്തെ
സാധൂകരിക്കുന്നു.
2.7.8 സ്വാംശീകരണ നിയമം (Absorption law)

രണ്ടു വേരിയബിളുകള്‍ ഉപയോഗിക്കുകയും അതില്‍ ഒന്ന്‌ ഉത്തരം ആകുകയും ചെയ്യുന്ന തരത്തി
ലുള്ള വിതരണ നിയമമാണ്‌ സ്വാംശീകരണ നിയമം. X ഉം Y ഉം വേരിയബിളുകള്‍ ആണെങ്കില്‍,
ഈ നിയമം ഇങ്ങനെ പ്രസ്താവിക്കുന്നു.

൫ X+(X.Y)=X
൫90. ഹട

ട്രൂത്ത്‌ ടേബിളുകള്‍ 2.24(൭), 2.24(b) എന്നിവ ഈ നിയമത്തെ സാധുകരിക്കുന്നു.

൦൦ ം |

പട്ടിക 2.24 A) ദ്ഥാികണ നിമമഥം 7 പട്ടിക 2.24(b) ര്ഥംശീകണേ നിമ്ഥം 2
പട്ടിക 2.24(a) യിലെ 1 ഉം4 ഉം നിരകളും പട്ടിക 2.24(b) യിലെ 1 ഉം 4 ഉം നിരകളും ഈ നിയമം
ശരിയാണെന്നു തെളിയിച്ചിരിക്കുന്നു.

പട്ടിക 2.25 നമ്മള്‍ ചര്‍ച്ച ചെയ്ത എല്ലാ ബൂളിയന്‍ നിയമങ്ങളും സൂക്ഷ്മമായി ചി(്രീകരിക്കുന്നു.

സങ്കലന അനന്യത (Additive Identity)

രൂണന അനന്യത (Multiplicative Identity)

BOM. നിയമം (Idempotent Law)

വര്‍ഗപൂരക നിയമം (Involution Law)

പുരകനിയമം (Complimentary Law)

{&271@20 (Commutative Law)

സംയോജനനിയമം (Associative Law) X+(Y+Z)=(X+Y)+Z | X.(Y.Z)=(X%.Y).Z
വിതരണനിയമം (Distributive Law) X.(Y+Z)=X.Y+X.Z | X+(Y.Z)=(K+Y) . 04)

സ്വാംശീകരണനിയാം (AbsorptionLaw) | X+(X.Y)=X X.(X+Y)=X

പട്ടിക 2.25 ngglond നിയമങ്ങള്‍
DOO ഒന്നാം വര്‍ഷ കമ്പ്യൂട്ടര്‍ സയന്‍സ്‌ 2. ഡാറ്റയുടെ പ്രതിനിധാനവും ബൂളിയന്‍ a

നമ്മള്‍ ഇതുവരെ ചര്‍ച്ച ചെയ്ത എല്ലാ നിയമങ്ങളും (SOO) ടേബിളിലൂടെയാണ്‌ തെളിയിച്ചിട്ടുള്ളത്‌.
അവയില്‍ ചിലത്‌ മറ്റ്‌ ചില നിയമങ്ങള്‍ ഉപയോഗിച്ച്‌ തെളിയിക്കാനാകും. ഇങ്ങനെ തെളിയിക്കുന്ന
രീതിയെ ബീജഗണിത രീതിയിലുള്ള തെളിവ്‌ (Algebraic proof) എന്ന്‌ വിളിക്കുന്നു. അവയില്‍
ചിലത്‌ നമുക്ക്‌ നോക്കാം.

1. X.(X+Y)=X എന്ന്‌ തെളിയിക്കുക. (അബ്സോര്‍പ്ഷന്‍ നിയമം).

LHS =X.(X+Y)
=X.X+X.Y (m@Be2manlnjeaeyae ശമുണഞന afwe@sMo (Distribution of multiplication over addition) )
=X+X.Y (വരീഗത്മതിയമം (ldempotent law))
=X.(1+Y) (MBeinaolnjeaeyss ozemMaioesmo (Distribution of multiplication over addition) )

=X.1 (MBLIN അനമു/ത (Additive identity})
=X (ഗുണന അമമു/ത (Multiplicative identity))
=RHS

11. X+(X.Y)=X എന്ന്‌ തെളിയിക്കുക. (അബ്സോര്‍പ്ഷന്‍ നിയമം).
IHS =X+(X.Y)
=X.1+X.Y (ണമ Ganayo (Multiplicative identity})

=XK.(1+Y) (MeeINGOINI622388 ഗുണന AMwe6Me (Distribution of multiplication over addition)

=X.1 (MBLIN അനമു/ത (Additive identity))
=X (ഗുണന അമമു/ത (Multiplicative identity))
=RHS

111. X+(Y.Z)=(X+ Y).(X+Z) എന്ന്‌ തെളിയിക്കുക. (വിതരണ നിയമം).
പ്രസ്താവനയിലെ 5 ലെ പദപ്രയോഗം നമുക്ക്‌ എടുക്കാം.

(X+Y) . (X+Z)
=(X+Y).X+(X+Y).Z (m@amoningeaeyas മുണമ ailoaeme (Distribution of multiplication over addition)
=X. ൬-2. (X+Y) ((@.2m)20(Commutative law))

=X.X+X.Y+Z.X+Z.Y — (meemanlnjeaejss ഗുണന allowsmo (Distribution of multiplication over addition)}
=X+X.Y+Z.X4+Z.Y (aroma miwao (idempotent law) }
=X.1+X.Y+Z.X+Z.Y — (ojonm Gammyo Multiplicative identity}

=X.U+Y)+Z.X4Z.Y (maamonlngeseyas oon ailoesno(Distribution of multiplication over addition) }
HSX.14+Z.X4+Z2.Y (MBN Cammy (Additive identity))
=HX.L+Z)4+Z.Y (mmamoanlnjesejas oon ailo~smo(Distribution of multiplication over addition) }
=X.14+Z.Y (MBAID Gamay (Additive identity))
=X +Y.Z (meemonlngesejas ojanM allowcsme(Distribution of multiplication over adaition))

കിട്ടിയിരിക്കുന്ന പദ്രപയോഗം തന്നിരിക്കുന്ന പ്രസ്താവനയുടെ LHS ആകുന്നു. ആയതിനാല്‍
സിദ്ധാന്തം തെളിയിക്കപ്പെട്ടിരിക്കുന്നു.
| DOO ഒന്നാം വര്‍ഷ കമ്പ്യുട്ടര്‍ സയന്‍സ്‌ 2. ഡാറ്റയുടെ പ്രതിനിധാനവും ബൂളിയന്‍ ബീജഗണിതവും

2.8 ഡി മോര്‍ഗന്‍സ്‌ സിദ്ധാന്തം (De Morgan’s theorems)

ലണ്ടന്‍ യൂണിവേഴ്‌സിറ്റി കോളേജിലെ തര്‍ക്കശാസ്ത്ര വിദഗ്ധനും ഗണിത ശാസ്രതജ്ഞനുമായി
രുന്ന അഗസ്റ്റസ്‌ ഡി മോര്‍ഗന്‍ (1806-1871) സങ്കീര്‍ണമായ ബൂളിയന്‍ പദ്പ്രയോഗങ്ങള്‍ ലളിതമാക്കാന്‍
രണ്ടു സിദ്ധാന്തങ്ങള്‍ നിര്‍ദേശിച്ചു. ഈ സിദ്ധാന്തങ്ങള്‍ ഡി മോര്‍ഗന്‍സ്‌ സിദ്ധാന്തങ്ങള്‍ എന്നറിയ
പ്പെടുന്നു. ഇവ താഴെ കൊടുത്തിരിക്കുന്നു.

0) X+Y=X-¥

Gi) XY> x ty

ഈ സിദ്ധാന്തങ്ങള്‍ ഇങ്ങനെ പ്രസ്താവിക്കാം.

A) “ബുൂളിയന്‍ വേരിയബിളുകളുടെ തുകയുടെ പുരകവും അവയുടെ ഓരോന്നിന്റെയും പൂരക
ങ്ങളുടെ ഗുണനഫലവും തുല്യമായിരിക്കും.

(൬) “ബൂളിയന്‍ വേരിയബിളുകളുടെ ഗുണനഫലത്തിന്‍ന്റെ പുരകവും അവയുടെ ഓരോന്നിന്റെയും
പൂരകങ്ങളുടെ തുകയും തുല്യമായിരിക്കും.”

ഒന്നാമത്തെ സിദ്ധാന്തത്തിന്റെ ബീജഗണിത രീതിയിലുള്ള തെളിവ്‌.

നമുക്ക്‌ തെളിയിക്കേണ്ടത്‌ KX+Y = KX . Y എന്നാണ്‌.

Z=X+Y (1) എന്ന്‌ നമുക്ക്‌ അനുമാനിക്കാം.
എങ്കില്‍ മവ (2)

Z+Z=1 (3)

Z.Z =0 (4)

ANOCAMIMALAAIOO സമവാക്യം (3) ഉം (4) ഉം ശരിയാണെന്നു നമുക്കറിയാം

(1), (3) എന്നീ സമവാക്യങ്ങള്‍ (2), (4) എന്നീ സമവാക്യങ്ങളില്‍ യഥാരരമം പ്രയോഗിച്ചാല്‍ താഴെ
കാണുന്ന (5), (6) എന്നീ സമവാക്യങ്ങള്‍ കിട്ടുന്നു.

യഹ ൫
(X+Y).( x+y) 50൭
ഡി മോര്‍ഗന്റെ ഒന്നാമത്തെ സിദ്ധാന്തം ശരിയാണെന്നു നമ്മള്‍ അനുമാനിക്കുക. അങ്ങനെയാണെ

ങ്കില്‍ (5), (6) എന്നീ സമവാക്യങ്ങളില്‍ (X +¥Y) എന്നതിന്‌ പകരം (X.Y ) എന്ന്‌ കൊടുക്കാമല്ലോ.
എങ്കില്‍ (5), (6) എന്നീ സമവാക്യങ്ങള്‍ താഴെ കൊടുത്തിരിക്കുന്നതുപോലെ മാറ്റിയെഴുതാം.

(X+Y)+(X.Y)=1 (7)
(X+Y).( X.Y )=0 (8)

(7), (8) എന്നീ സമവാക്യങ്ങള്‍ ഓരോന്നും പ്രത്യകം തെളിയിച്ചാല്‍, ആ സമവാക്യങ്ങള്‍ രൂപീകരി
ക്കാന്‍ നമ്മള്‍ നടത്തിയ അനുമാനവും ശരിയാണെന്ന്‌ നമുക്ക്‌ പരിഗണിക്കാം. അതായത്‌ (7), (8)
സമവാക്യങ്ങള്‍ ശരിയാണെങ്കില്‍ ഡി മോര്‍ഗന്റെ സിദ്ധാന്തവും ശരിയാണ്‌.
HOO ഒന്നാം വര്‍ഷ കമ്പ്യുട്ടി സയന്‍സ്‌

സമവാക്യം (7) ന്റെ LHS പരിഗണിക്കുക.

യ  =(X+Y4+ X).(X+Y4+ Y)

=(X+X+Y).(X+Y+Y)

=(1+ Y).(%+1)

=1.1

=1

=RHS

സമവാക്യം (8) ന്റെ LHS പരിഗണിക്കുക.

നി യി
=(X. X-¥ )+@-Y¥-X)

2. ഡാറ്റയുടെ പ്രതിനിധാനവും ബുളിയന്‍ ബീജഗണിതവും

(വിമ തിമ്ഥം (Distributive Law))
(Mo6WI2M നിത്മഥം (Associative Law))
(പുക തിമ്ഥം (Complimentary Law})

(MBE അനമുത (Additive Identity))

(ahoosm തിമ്ഥം (Distributive Law))

(Mo6WI2M WO 40 (Associative Law))

=(0.y)+@0.x) (പുക തിതമം (Complimentary Law))
=0+0 (സുചന അമദു/ത (Additive Identity))
=0

=RHS

(7), (8) എന്നീ സമവാക്യങ്ങള്‍ ബീജഗണിതത്തിലൂടെ നമ്മള്‍ തെളിയിച്ചിരിക്കുന്നു. ഇത്‌ അര്‍ഥമാ
ക്കുന്നത്‌ ഡി മോര്‍ഗന്റെ ഒന്നാമത്തെ സിദ്ധാന്തം തെളിയിച്ചിരിക്കുന്നു എന്നാണ്‌. ഈ സിദ്ധാന്തം
ട്രൂത്ത്‌ ടേബിള്‍ ഉപയോഗിച്ചും തെളിയിക്കാവുന്നതാണ്‌. അത്‌ നിങ്ങള്‍ ചെയ്ത്‌ പരിശീലിക്കുക.

രണ്ടാമത്തെ സിദ്ധാന്തത്തിന്റെ ബീജഗണിത രീതിയിലുള്ള തെളിവ്‌

നമുക്ക്‌ തെളിയിക്കേണ്ടത്‌ ട്ര + ¥ എന്നാണ്‌

എന്ന്‌ നമുക്ക്‌ അനുമാനിക്കാം. Z=X.Y (11)

എങ്കില്‍, Z=KY (12)

Z+7=1 3

Zz =0 ___ (14)

പൂരക നിയമ പ്രകാരം സമവാക്യം (13) Do (14) ഉം ശരിയാണെന്നു നമുക്കറിയാം.

66.൮5 —— (15)
&.Y).(KY)=0 ൭

ഡി മോര്‍ഗന്റെ ഒന്നാമത്തെ സിദ്ധാന്തം ശരിയാണെന്ന്‌ നമ്മള്‍ അനുമാനിക്കുക. അങ്ങനെയാണെങ്കില്‍
(15), (16) എന്നീ സമവാക്യങ്ങളില്‍ ( % ഗ)എന്നതിന്‌ പകരം (X + Y ) എന്ന്‌ കൊടുക്കാമല്ലോ.
എങ്കില്‍ (15), (16) എന്നീ സമവാക്യങ്ങള്‍ താഴെ കൊടുത്തിരിക്കുന്നതുപോലെ മാറ്റിയെഴുതാം.

&.Y+(xty)=1 —_ (dy
(X-Y)-Cxty)=0 —___ (18)
| (൫൫ ൫ ഒന്നാം വര്‍ഷ കമ്പ്യുട്ടര്‍ സയന്‍സ്‌ 2. ഡാറ്റയുടെ പ്രതിനിധാനവും ബൂളിയന്‍ ബീജഗണിതവും

(17), (18) എന്നീ സമവാക്യങ്ങള്‍ ഓരോന്നും പ്രത്യേകം തെളിയിച്ചാല്‍, ആ സമവാക്യങ്ങള്‍
രൂപീകരിക്കാന്‍ നമ്മള്‍ നടത്തിയ അനുമാനവും ശരിയാണെന്ന്‌ നമുക്ക്‌ പരിഗണിക്കാം. അതായത്‌
(17), (18) സമവാക്യങ്ങള്‍ ശരിയാണെങ്കില്‍ ഡി മോര്‍ഗന്റെ സിദ്ധാന്തവും ശരിയാണ്‌.

സമവാക്യം (17) ന്റെ LHS പരിഗണിക്കുക.

®&.Y+Oxty) വഹ. നി
=(x+ty 1] (ao@em തിത്മം (Distributive Law))

=(X+X+y)-(x+ty യു (യോജന Miao (Associative Law))
Hd+y)-(xth (പുക നിം (Complimentary Law))
=1.1 (ReaD അമു (Additive Identity))
=1

=RHS

സമവാക്യം (18) ന്റെ LHS പരിഗണിക്കുക.

൫2.൮. ( X+Y ) =(%.Y.X)+&.Y “Y) (ahoosm തിമ്ഥം (Distributive Law))
=(X.X.Y)+(X%.Y.y) (Moem22M നിമ്ഥം (Associative Law))
ട (0.൬ ൫.9 (പുക നിം (Complimentary Law))
=0+0 (സുചന അമദു/ത (Additive Identity))
=0
=RHS

(17), (18) എന്നീ സമവാക്യങ്ങള്‍ ബീജഗണിതത്തിലൂടെ നമ്മള്‍ തെളിയിച്ചിരിക്കുന്നു. ഇത്‌
അര്‍ഥമാക്കുന്നത്‌ ഡി മോര്‍ഗന്റെ രണ്ടാമത്തെ സിദ്ധാന്തം തെളിയിച്ചിരിക്കുന്നു എന്നാണ്‌. ഈ
സിദ്ധാന്തം ദ്രുത്ത്‌ ടേബിള്‍ ഉപയോഗിച്ചും തെളിയിക്കാവുന്നതാണ്‌. അത്‌ നിങ്ങള്‍ ചെയ്ത്‌
പരിശീലിക്കുക.

ചുവടെ കാണിച്ചിരിക്കുന്നതുപോലെ ഡി മോര്‍ഗന്‍ന്റെ സിദ്ധാന്തം ഉപയോഗിച്ച്‌
എത്ര വേരിയബിളുകളെയും നമുക്ക്‌ വിപുലീകരിച്ചെഴുതാം.

൧4-0൨-70... = ALB Ce Denne

ABCD... =A+B+C + D+...

മുകളില്‍ കൊടുത്തിരിക്കുന്ന പദ്രപയോഗങ്ങള്‍ ഡി മോര്‍ഗന്‍സ്‌ സിദ്ധാന്തം ഉപയോഗിച്ചുള്ള
രൂപമാറ്റത്തെ പ്രതിനിധീകരിക്കുന്നുണ്ടെങ്കിലും ചുവടെ കൊടുത്തിരിക്കുന്ന ഘട്ടങ്ങളിലൂടെ ഈ
പ്ര്രകിയയെ കുറെകക്കൂടി ലളിതമാക്കാം.

(1) ഫന്‍ജ്ഷനെ മുഴുവനായും പൂരകമാക്കുക.

(ii) എല്ലാ AND (.) കളെയും OR (+) ആയും എല്ലാ OR (+) കളെയും AND (.) ആയും
മാറ്റുക.

(iii) ഒഠരോ വേരിയബിളിനെയും പ്രത്യേകം പൂരകമാക്കുക. ഈ പ്രക്രിയയെ ഡിമോര്‍
ഗനൈസേഷന്‍ (Demorganisation) എന്ന്‌ വിളിക്കുന്നു. ലളിതമായി പറഞ്ഞാല്‍
ഡിമോര്‍ഗനൈസേഷന്‍ എന്നത്‌ ചിഹ്നങ്ങള്‍ മാറ്റിക്കൊണ്ട്‌ വാക്യങ്ങളെ വിഘ
ടിപ്പിക്കുക്‌ (Break the line cahnge the sign) എന്നാകുന്നു.

(൫൫ (൫ ഒന്നാം വര്‍ഷ കമ്പ്യൂട്ടര്‍ സയന്‍സ്‌ 2. ഡാറ്റയുടെ പ്രതിനിധാനവും ബൂളിയന്‍ ബീജഗണിതവും
സ്വയം വിലയിരുത്താം

A.B+B.C=1 എന്ന ബൂളിയന്‍ പദ്രപ്പയോഗത്തിന്റെ ദ്വന്വങ്ങള്‍
കണ്ടുപിടിക്കുക.

൧൨൧൭൧. എന്ന്‌ പ്രസ്താവിക്കുന്ന ബൂളിയന്‍ നിയമത്തിന്റെ പേരെഴുതുക.

(a) ക്രമ നിയമം (Commutative law) (12) വര്‍ഗസമ നിയമം (Idempotent

Law) (9) സ്വാംശീകരണ നിയമം (Absorption Law)

3. ഡി മോര്‍ഗന്റെ സിദ്ധാന്തം പ്രസ്താവിക്കുക.

2.9 ലളിതമായ ബുളിയന്‍ പദപ്രയോഗങ്ങളുടെ സര്‍കുട്ട്‌ രൂപകല്പന
(Circuit designing for simple Boolean expression)

അടിസ്ഥാന ഗേറ്റുകള്‍ ഉപയോഗിച്ച്‌ ബൂളിയന്‍ പദ്രപയോഗങ്ങളുടെ സര്‍ക്യൂട്ട്‌ രൂപകല്പന ചെയ്യാം.
A.B എന്ന ബൂളിയന്‍ പദ്പപയോഗത്തെ പ്രതിനിധീകരിക്കുന്നതിന്‌ AND ഗേറ്റും, ൧-1 യെ
പ്രതിനിധീകരിക്കുന്നതിന്‌ OR ഗേറ്റും, ക നെ പ്രതിനിധീകരിക്കുന്നതിന്‌ NOT ഗേറ്റും ഉപയോ
ഗിക്കാമെന്നു നമ്മള്‍ മനസ്സിലാക്കിക്കഴിഞ്ഞല്ലേോ. അതുപോലെ മറ്റ്‌ ബൂളിയന്‍ പദ്ര്പയോഗങ്ങളുടെ
സര്‍ക്യൂട്ട്‌ രൂപകല്‍പ്പന ചെയ്യുന്നത്‌ എങ്ങനെയാണെന്ന്‌ നമുക്ക്‌ നോക്കാം.

A TB എന്ന ബൂളിയന്‍ പദ്രപയോഗം പരിഗണിക്കുക. a
ഇതില്‍ രണ്ട്‌ ഇന്‍പുട്ടുകളുള്ള ഒരു ഓപ്പറേഷനും “4 A+B
അതില്‍ ഒരു ഇന്‍പുട്ട്‌ വിപരീതമായതുമാണ്‌ (Inverted). 2
അതുകൊണണ്ട്‌ ഈ സര്‍ക്യൂട്ടിന്റെ രേഖാചിത്രം ചിത്രം ചിത്രം 2.12: f(A, B) = ALB
2.12 ല്‍ കാണിച്ചിരിക്കുന്നതുപോലെ വരയ്ക്കാം.

ഉദാഹരണം: f (0, ൬ - X.Y + ¥ എന്ന | ഉദാഹരണം: f(a, b)=(a+b).(a +b)

ബൂളിയന്‍ പദപ്രയോഗത്തിന്റെ ലോജിക്കല്‍ എന്ന ബൂളിയന്‍ പദ്ര്രയോഗത്തിന്റെ

സര്‍ക്യൂട്ട ഉണ്ടാക്കുക. ലോജിക്കല്‍ സര്‍ക്യൂ ഉണ്ടാക്കുക.
x XY ‘ .
" XY+Y (a + b).G@ +5)
ചിത്രം മ f (XY) -XY+¥ ചിത്രം 2.14 > f (a,b) =(at+b). fa +p)

ഉദാഹരണം: 4 -b - മ. എന്ന ബൂളിയന്‍ പദ്രപയോഗത്തിന്റെ ലോജിക്കല്‍ സര്‍ക്യൂട്ട്‌ ഉണ്ടാക്കുക.

| elle) 2. ഡാറ്റയുടെ പ്രതിനിധാനവും ബുളിയന്‍ ബീജഗണിതവും

2.10 യൂണിവേഴ്‌സല്‍ ഒേറ്റ്‌ (Universal gates)

NAND, NOR എന്നീ ഗേറ്റുകളാണ്‌ യൂണിവേഴ്‌സല്‍ ഗേറ്റ്‌ എന്ന്‌ അറിയപ്പെടുന്നത്‌. മറ്റേതൊരു
ഗേറ്റും ഉപയോഗിക്കാതെ ഏതൊരു ബൂളിയന്‍ ഫങ്ഷനും രൂപകല്പന ചെയ്യാന്‍ കഴിയുന്ന ഗേറ്റ്‌
ആണ്‌ യൂണിവേഴ്‌സല്‍ ഗേറ്റ്‌. ഭൂരിഭാഗം ഡിജിറ്റല്‍ ഇന്റഗ്രേറ്റഡ്‌ ചിപ്പ്‌ (IC) കളിലും അടിസ്ഥാന
ഗേറ്റുകളായി ഉപയോഗിക്കുന്നത്‌ “പ്പ, NOR എന്നീ ഗേറ്റുകളാണ്‌, എന്തുകൊണ്ടെന്നാല്‍ ഈ
ഗേറ്റുകള്‍ ചെലവുകുറഞ്ഞതും എളുപ്പത്തില്‍ നിര്‍മ്മിക്കാവുന്നതുമാണ്‌.

2.10.1 NAND ഗേറ്റ്‌

AND ഗേറ്റിന്റെ ഓട്ട്പുട്ട NOT ഗേറ്റ്‌ ഉപയോഗിച്ച്‌ 44 A.B Y = (4.2)
വിപരീതമാക്കുന്ന (Inverted) ഗേറ്റ്‌ ആണ്‌
NAND ഗേറ്റ്‌. ചിത്രം 2.16 NAND ഗേറ്റിന്റെ
ലോജിക്കല്‍ സര്‍ക്യൂട്ട്‌ സജ്ജീകരണം
കാണിക്കുന്നു. A, 8 എന്നിവ ച്‌ ഗേറ്റിന്റെ ഇന്‍പുട്ടുകളും
AB എന്നത്‌ അതിന്റെ ഓട്ട്പുട്ടുമായാല്‍ NAND ഗേറ്റിന്റെ
ഓട്ട്പുട്ട്‌ എന്നത്‌ NOT ഗേറ്റ്‌ ഉപയോഗിച്ച്‌ വിപരീതമാക്കിയ
Y =(AB) ആണ്‌. അതുകൊണ്ട്‌ NAND ഗേറ്റിന്റെ
ലോജിക്കല്‍ പദപ്രയോഗം (A.B) എന്നാകുന്നു.

ചിത്രം 2.16NAND േറ്റിമ്റി eansienc mdayy

NAND ഗേറ്റിന്റെ ഏതെങ്കിലും ഒരു ഇന്‍പുട്ട്‌ | ആയാല്‍
അതിന്റെ ഓട്ടപുട്ടും 1 ആയിരിക്കുമെന്ന്‌ ട്രൂത്ത്‌ ടേബിളിലൂടെ പട്ടിക 2.26NAND conglong (കുത്ത്‌ ടേബിശ്‌
പ്രട്ടിക 2.26) കാണിച്ചു തരുന്നു. എല്ലാ ഇന്‍പുട്ടുകളും |

ആകുമ്പോള്‍ മാത്രമാണ്‌ അതിന്റെ ഓട്ട്പുട്ട്‌ 0 ആകുന്നത്‌.

NAND ഗേറ്റ്‌ എന്നത്‌ AND ഗേറ്റിന്റെ വിപരീത പ്രവര്‍ത്തന 4 (A.B)
മാണ്‌ ചെയ്യുന്നത്‌. അതുകൊണ്ട്‌ NAND eng ഇന്‍വെര്‍ട്ടഡ്‌ p
(Inverted) AND ഗേറ്റ്‌ എന്നറിയപ്പെടുന്നു.

ചിത്രം 2.17NAND മേല്‌
NAND ഗേറ്റിന്റെ പ്രതീകം ചിത്രം 2.17 ല്‍ കാണിച്ചിരിക്കുന്നു.

AND ഗേറ്റിന്റെ പ്രതീകത്തിന്റെ ഓട്ട്പുട്ടില്‍ ഒരു ചെറു വൃത്തം
ചേര്‍ക്കുമ്പോള്‍ അത്‌ NAND ഗേറ്റിന്റെ പ്രതീകം ആകും.

2.10.2 NOR ഗേറ്റ്‌

OR ഗേറ്റിന്റെ BOSONS NOT ഗേറ്റ്‌ ഉപയോഗിച്ച്‌ AGB y= (448)
വിപരീതമാക്കുന്ന ഗേറ്റ്‌ ആണ്‌ NOR ഗേറ്റ്‌. ചിത്രം

2.18 8 NOR ഗേറ്റിന്റെ ലോജിക്കല്‍ സര്‍ക്യൂട്ട്‌

സജ്ജീകരണം കാണിക്കുന്നു. A, B എന്നിവ OR alto 2.18NOR sogiong ഫജിക്കത വര്‍ക്‌
ഗേറ്റിന്റെ ഇന്‍പുട്ടുകളും A+ B എന്നത്‌ അതിന്റെ

ഓട്ട്പുട്ടുമായാല്‍ പപ0% ഗേറ്റിന്റെ ഓട്ട്പുട്ട്‌ എന്നത്‌

NOT ഗേറ്റ്‌ ഉപയോഗിച്ച്‌ വിപരീതമാക്കിയ Y = (A+B) ആണ്‌. അതുകൊണ്ട്‌ “പറ ഗേറ്റിന്റെ
ലോജിക്കല്‍ പദപ്രയോഗം (A + B) എന്നാകുന്നു.

(൫൫ ൫ ഒന്നാം വര്‍ഷ കമ്പ്യൂട്ടര്‍ സയന്‍സ്‌ 2. ഡാറ്റയുടെ പ്രതിനിധാനവും ബൂളിയന്‍ ബീജഗണിതവും

NOR ഗേറ്റില്‍ രണ്ട്‌ ഇന്‍പുട്ടുകളും 0 ആകുമ്പോള്‍
മാഠ്രതമാണ്‌ ഇതിന്റെ ഓട്ട്പുട്ട്‌ 1 ആകുന്നതെന്ന്‌ (രൂത്ത്‌
ടേബിളിലൂടെ (പട്ടിക 2.27) കാണിച്ചു തരുന്നു. ഏതെങ്കിലും
ഒരു ഇന്‍പുട്ട്‌ 1 ആയാല്‍ അതിന്റെ ഓട്ടപുട്ട 0 ആയിരിക്കും.
NOR ഗേറ്റ്‌ എന്നത്‌ OR ഗേറ്റിന്റെ വിപരീത പ്രവര്‍ത്തനമാണ്‌

ചെയ്യുന്നത്‌. അതുകൊണ്ട്‌ ഇതിനെ OR ന്റെ വിപരീതം
(Inverted) എന്നുകൂടി പറയുന്നു.

NOR ഗേറ്റിന്റെ പ്രതീകം ചിത്രം 2.19 ല്‍ കാണിച്ചിരിക്കുന്നു. 4 (A+B)
OR ഗേറ്റിന്റെ ഓട്ട്പുട്ടില്‍ ചെറിയ വൃത്തത്തോടു കൂടിയ B

moons NOR ന്റെ പ്രതീകം. ചിത്രം 2.19NOR gag”

പട്ടിക 2.27NOR saplodg (കുത്ത്‌ ടേബിള്‍

2.10.3 NAND ശേറ്റും NOR ഗേറ്റും ഉപയോഗിച്ച്‌ അടിസ്ഥാന ഗേറ്റുകളുടെ

രൂപകല്പന (Implementation of basic gates using NAND and NOR)
NAND അല്ലെങ്കില്‍ “പഠ ഗേറ്റ്‌ ഉപയോഗിച്ച്‌ എല്ലാ അടിസ്ഥാന ഗേറ്റുകളും നമുക്ക്‌ രൂപകല്പന
Ha1Q00. NAND ഗേറ്റ്‌ ഉപയോഗിച്ച്‌ അടിസ്ഥാന ഗേറ്റുകള്‍ രൂപകല്‍പന ചെയ്യുന്നത്‌ എങ്ങനെയെന്ന്‌
നമുക്ക്‌ നോക്കാം.

NAND മേറ്റ്‌ ഉപയോഗിച്ച്‌ NOT ധേറ്റിന്റെ പ്രതിനിധാനം

ചിത്രം 2.20 ല്‍ കാണുന്നതുപോലെ ഒരു പപ൧്വ്10 ഗേറ്റിന്റെ എല്ലാ ഇന്‍പുട്ടുകളിലും ഒരേ വില
നല്‍കികൊണ്ട്‌ NOT ഗേറ്റിനെ പ്രതിനിധീകരിക്കാം.

ചിത്രം 2.20 NAND മേറ്റ്‌ പെമോഗിച്ച്‌ NOT eoglod (aimmiwamo

തെളിവ്‌
A NAND കട (A.A)
എന്തുകൊണ്ടെന്നാല്‍ =A AA=A

NAND ഗേറ്റ്‌ കൊണ്ട്‌ NOT ഗേറ്റ്‌ ഉണ്ടാക്കുവാന്‍
കഴിയുമെന്ന്‌ താഴെ കൊടുത്തിരിക്കുന്ന (ടൂത്ത്‌
ടേബിളിന്റെ സഹായത്തോടെ (പട്ടിക 2.28) പിഒ 2.28 (S200 ബിര ൧പരോഗിച്ചുള്ള തെളിവ്‌
തെളിയിക്കുന്നു.

(൫൫ ൫ ഒന്നാം വര്‍ഷ കമ്പ്യുട്ടര്‍ സയന്‍സ്‌ 2. ഡാറ്റയുടെ പ്രതിനിധാനവും ബൂളിയന്‍ ബീജഗണിതവും

NAND മേറ്റ്‌ ഉപയോഗിച്ച്‌ AND മേറ്റിന്റെ പ്രതിനിധാനം

ചിത്രം 2.21 ല്‍ കാണുന്നതുപോലെ ഒരു NAND ഗേറ്റിനു തുടര്‍ച്ചയായി, ഓട്ട്പുട്ട്‌ വിപരീതമാക്കുവാന്‍
മറ്റൊരു NAND ഗേറ്റ്‌ ഉപയോഗിച്ച്‌, ൧10 ഗേറ്റിനെ പ്രതിനിധീകരിക്കാം.

A (4-B) AB ജു. A A.B
B B

ചിത്രം 22174770 മേറ്റ്‌ daiearole AND മേറ്റിമ്റി പ്രതിനിധാനം

തെളിവ്‌
നമൂക്കറിയാം ANAND B = (AB)
(ANAND B) NAND (ANAND B) = (A.B) NAND (4B)

((AB). (AB) )

( (AB) ) എന്തുകൊണ്ടെന്നാല്‍ A.A = A

= A.B എന്തുകൊണ്ടെന്നാല്‍ (A) =A

NAND ഗേറ്റ്‌ കൊണ്ട്‌ AND ഗേറ്റ്‌ ഉണ്ടാക്കാന്‍ കഴിയുമെന്ന്‌ (രൂത്ത്‌ ടേബിളിന്റെ സഹായത്തോടെ
പ്രട്ടിക 2.29) തെളിയിക്കുന്നു.

൧൧ ൭൭.൧൫ | ശ്രമ) |

po fo} ofa fot
ച. |
puto} ofa for fp
a ee

NAND ഗേറ്റ്‌ ഉപയോഗിച്ച്‌ OR ഗേറ്റിന്റെ പ്രതിനിധാനം

പട്ടിക 2.29 (52010 ിള്‍ ഉപതോഗിച്ചുള്ള തെളിവ്‌

ചിത്രം 2.22 ല്‍ കാണുന്നതുപോലെ [൧൮1 ഗേറ്റിന്റെ എല്ലാ ഇന്‍പുട്ടുകളെയും പൂരകങ്ങള്‍ ആക്കി,
OR coglanm NAND ഗേറ്റ്‌ ഉപയോഗിച്ച്‌ പ്രതിനിധീകരിക്കാം.

ക്‌ AGB
B

ചി(തം2.22 NAND 609" പെമോഗിച്ച്‌ AND മ്റിമ്റെപ്രതിതിമാനം

DOO ഒന്നാം വര്‍ഷ കമ്പ്യൂട്ടര്‍ സയന്‍സ്‌ 2. ഡാറ്റയുടെ പ്രതിനിധാനവും ബൂളിയന്‍ ബീജഗണിതവും

തെളിവ്‌
ANAND A = (A.A)
=A
അതുപോലെ, 1 B NAND B =3
അതുകൊണ്ട്‌, (A NAND A) NAND (BNANDB) = ച NAND B

=(A.B)

ച എന്തുകൊണ്ടെന്നാല്‍ (A.B)=AtB

=A+B എന്തുകൊണ്ടെന്നാല്‍ (A) =A

NAND ഗേറ്റ്‌ കൊണ്ട്‌ OR ഗേറ്റ്‌ ഉണ്ടാക്കുവാന്‍ കഴിയുമെന്നതിന്റെ തെളിവ്‌ (രൂത്ത്‌ ടേബിളില്‍
(്രട്ടിക 2.30) കാണിച്ചിരിക്കുന്നു.

പിക 2.30 (്രുത്ത്‌ ടേബിള്‍ ഉപെമാഗിച്ചുള്ള തെളിവ്‌

NAND ഗേറ്റ്‌ ഒരു യൂണിവേഴ്‌സല്‍ ഗേറ്റ്‌ ആകുന്നു. എന്തുകൊണ്ടെന്നാല്‍ ഇതുപയോഗിച്ച്‌ AND,
OR, NOT എന്നീ അടിസ്ഥാന ഗേറ്റുകള്‍ ഉണ്ടാക്കുവാന്‍ കഴിയുന്നു. NOR എന്ന മറ്റൊരു
യൂണിവേഴ്‌സല്‍ ഗേറ്റ്‌ ഉപയോഗിച്ച്‌ അടിസ്ഥാന ഗേറ്റുകള്‍ എങ്ങനെ രൂപകല്പന ചെയ്യാം എന്ന്‌
നോക്കാം.

NOR ഗേറ്റ്‌ ഉപയോഗിച്ച്‌ NOT ഗേറ്റിന്റെ പ്രതിനിധാനം

ചിത്രം 2.23 ല്‍ കാണുന്നതുപോലെ ഒരു പപ ഗേറ്റിന്റെ രണ്ടു ഇന്‍പുട്ടുകളിലും ഒരേ വില
നല്‍കികൊണ്ട്‌, വപ ഗേറ്റിനെ പ്രതിനിധീക

രിക്കാം. a = > (A¥A) =4 »> A > A
തെളിവ്‌

ച പ്ര ചിത്രം 2.23 NOR ദഗ്റുഉപോഗിച്ച്‌ NOT ഭഗ്്ലിഒ
A NOR A (A+ A) ° ്തിമം mon

=A എന്തുകൊണ്ടെന്നാല്‍

ലെ 90 ഈന്ത
NOR ഗേറ്റ്‌ കൊണ്ട്‌ NOT ഗേറ്റ്‌ ഉണ്ടാക്കാന്‍ കഴി പി

യുന്നു എന്നതിന്റെ തെളിവ്‌ ദ്രൂത്ത്‌ ടേബിളിന്റെ
സഹായത്തോടെ പട്ടിക 2.31 ല്‍ കൊടുത്തിരിക്കുന്നു.

പട്ട 2.37(ത്ത ബേ/ശഉപമോഗിച്ചുള്ള തെളി
(൫൫ ൫ ഒന്നാം വര്‍ഷ കമ്പ്യുട്ടര്‍ സയന്‍സ്‌ 2. ഡാറ്റയുടെ പ്രതിനിധാനവും ബൂളിയന്‍ ബീജഗണിതവും

NOR ഗേറ്റ്‌ ഉപയോഗിച്ച്‌ OR ഗേറ്റിന്റെ പ്രതിനിധാനം

ചിത്രം 2.24 ല്‍ കാണുന്നതുപോലെ ഒരു NOR ഗേറ്റിനു തുടര്‍ച്ചയായി മറ്റൊരു NOR ഗേറ്റ്‌
ഉപയോഗിച്ച്‌, OR ഗേറ്റിനെ പ്രതിനിധീകരിക്കാം.

A (A+B) A+B A A+B
=p കു

ചിത്രം 22൧0൪ മേറ്റ്‌ പെധോഗിച്ച്‌ OR മേറ്റിമ്റി പ്രതിതിധാനം
തെളിവ്‌
നമുക്കറിയാം A NORB = (A+B)
അതുകൊണ്ട്‌ (A NOR B) NOR (A NORB) = (A+B) NOR (A+B)
= (A+B)+(A+B))
= (A+B) എന്തുകൊണ്ടെന്നാല്‍ AtA=A
= A+B എന്തുകൊണ്ടെന്നാല്‍ (4) =A

NOR ഗേറ്റ്‌ കൊണ്ട്‌ OR ഗേറ്റ്‌ ഉണ്ടാക്കാന്‍ കഴിയുന്നു എന്നതിന്റെ തെളിവ്‌ (്രൂത്ത്‌ ടേബിളിന്റെ
സഹായത്തോടെ പട്ടിക 2.32 ല്‍ കാണിച്ചിരിക്കുന്നു.

പ

പട്ടിക 2.32 (ടുത്ത്‌ ടേബിള്‍ ഉപോഗിച്ചുള്ള തെളിവ്‌
NOR ഗേറ്റ്‌ ഉപയോഗിച്ച്‌ AND ഗേറ്റിന്റെ പ്രതിനിധാനം

ചിത്രം 2.25 ല്‍ കാണുന്നതുപോലെ [01% ഗേറ്റിന്റെ എല്ലാ ഇന്‍പുട്ടുകളും പൂരകങ്ങള്‍ ആക്കി,
AND ഗേറ്റിനെ NOR ഗേറ്റ്‌ ഉപയോഗിച്ച്‌ പ്രതിനിധീകരിക്കാം.

(A +B) =A.B »> A A.B
B

202.25 NOR മേറ്റ്‌ പയോഗിച്ച്‌ AND ഗേറ്റിമ്റി പ്രതിനിധാനം

DOO ഒന്നാം വര്‍ഷ കമ്പ്യൂട്ടര്‍ സയന്‍സ്‌ 2. ഡാറ്റയുടെ പ്രതിനിധാനവും ബൂളിയന്‍ ബീജഗണിതവും

തെളിവ്‌
ANORA = (KTA)=A

അതുപോലെ, BNOR B = (BB) = B
അതുകൊണ്ട, (A NOR A) NOR (BNORB) = A NOR B
= (A+B)
=(A).(§) എന്തുകൊണ്ടെന്നാല്‍ (A+B) = A.B

= AB എന്തുകൊണ്ടെന്നാല്‍ A=A

NOR ഗേറ്റ്‌ ഒരു യൂണിവേഴ്‌സല്‍
ഗേറ്റ്‌ ആകുന്നു എന്തുകൊണ്ടെ
ന്നാല്‍ ഇതുപയോഗിച്ച്‌ AND,
OR, NOT എന്നീ അടിസ്ഥാന
ഗേറ്റുകളുടെ പ്രവര്‍ത്തനങ്ങള്‍
നടപ്പിലാക്കുവാന്‍ കഴിയുന്നു.
NOR ഗേറ്റ്‌ കൊണ്ട്‌ AND ഗേറ്റ്‌
ഉണ്ടാക്കുവാന്‍ കഴിയുന്നു
എന്നതിന്റെ തെളിവ്‌ (ടൂത്ത്‌ ടേബിളിന്റെ സഹായത്തോടെ പട്ടിക 2.33 ല്‍ കാണിച്ചിരിക്കുന്നു.

പട്ടിക 2.33 (ത്ത്‌ ബി ഉപോഗിച്ചുള്ള തെളിവ്‌

നമുക്ക്‌ പരിശോധിക്കാം

1. X+Yogam ബൂളിയന്‍ പദപ്രയോഗത്തിന്റെ ലോജിക്കല്‍ സര്‍ക്യൂട്ട്‌
വരയ്ക്കുക.
റ) 2. യൂണിവേഴ്‌സല്‍ ഗേറ്റുകള്‍ ഏതൊക്കെയാണ്‌?.

3. ഏതെങ്കിലും ഒരു ഇന്‍പുട്ട്‌ 1 ആകുമ്പോള്‍ ഓട്ട്പുട്ട്‌ 0 തരുന്ന ഗേറ്റ്‌

ആകുന്നു.

fa) OR (b) AND (QNAND (൭1൨൩
4. ANANDB=

@AtB  b) AB (൭ (A+B) (൭൮൧൫)

(൫ ൫ ഒന്നാം വര്‍ഷ കമ്പ്യുട്ടര്‍ സയന്‍സ്‌ 2. ഡാറ്റയുടെ പ്രതിനിധാനവും ബുളിയന്‍ ബീജഗണിതവും

( നമുക്ക്‌ സംഗ്രഹിക്കാം

വിവിധ രീതിയിലുള്ള ഡാറ്റ പ്രതിനിധീകരണത്തെ കുറിച്ച്‌ ഈ അധ്യായത്തില്‍ ചര്‍ച്ച
ചെയ്തു. ഡാറ്റ പ്രതിനിധീകരണം ചര്‍ച്ച ചെയ്യുന്നതിനുമുമ്പ്‌ വൃത്ൃയസ്ത സംഖ്യാ
സ്രമ്പദായങ്ങളും അവയുടെ പരിവര്‍ത്തനങ്ങളും പരിചയപ്പെട്ടു. അതിനു ശേഷം പൂര്‍ണ
സാംഖ്യ, ഫ്‌ളോട്ടിങ്‌ പോയിന്റ്‌ സംഖ്യ, എന്നിവയുടെ പ്രതിനിധീകരണവും, ശബ്ദം, ചിത്രം,
വീഡിയോ എന്നിവയുടെ പ്രതിനിധീകരണത്തിന്റെ വിവിധ രീതികളും നാം മനസ്സിലാക്കി.
ബൂളിയന്‍ ബീജഗണിതത്തിലെ ആശയങ്ങള്‍ക്കൊപ്പം ലോജിക്കല്‍ ഓപ്പറേറ്ററുകള്‍,
ഗേറ്റുകള്‍, ബൂളിയന്‍ നിയമങ്ങള്‍ എന്നിവ നാം ചര്‍ച്ച ചെയ്തു. അടിസ്ഥാന ലോജിക്‌
സര്‍ക്യൂട്ട്‌ രൂപകല്പന ചെയ്യുന്ന രീതികള്‍ മനസ്സിലാക്കുന്നതോടടൊപ്പം യൂണിവേഴ്സല്‍
ഗേറ്റിന്റെ പ്രാധാന്യവും ചര്‍ച്ച ചെയ്തുകൊണ്ടാണ്‌ ഈ അധ്യായം അവസാനിപ്പിക്കുന്നത്‌.

പഠനനേട്ടങ്ങള്‍

ഈ അധ്യായം പൂര്‍ത്തിയാകുന്നതോടുകൂടി പഠിതാവിനു താഴെ പറയുന്നവ സാധ്യമാകും.

© വിവിധ സംഖ്യാ സ്രമ്പദായങ്ങളുടെ സവിശേഷതകള്‍ വിശദീകരിക്കാന്‍.

© ഒരു സംഖ്യാ സ്യമ്പദായത്തില്‍നിന്ന്‌ മറ്റൊരു സംഖ്യാ സ്രമ്പദായത്തിലേക്ക്‌ പരിവര്‍ത്തനം
ചെയ്യാന്‍.

© ബൂളിയന്‍ ഗണിതങ്ങള്‍ ചെയ്യാന്‍.

© സംഖ്യകളും അക്ഷരങ്ങളും കമ്പ്യൂട്ടര്‍ മെമ്മറിയില്‍ പ്രതിനിധീകരിക്കാന്‍.
[0 ശബ്ദം, allo, വീഡിയോ എന്നീ ഫയലുകളുടെ ഘടനകള്‍.

ക ബൂളിയന്‍ ബീജഗണിതത്തിന്റെ ആശയങ്ങള്‍.

€ ലോജിക്‌ ഓപ്പറേറ്ററുകളുടെയും ഗേറ്റുകളുടെയും പ്രവര്‍ത്തനങ്ങള്‍ ഉദാഹരണ സഹിതം
വിശദീകരിക്കാന്‍.

° ബൂളിയന്‍ ബീജഗണിതത്തിലെ അംഗീകൃതതത്വങ്ങള്‍, സിദ്ധാന്തങ്ങള്‍, നിയമങ്ങള്‍ എന്നിവ
പ്രസ്താവിക്കാനും തെളിയിക്കാനും.

& ലളിതമായ അടിസ്ഥാന ബൂളിയന്‍ പദ്രപയോഗങ്ങളുടെ സര്‍ക്യൂട്ട്‌ രൂപകല്പന ചെയ്യാന്‍.

€ യൂനിവേഴ്‌സല്‍ ഗേറ്റുകള്‍ ഉപയോഗിച്ച്‌ അടിസ്ഥാന ഗേറ്റുകളുടെ രൂപകല്പന.
DOO ഒന്നാം വര്‍ഷ കമ്പ്യൂട്ടര്‍ സയന്‍സ്‌ 2. ഡാറ്റയുടെ പ്രതിനിധാനവും ബൂളിയന്‍ ബീജഗണിതവും

ഥാതൃകചോദ്യങ്ങള്‍ ll NMAC TTT

BQ വാചകത്തില്‍ ഉത്തരമെഴുതുക.
1. (296), എന്ന സംഖ്യയില്‍ 9 ന്റെ സ്ഥാനവില എത്രയാണ്‌?

2. 55 എന്ന ദശസംഖ്യ (Decimal) ക്ക്‌ തുല്യമായ അഷ്ടസംഖ്യ (Octal) കണ്ടുപിടിക്കുക.
3. താഴെ കൊടുത്തിരിക്കുന്ന ശ്രേണികളില്‍ വിട്ടുപോയ സംഖ്യകള്‍ പൂരിപ്പിക്കുക.

a) 101,, 1010,, 1111,,

b) 15, , 16,, 17,,

©) 18,,, LA,,, 1C
4. 1/6, - (1010, = (1000), ആയാല്‍ X ന്റെ വില കണ്ടുപിടിക്കുക.

16>—

5൭. ലോകത്തിലെ എല്ലാ ലിഖിതഭാഷകളിലെയും അക്ഷരങ്ങളെ പ്രതിനിധാനം ചെയ്യാന്‍
ഉപയോഗിക്കുന്ന സംവിധാനത്തിന്റെ പേരെഴുതുക.

6. താഴെ കൊടുത്തിരിക്കുന്നവയില്‍ നിന്ന്‌ ലോജിക്കല്‍ പ്രസ്താവനകള്‍ കണ്ടുപിടിക്കുക.
a) നിങ്ങള്‍ എന്തുകൊണ്ടാണ്‌ വൈകിയത്‌?
12) നിങ്ങള്‍ എന്നോടൊപ്പം കമ്പോളത്തില്‍ വരാന്‍ തയ്യാറാണോ?
C) ഇന്ത്യ എന്റെ രാജ്യം ആകുന്നു.
9) ക്ലാസ്‌ മുറിയിലേക്ക്‌ പോകുക.
7. മൂന്ന്‌ അടിസ്ഥാന ഗേറ്റുകളുടെ പേരെഴുതുക.
8. ഇന്‍വെര്‍ട്ടര്‍ എന്നറിയപ്പെടുന്ന ഗേറ്റ്‌ ഏതാണ്‌?
0. രണ്ട്‌ പൂരക നിയമങ്ങള്‍ എഴുതുക.
10. (A+B) എന്ന ബൂളിയന്‍ പദ്പ്രയോഗത്തെ

a) AND b) NOR ©) OR d) NAND

ഗേറ്റ്‌ പ്രതിനിധാനം ചെയ്യുന്നു.

ഒന്നോ രണ്ടോ വാകൃത്തില്‍ ഉത്തരമെഴുതുക.

1. ഡാറ്റ പ്രതിനിധാനം എന്ന പദം നിര്‍വചിക്കുക.

2. സാംഖ്യ സ്രമ്പദായം എന്നത്‌ കൊണ്ട്‌ നിങ്ങള്‍ അര്‍ഥമാക്കുന്നത്‌ എന്താണ്‌? ഏതെങ്കിലും
നാല്‌ സംഖ്യാ സ്രമ്പദായങ്ങള്‍ എഴുതുക.

3. താഴെ കൊടുത്തിരിക്കുന്ന സംഖ്യകള്‍ മറ്റു മൂന്ന്‌ സംഖ്യാ സ്രമ്പദായങ്ങളിലേക്കു മാറ്റിയെ

ഴുതുക.
a) (125), b) 98 c) (101110), d) (A2B),,
4. താഴെ കൊടുത്തിരിക്കുന്ന സംഖ്യകള്‍ മറ്റു മൂന്ന്‌ സംഖ്യാ സം്യമ്പദായങ്ങളിലേക്ക്‌ പരിവര്‍ത്തനം
ചെയ്യുക.
a) (71.1), b) (207.13), ©) 93.25 d) (10111011.1101),
(൫൫ ൫ ഒന്നാം വര്‍ഷ കമ്പ്യൂട്ടര്‍ സയന്‍സ്‌ 2. ഡാറ്റയുടെ പ്രതിനിധാനവും ബുളിയന്‍ ബീജഗണിതവും

5. If ®, = MW); = (ര = 28), ആയാല്‍, 1, 2. എന്നിവയുടെ വില കണ്ടുപിടിക്കുക.
6. താഴെ കൊടുത്തിരിക്കുന്ന സംഖ്യകള്‍ അവരോഹണ്രകമത്തിലാക്കുക.

a) (101, b) (110, c) (111000), 9 (251),
7. (X), = (0111), + (11011), - (11100), ആയാല്‍ X വില കണ്ടുപിടിക്കുക.

8. പൂര്‍ണസംഖ്യകള്‍ കമ്പ്യൂട്ടര്‍ മെമ്മറിയില്‍ പ്രതിനിധാനം ചെയ്യുവാന്‍ ഉപയോഗിക്കുന്ന
രീതികള്‍ എന്തെല്ലാമാണ്‌ ?

60. OOP കൊടുത്തിരിക്കുന്ന സംഖ്യകള്‍ ചിഹ്നവും മൂല്യവും, 1 ന്റെ പൂരകം, 2 ന്റെ പൂരകം
എന്നീ രീതികളില്‍ പ്രതിനിധീകരിക്കുക.
a) -19 b) +49 ൭ -97 d) -127

10. ചിഹ്നവും മൂല്യവും രീതിയില്‍ പ്രതിനിധാനം ചെയ്ത (10011001), എന്ന സംഖ്യയുടെ

പൂര്‍ണസാംഖ്യ കണ്ടുപിടിക്കുക.

11. 32 ബിറ്റ്‌ ഉപയോഗിക്കുന്ന കമ്പ്യൂട്ടറില്‍ ഫ്‌ളോട്ടിങ്‌ പോയിന്റ്‌ സംഖ്യകള്‍ പ്രതിനിധാനം
ചെയ്യുന്ന രീതി വിശദീകരിക്കുക.

12. കമ്പ്യൂട്ടര്‍ മെമ്മറിയില്‍ അക്ഷരങ്ങള്‍ പ്രതിനിധീകരിക്കുന്നതിനുള്ള രീതികള്‍ എന്തൊ
ക്കെയാണ്‌ ?
13. അക്ഷരങ്ങളുടെ പ്രതിനിധീകരണത്തില്‍ യൂണികോഡിന്റെ പ്രാധാന്യം ചുരുക്കി വിവരിക്കുക.

14. ചേരുംപടി ചേര്‍ക്കുക:

ഏതെങ്കിലും ഇന്‍പുട്ട്‌ 1 ആയാല്‍ ജട്ട്പുട്ട്‌ 1 ആകുന്നു.
ഏതെങ്കിലും ഇന്‍പുട്ട്‌ ആയാല്‍ ജട്ട്പുട്ട്‌ 0 ആകുന്നു.
ഏതെങ്കിലും ഇന്‍പുട്ട്‌ ആയാല്‍ ജട്ട്പുട്ട്‌ 1 ആകുന്നു.

ഏതെങ്കിലും ഇന്‍പുട്ട്‌ 1 ആയാല്‍ ജട്ട്പുട്ട്‌ 0 ആകുന്നു.

15. താഴെ കൊടുത്തിരിക്കുന്ന ബുളിയന്‍ പദപ്രയോഗങ്ങളുടെ ദ്വൈത (dual) രൂപങ്ങള്‍ എഴുതുക.

a) X.Y+Z b) AC+A14+A.C 9 (A+0)(A1.A)

16. താഴെ കൊടുത്തിരിക്കുന്ന ബൂളിയന്‍ പദ്രപയോഗങ്ങളുടെ പൂരകം (complement) എഴുതുക.
a) AB >) ABCD

17. താഴെ കൊടുത്തിരിക്കുന്ന ബൂളിയന്‍ പദപ്രയോഗങ്ങളുടെ ലോജിക്‌ സര്‍ക്യൂട്ട്‌ നിര്‍മിക്കുക.
(൫) ab +e (it) ab+ 3 b+ ap (iit) a+ ).G +5)

19. NAND, NOR എന്നീ ഗേറ്റുകളെ യൂണിവേഴ്‌സല്‍ ഗേറ്റുകള്‍ എന്ന്‌ വിളിക്കുന്നത്‌
എന്തുകൊണ്ടാണ്‌? ഉദാഹരണ സഹിതം സാധുകരിക്കുക.
അ) ഒന്നും വര്‍ഷ കമ്പ്യൂട്ടര്‍ സയന്‍സ്‌ 2. ഡാറ്റയുടെ പ്രതിനിധാനവും ബൂളിയന്‍ ബീജഗണിതവും

ഉപന്യസിക്കുക

1. സംഖ്യകള്‍ കമ്പ്യൂട്ടര്‍ മെമ്മറിയില്‍ പ്രതിനിധീകരിക്കുന്നതിനുള്ള വിവിധ രീതികളെക്കുറിച്ച്‌
വിശദീകരിക്കുക.

2. അക്ഷരങ്ങള്‍ കമ്പ്യൂട്ടര്‍ മെമ്മറിയില്‍ പ്രതിനിധീകരിക്കുന്നതിനുള്ള വിവിധ രീതികളെക്കുറിച്ച്‌
വിശദീകരിക്കുക.

3. ശബ്ദം, ചിരം, വീഡിയോ എന്നീ ഫയലുകള്‍ കമ്പ്യൂട്ടറില്‍ സംഭരിക്കുന്നതിന്റെ ഘടന
വിവരിക്കുക.

4. മുന്ന്‌ ഇന്‍പൂട്ടുകള്‍ ഉള്ള AND ഗേറ്റിന്റെ പ്രതീകം, ബൂളിയന്‍ പദപ്രയോഗം, (SOW) ടേബിള്‍
എന്നിവ എഴുതുക.

൭. എല്ലാ അടിസ്ഥാന ഗേറ്റുകളും “പ്റ0% ഗേറ്റ്‌ ഉപയോഗിച്ച്‌ നിര്‍മ്മിച്ച്‌ യൂനിവേഴ്‌സല്‍ ഗേറ്റ്‌ ആണെന്ന്‌

തെളിയിക്കുക.
പ്രധാന ആശയങ്ങള്‍

ഇന്നത്തെ ലോകത്ത്‌ നമുക്ക്‌ കമ്പ്യൂട്ടറുകളും അതിന്റെ ഉപ

൭ ഡാറ്റ പ്രോസസ്സിങ്‌ യോഗങ്ങളും പരിചയമുണ്ട്‌. നല്‍കുന്ന നിര്‍ദേശങ്ങള്‍ക്ക

൭ AMSA പ്രവര്‍ത്തന യുണിറ്റുകള്‍ നുസരിച്ച്‌ ഡാറ്റ സ്വീകരിക്കുകയും പ്രോസസ്സ്‌ ചെയ്ത്‌

൭ ഹാര്‍ഡ്വെയര്‍ ഓട്ട്പുട്ട പ്രദര്‍ശിപ്പിക്കുകയും ചെയ്യുന്ന വേഗതയേറിയ ഒരു
പ്രോസസ്ററുകള്‍ ഇലക്ട്രോണിക്‌ ഉപകരണമാണ്‌ കമ്പ്യൂട്ടര്‍. ഒരു കമ്പ്യൂട്ടര്‍
ദദര്‍ബോര്‍ഡ്‌

സിസ്റ്റത്തിന്റെ അടിസ്ഥാന രൂപകല്‍പ്പനയുടെ അവലോ

പിരി ്ളാോടടു്ളും കനം ഈ പാഠഭാഗത്ത്‌ അവതരിപ്പിക്കുന്നു. ഒരു കമ്പ്യൂട്ടര്‍

മെമറി - പ്രാഥമിക മെമറി, ദ്വിതീയ
മെമ്മറി

© കമ്പ്യൂട്ടറില്‍ മെമറിയുടെ ഉപയോഗം

© ഉന്‍പുട്ട്‌ ഓട്ട്പുട്ട്‌ ഉപകരണങ്ങള്‍

o 00 6

സിസ്റ്റത്തിന്റെ വിവിധ ഘടകങ്ങള്‍ എങ്ങിനെ ക്രമീകരിക്ക
പ്പെട്ടിരിക്കുന്നു എന്നും, ഒരു പ്രത്യേക ചുമതല നിര്‍വ്ൃഹി
ക്കാന്‍ ഏതെല്ലാം പ്രവര്‍ത്തനങ്ങള്‍ നടത്തുന്നു എന്നും
ഇവിടെ ചര്‍ച്ച ചെയ്യുന്നു. ഒരു കമ്പ്യൂട്ടറിന്‌ പ്രധാനമായും

* നന മാര്‍ഗങ്ങള്‍ രണ്ട്‌ ഘടകങ്ങളാണുള്ളത്‌. ഹാര്‍ഡ്വെയറും സോഫ്റ്റവെ
൭ ഹരിത കമ്പുട്ടിംറ്‌ യറും. ഒരു കമ്പ്യൂട്ടര്‍ സംവിധാനവുമായി ബന്ധപ്പെട്ട എല്ലാ
൭ സോഫ്റ്റ്വെയര്‍ ഭൌതിക ഘടകങ്ങളേയും ഹാര്‍ഡ്വെയര്‍ എന്ന്‌ സൂചിപ്പി
© MIMo സോഫ്റ്റ്വെയര്‍ (ഓഷറേ ക്കുന്നു. ഒരു നിര്‍ദ്ദിഷ്ട പ്രവൃത്തി ചെയ്യുന്ന ഹാര്‍ഡ്വെയ
ററിങ്സിസ്തം, ദാഷ പ്രോസസ്തറുകള്‍, യൂട്ടി റിനുള്ള ഒരു കൂട്ടം നിര്‍ദ്ദേശങ്ങളാണ്‌ സോഫ്റ്റ്വെയര്‍.
ലിറ്റി സോഫ്റ്റ്വെയര്‍) കമ്പ്യൂട്ടര്‍ ഉപയോഗിച്ച്‌ നിത്യജീവിതത്തിലെ ഏതെങ്കിലും
© ആപ്പിക്കേഷന്‍ സോഫ്റ്റ്വെയര്‍ (പൊതു പ്രശ്‌നം നമുക്ക്‌ പരിഹരിക്കേണ്ടി വരുമ്പോള്‍, ഡാറ്റ പ്രോ
ഉപയോഗം, പ്രത്യേക ഉപയോഗം) MM ചെയ്ത്‌ അതിനാവശ്യമായ വിവരങ്ങള്‍ നാം ഉത്പാ
° o ഓഷണ്‍ സോഴ്‌സ്‌ സോഫ്റ്റ്വെ ദിപ്പിക്കുന്നു. ഈ അധ്യായത്തില്‍ ആദ്യം ഡാറ്റ പ്രോസ

യ

Maslow ആശയങ്ങള്‍ അവതരിപ്പിക്കുകയും, ഡാറ്റ
പ്രോസസ്സിങ്ങിന്‌ ഒരു കമ്പ്യൂട്ടറിന്റെ ശ്രവര്‍ത്തന ഭാഗങ്ങള്‍

ഫ്രീവെയറും ഷെയര്‍വെയറും
ഉടമസ്ഥാവകാശമുള്ള സോഫ്റ്റ്വെയര്‍
(Proprietary software)

൫ ഹ്യുമണ്‍വെയര്‍/ലൈവ്വെയര്‍

o ൭

സഹായിക്കുന്നത്‌ എങ്ങനെ എന്ന്‌ ചര്‍ച്ചചെയ്യുകയും ചെയ്യു
ന്നു. അതിനുശേഷം വിവിധ ഹാര്‍ഡ്വെയര്‍ ഘടകങ്ങള്‍
അവതരിപ്പിക്കുന്നു. അതിനു ശേഷം ഇലക്ട്രോണിക്‌ വേസ്റ്റ്‌,
അവയുടെ നിര്‍മാര്‍ജ്ജന രീതികള്‍, ഹരിത കമ്പ്യൂട്ടിങ്ങിന്റെ
ആശയം എന്നിവ വിവരിക്കുന്നു. പിന്നീട്‌ വിവിധതരത്തി
ലുള്ള കമ്പ്യൂട്ടര്‍ ഭാഷകള്‍ക്കൊപ്പം സോഫ്റ്റ്വെയറുകളുടെ
വിശദമായ തരംതിരിവും നല്‍കിയിരിക്കുന്നു. ഓപ്പണ്‍
സോഴ്‌സ്‌, ഫ്രീവെയര്‍, ഷെയര്‍ വെയര്‍, ഉടമസ്ഥാവകാശ
മുള്ള സോഫ്റ്റ്വെയര്‍ എന്നിവയുടെ ആശയങ്ങളെക്കുറിച്ചും

നമ്മള്‍ ചര്‍ച്ച ചെയ്യുന്നു.
ഒന്നാം വര്‍ഷ കമ്പ്യൂട്ടര്‍ സയന്‍സ്‌ 3. കമ്പ്യൂട്ടര്‍ സിസ്റ്റത്തിന്റെ ഘടകങ്ങള്‍

3.1. ഡാറ്റ പ്രോ്സദ്്ിങ്ങ്‌ നം Processing)

വിവരങ്ങള്‍ ലഭിക്കുന്നതിനായി ഡാറ്റയില്‍ നടത്തുന്ന ഓപ്പറേഷന്‍ അഥവാ പ്രവര്‍ത്തനങ്ങളെ
യാണ്‌ ഡാറ്റ പ്രോസസ്സിങ്ങ്‌ എന്ന്‌ സൂചിപ്പിക്കുന്നത്‌. സംഖ്യ, പദം, അളവ്‌, തുക തുടങ്ങിയ
അസംസ്കൃതവസ്തുതകളും അക്കങ്ങളും ഡാറ്റ പ്രതിനിധീകരിക്കുന്നു. ഇത്‌ പ്രോസസ്സ്‌
ചെയ്യാനോ കൈകാര്യം ചെയ്യാനോ സാധിക്കും. അര്‍ത്ഥവത്തായതോ പ്രോസസ്സ്‌ ചെയ്തതോ
ആയ ഡാറ്റയുടെ രൂപമാണ്‌ ഇന്‍ഫര്‍മേഷന്‍ (വിവരം). ഇത്‌ നമ്മുടെ അറിവ്‌ വര്‍ദ്ധിപ്പിക്കുകയും
തീരുമാനങ്ങള്‍ എടുക്കാന്‍ സഹായിക്കു
കയും ചെയ്യുന്നു. ചിര്രം 3.1 ല്‍ കാണിച്ചിരി
ക്കുന്നത്‌ പോലെ ഡാറ്റ പ്രോസസ്സിങ്ങ്‌ ആറു
ഘട്ടങ്ങളിലൂടെ കടന്നുപോകുന്നു.
a) ഡാറ്റ ശേഖരണം (Data Capturing)
1) ഡാറ്റയെ ഇന്‍പുട്ട ചെയ്യുന്നു.
(Input of Data)
C) ഡാറ്റ സംഭരണം/സമാഹരിക്കല്‍
d) പ്രോസസ്സിങ്ങ്‌ /ഡാറ്റ കൈകാര്യം
ചെയ്യുന്നു.

6) വിവരം ഓട്ടപുട്ട ചെയുന്നു.

1) വിവരം വിതരണം ചെയ്യുന്നു.

ചിത്രം 2.7 WIN ClalmugylewBlang ഘട്ടങ്ങശ്‌

നമുക്ക്‌ ഈ ഘട്ടങ്ങളെ വിശദമായി പരിശോ
ധിക്കാം.

ഡാറ്റ ശേഖരണം (Data Capturing): ഡാറ്റ പ്രോസസ്സിങ്ങിന്റെ ആദൃഘട്ടമാണിത്‌. ഇവിടെ ഉറ
വിട രേഖകള്‍ (source document) എന്നറിയപ്പെടുന്ന ഒരു ഫോറം, ഡാറ്റ കൃത്യമായി ശേഖരിച്ച്‌
ക്രമീകരിക്കാന്‍ ഉപയോഗിക്കുന്നു.

ഇന്‍പുട്ട്‌: ഈ ഘട്ടത്തില്‍ ഉറവിട രേഖകള്‍ വഴി ശേഖരിച്ച ഡാറ്റ പ്രോസസ്സ്‌ ചെയ്യുന്നതിനായി
കമ്പ്യൂട്ടറിന്‌ നല്‍കുന്നു. എന്നാല്‍ ഇക്കാലത്ത്‌ പല സന്ദര്‍ഭങ്ങളിലും ഉറവിട രേഖകള്‍ ഉപയോ
ഗിക്കാതെ തന്നെ കമ്പ്യൂട്ടറില്‍ നേരിട്ട്‌ ഡാറ്റ നല്‍കുന്നു.

ഡാറ്റ സംഭരണം: ഈ ഘട്ടത്തില്‍ ഡാറ്റ പ്രോസസ്സിങ്ങിന്‌ ആവശ്യമായ ഇന്‍പുട്ട്‌ ചെയ്ത ഡാറ്റ
സംഭരിക്കപ്പെടുന്നു. പ്രോസസ്സിങ്ങിന്‌ ശേഷം ലഭിക്കുന്ന വിവരങ്ങളും സംഭരിക്കപ്പെടുന്നു.

പ്രോസസ്സ്‌; കമ്പ്യൂട്ടറില്‍ സംഭരിച്ചിരിക്കുന്ന ഡാറ്റ, പ്രോസസ്സിങ്ങിനുവേണ്ടി തിരിച്ചെടുക്കുന്നു.
പ്രോസസ്സിങ്ങിന്റെ ഭാഗമായി കണക്കുക്കൂട്ടല്‍, തരംതിരിക്കല്‍, താരതമ്യം ചെയ്യല്‍, ക്രമീകരണം,
സംഗ്രഹിക്കല്‍, അരിച്ചെടുക്കല്‍ തുടങ്ങിയ പ്രവര്‍ത്തനങ്ങള്‍ നടത്തപ്പെടുന്നു.

ഓട്ടപുട്ട്‌: ഈ ഘട്ടത്തില്‍ പ്രോസസ്സ്‌ ചെയ്ത്‌ എടുത്ത ഡാറ്റ വിവരത്തിന്റെ രൂപത്തിലാണ്‌ ലഭി
ക്കുന്നത്‌. ഓട്ട്പുട്ടിനെ ഭാവി ആവശ്യങ്ങള്‍ക്കു വേണ്ടി സംഭരിക്കാം. ഇത്‌ മറ്റ്‌ സന്ദര്‍ഭങ്ങളില്‍
വിവര നിര്‍മ്മാണത്തിന്‌ ഉപയോഗിക്കാം.

വിവരങ്ങളുടെ വിതരണം: ഓട്ട്പുട്ട്‌ ഘട്ടത്തില്‍ നിന്നും ലഭ്യമാകുന്ന വിവരങ്ങള്‍ ഗുണഭോ
ക്താക്കള്‍ക്ക്‌ വിതരണം ചെയ്യപ്പെടുന്നു. അവര്‍ ഈ വിവരങ്ങള്‍ അടിസ്ഥാനമാക്കി തീരുമാന
ഒന്നാം വര്‍ഷ കമ്പ്യൂട്ടര്‍ സയന്‍സ്‌ 3. കമ്പ്യൂട്ടര്‍ സിസ്റത്തിന്റെ ഘടകങ്ങള്‍

ങ്ങള്‍ എടുക്കുകയും പ്രശ്നപരിഹാരം കണ്ടെത്തുകയും ചെയ്യുന്നു. ഡാറ്റ പ്രോസസ്സിങ്ങില്‍ അട
ങ്ങിയിരിക്കുന്ന പ്രവര്‍ത്തനങ്ങള്‍ നമ്മള്‍ കണ്ടല്ലോ. ഇങ്ങിനെയുള്ള പ്രവൃത്തികള്‍ നടത്താന്‍
വേണ്ടിയാണ്‌ കമ്പ്യൂട്ടറുകള്‍ രൂപകല്‍പ്പന ചെയ്തിട്ടുള്ളത്‌. കമ്പ്യൂട്ടറിന്റെ ര്രവര്‍ത്തന ഭാഗ
ങ്ങള്‍ എങ്ങനെയാണ്‌ ക്രമീകരിച്ചിരിക്കുന്നത്‌ എന്ന്‌ നമുക്ക്‌ നോക്കാം.

3.2. കസ്തൂട്ടിന്റെ പ്രവര്‍ത്തന ഘടകങ്ങള്‍

(Functional units of a Computer)

വര്‍ഷങ്ങളായി കമ്പ്യൂട്ടറുകള്‍, അതിന്റെ വലുപ്പം, രൂപം, വില, പ്രകടനം

എന്നിവയില്‍ വ്ൃത്യസ്തത പുലര്‍ത്തുന്നുണ്ടെങ്കിലും അതിന്റെ ഘടന അടി

സ്ഥാനപരമായി ഒന്നുതന്നെയാണ്‌. അധ്യായം 1 ല്‍ ചര്‍ച്ച ചെയ്തതു

പോലെ ഗണിതശാസ്ര്രജ്ഞനും കമ്പ്യൂട്ടര്‍ ശാസ്ത്രജ്ഞനുമായ ജോണ്‍

വോണ്‍ ന്യൂമാന്‍ ആണ്‌ ഈ അടിസ്ഥാനഘടന നിര്‍ദ്ദേശിച്ചിട്ടുള്ളത്‌. ഇതില്‍ ഖോേണ്‍്ഥ്ധേഞ്‌
ഇന്‍പുട്ട്‌ യൂണിറ്റ്‌, സെന്‍്രല്‍ പ്രോസസ്സിംങ്‌ യൂണിറ്റ്‌ (CPU), സംഭരണ മാര (1903 1957)
യൂണിറ്റ്‌, ഓട്ടപുട്ട്‌ യൂണിറ്റ്‌ എന്നീ പ്രവര്‍ത്തന ഭാഗങ്ങള്‍ അടങ്ങിയിരിക്കുന്നു. (ചിത്രം 3.2. ശ്രദ്ധി
ക്കുക) ഇതിലെ ഓരോ യൂണിറ്റുകളും ഒരു പ്രത്യേക പ്രവൃത്തി നിര്‍വൃഹിക്കാന്‍ നിയോഗിക്ക
പ്പെട്ടിരിക്കുന്നു. ഈ ഘടംംങ്ങളുടെ പ്രവര്‍ത്തനങ്ങള്‍ നമുക്ക്‌ ചര്‍ച്ച ചെയ്യാം.

കണ്‍ട്രോള്‍
യൂണിറ്റ്‌
അരിത്തമേറ്റിക്‌
ലോജിക്യൂണിറ്റ്‌
രജിസ്ററുകള്‍
AMM[S പ്രൊസ

സിംഗ്‌ യുണിറ്റ്‌

ചിത്രം 3.2 കമ്പുട്ടഥിമ്റെ അടിസ്ഥാന രൂപഘടന

a) ഇന്‍പുട്ട്‌ യുണിറ്റ്‌ (Input unit)

ശേഖരിച്ച ഡാറ്റയും അവ പ്രോസസ്സ്‌ ചെയ്യാനുള്ള നിര്‍ദ്ദേശങ്ങളും കമ്പ്യൂട്ടറിലേക്ക്‌ നല്‍കുന്നത്‌
ഇന്‍പുട്ട്‌ യൂണിറ്റ്‌ വഴിയാണ്‌. അവ മെമ്മറിയില്‍ സംഭരിക്കപ്പെടുന്നു. അക്കം, അക്ഷരം, ചിത്രം,
ശബ്ദം, വീഡിയോ തുടങ്ങിയ പല രൂപങ്ങളിലും ഡാറ്റ കാണപ്പെടുന്നു. ഇങ്ങിനെയുള്ള ഡാറ്റ
കള്‍ കമ്പ്യൂട്ടറിലേക്ക്‌ കൊടുക്കുവാന്‍ പലതരത്തിലുള്ള ഉപകരണങ്ങള്‍ ഉപയോഗിക്കുന്നു.
കീബോര്‍ഡ്‌, മൌസ്‌, സ്കാനര്‍, മൈക്ക്‌, ഡിജിറ്റല്‍ ക്യാമറ തുടങ്ങിയവയാണ്‌ സാധാരണയായി
ഉപയോഗിക്കുന്ന ഇന്‍പുട്ട്‌ ഉപകരണങ്ങള്‍. ചുരുക്കത്തില്‍ ഇന്‍പുട്ട്‌ യൂണിറ്റ്‌ നടത്തുന്ന പ്രവര്‍ത്ത
നങ്ങള്‍ താഴെ കൊടുത്തിരിക്കുന്നു.
ഒന്നാം വര്‍ഷ കമ്പ്യുട്ടര്‍ സയന്‍സ്‌ 3. കമ്പ്യൂട്ടര്‍ സിസ്റത്തിന്റെ ഘടകങ്ങള്‍

1. നിര്‍ദ്ദേശങ്ങളും ഡാറ്റയും പുറമേനിന്ന്‌ സ്വീകരിക്കുക.

2. ഈ നിര്‍ദ്ദേശങ്ങളും ഡാറ്റയും കമ്പ്യൂട്ടറിന്‌ സ്വീകാര്യമായ രൂപത്തില്‍ പരിവര്‍ത്തനം
ചെയ്യുന്നു.

3. പരിവര്‍ത്തനം ചെയ്ത നിര്‍ദ്ദേശങ്ങളും ഡാറ്റയും കമ്പ്യൂട്ടറിലേക്ക്‌ പ്രോസസ്സ്‌ ചെയ്യാനായി
നല്‍കുന്നു.

b) സെന്‍ട്രല്‍ പ്രോസസ്സിങ്ങ്‌ യുണിറ്റ്‌ (CPU)

CPU കമ്പ്യൂട്ടറിന്റെ മസ്തിഷ്കമാണ്‌. മനുഷ്യ ശരീരത്തില്‍ പ്രധാന തീരുമാനങ്ങളെല്ലാം എടു
ക്കുന്നത്‌ മസ്തിഷ്‌കമാണ്‌. മസ്തിഷ്കത്തിന്റെ നിര്‍ദ്ദേശ്രപകാരമാണ്‌ മറ്റു ശരീരഭാഗങ്ങളുടെ
പ്രവര്‍ത്തനങ്ങള്‍ നടക്കുന്നത്‌. അതുപോലെ, ഒരു കമ്പ്യൂട്ടര്‍ സംവിധാനത്തില്‍ എല്ലാ പ്രധാന
കണക്കുകൂട്ടലുകളും താരതമ്യങ്ങളും സി.പി.യു. വിനുള്ളില്‍ ചെയ്യപ്പെടുന്നു. കമ്പ്യൂട്ടറിന്റെ മറ്റ്‌
ഘടങ്ങളുടെ പ്രവര്‍ത്തനങ്ങള്‍ സജീവമാക്കുന്നതിനും നിയ്രന്്രിക്കുന്നതിനും സി.പി.യു ഉത്തര
വാദിത്തപ്പെട്ടിരിക്കുന്നു. CPU വിന്റെ ്രവര്‍ത്തനങ്ങള്‍ നിര്‍വ്ൃഹിക്കുന്നത്‌ പ്രധാനമായും മൂന്ന്‌
ഘടകങ്ങളാണ്‌ - അരിത്തമെറ്റിക്‌ ലോജിക്‌ യൂണിറ്റ്‌ (ALU), കണ്‍ട്രോള്‍ യൂണിറ്റ്‌ (Control Unit
- CU), രജിസ്റ്ററുകള്‍ (Registers)

1 അരിത്തമെറ്റിക്‌ ലോജിക്‌ യൂണിറ്റ്‌ (ALU)

നിര്‍ദ്ദേശങ്ങള്‍ക്കനുസരിച്ച്‌ പ്രവര്‍ത്തനങ്ങള്‍ നടക്കുന്നത്‌ ALU വിലാണ്‌. കണക്കുകുട്ടലുകളും,
ലോജിക്കല്‍ പ്രവര്‍ത്തനങ്ങളായ താരതമ്യം ചെയ്യലും തീരുമാനങ്ങള്‍ എടുക്കലും നിര്‍വൃഹിക്ക
പ്പെടുന്നത്‌ ഈ യൂണിറ്റിലാണ്‌. സംഭരണ യൂണിറ്റില്‍ സംഭരിക്കപ്പെട്ടിരിക്കുന്ന ഡാറ്റയും നിർദ്ദേ
ശങ്ങളും ALU വിലേക്ക്‌ മാറ്റപ്പെടുകയും അവിടെ പ്രോസസ്സിങ്ങ്‌ നടക്കുകയും ചെയ്യുന്നു. ൧.
വില്‍ ഡാറ്റ പ്രൊസസ്സിങ്ങിനിടയില്‍ നിര്‍മ്മിക്കപ്പെടുന്ന ഫലങ്ങളെ സംഭരണ ഘടകത്തിലേക്ക്‌
താല്‍ക്കാലികമായി മാറ്റുന്നു. പിന്നീട്‌ കൂടുതല്‍ പ്രോസസ്സുകള്‍ക്ക്‌ ആവശ്യമുള്ളപ്പോള്‍ അവ
തിരിച്ചെടുക്കുന്നു. അങ്ങനെ സംഭരണയുണിറ്റിനും ALU വിനും ഇടയില്‍ ഡാറ്റ പ്രോസസ്സിങ്ങ്‌
പൂര്‍ത്തിയാക്കുന്നതിനു മുമ്പേ പലതവണ ഡാറ്റയുടെ ഒഴുക്ക്‌ ഉണ്ടാകുന്നു.

2. കണ്‍ട്രോള്‍ യുണിറ്റ്‌ (CU)

ഓരോ ഫങ്ഷണല്‍ യൂണിറ്റിനും സ്വന്തമായി പ്രവൃത്തികള്‍ നിര്‍വൃചിക്കപ്പെട്ടിട്ടുണ്ടെങ്കിലും അവ
ആവശ്യാനുസരണം മാ്രതമെ നിര്‍വൃഹിക്കപ്പെടുന്നുള്ളു. ഈ പ്രവൃത്തികള്‍ ചെയ്യുന്നത്‌
കണ്‍ട്രോള്‍ യൂണിറ്റാണ്‌. കണ്‍ട്രോള്‍ യൂണിറ്റിന്റെ നിര്‍ദേശം കിട്ടിയാല്‍ മറ്റ്‌ യൂണിറ്റുകള്‍
അതിന്റെ പ്രവൃത്തി ഏറ്റെടുക്കുന്നു. കമ്പ്യൂട്ടറിന്റെ മറ്റെല്ലാ യൂണിറ്റുകളും കൈകാര്യം ചെയ്യു
കയും ഏകോപിപ്പിക്കുകയും ചെയ്യുന്ന പ്രധാന നാഡീവ്യൂഹ വ്യവസ്ഥയാണ്‌ കണ്‍ട്രോള്‍
യൂണിറ്റ്‌. മെമ്മറിയില്‍ സംഭരിച്ചിരിക്കുന്ന പ്രോ്രഗാമുകള്‍ സ്വീകരിക്കുകയും, അവ പ്രവര്‍ത്തിപ്പി
ക്കുന്നതിനായി സിസ്റ്റത്തില്‍ ബന്ധപ്പെട്ട ഘടകങ്ങള്‍ക്ക്‌ നിര്‍ദേശം നല്‍കുകയും അവയുടെ
പ്രവര്‍ത്തനങ്ങളെ നടപ്പില്‍ വരുത്തുകയുമാണ്‌ കണ്‍ട്രോള്‍ യൂണിറ്റിന്റെ ധര്‍മ്മം.

ദ. രജിസ്റ്ററുകള്‍ (Registers)

CPU വിന്റെ പ്രവര്‍ത്തനങ്ങള്‍ സുഗമമാക്കുന്ന താല്‍ക്കാലിക സംഭരണ ഘടകങ്ങളാണ്‌ ഇവ.
ഡാറ്റ, നിര്‍ദേശം, മെമ്മറി, അഡ്രസ്‌, ഫലങ്ങള്‍ തുടങ്ങിയവ സംഭരിക്കുന്നതിനായി വൃത്യസ്ഥ
തരത്തിലുള്ള രജിസ്റ്ററുകള്‍ രൂപകല്‍പ്പന ചെയ്തിട്ടുണ്ട്‌.
ഒന്നാം വര്‍ഷ കമ്പ്യൂട്ടര്‍ സയന്‍സ്‌ 3. കമ്പ്യൂട്ടര്‍ സിസ്റത്തിന്റെ ഘടകങ്ങള്‍

C. സംഭരണ ഘടകം (Storage Unit)

ഇന്‍പുട്ട്‌ യൂണിറ്റ്‌ വഴി നല്‍കിയ ഡാറ്റയും നിര്‍ദ്ദേശങ്ങളും യഥാര്‍ത്ഥ പ്രോസസ്സിങ്ങ്‌ ആരം
ഭിക്കുന്നതിന്‌ മുമ്പ്‌ കമ്പ്യൂട്ടറില്‍ സൂക്ഷിക്കുന്നു. അതുപോലെ പ്രോസസ്സിങ്ങിനുശേഷമുള്ള വിവ
രങ്ങള്‍ അല്ലെങ്കില്‍ ഫലങ്ങള്‍ ഓട്ട്പുട്ട്‌ യൂണിറ്റിലേക്ക്‌ അയക്കുന്നതിനു മുമ്പ്‌ കമ്പ്യൂട്ടറിന്റെ
അകത്ത്‌ സൂക്ഷിക്കുന്നു. കൂടാതെ, ഡാറ്റ പ്രോസസ്സിങ്ങിനിടയില്‍ ഉള്ള ഫലങ്ങളും പിന്നീട്‌
പ്രോസസ്സ്‌ ചെയ്യുന്നതിന്‌ വേണ്ടി കമ്പ്യൂട്ടറില്‍ സംഭരിക്കുന്നു. കമ്പ്യൂട്ടറിന്റെ സംഭരണ യൂണിറ്റ്‌

ഈ ഉദ്ദേശ്യങ്ങളെല്ലാം നിറവേറ്റുന്നു. ചുരുക്കത്തില്‍ താഴെകൊടുത്ത വിവരങ്ങള്‍ സംഭരിക്കുക

അല്ലെങ്കില്‍ സൂക്ഷിക്കുക എന്നതാണ്‌ ഈ യൂണിറ്റിന്റെ ധര്‍മ്മം.

1 പ്രോസസ്സിങ്ങിന്‌ ആവശ്യമായി വരുന്ന ഡാറ്റയും നിര്‍ദ്ദേശങ്ങളും.

2. നടന്നുകൊണ്ടിരിക്കുന്ന പ്രവര്‍ത്തനങ്ങള്‍ക്കുവേണ്ട ഇടക്കാലഫലങ്ങള്‍ (Intermediate

results)

3. ജട്ട്പുട്ട്‌ യൂണിറ്റിലേക്ക്‌ വിടുന്നതിനുമുമ്പുള്ള പ്രോസസ്സിങ്ങിന്റെ അന്തിമഫലങ്ങള്‍.

സംഭരണയുണിറ്റ്‌ ര്രധാനമായും രണ്ട്‌ തരത്തിലാണുള്ളത്‌. അവ വിശദമായി താഴെ

കൊടുക്കുന്നു.

1. പ്രാഥമിക സംഭരണം (Primary Storage): ഇത്‌ പ്രധാന മെമ്മറി (main memory) എന്നറിയ
പ്പെടുന്നു. ഇതിനെ വീണ്ടും രണ്ടായി തിരിച്ചിരിക്കുന്നു - റാന്‍ഡം ആക്സസ്‌ മെമ്മറി (RAM),
റീഡ്‌ ഓണ്‍ലി മെമ്മറി (ROM). RAM ഒരു അസ്ഥിരമെമ്മറിയാണ്‌ (volatile). നിര്‍ദ്ദേശങ്ങള്‍,
ഡാറ്റ പ്രൊസസ്സിങ്ങിന്റെ ഇടക്കാലഫലങ്ങള്‍ എന്നിവ സൂക്ഷിക്കുന്നതിനാണ്‌ ഇത്‌ ഉപയോ
ഗിക്കുന്നത്‌. കമ്പ്യൂട്ടര്‍ തൊട്ടുമുമ്പ്‌ ചെയ്ത പ്രവര്‍ത്തനങ്ങളുടെ ഫലങ്ങളും RAM - ല്‍ ഉണ്ടാ
യിരിക്കും. കമ്പ്യൂട്ടറിന്റെ പ്രവര്‍ത്തനങ്ങള്‍ ആരംഭിക്കാനുള്ള നിര്‍ദ്ദേശങ്ങള്‍ റോം (ROM)
ല്‍ അടങ്ങിയിരിക്കുന്നു. പ്രാഥമിക സംഭരണി ഉയര്‍ന്ന വേഗതയുള്ളതാണെങ്കിലും താരത
മ്യേന കുറഞ്ഞ സംഭരണശേഷിയുള്ളതുമാകുന്നു.

1. ദ്വിതീയ സംഭരണം (Secondary Storage): ഇതിനെ സഹായക (auxilary) സംഭരണ ഘടകം
എന്നും അറിയപ്പെടുന്നു. പ്രാഥമിക സംഭരണത്തിന്റെ പോരായ്മകളെ ഇത്‌ പരിഹരിക്കു
ന്നു. സംഭരണ സ്ഥിരതയും (permanent) ഉയര്‍ന്ന സംഭരണശേഷിയും ഇതിന്റെ പ്രത്യേക
തകളാണ്‌. ഡാറ്റയും പ്രോഗ്രാമുകളും വിവരങ്ങളും സ്ഥിരമായി ദ്ധിതീയ മെമ്മറിയില്‍ സൂക്ഷി
ക്കുന്നു. പക്ഷെ അതിനുള്ള നിര്‍ദ്ദേശങ്ങള്‍ പുറമെ നിന്നും നല്‍കിയിരിക്കണം. ഡി.വി.ഡി.കള്‍,
സി.ഡി കള്‍, ഹാര്‍ഡ്‌ ഡിസ്‌ക്കുകള്‍, മെമ്മറിസ്റ്റിക്കുകള്‍ തുടങ്ങിയവ ഇതിന്‌ ചില ഉദാഹര
ണങ്ങളാണ്‌.

൪. ഓട്ട്പുട്ട്‌ യുണിറ്റ്‌ (output unit)

ഡാറ്റാ പ്രോസസ്സിങ്ങിനുശേഷം ലഭ്യമാകുന്ന വിവരങ്ങള്‍ മനുഷ്യന്‍ വായിക്കാവുന്ന രീതിയില്‍

പുറംലോകത്തേക്ക്‌ നല്‍കാനാണ്‌ ഒഈട്ട്പുട്ട യൂണിറ്റ്‌ ഉപയോഗിക്കുന്നത്‌. മോണിറ്ററും പ്രിന്ററുമാണ്‌

സാധാരണയായി ഉപയോഗിച്ചു വരുന്ന ഓട്ട്പുട്ട ഉപകരണങ്ങള്‍. ഓട്ട്പുട്ട്‌ യൂണിറ്റിന്റെ പ്രധാന
ധര്‍മ്മങ്ങള്‍ ചുവടെ കൊടുക്കുന്നു.

1 CPU വില്‍ നിന്ന്‌ പ്രോഗ്രാം രൂപത്തിലുള്ള ഫലങ്ങള്‍ സ്വീകരിക്കുന്നു.
2. ഈ ഫലങ്ങള്‍ മനുഷ്യന്‌ വായിച്ചെടുക്കാവുന്ന രീതിയിലേക്ക്‌ മാറ്റുന്നു.

3. ഈ ഫലങ്ങള്‍ പുറം ലോകത്തേക്ക്‌ നല്‍കുന്നു.
© ഒന്നാം വര്‍ഷ കമ്പ്യൂട്ടര്‍ സയന്‍സ്‌ 3. കമ്പ്യുട്ടര്‍ സിസ്റ്റത്തിന്റെ ഘടകങ്ങള്‍

3.3, ഹാര്‍ഡ്വെയര്‍ (Hardware)

ഹാര്‍ഡ്വെയറും സോഫ്ട്വെയറും അടങ്ങുന്നതാണ്‌ കമ്പ്യൂട്ടര്‍ സംവിധാനം എന്ന്‌ നമുക്കറിയാം.
തൊട്ടറിയാന്‍ കഴിയുന്നതും കാണാന്‍ സാധിക്കുന്നതുമായ കമ്പ്യൂട്ടറിന്റെ ഭാഗങ്ങളാണ്‌ ഹാര്‍ഡ്‌
വെയര്‍ എന്ന പദം കൊണ്ടുദ്ദേശിക്കുന്നത്‌. മാത്രമല്ല ഇലക്ട്രോ മെക്കാനിക്കല്‍ ഘടകങ്ങളും
ഇതില്‍ ഉള്‍പ്പെടുന്നു. കമ്പ്യൂട്ടറിന്റെ പ്രവര്‍ത്തന ഭാഗങ്ങള്‍ ഹാര്‍ഡ്വെയര്‍ ഘടകങ്ങളുമായി
ബന്ധപ്പെട്ടിരിക്കുന്നു. നമുക്ക്‌ ഈ പ്രവര്‍ത്തന ഘടകങ്ങളെ പരിചയപ്പെടാം.

3.3.1. പ്രോസസ്സററുകള്‍ (Processors)

കമ്പ്യൂട്ടറില്‍ എല്ലാ കണക്കുകൂട്ടലുകള്‍ നടത്തുന്നതും യുക്തിപരമായ തീരുമാനങ്ങള്‍ എടു
ക്കുന്നതും മറ്റു പ്രവര്‍ത്തനങ്ങള്‍ ഏകോപിപ്പിക്കുന്നതും CPU ആണെന്ന്‌ നാം കഴിഞ്ഞ ഭാഗങ്ങ
ളില്‍ പഠിച്ചുവല്ലോ. CPU വിന്റെ പ്രവര്‍ത്തനം കമ്പ്യൂട്ടറിന്റെ മൊത്തത്തിലുള്ള പ്രകടനത്തെ
നിര്‍ണ്ണയിക്കുന്നു. CPU എന്നത്‌ ഒരു ഇന്റഗ്രേറ്റഡ്‌ സര്‍ക്യൂട്ട്‌ (IC) പാക്കേജ്‌ ആണ്‌. ഇത്‌ ദശ
ലക്ഷ കണക്കിന്‌ (്രാന്‍സിസ്റ്ററുകളും അനുബന്ധഘടകങ്ങളും കൂടിചേര്‍ന്ന ഒരു സിലിക്കണ്‍
ചിപ്പാണ്‌. ഇതിനെ മൈക്രോപ്രൊസസ്സൂര്‍ എന്ന്വിളിക്കുന്നു. ചിത്രം 3.3 ല്‍ ചില കമ്പനികളുടെ
പ്രോസസ്സുറുകള്‍ കാണിച്ചിരിക്കുന്നു. കമ്പ്യൂട്ടറിലെ പ്രധാന ബോര്‍ഡായ മദര്‍ ബോര്‍ഡിലെ
വലിയ സോക്കറ്റുമായാണ്‌ CPU സാധാരണയായി ബന്ധിപ്പിച്ചിരിക്കുന്നത്‌. CPU പ്രവര്‍ത്തിക്കു
മ്പോള്‍ ധാരാളം താപം പുറംതള്ളുന്നതുകൊണ്ട്‌ ഫാനും ഹീറ്റ്‌ സിങ്കും ഉള്‍പ്പെട്ട കൂളിംഗ്‌ സിസ്റ്റം
ഇതില്‍ ഘടിപ്പിച്ചിരിക്കുന്നു. സാധാരണയായി ഉപയോഗിക്കുന്ന പ്രോസസ്സറുകളാണ്‌ ഇന്റല്‍ കോര്‍
13, കോര്‍ 1, കോര്‍ 17, AMD Quadcore തുടങ്ങിയവ.

CPU വിന ഉള്ളിലെ സംഭരണ സ്ഥലങ്ങളാണ്‌

\
രജിസ്റ്ററുകള്‍, മറ്റ്‌ മെമ്മറി ഭാഗങ്ങളേക്കാള്‍ é \
വേഗത്തില്‍ ഇതിന്റെ ഉള്ളടക്കത്തെ CPU
വിന്‌ ഉപയോഗിക്കാന്‍ കഴിയും. നിര്‍ദ്ദേശ

ങ്ങളും ഡാറ്റയും താല്‍ക്കാലികമായി സംഭ
രിക്കാനുള്ള സ്ഥലമാണ്‌ രജിസ്റ്ററുകള്‍. ഇവ
മെമ്മറിയുടെ ഭാഗമല്ല. എന്നാല്‍ കമ്പ്യൂട്ടറിന്‌ വേഗത പ്രധാനം ചെയ്യുന്ന പ്രത്യേക സംഭരണ
സ്ഥലങ്ങളാണ്‌. രജിസ്റ്ററുകള്‍ പ്രവര്‍ത്തിക്കുന്നത്‌ കണ്‍ട്രോള്‍ യൂണിറ്റിന്റെ നിര്‍ദ്ദേശമനുസരിച്ചാ
ണ്‌. ഡാറ്റയും നിര്‍ദേശങ്ങളും ശേഖരിച്ച്‌ വളരെ വേഗത്തില്‍ അരിത്തമെറ്റിക്‌ അഥവാ ലോജി
ക്കല്‍ പ്രവര്‍ത്തനങ്ങള്‍ നിര്‍വൃഹിക്കാന്‍ ഇവ സഹായിക്കുന്നു. പ്രോഗ്രാമിന്റെ കൃത്യനിര്‍വ്വഹണം

ചിത്രം.3.3: വിവിധതലം ഭ്പ്രോന്ധദ്നറുകശ്‌

ഇത്‌ വേഗത്തിലാക്കുന്നു. CPU വിനുള്ളിലെ പ്രധാനപ്പെട്ട രജിസ്റ്ററുകള്‍ താഴെ കൊടുക്കുന്നു.

എല്ലാ കമ്പ്യൂട്ടറുകളിലും ഒരു ക്ലോക്ക്‌ ഉണ്ട്‌. അത്‌ നിര്‍ദ്ദേശങ്ങള്‍ നിര്‍വൃഹിക്കുന്ന
നിരക്ക്‌ ക്രമീകരിക്കുന്നു. ഓരോ നിര്‍ദ്ദേശവും നിര്‍വ്വഹിക്കാന്‍ CPU വിന്‌ ഒരു
നിശ്ചിത എണ്ണം ക്ലോക്ക്‌ ടിക്കുകള്‍ (ക്ലോക്ക്‌ ആവൃത്തി) ആവശ്യമാണ്‌. ക്ലോ
ക്കിന്റെ വേഗത കൂടുമ്പോള്‍, സി.പി.യു.വിന്‌ ഒരു സെക്കന്റില്‍ കൂടുതല്‍ നിര്‍ദേ
ശങ്ങള്‍ നിര്‍വ്വഹിക്കുവാന്‍ സാധിക്കും. മറ്റൊരു ഘടകം ചിപ്പിന്റെ രൂപഘടനയാണ്‌. ഒരു സമയം

പ്രോസസ്സറിന്‌ പ്രോസസ്സ്‌ ചെയ്യുവാന്‍ കഴിയുന്ന ബിറ്റുകളുടെ സംഖ്യയെ word size എന്ന്‌
വിളിക്കുന്നു. വിവിധ word size ഉള്ള പ്രോസസ്സുറുകള്‍ ഉപയോഗിക്കപ്പെടുന്നു. (ഉദാഹരണം
8-bit, 16-bit, 32-bit, 64-bit തുടങ്ങിയവ)

ഒന്നാം വര്‍ഷ കമ്പ്യൂട്ടര്‍ സയന്‍സ്‌ 3. കമ്പ്യൂട്ടര്‍ സിസ്റത്തിന്റെ ഘടകങ്ങള്‍

1. അക്യുമുലേറ്റര്‍ (Accumulator): അരിത്തമെറ്റിക്‌ ആന്റ്‌ ലോജിക്‌ യൂണിറ്റിന്റെ (ALU) ഒരു
ഭാഗമാണ്‌ അക്യുമുലേറ്റര്‍. അരിത്തമെറ്റിക്‌ ലോജിക്കല്‍ പ്രവര്‍ത്തനങ്ങള്‍ നിര്‍വൃഹിക്കു
മ്പോള്‍ അതിന്റെ ഫലങ്ങള്‍ സൂക്ഷിക്കാന്‍ ഈ രജിസ്റ്റര്‍ ഉപയോഗിക്കുന്നു. ഇതിനെ രജി
TS A എന്നും വിളിക്കാറുണ്ട്‌.

11. മെമ്മറി അഡ്രസ്സ്‌ രജിസ്റ്റര്‍ (MAR): ഡാറ്റ സംഭരിക്കപ്പെടേണ്ടതോ അല്ലെങ്കില്‍ എവിടെനി
ന്നാണോ വീണ്ടെടുക്കപ്പെടേണ്ടത്‌ ആ മെമ്മറി ലൊക്കെഷന്റെ വിലാസം സൂക്ഷിക്കുന്ന
രജിസ്റ്ററാണ്‌ മെമ്മറി അഡ്ധസ്‌ രജിസ്റ്റര്‍.

iii, മെമ്മറി ബഫര്‍ രജിസ്റ്റര്‍ (MBR): ഡാറ്റാ പ്രോസസ്സിങ്ങിനുവേണ്ടി പ്രോസസ്സര്‍ എടുക്കു
ന്നതോ പ്രോസസിങ്ങിനുശേഷം കൊടുക്കേണ്ടതോ ആയ ഡാറ്റ താല്‍ക്കാലികമായി സൂക്ഷി
ക്കുന്ന രജിസ്റ്ററാണ്‌ മെമ്മറി ബഫര്‍ രജിസ്റ്റര്‍.

iv. ഇന്‍സ്ട്രക്ഷന്‍ രജിസ്റ്റര്‍ (LR): ഏത്‌ നിര്‍ദ്ദേശമാണോ പ്രൊസസ്സര്‍ നിര്‍വൃഹിക്കേണ്ടത്‌, ആ
നിര്‍ദ്ദേശം സൂക്ഷിച്ചുവെക്കുന്ന രജിസ്റ്ററാണ്‌ ഇന്‍സ്ര്രക്ഷന്‍ രജിസ്റ്റര്‍.

൬, പ്രോഗ്രാം കൌണ്ടര്‍ (PC): പ്രോസസ്സര്‍ അടുത്തതായി നിര്‍വൃഹിക്കേണ്ട നിര്‍ദ്ദേശത്തിന്റെ
മെമ്മറി വിലാസം സൂക്ഷിക്കുന്ന രജിസ്റ്ററാണ്‌ പ്രോഗ്രാം കൌണ്ടര്‍

3.3.2 മദര്‍ബോര്‍ഡ്‌ (Motherboard)

പ്രൊസസ്സറും അതിനോട്‌ അനുബന്ധിച്ചുള്ള പ്രധാ
നപ്പെട്ട ഘടകങ്ങളും അടങ്ങിയിട്ടുള്ള വലിയ
പ്രിന്റഡ്‌ സര്‍ക്യൂട്ട്‌ ബോര്‍ഡാണ്‌ മദര്‍ബോര്‍ഡ്‌
(PCB). മെമ്മറി, ഗ്രാഫിക്സ്‌ കാര്‍ഡ്‌, സൌണ്ട്‌
കാര്‍ഡ്‌ തുടങ്ങിയുള്ള സര്‍ക്യൂട്ട്‌ ബോര്‍ഡുകള്‍
ആവശ്യാനുസരണം വേണ്ടിവന്നാല്‍ ഉള്‍പ്പെടു

ത്താനുള്ള എക്സപാന്‍ഷന്‍ സ്ലോട്ടുകൾ ഇതിലു SS ജിയ
ണ്ട്‌. (ചിത്രം 3.4: നോക്കുക) മദര്‍ബോര്‍ഡ്‌ നിര്‍ബ്ബ -

ന്ധമായും പ്രോസസ്സറിന്‌ അനുയോജ്യമായിരിക്കണം. ചിത്രം 3.4 280ബോരര്‍ഡ്‌

3.3.4 പെരിഫറലറുകളും പോര്‍ട്ടുകളും (Peripherals and ports)

കമ്പ്യൂട്ടര്‍ സിസ്റ്റത്തിന്റെ കഴിവുകള്‍ വര്‍ദ്ധിപ്പി
ക്കാന്‍ അതിനോട്‌ ഘടിപ്പിച്ചിരിക്കുന്ന അനുബന്ധ
ഉപകരണങ്ങളാണ്‌ പെരിഫറലുകള്‍. പുറമേയുള്ള
ഉപകരണങ്ങളെ മദര്‍ബോര്‍ഡില്‍ ഘടിപ്പിക്കാ
നാണ്‌ പോര്‍ട്ടുകള്‍ ഉപയോഗിക്കുന്നത്‌. ഇന്‍പുട്ട്‌
ഉപകരണങ്ങള്‍, ഓട്ട്പുട്ട ഉപകരണങ്ങള്‍, ബാഹ്യ
സംഭരണ ഉപകരണങ്ങള്‍, ആശയവിനിമയ ഉപ
കരണങ്ങള്‍ എന്നിവ പെരിഫറലുകളില്‍ ഉള്‍പ്പെ
ടുന്നു. ഈ ഉപകരണങ്ങള്‍ മദര്‍ബോര്‍ഡുമായി
ആശയവിനിമയം നടത്തുന്നത്‌ VGA, 5/2, USB,
Ethernet, HDMI തുടങ്ങിയ പോര്‍ട്ടുകള്‍ വഴിയാ

ണ്‌. പേഴ്‌സണല്‍ കമ്പ്യൂട്ടറില്‍ ഉപയോഗിക്കുന്ന
ചില പോര്‍ട്ടുകള്‍ ചിത്രം 3.5 ല്‍ കാണിച്ചിരിക്കുന്നു.

ചിത്രം 3.5 പോരര്‍ട്ടുകശ്‌
- ഒന്നാം വര്‍ഷ കമ്പ്യൂട്ടര്‍ സയന്‍സ്‌ 3. കമ്പ്യുട്ടര്‍ സിസ്റ്റത്തിന്റെ ഘടകങ്ങള്‍

3.3.5. മെമ്മറി (Memory)

ഡാറ്റയോ നിര്‍ദ്ദേശങ്ങളോ ഫലങ്ങളോ താല്‍ക്കാലികമായോ സ്ഥിരമായോ സൂക്ഷിച്ചു വെക്കാ
നുള്ള സ്ഥലമാണ്‌ മെമ്മറി. മെമ്മറിയെ രണ്ടായി തരംതിരിച്ചിരിക്കുന്നു. പ്രാഥമിക മെമ്മറി, ദ്വിതീയ
മെമ്മറി. മദര്‍ബോര്‍ഡില്‍ സ്ഥിതി ചെയ്യുന്നതും പ്രോസസ്സറുമായി നേരിട്ട്‌ ബന്ധപ്പെടുന്നതുമായ
മെമ്മറിയാണ്‌ പ്രാഥമിക മെമ്മറി. സ്ഥിരമായി വിവരങ്ങള്‍ സൂഷിക്കാന്‍ ഉപയോഗിക്കുന്നതും
പ്രോസസ്സുറുമായി പ്രാഥമിക മെമ്മറിയിലൂടെ മാത്രം വിവരങ്ങള്‍ കൈമാറുന്നതുമായ മെമ്മറി
യാണ്‌ ദ്വീതിയ മെമ്മറി. മെമ്മറിയെക്കുറിച്ച്‌ കൂടുതല്‍ പഠിക്കുന്നതിന്‌ മുമ്പായി മെമ്മറി അള
ക്കുന്ന യൂണിറ്റുകളെ മനസിലാക്കാം. താഴെപറയുന്നവയാണ്‌ ഈ അളവിന്റെ ഏകകങ്ങള്‍.

ബൈനറി ഡിജിറ്റ്‌ - 1 ബിറ്റ്‌ 1148 (മെഗാ ബൈറ്റ്‌) - 1024 KB
1 നിബീള്‍ = 4 ബിറ്റ്‌ 1GB (ജിഗാബൈറ്റ്‌) = 1024 MB
1ബൈറ്റ്‌ = 8 ബിറ്റ്സ്‌ 1 TB (ടെറാ ബൈറ്റ്‌) = 1024 GB

118(കിലോ ബൈറ്റ്‌) = 1024 ബൈറ്റ്സ്‌ 1 PB (പെറ്റാ ബൈറ്റ്‌) = 1024 TB

ഒ. പ്രാഥമിക മെമ്മറി (Primary Storage)
പ്രാഥമിക മെമ്മറി എന്നത്‌ സെമികണ്ടക്ടര്‍ മെമ്മറിയാണ്‌. ഇതിനെ CPU നേരിട്ട്‌ കൈകാര്യം
ചെയ്യുന്നു. ഇതിന്‌ ഡാറ്റ വളരെ വേഗത്തില്‍ അയയ്ക്കുന്നതിനും സ്വീകരിക്കുന്നതിനുമുള്ള കഴി
ARNE. 3 തരത്തിലുള്ള മെമ്മറിയാണ്‌ ഇതില്‍ ഉള്‍പ്പെട്ടിരിക്കുന്നത്‌. റാം, റോം, ക്യാഷ്‌ മെമ്മറി
എന്നിവയാണ്‌ അവ.

i. റാന്‍ഡം ആക്സസ്‌ മെമ്മറി (RAM)

മൈക്രോ പ്രൊസസ്സറിന്‌ ഡാറ്റ സംഭരിക്കാനും തിരിച്ചയയ്ക്കാനും സാധി
ക്കുന്ന RAM എന്ന പ്രാഥമിക മെമ്മറി ചിത്രം 3.6 ല്‍ കാണിച്ചിരിക്കുന്നു.
RAM നുള്ളില്‍ ഡാറ്റ എവിടെ നിന്ന്‌ വേണമെങ്കിലും ശേഖരിക്കാനും
തിരിച്ചെടുക്കാനും സാധിക്കും. CPU പ്രൊസസ്സ്‌ ചെയ്യുന്ന ഡാറ്റയോ
നിര്‍ദ്ദേശങ്ങളോ റാമിനുള്ളില്‍ നിര്‍ബന്ധമായും ഉണ്ടായിരിക്കണം.
വൈദ്യുത ബന്ധം നിലയ്ക്കുമ്പോള്‍ റാമിനുള്ളില്‍ അടങ്ങിയിരി
ക്കുന്നതെല്ലാം നഷ്ടപ്പെടുന്നു. അതിനാല്‍ റാം ഒരു അസ്ഥിരമെ
മ്മറിയാണ്‌ റാമിന്റെ സംഭരണശേഷി സാധാരണ ജിഗാബ്ൈറ്റി
ലാണ്‌ പറയാറുള്ളത്‌.

ചി(തം 3.6 (RAM)

എത്രമാത്രം വേഗത്തില്‍ ഡാറ്റ മെമ്മറിയില്‍ സംഭരിക്കുന്നു/തിരിച്ചെടുക്കുന്നു എന്നതാണ്‌ റാമിന്റെ
വേഗത കൊണ്ടുദ്ദേശിക്കുന്നത്‌. ഇത്‌ അളക്കുന്നത്‌ മെഗാ ഹെര്‍ട്സില്‍ ആണ്‌ (112). ഒരു കമ്പ്യൂ
ട്ടൂര്‍ പ്രവര്‍ത്തിച്ചുകൊണ്ടിരിക്കുമ്പോള്‍ അതിലെ റാമില്‍ താഴെ പറയുന്നവ ഉണ്ടായിരിക്കും.

൨ ഓപ്പറേറ്റിംഗ്‌ സിസ്റ്റം

2. നിലവില്‍ ഉപയോഗിച്ചു കൊണ്ടിരിക്കുന്ന അപ്ലിക്കേഷന്‍ സോഫ്ട്വെയര്‍

3.പ്രൊസസ്സ്‌ ചെയ്തുകൊണ്ടിരിക്കുന്ന ഡാറ്റ
ii. റീഡ്‌ ഒണ്‍ലി മെമ്മറി (ROM)

ROM എന്നത്‌ സ്ഥിരമായ മെമ്മറിയാണ്‌. അതില്‍ നിന്ന്‌ ഡാറ്റ വീണ്ടെടുക്കുവാന്‍ മാത്രമേ കഴി
യൂ. ഇതിന്റെ ഉള്ളടക്കം എളുപ്പത്തില്‍ മാറ്റാന്‍ സാധിക്കില്ല. വൈദ്യുതി ബന്ധം നിലച്ചാലും
3. കമ്പ്യൂട്ടര്‍ സിസ്റത്തിന്റെ ഘടകങ്ങള്‍

ഒന്നാം വര്‍ഷ കമ്പ്യൂട്ടര്‍ സയന്‍സ്‌

ഇതിലെ ഉള്ളടക്കം മാഞ്ഞു പോകാതെ നിലനില്‍ക്കുന്നു. BIOS എന്ന പേരില്‍
അറിയപ്പെടുന്ന ഒരു പ്രത്യേക ബൂട്ട്‌ അപ്പ്‌ (boot up) പ്രോ്രഗാം റോമില്‍ അട
ങ്ങിയിരിക്കുന്നു. ROM ചിപ്പാണ്‌ ചിത്രം 3.7 ല്‍ കാണിച്ചിരിക്കുന്നത്‌. കമ്പ്യൂട്ടര്‍
ഓണ്‍ ചെയ്യുമ്പോഴോ “ബൂട്ട്‌ അപ്പ്‌” ചെയ്യുമ്പോഴോ ഈ സോഫ്‌റ്റ്വെയര്‍
പ്രവര്‍ത്തിക്കുന്നു. ഇത്‌ കമ്പ്യൂട്ടര്‍ ഹാര്‍ഡ്വെയറിനെ പരിശോധിക്കുകയും ഓപ്പ
റേറ്റിംങ്ങ്‌ സിസ്റ്റത്തിനെ മെമ്മറിയിലേക്ക്‌ കൊണ്ടുവരുകയും ചെയ്യുന്നു. 101,
ന്റെ ചില പരിഷ്‌കരിച്ച രൂപങ്ങള്‍ താഴെകൊടുക്കുന്നു.

ചി(തം 3.7:
440൧ ചിഷ്‌

1 പ്രോഗ്രാമബിള്‍ റീഡ്‌ ഒണ്‍ലി മെമ്മറി 1101 (ഒരിക്കല്‍ മാത്രം പ്രോഗ്രാം ചെയ്യപ്പെടുന്ന
മെമ്മറിയാണിത്‌)

2. ഇറേസബിള്‍ പ്രോരഗാമബിള്‍ റീഡ്‌ ഒണ്‍ലി മെമ്മറി (111401) (അള്‍ട്രാവയലറ്റ്‌ റേഡിയേ
ഷന്‍ ഉപയോഗിച്ച്‌ വീണ്ടും എഴുതപ്പെട്ടാന്‍ കഴിയുന്ന മെമ്മറിയാണിത്‌?)

3. ഇലക്ര്രിക്കലി ഇറേസബിള്‍ പ്രോഗ്രാമബിള്‍ റീഡ്‌ ഒണ്‍ലി മെമ്മറി (EEPROM) (വൈദ്യുതി
ഉപയോഗിച്ച്‌ വീണ്ടും എഴുതപ്പെടാന്‍ കഴിയുന്ന മെമ്മറിയാണിത്‌.)

പട്ടിക 3.1 ല്‍ റാമിന്റെയും റോമിന്റെയും താരതമ്യം കൊടുത്തിരിക്കുന്നു.

ഉത്‌ റോമിനേക്കാള്‍ വേഗത കൂടിയതാണ്‌
കമ്പ്യൂട്ടര്‍ പ്രവര്‍ത്തിക്കുമ്പോള്‍ ഡാറ്റയും, അപ്പി
ക്കേഷന്‍ പ്രോഗ്രാമും ഓഷറ്റ്റിംങ്ങും സിസ്റ്റവും
ഉത്‌ സൂക്ഷിക്കുന്നു.

ഡാറ്റയുടെ സംഭരണവും വിങെടുക്കലും ഇത്‌
അനുവദിക്കുന്നു.

കമ്പ്യൂട്ടര്‍ ഓഫാക്കിയാല്‍ ഉതിലെ ഉള്ളടക്കം
നഷ്ടകെടുന്നതിനാല്‍ ഇതൊരു അസ്ഥിരമെമ

MOM വേഗത കുറവാണ്‌.

കമ്പ്യൂട്ടര്‍ ബൂട്ട്‌ ചെയ്യുവാനുള്ള പ്രോഗ്രാം ഉത്‌
സൂക്ഷിക്കുന്നു.

സാധാരണയായി ഉതില്‍ നിന്ന്‌ ഡാറ്റ തിരിച്ചെടു
ക്കാന്‍ മാത്രമേ സാധിക്കുകയുള്ളൂ.

കമ്പ്യൂട്ടര്‍ ഓഫ്‌ ആക്കിയാലും ROM ലെ ഉള്ള
ടക്കം നഷ്ടച്ചെടാത്തതിനാല്‍ ഇതൊരു സ്ഥിര
മെമമറിയാണ്‌.

റിയാണ്‌.

പട്ടിക 3.1’ RAM- ROM എന്നിവയുടെ താരത

11. ക്യാഷ്‌ മെമ്മറി

പ്രൊസസ്സറിന്റെയും റാമിന്റെയും (അഥവാ മെയിന്‍ മെമ്മറിയുടെയും) ഇടയ്ക്കുള്ള ചെറുതും
വേഗതയേറിയതുമായ മെമ്മറിയാണ്‌ ക്യാഷ്‌ മെമ്മറി. കുടെകൂടെ ആവശ്യമായി വരുന്ന ഡാറ്റ
യും, നിര്‍ദ്ദേശങ്ങളും ഇടക്കാല ഫലങ്ങളും വേഗത്തില്‍ എടുക്കുവാന്‍വേണ്ടി ക്യാഷ്‌ മെമ്മറി
യില്‍ സൂക്ഷിക്കുന്നു. പ്രോസസ്സര്‍, റാമിലെ ഒരു ലൊക്കേഷന്‍ സംഭരിക്കുകയോ അതില്‍ നിന്ന്‌
തിരിച്ചെടുക്കുകയോ ചെയ്യുമ്പോള്‍ ആദ്യം ക്യാഷ്‌ മെമ്മറിയില്‍ ഡാറ്റയുടെ ഒരു കോപ്പി ഉണ്ടോ
എന്ന്‌ പരിശോധിക്കുന്നു. അങ്ങനെയാണെങ്കില്‍ പ്രൊസസ്സര്‍ ക്യാഷ്‌ മെമ്മറിയില്‍ നിന്നും ഇത്‌
പെട്ടെന്ന്‌ റീഡ്‌ ചെയ്യുന്നു. റാമിനെക്കാള്‍ വേഗത്തില്‍ ക്യാഷ്‌ മെമ്മറിയില്‍ നിന്നും ഡാറ്റ തിരി
ച്ചെടുക്കുന്നു. റാമിനേക്കാളും വിലയേറിയതാണ്‌ ക്യാഷ്‌ മെമ്മറി. CPU വിന്റെയും മദര്‍ബോര്‍ഡി
ന്റെയും ഉള്ളിലുള്ള ക്യാഷ്‌ മെമ്മറി, സിസ്റ്റത്തിന്റെ പ്രകടനം മെച്ചപ്പെടുത്തുന്നതിന്‌ സഹായി
ക്കുന്നു.
SOS ന്നൊം വര്‍ഷ കമ്പൂട്ടര്‍ സയന്‍സ്‌ 3. കമ്പ്യുട്ടര്‍ സിസ്റ്റത്തിന്റെ ഘടകങ്ങള്‍

0. ദ്വിതീയ സംഭരണി (Secondary / Auxilary storage)

ദ്വിതീയ മെമ്മറി സ്ഥിരമാണ്‌. റാമില്‍ നിന്നും വ്യത്യസ്തമായി, കമ്പ്യൂട്ടര്‍ ഓഫ്‌ ചെയ്താലും
ഈ ഉപകരണങ്ങളില്‍ സംഭരിച്ചിട്ടുള്ള ഡാറ്റ ഒരിക്കലും നഷ്ടപ്പെടുന്നില്ല. ദ്വിതീയ മെമ്മറി റാമി
നേക്കാള്‍ വളരെ വലുപ്പമുള്ളതാണ്‌. എന്നാല്‍ ഇതിന്‌ വേഗത കുറവാണ്‌. പ്രോഗ്രാമും ഡാറ്റയും
ഇതില്‍ സൂക്ഷിക്കുന്നുണ്ടെങ്കിലും പ്രോസസ്സററിന്‌ അവയെ നേരിട്ട്‌ ഉപയോഗിക്കാന്‍ സാധിക്കില്ല.
ഒരു കമ്പ്യൂട്ടറില്‍ നിന്നും വേറൊരു കമ്പ്യൂട്ടറിലെക്ക്‌ ഡാറ്റയോ, പ്രോഗ്രാമുകളോ കൈമാറ്റം
ചെയ്യാന്‍ ദ്വിതീയ മെമ്മറി ഉപയോഗിക്കുന്നു. ഇത്‌ ഒരു ബാക്ക്‌ അപ്പ്‌ ആയും ഉപയോഗിക്കുന്നു.
സംഭരണ ഉപകരണങ്ങളുടെ പ്രധാന തരം തിരിവുകളാണ്‌ ANS, ഒപ്റ്റിക്കല്‍ സെമികണ്ട
ക്ടര്‍ മെമ്മറി എന്നിവ.

1. കാന്തിക സംഭരണ ഉപകരണങ്ങള്‍ (Magnetic Storage Devices)

കാന്തിക വസ്തുക്കള്‍ പുതിയ പ്ലാസ്റ്റിക്‌ ടേപ്പോ മെറ്റല്‍ പ്ലാസ്റ്റിക്‌ ഡിസ്‌കോ ആണ്‌ കാന്തിക
സംഭരണ ഉപകരണങ്ങളായി ഉപയോഗിക്കുന്നത്‌. ഈ ഉപകരണങ്ങളില്‍ ഡാറ്റ കാന്തികമായി
റെക്കോര്‍ഡ്‌ ചെയ്യപ്പെടുന്നു. ഡാറ്റ ഈ ഉപകരണങ്ങളില്‍ നിന്നും ഉപയോഗിക്കുന്നത്‌, റീഡ്‌/
റൈറ്റ്‌ ഹെഡ്‌ ഉപയോഗിച്ചാണ്‌. ചില പ്രശസ്തമായ കാന്തിക സംഭരണ ഉപകരണങ്ങളാണ്‌
മാഗ്നറ്റിക്‌ ടേപ്പുകള്‍ (Magnetic Tapes), ഹാര്‍ഡ്‌ ഡിസ്കുകള്‍ (Hard Disks) തുടങ്ങിയവ.

11. ഒപ്റ്റിക്കല്‍ സ്റ്റോറേജ്‌ ഉപകരണങ്ങള്‍ (Optical storage devices)

ശക്തി കുറഞ്ഞ ലേസര്‍ രശ്മികള്‍ ഉപയോഗിച്ചാണ്‌ ഒപ്റ്റിക്കല്‍ സ്റ്റോറേജ്‌ ഉപകരണങ്ങളില്‍
ഡാറ്റ സംഭരിക്കുകയോ അവിടെ നിന്ന്‌ തിരിച്ചെടുക്കുകയോ ചെയ്യുന്നത്‌. വൃത്താകൃതിയിലുള്ള
രണ്ട്‌ പ്ലാസ്റ്റിക്‌ ഡിസ്ക്കുകളുടെ ഇടയില്‍ അലുമിനിയത്തിന്റെ ഒരു തകിട്‌ ചേര്‍ത്തു വെച്ചാണ്‌
ഇത്‌ ഉണ്ടാക്കുന്നത്‌. തുടര്‍ച്ചയായ ഈ സ്പൈറലില്‍ പിറ്റ്‌സ്‌ ആന്റ്‌ ലാന്റ്‌ സ്‌ രൂപത്തിലാണ്‌
ഡാറ്റ എഴുതപ്പെട്ടിരിക്കുന്നത്‌. ലേസര്‍ രശ്മികള്‍ ഈ പിറ്റ്സ്‌ ആന്റ്‌ ലാന്റ്‌ സിനെ പൂജ്യമായും
ഒന്നായും എടുക്കുന്നു. കൂടുതല്‍ അളവിലും കുറഞ്ഞ ചിലവിലും നിര്‍മിക്കാന്‍ സാധിക്കുന്ന
തും പ്രശസ്തവുമായ ദ്വിതീയ സംഭരണ ഉപകരണമാണ്‌ ഒപ്റ്റിക്കല്‍ ഡിസ്ക്‌. പ്രധാനപ്പെട്ട
ഒപ്റ്റിക്കല്‍ സ്റ്റോറേജ്‌ ഉപകരണങ്ങളാണ്‌ CD, DVD, and Blue-Ray എന്നിവ.

111. അര്‍ദ്ധചാലക സംഭരണി (Flash Memory)

ഫ്ളാഷ്‌ ഡ്രൈവുകള്‍ ഡാറ്റാ സംഭരണത്തിനായി 1:1:101൨1, ചിപ്പു

കള്‍ ഉപയോഗിക്കുന്നു. ചലനാത്മകമായ ഭാഗങ്ങളൊന്നും തന്നെ
ഇതില്‍ ഇല്ലാത്തതിനാല്‍ ആഘാതത്തെ പ്രതിരോധിക്കുന്നതാണ്‌ ഇത്‌.
മറ്റ്‌ ദിതീയ മെമ്മറികളുമായി താരതമ്യം ചെയ്യുമ്പോള്‍ ഫ്ളാഷ്‌ മെമ്മറി
വേഗതയേറിയതും കേടുകൂടാതെ കുറേക്കാലം നില്‍ക്കുന്നതുമാണ്‌.
ഒരു നിശ്ചിത പ്രാവശ്യം മാത്രമേ എഴുതുവാന്‍ സാധിക്കുകയുള്ളൂ
എന്നത്‌ ഇതിന്റെ ഒരു പരിമിതിയാണ്‌.

USB ഫ്ളാഷ്‌ മെമ്മറി, ഫ്ളാഷ്‌ മെ

മ്മറി കാര്‍ഡ്‌ എന്നിവ വിവിധ തരത്തി ir
ലുള്ള ഫ്ളാഷ്‌ മെമ്മറികളാണ്‌. ചിത്രം
3.803 പലതരത്തിലുള്ള ഫ്ളാഷ്‌ മെമ്മ |_

റികള്‍ കാണിച്ചിരിക്കുന്നു.

ചി(തം 3.8: ഫ്ളാഷ്‌ദ്ര്രലും മെമാറികാര്‍ദുക്ളും

S

ഒന്നാം വര്‍ഷ കമ്പ്യൂട്ടര്‍ സയന്‍സ്‌ 3. കമ്പ്യൂട്ടര്‍ സിസ്റത്തിന്റെ ഘടകങ്ങള്‍

എങ്ങിനെയാണ്‌ രജിസ്റ്ററുകളും പ്രാഥമിക മെമ്മറിയും ദ്വിതീയ മെമ്മറിയും ഒരുമിച്ച്‌
ഒരു കമ്പ്യൂട്ടറില്‍ പ്രവര്‍ത്തിക്കുന്നത്‌ എന്ന്‌ മനസിലാക്കുന്നതിന്‌ താഴെയുള്ള ഉദാഹ
രണം ശ്രദ്ധിക്കുക.

അടുക്കളയില്‍ സാലഡ്‌ ഉണ്ടാക്കുന്നതിന്‌ നമുക്ക്‌ ആവശ്യമുള്ളവ.
സാലഡ്‌ ഉണ്ടാക്കുന്നതിന്‌ ആവശ്യമായ പച്ചക്കറികള്‍ സൂക്ഷിക്കുന്നതിനുള്ള റ്രഫിജറേറ്റര്‍
പച്ചക്കറികള്‍ നുറുക്കുവാന്‍ ആവശ്യമായ പലക വെക്കുവാനുള്ള മേശ
പച്ചക്കറികള്‍ വെച്ച്‌ അരിയുവാന്‍ മേശമേല്‍ വെക്കുന്ന പലക.
ഏതൊക്കെ പച്ചക്കറികള്‍ അരിയണം എന്നതിനുള്ള പാചകക്കുറിപ്പ്‌.

ഭാഗികമായി അരിഞ്ഞ പച്ചക്കറികള്‍ വീണ്ടും ചെറുതാക്കുന്നതിന്‌ വേണ്ടിയോ ഭാഗികമായി
അരിഞ്ഞ്‌ മറ്റു പച്ചക്കറികളുമായി കൂട്ടികലര്‍ത്തുന്നതിന്‌ വേണ്ടിയോ പലകയുടെ മൂലകള്‍ ശുന്യ
മായി സൂക്ഷിക്കണം.

സാലഡ്‌ നന്നായി ഇളക്കുവാന്‍ ആവശ്യമായ പാത്രം.

© സാലഡ്‌ ഉണ്ടാക്കി കഴിഞ്ഞാല്‍ അത്‌ സൂക്ഷിച്ചുവെക്കുവാന്‍ ആവശ്യമായ ഫ്രിഡ്ജിലെ സ്ഥലം.

സാലഡ്‌ ഉണ്ടാക്കുന്നവിധം; റരഫിജറേറ്റില്‍ നിന്ന്‌ പച്ചക്കറികള്‍
മേശമേല്‍ എത്തിക്കുന്നു. പാചകക്കുറിപ്പിന്‌ അനുസരിച്ച്‌ ചില
പച്ചക്കറികള്‍ എടുത്ത്‌ അരിയുന്ന ബോക്സില്‍വെക്കുക, മുറി
ക്കുന്ന ബോര്‍ഡിന്റെ അരികിലേക്ക്‌ ചില പച്ചക്കറികള്‍ താല്‍
ക്കാലികമായി മാറ്റിവയ്ക്കുന്നു. അവ ചെറിയ കഷണങ്ങളാ
ക്കുന്നു. പകുതി മുറിച്ച കഷ്ണങ്ങള്‍ താല്‍ക്കാലികമായി പല
കയുടെ മൂലയിലേക്ക്‌ മാറ്റിവയ്ക്കാവുന്നതാണ്‌. മുറിച്ചെടുത്ത
പച്ചക്കറികള്‍ പാത്രത്തില്‍വെക്കുക. തീന്‍ മേശയില്‍ അത്‌
അപ്പോള്‍ വിതരണം ചെയ്യുന്നില്ലെങ്കില്‍ റ്രഫിജറേറ്ററിലേക്ക്‌
സൂക്ഷിക്കുക.

ഇവിടെ റ്രഫിജറേറ്റര്‍ ഒരു ദ്വിതീയ സംഭരണി അഥവാ ഹാര്‍ഡ്‌ ഡിസ്ക്‌ ആയി പ്രവര്‍ത്തിക്കുന്നു.
കൂടുതല്‍ പച്ചക്കറികള്‍ കൂടുതല്‍ കാലത്തേക്ക്‌ സൂക്ഷിച്ചു വെക്കുന്നു. പച്ചക്കറി അരിയാനുപയോ
ഗിച്ച മേശ കമ്പ്യൂട്ടറിന്റെ മദര്‍ബോര്‍ഡിനെപോലെ പ്രവര്‍ത്തിക്കുന്നു. എല്ലാ പ്രവര്‍ത്തനങ്ങളും
അവിടെവച്ചാണ്‌ നടക്കുന്നത്‌ (കമ്പ്യൂട്ടറിനുള്ളിലുള്ള). കഷണം നുറുക്കാനുള്ള ബോര്‍ഡാണ്‌ ൧൮.
- പ്രവര്‍ത്തനങ്ങള്‍ നടക്കുന്നത്‌ അവിടെയാണ്‌. പാചകക്കുറിപ്പാണ്‌ കണ്‍ട്രോള്‍ യൂണിറ്റ്‌. മുറിക്കേണ്ട
പലകയില്‍ എന്താണ്‌ ചെയ്യേണ്ടത്‌ (ALU) എന്ന്‌ ഇതില്‍ പറയുന്നു. മേശപ്പുറത്തെ ഒഴിഞ്ഞ ഭാഗ
മാണ്‌ റാം പെട്ടെന്ന്‌ എടുക്കുന്നതിനുവേണ്ടി എല്ലാ പച്ചക്കറികളും റ്രഫിജറേറ്ററില്‍ നിന്ന്‌ എടുത്ത്‌
(Counter top) മേശപ്പുറത്ത്‌ വെക്കുന്നു. ഇവിടെ പച്ചക്കറികള്‍ റ്രഫിജറേറ്ററില്‍ നിന്നും (disk)
എടുക്കുന്നതിനേക്കാള്‍ വേഗത്തില്‍ മേശപ്പുറത്തു നിന്ന്‌ എടുക്കാന്‍ സാധിക്കും. എന്നാല്‍ കൂടുതല്‍
അളവില്‍, കുറെ നേരം വെച്ചിരിക്കാന്‍ സാധിക്കുകയില്ല. ഭാഗികമായി മുറിച്ച പച്ചക്കറികള്‍ താല്‍ക്കാ
ലികമായി വച്ചിരിക്കുന്ന പലകയുടെ മൂലകള്‍ രജിസ്റ്ററുകള്‍ക്ക്‌ തുല്യമാണ്‌. ഈ മൂലകളില്‍ വച്ചിരി
ക്കുന്ന പച്ചക്കറികള്‍ വളരെ വേഗത്തില്‍ എടുക്കാന്‍ സാധിക്കും, എന്നാല്‍ കൂടുതല്‍ നേരം വെച്ചി
രിക്കാന്‍ സാധിക്കുകയില്ല. സാലഡ്‌ വെച്ചിരിക്കുന്ന പഠ്രതം ക്യാഷ്‌ മെമ്മറി പോലെയാണ്‌. ഇത്‌
പലകയുടെ മൂലയില്‍ താല്‍ക്കാലികമായി മാറ്റപ്പെടുന്ന മുറിച്ച പച്ചക്കറികള്‍ സൂഷിക്കുന്നതിനോ
(അവിടെ കൂടുതല്‍ ഉണ്ടെങ്കില്‍), സാലഡ്‌ തിരിച്ച്‌ റ്രഫിജറേറ്ററിലേക്ക്‌ വെക്കുന്നതിനോ (ഡാറ്റ
തിരിച്ച്‌ ഡിസ്്‌കിലേക്ക്‌ വെക്കുന്നതുപോലെ) അല്ലെങ്കില്‍ ഡിന്നര്‍ ടേബിളിലേക്ക്‌ വെക്കുന്നതിനോ
ആണ്‌. (ഓട്ട്പുട്ട്‌ ആയി ഡാറ്റ ഓട്ട്പുട്ട്‌ ഉപകരണത്തിലേക്ക്‌ നല്‍കുന്നതുപോലെ).

15 ഒന്നാം വര്‍ഷ കമ്പ്യൂട്ടര്‍ സയന്‍സ്‌ 3. കമ്പ്യുട്ടര്‍ സിസ്റ്റത്തിന്റെ ഘടകങ്ങള്‍

3.3.6 കമ്പ്യൂട്ടറില്‍ മെമ്മറിയുടെ പ്രാധാന്യം

(Role of memories in computers)
തൊഴിലാളികളുടെ ശമ്പളം തയാറാക്കാന്‍ ഉപയോഗിക്കുന്ന ഒരു പേ റോള്‍ പ്രോഗ്രാം പരിഗണി
ക്കുക. എല്ലാ തൊഴിലാളികളുടെയും ഡാറ്റ ഹാര്‍ഡ്‌ ഡിസ്കില്‍ ലഭ്യമായിരിക്കും. ഓരോ തൊഴി

ലാളികളെക്കുറിച്ചുള്ള വിവരങ്ങള്‍ റാമിലേക്ക്‌ എടുക്കുന്നു. അവിടെ നിന്നും ശമ്പളം കണക്കു
കൂട്ടുന്നതിനാവശ്യമായ വിവരങ്ങള്‍ (ബോണസ്‌, കുറയ്ക്കേണ്ടവ എന്നിവ) ക്യാഷ്‌ മെമ്മറിയി

ലേക്കും എടുക്കുന്നു. എത്ര മണിക്കൂര്‍ ജോലി ചെയ്തുവെന്നും
അതിനുള്ള ശമ്പളം എര്രയാണെന്നുമുള്ള ഡാറ്റ ബന്ധപ്പെട്ട
രജിസ്റ്ററുകളിലേക്ക്‌ മാറുന്നു. കണ്‍ട്രോള്‍ യൂണിറ്റില്‍ നിന്നുള്ള
നിര്‍ദേശത്തിനനുസരിച്ച്‌ ജോലി ചെയ്ത സമയം പരിഗണിച്ച്‌
ALU ശമ്പളം കണക്കാക്കുന്നു. (അധിക സമയം ജോലി ചെ
DO, ബോണസ്‌ എന്നിവ) ക്യാഷ്‌ മെമ്മറിയില്‍ നിന്നും രജി
സ്റ്ററിലേക്ക്‌ മാറ്റുന്നു. ഒരാളുടെ ശമ്പളത്തിന്റെ കണക്കുകൂട്ടലു
കള്‍ CPU പൂര്‍ത്തിയാക്കി കഴിയുമ്പോള്‍ അടുത്ത ആളുടെ
വിവരങ്ങള്‍ ദ്വിതീയ മെമ്മറിയില്‍ നിന്നും റാമിലേക്ക്‌ കൊണ്ടു
വരുന്നു. അവിടെനിന്ന്‌ ക്യാഷ്‌ മെമ്മറിയിലേക്കും തുടര്‍ന്ന്‌ രജി
സ്റ്ററിലേക്കും എത്തിക്കുന്നു.

സംഭരണശേഷിയുടെയും അതിന്റെ വേഗതയുടെയും അടിസ്ഥാ

നത്തില്‍ വിവിധതരം മെമ്മറികളുടെ ഒരു ശ്രേണി ചിത്രം 3.9ല്‍

ചി(തം 3.9: മെമറി മ്ശരണി
കൊടുത്തിരിക്കുന്നു.

വിവിധ തരം ഡാറ്റ സംഭരണികളുടെ സവിശേഷതകള്‍ പട്ടിക 3.2 ല്‍ സംഗ്രഹിച്ചിരിക്കുന്നു.

സംഭരണം സംഭരണരേഷി ആനുപാതിക മുല്യം അസ്ഥിരമായത്‌
(Volatile)

രജിസ്റര്‍ അതിവേഗം വളരെ കുറവ്‌ ഏറ്റവും കുടുതല്‍

ക്യാഷ്‌ കൂടിയ വേഗം | കുറവ്‌ വളരെ കുടുതല്‍
റാം (RAM) വളരെവേഗം കുറവ്‌,മിതം കുറവ്‌| കുടുതല്‍
ഹാര്‍ഡ്‌ ഡിസ്ക്‌ | AM വേഗം വളരെ കുടുതല്‍ വളരെ കുറവ്‌

പട്ടിക 3.2: വിവിധതരം മെമറികളുടെ സവിശേഷതകളുടെ തൊദതേഥും

സ്വയം പരിശോധിക്കുക

1 കമ്പ്യൂട്ടറിലെ അതിവേഗതയുള്ള മെമ്മറിയാണ്‌ —----------- =
2. ഡാറ്റ പ്രൊസസ്സിംഗ്‌ നിര്‍വ്വചിക്കുക
3. എന്താണ്‌ ക്യാഷ്‌ മെമ്മറി?

4. പ്രോഗ്രാം കൌണ്ടര്‍ രജിസ്റ്ററിന്റെ ഉപയോഗമെന്താണ്‌?

5. ALU വിന്റെ ഉപയോഗമെന്ത്‌?

3. കമ്പ്യൂട്ടര്‍ സിസ്റത്തിന്റെ ഘടകങ്ങള്‍

(5 ഒന്നാം വര്‍ഷ കമ്പൂട്ടര്‍ സയന്‍സ്‌

ഇന്‍പുട്ട്‌ /ഓട്ട്പുട്ട്‌ ഉപകരണങ്ങള്‍ (Input/output Devices)

പുറംലോകവുമായി ആശയവിനിമയം സാധ്യമാകുന്നില്ലെങ്കില്‍ കമ്പ്യൂട്ടര്‍ കൊണ്ട്‌ യാതൊരു
ഉപയോഗവും ഇല്ല. കമ്പ്യൂട്ടറും ഉപയോക്താവും തമ്മില്‍ ആശയവിനിമയം നടത്തുന്നതിന്‌
ഇന്‍പുട്ട/ഓട്ട്പുട്ട്‌ ഉപകരണങ്ങള്‍ ആവശ്യമാണ്‌. ചുരുക്കത്തില്‍ ഇന്‍പുട്ട്‌ ഉപകരണങ്ങള്‍ കമ്പ്യു
ട്ടറിലെക്ക്‌ ഡാറ്റയും നിര്‍ദ്ദേശങ്ങളും കൊടുക്കുകയും ഓട്ട്പുട്ട ഉപകരണങ്ങള്‍ കമ്പ്യൂട്ടറിലുള്ള
വിവരങ്ങള്‍ അവതരിപ്പിക്കുകയും ചെയ്യുന്നു. വിവിധതരത്തിലുള്ള പോര്‍ട്ടുകള്‍ വഴിയോ
വയര്‍ലെസ്‌ സാങ്കേതികവിദ്യയുടെ സഹായത്താലോ ഈ ഇന്‍പുട്ട്‌ /ഓട്ട്പൂട്ട്‌ ഉപകരണങ്ങളെ
CPU വുമായി ബന്ധിപ്പിക്കാം. ഇവ ൮/വിന്‌ പുറത്തായതിനാല്‍ അവയെ പെരിഫറലുകള്‍
എന്നുവിളിക്കുന്നു.

താഴെ കൊടുത്തിരിക്കുന്ന പട്ടികയില്‍ വിവിധതരത്തിലുള്ള ഇന്‍പുട്ട്‌ ഉപകരണങ്ങളും അവയുടെ
ഉപയോഗങ്ങളും കാണിച്ചിരിക്കുന്നു.

ഉപകരണം സവിശേഷതകള്‍ /ഉപയോഗങ്ങള്‍

ഉപയോക്താവിന്‌ കമ്പ്യൂട്ടറിലേക്ക്‌ അക്ഷരങ്ങള്‍, സംഖ്യകള്‍, ചിഹ്ന
ങ്ങള്‍ തുടങ്ങിയവ അടങ്ങുന്ന ടെക്സ്റ്റ്‌ ഡാറ്റ ഇന്‍പുട്ട്‌ ചെയ്യുവാന്‍
സഹായിക്കുന്നു. നമ്മള്‍ അമര്‍ത്തുന്ന കീ തിരിച്ചറിഞ്ഞ്‌ അതിന്‌
അനുസൃതമായി കമ്പ്യൂട്ടറിന്‌ മനസിലാകുന്ന ആസ്കി കോഡ്‌
(൧5൦൩) സൃഷ്ടിക്കുന്നു. കേബിള്‍ ഉള്ളതും ഇല്ലാത്തതുമായ
കീബോര്‍ഡുകള്‍ വിപണിയില്‍ ലഭ്യമാണ്‌.

ഒരു പരന്ന പ്രതലത്തില്‍ /മൌസ്‌ പാഡില്‍ വെച്ച്‌ കമ്പ്യൂട്ടറിന്റെ
സ്ക്രീനിലെ മൌസ്‌ പോയിന്ററിനെ എങ്ങോട്ടു വേണമെങ്കിലും ചലി
പ്പിക്കാന്‍ സാധിക്കുന്നതോ കര്‍സര്‍ ഒരു സഥാനത്തെത്തിക്കുവാന്‍
ഉപയോഗിക്കുന്നതോ ആയ കയ്യില്‍ ഒതുങ്ങുന്ന ചെറിയ ഉപകര
ണമാണിത്‌. ബാള്‍, ഒപ്റ്റിക്കല്‍, ലേസര്‍ എന്നിവ വിവിധ തരം
മൌസുകളാണ്‌. കേമ്പിള്‍ ഇല്ലാത്ത മാസും ലഭ്യമാണ്‌.

പേനയുടെ ആകൃതിയിലുള്ള ഒരു പോയിന്റിംങ്ങ്‌ ഉപകരണമാണിത്‌.
സ്ക്രീനില്‍ നേരിട്ട്‌ വരക്കാന്‍ കഴിയുന്നു എന്നതാണ്‌ ഇതിന്റെ മേന്മ.

കമ്പ്യൂട്ടറിന്റെ സഹായത്തോടെയുള്ള രൂപകല്‍പ്പനക്കും (CAD)

ചിത്രരചനക്ക്‌ വേണ്ടി കലാകാരന്‍മാരും ഫാഷന്‍ ഡിസൈനര്‍മാരും
എഞ്ചിനീയര്‍മാരും ഇത്‌ ഉപയോഗിക്കുന്നു.

സ്ക്രീനില്‍ തൊട്ടുകൊണ്ട്‌ പ്രവര്‍ത്തിപ്പിക്കുവാനോ / തിരഞ്ഞെടു
ക്കുവാനോ ഉപയോക്താവിനെ അനുവദിക്കുന്ന ഉപകരണമാണിത്‌.
കൂടുതല്‍ കൃത്യതയ്ക്കായി സ്റ്റൈലസ്‌ എന്ന ഉപകരണം ഉപയോ
ഗിച്ചു ഇത്‌ പ്രവര്‍ത്തിപ്പിക്കാവുന്നതാണ്‌

എഴുതുവാന്‍ ഉപയോഗിക്കുന്ന ഇലക്ട്രോണിക്‌ പ്രതലവും അതിനുള്ള

പ്രത്യേകതരം പേനയുമാണ്‌ ഗ്രാഫിക്‌ ടാബ്ലറ്റിനുള്ളത്‌. ചി്രരചന
കള്‍ നടത്തുന്നതിനായി ഇത്‌ കലാകാരന്‍മാരെ അനുവദിക്കുന്നു.

1S ഒന്നാം വര്‍ഷ കമ്പൂട്ടര്‍ സയന്‍സ്‌ 3. കമ്പ്യുട്ടര്‍ സിസ്റ്റത്തിന്റെ ഘടകങ്ങള്‍

മൈക്രോഫോണ്‍

വീഡിയോ ഗെയിമുകള്‍ കളിക്കുവാനും റോബോട്ട്‌, (SWIMS സിമു
ലേറ്റര്‍ എന്നിവ നിയ്യ്്രിക്കുവാനും ഉപയോഗിക്കുന്നു. ഇതിന്‌ ഏതു
ദിശയിലേക്കും ചലിപ്പിക്കാവുന്ന ലംബമായ ഒരു വടിയും അതിന്‌
മുകളില്‍ ഒരു ബട്ടനുമുണ്ട്‌. കര്‍സര്‍ സൂചിപ്പിക്കുന്നത്‌ തിരഞ്ഞെടു
ക്കുവാന്‍ ഇത്‌ ഉപയോഗിക്കാം.

അനലോഗ്‌ രൂപത്തിലുള്ള ശബ്ദത്തെ ഇന്‍പുട്ട്‌ ആയി സ്വീകരിച്ച്‌
അതിനെ ഡിജിറ്റല്‍ രൂപത്തിലാക്കി മാറ്റുന്നു. ഡിജിറ്റല്‍ രൂപത്തിലാ
ക്കിയ ശബ്ദത്തെ കമ്പ്യൂട്ടറില്‍ സൂക്ഷിച്ചുവെച്ച്‌ പിന്നീടുള്ള പ്രവര്‍
ത്തനങ്ങള്‍ക്കു വേണ്ടിയോ വീണ്ടും കേള്‍പ്പിക്കുന്നതിനോ ഉപയോ
ഗിക്കുന്നു.

അക്ഷരരുപത്തിലോ ചിത്രരൂപത്തിലോ ഉള്ള വിവരങ്ങള്‍ ശേഖരിച്ച്‌
അതിനെ ഡിജിറ്റല്‍ രൂപത്തിലാക്കി മാറ്റുന്നു. പിന്നീട്‌ അതിനെ
കമ്പ്യൂട്ടര്‍ ഉപയോഗിച്ച്‌ എഡിറ്റ്‌ ചെയ്യാവുന്നതാണ്‌. ഗുണമേന്മയുള്ള
ചിത്രങ്ങള്‍ ലഭിക്കുന്നത്‌ സ്്‌കാനറിന്റെ റെസല്യൂഷനെ ആശ്രയിച്ചി
രിക്കുന്നു. പരന്നതലമുള്ള (flat bed), ഷീറ്റ്‌ ഫീഡ്‌ (sheet feed),
കയ്യില്‍ പിടിക്കാവുന്ന (hand held) സ്‌കാനര്‍ എന്നിവ വിവിധ തര
ത്തിലുള്ള സ്കാനറുകളാണ്‌. സ്‌കാന്‍ ചെയ്ത ചിത്രത്തിലെ
ടെക്സ്റ്റിനെ തിരിച്ചറിയുന്നതിനും അതിനെ ടെക്സ്റ്റ്‌ ആയി മാറ്റുന്ന
തിനും ഒപ്റ്റിക്കല്‍ ക്യാരക്ടര്‍ റക്കഗ്നിഷന്‍ (OCR) സോഫ്റ്റവെയര്‍
ഉപയോഗിക്കുന്നു. ഈ ടെക്സ്റ്റിനെ ഒരു ടെക്സ്റ്റ്‌ എഡിറ്റര്‍ ഉപയോ
ഗിച്ച്‌ മാറ്റം വരുത്താവുന്നതാണ്‌.

ഒപ്റ്റിക്കല്‍ മാര്‍ക്ക്‌
റീഡര്‍ (OMR)

Ss

ബാര്‍കോഡ്‌ റീഡര്‍/
ക്യുക്ക്‌ റെസ്‌
പോണ്‍സ്‌ (ദൂത
പ്രതികരണ)

QR കോഡ്‌ റീഡര്‍

oO ॥॥

ഒരു പ്രിന്റ്‌ ചെയ്ത ഫോമിലെ നിശ്ചയിച്ച സ്ഥാനങ്ങളിലുള്ള അട
യാളങ്ങള്‍ ശേഖരിക്കുന്നതിനും അവ സംഭരിക്കുന്നതിനും ഉപയോ
ഗിക്കുന്ന മറ്റൊരു സ്‌കാനിംഗ്‌ ഉപകരണമാണിത്‌. കൈകൊണ്ട്‌
പൂര്‍ത്തിയാക്കിയ ഫോമുകള്‍ വളരെ കൃത്യതയോടും വേഗത്തിലും
പ്രോസസ്സ്‌ ചെയ്യുന്നതിന്‌ ഉപയോഗ്രപ്രദമാണ്‌ ഇത്‌. ഒബ്ജക്റ്റീവ്‌ തര
ത്തിലുള്ള മത്സരപരീക്ഷകളുടെ മൂല്യനിര്‍ണ്ണയം, ചോദ്യാവലികള്‍
എന്നിവ ഉദാഹരണങ്ങളാണ്‌.

ഒരു നമ്പര്‍ പ്രതിനിധീകരിക്കുന്ന വ്യത്യസ്ത കട്ടിയും അകലവുമുള്ള
ലംബരേഖകളുടെ ഒരു കൂട്ടമാണ്‌ ബാര്‍കോഡ്‌. അത്തരം ബാര്‍കോ
ഡുകളുടെ കൂട്ടം ഉപയോഗിച്ച്‌ ഡാറ്റ ഇന്‍പുട്ട്‌ ചെയ്യാന്‍ ബാര്‍കോഡ്‌
റീഡറുകള്‍ സഹായിക്കുന്നു. കയ്യില്‍ പിടിക്കാവുന്ന സ്കാനറുകള്‍,
ക്യാമറയോടു കൂടിയ മൊബൈല്‍ ഫോണ്‍ സ്പെഷ്യല്‍ സോഫ്ട്വെ
യര്‍ എന്നിവ ബാര്‍കോഡ്‌ റീഡറുകള്‍ ആയി ഉപയോഗിക്കുന്നു. QR
കോഡ്‌ ബാര്‍കോഡ്‌ പോലെയാണ്‌. ബാര്‍കോഡുകള്‍ ഏകമാനം
ആണ്‌. എന്നാല്‍ QR കോഡ്‌ ദ്വിമാനം ആണ്‌. ദ്വിമാന രീതിയിലുള്ള
ഡാറ്റ സംഭരണം, QR കോഡിന്‌ സാധാരണ ബാര്‍കോഡിനെ അപേ
ക്ഷിച്ച്‌ കൂടുതല്‍ ഡാറ്റ സംഭരിക്കാന്‍ അനുവദിക്കുന്നു. വെബ്സൈ
റ്റിന്റെ യു.ആര്‍.എല്ലും (URL). പ്ലെയിന്‍ ടെക്സ്റ്റും ഫോണ്‍ നമ്പറും

(5 ഒന്നാം വര്‍ഷ കമ്പ്യൂട്ടര്‍ സയന്‍സ്‌ 3. കമ്പ്യുട്ടര്‍ സിസ്റ്റത്തിന്റെ ഘടകങ്ങള്‍

ബയോമ്മെരെടിക്
സെന്‍സര്‍

സ്മാര്‍ട്ട്‌ കാര്‍ഡ്‌ റീഡര്‍

ഇ-മെയില്‍ അഡ്രസ്സും എന്നുവേണ്ട എല്ലാ അക്കങ്ങളും അക്ഷര
ങ്ങളും ഈ കോഡ്‌ സൂക്ഷിച്ചു വെയ്ക്കുന്നു. QR കോഡ്‌ വായിച്ചെ
ടുക്കാന്‍ സഹായിക്കുന്നത്‌ ബാര്‍കോഡ്‌ റീഡര്‍ ഉപയോഗിച്ചോ ക്യാമ
റയോടു കൂടിയ മൊബൈല്‍ ഫോണ്‍ ഉപയോഗിച്ചോ ഇന്‍സ്റ്റാള്‍
ചെയ്തിരിക്കുന്ന പ്രത്യേക സോഫ്റ്റ്വെയര്‍ ഉപയോഗിച്ചോ ആണ്‌.

മനുഷ്യന്റെ അനന്യമായ ശാരീരിക പ്രത്യേകതകള്‍ ഏറ്റവും കൃത്യ
തയോടെ വായിച്ചെടുക്കാന്‍ സഹായിക്കുന്ന ഒരു ഉപകരണമാണ്‌
ബയോമ്മെടിക്‌ സെന്‍സര്‍. ശാരീരിക സവിശേഷതകളായ വിരലട
യാളം, റെറ്റിന, ഐറിസ്‌ എന്നിങ്ങിനെയുള്ളവ തിരിച്ചറിഞ്ഞ്‌,
ഒരാളുടെ ഐഡന്റിറ്റി ഉറപ്പുവരുത്താന്‍ ഉപയോഗിക്കുന്ന ബയോമെ
ട്രിക്‌ സംവിധാനത്തിലെ ഒഴിവാക്കാനാവാത്ത ഘടകമാണ്‌ ഇത്‌.

ഡാറ്റ സൂക്ഷിക്കുവാനും കൈമാറ്റം ചെയ്യുവാനും സാധിക്കുന്ന ഒരു
പ്ലാസ്റ്റിക്‌ കാര്‍ഡാണ്‌ സ്മാര്‍ട്ട്‌ കാര്‍ഡ്‌. ഇതില്‍ ഒരു മൈക്രോ പ്രൊസ
TYEO, മെമ്മറിയോ കാണപ്പെടുന്നു. ബാങ്കിംഗ്‌, ആരോഗ്യമേഖല,
ടെലിഫോണ്‍ വിളികള്‍, ഇലക്ട്രോണിക്‌ ക്യാഷ്‌ പെയ്മെന്റുകള്‍
എന്നീ വിവിധ പ്രവര്‍ത്തനങ്ങള്‍ക്ക്‌ സ്മാര്‍ട്ട്‌ കാര്‍ഡ്‌ ഉപയോഗിക്കു
ന്നു. സ്മാര്‍ട്ട്‌ കാര്‍ഡിലെ ഡാറ്റ എടുക്കുവാന്‍ ഉപയോഗിക്കുന്ന ഉപ
കരണമാണ്‌ സ്മാര്‍ട്ട്‌ കാര്‍ഡ്‌ റീഡര്‍.

ഡിജിറ്റല്‍ ക്യാമറ

ചിത്രങ്ങളും വീഡിയോകളും എടുത്ത്‌ ഡിജിറ്റല്‍ രൂപത്തിലേക്ക്‌
മാറ്റാന്‍ ഡിജിറ്റല്‍ ക്യാമറ ഉപയോഗിക്കുന്നു. ചിത്രങ്ങള്‍ മെമ്മറിയില്‍
സൂക്ഷിച്ചു വയ്ക്കുകയും അതിനുശേഷം കമ്പ്യൂട്ടറിലേക്ക്‌ മാറ്റുകയും
ചെയ്യുന്നു. ഡിജിറ്റല്‍ ക്യാമറയുടെ ചെലവ്‌ കുറഞ്ഞതും ഒതുക്കമു
ള്ളതുമായ പതിപ്പാണ്‌ വെബ്ബ്‌ ക്യാമറ. വീഡിയോ കോളിംഗ്‌,
വീഡിയോ ചാറ്റിംങ്ങ്‌ എന്നിവയ്ക്കായി കമ്പ്യൂട്ടറില്‍ ഇത്‌ ഉപയോഗി
ക്കുന്നു. ഇതിന്‌ ആന്തരിക മെമ്മറി ഉണ്ടായിരിക്കുകയില്ല.

പട്ടിക 3.3: ഇന്പുട്ട്‌ ഉപകരണങ്ങളും അവയുടെ ഉപയോഗവും

ചില ഓട്ടപുട്ട്‌ ഉപകരണങ്ങളും അവയുടെ പ്രത്യേകതകളും നമുക്ക്‌ ഇപ്പോള്‍ നോക്കാം.
വിവിധ ഓട്ട്പുട്ട്‌ ഉപകരണങ്ങളും അവയുടെ ഉപയോഗവും പട്ടിക 3.4 ല്‍ കാണാം

ഉപകരണം

വിഷ്വല്‍ ഡിസ്പ്ലേ
യൂണിറ്റ്‌ (VDU)

സവിശേഷതകള്‍ /ഉപയോഗങ്ങള്‍

CRT മോണിറ്ററുകള്‍, ഗ്യാസ്‌ പ്ലാസ്മ മോണിറ്ററുകള്‍, എല്‍.സി.ഡി
മോണിറ്ററുകള്‍, ടി.എഫ്‌..ടി മോണിറ്ററുകള്‍, എല്‍.ഇ.ഡി
മോണിറ്ററുകള്‍, ഓര്‍ഗാനിക്‌ ലൈറ്റ്‌ എമിറ്റിങ്ങ്‌ ഡയോഡ്‌ മോണിറ്ററു
കള്‍ (OLED) തുടങ്ങിയവ ഡിസ്പ്ലേ ഉപകരണങ്ങളാണ്‌. ഡിസ്പ്ലേ
ഉപകരണങ്ങളില്‍ കാണുന്ന വിവരങ്ങളെ സോഫ്‌്റ്റ്‌കോപ്പി എന്നു
വിളിക്കുന്നു. സ്‌ക്രീനിന്‌ കുറുകെ ഡയഗണലായി ഇഞ്ചുകളില്‍

ആണ്‌ മോണിറ്ററിന്റെ വലുപ്പം കണക്കാക്കുന്നത്‌.

ഒന്നാം വര്‍ഷ കമ്പ്യൂട്ടര്‍ സയന്‍സ്‌ 3. കമ്പ്യുട്ടര്‍ സിസ്റ്റത്തിന്റെ ഘടകങ്ങള്‍

എല്‍.സി.ഡി. പ്രൊജ വീഡിയോയും ചിത്രങ്ങളും കമ്പ്യൂട്ടറിലെ ഡാറ്റയും ഒരു വലിയ

ക്ടര്‍ (LCD Projector)

പ്രിന്റര്‍ (Printer)

ഡോടമ്മെടിക്സ്‌ പ്രിന്റര്‍

ന

ഇന്‍ക്ജെറ്റ്‌ പ്രിന്റര്‍

ലേസര്‍ പ്രിന്റര്‍

@.

തെര്‍മല്‍ പ്രിന്റര്‍

സ്ക്രീനിലോ മറ്റേതെങ്കിലും പരന്ന പ്രതലത്തിലോ പ്രദര്‍ശിപ്പിക്കാ
നുപയോഗിക്കുന്ന ഒരുതരം വീഡിയോ പ്രൊജക്ടറാണ്‌ എല്‍.സി.
ഡി. പ്രൊജക്ടര്‍. ഉയര്‍ന്ന തീധ്രതയിലുള്ള പ്രകാശം എല്‍.സി.ഡി.
യിലുള്ള ആയിരക്കണക്ക്‌ പിക്സലുകളിലൂടെ കടത്തിവിടുകയും

അവയെ ലെന്‍സ്‌ ഉപയോഗിച്ച്‌ ക്രേന്്രീകരിക്കുകയും ചെയ്യുന്നു.

ഹാര്‍ഡ്‌ കോപ്പി ഓട്ട്പുട്ട്‌ നിര്‍മ്മിക്കുന്നതിനാണ്‌ പ്രിന്റര്‍ ഉപയോഗി
ക്കുന്നത്‌. പേപ്പറുകളില്‍ പ്രിന്റ്‌ ചെയ്തെടുക്കുന്ന ഓട്ടപുട്ടുകള്‍ ഹാര്‍ഡ്‌
കോപ്പി എന്നാണറിയപ്പെടുന്നത്‌. പ്രിന്ററിനെ ഇംപാക്ട്‌ പ്രിന്റര്‍,
നോണ്‍ ഇംപാക്ട്‌ പ്രിന്റര്‍ എന്നിങ്ങിനെ രണ്ടായി തരംതിരിച്ചിരിക്കു
ന്നു. ഡോട്ട്‌ മ്രെടിക്സ്‌ എന്നത്‌ ഇംപാക്ട്‌ പ്രിന്റര്‍ വിഭാഗത്തില്‍പെടു
ന്നു. വളരെ കുറഞ്ഞ പ്രിന്റിങ്ങ്‌ ചെലവില്‍ കാര്‍ബണ്‍ കോപ്പികള്‍
പ്രിന്റ്‌ ചെയ്യുന്നു. ഒരു പ്രിന്ററിന്റെ വേഗത അളക്കുന്നത്‌, ഒരു നിശ്ചിത
സമയത്ത്‌ എത്ര കാരക്ടറുകള്‍ പ്രിന്റ്‌ ചെയ്യുന്നു, കാരക്ടേഴസ്‌ പെര്‍
സെക്കണ്ട്‌ (CPS), ലൈന്‍സ്‌ പെര്‍ മിനുട്ട്‌ (LPM) അഥവാ പേജസ്‌ പെര്‍
മിനുട്ട്‌ (PPM) എന്നിവയെ ആശ്രയിച്ചാണ്‌. ഈ പ്രിന്ററുകള്‍ വേഗത
കുറഞ്ഞവയും ശബ്ദം ഉണ്ടാക്കുന്നവയുമാണ്‌. ഇങ്കജെറ്റ്‌ പ്രിന്ററുകള്‍
നോണ്‍ഇംപാക്ട്‌ പ്രിന്റര്‍ എന്ന വിഭാഗത്തില്‍പെടുന്നു. ഇങ്കജെറ്റ്‌
പ്രിന്ററുകളില്‍ അക്ഷരങ്ങള്‍ രൂപപ്പെടുത്തുന്നത്‌ പ്രിന്റ്‌ ഹെഡിലൂടെ
ചെറിയ മഷിത്തുള്ളികള്‍ പേപ്പറിലേക്ക്‌ സ്പ്രേ ചെയ്താണ്‌. ഇങ്കജെറ്റ്‌
പ്രിന്ററുകള്‍ ചെലവ്‌ കുറഞ്ഞവയാണെങ്കിലും ദീര്‍ഘകാലത്തെക്ക്‌
ഉപയോഗിക്കുമ്പോള്‍ അവയുടെ ചിലവ്‌ വര്‍ദ്ധിക്കുന്നു. ലേസര്‍
പ്രിന്ററുകള്‍, നോണ്‍ ഇംപാക്ട്‌ വിഭാഗത്തില്‍പെടുന്നു. നല്ല നിലവാ
രത്തിലുള്ള ചിത്രങ്ങള്‍ സൃഷ്ടിക്കാന്‍ ഇവ ഉപയോഗിക്കുന്നു. ഡോട്ട്‌
മാ്്രിക്സ്‌ പ്രിന്ററിനെ അപേക്ഷിച്ച്‌ ശബ്ദമില്ലാതെയും വളരെ വേഗ
ത്തിലും പ്രിന്റ്‌ ചെയ്യാന്‍ ലേസര്‍ പ്രിന്ററുകള്‍ ഉപയോഗിക്കുന്നു.
മോണോക്രോം ലേസര്‍ ല്രിന്ററുകളും കളര്‍ ലേസര്‍ ലപ്രിന്ററുകളും
വിപണിയില്‍ ലഭ്യമാണ്‌. പലവിധത്തിലുള്ള കളര്‍ ടോണര്‍ കാട്ടി
ഡ്ജുകള്‍ ഉപയോഗിച്ച്‌ വിവിധ നിറങ്ങളിലുള്ള ഓട്ട്പുട്ടുകള്‍
സൃഷ്ടിക്കാന്‍ കളര്‍ ലേസര്‍ പ്രിന്ററുകള്‍ ഉപയോഗിക്കുന്നു. ഇവ
ചെലവേറിയവയാണ്‌. ലേസര്‍ പ്രിന്ററുകള്‍ വേഗതയേറിയവയാണ്‌.
ഇവയുടെ വേഗത അളക്കുന്നത്‌ പേജസ്‌ പെര്‍ മിനുട്ടിലാണ്‌ (PPM).
തെര്‍മല്‍ പ്രിന്റര്‍ നോണ്‍ ഇംപാക്ട്‌ പ്രിന്റര്‍ വിഭാഗത്തില്‍പ്പെടുന്നു.
ഹീറ്റ്‌ സെന്‍സിറ്റീവ്‌ തെര്‍മല്‍ പേപ്പര്‍ എന്ന പ്രത്യേകതരം പേപ്പര്‍

ആണ്‌ ഇവിടെ ഉപയോഗിക്കുന്നത്‌. ഈ പേപ്പര്‍ ഉപയോഗിച്ച്‌ പ്രിന്റ്‌

3D പ്രിന്റര്‍

ഒന്നൊം വര്‍ഷ കമ്പ്യൂട്ടര്‍ സയന്‍സ്‌

3. കമ്പ്യൂട്ടര്‍ സിസ്റത്തിന്റെ ഘടകങ്ങള്‍

ഹെഡിന്‌ മുകളിലൂടെ ഇത്‌ നീങ്ങുമ്പോള്‍ അച്ചടിക്കേണ്ടതായ വിവര
ത്തിന്റെ പ്രതിരൂപം സൃഷ്ടിക്കുന്നു. എടുത്തു കൊണ്ടു പോകാന്‍

സാധിക്കുന്ന പ്രചാരത്തിലുള്ള പ്രിന്ററാണിത്‌.

ഗ്രാഫിന്റേയും രൂപകല്‍പ്പനയുടെയും (design) ഹാര്‍ഡ്കോപ്പി
നിര്‍മ്മിക്കാന്‍ ഉപയോഗിക്കുന്ന ഓട്ടപുട്ട്‌ ഉപകരണമാണ്‌ പ്പലോട്ടര്‍.
വലിയ തോതിലുള്ള ഗ്രാഫുകളും, ഭൂപടങ്ങളും, പോസ്റ്ററുകളും,
നിര്‍മ്മാണത്തിനാവശ്യമായ മാപ്പുകളും, എഞ്ചിനീയറിങ്ങിനാവശ്യ
മായ ചിത്രങ്ങളും പ്രിന്റ്‌ ചെയ്യാന്‍ ഉപയോഗിക്കുന്ന ഉപകരണമാണ്‌
പ്ലോട്ടറുകള്‍. രണ്ട്‌ തരത്തിലുള്ള പ്ലോട്ടറുകളുണ്ട്‌. (Wo പ്ലോട്ടര്‍ (Drum
Plotter), ഫ്ളാറ്റ്‌ ബെഡ്‌ പ്ലോട്ടര്‍ (Flat bed plotter). ധം പ്ലോട്ടര്‍ റോളര്‍
പ്ലോട്ടര്‍ എന്നും ഫ്ളാറ്റ്‌ ബെഡ്‌ പ്ലോട്ടര്‍ ടേബിള്‍ പ്പലോട്ടര്‍ എന്നും
അറിയപ്പെടുന്നു

3D വസ്തുക്കള്‍ പ്രിന്റ്‌ ചെയ്യാന്‍ ഉപയോഗിക്കുന്ന ഓട്ടപുട്ട്‌ ഉപകര
ണമാണ്‌ 3D പ്രിന്റര്‍. പദാര്‍ത്ഥങ്ങളില്‍ പലതരത്തിലുള്ള വസ്തു
ക്കള്‍ നിര്‍മ്മിക്കുവാന്‍ സാധിക്കുന്നു. പ്രിന്റ്‌ ചെയ്യേണ്ട വസ്തുവിനെ
ആയിരക്കണക്കിന്‌ വളരെ ചെറിയ കഷണങ്ങളാക്കി മാറ്റുന്നു. താഴെ
മുതല്‍ മുകള്‍ വരെ കഷ്ണം കഷ്ണമായി പ്രിന്റ്‌ ചെയ്യുന്നു. ഈ
ചെറിയ ലയറുകള്‍ ഒന്നിച്ച്‌ കൂട്ടിചേര്‍ത്ത്‌ യഥാര്‍ത്ഥ വസ്തുവിന്റെ
മാതൃക ഉണ്ടാക്കുന്നു. സെറാമിക്‌ കപ്പ്‌, കളിപ്പാട്ടങ്ങള്‍ എന്നിവ ഉദാ
ഹരണങ്ങളാണ്‌.

ഓഡിയോ ഓട്ട്പുട്ട്‌
ഉപകരണങ്ങള്‍

കമ്പ്യൂട്ടര്‍ ഉണ്ടാക്കുന്ന ശബ്ദം പുറത്തേക്ക്‌ ലഭ്യമാക്കുന്ന ഉപകര
ണങ്ങളാണ്‌ ഓഡിയോ ഓട്ട്പുട്ട്‌. ശബ്ദം സൃഷ്ടിക്കുന്ന ഓട്ട്പുട്ട്‌
ഉപകരണമാണ്‌ സ്പീക്കറുകള്‍. ഓഡിയോ പോര്‍ട്ടുകള്‍ വഴിയാണ്‌

ഇവ കമ്പ്യൂട്ടറുമായി ബന്ധിപ്പിക്കുന്നത്‌.

പട്ടിക 3.4: BIS OILS ഉപകരണങ്ങളും അവയുടെ ഉപയോഗവും

15 ഒന്നാം വര്‍ഷ കമ്പ്യുട്ടര്‍ സയന്‍സ്‌

3. കമ്പ്യൂട്ടര്‍ സിസ്റത്തിന്റെ ഘടകങ്ങള്‍

നമ്മള്‍ പലതരത്തിലുള്ള പ്രിന്ററുകള്‍ കണ്ടുവല്ലോ. ഈ പ്രിന്ററുകളുടെ വൃത്യസ്ഥ സ്വഭാവ
സവിശേഷതകളുടെ താരതമ്യം പട്ടിക 3.5 ല്‍ കൊടുത്തിരിക്കുന്നു.

സവിശേഷതകള്‍

ലേസര്‍
പ്രിന്ററുകള്‍

ഉങ്ക്ജെറ്റ്‌
പ്രിന്ററുകള്‍

തെര്‍മല്‍
പ്രിന്ററുകള്‍

ഡോട്ട്മ്്രിക്സ്‌
പ്രിന്ററുകള്‍

പ്രിന്റ്‌ ചെയ്യാനുപ
യോഗിക്കുന്ന
വസ്തു

എങ്ങനെ ഉത്‌
പ്രിന്റ്‌ ചെയ്യുന്നു

പ്രിന്റിങ്ങിന്റെ
വേഗത

ഗുണമേ

പൊടി രൂപത്തിലു
ള്ള മഷി (ഇങ്ക്‌
പൌഡര്‍)

പേര്‍ ചൂടാക്കി
അതില്‍ പാഡര്‍
ഒഴുക്കുന്നു

മിനുട്ടില്‍ 20 പേജ്‌

ഗുണമേന്‍മയുള്ള
പ്രിന്റിംഗ്‌, ബ്ലാക്ക്‌ &
വൈറ്റിന്‌ നല്ലത്‌

ദ്രവ രൂപത്തിലുള്ള
മഷി

വളരെ ചെറിയ ദ്വാര
ങ്ങളിലൂടെ ദ്രവരുപ
ത്തിലുള്ള മഷി
പേക്റില്‍ സ്‌പ്രേ
ചെയ്യുന്നു

മിനുട്ടില്‍ € പേജ്‌

ഗുണമേനുയുള്ളത്‌
പ്രത്യേകിച്ചു ചെറിയ
ഫോണുകള്‍ക്ക്‌

ഹീറ്റ്‌ സെന്‍സി
റ്റീവ്‌ പേര്‍

തെര്‍൨ല്‍ പ്രിന്റ്‌
ഹെഡിന്‌ മുകളി
ലൂടെ തെര്‍മല്‍
പേര്‍ പാസ്‌
ചെയ്യുന്നു

ചിത്രങ്ങള്‍ പ്രിന്റ്‌
ചെയ്യുന്നതിന്‌
യോജിച്ചതല്ല,
ടെക്സ്ത്റുകള്‍
പ്രിന്റ്‌ ചെയ്യാന്‍

നല്ലത്‌.

മുഷി പുരട്ടിയ
റിബ്ബണ്‍

പേക്റിന്‌ മുകളി
ലുള്ള റിബബണില്‍
പിന്നുകള്‍
അമർത്തുന്നു

ഒരു സെക്കന്റില്‍
30 മുതല്‍ 550
ക്യാരക്ടറുകള്‍
വരെ

ചിത്രങ്ങള്‍ പ്രിന്റ്‌
ചെയ്യാന്‍ യോജിച്ച
തല്ല. ടെക്സ്സിന്റെ
അടിസ്ഥാനത്തില്‍

നല്ലത്‌.

ദോഷങ്ങള്‍

ശബ്ദമില്ലാതെ
പ്രിന്റ്‌ ലദിക്കും,
വേഗത്തില്‍ പ്രിന്റ്‌
ലഭിക്കും, ഉയര്‍ന്ന
പ്രിന്റ്‌ നിലവാരം

പേര്‍ കുടുങ്ങാ
നുള്ള സാധ്യത
കൂടുതല്‍, ടോണ
റിന്റെ വില കൂടു
തല്‍, ഉപകരണ
ത്തിനും വില
കൂടുതല്‍

ശബ്ദമില്ല, ഉയര്‍ന്ന
പ്രിന്റ്‌ നിലവാരം,
ഉപകരണത്തിന്‌
പ്രത്യേക തയാഥെടുക്‌
ആവശ്യമില്ല, കുറഞ്ഞ
ഉപകരണ വില

മഷിക്ക്‌ വില കൂടു
തല്‍, മഷി വാട്ടര്‍
പ്രൂഫ്‌ അല്ല,
അതിനാല്‍ സ്പ്രേ
ചെയ്യുമ്പോള്‍ തടസ്സ
ങ്ങള്‍ നേരിടാം.

ശബ്ദമില്ല, വേഗത,
ചെറുത്‌, ദാരം
കുറവ്‌, കുറഞ്ഞ
വൈദ്യുതി ഉപയോ
ഗം, കൊണ്ടു നട
ക്കാവുന്നത്‌

സ്പെഷ്യല്‍
തെര്‍മല്‍ പേര്‍
ആവശ്യമായി
വരുന്നു. പ്രിന്റിംഗ്‌
ഗുണമേ
കുറവാണ്‌.

പട്ടിക 3.5: (്രിന്റീറുക്ളുടെ താരതമ

റിബ്ബണിന്‌ വില
കുറവായതു
കൊണ്ട പ്രിന്റിങ്ങിന്‌
വില കുന്പ്‌,
കാര്‍ബണ്‍ കോഷി
എടുക്കാം.

പ്രാരം8 മുടക്ക്‌
മുതല്‍ കൂടുതലാ
ണ്‌, വേഗത്തില്‍
പ്രിന്റ്‌ ചെയ്യുന്നില്ല,
ശബ്ദം കൂടുതലാ

ണ്‌.

ഒന്നാം വര്‍ഷ കമ്പ്യൂട്ടര്‍ സയന്‍സ്‌ 3. കമ്പ്യൂട്ടര്‍ സിസ്റത്തിന്റെ ഘടകങ്ങള്‍

3.4 ഇ-വേസ്റ്റ്‌ (e-Waste)

ഇലക്ട്രോണിക്‌ ഉപകരണങ്ങള്‍ ഉപയോഗശുന്യമാകുമ്പോള്‍ അവ അറിയപ്പെടുന്നത്‌ ഇ-വേസ്റ്റ്‌
എന്ന പേരിലാണ്‌. ഉപേക്ഷിക്കപ്പെട്ട കമ്പ്യൂട്ടറുകള്‍, ഓഫീസ്‌ ഇലക്ട്രോണിക്‌ ഉപകരണങ്ങള്‍,
വിനോദത്തിനുപയോഗിക്കുന്ന ഉപകരണങ്ങള്‍, മൊബൈല്‍ ഫോണ്‍, ടെലിവിഷന്‍, റ്രഫിജറേറ്റര്‍
ഇവയെല്ലാം ഇ-വേസ്റ്റ്‌ എന്ന വിഭാഗത്തില്‍പെടുന്നു. പുനരുപയോഗം, പുനര്‍വില്‍പ്പന, വീണ്ടെ
ടുക്കല്‍, പുനരുല്‍പാദനം എന്നിങ്ങനെ നിര്‍മാര്‍ജ്ജനം ചെയ്യാവുന്ന ഉപയോഗം കഴിഞ്ഞ
ഇലക്ട്രോണിക്‌ ഉപകരണങ്ങളെയും ഇ-വേസ്റ്റ്‌ ആയി പരിഗണിക്കാം.

ആധുനിക ജീവിതത്തില്‍ ഒഴിച്ചു കൂടാന്‍ കഴിയാത്ത ഇലക്ട്രോണിക്‌ ഉപകരണങ്ങളാണ്‌
ഡസ്ക്ടോപ്പ്‌ കമ്പ്യൂട്ടര്‍, ലാപ്ടോപ്പ്‌, മൊബൈല്‍ ഫോണ്‍, റരഫിജറേറ്റര്‍, ടെലിവിഷന്‍ എന്നിവ.
നമ്മുടെ ആവശ്യങ്ങള്‍ക്കനുസരിച്ച്‌ ഓരോ വര്‍ഷവും പുതിയ ഉപകരണങ്ങള്‍ നമ്മള്‍ വാങ്ങു
ന്നു. ഓരോ വര്‍ഷവും 300 ദശലക്ഷം കമ്പ്യൂട്ടറുകളും 1 ലക്ഷം കോടി സെല്‍ഫോണുകളും
ഉല്‍പ്പാദിപ്പിക്കപ്പെടുന്നു. രണ്ടോ മുന്നോ വര്‍ഷത്തിനുള്ളില്‍ തന്നെ ഈ ഇലക്ട്രോണിക്‌ ഉപക
രണങ്ങള്‍ ഉപയോഗശൂന്യമായി തീരുന്നു. ഓരോ വര്‍ഷവും ലോകത്താകമാനമുള്ള വേസ്റ്റ്‌ 8%
നിരക്കില്‍ വര്‍ദ്ധിക്കുന്നു എന്ന്‌ കണക്കുകള്‍ സൂചിപ്പിക്കുന്നു.

മാറിക്കൊണ്ടിരിക്കുന്ന സാങ്കേതികവിദ്യയും, മാധ്യമങ്ങളില്‍ വരുന്ന മാറ്റങ്ങളും, വിലയിടിവും,
ആസൂരതിതമായ അസ്ഥിരതയും ലോകത്താകമാനമുള്ള ഇ-വേസ്റ്റ്‌ വര്‍ദ്ധിക്കുന്നതിന്‌ കാരണ
മാകുന്നു. 50 ദശലക്ഷം ടണ്‍ ഇ-വേസ്റ്റ്‌ ഓരോ വര്‍ഷവും സൃഷ്ടിക്കപ്പെടുന്നു എന്ന്‌ കണക്കു
കള്‍ സൂചിപ്പിക്കുന്നു. ഇതില്‍ 15 മുതല്‍ 20% വരെ മാത്രമേ പുതുക്കി ഉപയോഗിക്കുന്നുള്ളു.
ബാക്കിയെല്ലാം മണ്ണില്‍ കുഴിച്ചു മൂടപ്പെടുകയോ കത്തിച്ചു കളയുകയോ, മറ്റെവിടെയെങ്കിലും
ഉപക്ഷിക്കുകയോ ചെയ്യുന്നു. ഇന്ത്യ, ചൈന പോലുള്ള രാജ്യങ്ങളിലും ആഫ്രിക്ക, ലാറ്റിന്‍
അമേരിക്ക തുടങ്ങിയ ഭൂഖണ്ഡങ്ങളിലും ഇലക്ട്രോണിക്‌ ഉല്‍പ്പന്നങ്ങളുടെ വില്‍പ്പന അടുത്ത

10 വര്‍ഷത്തിനുള്ളില്‍ കുത്തനെ ഉയരാന്‍ സാധ്യതയുണ്ട്‌.

3.4.1. ഇ-വേസ്സിനെ കുറിച്ച്‌ നാം എന്തറുകൊണ്ട ഉതകണാഷചഷെടണം?

(Why should we be concerned about e-Waste?)

ഇലക്ട്രോണിക്‌ വേസ്റ്റ്‌ വെറുമൊരു വേസ്റ്റ്‌ അല്ല. മെര്‍ക്കുറി, ലെഡ്‌, കാഡ്മിയം, ബ്രോമിനേ
QW ഫ്ളൈം റിട്ടാര്‍ഡന്റ്‌ സ്‌ എന്നിങ്ങനെ ആരോഗ്യത്തിന്‌ ഹാനികരമായേക്കാവുന്ന വിഷവ
സ്തുക്കള്‍ ഇതില്‍ അടങ്ങിയിരിക്കുന്നു. വേണ്ടവിധം നിയ്ന്ത്രിച്ചില്ലെങ്കില്‍ ഈ വിഷവസ്തുക്കള്‍
കാന്‍സര്‍, പ്രത്യുല്‍പ്പാദനശേഷി കുറവ, മറ്റ്‌ ആരോഗ്യപ്രശ്നങ്ങള്‍ എന്നിവക്ക്‌ കാരണമാകുന്നു.
ഇ-വേസ്റ്റ്‌ കുഴിച്ചു മൂടുന്നതിനാല്‍ 40% വരെ ലെഡ്‌ മണ്ണില്‍ കലരുവാന്‍ ഇടയാക്കുന്നു.
=

ഒന്നാം വര്‍ഷ കമ്പ്യൂട്ടര്‍ സയന്‍സ്‌ 3. കമ്പ്യുട്ടര്‍ സിസ്റ്റത്തിന്റെ ഘടകങ്ങള്‍

പട്ടിക 3.6. ല്‍ അപകടകരമായ ചില രാസപദാര്‍ത്ഥങ്ങള്‍, അവയുടെ ഉറവിടം, പ്രത്യാഘാതം
എന്നിവ കൊടുത്തിരിക്കുന്നു.

രാസപദാര്‍ത്ഥം ഉറവിടം പ്രത്യാഘാതം

ലെഡ്‌ കമ്പ്യൂട്ടര്‍ മോണിറ്റര്‍ റ്ലാസ്സിലും PCB
സോള്‍ഡറിലും ഉത്‌ കാണുന്നു.

ക്രേന്ര നാഡീവ്യൂഹത്തെ ബാധിക്കുന്നു.
രക്തചംക്രമണത്തെയും കിഡ്നിയേയും
ബാധിക്കുന്നു.

മെര്‍ക്കുറി PCB, എല്‍.സി.ഡി. സ്ക്രീനിന്റെ ഉള്ളിലെ
ലൈറ്റുകളിലും കാണുന്നു.

ചെറിയ കുട്ടികളുടെ തലച്ചോറിനെയും
നാഡീവ്യൂഹത്തെയും ബാധിക്കുന്നു.
മുതിര്‍ന്നവരില്‍ അവയവ വൈകല്യങ്ങള്‍,
മാനസിക വൈകല്യങ്ങള്‍, മറ്റനേകം രോഗ
ലക്ഷണങ്ങള്‍ എന്നിവ പ്രകടമാകുന്നു.

കാഡ്മിയം ചിഷ്‌ റസിസ്തററുകളിലും സെമികണക്ടറുക
ളിലും കാണുന്നു

പലതരത്തിലുള്ള കാന്‍സറുകള്‍ക്ക്‌ കാരണ
മാകുന്നു. കാഡ്മിയം കിഡ്‌നിയില്‍ കുളി
ഞ്ഞുകൂടി അതിന്‌ ദോഷം ചെയ്യുന്നു.

ബ്രോമിനേറുഡ്‌ PCB യിലും ചില പ്ലാസ്സിക്കുകളിലും കാണ കാന്‍സര്‍ സാധ്യത വര്‍ദ്ധിരിക്കുന്നു.
ഫ്ളെയിം റിട്ടാര്‍ കരടുന്നു.
ഡന്റ്‌ (BFRs)

പട്ടിക 3.6: അപകകകമ്ഥാത രാര്പപമാര്‍ത്ഥങ്ങളും അതിന്റെ ഉറവിഖും (്രതൃഥാഷ്ഥതവും.

3.4.2 ഇ-വേസ്സ്റിന്‌ എന്ത സംഭവിക്കുന്നു (What happens to the e-Waste?)

നിര്‍ഭാഗ്യവശാല്‍ ഒരു ചെറിയശതമാനം ഇ-വേസ്റ്റ്‌ മാത്രമേ പുതുക്കി ഉപയോഗിക്കുന്നുള്ളു. പുതു
ക്കല്‍ ക്രേന്ദങ്ങളില്‍ കൊണ്ടുപോയാലും നാം പ്രതീക്ഷിക്കുന്നതുപോലെ മിക്കപ്പോഴും അവ
യഥാര്‍ത്ഥത്തില്‍ പുതുക്കപ്പെടുന്നില്ല. CRT മോണിറ്ററുകളില്‍ ഡിസ്പ്പേക്ക്‌ സഹായകരമാകുന്ന
ഫോസ്ഫറസും ലെഡും താരതമ്യേന കൂടിയ അളവില്‍ കാണപ്പെടുന്നു. ഉപയോഗശൂന്യമായ
CRT കളെ “അപകടകരമായ വേസ്റ്റ്‌” എന്ന ഗണത്തിലാണ്‌ അമേരിക്കന്‍ പരിസ്ഥിതി സംരക്ഷണ
ഏജന്‍സി (United States Environmental Protection Agency- EPA) ഉള്‍പ്പെടുത്തിയിരിക്കുന്നത്‌.
ഭൂരിഭാഗം ഇ-വേസ്റ്റുകളും വേസ്റ്റ്‌ കൂനകളില്‍ തള്ളുകയോ ഇന്‍സിനറേറ്റര്‍ ഉപയോഗിച്ച്‌ കത്തി
ക്കുകയോ ആണ്‌ ചെയ്യുന്നത്‌. ഇത്തരം വേസ്റ്റിന്റെ അനുചിതമായ നശീകരണ മാര്‍ഗ്ഗങ്ങള്‍ അവ
ലംബിക്കുന്നതോടെ അവയില്‍ നിന്നും വിലപിടിപ്പുള്ള വസ്തുക്കള്‍ ശേഖരിക്കുവാനോ അപകട
കരമായ വിഷവസ്തുക്കളെ നിയ്യ്ത്രിക്കാനോ സാധിക്കാതെ വരുന്നു. ഇതിന്റെ ഭാഗമായി ഇവ
നമ്മുടെ മണ്ണിനെയും ജലത്തെയും വായുവിനെയും മലിനപ്പെടുത്തുന്നു.

ഇ-വേസ്റ്റ്‌ യാതൊരു കാരണവശാലും മറ്റു ഗൃഹമാലിന്യങ്ങള്‍
ക്കൊപ്പം ഉപേക്ഷിക്കാന്‍ പാടില്ല. ഇവ എവിടെയാണോ ഉള്ളത്‌ ഉട്ട്‌
അവിടെ വച്ചുതന്നെ വേര്‍തിരിക്കപ്പെടേണ്ടതും വിവിധ സന്നദ്ധ
സംഘടനകള്‍ക്ക്‌ കൈമാറ്റം ചെയ്യപ്പെടേണ്ടതുമാണ്‌. ഇ-വേസ്റ്റ്‌ pp
എന്ന രൂക്ഷമായ പ്രശ്നം പരിഗണിക്കുമ്പോള്‍ ഗവണ്‍മെന്റോ,
വ്യാവസായിക സ്ഥാപനങ്ങളോ, പൊതുജനങ്ങളോ ഇവ നിയ

ന്ത്രിക്കേണ്ടതിനാവശ്യമായ നടപടികള്‍ കൈക്കൊള്ളേണ്ടത്‌ ക്കു
allo 3.10: കേടുവന്നതും കാലഫരണക്‌!

ക്തുഥായ ഇചക്ര്ര്ാണിക്‌ വവ്ധ്തുക്കള്‍്‌

അത്യന്താപേക്ഷിതമാണ്‌.

ഒന്നാം വര്‍ഷ കമ്പ്യൂട്ടര്‍ സയന്‍സ്‌ 3. കമ്പ്യൂട്ടര്‍ സിസ്റത്തിന്റെ ഘടകങ്ങള്‍

ഇന്ത്യാ ഗവണ്‍മെന്റിന്റെ ക്രേന്ദ മാലിന്യ നിയ്ര്രണ ബോര്‍ഡ്‌ (CPCB “സെന്‍ട്രല്‍ പൊല്യൂഷന്‍
കണ്‍ട്രോള്‍ ബോര്‍ഡ്‌) രൂപീകരിച്ച “ഇ-വേസ്റ്റ്‌ നിയ്രന്തണ നിയമങ്ങള്‍- 2011, 01-5-2012 മുതല്‍
നിലവില്‍ വന്നു. ഈ നിയമങ്ങള്‍ ഇലക്രടിക്കല്‍, ഇലക്ട്രോണിക്‌ ഉപകരണങ്ങളുടെ നിര്‍മ്മാ
ണവും വില്‍പ്പനയും പ്രവര്‍ത്തനവുമായി ബന്ധപ്പെട്ടു കിടക്കുന്ന എല്ലാവര്‍ക്കും (നിര്‍മ്മാതാക്കള്‍,
ഉപഭോക്താക്കള്‍, ശേഖരണക്രേന്ദ്രം) ബാധകമാണ്‌. സംസ്ഥാനത്ത്‌ ഇതിന്റെ നടത്തിപ്പും മേല്‍
നോട്ടവും നിര്‍വൃഹിക്കുന്നത്‌ സംസ്ഥാന മാലിന്യ നിയ്ര്രണ ബോര്‍ഡിന്റെ നേതൃത്വത്തിലാണ്‌.

ഇ-വേസ്റ്റിന്റെ ശേഖരണത്തിനും നിര്‍മ്മാര്‍ജ്ജനത്തിനുംവേണ്ടി കേരള ഗവണ്‍മെന്റ്‌ പ്രത്യേക
നിര്‍ദ്ദേശം കൊടുത്തിട്ടുണ്ട്‌. നിര്‍മ്മാതാക്കളുടെയും തദ്ദേശസ്വയംഭരണസ്ഥാപനങ്ങളുടെയും
മാലിന നിയ്രന്തണബോര്‍ഡിന്റെയും ചുമതലകള്‍ ഗവണ്‍മെന്റ്‌ വ്യക്തമായി നിര്‍വൃചിച്ചിട്ടുണ്ട്‌.
നിര്‍മ്മാതാക്കളുടെ തിരികെ വാങ്ങല്‍ പദ്ധതിയിലൂടെയോ തദ്ദേശസ്വയംഭരണ സ്ഥാപനങ്ങളുടെ
നേതൃത്വത്തിലുള്ള തിരിച്ചെടുക്കല്‍ സംവിധാനങ്ങളിലൂടെയോ ഇലക്ട്രിക്കല്‍, ഇലക്ട്രോണിക്സ്‌
പോലുള്ള ഇ-വേസ്റ്റുകള്‍ ശേഖരിക്കപ്പെടുന്നു. ഇവയെല്ലാം അംഗീകൃത പുതുക്കല്‍ ക്രേന്ദത്തിന്‌
കൈമാറുന്നു. പ്രധാനപ്പെട്ട ശ്രാന്‍ഡുകള്‍, ഉപയോഗം കഴിഞ്ഞ ഉല്‍പ്പന്നങ്ങളെല്ലാം തന്നെ നിര്‍മ്മാ
താക്കള്‍ക്കു തന്നെ തിരിച്ച്‌ ഏല്‍പ്പിക്കാന്‍ നിര്‍ദ്ദേശം നല്‍കിയിട്ടുണ്ട്‌. അതുമല്ലെങ്കില്‍ തദ്ദേശസ്വ
യംഭരണ സ്ഥാപനങ്ങള്‍ തയ്യാറാക്കിയിട്ടുള്ള ശേഖരണ കേന്ദ്രങ്ങളിലും തിരികെ ഏല്‍പ്പിക്കാനുള്ള
സംവിധാനമുണ്ട്‌. ഇ-വേസ്റ്റ്‌ നിര്‍മ്മാര്‍ജ്ജനത്തെക്കുറിച്ച്‌ ബോധവല്‍ക്കരണ പരിപാടികള്‍ സ
ഘടിപ്പിക്കുന്നതിനും പുതുക്കല്‍ അഥവാ മാലിന്യം നിര്‍മ്മാര്‍ജ്ജനം ചെയ്യുന്നതിനും ഉള്ള സംവി
ധാനങ്ങള്‍ പൊല്യുഷന്‍ കണ്‍ട്രോള്‍ ബോര്‍ഡ്‌ നിര്‍വൃഹിച്ചു പോരുന്നുണ്ട്‌.

3.4.3 ഇ-വേസ്റ്റ്‌ നിര്‍മ്മാര്‍ജ്ജന മാര്‍ഗ്ഗങ്ങള്‍ (e-waste disposal methods)
ഇ-വേസ്റ്റ്‌ നിര്‍മ്മാര്‍ജ്ജനത്തിനുവേണ്ടി താഴെ പറയുന്ന മാര്‍ഗ്ഗങ്ങള്‍ ഉപയോഗിക്കാം

a) പുനരുപയോഗം (Reuse): സെക്കന്റ്‌ ഹാന്‍ഡ്‌ ഉപയോഗം അഥവാ കേടുപാടുകള്‍ പരിഹ
രിച്ച്‌ മെച്ചപ്പെടുത്തി ഉപയോഗിക്കുക എന്നതാണ്‌ പുനരുപയോഗം കൊണ്ട്‌ ഇവിടെ ഉദ്ദേശിക്കു
ന്നത്‌. മിക്ക പഴയ കമ്പ്യൂട്ടറുകളും ബന്ധുക്കള്‍ക്കോ സുഹൃത്തുക്കള്‍ക്കോ ചില്ലറക്കച്ചവടം നട
ത്തുന്നവര്‍ക്കോ പൈസക്കോ അല്ലാതെയോ കൈമാറാം. ചിലത്‌ സന്നദ്ധ സംഘടനകള്‍,
വിദ്യാഭ്യാസ സ്ഥാപനങ്ങള്‍ എന്നിവയ്ക്കോ കൈമാറാം. ഇങ്ക്‌ജെറ്റ്‌ കാദ്രിഡ്ജുകളും ലേസര്‍
ടോണറുകളും പുനരുപയോഗം ചെയ്യാം. ഇത്‌ ഇ-വേസ്റ്റിന്റെ തോത്‌ കുറയ്ക്കാന്‍ സഹായിക്കും.

0) കത്തിച്ചു കളയല്‍ (Incineration): (AEDS Ho രൂപകല്‍പ്പന ചെയ്ത ഇന്‍സിനറേറ്ററില്‍ 900
മുതല്‍ 1000 ഡിഗ്രി സെല്‍ഷ്യസ്‌ വരെ ഉള്ള ഉയര്‍ന്ന ഈഷ്മാവില്‍ നിയ്രന്രണവിധേയമായി
കത്തിച്ചു കളയുന്നു.

൭ ഇ-വേസ്സ്ിന്റെ പുനരുല്‍പാദനം (Recycling): ഉല്‍പ്പന്നങ്ങളില്‍ നിന്നും ഉപയോഗിക്കാന്‍ പറ്റുന്ന
ഘടകങ്ങളുപയോഗിച്ച്‌ പുതിയ ഉപകരണങ്ങള്‍ നിര്‍മ്മിക്കുന്നതിനെയാണ്‌ പുനരുല്‍പാദനം എന്ന്‌
പറയുന്നത്‌. മോണിറ്ററുകള്‍, കീബോര്‍ഡുകള്‍, ലാപ്ടോപ്പുകള്‍, മോഡം, ടെലിഫോണ്‍ ബോര്‍ഡു
കള്‍, ഹാര്‍ഡ്‌ ഡ്രൈവുകള്‍, സിഡി, മൊബൈലുകള്‍, ഫാക്സ്‌ മെഷീന്‍, പ്രിന്റര്‍, സി.പി.യു, മെമ്മറി
ചിപ്പുകള്‍, കൂട്ടിയോജിപ്പിക്കുന്ന വയറുകള്‍, കേബിളുകള്‍ എന്നിവയെല്ലാം പുതുക്കി ഉപയോഗിക്കാം.

9) മണ്ണിട്ടുമുടല്‍ (Land Filling) : ഏറ്റവും കൂടുതല്‍ ഉപയോഗിക്കുന്നതും എന്നാല്‍ ശുപാര്‍ശ
ചെയ്യപ്പെടാത്തതുമായ മാര്‍ഗ്ഗമാണ്‌ മണ്ണിട്ടു മുടല്‍.
ഒന്നാം വര്‍ഷ കമ്പ്യുട്ടര്‍ സയന്‍സ്‌ 3. കമ്പ്യൂട്ടര്‍ സിസ്റത്തിന്റെ ഘടകങ്ങള്‍

ഇ-വേസ്റ്റ്‌ നിര്‍മാര്‍ജനത്തില്‍ വിദ്യാര്‍ത്ഥികളുടെ പങ്കം

൭ ആവശ്യമില്ലാതെ ഇലക്ട്രോണിക്‌ ഉപകരണങ്ങള്‍ വാങ്ങുന്നത്‌ നിര്‍ത്തുക.

൭ ഉപകരണങ്ങള്‍ കേടുവരുമ്പോള്‍ പുതിയത്‌ വാങ്ങുന്നതിന്‌ പകരം അവ നന്നാക്കി ഉപയോ
ഗിക്കുക.

൭ ഉപകരണങ്ങള്‍ പാഴാക്കാതെ അവ മറ്റുള്ളവര്‍ക്ക്‌ വില്‍ക്കുകയോ സംഭാവന ചെയ്തോ അവ
യുടെ പ്രവര്‍ത്തന കാലയളവ്‌ ദീര്‍ഘിപ്പിക്കുക.

൭ പുതിയ ഇലക്ട്രോണിക്‌ ഉപകരണങ്ങള്‍ വാങ്ങുമ്പോള്‍ അപകടകരമായ പദാര്‍ത്ഥങ്ങള്‍
അടങ്ങിയിട്ടില്ലെന്ന്‌ ഉറപ്പു വരുത്തുകയും പുതുക്കി ഉപയോഗിക്കാവുന്നവയാണെന്നും ഈര്‍
PRO കുറച്ച്‌ മാത്രം ഉപയോഗിക്കുന്നവയാണെന്നും കൂടുതല്‍ കാലം ഉപയോഗിക്കാവുന്നവ
യാണെന്നും വളരെ കുറഞ്ഞ ദുര്‍വ്യയം AIM സൃഷ്ടിക്കുന്നവയാണെന്നും ഉറപ്പു വരു
ത്തുക.

൭൫ ഉപയോഗ ശൂന്യമായാല്‍ ഉപകരണങ്ങള്‍ തിരികെ എടുക്കുന്ന പദ്ധതിയുണ്ടോ എന്ന്‌ നിര്‍
മ്മാതാക്കളുടെ ഫോണ്‍ നമ്പര്‍ വഴിയോ വെബ്സൈറ്റ്‌ വഴിയോ മനസ്സിലാക്കുക.

൭ ബാറ്ററിയില്‍ പ്രവര്‍ത്തിക്കുന്ന ഉപകരണങ്ങളില്‍ ഉപയോഗശേഷം കളയുന്ന ബാറ്ററിക്കു
പകരം റീചാര്‍ജ്ജ്‌ ചെയ്യാവുന്ന ബാറ്ററികള്‍ ഉപയോഗിക്കുക.

൭ ഗുണമേന്‍മ ഉത്തരവാദിത്വം (Warranty) ഉള്ളതും തിരികെ എടുക്കുന്നതുമായ ഉല്‍പ്പന്നങ്ങ
ങ്ങള്‍ വാങ്ങിക്കുക.

3.4.4. ഹരിത കമ്പ്യൂട്ടിംഗ്‌ (ഹരിത സാങ്കേതികവിദ്യ
(Green computing or Green IT)

പരിസ്ഥിതിക്ക്‌ നാശം വരുത്താതെയുള്ള സാങ്കേതികവിദ്യയുടെ പഠനവും പ്രയോഗവുമാണ്‌
ഹരിത കമ്പ്യൂട്ടിംഗ്‌ അഥവാ ഹരിത സാങ്കേതികവിദ്യ. കമ്പ്യൂട്ടറിന്റെയും അനുബന്ധ ഘടകങ്ങ
ളുടെയും രൂപകല്‍പ്പന, നിര്‍മ്മാണം, ഉപയോഗം, നിര്‍മ്മാര്‍ജ്ജനം അതുമായി ബന്ധപ്പെട്ട ഘടക
ങ്ങളായ മോണിറ്ററുകള്‍, പ്രിന്ററുകള്‍, സംഭരണ ഉപകരണങ്ങള്‍ എന്നിവ ഫലപ്രദമായി പരി
സ്ഥിതിക്ക്‌ യോജിക്കുന്നവിധം നടപ്പാക്കുന്നതിനെയാണ്‌ ഹരിത കമ്പ്യൂട്ടിംഗ്‌ എന്ന്‌ വിളിക്കുന്നത്‌.

ഹരിത കമ്പ്യൂട്ടിംഗിന്റെ ആദ്യകാലത്തെ തുടക്കം “എനര്‍ജി സ്റ്റാര്‍” എന്നറിയപ്പെടുന്ന സ്വമേ
WWI ഉള്ള ലേബലിംഗ്‌ പ്രോഗ്രാം ആയിരുന്നു. എല്ലാവിധ ഹാര്‍ഡ്വെയറുകളിലും ഈര്‍ജ്ജ
കാര്യക്ഷമത വര്‍ദ്ധിപ്പിക്കുന്നതിനായി 1992-63 EPA ആണ്‌ ഇത്‌ നടപ്പിലാക്കിയത്‌. നോട്ട്ബുക്ക്‌
കമ്പ്യൂട്ടറുകളിലും, ഡിസ്പ്ലേകളിലും എനര്‍ജി സ്റ്റാര്‍ ലേബല്‍ സാധാരണ കാഴ്ചയാണ്‌. യൂറോ
പ്പിലും, ഏഷ്യയിലും ഈ പദ്ധതി നടപ്പാക്കപ്പെട്ടു. ചിത്രം 3.11ല്‍ സാധാര
ണയായി ഉപയോഗിക്കുന്ന എനര്‍ജി സ്റ്റാര്‍ അടയാളം കാണിച്ചിരിക്കുന്നു.

ഹരിത കമ്പ്യൂട്ടിംഗ്‌ എന്ന ആശയത്തിന്മേലുള്ള ഗവണ്‍മെന്റിന്റെ നിയ

ന്ത്രണം ഭാഗികം മാത്രമാണ്‌. ആഗോള പരിസ്ഥിതിയെ ദോഷകരമായി ചിത്രം 3.11:
7 എനര്‍ജി TyIG ലേബര്‌
ബാധിക്കാതെയുള്ള ഒരു തൊഴില്‍ സംസ്കാരം വളര്‍ത്തിയെടുക്കുവാന്‍

കമ്പ്യൂട്ടര്‍ ഉപയോഗിക്കുന്നവരും സ്ഥാപനങ്ങളും ്രദ്ധിക്കേണ്ടതുണ്ട്‌. അതിനായി ചെയ്യേണ്ട

ചില കാര്യങ്ങള്‍ താഴെ കൊടുത്തിരിക്കുന്നു.

ഒന്നാം വര്‍ഷ കമ്പ്യൂട്ടര്‍ സയന്‍സ്‌ 3. കമ്പ്യുട്ടര്‍ സിസ്റ്റത്തിന്റെ ഘടകങ്ങള്‍

൭ കമ്പ്യൂട്ടര്‍ ഉപയോഗിക്കാത്തപ്പോള്‍ അത്‌ ഓഫ്‌ ചെയ്യുക.
൭൫ ലേസര്‍ പ്രിന്റര്‍ പോലുള്ള പെരിഫറലുകള്‍ ആവശ്യമുള്ളപ്പോള്‍ മാത്രം ഓണാക്കുക.

© ഈര്‍ജ്ജ സംരക്ഷണ സ്രമ്പദായം ഉപയോഗിക്കുക.

൦ ഡസ്ക്ടോപ്പ്‌ കമ്പ്യൂട്ടറിനുപകരം ലാപ്പ്ടോപ്പ്‌ സാധിക്കുന്നിടത്തോളം ഉപയോഗിക്കുക.

൭൫ ആവശ്യമാണെങ്കില്‍ മാ്രതം പ്രിന്റനട്ട്‌ എടുക്കുക.

e CRT മോണിറ്ററുകള്‍ക്കു പകരം LCD മോണിറ്ററുകള്‍ ഉപയോഗിക്കുക.

൭ എനര്‍ജി സ്റ്റാര്‍ അടയാളമുള്ള ഹാര്‍ഡ്വെയര്‍, സോഫ്റ്റവെയര്‍ ഉപയോഗിക്കുക.

© കേന്ദ്ര, സംസ്ഥാന, പ്രാദേശിക നിയ്രന്തണങ്ങള്‍ക്കനുസരിച്ച്‌ ഇ-വേസ്റ്റ്‌ നിര്‍മ്മാര്‍ജ്ജനം ചെയ്യുക.
© സൌരോര്‍ജ്ജം പോലുള്ള ബദല്‍ ഈര്‍ജ്ജ ഉറവിടങ്ങള്‍ ഉപയോഗിക്കുക.
കമ്പ്യൂട്ടറുകളെ എങ്ങിനെ ഹരിതാഭമാക്കാം (How to make computers Green)

കമ്പ്യൂട്ടറുകളെ ഹരിതാഭമാക്കി മാറ്റുന്നതില്‍ അവയുടെ വലിപ്പം, കാര്യക്ഷമത, അതിലടങ്ങിയി
രിക്കുന്ന വസ്തുക്കള്‍ എന്നിവ പ്രാധാന്യമര്‍ഹിക്കുന്നു. ചെറിയ കമ്പ്യൂട്ടറുകള്‍ കൂടുതല്‍ ഹരി
താഭമാണ്‌. എന്തുകൊണ്ടെന്നാല്‍ അവ കുറച്ച്‌ വസ്തുക്കളെ ഉപയോഗിക്കുന്നുള്ളു. കൂടാതെ
അവയുടെ പ്രവര്‍ത്തനത്തിന്‌ കുറഞ്ഞ വൈദ്യുതിയേ ആവശ്യമുള്ളു. ഹരിത കമ്പ്യൂട്ടിങ്ങിന്റെ
കാര്യത്തില്‍ ഈര്‍ജ്ജത്തിന്റെ കാര്യക്ഷമമായ വിനിയോഗം പ്രാധാന്യമര്‍ഹിക്കുന്നു. ലാപ്ടോപ്പു
കളില്‍ വലിയ കമ്പ്യൂട്ടറുകളെ അപേക്ഷിച്ച്‌ ഈര്‍ജ്ജ വിനിയോഗം കുറവാണ്‌. അതുപോലെ
തന്നെ LCD സ്ക്രീനുകള്‍ CRT മോഡലുകളെ അപേക്ഷിച്ച്‌ വളരെ കുറച്ച്‌ ഈര്‍ജ്ജം മാത്രമേ
ഉപയോഗിക്കുന്നുള്ളു. ലെഡ്‌, മെര്‍ക്കുറി പോലുള്ള അപകടകരമായ വസ്തുക്കളുടെ ഉപയോഗം
കുറക്കണം.

ഹരിത കമ്പ്യൂട്ടിംഗ്‌ പ്രോത്സാഹിപ്പിക്കുന്നതിനുവേണ്ടി താഴെ പറയുന്ന 4 സമീപനങ്ങള്‍ ഉള്‍ക്കൊ
ള്ളിച്ചിരിക്കുന്നു.

ഹരിത രൂപകല്‍പ്പന (Green Design): കമ്പ്യൂട്ടറുകള്‍, സെര്‍വറുകള്‍,
പ്രിന്ററുകള്‍, പ്രൌൊജക്ടറുകള്‍, മറ്റ്‌ ഡിജിറ്റല്‍ ഉപകരണങ്ങള്‍ രൂപകല്‍പ്പന ¥
ചെയ്യുമ്പോള്‍ അവ പരിസ്ഥിതിക്ക്‌ അനുയോജ്യമായും ഈര്‍ജ്ജ കാര്യ
ക്ഷമമായും ഉപയോഗിക്കാന്‍ തരത്തില്‍ തയ്യാറാക്കുക.

ഹരിത നിര്‍മ്മാണം (Green Manufacturing): കമ്പ്യൂട്ടറും മറ്റ്‌ അനുബന്ധ ഘടകങ്ങളും നിര്‍മ്മി
ക്കുമ്പോള്‍ ദുര്‍വ്യയം പരമാവധി കുറച്ചു കൊണ്ട്‌ പരിസ്ഥിതിക്ക്‌ ദോഷമെന്നും ഉണ്ടാക്കാത്ത
രീതിയില്‍ തയ്യാറാക്കുക.

ഹരിത ഉപയോഗം (Green Use): കമ്പ്യൂട്ടറിന്റെയും അനുബന്ധ ഉപകരണങ്ങളുടെയും
വൈദ്യുത ഉപഭോഗം കുറച്ചു കൊണ്ട്‌ പരിസ്ഥിതി സൌഹാര്‍ദ്ദപരമായി ഉപയോഗിക്കുക.

ഹരിത നിര്‍മ്മാര്‍ജ്ജനം (Green Disposal) : കമ്പ്യൂട്ടര്‍ കേടുപാടുകള്‍ തീര്‍ത്ത്‌ ഉപയോഗിക്കുക,
ഉചിതമായ രീതിയില്‍ നിര്‍മ്മാര്‍ജ്ജനം ചെയ്യുക, ആവശ്യമില്ലാത്ത ഇലക്ദ്രോണിക്‌ ഉപകരണ
ങ്ങള്‍ പുതുക്കി ഉപയോഗിക്കുക.

ഒന്നാം വര്‍ഷ കമ്പ്യൂട്ടര്‍ സയന്‍സ്‌ 3. കമ്പ്യൂട്ടര്‍ സിസ്റ്റത്തിന്റെ ഘടകങ്ങള്‍

സ്വയം വിലയിരുത്തുക

1. പാരിസ്ഥിതിക ഉത്തരവാദിത്വത്തോടും പ്രകൃതിക്ക്‌ യോജിച്ചതുമായ രീതി
യില്‍ കമ്പ്യൂട്ടറുകളും അവയുടെ വിഭവങ്ങളും ഉപയോഗിക്കുന്നതിനെ
എന്നറിയപ്പെടുന്നു
2. ഉല്‍പ്പന്നങ്ങളില്‍ നിന്നും ഉപയോഗിക്കാന്‍ പറ്റുന്ന ഘടകങ്ങള്‍ ഉപയോഗിച്ച്‌
പുതിയ ഉപകരണങ്ങള്‍ നിര്‍മിക്കുന്നതിനെ എന്നു വിളിക്കുന്നു.
3. കമ്പ്യൂട്ടറുകളിലും അവയുടെ വിഭവങ്ങളിലും ഈര്‍ജ്ജ കാര്യക്ഷമത വര്‍ദ്ധി

പ്പിക്കുന്ന ലേബലിങ്ങ്‌ പരിപാടിയെ എന്നു വിളിക്കുന്നു.
4. ഏതെങ്കിലും രണ്ട്‌ ഇന്‍പുട്ട്‌ ഓട്ട്പുട്ട്‌ ഉപകരണങ്ങള്‍ വീതം പട്ടികപ്പെടു
ത്തുക.

പരിസ്ഥിതിക്കും ജനങ്ങളുടെ ആരോഗ്യത്തിനും ഇ-വേസ്റ്റ്‌ ഉണ്ടാക്കുന്ന
പ്രത്യാഘ്ഥതത്തെക്കുറിച്ച്‌ പഠിക്കുന്നതിനായി ഒരു MBNA നിങ്ങളുടെ (21GB

ശത്ത്‌ നടത്ത? റിപ്പോരീട്‌ എഴുതുക.

2. ഹരിത കമ്ധ്യുടിംഗിന്റെ (പഥാന്്യത്തെ കുറിച്ച്‌ ചരീച്ച ചെയ്യുക.

3.5 സോഫ്റ്റ്വെയര്‍ (Software)

ഒരുകൂട്ടം പ്രോരഗാമുകള്‍ ഉപയോഗിച്ച്‌ കമ്പ്യൂട്ടര്‍ സിസ്റ്റത്തിന്റെയും മറ്റ്‌ ഇലക്ട്രോണിക്‌ ഉപകര
ണങ്ങളുടെയും പ്രവര്‍ത്തനം കാര്യക്ഷമവും ഫലപ്രദവുമായി നടത്താന്‍ സഹായിക്കുന്നവയാണ്‌
സോഫ്റ്റ്വെയര്‍. ഹാര്‍ഡ്വെയര്‍ കമ്പ്യൂട്ടര്‍ സിസ്റ്റത്തിന്റെ ശരീരം രൂപപ്പെടുത്തുമെന്ന്‌ പറയാമെ
ങ്കില്‍ സോഫ്റ്റ്വെയര്‍ അതിന്റെ മനസ്സോ ആത്മാവോ ആകുന്നു. രണ്ടു തരത്തിലുള്ള സോഫ്റ്റ്‌
വെയറാണുള്ളത്‌.

൭ സിസ്റ്റം സോഫ്റ്റ്വെയര്‍

© ആപ്ലിക്കേഷന്‍ സോഫ്റ്റ്വെയര്‍
3.5.1. സിസ്റ്റം സോഫ്റ്റ്വെയര്‍ (System software)

കമ്പ്യൂട്ടറിന്റെ പ്രവര്‍ത്തനങ്ങള്‍ നിയുന്തിക്കുന്നതിനായി രൂപകല്‍പ്പന ചെയ്തിട്ടുളള്ള ഒരു കൂട്ടം
പ്രോഗ്രാമുകളെയാണ്‌ സിസ്റ്റം സോഫ്റ്റ്വെയര്‍ എന്ന്‌ പറയുന്നത്‌. കമ്പ്യൂട്ടറിന്റെ പ്രവര്‍ത്ത
നങ്ങളെ നിയ്രന്ത്ിച്ചുകൊണ്ടും, കമ്പ്യൂട്ടര്‍ സംവിധാനത്തിന്റെ അകത്തേയ്ക്കും പുറത്തേ
ത്തേയ്ക്കും ഡാറ്റാ എത്തിച്ചുകൊണ്ടും, ആപ്ലിക്കേഷന്‍ പഫ്രോഗ്രാമുകളുടടെ കൃത്യനിര്‍വ
ഹഞത്തിന്റെ എല്ലാ ഘട്ടങ്ങളും ചെയ്തുകൊണ്ടും കമ്പ്യൂട്ടര്‍ സിസ്റ്റത്തിന്റെ ഉപയോഗത്തില്‍
മനുഷ്യനനെ സഹായിക്കാന്‍ വേണ്ടി രൂപകല്‍പ്പന ചെയ്ത പൊതു പ്രോഗ്രാമുകളാണ്‌ അവ.
ചുരുക്കത്തില്‍ സിസ്റ്റം സോഫ്റ്റ്വെയര്‍ മറ്റ്‌ സോഫ്റ്റ്വെയറുകളുടെ പ്രവര്‍ത്തനത്തെ പിന്തുണ
ക്കുകയും പെരിഫറല്‍ ഉപകരണങ്ങളുമായി ആശയവിനിമയം നടത്തുകയും ചെയ്യുന്നു. കമ്പ്യൂ
ട്ടര്‍ ഫലപ്രദമായി ഉപയോഗിക്കുന്നതിന്‌ ഉപയോക്താക്കളെ ഇത്‌ സഹായിക്കുന്നു. കമ്പ്യൂട്ടറിലെ
വിഭവങ്ങള്‍ നിയന്ത്രിക്കുവാന്‍ സിസ്റ്റം സോഫ്റ്റ്വെയര്‍ സഹായിക്കുന്നു എന്ന്‌ ഇത്‌ സൂചി
പ്പിക്കുന്നു.
ഒന്നാം വര്‍ഷ കമ്പ്യൂട്ടര്‍ സയന്‍സ്‌

3. കമ്പ്യൂട്ടര്‍ സിസ്റത്തിന്റെ ഘടകങ്ങള്‍

സിസ്റ്റം സോഫ്റ്റ്വെയര്‍, ഉപയോക്താവിനെയും ഹാര്‍ഡ്വെയറിനെയും എങ്ങനെ ബന്ധിപ്പിച്ചി

രിക്കുന്നു എന്ന്‌ ചിത്രം 3.12 ല്‍ കാണിക്കുന്നു.

+

Ze അന്ന അജ്‌

AO 2.72 CRVIDIYOUONANJZOS DoICWIGDINUZO ANIOWAUMNZo M2AIL/3828 ൯ന്ധരക്കും.

സിസ്റ്റം സോഫ്റ്റ്വെയറിന്റെ ഘടകങ്ങള്‍ താഴെ കൊടുക്കുന്നു.

a) ഓപ്പറേറ്റിംഗ്‌ സിസ്റ്റം

0) ഭാഷാ പ്രോസസ്സറുകള്‍

c) യൂട്ടിലിറ്റി സോഫ്റ്റ്വെയര്‍

ഒ. ഓപ്പറേറ്റിംഗ്‌ സിസ്റ്റം (Operating system)

ഉപയോക്താവിനേയും കമ്പ്യൂട്ടര്‍ ഹാര്‍ഡ്വെയറിനെയും
ബന്ധിപ്പിക്കാനായുള്ള ഒരുകൂട്ടം പ്രോഗ്രാമുകളെയാണ്‌
ഓപ്പറേറ്റിംഗ്‌ സിസ്റ്റം എന്നുപറയുന്നത്‌. കമ്പ്യൂട്ടര്‍ സിസ്റ്റ
ത്തെ ഉപയോഗയോഗ്യമാക്കുക എന്നതാണ്‌ ഓപ്പറേറ്റിംഗ്‌
സിസ്റ്റത്തിന്റെ പ്രാഥമികലക്ഷ്യം. ഉപയോക്താവിന്‌ പ്രോ
ഗ്രാമുകള്‍ നടപ്പിലാക്കാന്‍ അനുയോജ്യമായ പരിസ്ഥിതി
ഒരുക്കിക്കൊടുക്കുകയാണ്‌ ഓപ്പറേറ്റിംഗ്‌ സിസ്റ്റം ചെയ്യുന്ന
ത്‌. കാര്യക്ഷമമായ രീതിയില്‍ കമ്പ്യൂട്ടര്‍ ഹാര്‍ഡ്വെയര്‍
ഉപയോഗിക്കാന്‍ സഹായിക്കുക എന്നതും ഓപ്പറേറ്റിംഗ്‌
സിസ്റ്റത്തിന്റെ ജോലിയാണ്‌.

കമ്പ്യൂട്ടറിലെ എല്ലാവിധ പ്രവര്‍ത്തനങ്ങളെയും നിയന്ത്രി
ക്കുകയും ഏകോപിപ്പിക്കുകയും ചെയ്യുന്നത്‌ ഓപ്പറേറ്റിംഗ്‌

ച്‌

ചിത്രം 3.13: ഓഷ്റിങ്‌ NIGH വിഭവങ്ങളുടെ
ഥാനേജര്‍ എനന നിലയി

സിസ്റ്റമാണ്‌. ചിത്രം 3.13 ല്‍ കമ്പ്യൂട്ടര്‍ സിസ്റ്റത്തിലെ വിഭവങ്ങളുടെ മാനേജരായി (Resource

Manager) ഓപ്പറേറ്റിംഗ്‌ സിസ്റ്റം പ്രവര്‍ത്തിക്കുന്നത്‌ കാണിക്കുന്നു. ഏറ്റവും പ്രധാനപ്പെട്ട സിസ്റ്റം

സോഫ്റ്റ്വെയറാണ്‌ ഓപ്പറേറ്റിംഗ്‌ സിസ്റ്റം. കമ്പ്യൂട്ടറിലെ ഹാര്‍ഡ്‌ ഡിസ്കില്‍ നിന്നും ആദ്യം

ഒന്നാം വര്‍ഷ കമ്പ്യുട്ടര്‍ സയന്‍സ്‌ 3. കമ്പ്യൂട്ടര്‍ സിസ്റത്തിന്റെ ഘടകങ്ങള്‍

എടുക്കുന്ന പ്രോഗ്രാമും ഓഫാക്കുന്നതുവരെ മെമ്മറിയില്‍ നിലനില്‍ക്കുന്ന പ്രോഗ്രാമുമാണിത്‌.
കമ്പ്യൂട്ടറിന്റെ അനുചിതമായ ഉപയോഗവും തെറ്റുകള്‍ സംഭവിക്കുന്നത്‌ തടയാനും ഇത്‌ ശ്രമി
ക്കുന്നു.

ഓപ്പറേറ്റിംഗ്‌ സിസ്റ്റത്തിന്റെ (പ്രധാനപ്പെട്ട ധര്‍മ്മങ്ങളാണ്‌ പ്രോസസ്സ്‌ കൈകാര്യംചെയ്യുക, മെമ്മറി
കൈകാര്യം ചെയ്യുക, ഫയല്‍ കൈകാര്യചെയ്യുക, സെക്യൂരിറ്റി കൈകാര്യം ചെയ്യുക, നിർദ്ദേ
ശങ്ങള്‍ വ്യാഖ്യാനിക്കുക തുടങ്ങിയവ.

1! പ്രോസസ്സ്‌ കൈകാര്യം ചെയ്യുക

പ്രോസസ്സുകളുടെ വിന്യാസവും തിരിച്ചെടുക്കലും, വിവിധ പ്രൊസസ്സുകള്‍ക്ക്‌ വിഭവങ്ങള്‍ നല്‍കു
ന്നതിനുള്ള പദ്ധതി തയാറാക്കല്‍ എന്നിവയാണ്‌ ഓപ്പറേറ്റിംങ്‌ സിസ്റ്റത്തിലെ പ്രോസസ്സ്‌
കൈകാര്യം ചെയ്യുന്ന ഭാഗം ശ്രദ്ധപുലര്‍ത്തുന്നത്‌.

11 മെമ്മറി കൈകാര്യം ചെയ്യുക

പ്രാഥമിക മെമ്മറിയെ കൈകാര്യം ചെയ്യുകയോ നിയ്രനത്രിക്കുകയോ ചെയ്യുന്നത്‌ ഓപ്പറേറ്റിംഗ്‌
സിസ്റ്റത്തിലെ മെമ്മറി കൈകാര്യം ചെയ്യുന്ന ഭാഗമാണ്‌. ഓരോ മെമ്മറി സ്ഥാനത്തിന്റെയും
അവസ്ഥ (ഒരു പ്രോസസ്സിന്‌ നീക്കിവെച്ചിരിക്കുകയാണോ അതോ ഒഴിഞ്ഞു കിടക്കുകയാണോ)
അത്‌ സൂക്ഷിച്ചുവെക്കുന്നു. ഓരോ പ്രോസസ്സിനും എത്രമാ്രം മെമ്മറി നീക്കിവെക്കണമെന്ന്‌
അത്‌ കണക്കാക്കുകയും അതു പ്രകാരം നീക്കി വെക്കുകയും ചെയ്യുന്നു. മെമ്മറി പിന്നീട്‌ ആവ
ശ്യമില്ലെങ്കില്‍ അത്‌ തിരിച്ചെടുക്കുകയും ചെയ്യുന്നു.

11! ഫയല്‍ കൈകാര്യം ചെയ്യുക

ഫയലുകളുമായി ബന്ധപ്പെട്ട്‌ കിടക്കുന്ന ്രവര്‍ത്തനങ്ങളായ ആസുരധ്രണം ചെയ്യുക, പേര്‍
കൊടുക്കുക, സംഭരിക്കുക, തിരിച്ചെടുക്കുക, കൈമാറ്റം ചെയ്യുക, സംരക്ഷിക്കുക എന്നീ പ്രവര്‍ത്ത
നങ്ങള്‍ ചെയ്യുന്നു.

IV ഡിവൈസ്‌ കൈകാര്യം ചെയ്യുക

കമ്പ്യൂട്ടറുമായി ബന്ധിപ്പിച്ചിരിക്കുന്ന ഉപകരണങ്ങളുടെ നിയന്ത്രണമാണ്‌ ഡിവൈസ്‌ കൈകാര്യം
ചെയ്യല്‍. ഹാര്‍ഡ്വെയറും സോഫ്റ്റ്വെയറും സംയോജിപ്പിച്ചു കൊണ്ട്‌ അത്‌ ഉപകരണങ്ങളെ
കൈകാര്യം ചെയ്യുന്നു. ഡിവൈസ്‌ ഡ്രൈവര്‍ സോഫ്‌്റ്റവെയറിലൂടെ ഓപ്പറേറ്റിംഗ്‌ സിസ്റ്റം ഹാര്‍ഡ്‌
വെയര്‍ ഉപകരണങ്ങളുമായി സംവദിക്കുന്നു. ഡോസ്‌, വിന്‍ഡോസ്‌, യുണിക്സ്‌, ലിനക്സ്‌, മാക്‌
ഒ.എസ്‌. എന്നിവ വിവിധതരം ഓപ്പറേറ്റിംങ്ങ്‌ സിസ്റ്റങ്ങള്‍ക്കുള്ള ഉദാഹരണങ്ങളാണ്‌.

0. ഭാഷ പ്രോസസ്സറുകള്‍ (Language Processors)

മനുഷ്യര്‍ തമ്മില്‍ ആശയവിനിമയം നടത്താന്‍ ഭാഷ ഉപയോഗിക്കുന്നു. കമ്പ്യൂട്ടറുമായി ആശയ
വിനിമയം നടത്താന്‍ കമ്പ്യൂട്ടറിന്‌ അറിയാവുന്ന ഒരു ഭാഷ ഉപയോക്താവിന്‌ ആവശ്യമായി വരു
ന്നു. കമ്പ്യൂട്ടര്‍ ഭാഷകളെ ഉയര്‍ന്നതലത്തിലുള്ള കമ്പ്യൂട്ടര്‍ ഭാഷ (HLL) എന്നും താഴ്ന്ന തലത്തി
ലുള്ള കമ്പ്യൂട്ടര്‍ ഭാഷ (LLL) എന്നും രണ്ടായി തരംതിരിച്ചിരിക്കുന്നു.

താഴ്ന്നതലത്തിലുള്ള കമ്പ്യൂട്ടര്‍ ഭാഷ യ്രന്താധിഷ്ഠിതഭാഷ എന്നറിയപ്പെടുന്നു. കമ്പ്യൂട്ടറില്‍
ലഭ്യമായ മെമ്മറിയും രജിസ്റ്ററുകളും ഉപയോഗിച്ച്‌ ഈ ഭാഷയിലുള്ള പ്രോഗ്രാമുകള്‍ എഴുതപ്പെ
ഒന്നാം വര്‍ഷ കമ്പ്യൂട്ടര്‍ സയന്‍സ്‌ 3. കമ്പ്യൂട്ടര്‍ സിസ്റത്തിന്റെ ഘടകങ്ങള്‍

ടുന്നു. ഓരോ കമ്പ്യൂട്ടറിന്റെയും രൂപകല്‍പ്പന വ്ൃയതൃസ്ഥമായതു കൊണ്ട്‌ ഓരോ കമ്പ്യൂട്ടറിനും
പ്രത്യേക താഴ്ന്നതലത്തിലുള്ള യ്രന്തഭാഷ ഉപയോഗിക്കുന്നു. മെഷീന്‍ ലാംഗ്വേജും അസംബ്ലി
ലാംഗ്വേജും വിവിധ തരം താഴ്‌ന്നതലത്തിലുള്ള കമ്പ്യൂട്ടര്‍ ഭാഷകളാണ്‌.

LAM ഭാഷ (Machine Language) : പ്രത്യേകതരം സൂചനകള്‍ മാത്രമെ കമ്പ്യൂട്ടറിന്‌ മനസ്സിലാ
ക്കാന്‍ സാധിക്കുകയള്ളൂ എന്ന്‌ നമുക്കറിയാമല്ലോ. 1, 0 എന്നീ ബൈനറി സംഖ്യകളിലൂടെ പ്രതി
നിധീകരിക്കപ്പെടുന്ന പ്രത്യേക അടയാളങ്ങള്‍ മാത്രമേ കമ്പ്യൂട്ടറിന്‌ മനസിലാകൂ എന്ന്‌ നമുക്ക
റിയാം. ബൈനറി അക്കങ്ങള്‍ ഉപയോഗിക്കുന്ന ഭാഷകളെ യ്ര്ന്ര ഭാഷ എന്നുവിളിക്കുന്നു.
DAD ഭാഷയില്‍ പ്രോഗ്രാം എഴുതുന്നത്‌ വളരെ ബുദ്ധിമുട്ടാണ്‌. എല്ലാ നിര്‍ദേശങ്ങള്‍ക്കും, 0
ന്റെയും 1 ന്റെയും ദൈര്‍ഘ്യമേറിയ സിഭ്രിങ്ങ്‌ ഓര്‍ത്തിരിക്കാന്‍ സാധ്യമല്ല.

അസംബ്ലി ഭാഷ (Assembly Language): അസംബ്ലി ഭാഷ മധ്യവര്‍ത്തിയായ (intermediate) പ്രോഗ്രാ
മിംഗ്‌ ഭാഷയാണ്‌. അസംബ്ലി ഭാഷകള്‍ ന്യൂമോണിക്കുകള്‍ ഉപയോഗിക്കുന്നു. ഒരു പ്രവര്‍ത്തന
ത്തിന്‌ കൊടുക്കുന്ന പ്രതീകാത്മകമായ പേരാണ്‌ ന്യൂമോണിക്‌. ഉദാഹരണമായി സങ്കലനന
ത്തിന്‌ ADD, വ്യവകലനത്തിന്‌ SUB, തുടങ്ങിയവ. യ്രന്ര ഭാഷയെ അപേക്ഷിച്ച്‌ അസംബ്ലി ഭാഷ
യില്‍ കമ്പ്യൂട്ടര്‍ പ്രോഗ്രാം എഴുതാന്‍ എളുപ്പമാണ്‌. ഇത്‌ യ്ര്ത്രാധിഷ്ഠിത ഭാഷയായതിനാല്‍
പ്രോഗ്രാമര്‍ക്ക്‌ കമ്പ്യൂട്ടര്‍ രൂപഘടനയെക്കുറിച്ച്‌ അറിവുണ്ടായിരിക്കേണ്ടതാണ്‌.

ഉയര്‍ന്നതലത്തിലുള്ള ഭാഷ (High Level Language): ഈ ഭാഷകള്‍ ഇംഗ്ലീഷ്‌ ഭാഷയേപ്പോലെ
ഉള്ളതും അസംബ്ലി ഭാഷയെക്കാളും യന്ത്ര ഭാഷയെക്കാളും ലളിതമായി മനസിലാക്കാന്‍ സാധി
ക്കുന്നതുമാണ്‌. ഉയര്‍ന്നതലത്തിലുള്ള കമ്പ്യൂട്ടര്‍ ഭാഷകള്‍ (111.1.) കമ്പ്യൂട്ടറിന്‌ മനസ്സിലാക്കാന്‍
സാധിക്കുകയില്ല. ഉയര്‍ന്നതലത്തിലുള്ള ഭാഷകളില്‍ എഴുതിയിരിക്കുന്ന കമ്പ്യൂട്ടര്‍ പ്രോഗ്രാ
മിനെ അതിന്‌ തുല്യമായ WA) ഭാഷയിലേക്ക്‌ മാറ്റുന്നു. ആയതിനാല്‍ ഇത്തരം ഭാഷകളെ
തര്‍ജ്ജമ ചെയ്യുന്നതിന്‌ ഒരു ഭാഷ വിവര്‍ത്തകനെ (കമ്പൈലറുകളോ ഇന്റര്‍പ്രിറ്ററുകളോ) ആവ
ശ്യമായി വരുന്നു. BASIC, C, C++, JAVA എന്നിവ ഉയര്‍ന്നതലത്തിലുള്ള പ്രോ്ഗാമിംഗ്‌ ഭാഷ
കള്‍ക്ക്‌ ഉദാഹരണങ്ങളാണ്‌.

ഭാഷ പ്രോസസ്സറിന്റെ ആവശൃകത

ഉയര്‍ന്നതലത്തിലുള്ള ഭാഷകളിലോ അസംബ്ലി ഭാഷകളിലോ എഴുതിയിരിക്കുന്ന പ്രോഗ്രാമു
കള്‍ കമ്പ്യൂട്ടറിന്‌ മനസ്സിലാക്കാന്‍ സാധിക്കുകയില്ല. ഇങ്ങിനെയുള്ള പ്രോഗ്രാമുകളെ WMO) ഭാഷക
ളിലേക്ക്‌ (കമ്പ്യൂട്ടറിന്‌ മനസിലാകുന്ന ഭാഷ) മാറ്റുന്നതിന്‌ ഭാഷ പ്രോസസ്സറുകള്‍ ഉപയോഗി
ക്കുന്നു. ഉയര്‍ന്നതലത്തിലുള്ള ഭാഷകളിലോ അസംബ്ലി ഭാഷകളിലോ എഴുതിയിരിക്കുന്ന പ്രോഗ്രാ
മുകളെ അതിന്‌ സമാനമായ WA) ഭാഷകളിലേക്ക്‌ മാറ്റം ചെയ്യുന്ന സിസ്റ്റം പ്രോഗ്രാമുകളെയാണ്‌
ഭാഷ പ്രൊസസ്സറുകള്‍ എന്നു വിളിക്കുന്നത്‌.

വിവിധതരത്തിലുള്ള ഭാഷ പ്രോസസ്സറുകള്‍ (Types of Language Processors)

° അസംബ്ലര്‍ (Assembler): അസംബ്ലി ഭാഷയില്‍ എഴുതിയ പ്രോഗ്രാമുകളെ യ്ര്ത്ര ഭാഷയി
ലേക്ക്‌ തര്‍ജ്ജമ ചെയ്യുന്നതിന്‌ അസംബ്ലര്‍ എന്നറിയപ്പെടുന്ന ഒരു വിവര്‍ത്തകന്‍ ആവശ്യ
മുണ്ട്‌. പ്രോഗ്രാമിലെ പ്രവൃത്തികള്‍ നടപ്പിലാക്കുന്നത്‌ തര്‍ജ്ജമ ചെയ്യപ്പെട്ട ശേഷമാണ്‌.
കാരണം കമ്പ്യൂട്ടറിന്‌ യ്ര്ര കോഡ്‌ നിര്‍ദ്ദേശം മാത്രമെ മനസിലാക്കാന്‍ കഴിയുകയുള്ളു.
അസാംബ്ലൂര്‍ യ്ന്ത്രാധിഷ്ഠിതമാണ്‌.
ഒന്നാം വര്‍ഷ കമ്പ്യൂട്ടര്‍ സയന്‍സ്‌ 3. കമ്പ്യൂട്ടര്‍ സിസ്റത്തിന്റെ ഘടകങ്ങള്‍

* ഇന്റര്‍്രിറ്റര്‍ (Interpreter) : ഉയര്‍ന്നതലത്തിലെഴുതിയ പ്രോഗ്രാമുകളെ വരിവരിയായി
യാന്ത്രിക ഭാഷയിലേക്ക്‌ മൊഴിമാറ്റം നടത്തുന്ന ഭാഷ പ്രൊസസ്സറാണ്‌ ഇന്റര്‍പ്രിറ്റര്‍. ഏതെ
ങ്കിലും ഒരു വരിയില്‍ തെറ്റുണ്ടെങ്കില്‍, തെറ്റുകള്‍ വെളിപ്പെടുത്തുകയും പ്രവര്‍ത്തനം അവിടെ
വെച്ച്‌ അവസാനിപ്പിക്കുകയും ചെയ്യുന്നു. തെറ്റു തിരുത്തിയതിനുശേഷം മാത്രമേ വിവര്‍ത്തനം
തുടരുകയുള്ളു. BASIC ഒരു ഇന്റര്‍പ്രിറ്റഡ്‌ ഭാഷയാണ്‌.

© കമ്പൈലർ (compiler): ഉയര്‍ന്നതലത്തിലെഴുതിയ പ്രോഗ്രാമുകളെ യ്ര്്ര ഭാഷയിലേക്ക്‌
മൊഴിമാറ്റം നടത്തുന്ന ഭാഷ പ്രൊസസ്സറാണ്‌ കമ്പൈലർ. ഒറ്റത്തവണ കൊണ്ടുതന്നെ അത്‌
പ്രോഗ്രാം മുഴുവനായും വ്യാഖ്യാനിക്കുന്നു. ഇതില്‍ എന്തെങ്കിലും തെറ്റുകള്‍ വന്നാല്‍ ആ
തെറ്റുകള്‍ കമ്പൈലേഷന്റെ അവസാനം ക്രമനമ്പറോടു കൂടി സന്ദേശങ്ങളായി സ്ക്രീനില്‍
തെളിയും. വാകൃഘടനയില്‍ തെറ്റൊന്നുമില്ലെങ്കില്‍ കമ്പൈലർ ഒരു ഒബ്ജക്റ്റ്‌ ഫയല്‍
സൃഷ്ടിക്കും. കമ്പൈലർ ഉപയോഗിച്ചുള്ള തര്‍ജ്ജമയെ കമ്പൈലേഷൻ എന്നു പറയുന്നു.
തര്‍ജ്ജമക്കുശേഷം പ്രോഗ്രാം റണ്‍ ചെയ്യുന്നതിന്‌ കമ്പൈലർ മെമ്മറിയില്‍ ആവശ്യമില്ല.
കമ്പൈലർ ഉപയോഗിക്കുന്ന പ്രോഗ്രാമിംഗ്‌ ഭാഷകളാണ്‌ C, C++, Pascal തുടങ്ങിയവ.

അസംബ്ലി ഭാഷയില്‍ നിന്നും, ഉയര്‍ന്നതലത്തിലുള്ള ഭാഷയില്‍ നിന്നും പ്രോഗ്രാമുകള്‍ യ്യരന്ര
ഭാഷ പ്രോഗാമുകളായി വിവര്‍ത്തനം ചെയ്യുന്ന പ്രവൃത്തികള്‍ ചിത്രം 3.14 ല്‍ കാണിച്ചിരിക്കു

= |

അസംംബ്ലിദാഷ

ന്നു.

0110110001010
0010101000100

0101010010101

0101010101010 “L
Ss യ്രന്ത്ഭാഷ

ഉയര്‍ന്നതലത്തിലുള്ളഭാഷ
ചിത്രം. 14: BIO പ്രൊന്ത്ത്രിംങ്‌

൦. യൂട്ടിലിറ്റി സോഫ്റ്റ്വെയര്‍ (Utility Software)

പതിവ്‌ ജോലികളും സിസ്റ്റം പരിപാലന ജോലികളും നിര്‍വൃഹിക്കാന്‍ ഉപയോക്താക്കളെ സഹാ
യിക്കുന്ന ഒരുകൂട്ടം പ്രോരഗോമുകളാണ്‌ യൂട്ടിലിറ്റി സോഫ്ട്വെയര്‍. ചില യൂട്ടിലിറ്റി പ്രോഗ്രാമു
കളും അവയുടെ ധര്‍മ്മങ്ങളും താഴെ കൊടുത്തിരിക്കുന്നു

© കാ്രഷന്‍ ടൂള്‍സ്‌ (compression tools): വലിയ ഫയലുകളെ ചുരുങ്ങിയ സംഭരണ സ്ഥല
ങ്ങളിലേക്ക്‌ ചുരുക്കുക എന്നതാണ്‌ കം്രപഷന്‍ ടൂള്‍സിലൂടെ ചെയ്യുന്നത്‌. ആവശ്യാനുസ
രണം ഒരിക്കല്‍ കംപപഷന്‍ യൂട്ടിലിറ്റി ഉപയോഗിച്ച്‌ വലിപ്പം കുറച്ച ഫയലുകളെ
ഡിക്രമ്പസ്‌ ചെയ്ത്‌ യഥാര്‍ത്ഥ വലിപ്പത്തിലേക്ക്‌ മാറ്റുവാന്‍ സാധിക്കും. ഫയലുകളുടെ
ക്രമ്പഷനെ സിപ്പിംഗ്‌ (Zipping) എന്നും ഡിക്രമ്പഷനെ അണ്‍സിപ്പിംങ് (Unzipping) എന്നും
വിളിക്കുന്നു. ഉദാഹരണം Winzip, WinRAR എന്നിവ.

ഒന്നാം വര്‍ഷ കമ്പ്യൂട്ടര്‍ സയന്‍സ്‌ 3. കമ്പ്യൂട്ടര്‍ സിസ്റത്തിന്റെ ഘടകങ്ങള്‍

൫ ഡിസ്ക്‌ ഡീഫ്രാഗ്മെന്റര്‍ കമ്പ്യൂട്ടര്‍ ഹാര്‍ഡ്‌ ഡിസ്്‌കിലെ ഫയലുകളെ പുന്റകമീകരണം
നടത്തുന്ന പ്രോ്രഗാമുകളെ ഡിസ്ക്‌ ഡീഫ്രാഗ്മെന്റര്‍ എന്നു പറയുന്നു. ഡിസ്കിന്റെ പല
ഭാഗങ്ങളിലായി ചിതറികിടക്കുന്ന ഫയലുകളെ ക്രമീകരിച്ചാല്‍ കമ്പ്യൂട്ടറിന്‌ വേഗത കൂടൂ
കയും പ്രവര്‍ത്തനം കാര്യക്ഷമമാവുകയും ചെയ്യും.

൭ ബാക്ക്‌ അപ്പ്‌ സോഫ്റ്റ്വെയര്‍ (Backup Software) : ഏതെങ്കിലും കാരണത്താല്‍ ഹാര്‍ഡ്‌
ഡിസ്‌ക്കുകള്‍ പ്രവര്‍ത്തനരഹിതമാകുകയോ അബദ്ധത്തില്‍ മാറ്റങ്ങള്‍ക്ക്‌ വിധേയമാകു
കയോ ചെയ്താല്‍ ഡിസ്കില്‍ സൂക്ഷിച്ചു വച്ചിരിക്കുന്ന വിവരങ്ങളുടെ പകര്‍പ്പ്‌ നമുക്ക്‌
എടുക്കുവാന്‍ സാധിക്കുന്ന സോഫ്റ്റ്വെയറാണിത്‌. ഈ സൌകര്യം ഉപയോഗിച്ച്‌ ഫയലു
കളോ ഫോള്‍ഡറുകളോ ഡ്രൈവുകളോ നമുക്ക്‌ ബാക്ക്‌ അപ്പിന്‌ വിധേയമാക്കാം.

e ആന്റി വൈറസ്‌ സോഫ്ട്വെയര്‍: കമ്പ്യൂട്ടറിന്റെ ശ്രവര്‍ത്തനത്തെ ദോഷകരമായി ബാധി
ക്കുന്ന പ്രോഗ്രാമുകളാണ്‌ കമ്പ്യൂട്ടര്‍ വൈറസുകള്‍. ആന്റി വൈറസ്‌ സോഫ്റ്റവെയര്‍ എന്ന
യൂട്ടിലിറ്റി പ്രോഗ്രാം ഉപയോഗിച്ച്‌ കമ്പ്യൂട്ടറിനെ ബാധിച്ചിരിക്കുന്ന വൈറസിനെ കണ്ടെ
ത്താനും അവയെ ഒഴിവാക്കാനും സാധിക്കും. പുതിയ വൈറസുകള്‍ സൃഷ്ടിക്കപ്പെട്ട
കൊണ്ടിരിക്കുന്നതിനനുസരിച്ച്‌ ആന്റി വൈറസ്‌ സോഫ്റ്റ്വെയറുകളും പുതുക്കേണ്ടതു
ണ്ട്‌. എല്ലാ ആന്റി വൈറസ്‌ സോഫ്റ്റ്വെയറുകളിലും സ്വയം പുതുക്കുന്ന സംവിധാനങ്ങ
ളുണ്ട്‌. നോര്‍ട്ടണ്‍ ആന്റിവൈറസ്‌, കാസ്പേഴ്‌സ്‌കി, എ.വി.ജി എന്നിവ ഉദാഹരണങ്ങളാണ്‌.

3.5.2 ആല്ലിക്കേഷന്‍ സോഫ്റ്റവെയര്‍ (Application Software)

ഒരു പ്രത്യേക ആവശ്യത്തിനായി വികസിപ്പിച്ചെടുക്കുന്ന സോഫ്‌്റ്റ്വെയറുകളെയാണ്‌ Bg flea
ഷന്‍ സോഫ്റ്റ്വെയര്‍ എന്നു വിളിക്കുന്നത്‌. പൊതുവായ ആവശ്യങ്ങള്‍ക്കായുള്ള സോഫ്റ്റ്വെ
യര്‍ പാക്കേജുകളും പ്രത്യേക ആവശ്യങ്ങള്‍ക്കായുള്ള സോഫ്റ്റ്വെയറുകളും ഇതില്‍പ്പെടുന്നു.
ആപ്ലിക്കേഷന്‍ സോഫ്റ്റ്വെയറുകള്‍ക്ക്‌ ഉദാഹരണങ്ങളാണ്‌ GIMP, Payroll system, Airline
Reservation System, Tally എന്നിവ.

ഒ. പൊതുവായ ആവശ്യങ്ങള്‍ക്കുള്ള പാക്കേജുകള്‍ (General Purpose Software Packages)

ഒരു പ്രത്യേക ആപ്ലിക്കേഷനിലെ പ്രവര്‍ത്തനങ്ങള്‍ നിര്‍വൃഹിക്കാന്‍ ഉപയോഗിക്കുന്ന സോഫ്റ്റ്വെ
യര്‍ പാക്കേജാണിത്‌. ഉപയോക്താവിന്റെ ആവശ്യങ്ങള്‍ക്കനുസരിച്ച്‌ ധാരാളം സവിശേഷതകള്‍
പ്രത്യേക പാക്കേജുകളില്‍ ഉള്‍പ്പെടുത്തിയിരിക്കുന്നു. വേഡ്‌ പ്രോസസറുകള്‍, സ്പ്രെഡ്ഷീറ്റ്‌
സോഫ്റ്റ്വെയര്‍, പ്രസന്റേഷന്‍ സോഫ്‌റ്റ്വെയര്‍, ഡാറ്റാബേസ്‌ സോഫ്റ്റവെയര്‍, മള്‍ട്ടിമീഡിയ
സോഫ്‌റ്റ്വെയര്‍ എന്നിങ്ങനെ ഇവയെ തരംതിരിച്ചിരിക്കുന്നു.

e വേഡ്‌ പ്രൊസസ്സിംങ്ങ്‌ സോഫ്റ്റ്വെയര്‍ (Word Processing Software): ഡോക്യുമെന്റുകള്‍
നിര്‍മ്മിക്കുന്നതിനും മാറ്റങ്ങള്‍ വരുത്തുന്നതിനും വേണ്ടി രൂപകല്‍പ്പന ചെയ്തിരിക്കുന്ന
സോഫ്റ്റ്വെയര്‍ ആണ്‌ വേഡ്പ്രൊസസ്സിംഗ്‌. വളരെ എളുപ്പത്തില്‍ ലിഖിത ഉള്ളടക്കം രൂപ
കല്‍പ്പന ചെയ്യുവാനും ചിട്ടപ്പെടുത്തുവാനും നിര്‍മിക്കുവാനും പ്രിന്റ്‌ ചെയ്യുവാനും ഇത്‌ ഉപ
യോഗിക്കുന്നു, ഇതിന്റെ സഹായത്തോടെ ഫോണ്ടുകള്‍ സ്റ്റ്റ്‌ ചെയ്യുവാനും പാര്രഗാഫ്‌
സെറ്റ്‌ ചെയ്യുവാനും വ്യത്യസ്ഥ രീതിയില്‍ അടയാളങ്ങള്‍ കൊടുക്കുവാനും വരിയായിനിര
ത്തല്‍ ശരിയാക്കുവാനും വ്യാകരണവും അക്ഷരവിന്യാസവും പരിശോധിക്കുവാനും ചിത്ര
ങ്ങള്‍ ഉള്‍പ്പെടുത്തുവാനും രേഖാചിത്രങ്ങളും, പട്ടികകളും നിര്‍മ്മിക്കുവാനും സാധിക്കുന്നു.
ഡോക്യുമെന്റിന്റെ ഓരോ പേജുകളിലും തലക്കെട്ടും അടിക്കുറിപ്പും സജ്ജീകരിക്കാനും സാധി
ക്കുന്നു. MS Word, Open Office Writer, Apple i Work Pages എന്നിവ ഉദാഹരണങ്ങളാണ്‌.
- ഒന്നാം വര്‍ഷ കമ്പ്യൂട്ടര്‍ സയന്‍സ്‌ 3. കമ്പ്യുട്ടര്‍ സിസ്റ്റത്തിന്റെ ഘടകങ്ങള്‍

© സ്പ്രെഡ്ഷീറ്റ്‌ സോഫ്റ്റ്വെയര്‍ (Spreadsheet Software): പട്ടിക രൂപത്തിലുള്ള ഈ
സോഫ്റ്റ്വെയര്‍ ഉപയോഗിച്ച്‌ കണക്കു കൂട്ടലുകള്‍ എളുപ്പത്തില്‍ നടത്താന്‍ സാധിക്കും.
പേപ്പര്‍ വര്‍ക്ക്ഷീറ്റിനെ അനുകരിച്ചുകൊണ്ട്‌ സെല്ലുകള്‍ കൊണ്ട്‌ ഒരു ഗ്രിഡ്‌ നിര്‍മ്മിക്കു
ന്നു. ചിത്രങ്ങള്‍ ഉള്‍പ്പെടുത്തുവാനും വിവിധതരത്തിലുള്ള ചാര്‍ട്ടുകള്‍ നിര്‍മ്മിക്കുവാനും
അത്‌ അനുവദിക്കുന്നു. എംഎസ്‌എക്സല്‍, ഓപ്പണ്‍ ഓഫീസ്‌ കാല്‍ക്‌, ലോട്ടസ്‌ 1-2-3,
ആപ്പിള്‍ i Work നമ്പേഴ്‌സ്‌. (MS Excel, Open Office Calc, Lotus 1-2-3, Apple i Work numbers)
എന്നിവ ഉദാഹരണങ്ങളാണ്‌.

° പ്രസന്റേഷന്‍ സോഫ്റ്റ്വെയര്‍ (Presentation Software): സ്നൈഡ്‌ ഷോവില്‍ ചലിക്കുന്ന
ചിത്രങ്ങളും ശബ്ദങ്ങളും ഉപയോഗിച്ച്‌ വിവരങ്ങള്‍ തയ്യാറാക്കാന്‍ ഉപയോഗിക്കുന്ന സോഫ്റ്റ്‌
വെയറാണിത്‌. ചിത്രങ്ങളും ടെക്സ്റ്റുകളും ആനിമേഷനും വീഡിയോകളും ശബ്ദങ്ങളും
ഉള്‍പ്പെടുത്തി വൃത്യസ്ത തരത്തിലുള്ള ആശയങ്ങള്‍ സ്സൈഡുകളിലൂടെ നിര്‍മ്മിക്കാന്‍ പ്രസ
ന്റേഷന്‍ സോഫ്റ്റ്വെയര്‍ സഹായിക്കുന്നു. മൈക്രോസോഫ്റ്റ്‌ പവര്‍പോയിന്റ്‌, ഓപ്പണ്‍
ഓഫീസ്‌ ഇംപ്രസ്‌, ആപ്പിള്‍ ഐവര്‍ക്ക്‌ കീനോട്ട്‌ (Apple i Work Keynote) എന്നിവ ഉദാഹര
ണങ്ങളാണ്‌.

© ഡാറ്റാബേസ്‌ സോഫ്റ്റ്വെയര്‍ (Database Software): പരസ്പരം ബന്ധപ്പെട്ടു കിടക്കുന്ന
ഒരുകൂട്ടം ഡാറ്റകളെ ശേഖരിച്ച്‌ പട്ടികാ രീതിയില്‍ സൂക്ഷിച്ചിരിക്കുന്നവയെയാണ്‌ ഡാറ്റാ
ബേസുകള്‍ എന്നുപറയുന്നത്‌. പരസ്പരം ബന്ധപ്പെട്ടു കിടക്കുന്ന ഡാറ്റയും അവ സ്വീകരി
ക്കാനുള്ള ഒരുകൂട്ടം പ്രോ്രേഗാമുകളും ചേര്‍ന്നതാണ്‌ ഡാറ്റാ ബേസ്‌ മാനേജ്മെന്റ്‌ സിസ്റ്റം
(DBMS), ഡാറ്റാബേസിലുള്ള വിവരങ്ങള്‍ അതിനനുയോജ്യമായ രീതിയിലും കാര്യക്ഷമ
മായും വിനിയോഗിച്ച്‌ അവ വേണ്ട രീതിയില്‍ സൂക്ഷിക്കുകയും തിരിച്ചെടുക്കുകയും ചെയ്യ
ലാണ്‌ ഡാറ്റാ ബേസിന്റെ പ്രധാന ലക്ഷ്യം. സുരക്ഷിതത്വവും സ്വകാരൃതയും, പ്രത്യേക
മാനദണ്ഡങ്ങളും ഇവ നല്‍കുന്ന പ്രത്യേകതകളാണ്‌. മൈക്രോസോഫ്റ്റ്‌ ആക്സസ്‌
(Microsoft access), ഒറാക്കിള്‍ (Oracle), പോസ്റ്റ്രഗസ്‌ എസ്‌.ക്യൂ.എല്‍ (Postgres SQL), മൈ
എസ്‌.ക്യൂ.എല്‍ (My SQL) എന്നിവ ഉദാഹരണങ്ങളാണ്‌.

° മള്‍ട്ടിമീഡിയ സോഫ്റ്റ്വെയര്‍ (Multimedia Software): വിവിധ രൂപങ്ങളിലുള്ള മാധ്യമങ്ങ
ളുടെ ഏകീകൃത രൂപമാണ്‌ മള്‍ട്ടിമീഡിയ. അക്ഷരങ്ങളും ചിത്രങ്ങളും ഗ്രാഫിക്സുകളും
ഓഡിയോകളും വീഡിയോകളും കൂടി ചേര്‍ന്നുള്ള രൂപമാണ്‌ മള്‍ട്ടിമീഡിയ. വിവിധതര
ത്തിലുള്ള വിവരങ്ങള്‍ പ്രൊസസ്സ്‌ ചെയ്യാന്‍ മള്‍ട്ടിമീഡിയ സോഫ്റ്റ്വെയറില്‍ സാധിക്കും.
ഓഡിയോ, വീഡിയോ ഫയലുകള്‍ നിര്‍മ്മിക്കുന്നതിനും എഡിറ്റ്‌ ചെയ്യുന്നതിനും ഇത്‌ സഹാ
യിക്കുന്നു. ഒരു രൂപത്തില്‍ നിന്നും വേറൊരു രൂപത്തിലേക്ക്‌ തര്‍ജ്ജമ ചെയ്യുവാനുള്ള
(ഓഡിയോ വീഡിയോ ഫയലുകള്‍?) സോഫ്റ്റ്വെയറുകള്‍ ഉണ്ട്‌. വി.എല്‍.സി. പ്ലയര്‍ (VLC
Player), അഡോബ്‌ ഫ്ളാഷ്‌ (Adobe Flash), റിയല്‍ പ്ലയര്‍ (Real Player), മീഡിയ പ്ലയര്‍
(Media Player) എന്നിവ ഉദാഹരണങ്ങളാണ്‌.

0. പ്രത്യേക ആവശ്യങ്ങള്‍ക്കുള്ള സോഫ്റ്റ്വെയര്‍ (Specific Purpose Software)

പ്രത്യേക ആവശ്യങ്ങള്‍ക്കു മാത്രമായി തയ്യാറാക്കുന്ന സോഫ്റ്റ്വെയറുകളാണിത്‌. ഒരു സ്ഥാപ
നത്തിനുവേണ്ടി പ്രത്യേകം തയ്യാറാക്കിയിരിക്കുന്ന ഈ സോഫ്റ്റ്‌വെയറിനെ ടെയ്ലര്‍ - മെയ്ഡ്‌
സോഫ്റ്റ്വെയര്‍ എന്നു വിളിക്കുന്നു. സായ്്രദായികമായി ചിട്ടപ്പെടുത്തിയ സോഫ്റ്റവെയര്‍ എന്നും
ഇതിനെ പറയാറുണ്ട്‌. ഒരു ഉപയോക്താവിനെ മാത്രം ഉദ്ദേശിച്ചു കൊണ്ട്‌ അയാളുടെ മുന്‍ഗണന
ഒന്നാം വര്‍ഷ കമ്പ്യൂട്ടര്‍ സയന്‍സ്‌ 3. കമ്പ്യൂട്ടര്‍ സിസ്റത്തിന്റെ ഘടകങ്ങള്‍

കളും പ്രതീക്ഷകളും മാത്രം ഉള്‍പ്പെടുത്തികൊണ്ട്‌ തയാറാക്കുന്ന സോഫ്റ്റ്വെയറാണ്‌ സാമ്പ്രദാ

യികമായി ചിട്ടപ്പെടുത്തിയ സോഫ്റ്റ്വെയര്‍. പട്ടിക 3.7 ല്‍ പ്രത്യേക ആവശ്യങ്ങള്‍ക്കായുള്ള
ആപ്ലിക്കേഷന്‍ സോഫ്റ്റ്വെയര്‍ വിശദീകരിച്ചിരിക്കുന്നു.

അപ്പിക്കേഷന്‍ സോഫ്റ്റ്വെയര്‍ ഉദ്ദേര്യങ്ങള്‍

പേ റോള്‍ സിസ്റ്റം

ഒരു സ്ഥാപനത്തിലെ തൊഴിലാളികളുടെ വേതനത്തെക്കുറിച്ചും
മറ്റ്‌ എല്ലാവിധ വിവരങ്ങളെക്കുറിച്ചും വിശദമായി പരിപാലിക്കുന്നത്‌
പേ റോര്‍ സിസ്ത്മാണ്‌.

ഉന്‍വെന്ററി മാനേജ്മെന്റ്‌ സിസ്റ്റം ഒരു വ്യാപാര സ്ഥാപനത്തിലെ ആസ്തി വിവര പട്ടികകള്‍, ഓര്‍ഡ

റുകള്‍, വിപണനം, വിതരണം എന്നിവയെ ഭവണ്ടവിധം പരിപാലി
ക്കുന്നു.

ഹ്യൂമണ്‍ റിസോഴ്‌സ്‌ മാനേജ്മെന്റ്‌ സിസ്റ്റം | ഒരു സ്ഥാപനത്തിലെ മനുഷ്യവിദവങ്ങളെ വേണ വിധം പരിപാലി

നമുക്ക്‌ ചെയ്യാം

ക്കുന്നു.

പട്ടിക. 3.7: ആപ്ലിക്കേഷന്‍ മ്ധേഫ്ററ്‌വെയഥിന്‌ DIANE

സ്പോഫ്റ്റ്വെയറിന്റെ്‌ വരഗ്ഗ?കരണം ചര്ച്ച ചെയ്യുക

നിങ്ങളുടെ അധ്യാപകന്റെ സഹായത്തോടെ ൧നക്സും വിനഡോസും
തമ്മിലുള്ള സവിശേഷതകള്‍ താരതമ്യം ചെയ്ത്‌ (AMI കുറിച്ഛുകള്‍
തയാറാക്കുക. യൂട്ടിലിറ്റി സ്ോഫ്റ്റ്വെയറിന്റെ (alNWINJo ചരിച്ച ചെയ്യുക.
താഴെ കൊടുത്തിരിക്കുന്നവയുടെ (LOAM OA [AB തയാറാക്കുക.

- ഭാഷാ പ്രപോസ്സ്ത്റുകള്‍

- പചൊതുവായ ആധവശ്യങ്ങശിക്കായുള്ള സ്പോഫ്റ്റ്വെയര്‍ പാക്കേജുകള്‍.

നനന

1

2.

3.

10.

ഓപ്പറേറ്റിങ്‌ സിസ്റ്റം നിര്‍വചിക്കുക

ഓപ്പറേറ്റിങ്‌ സിസ്റ്റത്തിന്‌ 2 ഉദാഹരണം കൊടുക്കുക.

ഒരു പ്രോഗ്രാം കൃത്യനിര്‍വൃഹണത്തിന്‌ പറയുന്ന പേരാണ്‌.
ഓപ്പറേറ്റിങ്‌ സിസ്റ്റത്തിന്റെ ഏതെങ്കിലും രണ്ട്‌ ധര്‍മ്മങ്ങള്‍ എഴുതുക.

അസംബ്ലി ഭാഷയെ DLA ഭാഷയിലേക്ക്‌ തര്‍ജ്ജമ ചെയ്യുന്ന സോഫ്റ്റ്വെ
യറിന്റെ പേരെഴുതുക

ഉയര്‍ന്ന തലത്തിലുള്ള ഭാഷകളെ യ്ന്ത്രഭാഷകളാക്കി മാറ്റുന്ന 2 വ്യത്യസ്ഥ
ഭാഷ പ്രൊസസ്സറുകളുടെ പേര്‍ എഴുതുക.

കമ്പയിലറും ഇന്റര്‍പ്രിറ്ററും തമ്മിലുള്ള വ്ൃത്യാസം എഴുതുക.

DBMS എന്നാല്‍

സാമ്പ്രദായികമായി ചിട്ടപ്പെടുത്തിയ സോഫ്റ്റ്‌വെയറിന്‌ രണ്ട്‌ ഉദാഹരണം
എഴുതുക.

ഡിസ്‌കിലെ വിവരങ്ങളുടെ തനിപ്പകര്‍പ്പിനെ വിളിക്കുന്ന പേര്‍

ഒന്നാം വര്‍ഷ കമ്പ്യുട്ടര്‍ സയന്‍സ്‌ 3. കമ്പ്യൂട്ടര്‍ സിസ്റത്തിന്റെ ഘടകങ്ങള്‍

3.5.3 സ്വതന്ത്ര ഓഘണ്‍ സോഴ്‌സ്‌ സോഫ്റ്റുവെയര്‍
(Free and open source software)

ഉപയോഗിക്കുന്നതിനും പകര്‍പ്പ്‌ എടുക്കുന്നതിനും വിതരണം ചെയ്യുന്നതിനും പരിശോധിക്കുന്ന
തിനും മാറ്റങ്ങള്‍ വരുത്തുന്നതിനും മെച്ചപ്പെടുത്തുന്നതിനും ഉപയോക്താവിന്‌ സ്വാതന്ത്ര്യം
നല്‍കുന്ന സോഫ്റ്റ്വെയറാണ്‌ സ്വതന്ത്ര ഓപ്പണ്‍ സോഴ്‌സ്‌ സോഫ്റ്റ്വെയര്‍. കുറഞ്ഞ ചെലവ്‌,
സുരക്ഷിതത്വം കുത്തക കമ്പനികളില്‍ നിന്നുള്ള സ്വാത്ര്ത്ര്യം, കാര്യക്ഷമമായ പ്രവര്‍ത്തനം,
പരസ്പര പ്രവര്‍ത്തനക്ഷമത തുടങ്ങിയവ നല്‍കുന്നത്‌ കൊണ്ട്‌ സ്വത്രന്ര ഓപ്പണ്‍ സോഴ്‌സ്‌
സോഫ്റ്റ്വെയര്‍ ഇപ്പോള്‍ വ്യാപകമായി ഉപയോഗിക്കുന്നു.

നാല്‌ തരത്തിലുള്ള സ്വാതന്ത്ര്യം MIM LM സോഫ്റ്റ്വെയര്‍ ഫൌണ്ടേഷന്‍ (Free Software Foun-
dation - FSF) നിര്‍വചിക്കുന്നു.

സ്വാത്രന്ത്യം 0 (Freedom 0) : ഏത്‌ ആവശ്യത്തിനും ഇഷ്ട്രപകാരം ഉപോയഗിക്കുന്നതിനുള്ള
സ്വാതന്ത്ര്യം.

സ്വാത്രന്ത്യം / (Freedom /) : സോഫ്റ്റ്വെയര്‍ എങ്ങനെ പ്രവര്‍ത്തിക്കുന്നു എന്ന്‌ വിശകലനം
ചെയ്യുന്നതിനുള്ള സ്വാതന്ത്ര്യം.

സ്വാതന്ത്യം 2 (Freedom 2): പ്രോഗ്രാമിന്റെ പകര്‍പ്പുകള്‍ പുനര്‍വിതരണം ചെയ്യുവാനുള്ള
സ്വാതന്ത്ര്യം.

സ്വാത്രന്ത്യം 3 (Freedom 3): പ്രോഗ്രാമിനെ നവീകരിക്കുവാനും നവീകരിച്ചവയെ പുറത്തിറ
ക്കുവാനുമുള്ള സ്വാതന്ത്യം.

ഫ്രീ ആന്റ്‌ ഓപ്പണ്‍ സോഴ്‌സ്‌ സോഫ്റ്റ്വെയറുകളില്‍ ചിലത്‌ താഴെ കൊടുക്കുന്നു

ഗ്നു/ലിനക്സ്‌ (GNU/Linux): MO LA ഓപ്പണ്‍ സോഫ്റ്റ്വെയര്‍ മാതൃകയിലുള്ള ഓപ്പറേ
റ്റിംഗ്‌ സിസ്റ്റം വിഭാഗത്തില്‍പ്പെട്ട സോഫ്റ്റ്വെയറാണ്‌ GNU/Linux. 1983 ല്‍ FSF ല്‍ റിച്ചാര്‍ഡ്‌
സ്റ്റാള്‍മാന്‍ അവതരിപ്പിച്ച GNU പ്രൊജക്ടില്‍ ചിട്ടപ്പെടുത്തിയ ഒന്നാണ്‌ ഇത്‌.

ജിമ്പ്‌ (GIMP): GNU ഇമേജ്‌ മാനിപുലേഷന്‍ പ്രോ്രഗാം എന്നാണ്‌ ഇത്‌ അറിയപ്പെടുന്നത്‌. ചിത്ര
ങ്ങളെ ചിട്ടപ്പെടുത്തുവാന്‍ ഉപയോഗിക്കുന്ന സോഫ്റ്റ്വെയറാണിത്‌. ചിത്രങ്ങള്‍ നിര്‍മ്മിക്കുവാ
നും, ചിട്ടപ്പെടുത്തുവാനും വേണ്ട രീതിയില്‍ കൈകാര്യം ചെയ്യുവാനും ഈ സോഫ്റ്റ്വെയര്‍
ഉപയോഗിക്കുന്നു. വിവിധ ഫയല്‍ ഫോര്‍മാറ്റുകളെ പിന്തുണക്കാനും ഒരു രൂപത്തില്‍ നിന്ന്‌ മറ്റൊ
ന്നിലേക്ക്‌ മാറ്റുന്നതിനും GIMP സഹായിക്കുന്നു.

മോസില്ല ഫയര്‍ഫോക്സ്‌ (Mozilla Firefox) : മോസില്ല കോര്‍പ്പറേഷന്‍ നിര്‍മ്മിച്ച വളരെ പ്രശസ്തമായ
വെബ്‌ ബ്രൌസര്‍ ആണിത്‌. സുരക്ഷിതമായ ബ്രൌസിങ്ങിന്‌ ഇത്‌ അനുയോജ്യമാണ്‌.

ഓപ്പണ്‍ ഓഫീസ്‌ .ഒആര്‍ജി (Open offfice org) : ഒരു സമ്പൂര്‍ണ്ണ ഓഫീസ്‌ പാക്കേജ്‌ ആണ്‌
ഓപ്പണ്‍ ഓഫീസ്‌. ഇതില്‍ ലിഖിത ഉള്ളടക്കങ്ങള്‍ തയ്യാറാക്കാനും രൂപമാറ്റം ചെയ്യുവാനും
വേഡ്‌ പ്രൊസസ്സര്‍ ആയ റൈറ്റര്‍, സ്പ്രെഡ്‌ ഷീറ്റ്‌ ആയ കാല്‍ക്ക്‌, പ്രസന്റേഷന്‍ സോഫ്ട്വെ
യര്‍ ആയ ഇംപ്രസ്സ്‌ എന്നിവ ഉപയോഗിക്കുന്നു. ഇത്‌ ലിനക്സ്‌, വിന്‍ഡോസ്‌ സംവിധാനങ്ങളില്‍
പ്രവര്‍ത്തിക്കുന്നു.
3. കമ്പ്യൂട്ടര്‍ സിസ്റത്തിന്റെ ഘടകങ്ങള്‍

ഒന്നാം വര്‍ഷ കമ്പ്യൂട്ടര്‍ സയന്‍സ്‌

3.5.4 ഫ്രീവെയറും ഷെയര്‍വെയറും (Freeware and shareware)

പ്രത്യേകമായ വിലയൊന്നും കൂടാതെ, പരിധിയൊന്നുമില്ലാതെ ഉപയോഗിക്കാന്‍ സാധിക്കുന്ന
പകര്‍പ്പവകാശം ഉള്ള കമ്പ്യൂട്ടര്‍ സോഫ്റ്റ്വെയര്‍ ആണ്‌ ഫ്രീവെയര്‍.

ഒരു ചുരുങ്ങിയ കാലയളവിലേക്ക്‌ പരീക്ഷണ അടിസ്ഥാനത്തില്‍ വിതരണം ചെയ്യപ്പെടുന്ന
വാണിജ്യ പരമായ സോഫ്റ്റ്വെയര്‍ ആണ്‌ ഷെയര്‍വെയര്‍. വിലയൊന്നും കൂടാതെ വളരെ പരി
മിതമായ പ്രവര്‍ത്തനക്ഷമതയോടെ വിതരണം ചെയ്യപ്പെടുന്നതാണിത്‌. ഇന്റര്‍നെറ്റില്‍ നിന്ന്‌
ഡൌണ്‍ലോഡ്‌ ചെയ്യാന്‍ സാധിക്കുന്ന വിധത്തിലാണ്‌ ഷെയര്‍വെയറുകള്‍ ലഭ്യമാകുന്നത്‌. വില
കൊടുത്ത്‌ വാങ്ങുന്നതിന്‌ മുമ്പ്‌ ഉപയോക്താക്കള്‍ക്ക്‌ ഇവയെ വിലയിരുത്തുവാനുള്ള അവസരം
നല്‍കുന്നു എന്നതാണ്‌ ഇതിന്റെ ലക്ഷ്യം. ചില ഷെയര്‍വെയറുകള്‍ പരിമിതമായ കാലയളവി
ലലേക്ക്‌ മാത്രം പ്രവര്‍ത്തിപ്പിക്കുന്നവയാണ്‌. പട്ടിക 3.8ല്‍ ഫ്രീവെയറിന്റെയും ഷെയര്‍വെയ
റിന്റെയും താരതമ്യം കൊടുത്തിരിക്കുന്നു

© ഇന്റര്‍നെറ്റില്‍ നിന്നും ആര്‍ക്കു വേണമെങ്കിലും

സൌജന്യമായി ഡാണ്‍ലോധഡ്‌ ചെയ്യുകയും ഉപ
യോഗഥിക്കുകയും ചെയ്യാം.

എല്ലാ സവിശേഷതകളും സരജന്യമാണ്‌.

ഫ്രീവെയര്‍ പ്രോഗ്രാമുകള്‍ വിലയില്ലാതെയാണ്‌
വിതരണം ചെയ്യുന്നത്‌.

© വാങ്ങുന്നതിനും മുമ്പ്‌ തന്നെ സോഫ്റ്റ്വെയറിനെ
പരിചയക്ടാന്‍ സാധിക്കുന്നു.

എല്ലാ സവിശേഷതകളും ലദ്യമാകുകയില്ല. എല്ലാ
സവിശേഷതകളും ലഭിക്കണമെങ്കില്‍ വില
കൊടുത്തു വാങ്ങിക്കണം.

ഷെയര്‍വെയര്‍ വില കൊടുത്തും അല്ലാതെയും
വിതരണം ചെയ്യുന്നു. പല സന്ദര്‍ഭങ്ങളിലും

നിര്‍മിച്ചയാളുടെ അനുമതിയോടെ മാത്രമേ ഷെയര്‍
വെയര്‍ വിതരണം ചെയ്യുകയുള്ളു.

പട്ടിക 3.6: ്രറവെയറും ഷെയര്‍വെയഥും തമ്മിലുള്ള താദതഥു

3.5.5 ഉടമസ്ഥാവകാശമുള്ള സോഫ്റ്റവെയര്‍ (Proprietary Software)

സോഫ്റ്റ്വെയര്‍ നിര്‍മ്മാതാവ്‌ അഥവാ പ്രസാധകന്റെ പൂര്‍ണ്ണ അധികാരപരിധിയില്‍ വരുന്ന
സോഫ്റ്റ്വെയറാണിത്‌. അനുവാദ ഉടമ്പടി ഇല്ലാതെ ഇത്‌ പകര്‍ത്താനോ വിതരണം ചെയ്യുവാനോ
പാടുള്ളതല്ല. പ്രോഗ്രാമിന്റെ സോഴ്‌സ്‌ കോഡ്‌ ലഭ്യമാകാത്തതിനാല്‍ ഇതില്‍ മാറ്റം വരുത്തി
മെച്ചപ്പെടുത്തുവാനൊന്നും ഉപയോക്താവിന്‌ സാധിക്കുകയില്ല. മൈക്രോസോഫ്റ്റ്‌ വിന്‍ഡോസ്‌

ഓപ്പറേറ്റിംഗ്‌ സിസ്റ്റം, എംഎസ്‌ ഓഫീസ്‌, മാക്‌ ഒഎസ്‌ എന്നിവ ഉദാഹരണങ്ങളാണ്‌.

3.6 ഹു൭ണ്‍വെയര്‍,/ലൈവ്‌ വെയര്‍

കമ്പ്യൂട്ടര്‍ ഉപയോഗിക്കുന്ന ആളുകളെയാണ്‌ ഹ്യൂമണ്‍വെയര്‍ /ലൈവ്വെയര്‍ എന്നുപറയുന്നത്‌.
പ്രോഗ്ഗാമര്‍, സിസ്റ്റം അനലിസ്റ്റ്‌, ഓപ്പറേറ്റിംങ്ങ്‌ സ്റ്റാഫ്‌, കമ്പ്യൂട്ടര്‍ സിസ്റ്റം ഉപയോഗിക്കുന്നവര്‍

ഇവരെല്ലാം ഇതില്‍ ഉള്‍പ്പെടുന്നു.
(5 ഒന്നാം വര്‍ഷ കമ്പ്യൂട്ടര്‍ സയന്‍സ്‌ 3. കമ്പ്യൂട്ടര്‍ സിസ്റ്റത്തിന്റെ ഘടകങ്ങള്‍

പട്ടിക 3.9ല്‍ വിവിധതരം ഹ്യുമണ്‍വെയറുകളും അവരുടെ ജോലികളും വിശദീകരിക്കുന്നു.

ഹ്യുമണ്‍വെയര്‍ ജോലികള്‍

ിസ്്ം അഡ്മിനിസ്ട്രേറുര്‍ കമ്പ്യൂട്ടര്‍ സിസ്തത്തെയും, സെര്‍വറിനെയും പരിപാലിക്കുക. ക്രമീകരണം
നടത്തുക, വിശ്വസനീയമായ പ്രവര്‍ത്തനങ്ങള്‍ നിര്‍വൃഹിക്കുക. പ്രത്യേകിച്ച്‌
സെര്‍വറുകളെയും ഒന്നില്‍ കൂടുതല്‍ ഉപയോക്താക്കളുള്ള കമ്പ്യൂട്ടറുകളെ
യും പരിപാലിക്കുക.

Io മാനേജര്‍ ഉപഭോക്തൃ സേവനങ്ങള്‍ ഉത്തമമായി ഉറഷുവരുത്തുകയും എല്ലാ വ്യാപാര
യൂണിറ്റ്‌ സിസ്ങ്ങളിലെയും വൈദഗ്ദ്ധ്യം നിലനിര്‍ത്തി പോരുകയും
വില്‍ഷനക്കാരും കരാറുകാരും പോലെയുള്ളവരുമായുള്ള തൊഴില്‍പരമായ
ബന്ധം വളര്‍ത്തികൊണ്ടു വരികയും ചെയ്യുക.

സ്റ്റം അനലിസ്റ്റ്‌ പുതിയ ഐ.ടി. പരിഹാരങ്ങള്‍ രൂപകല്‍ഷന ചെയ്ത്‌ വ്യാപാരത്തിന്റെ കാര്യ
ക്ഷമതയും ഉല്‍കഷാദനക്ഷമതയും മെച്ചഷെടുത്തുക.

ഡാറ്റാ ബേസ്‌ അഡ്മിനി ഡാറ്റാബേസ്‌ പരിഹാരങ്ങള്‍ രൂപകല്പന ചെയ്യുകയും നിരീക്ഷിക്കുകയും
സ്‌ട്രേറ്റേഴ്‌സ്‌ അപ്ര്രഥിക്കുകയും നടഷില്‍ വരുത്തുകയും ചെയ്യുക.

കമ്പ്യൂട്ടര്‍ എഞ്ചിനീയര്‍മാര്‍ കമ്പ്യൂട്ടര്‍ സിസ്തത്തിലെ ഹാര്‍ഡ്വെയറിന്റെയും സോഫ്റ്റ്വെയറിന്റെയും രുപ
കല്‍ഷന നടത്തുക.

കമ്പ്യുട്ടര്‍ പ്രോദ്രാമര്‍ കമ്പ്യൂട്ടറുകളെ ശരിയായ രീതിയില്‍ പ്രവര്‍ത്തിഷിക്കുവാന്‍ ആവശ്യമായ
കോഡുകര്‍ എഴുതുന്നു.

കമ്പ്യൂട്ടര്‍ ഓകറ്ുര്‍ കമ്പ്യൂട്ടര്‍ സിസ്റ്റത്തിന്റെ മേല്‍നോട്ടം നിര്‍വ്വഹിക്കുന്നു. ഇവ വേണ്ടവിധം
പ്രവര്‍ത്തിക്കുന്ന എന്ന്‌ ഉറഷുവരുത്തുന്നു. BOM സുരക്ഷിതത്വം ഉറദാ
ക്കുന്നു. തെറ്റുകള്‍ വരുന്ന സാഹചര്യം ഒഴിവാക്കുന്നു.

പട്ടിക 2.9 : വിവിഥതദം ഫുദ്മണ്ലെതഥുക്ളും അവരുടെ മോലിവിവരങ്ങളും

സ്വയം പരിശോധിക്കുക

=)

. സ്വതന്ത്ര ഓപ്പണ്‍ സോഴ്‌സ്‌ സോഫ്റ്റ്‌വെയറിന്‌ ഒരു ഉദാഹരണം നല്‍കുക.

2. വാങ്ങുന്നതിനുമുമ്പ്‌ ഉപഭോക്താവിന്‌ ഉപയോഗിക്കാനുള്ള സൌകര്യം ഒരു
ക്കുന്ന സോഫ്റ്റ്വെയര്‍ ആണ്‌

3. ഫ്രീ ആന്റ്‌ ഓപ്പണ്‍ സോഴ്‌സ്‌ സോഫ്റ്റ്വെയര്‍ എന്നാലെന്ത്‌?

4. ഉടമസ്ഥാവകാശമുള്ള സോഫ്റ്റ്‌വെയറിന്‌ ഉദാഹരണം നല്‍കുക.

a

. ഹ്യൂമണ്‍വെയറിന്‌ രണ്ട്‌ ഉദാഹരണം എഴുതുക.

ഒന്നാം വര്‍ഷ കമ്പ്യൂട്ടര്‍ സയന്‍സ്‌ 3. കമ്പ്യൂട്ടര്‍ സിസ്റത്തിന്റെ ഘടകങ്ങള്‍

നമുക്ക്‌ സംഗ്രഹിക്കാം

തുടര്‍ച്ചയായ പ്രവര്‍ത്തനങ്ങളിലൂടെ ഡാറ്റയെ വിവരങ്ങളാക്കി മാറ്റുന്ന പ്രരകിയയാണ്‌ ഡാറ്റ
പ്രോസസ്സിംഗ്‌. കമ്പ്യൂട്ടര്‍ ഉപയോഗിച്ചുള്ള ഇലക്ട്രോണിക്‌ ഡാറ്റ പ്രോസസ്സിങ്‌ മാന്വല്‍
ഡാറ്റാ പ്രോസസ്സിങിന്റെ പരിമിതികള്‍ മറികടക്കാന്‍ സഹായിക്കുന്നു. ഒരു കമ്പ്യൂട്ടറിന്‌
ഇന്‍പുട്ട്‌ യുണിറ്റ്‌, സെന്‍ര്രല്‍ പ്രൊസസ്സിങ്‌ യുണിറ്റ്‌, സംഭരണ യൂണിറ്റ്‌, ഓട്ടപുട്ട്‌ യൂണിറ്റ്‌
എന്നിങ്ങനെ നാല്‍ പ്രവര്‍ത്തനഘടകങ്ങള്‍ ഉണ്ട്‌. ഈ അധ്യായത്തില്‍ കമ്പ്യൂട്ടര്‍ ഓര്‍ഗ
നൈസേഷനെക്കുറിച്ച്‌ മൊത്തത്തില്‍ പൊതുവായ ഒരു ധാരണ നല്‍കിയിരിക്കുന്നു. ഇന്‍പുട്ട്‌
ഓട്ടപുട്ട്‌ ഉപകരണങ്ങളെക്കുറിച്ചും, ഇ-വേസ്റ്റിനെക്കുറിച്ചും അതിന്റെ നിര്‍മാര്‍ജ്ജന രീതി
കളെക്കുറിച്ചും ഹരിത കമ്പ്യൂട്ടിങ്ങിന്റെ ്രാധാനൃത്തെക്കുറിച്ചും വിശദീകരിച്ചിരിക്കുന്നു.
വിവിധതരം സോഫ്റ്റ്വെയറുകളെക്കുറിച്ചും ഓപ്പറേറ്റിങ്ങ്‌ സിസ്റ്റത്തിന്റെ ആവശ്യകതയെ
ക്കുറിച്ചും അതിന്റെ പ്രധാന പ്രവര്‍ത്തനങ്ങളെക്കുറിച്ചും ചര്‍ച്ച ചെയ്തു. കമ്പ്യൂട്ടര്‍ ഭാഷക
ളുടെ വിഭാഗങ്ങളെക്കുറിച്ച്‌ വിശദീകരിച്ചിരിക്കുന്നു. ഓപ്പണ്‍ സോഴ്‌സിന്റെ ആശയങ്ങളെ
കുറിച്ചും, (്രീവെയര്‍, ഷെയര്‍വെയര്‍, സ്വതന്ത്ര സോഫ്റ്റ്വെയര്‍, ഉടമസ്ഥാവകാശമുള്ള
സോഫ്റ്റ്വെയര്‍ എന്നിവയെക്കുറിച്ചും വിശദമായി ചര്‍ച്ച ചെയ്തു. ഈ അധ്യായം അവ
സാനിച്ചിരിക്കുന്നത്‌ ഹ്യൂമണ്‍ വെയറിന്റെ ആശയത്തിന്‌ വിവരണം നല്‍കി കൊണ്ടാണ്‌.

ഈ അധ്യായത്തിന്റെ അവസാനം പഠിതാവിന്‌ കിട്ടിയിരിക്കേണ്ട കഴിവുകള്‍

൭ ഡാറ്റയെയും വിവരങ്ങളേയും വേര്‍തിരിക്കുക.

൭ ഡാറ്റ പ്രോസസ്സിങ്ങിന്റെ വ്യത്യസ്ഥ ഘട്ടങ്ങള്‍ തിരിച്ചറിയല്‍

൭ കമ്പ്യൂട്ടര്‍ സിസ്റ്റത്തിന്റെ ബേസിക്‌ ഓര്‍ഗനൈസേഷന്‍ വിവരണം

൭ പലതരത്തിലുള്ള ഇന്‍പുട്ട്‌ ഓട്ട്പുട്ട്‌ ഉപകരണങ്ങള്‍ തിരിച്ചറിയല്‍

൭ സിസ്റ്റം സോഫ്റ്റ്വെയറും ആപ്ലിക്കേഷന്‍ സോഫ്റ്റ്വെയറും വേര്‍തിരിക്കുക

൭ ഇ-വേസ്റ്റ്‌ നിര്‍മ്മാര്‍ജ്ജനത്തിന്റെ പ്രാധാന്യം തിരിച്ചറിയല്‍

൭ ഹരിത കമ്പ്യൂട്ടിങ്ങിന്റെ ആശയം തിരിച്ചറിയല്‍

൭ പലതരത്തിലുള്ള സോഫ്റ്റ്വെയറുകളെ തരം തിരിക്കല്‍

൭ ഓപ്പറേറ്റിംഗ്‌ സിസ്റ്റത്തിന്റെ ധര്‍മ്മങ്ങള്‍ തിരിച്ചറിയുക

൭ വേഡ്‌ പ്രൊസസ്സറും ഇലക്ട്രോണിക്‌ സ്പ്രെഡ്ഷീറ്റും പ്രസന്റേഷന്‍ സോഫ്റ്റ്വെയറും
ഉപയോഗിക്കല്‍

൭ വിവിധതരത്തിലുള്ള കമ്പ്യൂട്ടര്‍ ഭാഷകള്‍ തരംതിരിക്കല്‍

൭ വൃത്യസ്ഥ തരത്തിലുള്ള യൂട്ടിലിറ്റി സോഫ്റ്റ്വെയറുകള്‍ പട്ടികപ്പെടുത്തല്‍

© ഓപ്പണ്‍ സോഴ്‌സ്‌ സോഫ്റ്റ്വെയര്‍ പ്രോത്സാഹിപ്പിക്കല്‍

൭ ഹ്യുമണ്‍വെയറും ഷെയര്‍വെയറും വിവരിക്കല്‍
ഒന്നാം വര്‍ഷ കമ്പ്യൂട്ടര്‍ സയന്‍സ്‌ 3. കമ്പ്യൂട്ടര്‍ സിസ്റത്തിന്റെ ഘടകങ്ങള്‍

 മാതുകചോദ്യങ്ങള്‍ ॥॥॥॥॥॥॥॥॥॥॥॥॥॥॥॥॥॥॥

ഹ്രസ്വോത്തര ചോദ്യങ്ങള്‍

1 ഡാറ്റ എന്നാല്‍ എന്ത്‌?

2. പ്രൊസസ്സ്‌ ചെയ്ത ഡാറ്റ അറിയപ്പെടുന്നത്‌

3. ഡിജിറ്റല്‍ കമ്പ്യൂട്ടറിന്റെ ഘടകങ്ങള്‍ ഏതൊക്കെയാണ്‌?
4. സി.പി.യു.വിന്റെ പ്രധാന ധര്‍മ്മങ്ങള്‍ എഴുതുക?

5. വിവിധതരത്തിലുള്ള പ്രധാന മെമ്മറികള്‍ ഏതെല്ലാം?

6. EPROM ന്‌ മീതെ EEPROM ന്റെ മേന്മകള്‍ എന്തെല്ലാം?
7. എപ്പോഴാണ്‌ നമ്മള്‍ റോം (ROM) ഉപയോഗിക്കുന്നത്‌?

8. ഇന്‍പുട്ട്‌ ഉപകരണം എന്നാല്‍ എന്ത്‌? സാധാരണയായി ഉപയോഗിക്കുന്ന ഇന്‍പുട്ട്‌
ഉപകരണങ്ങള്‍ പട്ടികപ്പെടുത്തുക.

9. ജട്ട്പുട്ട്‌ ഉപകരണങ്ങള്‍ എന്നാല്‍ എന്ത്‌? സാധാരണയായി ഉപയോഗിക്കുന്ന ഓട്ട്പൂട്ട്‌
ഉപകരണങ്ങള്‍ പട്ടികപ്പെടുത്തുക.

10. സംഭരണ ഉപകരണങ്ങള്‍ എന്താണ്‌? സാധാരണ ഉപയോഗിക്കുന്ന സംഭരണ ഉപകര
ണങ്ങള്‍ പട്ടികപ്പെടുത്തുക.

11. അരിത്തമെറ്റിക്‌ ലോജിക്‌ യൂണിറ്റി (ALU) ന്റെ പജ; എന്താണ്‌?
12. കണ്‍ട്രോള്‍ യൂണിറ്റ്‌ എന്താണ്‌?

13. രജിസ്റ്റേ*സ്‌ എന്താണ്‌? ഏതെങ്കിലും രണ്ട്‌ എണ്ണം എഴുതുകയും വിശദീകരിക്കുകയും
ചെയ്യുക

14. ഹാര്‍ഡ്കോപ്പിയും സോഫ്റ്റ്കോപ്പിയും താരതമ്യം ചെയ്യുക

15. ഇ-വേസ്റ്റ്‌ എന്നാല്‍ എന്താണ്‌?

16. ഓപ്പറേറ്റിങ്‌ സിസ്റ്റം എന്നാല്‍ എന്താണ്‌?

17. ഭാഷ പ്രൊസസ്സര്‍ എന്താണ്‌?

18. കമ്പ്യൂട്ടര്‍ ഭാഷകളെ തരംതിരിക്കുക?

19. ഡിസ്ക്‌ ഡിഫ്രാഗ്മെന്റര്‍ എന്താണ്‌?

20. ഓപ്പറേറ്റിംഗ്‌ സിസ്റ്റത്തിനെ വിഭവ മാനേജരായി പരിഗണിക്കുന്നതെന്തുകൊണ്ട്‌?
21. ഉടമസ്ഥാവകാശമുള്ള സോഫ്റ്റ്വെയര്‍ എന്താണ്‌?

22. ഓപ്പണ്‍ സോഴ്‌സ്‌ സോഫ്റ്റ്വെയര്‍ കൊണ്ടുദ്ദേശിക്കുന്നതെന്താണ്‌?
ഒന്നാം വര്‍ഷ കമ്പ്യൂട്ടര്‍ സയന്‍സ്‌ 3. കമ്പ്യൂട്ടര്‍ സിസ്റത്തിന്റെ ഘടകങ്ങള്‍

ലഘു ഉപന്യാസ ചോദ്യങ്ങള്‍
1 ഡാറ്റയും വിവരവും വേര്‍തിരിച്ചെഴുതുക

2. പ്ലസ്‌ വണ്‍ അഡ്മിഷനു വേണ്ടിയുള്ള അപേക്ഷ ഫോമില്‍ വ്യക്തിപരമായ വിവരങ്ങളും
വിവിധ ഗ്രൂപ്പുകളും സ്‌കൂളും കൊടുത്തിരിക്കുന്നു.

a) അഡ്മിഷന്‍ പ്രോസസ്സില്‍ വരുന്ന ഡാറ്റയും വിവരങ്ങളും തിരിച്ചറിയുക
0) വിവരങ്ങള്‍, അപേക്ഷ കൊടുക്കുന്നവരെയും സ്‌കൂള്‍ അധികാരി
കളെയും സഹായിക്കുന്നത്‌ എങ്ങനെ എന്ന്‌ വിശദീകരിക്കുക.

C) ഡാറ്റ പ്രൊസസ്സ്‌ ചെയ്യുമ്പോള്‍ ഉള്‍ചപ്പെട്ടിട്ടുള്ള പ്രവര്‍ത്തനങ്ങള്‍ എഴുതുക.
3. ഏതെങ്കിലും മുന്ന്‌ ഇന്‍പുട്ട്‌ ഉപകരണങ്ങളെക്കുറിച്ച്‌ ചുരുക്കി വിശദീകരിക്കുക.
4. സി.ആര്‍.ടി. (CRT) മോണിറ്ററും എല്‍.ഇ.ഡി. (LED) മോണിറ്ററും താരതമ്യം ചെയ്യുക
5. റാം, റോം എന്നിവ തമ്മിലുള്ള വ്ൃത്യാസം എഴുതുക
6. ഇ-വേസ്റ്റ്‌ നിര്‍മ്മാര്‍ജ്ജനം പട്ടികപ്പെടുത്തി വിശദീകരിക്കുക

7. ഹരിത കമ്പ്യൂട്ടിംഗ്‌ നടപ്പില്‍ വരുത്തുവാന്‍ ആവശ്യമായ ഘട്ടങ്ങളെക്കുറിച്ച്‌ സംശ്രഹി
ക്കുക

8. സായന്പ്രദായികമായി ചിട്ടപ്പെടുത്തിയ സോഫ്റ്റ്വെയര്‍ കൊണ്ടുദ്ദേശിക്കുന്നതെന്താണ്‌? ഉദാ

ഹരണം നല്‍കുക.
9. താഴ്‌ന്നതലത്തിലുള്ള ഭാഷകളും ഉയര്‍ന്നതലത്തിലുള്ള ഭാഷകളും വേര്‍തിരിച്ചെഴുതുക.
10. കമ്പൈലർ, ഇന്റര്‍പ്രിറ്റര്‍ എന്നിവ വേര്‍തിരിക്കുക
1. ഇലക്ട്രോണിക്‌ സ്പ്രെഡ്ഷീറ്റിന്റെ ഉപയോഗത്തെക്കുറിച്ച്‌ വിശദീകരിക്കുക
12. യൂട്ടിലിറ്റി സോഫ്റ്റ്വെയര്‍ എന്താണ്‌? രണ്ട്‌ ഉദാഹരണങ്ങള്‍ നല്‍കുക.

13. താഴെ കൊടുത്തിരിക്കുന്ന സോഫ്റ്റ്വെയറുകളെ ഓപ്പറേറ്റിംഗ്‌ സിസ്റ്റം, ആപ്ലിക്കേഷന്‍ പാ

ക്കേജ്‌, യൂട്ടിലിറ്റി പ്രോഗ്രാമുകള്‍ എന്നിങ്ങനെ തരംതിരിക്കുക
Linux, Tally, Winzip, MS-Word, Windows, MS-Excel
14. ഫ്രിീവെയറും ഷെയര്‍വെയറും വേര്‍തിരിക്കുക

15. സോഫ്റ്റ്വെയറുകള്‍ ഫ്രീയായും ഓപ്പണ്‍ സോഴ്‌സായും നിര്‍മ്മിക്കുമ്പോള്‍ ഉണ്ടായി

രിക്കേണ്ട നാല്‍ സ്വാതന്ത്ര്യങ്ങള്‍ ഏതെല്ലാമാണ്‌.

16. ഹ്യൂമണ്‍വെയര്‍ കൊണ്ടുദ്ദേശിക്കുന്നതെന്താണ്‌? ഏതെങ്കിലും രണ്ട്‌ ഉദാഹരണങ്ങള്‍
നല്‍കുക.
ഒന്നാം വര്‍ഷ കമ്പ്യൂട്ടര്‍ സയന്‍സ്‌ 3. കമ്പ്യൂട്ടര്‍ സിസ്റത്തിന്റെ ഘടകങ്ങള്‍

ഉപന്യാസ ചോദ്യങ്ങള്‍

1

നിത്യ ജീവിതത്തിലെ ഏതെങ്കിലും ഉദാഹരണം എടുത്ത്‌ ഡാറ്റ പ്രോസസ്സിങ്ങിന്റെ ഓരോ
ഘട്ടത്തിലെയും പ്രവര്‍ത്തനങ്ങള്‍ ചുരുക്കി വിവരിക്കുക.

ബ്ലോക്ക്‌ ഡയ്ഗ്രത്തിന്റെ സഹായത്തോടെ, കമ്പ്യൂട്ടറിന്റെ പ്രവര്‍ത്തനഘടകങ്ങളെക്കുറിച്ച്‌
വിശദീകരിക്കുക.

സെന്റ്രല്‍ പ്രോസസ്സിങ്ങ്‌ യൂണിറ്റിനെക്കുറിച്ച്‌ വിശദമായി വിവരിക്കുക.
വിവിധതരത്തിലുള്ള മെമ്മറിയെക്കുറിച്ച്‌ ചുരുക്കി വിവരിക്കുക.
പ്രിന്ററിന്റെ വര്‍ഗ്ഗീകരണത്തെക്കുറിച്ച്‌ വിശദീകരിക്കുക.

നമ്മുടെ ആരോഗ്യത്തിനും പരിസ്ഥിതിക്കും ഇ-വേസ്റ്റ്‌ ആപല്‍ക്കരമാണ്‌. പ്രസ്താവന
ന്യായീകരിക്കുക. ഇ-വേസ്റ്റ്‌ നിര്‍മ്മാര്‍ജ്ജനത്തിന്‌ പൊതുവായി ഉപയോഗിക്കുന്ന രീതി
കള്‍ പട്ടികപ്പെടുത്തി വിശദമാക്കുക.

ഹരിത കമ്പ്യൂട്ടിങ്‌ നിര്‍വ്വചിക്കുക. നിങ്ങള്‍ക്ക്‌ സാധ്യമാകുന്ന രീതിയില്‍ ഹരിത കമ്പ്യൂട്ടിം
ങ്ങിന്റെ പ്രോത്സാഹനത്തിനുള്ള ആശയങ്ങള്‍ വിശദമാക്കുക.

സോഫ്‌റ്റ്വെയറിന്റെ വിവിധ വിഭാഗങ്ങള്‍ പട്ടികപ്പെടുത്തി വിശദീകരിക്കുക.
വിവിധ തരത്തിലുള്ള യൂട്ടിലിറ്റി സോഫ്റ്റ്വെയറുകളുടെ ഉപയോഗം വിശദീകരിക്കുക

ഓപ്പറേറ്റിങ്‌ സിസ്റ്റം നിര്‍വ്വചിക്കുക. ഓപ്പറേറ്റിംഗ്‌ സിസ്റ്റത്തിന്റെ പ്രധാന ധര്‍മ്മങ്ങള്‍ പട്ടിക
പ്പെടുത്തി വിശദമാക്കുക.

പൊതുവായ പ്രവര്‍ത്തനങ്ങള്‍ക്കുള്ള ആപ്ലിക്കേഷന്‍ സോഫ്റ്റ്വെയര്‍ ഉദാഹരണ സഹിതം
വിശദമാക്കുക.

ഫ്രീവെയറും ഷെയര്‍വെയറും താരതമ്യം ചെയ്യുക.
പ്രധാന ആശയങ്ങള്‍

൭൫ കസ്പ്യുട്ടറുകളുടെ സഹായത്തോടെയുള്ള

പ്രശ്ന പരിഹാരം

൭ പ്രശ്ന പരിഹാരത്തിനുള്ള സമീപനങ്ങള്‍

0 ടോപ്‌ ഡണ്‍ രൂപകല്പന
0 ബോട്ടം അപ്‌ രുപക്ല്പന
൭ പ്രോഗ്രാമിങ്ങിലെ വിവിധ ഘട്ടങ്ങള്‍

0 പ്രശ്നം തിരിച്ചറിയല്‍ (Problem

Identification)
0 അല്‍ഗഥോരിതങ്ങളും

ഫ്ളോച്ചാര്‍ട്ടുകളും തയാറാക്കല്‍

(Preparing algorithms and
Flowcharts)

0 പ്രോഗ്രാം കോഡിങ്‌ (Program
Coding)

0 പരിദാഷ (Translation)

0 ഡിീബദ്റിങ്‌ (Debugging)

0 പ്രവര്‍ത്തനവും പരീക്ഷണവും
(Execution and Testing)

0 വിവരണം തയാറാക്കല്‍
(Documentation)

© അല്‍ഗോരിതങ്ങളുടെ പ്രകടനം
വിലയിരുത്തല്‍

ദപ്രാഗ്രാമിങ്ങിന്റെ തത്വങ്ങളും

(ald 212൮, jal JIA 50

ഡാറ്റാ പ്രോസസ്സിങ്‌ എന്ന ആശയവും, അതില്‍ കമ്പ്യൂട്ടറു
കള്‍ക്കുള്ള പങ്കും നാം പഠിച്ചിട്ടുണ്ട്‌. ഹാര്‍ഡ്വെയര്‍,
സോഫ്റ്റ്വെയര്‍, ഉപയോക്താക്കള്‍ എന്നിവ അടങ്ങുന്ന ഒരു
സംവിധാനം എന്ന നിലയിലും ഈ ഘടകങ്ങളെല്ലാം മുന്‍
അധ്യായത്തില്‍ നാം വിശദമായി ചര്‍ച്ച ചെയ്തിട്ടുണ്ട്‌. സോ
ഫ്ട്വെയറിന്റെ നിര്‍വചനം നമുക്ക്‌ ഓര്‍ത്തെടുത്ത്‌ നോ
ക്കാം. ലളിതമായ രീതിയില്‍ പറഞ്ഞാല്‍, കമ്പ്യൂട്ടര്‍ ഉപ
യോഗിച്ച്‌ പ്രശ്നങ്ങള്‍ പരിഹരിക്കുന്നതിനുള്ള പ്രോഗ്രാ
മുകളുടെ ശേഖരമാണ്‌ സോഫ്‌റ്റ്‌വെയര്‍. കമ്പ്യൂട്ടറിന്‌
സ്വന്തമായി ഒന്നും ചെയ്യാനുള്ള കഴിവില്ലെന്ന്‌ നമുക്കറിയാവു
ന്നതാണ്‌. ഒരു ജോലി നിര്‍വഹിക്കണമെങ്കില്‍ വ്യക്തമായ
നിര്‍ദേശങ്ങള്‍ കമ്പ്യൂട്ടറിന്‌ ആവശ്യമാണ്‌. ആയതിനാല്‍
ഒരു പ്രശ്ന പരിഹാരത്തിന്‌ കമ്പ്യൂട്ടര്‍ നിര്‍വഹിക്കേണ്ട
നിര്‍ദേശങ്ങളുടെ ക്രമം വ്യക്തമാക്കേണ്ടത്‌ അത്യാവശ്യ
മാണ്‌. ഇത്തരത്തില്‍ കമ്പ്യൂട്ടറിന്‌ മനസ്സിലാകുന്ന ഒരു
ഭാഷയില്‍ എഴുതിയിരിക്കുന്ന, ക്രമത്തിലുള്ള നിര്‍ദേശങ്ങള്‍
“കമ്പ്യൂട്ടര്‍ പ്രോഗ്ഗാം” എന്ന പേരില്‍ അറിയപ്പെടുന്നു.
കമ്പ്യൂട്ടര്‍ പ്രോഗ്രാം എഴുതുക എന്നത്‌ ഒരു വെല്ലുവിളിയാണ്‌.
എന്നിരുന്നാലും പ്രോഗ്രാമിങ്ങിന്റെ വിവിധ ഘട്ടങ്ങളും
പ്രശ്നപരിഹാരസാങ്കേതികത്വ ആശയങ്ങളും ആര്‍ജിച്ചു
കൊണ്ട്‌ നമുക്ക്‌ അതിനായി ശ്രമിക്കാം.

4.1 കന്തട്ടനുകള്‍ ഉപയോഗിച്ചുള്ള പ്രശ്നപരിഹാരം

(Problem solving using computers)

കമ്പ്യൂട്ടറിലേക്ക്‌ നമ്മള്‍ നിര്‍ദേശങ്ങള്‍ നല്‍കിയാല്‍ മാത്രമെ
അതിനു പ്രശ്നങ്ങള്‍ പരിഹരിക്കാന്‍ കഴിയുകയുള്ളൂ. നിര്‍ദേ
ശങ്ങളില്‍ അടങ്ങിയിരിക്കുന്ന ക്രിയകള്‍ മനസ്സിലായാല്‍
അതിനനുസരിച്ച്‌ കമ്പ്യൂട്ടര്‍ പ്രവര്‍ത്തിക്കും. നിര്‍ദേശം
(Instruction) ഒരു ക്രിയാധിഷ്ഠിത പ്രസ്താവനയാണ്‌. ഏതു
പ്രവൃത്തിയാണ്‌ നിര്‍വഹിക്കേണ്ടത്‌ എന്ന്‌ കംപ്യൂട്ടറിനോട്‌
അത്‌ പറയുന്നു. കൃത്യതയോടും സൂക്ഷ്മതയോടും കൂടി
ചെയ്യേണ്ട പ്രവൃത്തി വ്യക്തമാക്കിയാല്‍ മാത്രമേ ഒരു
നിര്‍ദേശത്തെ കമ്പ്യൂട്ടറിനു നിര്‍വഹിക്കാന്‍ കഴിയുകയുള്ളു.

"\\system_04_sreeja\Higher Secondary Translation\O7 Computer Science XI\Computer Science Part I
Final\PART_I\Unit_04\Unit_04 malayalam.pmd"
4. പ്രോഗ്രാമിന്റെ തത്വങ്ങളും പ്രശ്നപരിഹാരവും

) ഒന്നാം വര്‍ഷ കമ്പ്യുട്ടര്‍ സയന്‍സ്‌

പ്രശ്നപരിഹാരത്തിനായി പ്രോഗ്രാമര്‍മാര്‍ ഒരു പ്രത്യേക ക്രമത്തില്‍ നിര്‍ദേശങ്ങള്‍ എഴുതുന്നു
എന്ന്‌ മുന്‍ അധ്യായത്തില്‍ നാം പഠിച്ചിട്ടുണ്ട്‌. പ്രോഗ്രാം വികസിപ്പിക്കുകയും കമ്പ്യൂട്ടറില്‍
സ്ഥിരമായി സൂക്ഷിക്കുകയും ചെയ്തു കഴിഞ്ഞാല്‍ നമുക്ക്‌ ആവശ്യാനുസരണം അവ
പ്രവര്‍ത്തിപ്പിക്കാന്‍ കമ്പ്യൂട്ടറിനോട്‌ ആവശ്യപ്പെടാം

കമ്പ്യൂട്ടറിനു സാമാന്യബുദ്ധിയോ അന്തര്‍ജ്ഞാനമോ ഇല്ലാത്തതിനാല്‍ ഒരു പ്രോഗ്രാം രൂപകല്പന
ചെയ്യുമ്പോള്‍ പ്രശ്‌ന പരിഹാരത്തിന്റെ യുക്തിയും നിര്‍ദേശങ്ങളുടെ ഘടനയും വൃക്തമായി നാം
മനസ്സിലാക്കിയിരിക്കണം. മനുഷ്യരായ നാം അനുഭവങ്ങളുടെ അടിസ്ഥാനത്തില്‍ വിഷയാധി
ഷ്ഠിതവും വൈകാരികവുമായ പരിഗണനകള്‍ക്കനുസരിച്ച്‌, തീരുമാനങ്ങള്‍ കൈക്കൊള്ളുന്നു.
അത്തരം മൂല്യാധിഷ്ഠിത വിധിന്യായങ്ങള്‍ പലപ്പോഴും സാമാന്യബോധത്തെ ആശ്രയിച്ചിട്ടായിരിക്കും.
ഇതിനു വിരുദ്ധമായി, ഒരു കമ്പ്യൂട്ടറിന്‌ വികാരര്പകടനമോ സാമാന്യബുദ്ധിയോ ഇല്ല. അതുകൊ
ണ്ടാണ്‌ കമ്പ്യൂട്ടറിന്‌ സ്വന്തമായ ബുദ്ധിവൈഭവം ഇല്ല എന്നു നാം പറയുന്നത്‌.

ഒരു വിധത്തില്‍ പറഞ്ഞാല്‍, കമ്പ്യൂട്ടറിനെ ഒരു “അനുസരണയുള്ള ഭൃത്യന്‍” ആയി കണക്കാക്കാം.
“സാമാന്യബോധം” ഉപയോഗിക്കാതെയുള്ള അനുസരണശീലം പലപ്പോഴും അലോസരപ്പെടുത്തു
ന്നതും ഫലമില്ലാത്തതുമാകുന്നു.ഉദാഹരണത്തിന്‌, “തപാല്‍ ഓഫീസില്‍ പോയി പത്ത്‌ 5 രൂപ
സ്റ്റാമ്പുകള്‍ വാങ്ങുക”. എന്ന്‌ നിര്‍ദേശിച്ച്‌ തന്റെ അനുസരണയുള്ള ഭൃത്യനെ തപാല്‍ ഓഫീസിലേക്ക്‌
യജമാനന്‍ അയച്ചു എന്ന്‌ കരുതുക. ഭൃത്യന്‍ കാശുമായി തപാല്‍ ഓഫീസില്‍ പോയിട്ട്‌ ദീര്‍ഘ
നേരമായും തിരികെ വരുന്നില്ല. ചിന്താകുലനായ യജമാനന്‍ ഭൃത്യനെ അന്വേഷിച്ചു തപാല്‍
ഓഫീസിലെത്തുമ്പോള്‍ കാണുന്നത്‌ സ്റ്റാമ്പുകളുമായി നില്‍ക്കുന്ന ഭൃത്യനെയാണ്‌.കോപിഷ്ഠനായ
യജമാനന്‍ ഭൃത്യനോട്‌ കാരണം അന്വേഷിക്കുമ്പോള്‍, തന്നോട്‌ പത്തു 5 രൂപ സ്റ്റാമ്പുകള്‍ വാങ്ങു
വാന്‍ മാത്രമേ കല്‍പിച്ചിട്ടുള്ളൂു എന്നും, അവയുമായി തിരികെ വരാന്‍ നിര്‍ദേശിച്ചിട്ടില്ല എന്നുമുള്ള
മറുപടിയാണ്‌ ഭൃത്യനില്‍ നിന്ന്‌ ലഭിക്കുന്നത്‌. .

4.2 പ്ര്നപരിഹാരത്തിലെ സമീപനങ്ങള്‍
(Approaches in problem solving)

ഒരു പ്രശ്നം വൃത്യസ്ത രീതികളിലൂടെ പരിഹരിക്കാവുന്നതാണ്‌. സമീപനം പോലും വ്യത്യ
സ്തമായിരിക്കാം. നമ്മുടെ ദൈനംദിന ജീവിതത്തില്‍,അസുഖം ബാധിക്കുമ്പോള്‍ നാം ഒരു
അലോപ്പതി, ആയൂര്‍വേദം അല്ലെങ്കില്‍ ഹോമിയോപ്പതി ചികിത്സകനെ സമീപിച്ച്‌ വൈദ്യചികിത്സ
തേടുന്നു. ഒരേ രോഗമാണ്‌ ചികിത്സിക്കുന്നതെങ്കിലും ഇവരില്‍ ഓരോരുത്തരുടേയും സമീപനങ്ങള്‍
വ്ൃയത്യസ്തമായിരിക്കും. അതു പോലെ പ്രശ്നപരിഹാരത്തിന്‌ വ്യത്യസ്ത സമീപനങ്ങള്‍ ഉപയോ
ഗിക്കുന്നു. പ്രശ്നപരിഹാരത്തിനുള്ള പ്രശസ്തമായ രണ്ടു രൂപകല്‍പ്പനാ രീതികള്‍ നമുക്ക്‌ പരിച
യപ്പെടാം ടോപ്‌ ഡൌണ്‍ (Top Down) രൂപകല്പനയും ബോട്ടം അപ്‌ (Bottom Up) രൂപകല്പനയും

4.2.1 ടോപ്‌ ഡൌണ്‍ രൂപകല്പന

ചിത്രം 4.1 നോക്കുക. ഈ ചിത്രം വരയ്ക്കണമെന്ന്‌ നിങ്ങളോട്‌ ആവ
ശ്യപ്പെടുകയാണെങ്കില്‍, എങ്ങനെയാണ്‌ നിങ്ങള്‍ അത്‌ വരയ്ക്കുക?
ഒരു പക്ഷേ താഴെ പറയുന്ന പ്രകാരമായിരിക്കാം :

1. വീടിന്റെ രേഖാചിത്രം വരയ്ക്കുക. HH HH
2. ചിമ്മിനി വരയ്ക്കുക
3. വാതില്‍ വരയ്ക്കുക

4. ജാലകങ്ങള്‍ വരയ്ക്കുക
ചിത്രം 4.7 ഒരു വീടിന്റെ ഖാചി(തം

4. പ്രോഗ്രാമിന്റെ തത്വങ്ങളും പ്രശ്നപരിഹാരവും

© ഒന്നാം വര്‍ഷ കമ്പ്യൂട്ടര്‍ സയന്‍സ്‌

മുകളില്‍ വിവരിച്ചു നടപടിക്രമങ്ങളെ ഇപ്രകാരം സംഗ്രഹിക്കാം :

ഘട്ടം 3 ലെ വാതില്‍ വരക്കുമ്പോഴുള്ള അത്‌ പോലെ താഴെ പറയുന്ന പ്രകാരം
നടപടിക്രമം താഴെ കൊടുത്തിരിക്കുന്നു : ജാലകങ്ങള്‍ വരയ്ക്കാം

3.1 വാതിലിന്റെ ബാഹ്യരേഖ 4.1 ജാലകത്തിന്റെ ബാഹ്യരേഖ

3.2 ഷേഡിംഗ്‌ 4.2 ഷേഡിംഗ്‌

3.3 വാതിലിന്റെ പിടി 4.3 തിരശ്ചീനവും ലംബവുമായ വരകള്‍

തന്നിരിക്കുന്ന പ്രശ്നത്തെ (ഇവിടെ ചിത്രം വരയ്ക്കുക എന്നത്‌) ചെറിയ ക്രിയകളായി (Task )
വിഭജിച്ചിരിക്കുന്നു. അതുപ്രകാരം ഈ പ്രശ്നം പരിഹരിക്കാന്‍ നാജ്‌ പ്രവര്‍ത്തനങ്ങള്‍ കണ്ടെ
ത്തിയിട്ടുണ്ട്‌.ഇവയില്‍ ചിലത്‌ (ഇവിടെ വാതിലുകളും ജാലകങ്ങളും വരയ്ക്കുന്നത്‌) വീണ്ടും
വിഭജിച്ചിട്ടുണ്ട്‌. അങ്ങനെ സങ്കീര്‍ണമായ ഒരു പ്രശ്നം,വിവിധ ക്രിയകളായി വിഭജിച്ച്‌, ഓരോ
ക്രിയയെയും ലളിതമായ പ്രവര്‍ത്തനങ്ങളിലൂടെ പ്രാവര്‍ത്തികമാക്കാന്‍ കഴിയും. ഈ പ്രശ്ന
പരിഹാര രീതി ടോപ്‌ ഡൌണ്‍ രൂപകല്‍പന (Top Down Design ) എന്ന്‌ അറിയപ്പെടുന്നു.

ഏറ്റവും ഫലവത്താണെന്നു തെളിയിക്കപ്പെട്ട പ്രോ്രഗാമിങ്‌ സമീപനങ്ങളിലൊന്നാണിത്‌. ചിത്രം
4.2 ല്‍ കാണിച്ചിരിക്കുന്നതുപോലെ, ടോപ്‌ ഡൌണ്‍ രൂപകല്പന എന്നത്‌ തന്നിരിക്കുന്ന നടപടി
ക്രമത്തെ അല്ലെങ്കില്‍ കൃത്യത്തെ ഘടകങ്ങള്‍ ആക്കുകയും ഏറ്റവും അടിസ്ഥാനപരമായ
ക്രിയകള്‍ അടങ്ങിയ ഘടകം ലഭിക്കുന്നത്‌ വരെ ഓരോ ഘടകത്തെയും വീണ്ടും വിഭജിക്കുകയും
ചെയ്യുന്നു പ്രക്രിയയാണ്‌. ഒരു പൊതുവായ പ്രശ്നം മുകളിലെ തലം മുതല്‍ ആരംഭിക്കുകയും
അതിലെ ഓരോ ഉപവിഭാഗത്തിനും പ്രത്യേക പരിഹാരങ്ങള്‍ രൂപകല്പന നടത്തുകയും ചെയ്യു
ന്നതിനാല്‍ ടോപ്‌ ഡൌണ്‍ വിഭജനം എന്ന പേരിലും ഇത്‌ അറിയപ്പെടുന്നു. തന്നിരിക്കുന്ന പ്രധാന
പ്രശ്നത്തിന്‌ ഫലപ്രദമായ പരിഹാരം ലഭിക്കണമെങ്കില്‍ ഓരോ ഉപ്പ്രശ്നവും മറ്റൊന്നില്‍ നിന്ന്‌
സ്വത്രന്രമായിരിക്കണം. അപ്രകാരമായാല്‍ ഓരോ ഉപ്പ്രശ്നവും സ്വതന്ത്രമായി പരിഹരിക്കാനും
പരിശോധിക്കാനും സാധിക്കും.

ഉപപ്രോഗ്രാം 2 ഉപപ്രോര്‍്രാം 3

ചിതം 4.2: BO} പ്രശ്നത്തെ വിഭജിക്കുന്നു.

വിഭജനത്തിലൂടെ പ്രശ്നം പരിഹരിക്കുന്നത്‌ കൊണ്ടുള്ള പ്രയോജനങ്ങള്‍ താഴെപ്പറയുന്നവയാണ്‌:

൭ പ്രശ്നത്തെ വിഭജിക്കുന്നതു കൊണ്ട്‌ ഓരോ ഭാഗത്തും എന്ത്‌ പ്രവൃത്തിയാണ്‌ ചെയ്യേണ്ട
തെന്നതിനെക്കുറിച്ച്‌ ഒരു ധാരണ ലഭിക്കാന്‍ നമ്മെ സഹായിക്കുന്നു.

4. പ്രോഗ്രാമിന്റെ തത്വങ്ങളും പ്രശ്നപരിഹാരവും

ന്നൊം വര്‍ഷ കമ്പ്യൂട്ടര്‍ സയന്‍സ്‌

© ഓരോ ഘട്ടത്തിലും തിരിച്ചറിയുന്ന പുതിയ ഉപ്പ്രശ്നങ്ങളില്‍ സങ്കീര്‍ണത കുറവായതിനാല്‍
അതിന്റെ പ്രശ്ന പരിഹാരം എളുപ്പത്തില്‍ ലഭിക്കുന്നു.

൭൫ പ്രശ്‌ന പരിഹാരത്തിലെ ചില ഭാഗങ്ങള്‍ പുനരുപയോഗിക്കാന്‍ കഴിയുന്നതായിരിക്കാം.

e പ്രശ്നവിഭജനത്തിലൂടെ ഒന്നിലധികം ആളുകള്‍ക്ക്‌ ഒരേ സമയം പ്രശ്ന പരിഹാരത്തില്‍
പങ്കാളികളാകാന്‍ സാധിക്കുന്നു.

4.2.2 ബോട്ടം അപ്‌ രൂപകല്പന (Bottom Up Design)

ഒരു വീടിന്റെ നിര്‍മ്മാണ്രപവര്‍ത്തനം പരിഗണിക്കുക. ടോപ്‌ ഡൌണ്‍ രൂപകലപനയല്ല മറിച്ചു
ബോട്ടം അപ്‌ രൂപകല്പനയാണ്‌ നമ്മള്‍ ഇവിടെ പിന്തുടരുന്നത്‌. അസ്ഥിവാരമിടുക എന്നത്‌
ആദ്യത്തെ പ്രവൃത്തിയും മേല്‍ക്കൂര പണിയുക എന്നത്‌ അവസാനത്തെ പ്രവൃത്തിയുമാണ്‌.
ഇവിടെയും പ്രധാന പ്രവര്‍ത്തനത്തെ ഉപ്ര്പവര്‍ത്തനങ്ങളായി വിഭജനം നടത്തുന്നു. ഇവയില്‍
ത്തന്നെ ചില പ്രവര്‍ത്തനങ്ങള്‍ പൂര്‍ത്തിയായാല്‍ മാത്രമേ മറ്റു ര്രവര്‍ത്തനങ്ങള്‍ നടത്തുവാന്‍
കഴിയൂ. എന്നാല്‍ താരെത്തട്ടിലുള്ള എല്ലാ പ്രവര്‍ത്തനങ്ങളും പൂര്‍ത്തിയായാല്‍ മാത്രമേ പ്രധാന
പ്രവര്‍ത്തനമായ മേല്‍ക്കൂര പണിയല്‍ സാധ്യമാവുകയുള്ളൂ.

ഇതുപോലെ പ്രോഗ്ഗാമിങിലും ആകെയുള്ള നടപടിക്രമങ്ങളെ വിവിധ ഘടകങ്ങളായി
വിഭജിക്കുകയും, ഏറ്റവും താഴ്‌ന്ന തലത്തിലുള്ള ഖണ്ഡം ലഭിക്കുന്നത്‌ വരെ ഈ ഘടകങ്ങള്‍
പുനര്‍വിഭജിക്കുകയും ചെയ്യുന്നു. ഏറ്റവും താഴ്ന്ന ഘടകം മുതല്‍ പ്രശ്ന പരിഹാരം ആരംഭി
ക്കുന്നു. പ്രധാന പ്രശ്നത്തിനുള്ള പരിഹാരം, ഉപവിഭാഗങ്ങളുടെ പരിഹാരത്തിനു ശേഷം മാത്രമേ
സാധ്യമാകു.ഈ രീതിയിലുള്ള സമീപനത്തെ പ്രശ്ന പരിഹാരത്തിനുള്ള ബോട്ടം അപ്പ്‌ രൂപക
ല്പന എന്ന്‌ പറയുന്നു. മുന്‍പ്‌ പറഞ്ഞത്‌ പോലെ ഇവിടെയും ഒരു ഉപ്രപശ്നം മറ്റൊരു Dallas

ശ്നത്തില്‍ നിന്ന്‌ സ്വതന്ത്രമായിരിക്കുന്നതാണ്‌ അഭിലഷണീയം.

എല്ലാ വര്‍ഷവും നമ്മുടെ സ്കുളുകളില്‍്‌ യുവജനോത്സവം നടത്മാറുങണ്ട്‌. ഈ
അവസരത്തില്‍, സാധാരണഗതിയിതി ചുമതലകളും ഉത്തരവാദിത്വങ്ങളും

വിഭജിച്ച്‌ നത്കുന്നു. യുവജനോത്വവത്തിന്റെ വിജയകരമായ നടത്തിച്ചിന്‌
എങ്ങനെയാണ്‌ ഓരോ (്രവരീത്തനവും വിഭജിക്കുകയും (lado!

കമാക്കുകയും ചെയ്യുന്നതെന്ന്‌ ചരിച്ച ചെയ്യുക.

4.3 പ്രോര്രാമിങിലെ വിവിധ ഘട്ടങ്ങള്‍ (Phases in programming)

കമ്പ്യൂട്ടര്‍ ഉപയോഗിച്ച്‌ പ്രശ്നം പരിഹരിക്കുക എന്നത്‌ ഒരു വലിയ വെല്ലുവിളിയാണ്‌ എന്ന്‌ നാം
കണ്ടുകഴിഞ്ഞു. ഇതിനായി ചിട്ടയായി ഒരു സമീപനം അത്ൃന്താപേക്ഷിതമാണ്‌. ആവശ്യമായ
പ്രോഗ്രാമുകള്‍ നിര്‍മ്മിക്കുന്നതിന്‌ വിവിധ ഘട്ടങ്ങളിലൂടെ കടന്നുപോകേണ്ടതുണ്ട്‌. പ്രശ്ന പരിഹാ
രത്തിനുള്ള ജന്‍മസിദ്ധമായ കഴിവ്‌ നമുക്കുണ്ടെങ്കിലും അത്‌ ഫലപ്രദമായി ഉപയോഗപ്പെടുത്ത
ണമെങ്കില്‍ പ്രശ്നം പരിഹരിക്കുന്നതിന്‌ ഉതകുന്ന രീതിയിലുള്ള ചിന്തയും, ആസുത്രണവും
യുക്തിസഹമായ ന്യായവാദവും വളര്‍ത്തിയെടുക്കേണ്ടതുണ്ട്‌. താഴെപ്പറയുന്ന ഘട്ടങ്ങള്‍ പിന്തു
ടര്‍ന്ന്‌ നമുക്കിത്‌ നേടിയെടുക്കാവുന്നതാണ്‌.
4. പ്രോഗ്രാമിന്റെ തത്വങ്ങളും പ്രശ്നപരിഹാരവും

ഒന്നാം വര്‍ഷ കമ്പ്യൂട്ടര്‍ സയന്‍സ്‌

1 പ്രശ്നം തിരിച്ചറിയല്‍ (Problem

Identification)

1]

2. അല്‍ഗോരിതങ്ങളും ഫ്ളോച്ചാര്‍ട്ടു അല്‍ോരിതങ്ങളും

കളും തയാറാക്കല്‍ (Preparing ഫ്ളോച്ചാര്‍ട്ടുകളും

algorithms and Flowcharts)
3. പ്രോഗ്രാമിങ്‌ ഭാഷ ഉപയോഗിച്ച്‌ പ്രോഗ്രാം കോഡ്‌
പ്രോഗ്രാം കോഡ്‌ ചെയ്യല്‍ (Coding the നി
Program using Programming Language)

4. പരിഭാഷ (Translation) പരിഭാഷ

5. ഡിീബഗ്ലഗിങ്‌ (Debugging)

പ്രവര്‍ത്തനവും പരീക്ഷ 7,

ണവും

6. പ്രവര്‍ത്തനവും പരീക്ഷണവും
(Execution and Testing)

7. വിവരണം തയ്യാറാക്കുക വിവരണം തയാറാക്കല്‍

(Documentation)

ചിത്രം 4.3 (പഗഗ്രാഥിങ്ങിലെ വിവിഥ ഘട്ടങ്ങള്‍
പ്രോഗാമിങിന്റെ വിവിധ ഘട്ടങ്ങളില്‍
ചെയ്യുന്ന പ്രവര്‍ത്തനങ്ങളുടെ ക്രമം ചിത്രം 4.3 ല്‍ കാണിച്ചിരിക്കുന്നു. ഡീബഗ്ഗിങ്‌ ഘട്ടം പരിഭാ
ഷയുമായും നിര്‍വഹണവുമായും ബന്ധപ്പെട്ടിരിക്കുന്നു എന്നത്‌ ശ്രദ്ധിക്കുക. മേല്‍പ്പറഞ്ഞ ഏഴ്‌
ഘട്ടങ്ങളില്‍ ഉള്‍പ്പെട്ടിരിക്കുന്ന പ്രവര്‍ത്തനങ്ങള്‍ താഴെ വിശദീകരിക്കുന്നു.

4.3.1 പ്രശനം തിരിച്ചറിയല്‍ (Problem Identification)

നിങ്ങള്‍ക്കു വയറ്‌ വേദന അനുഭവപ്പെടുന്നതായി കരുതുക. ഈ പ്രശ്നം ഒരു ഡോക്ടര്‍ക്കു
പരിഹരിക്കാന്‍ കഴിയുമെന്ന്‌ നിങ്ങള്‍ക്കറിയാം. വേദന തുടങ്ങിയ സമയം,മുന്‍പ്‌ ഇത്‌ പോലെ
വേദന അനുഭവപ്പെട്ട സാഹചര്യം, ഭക്ഷണരീതി എന്നിവയെക്കുറിച്ചുള്ള ചില ചോദ്യങ്ങള്‍ ഡോക്ടര്‍
ചോദിക്കുകയും, സ്‌റ്റെതസ്‌കോപ്പ്‌, എക്‌സ്‌റേ അല്ലെങ്കില്‍ സ്‌കാന്‍ എന്നിവ ഉപയോഗിച്ച്‌ നിങ്ങളുടെ
ശരീരത്തിന്റെ ചില ഭാഗങ്ങള്‍ പരിശോധിക്കുകയും ചെയ്യുന്നു.ഇവയെല്ലാം രോഗനിര്‍ണയത്തിന്റെ
ഭാഗമാണ്‌. ഈ നടപടിക്രമങ്ങള്‍ക്ക്‌ ശേഷം, ഡോക്ര്‍ പ്രശനം തിരിച്ചറിഞ്ഞ്‌ ചില വൈദ്യശാസ്ത്ര
പദങ്ങള്‍ ഉപയോഗിച്ച്‌ നിങ്ങളെ ബോധ്യപ്പെടുത്തുന്നു.അടുത്ത ഘട്ടം ഈ പ്രശ്നത്തിനുള്ള
പരിഹാര നടപടികള്‍ തയാറാക്കലാണ്‌. അതിനെ മരുന്ന്‌ കുറിപ്പ്‌ എന്ന്‌ പറയുന്നു.

ഇതില്‍ നിന്നും പ്രശ്ന പരിഹാരത്തിനുള്ള നടപടികള്‍ സ്വീകരിക്കുന്നതിന്‌ മുമ്പ്‌ പ്രശ്നം വിശകലനം
ചെയ്യേണ്ടത്‌ അത്യാവശ്യമാണ്‌ എന്ന്‌ വൃക്തമാകുന്നു. ഈ ഘട്ടത്തില്‍ നിങ്ങള്‍ക്ക്‌ നടപ്പിലാക്കേണ്ട
പ്രവര്‍ത്തനത്തിന്‌ ആവശ്യമായ ഡാറ്റ, അതിന്റെ ഇനം, അളവ്‌, ഉപയോഗിക്കേണ്ട സുര്രവാക്യം,
ഉള്‍പ്പെട്ടിരിക്കുന്ന പ്രവര്‍ത്തനങ്ങള്‍ ലഭിക്കേണ്ട ഓട്ട്പുട്ട്‌ എന്നിവ തിരിച്ചറിയാന്‍ സാധിക്കുന്നു.
പ്രശ്നം വ്യക്തമായി പഠിക്കുകയും, പ്രശ്നപരിഹാരത്തിനാവശ്യമായ കൃത്യങ്ങളുടെ ക്രമം
സംബന്ധിച്ച്‌ നമുക്ക്‌ ബോധ്യമാകുകയും ചെയ്താല്‍, അടുത്ത ഘട്ടത്തിലേക്ക്‌ പ്രവേശിക്കാം.
പ്രോഗ്രാമറുടെ (പ്രശ്ന പരിഹാരകന്‍) കാര്യക്ഷമത പരമാവധി ഉപയോഗപ്പെടുത്തേണ്ടതിനാല്‍
തീര്‍ച്ചയായും ഇത്‌ ഒരു വെല്ലുവിളി നിറഞ്ഞ ഘട്ടമാണ്‌.
4. പ്രോഗ്രാമിന്റെ തത്വങ്ങളും പ്രശ്നപരിഹാരവും

43.2 അല്‍ഗോരിതങ്ങളും ഫ്ളോച്ചാര്‍ട്ടുകളും (Algorithms and Flowcharts)

പ്രശ്നം തിരിച്ചറിഞ്ഞു കഴിഞ്ഞാല്‍ അത്‌ പരിഹരിക്കാന്‍ പടിപടിയായുള്ള നടപടിക്രമങ്ങള്‍

കൃത്യമായി വികസിപ്പിക്കേണ്ടത്‌ അത്യാവശ്യമാണ്‌. ഈ നടപടിക്രമം പുതിയതോ കമ്പ്യൂട്ടര്‍

മേഖലയ്ക്കുമാത്രം പരിമിതമായതോ അല്ല. കാലാകാലമായി ജീവിതത്തിന്റെ എല്ലാ മേഖലകളിലും

തുടര്‍ന്ന്‌ കൊണ്ടിരിക്കുന്ന ഒന്നാണിത്‌. നിത്യ ജീവിതത്തില്‍ നിന്നെടുത്ത അത്തരത്തിലുള്ള ഒരു

നടപടിക്രമം താഴെ വിവരിച്ചിരിക്കുന്നു. ഒരു മാസികയില്‍ നിന്നും എടുത്തിട്ടുള്ള ഓംലെറ്റ്‌

തയാറാക്കാനുള്ള പാചകക്കുറിപ്പാണിത്‌

ചേരുവകള്‍

മൂട്ട 2 എണ്ണം, ഉള്ളി 1 എണ്ണം (ചെറുതായി അരിഞ്ഞത്‌); പച്ച മുളക്‌ 2 (ചെറുതായി അരിഞ്ഞത്‌);
എണ്ണ 2 ടീ സ്പൂണ്‍, ഉപ്പ്‌ ഒരു നുള്ള്‌.

രിതി

ഘട്ടം 1:

ഘട്ടം 2:

ഘട്ടം 3:
ഘട്ടം 4:

ഘട്ടം 5:

ഘട്ടം 6:

ഘട്ടം 7:

ഹഥ്‌

കുരുമുളക്‌ പൊടി ചേര്‍ത്ത്‌ കഴിക്കാന്‍ പാകത്തിനുള്ള ഒരു ഓംലെറ്റ്‌

തയാര്‍.

മുകളില്‍ കൊടുത്ത പാചകകുറിപ്പിന്‌ താഴെപ്പറയുന്ന സവിശേ
ഷതകള്‍ ഉണ്ട്‌:

1 ഓാംലെറ്റ പാചകം ചെയ്യാന്‍ ആവശ്യമായ ചേരുവകളുടെ ഒരു

മൂട്ടകള്‍ പൊട്ടിച്ച്‌ ഒരു പാര്രത്തിലിട്ട്‌ നന്നായി ഇളക്കുക.
അരിഞ്ഞു വച്ച ഉള്ളി, പച്ചമുളക്‌, ഉപ്പ്‌ എന്നിവ മുട്ടയില്‍
ചേര്‍ത്തിളക്കുക.

അടുപ്പില്‍ ഒരു പാന്‍ വച്ച്‌ അടുപ്പു കത്തിക്കുക.

പാനില്‍ എണ്ണ ഒഴിച്ച്‌, ചൂടാകുന്നതുവരെ കാത്തിരിക്കുക.

ഘട്ടം 2 ല്‍ തയാറാക്കിയ മിശ്രിതം പാനില്‍ ഒഴിച്ച്‌ ഒരു
ഭാഗം പൊരിയുന്നത്‌ വരെ കാത്തിരിക്കുക.

മറിച്ചിട്ട്‌ മറുവശം നന്നായി പൊരിക്കുക.

കുറച്ച്‌ സെക്കന്‍ഡുകള്‍ക്ക്‌ ശേഷം ഇത്‌ എടുക്കുക.

പട്ടിക നിര്‍മിക്കുന്നതിലൂടെയാണ്‌ പ്രവര്‍ത്തനം ആരംഭിക്കുന്നത്‌. ത

ഈ ചേരുവകളെ ഇന്‍പുട്ടുകള്‍ എന്ന്‌ വിളിക്കാം.

2. ഇന്‍പുട്ടുകള്‍ ഉപയോഗിച്ചുള്ള പ്രവര്‍ത്തനത്തിന്‌ ആവശ്യമായ,
ക്രമത്തിലുള്ള നിര്‍ദേശങ്ങള്‍ നല്‍കുന്നു.

3. നിര്‍ദേശങ്ങള്‍ നടപ്പാക്കുന്നതിന്റെ ഫലമായി ചില ഓട്ടപുട്ടുകള്‍

(ഇവിടെ, ഓംലെറ്റ്‌) ലഭിക്കുന്നു.

4. പ്രോഗ്രാമിന്റെ തത്വങ്ങളും പ്രശ്നപരിഹാരവും

എന്നാല്‍ ഇന്‍പുട്ടുകള്‍ ഉപയോഗിച്ച്‌ പ്രവര്‍ത്തനങ്ങള്‍ക്കുള്ള നിര്‍ദേശങ്ങള്‍ കൃത്യമല്ല. അവ GUS
ക്തമാണ്‌. ഉദാഹരണത്തിന്‌, അഞ്ചാം ഘട്ടത്തില്‍ “ഒരു ഭാഗം പൊരിക്കുന്നത്‌”, ആറാം ഘട്ടത്തില്‍
“നന്നായി പൊരിക്കുക” തുടങ്ങിയ നിര്‍ദേശങ്ങളുടെ വ്യാഖ്യാനം വ്യക്തികള്‍ക്കനുസരിച്ചു വൃത്യാ
സപ്പെട്ടിരിക്കും. തന്മൂലം കൃത്യമായ നിര്‍ദേശങ്ങളും, സമാന ഇന്‍പുട്ടുകളുമായി ഒരേ പാചക
ക്കുറിപ്പ്‌ പിന്തുടരുന്ന വ്യത്യസ്ത വ്യക്തികള്‍ക്ക്‌, വലുപ്പം, ആകൃതി, രൂചി എന്നിവയ്ക്കനുസരിച്ച്‌
വൃത്യസ്ത ഓംലെറ്റ്‌കള്‍ ലഭിക്കുന്നു.

കമ്പ്യൂട്ടര്‍ ഉപയോഗിച്ചുള്ള പ്രശ്നങ്ങള്‍ പരിഹരിക്കുന്നതിനുള്ള നടപടികള്‍ എഴുതുമ്പോള്‍
മുകളില്‍ പറഞ്ഞ അവ്യക്തതകള്‍ ഒഴിവാക്കേണ്ടതാണ്‌.

a അല്‍ഗോരിതം (Algorithm)

അബു ജഅഫര്‍ മുഹമ്മദ്‌ ഇബ്നു മുസാ അല്‍ ഖവാറീസ്മി എന്ന
അറബി ഗണിതജ്ഞനാണ്‌ അല്‍ഗോരിതം എന്ന വാക്കിന്റെ ഉപ
ജ്ഞാതാവായി അറിയപ്പെടുന്നത്‌. അദ്ദേഹത്തിന്റെ പേരിന്റെ “അല്‍
ഖവാരിസിമി” എന്ന പദത്തില്‍ നിന്നാണ്‌ അല്‍ഗോരിതം എന്ന പേര്‍
ലഭിച്ചത്‌.കമ്പ്യൂട്ടര്‍ പദാവലിയില്‍ ഒരു പ്രശ്നം പരിഹരിക്കുന്നതിനുള്ള
ക്രമത്തിലുള്ള നിശ്ചിത നിര്‍ദേശങ്ങളെ അല്‍ഗോരിതം എന്നു നിര്‍വ
ചിക്കാവുന്നതാണ്‌. പ്രശ്നം പരിഹരിക്കാനുള്ള ഘട്ടംഘട്ടമായ നടപ
ടിക്രമാണ്‌ അല്‍ഗോരിതം. ഇതിലെ ഓരോ ഘട്ടവും ചെയ്യപ്പെടേണ്ട
നിശ്ചിതമായ കൃത്യത്തെ പ്രതിനിധീകരിക്കുന്നു. എന്നിരുന്നാലും,

ഒരു അല്‍ഗോരിതം ആകണമെങ്കില്‍, ക്രമത്തിലുള്ള നിര്‍ദേശങ്ങള്‍ക്ക്‌

താഴെപ്പറയുന്ന സവിശേഷതകള്‍ ഉണ്ടായിരിക്കേണ്ടതാണ്‌ : ചിത്രം 4.4 അബൂ ജഅഫര്‍
മുഹമ്മദ്‌ ഇബ്നു മുസാ അല്‍

(0 ഇന്‍പുട്ടുകള്‍ സ്വീകരിക്കുന്നതിനുള്ള നിര്‍ദേശം (നിര്‍ദേശങ്ങള്‍) ഖവാറീസ്മി (780 - 850)
കൊണ്ടായിരിക്കണം അതിന്റെ തുടക്കം. തുടര്‍ന്നുള്ള നിര്‍ദേശ
ങ്ങള്‍ വഴി ഈ ഇന്‍പുട്ട്കള്‍ക്ക്‌ മേല്‍ പ്രവര്‍ത്തനങ്ങള്‍ നടപ്പിലാക്കുന്നു. ചില സാഹചര്യ,
ങ്ങളില്‍, ഉപയോഗിക്കേണ്ട ഡാറ്റ പ്രശ്നത്തിനോടൊപ്പം തന്നെ നല്‍കിയിരിക്കും. അത്തരം
സാഹചര്യങ്ങളില്‍, അല്‍ഗോരിതത്തിന്റെ തുടക്കത്തില്‍ ഇന്‍പുട്ട്‌ സ്വീകരിക്കാനുള്ള
നിര്‍ദേശങ്ങള്‍ ഉണ്ടായിരിക്കുകയില്ല .

(0) ഡാറ്റയെ സൂചിപ്പിക്കാന്‍ വേരിയബിളുകള്‍ ഉപയോഗിക്കുക. ഇവിടെ വേരിയബിളുകള്‍
എന്നതു ഗണിതശാസ്ത്രത്തിലേതു പോലെ അക്ഷരങ്ങളും അക്കങ്ങളും അടങ്ങിയ
ഉപയോക്തൃ നിര്‍വചിത വാക്കുകളാണ്‌. ഡാറ്റ ഇന്‍പുട്ട്‌ ചെയ്യുന്നതിനും വിലകള്‍ /ഫലങ്ങള്‍
സംഭരിക്കുന്നതിനും വേരിയബിളുകള്‍ തീര്‍ച്ചയായും ഉപയോഗിക്കേണ്ടതാണ്‌.

(ii) ഓരോ നിര്‍ദേശവും കൃത്യവും സ്പഷ്ടവും ആയിരിക്കണം. മറ്റൊരു വിധത്തില്‍ പറഞ്ഞാല്‍,
നിര്‍ദേശങ്ങള്‍ അവൃക്തമായിരിക്കരുത്‌. മാതമല്ല അവ നടപ്പിലാക്കാന്‍ സാധ്യമായതു

മാകണം.

(iV) ഒരു വ്യക്തിക്ക്‌ പേപ്പറും പെന്‍സിലും ഉപയോഗിച്ച്‌ നിശ്ചിത സമയം കൊണ്ട്‌ ചെയ്തു
തീര്‍ക്കാവുന്ന തരത്തില്‍ അടിസ്ഥാനപരമായതായിരിക്കണം ഓരോ നിര്‍ദേശവും.
4. പ്രോഗ്രാമിന്റെ തത്വങ്ങളും പ്രശ്നപരിഹാരവും

ഒന്നാം വര്‍ഷ കമ്പ്യൂട്ടര്‍ സയന്‍സ്‌

(൯ അല്‍ഗോരിതത്തില്‍ പറഞ്ഞിരിക്കുന്ന എല്ലാ നടപടികളും ചെയ്യുവാനുള്ള സമയം
നിശ്ചിതമായിരിക്കണം.എന്തെന്നാല്‍ അല്‍ഗോരിതത്തിലെ ചില നിര്‍ദേശങ്ങള്‍ ആവര്‍ത്തിച്ചു
നിര്‍വഹിക്കേണ്ടവയായിരിക്കും.അത്തരത്തിലുള്ള ആവര്‍ത്തനങ്ങളുടെ എണ്ണം നിശ്ചിതമായി
രിക്കണം എന്നാണ്‌ ഇത്‌ സൂചിപ്പിക്കുന്നത്‌.

(Vi) അല്‍ഗോരിത്തില്‍ നല്‍കിയിരിക്കുന്ന നിര്‍ദേശങ്ങള്‍ നിര്‍വഹിച്ചാല്‍ പ്രതീക്ഷിച്ച ഫലം
(ഓട്ട്പുട്ട) ലഭിച്ചിരിക്കേണ്ടതാണ്‌ .

അല്‍ഗോരിതം സംബന്ധിച്ച ഉള്‍ക്കാഴ്ച നേടാന്‍ നമുക്ക്‌ ഒരു ലളിതമായ ഉദാഹരണം പരിഗ

ണിക്കാം. തന്നിരിക്കുന്ന മൂന്ന്‌ സംഖ്യകളുടെ ആകത്തുകയും (SUM) ശരാശരിയും (average)

"നമുക്ക്‌ കണ്ടുപിടിക്കണം.ഈ പ്രശ്നം പരിഹരിക്കാനുള്ള നടപടിക്രമം നമുക്ക്‌ താഴെ പറയും
പ്രകാരം എഴുതാം:

ഘട്ടം 1: DM സംഖ്യകള്‍ ഇന്‍പുട്ട്‌ ചെയ്യുക.

ഘട്ടം 2: ആകത്തുക ലഭിക്കുന്നതിന്‌ ഈ സംഖ്യകള്‍ കൂട്ടുക.

ഘട്ടം 3: ശരാശരി ലഭിക്കുന്നതിന്‌ ആകത്തുകയെ 3 കൊണ്ട്‌ ഹരിക്കുക.

ഘട്ടം 4: ആകത്തുകയും ശരാശരിയും പ്രിന്‍റ്‌ ചെയ്യുക.

ഇവിടെ നടപടിക്രമം ശരിയാണെങ്കിലും, ഒരു അല്‍ഗോരിതം തയാറാക്കുമ്പോള്‍, ഒരു അംഗീ

ALD ഘടന നമ്മള്‍ പിന്തുടരേണ്ടതുണ്ട്‌. മുകളില്‍ പറഞ്ഞ ല്രരകിയ ഒരു അല്‍ഗോരിതം രൂപ

ത്തില്‍ എങ്ങനെ എഴുതാം എന്ന്‌ നോക്കാം.

| eee

ഇന്‍പുട്ട്‌ ചെയ്യുന്ന സംഖ്യകള്‍ സ്വീകരിക്കാന്‍ A, B,C എന്ന വേരിയബിളുകള്‍ ഉപയോഗിക്കുക.
അതുപോലെ S ആകത്തുകയ്ക്കു വേണ്ടിയും, AvE ശരാശരിക്കു വേണ്ടിയുമുള്ള വേരിയബിളുകള്‍
ആക്കുക.

ഘട്ടം 1: ആരംഭിക്കുക.

ഘട്ടം 2: A,B,C ഇന്‍പുട്ട്‌ ചെയ്യുക.

ഘട്ടം 3: S=A+B+C.

ഘട്ടം 4: Avg =S/3.

ഘട്ടം 5: S, Avg പ്രിന്‍റ്‌ ചെയ്യുക.

ഘട്ടം 6: അവസാനിപ്പിക്കുക
താഴെ പറയുന്ന കാരണങ്ങളാല്‍ മുകളില്‍ പറഞ്ഞിരിക്കുന്ന നിര്‍ദേശങ്ങളുടെ കൂട്ടത്തെ അല്‍
ഗോരിതം ആയി കണക്കാക്കുന്നു:
© ഇതിന്‌ ഇന്‍പുട്ട്‌ ഉണ്ട്‌ (ഇന്‍പുട്ട്‌ ഡാറ്റ സംഭരിക്കാന്‍ വേരിയബിളുകള്‍ A, 13, C

ഉപയോഗിക്കുന്നു).

൭ ഒരു വൃക്തിക്ക്‌ പേപ്പറും പെന്‍സിലും ഉപയോഗിച്ച്‌ കൃത്യമായി നിര്‍വഹിക്കാവുന്ന രൂപത്തില്‍
നടപടികള്‍ കൃത്യമായി പ്രസ്താവിച്ചിരിക്കുന്നു. (ഘട്ടം 3 ലും ഘട്ടം 4 ലും ഉചിതമായ ഓപ്പ
റേറ്ററുകള്‍ ഉപയോഗിച്ചുകൊണ്ട്‌)
4. പ്രോഗ്രാമിന്റെ തത്വങ്ങളും പ്രശ്നപരിഹാരവും

© ഓരോ നിര്‍ദേശവും അടിസ്ഥാനപരവും അര്‍ഥവത്തുമാണ്‌ (ഇന്‍പുട്ട്‌, പ്രിന്റ്‌, കൂട്ടുക,
ഹരിക്കുക).

© ഇത്‌ ആകെത്തുക (5), ശരാശരി (Avg) എന്നിങ്ങനെ രണ്ടു ഓട്ട്പുട്ടുകള്‍ സൃഷ്ടിക്കുന്നു.

© ആരംഭവും അവസാനവും സൂചിപ്പിക്കാനായി തുടങ്ങുക, നിര്‍ത്തുക എന്നീ നിര്‍ദേശങ്ങള്‍
ഉപയോഗിച്ചിരിക്കുന്നു.

നിര്‍ദേശങ്ങളുടെ തരങ്ങള്‍

നമുക്കറിയാം ഒരു കമ്പ്യൂട്ടറിന്‌ നിര്‍വഹിക്കാന്‍ കഴിയുന്ന ക്രിയകളുടെ എണ്ണം പരിമിതമാണ്‌.

അതിനാല്‍ പ്രശ്നപരിഹാരത്തിന്‌ അത്രയും നിര്‍ദേശങ്ങള്‍ മാത്രമേ നമുക്ക്‌ ഉപയോഗിക്കാന്‍

സാധിക്കുകയുള്ളു. കൂടുതല്‍ അല്‍ഗോരിതങ്ങള്‍ നിര്‍മിക്കുന്നതിന്‌ മുമ്പ്‌ അല്‍ഗോരിതം

നിര്‍മിക്കാന്‍ ഉപയോഗിക്കുന്ന നിര്‍ദേശങ്ങളുടെ തരം ഏതൊക്കെയാണെന്ന്‌ നമുക്ക്‌ നോക്കാം.

© നമ്മള്‍ നല്‍കുന്ന ഡാറ്റ കമ്പ്യൂട്ടറിന്‌ സ്വീകരിക്കാന്‍ സാധിക്കുന്നു.ആയതിനാല്‍
ഇന്‍പുടിനുള്ള നിര്‍ദേശങ്ങള്‍ നമുക്ക്‌ ഉപയോഗിക്കാവുന്നതാണ്‌. ഇന്‍പുട്ട്‌, സ്വീകരിക്കുക,
വായിക്കുക മുതലായ പദങ്ങള്‍ നമുക്ക്‌ ഇതിനായി ഉപയോഗിക്കാം.

൭ കമ്പ്യൂട്ടര്‍ ഫലങ്ങള്‍ ഓട്ടപുട്ടായി നല്‍കുന്നു.ആയതിനാല്‍ നമുക്ക്‌ ഓട്ടപുട്ടുമായി ബന്ധപ്പെട്ട
നിര്‍ദേശങ്ങള്‍ ഉപയോഗിക്കാം. പ്രിന്റ്‌ , പ്രദര്‍ശിപ്പിക്കുക, എഴുതുക മുതലായ പദങ്ങള്‍ നമുക്ക്‌
ഇതിന്‌ ഉപയോഗിക്കാം.

൭ ഒരു മെമ്മറി സ്ഥാനത്ത്‌ ഡാറ്റ നേരിട്ട്‌ ശേഖരിക്കാം അല്ലെങ്കില്‍ ഡാറ്റ ഒരു സ്ഥാനത്ത്‌ നിന്ന്‌
മറ്റൊന്നിലേക്ക്‌ പകര്‍ത്തുകയും ചെയ്യാം. അതുപോലെ, ഡാറ്റയുടെ മുകളിലുള്ള ഗണിത
പ്രവര്‍ത്തനങ്ങളുടെ ഫലങ്ങള്‍ മെമ്മറി സ്ഥാനങ്ങളില്‍ സംഭരിക്കാം. ഇതിനായി
ഗണിതശാസ്ത്രത്തിലേതിനു സമാനമായി വിലനല്‍കല്‍ (assignment) (അല്ലെങ്കില്‍
സംഭരണം) നിര്‍ദേശം നമുക്ക്‌ ഉപയോഗിക്കാം. മൂല്യങ്ങള്‍ സംഭരിക്കുന്നതിന്‌
വേരിയബിളുകള്‍ക്കു ശേഷം സമം ചിഹ്നം (=) ഉപയോഗിക്കുന്നു. ഇവിടെ വേരിയബിളുകള്‍
എന്നത്‌ മെമ്മറി സ്ഥാനങ്ങളെ സൂചിപ്പിക്കുന്നു.

൭ കമ്പ്യൂട്ടറിന്‌ ഡാറ്റ മൂല്യങ്ങള്‍ താരതമ്യം ചെയ്ത്‌ (ലോജിക്കല്‍ ഓപ്പറേഷന്‍ എന്ന്‌
വിളിക്കുന്നു), അതിന്റെ അടിസ്ഥാനത്തിലുള്ള തീരുമാനങ്ങള്‍ എടുക്കാന്‍ സാധിക്കും.
ഇത്തരം തീരുമാനങ്ങള്‍ ഒന്നോ അതിലധികമോ പ്രസ്താവനകളുടെ തിരഞ്ഞെടുക്കല്‍ /
ഒഴിവാക്കല്‍ അല്ലെങ്കില്‍ ഒരുകൂട്ടം നിര്‍ദേശങ്ങളുടെ ആവര്‍ത്തിച്ചുള്ള പ്രവര്‍ത്തനം എന്ന
രൂപത്തിലായിരിക്കും.

b. ഫ്ളോച്ചാര്‍ട്ടുകള്‍ (Flowchart)

ഒരു ചിത്രം അല്ലെങ്കില്‍ രേഖാചിത്രത്തിന്റെ രൂപത്തില്‍ ആവിഷ്കരിക്കപ്പെട്ടിരിക്കുന്ന ഒരു സങ്കല്പം
ആണ്‌ എഴുത്ത്‌ രൂപത്തെക്കാള്‍ ആളുകള്‍ക്ക്‌ സ്വീകാര്യമാകുക. ചില സാഹചര്യങ്ങളില്‍
അല്‍ഗോരിതം മനസ്സിലാക്കുക എന്നത്‌ ബുദ്ധിമുട്ടേറിയതായിരിക്കും. എന്തെന്നാല്‍ ചില
സങ്കീര്‍ണമായ പ്രവര്‍ത്തനങ്ങളും ആവര്‍ത്തിച്ചുവരുന്ന ഘട്ടങ്ങളും അതില്‍ ഉൾപ്പെട്ടേക്കാം.
അതിനാല്‍ അല്‍ഗോരിതം ചിത്ര രൂപത്തില്‍ ആവിഷ്കരിക്കുക എന്നതായിരിക്കും മെച്ചപ്പെട്ട രീതി.
നിര്‍ദേശങ്ങള്‍ സൂചിപ്പിക്കുന്നതിനുള്ള പ്രത്യേക ചിഹ്നങ്ങളും പ്രവര്‍ത്തനങ്ങളുടെ (ക്രമം
സൂചിപ്പിക്കുന്നതിന്‌ ആരോകളും ഉപയോഗിച്ച്‌ നിര്‍മിക്കുന്ന അല്‍ ഗോരിതതിന്റെ ചിര്ത
ആവിഷ്കരണമാണ്‌ ഫ്‌ളോച്ചാര്‍ട്ട്‌. ഒരു അല്‍ഗോരിതം ചിട്ടപ്പെടുത്തുന്നതിനും മനസ്സിലാക്കു
4. പ്രോഗ്രാമിന്റെ തത്വങ്ങളും പ്രശ്നപരിഹാരവും

ന്നൊം വര്‍ഷ കമ്പ്യൂട്ടര്‍ സയന്‍സ്‌

ന്നതിനുമുള്ള ഒരു സഹായിയായിട്ടാണ്‌ പ്രധാനമായിട്ടും ഇത്‌ ഉപയോഗിക്കുന്നത്‌. വിവിധതര
ത്തിലുള്ള നിര്‍ദേശങ്ങള്‍ സുചിപ്പിക്കുന്നതിനായി അടിസ്ഥാനപരമായ ജ്യാമിതീയ രൂപങ്ങള്‍
ഫ്ളോച്ചാര്‍ട്ടുകളില്‍ സാധാരണമായി ഉപയോഗിക്കുന്നു. യഥാര്‍ഥ നിര്‍ദേശങ്ങള്‍ ഇത്തരം രൂപങ്ങള്‍
ക്കുള്ളില്‍ കൃത്യവും വ്യക്തവുമായ പ്രസ്താവനകള്‍ ഉപയോഗിച്ച്‌ എഴുതുന്നു. പ്രവര്‍ത്തനങ്ങളുടെ
ക്രമത്തെ അതായത്‌ നിര്‍ദേശങ്ങള്‍ പ്രാവര്‍ത്തികമാക്കേണ്ട ക്രമത്തെ സൂചിപ്പിക്കുന്ന തരത്തില്‍

ഈ രൂപങ്ങള്‍ ആരോകളോട്‌ കൂടിയ നേര്‍രേഖകള്‍ വഴി പരസ്പരം ബന്ധപ്പെടുത്തിയിരിക്കുന്നു.

സാധാരണഗതിയില്‍ ഒരു അല്‍ഗോരിതത്തെ ഫ്‌ളോച്ചാര്‍ട്ടിലേക്ക്‌ രൂപഭേദം വരുത്തിയ ശേഷമാണ്‌
നിര്‍ദേശങ്ങള്‍ പ്രോഗ്രാമിങ്‌ ഭാഷയില്‍ ആവിഷ്കരിക്കുന്നത്‌. പ്രോഗ്രാം എഴുതുന്നതില്‍ ഈ ദ്വിതല
(Two step approach) സമീപനത്തിന്റെ മുഖ്യ ഗുണം എന്തെന്നാല്‍ ഫ്‌ളോച്ചാര്‍ട്ട്‌ വരയ്ക്കുന്ന
സമയത്ത്‌ പ്രോ്രഗാം ഭാഷയുടെ വിവിധ ഘടകങ്ങളുടെ വിശദാംശങ്ങളെ പറ്റി വരയ്ക്കുന്നയാള്‍
ചിന്തിക്കേണ്ടതില്ല. അതിനാല്‍ അവന്‍ / അവള്‍ക്ക്‌ നടപടിക്രമത്തിന്റെ യുക്തിയില്‍ (ഘട്ടംഘട്ടമാ
യുളള രീതി) കൂടുതല്‍ ശ്രദ്ധ പതിപ്പിക്കാന്‍ സാധിക്കുന്നു. മാത്രമല്ല, ഫ്ളോച്ചാര്‍ട്ടില്‍, പ്രവര്‍ത്ത
നങ്ങളുടെ ക്രമം ചിത്രരുപത്തില്‍ സൂചിപ്പിക്കുന്നതിനാല്‍ നടപടിക്രമത്തിന്റെ യുക്തിയില്‍ വരുന്ന
തെറ്റുകള്‍, പ്രോഗ്രാമില്‍ തെറ്റ്‌ കണ്ടെത്തുന്നതിനെക്കാള്‍ എളുപ്പത്തില്‍ കണ്ടെത്താന്‍ കഴിയുന്നു.
അല്‍ഗോരിതവും ഫ്ളോച്ചാര്‍ട്ടും എപ്പോഴും പ്രോ്രാമറിനുള്ള പ്രമാണം ആകുന്നു. ഒരിക്കല്‍ ഇവ
തയാറാകുകയും പ്രശ്ന പരിഹാരത്തിന്റെ യുക്തി ശരിയാണെന്ന്‌ ബോധ്യമാവുകയും ചെയ്തു
കഴിഞ്ഞാല്‍ പ്രോഗ്രാമര്‍ക്ക്‌ പ്രോഗ്രാമിങ്‌ ഭാഷയിലുള്ള വിവിധ നിര്‍മ്മിതികളുടെ സഹായത്തോടെ
ചെയ്യേണ്ട പ്രവര്‍ത്തനങ്ങളെ കോഡ്‌ ചെയ്യുന്നതില്‍ പ്രോഗ്രാമര്‍ക്ക്‌ ശ്രദ്ധ ചെലുത്താന്‍ സാധിക്കുന്നു.
പ്രോഗ്രാം തെറ്റുകള്‍ ഇല്ലാത്തതാണെന്നു ഉറപ്പു വരുത്താന്‍ സാധാരണ ഗതിയില്‍ ഇതിനു കഴിയു

ന്നു.
ഫ്ളോച്ചാര്‍ട്ടിലെ ചിഹ്നങ്ങള്‍

അംഗീകരിക്കപ്പെട്ട അര്‍ഥവത്തായ ചിഹ്നങ്ങള്‍ ഉപയോഗിക്കുന്നതിലൂടെ ഫ്ളോചാര്‍ട്ടുകള്‍ വഴി
യുളള പ്രോഗ്രാം യുക്തിയുടെ ആശയ വിനിമയം എളുപ്പമായി തീരുന്നു. അവശ്യമായ ചില
പ്രവര്‍ത്തനങ്ങള്‍ സൂചിപ്പിക്കുന്നതിന്‌ ആവശ്യമായ ചില ചിഹ്നങ്ങള്‍ മാരതമാണ്‌ നമ്മള്‍ ഇവിടെ
പരിചയപ്പെടുന്നത്‌. ഈ ചിഹ്നങ്ങള്‍ അമേരിക്കന്‍ നാഷണല്‍ സ്റ്റാന്‍ഡേര്‍ഡ്‌സ്‌ ഇന്‍സ്റ്റിറ്ഡൂട്ട (ANSD

അംഗീകരിച്ചതാണ്‌.
1. ടെര്‍മിനല്‍ (Terminal)

പേര്‍ സൂചിപ്പിക്കുന്നതുപോലെ, പ്രോഗ്രാം യുക്തിയുടെ ആരംഭത്തെയും അവസാനത്തേയും ഈ
ചിഹ്നം സൂചിപ്പിക്കുന്നു. ഒരു ഫ്ളോച്ചാര്‍ട്ടിന്റെ ആദ്യത്തെയും അവസാനത്തെയും ചിഹ്നമാണിത്‌.

ഒരു അണ്ഡവൃത്തത്തിന്റെ (ellipse) ആകൃതിയാണ്‌ ഇതിന്‌. തുടക്കത്തില്‍

ഉപയോഗിക്കുമ്പോള്‍ നിര്‍ഗമനത്തിന്റെ ആരോ ഇതില്‍ ഘടിപ്പിച്ചിരിക്കും. C+)

പക്ഷേ അവസാനത്തില്‍ ഉപയോഗിക്കുമ്പോള്‍ ആഗമനത്തിന്റെ ആരോ
ഇതില്‍ ഘടിപ്പിച്ചിരിക്കും.
4. പ്രോഗ്രാമിന്റെ തത്വങ്ങളും പ്രശ്നപരിഹാരവും

ഒന്നാം വര്‍ഷ കമ്പ്യൂട്ടര്‍ സയന്‍സ്‌

2. ഇന്‍പുട്ട്‌/ഓട്ട്പുട്ട്‌ (input/output)

ഇന്‍പുട്ട്‌ /ഓട്ട്‌ പുട്ട്‌ ചിഹ്നമായി ഉപയോഗിക്കുന്നത്‌ ഒരു സമാന്തരഭൂജ
(Parallelogram) മാണ്‌. പ്രോഗ്രാമില്‍ ഒരു ഇന്‍പുട്ട്‌ /ഓട്ട്പുട്ട്‌ ഉപകരണത്തിന്റെ ഥ്‌
ധര്‍മ്മത്തെ ഇത്‌ സൂചിപ്പിക്കുന്നു. എല്ലാ ഇന്‍പുട്ട്‌ /ഓട്ട്പുട്ട്‌ നിര്‍ദേശങ്ങളും

ഈ ചിഹ്നം ഉപയോഗിച്ചാണ്‌ ആവിഷ്കരിച്ചിരിക്കുന്നത്‌. ഇതിലേക്ക്‌ ഒരു
ആഗമന ആരോയും ഒരു നിര്‍ഗമന ആരോയും ഘടിപ്പിച്ചിരിക്കും.

3. പ്രവര്‍ത്തനം (process)

പ്രവര്‍ത്തന ഘട്ടത്തെ പ്രതിനിധീകരിക്കാന്‍ ദീര്‍ഘചതുരം ഉപയോഗിക്കുന്നു.
സങ്കലനം, വ്യവകലനം ഗുണിനം ഹരണം തുടങ്ങിയ ഗണിത ക്രിയകള്‍
ചെയ്യാനും അതുപോലെ വേരിയബിളിയിലേക്ക്‌ വില നല്‍കുവാനും ഈ ചിഹ്നം
ഉപയോഗിക്കുന്നു. വേരിയബിളുകള്‍ക്ക്‌ വില നല്‍കുക (assignment) എന്നത്‌
കൊണ്ടുദ്ദേശിക്കുന്നത്‌- ഒരു മെമ്മറി സ്ഥാനത്തു നിന്ന്‌ മറ്റൊന്നിലേക്ക്‌ ഡാറ്റ 8558
പകര്‍ത്തുന്നതോ (ഉദാഃ) അല്ലെങ്കില്‍ എ.ല്‍.യു. വില്‍ (ALU) നിന്നും
ഓടടപുട്ടിനെ മെമ്മറി സ്ഥാനത്തേക്ക്‌ പകര്‍ത്തുന്നതോ (ഉദാമ-045) അല്ലെങ്കില്‍
ഒരുപക്ഷേ മെമ്മറി സ്ഥാനത്തേക്ക്‌ വില നേരിട്ട്‌ സംഭരിക്കുന്നതോ (9B0:a=2 )

ആകാം. പ്രോസസ്സ്‌ ചിഹ്നത്തിനു ഒരു ആഗമന ആരോയും ഒരു നിര്‍ഗമന
ആരോയും ഉണ്ടായിരിക്കും.

4. തീരുമാനം (Decision)

തീരുമാനങ്ങള്‍ സൂചിപ്പിക്കുന്നതിനായുള്ള ചിഹ്നമായി ചതുര്‍ഭുജം ഉപയോ
ഗിക്കുന്നു. ഇത്‌ തീരുമാനങ്ങള്‍ കൈക്കൊള്ളേണ്ട ഒരു ഘട്ടത്തെയാണ്‌
സൂചിപ്പിക്കുന്നത്‌. ഈ ഘട്ടത്തില്‍ നിന്ന്‌ ഒന്നോ അതിലധികമോ ഇതര ഘട്ടങ്ങ
ളിലേക്ക്‌ വിഭജനം സാധ്യമാണ്‌. എല്ലാ നിര്‍ഗമന പാതകളും ഇവിടെ പരാമര്‍
ശിച്ചിട്ടുണ്ടായിരിക്കും. എന്നിരുന്നാലും ഒരു വ്യവസ്ഥ (condition) പരിശോധിച്ച്‌
അതിന്റെ ഫലത്തിന്റെ അടിസ്ഥാനത്തില്‍ അടുത്ത ഒരു പാത മാത്രമേ
തിരഞ്ഞെടുക്കപ്പെടുകയുള്ളൂ. സാധാരണഗതിയില്‍ ഈ ചിഹ്നത്തിന്‌ ഒരു
ആഗമന മാര്‍ഗവും 2 നിര്‍ഗമന മാര്‍ഗങ്ങളും ഉണ്ടായിരിക്കും. ഒന്ന്‌ വ്യവസ്ഥ
യുടെ ഫലം ശരിയാണെങ്കില്‍ ചെയ്യേണ്ടുന്ന പ്രവൃത്തിയുടെ നേര്‍ക്കും, മറ്റേത്‌
ഇതര മാര്‍ഗത്തിലേക്കും.

5. ഫ്‌ളോ ലൈനുകള്‍ (flow lines)

പ്രവര്‍ത്തന ക്രിയകളുടെ ഒഴുക്കിനെ സൂചിപ്പിക്കാന്‍ ആരോകളോട്‌ കൂടിയ
ഫ്ളോ ലൈനുകള്‍ ഉപയോഗിക്കുന്നു. അതായത്‌ നിര്‍ദേശങ്ങള്‍ പ്രാവര്‍ത്തി
കമാക്കേണ്ട കൃത്യമായ ക്രമത്തെ ഇവ സൂചിപ്പിക്കുന്നു. സാധാരണഗതിയില്‍
ഫ്ളോ ലൈനുകളുടെ ദിശ മുകളില്‍ നിന്നും താഴേക്കും ഇടത്തുനിന്നും വല
ത്തേക്കും ആയിരിക്കും. എന്നാല്‍ ചില സാഹചര്യങ്ങളില്‍ ഇത്‌ വലതു നിന്ന്‌
ഇടത്തേക്കും താഴെനിന്നും മുകളിലേക്കും ആവാം. ഫ്‌ളോ ലൈനുകള്‍ നാം

4. പ്രോഗ്രാമിന്റെ തത്വങ്ങളും പ്രശ്നപരിഹാരവും

ന്നൊം വര്‍ഷ കമ്പ്യൂട്ടര്‍ സയന്‍സ്‌

പരസ്പരം ഛേദിക്കുന്നത്‌ നല്ല പ്രവണതയല്ല. അത്തരം ഛേദനങ്ങള്‍ പരമാ
വധി ഒഴിവാക്കേണ്ടതാണ്‌.

6. കണകൂര്‍ (connector)

ഫ്ളോച്ചാര്‍ട്ടുകളുടെ വലിപ്പം കൂടുമ്പോള്‍ ഫ്‌ളോ ലൈനുകള്‍ പല ഭാഗങ്ങളിലും |
പരസ്പരം ഛേദിക്കുകയും പല സ്ഥലങ്ങളിലും ആശയക്കുഴപ്പം വരുത്തുകയും
തന്‍മൂലം ഫ്‌ളോച്ചാര്‍ട്ടിന്റെ ഗ്രഹണം ബുദ്ധിമുട്ടാക്കുകയും ചെയ്യുന്നു. അതു
പോലെ ഒരു പേജില്‍ ഒതുങ്ങുന്നതിനെക്കാള്‍ വലിയ ഫ്ളോച്ചാര്‍ട്ട്‌ ആകുമ്പോള്‍

A,B,C ഉന്‍പുട്ട്‌
ചെയ്യുക

ഫ്ളോ ലൈനുകളുടെ ഉപയോഗം അസാധ്യമായിത്തീരുന്നു.
ഒരു ഫ്ളോച്ചാര്‍ട്ട്‌ സങ്കീര്‍ണമാകുകയും ഫ്ളോ ലൈനുകളുടെ

എണ്ണം, ദിശ എന്നിവയെക്കുറിച്ച്‌ ആശയക്കുഴപ്പം സംഭവിക്കു
കയോ അല്ലെങ്കില്‍ ഫ്ളോച്ചാര്‍ട്ട ഒന്നില്‍ അധികം പേജുകളി
ലായി പടരുകയോ ചെയ്താല്‍ മുറിഞ്ഞുപോയ ഫ്ളോ ലൈ
നുകളെ തമ്മില്‍ കൂട്ടിയോജിപ്പിക്കാന്‍ ഒരു ജോടി കണക്റ്റര്‍
ചിഹ്നങ്ങള്‍ ഉപയോഗിക്കാം. ഫ്ളോച്ചാര്‍ട്ടിന്റെ ഒരു ഭാഗത്ത്‌
നിന്നുമുള്ള ആഗമനത്തെ അല്ലെങ്കില്‍ അതിന്റെ മറ്റൊരു S=A+B+C
ഭാഗത്തേക്കുള്ള നിര്‍ഗമനത്തെ ഈ ചിഹ്നം സൂചിപ്പിക്കുന്നു. Avg=S/3
ഒരു അക്കം അല്ലെങ്കില്‍ അക്ഷരത്തോട്‌ കൂടിയ ഒരു വൃത്തം
ഉപയോഗിച്ചാണ്‌ കണക്റ്റര്‍ ചിഹ്നം സൂചിപ്പിക്കുന്നത്‌. ഒരേ
പോലെ അടയാളപ്പെടുത്തിയ ഒരു ജോഡി കണക്റ്റര്‍ S, Avg പ്രിന്റ്‌ ചെയ്യുക
ചിഹ്നങ്ങള്‍ അല്‍ഗോരിതത്തിന്റെ തുടര്‍ച്ചയെ സൂചിപ്പിക്കുന്നു.
ഒരു വലിയ ഫ്ളോ ലൈനിന്‌ പകരം ഒരേ ചിഹ്നങ്ങള്‍ /
അക്കങ്ങള്‍ ഉള്ള രണ്ടു കണക്റ്ററുകള്‍ ഉപയോഗിക്കാം. അതാ

റുകളില്‍ ഒന്ന്‌ ഫ്‌ളോച്ചാര്‍ട്ടിന്റെ മറ്റൊരു ഭാഗത്തേക്കുള്ള ചിത്രം 4.5 ആക്കുകയും ശരാശരിയും
കാണാനുള്ള o0'6BI 2/903"

യത്‌ ഒരേപോലെ അടയാളപ്പെടുത്തിയ ഒരു ജോടി കണക്ട

നിര്‍ഗമനത്തെയും, രണ്ടാമത്തേത്‌ ഫ്ളോച്ചാര്‍ട്ടിന്റെ മറ്റൊരു

ഭാഗത്തേക്കുള്ള ആഗമനത്തെയും സൂചിപ്പിക്കുന്നു.
ഉദാഹരണം 4.1 ല്‍ വിശദീകരിച്ച പ്രശ്നത്തിന്റെ ഫ്ളോച്ചാര്‍ട്ട ചിത്രം 4.5 ല്‍ കാണിച്ചിരിക്കുന്നു.

അല്‍ഗോരിതത്തിലെ ഓരോ ഘട്ടത്തിലെയും നിര്‍ദേശങ്ങള്‍ സൂചിപ്പിക്കാന്‍ ഉചിതമായ ചിഹ്നങ്ങള്‍
ഉപയോഗിച്ചിരിക്കുന്നു.മാത്രമല്ല ഓരോ ചിഹ്നത്തിലും അതിനനുസൃതമായ നിര്‍ദേശങ്ങള്‍ രേഖ
പ്പെടുത്തുന്നു. പ്രവര്‍ത്തനങ്ങളുടെ ക്രമം ഫ്ളോ ലൈനുകള്‍ ഉപയോഗിച്ച്‌ കൃതയമായി
അടയാളപ്പെടുത്തുകയും ചെയ്യുന്നു.

ഫ്ളോച്ചാര്‍ട്ടിന്റെ ഗുണങ്ങള്‍

പ്രോഗാം ആസുര്തരണത്തില്‍ പലരീതികളിലും ഫ്ളോച്ചാര്‍ട്ടുകള്‍ ഗുണപ്രദങ്ങളാണ്‌.
4. പ്രോഗ്രാമിന്റെ തത്വങ്ങളും പ്രശ്നപരിഹാരവും

° മികച്ച ആശയവിനിമയം : ഫ്‌ളോച്ചാര്‍ട്ട്‌ ഒരു പ്രോഗ്രാമിന്റെ ചിത്രരൂപത്തിലുള്ള സൂചകം,
ആയതിനാല്‍ ഒരു പ്രോഗ്രാമര്‍ക്ക്‌ മറ്റൊരു പ്രോഗ്രാമറിന്‌ പ്രോഗ്രാമിന്റെ യുക്തി ഫ്ളോച്ചാര്‍ട്ട്‌
ഉപയോഗിച്ച്‌ വിശദീകരിച്ചു കൊടുക്കുന്നത്‌ പ്രോ്രഗാം വിശദീരിക്കുന്നതിനേക്കാള്‍
എളുപ്പമാണ്‌.

൭൫ ഫല്രപ്രദമായ വിശകലനം : പ്രോ്രഗാമിലെ വിവിധ ഘട്ടങ്ങള്‍ കൃത്യമായി ഫ്ളോച്ചാര്‍ട്ടില്‍
പ്രതിപാദിച്ചിരിക്കുന്നതിനാല്‍,പ്രോഗ്രാമിനെ ഫലപ്രദമായി വിശകലനം ചെയ്യാന്‍ ഫ്‌ളോച്ചാര്‍ട്ട
സഹായിക്കുന്നു.

° ഫല്രപ്രദമായ സമന്വയം : പ്രോഗ്രാമിനെ വിവിധ ഘടകങ്ങളായി തിരിക്കുകയും അവ
ഓരോന്നിന്റെയും പരിഹാരം ഫ്ളോച്ചാര്‍ട്ടുകളായി പ്രത്യേകം പ്രത്യേകമായി തയാറാ
ക്കുകയും ചെയ്താല്‍,അവയെ എല്ലാം കൂട്ടി യോജിപ്പിച്ചു മൊത്തത്തിലുള്ള സിസ്റ്റത്തിന്റെ
രൂപരേഖ നമുക്ക്‌ തയാറാക്കാവുന്നതാണ്‌.

൫ ഫല്പ്രദമായ കോഡിങ്‌ : ഫ്ളോച്ചാര്‍ട്ട തയ്യാറാക്കി കഴിഞ്ഞാല്‍ പ്രോഗ്രാമര്‍ക്കു അനുബന്ധ
പ്രോഗ്രാം തയ്യാറാക്കാന്‍ എളുപ്പമാണ്‌, എന്തെന്നാല്‍ ഫ്‌ളോച്ചാര്‍ട്ട്‌ പ്രോഗ്രാമിന്റെ ഒരു രേഖാ
ചിത്രമായി പ്രവര്‍ത്തിക്കുന്നു. പ്രോഗ്രാമിന്റെ തുടക്കം മുതലുള്ള എല്ലാ ഘട്ടങ്ങളിലൂടെയും
കടന്നു പോയി ,ഒന്ന്‌ പോലും വിട്ടുപോകാതെ അവസാനം വരെയും എത്തിച്ചേരുവാനുള്ള
ഒരു സഹായിയായി ഇത്‌ വര്‍ത്തിക്കുന്നു.

ഫ്ളോച്ചാര്‍ട്ടിന്റെ പരിമിതികള്‍

ഫ്ളോച്ചാര്‍ട്ടുകള്‍ക്ക്‌ ഇത്തരത്തിലുള്ള ഗുണങ്ങള്‍ എടുത്തു പറയാമെങ്കിലും ,ചില പരിമിതികളും
അവയ്ക്കുണ്ട്‌.

൭ ഉചിതമായ ചിഹ്നങ്ങളും സ്പേസും നല്‍കിയുള്ള ഫ്ളോച്ചാര്‍ട്ട്‌ നിര്‍മാണം സമയം ചെലവഴിച്ചു

ചെയ്യേണ്ടതും കഠിനാധ്വാനം ആവശ്യമായതുമാണ്‌, പ്രതേകിച്ചും സങ്കീര്‍ണ്ണമായ
അല്‍ഗോരിതങ്ങള്‍ ആണെങ്കില്‍.

൫ അല്‍ഗോരിതത്തിന്റെ യുക്തിയിലുള്ള വളരെച്ചെറിയ മാറ്റത്തിനുപോലും പുതിയ
ഫ്ളോച്ചാര്‍ട്ട്‌ ആവശ്യമായി വരുന്നു.

© ഫ്‌ളോച്ചാര്‍ട്ടില്‍ ഉള്‍പ്പെടുത്തേണ്ട വിശദശാംശങ്ങളെ പറ്റി വിശദീകരിക്കുന്ന ഒരു
തരത്തിലുള്ള മാനദണ്ഡങ്ങളും നിലവിലില്ല.

വിവിധ പ്രശ്നങ്ങള്‍ പരിഹരിക്കുന്നതിനുള്ള അല്‍ഗോരിതങ്ങളും ഫ്ളോച്ചാര്‍ട്ടുകളും നമുക്ക്‌
വികസിപ്പിക്കാം.

ഉദാഹരണം 42: ഒരു ചതുരത്തിന്റെ വിസ്തീര്‍ണവും ചുറ്റളവും കണ്ടെത്തുക

ചതുരത്തിന്റെ നീളവും വീതിയും ലഭ്യമായാല്‍ ഈ പ്രശ്നം നമുക്കു പരിഹരിക്കാം. താഴെ
പറയുന്ന സമവാക്യം ഇതിന്‌ വേണ്ടി ഉപയോഗിക്കാവുന്നതാണ്‌.

ചുറ്റളവ്‌ = 2 x (നീളം + വീതി), വിസ്തീര്‍ണം = (നീളം X വീതി).

L, B എന്നീ വേരിയബിളുകള്‍ നീളം വീതി എന്നി സൂചിപ്പിക്കാനും 1, A എന്നീ വേരിയബിളുകള്‍
വിസ്തീര്‍ണം, ചുറ്റളവ്‌ എന്നിവ സൂചിപ്പിക്കാനും ഉപയോഗിക്കുന്നു എന്നിരിക്കട്ടെ

ഘട്ടം 1: തുടങ്ങുക

ഘട്ടം 2: L,B ഇന്‍പുട്ടായി സ്വീകരിക്കുക
ഒന്നാം വര്‍ഷ കമ്പൂട്ടര്‍ സയന്‍സ്‌ 4. പ്രോഗ്രാമിന്റെ തത്വങ്ങളും പ്രശ്നപരിഹാരവും

ഘട്ടം 3: P=2*(L+B)
ഘട്ടം 4: A=L*B

ഘട്ടം 5: 1,4. പ്രിന്‍റ്‌ ചെയ്യുക.

ഘട്ടം 6. അവസാനിപ്പിക്കുക.

P

ചിത്രം 4.6 ല്‍ ഇതിനുള്ള ഫ്ളോച്ചാര്‍ട്ട്‌ നല്‍കിയിരിക്കുന്നു.

= 2*(L4B)

A=L*B

ഉദാഹരണം 4.1 ലും 4.2 ലും വികസിപ്പിച്ചെടുത്തിരിക്കുന്ന അല്‍ഗോരി
തങ്ങള്‍ക്ക്‌ ഓരോന്നിലും ആറു വീതം നിര്‍ദേശങ്ങളാണുള്ളത്‌. ചിത്രം
4.7 ല്‍ കാണിച്ചിരിക്കുന്നത്‌ പോലെ ഈ രണ്ടു സന്ദര്‍ഭങ്ങളിലും നിര്‍
ദേശങ്ങള്‍ ഓരോന്നും അനുക്രമമായ രീതിയിലാണ്‌ പ്രവര്‍ത്തിക്കുക.
നിര്‍ദേശങ്ങളുടെ പ്രവര്‍ത്തന്രകമത്തെ നിയ്രന്തണഗതി (Flow of Cotnrol)
എന്ന്‌ പറയുന്നു. അപ്രകാരം മുകളില്‍പ്പറഞ്ഞ രണ്ട്‌ അല്‍ഗോരിതങ്ങളും
അനുക്രമമായ നിയ്രന്തണ ഗതിയാണ്‌ പിന്തുടരുന്നതെന്നു നമുക്ക്‌ പറയാ
വുന്നതാണ്‌.

പ്രസ്താവന 1 പ്രസ്താവന2 -——» പ്രസ്താവന3 [__ ie

ചിത്തം 4.7 അനു[കഥഥാന നിയ്(ത്തണ ഗതി

2, പ്രിന്റ്‌ ചെയ്യുക

ചിത്തം 4.6 ahr a@idemo 213980
കാണാമുള്ള ഫ്ല്ലോച്ചാര്‍ടട്‌

സെക്കമ്മുകളായി? സമയം ഇന്പുട്ട്‌ ആയി സ്ഥികരിച്ച്‌ Hr:min:Sec രുപത്തിത്ത്‌
ലഭിക്കുവാനുള്ള അതിഗോര?തവും ഫ്‌ഭോച്ചാരട്ടും വികന്ധിച്ഛിക്കുക.
രൂദാഹരഞത്തിന്‌ 2700 എന്ന്‌ ഇന്പുട്ട്‌ നതീകിയാതി / Hr : 1 Min : 40 sec എനാ
ഓട്ട്പുക്ട്‌ ലഭിക്കണം?

ഇവിടെ,രണ്ടു വിദ്യാര്‍ത്ഥികളുടെ ഉയരത്തെ പ്രതിനിധീകരിക്കുന്ന രണ്ടു സംഖ്യകള്‍ ഇന്‍പുട്ട്‌

ആയി സ്വീകരിക്കേണ്ടതാണ്‌. അവയിലെ വലിയ സംഖ്യയാണ്‌ ഉത്തരമായിട്ടു പരിഗണിക്കുക.
ഇതിനായി ഈ സംഖ്യകളെ താരതമ്യം ചെയ്യേണ്ടതുണ്ടെന്നു നമുക്കറിയാവുന്നതാണ്‌.
അല്‍ഗോരിതം താഴെ നല്‍കിയിരിക്കുന്നു.

ഘട്ടം 1: തുടങ്ങുക

ഘട്ടം 2: 111 12 ഇന്‍പുട്ട്‌ ആയി സ്വീകരിക്കുക

ഘട്ടം 3: അഥവാ 111 >H2 ആണെങ്കില്‍

ഘട്ടം 4: 111 പ്രിന്റ്‌ ചെയ്യുക

ഘട്ടം 5: അല്ലെങ്കില്‍

ഘട്ടം 6: 112 പ്രിന്റ്‌ ചെയ്യുക

ഘട്ടം 7: പരിശോധന അവസാനിക്കുന്നു

ഘട്ടം 8 : അവസാനിപ്പിക്കുക

ഈ അല്‍ഗോരിതത്തിന്റെ ഫ്ളോച്ചാര്‍ട്ട്‌ ചിത്രം 4.8 ല്‍ നല്‍കിയിരിക്കുന്നു. തീരുമാനങ്ങള്‍
കൈകൊള്ളാനുള്ള സങ്കേതം ഉപയോഗപെടുത്തുന്ന ഒരു അല്‍ഗോരിതമാണിത്‌. ഘട്ടം 3 G3 ഒരു
4. പ്രോഗ്രാമിന്റെ തത്വങ്ങളും പ്രശ്നപരിഹാരവും

ഒന്നാം വര്‍ഷ കമ്പ്യൂട്ടര്‍ സയന്‍സ്‌

നിബന്ധന പരിശോധിക്കുന്നു. 111 112 എന്നി
വയുടെ വിലകളുടെ അടിസ്ഥാനത്തില്‍ അതി

1., 13 ഇന്‍പുട്ട്‌ ചെയ്യുക

അതെ (yes)
H1>H2 ആണോ? പ്രിന്റ്‌ ചെയ്യുക

അളം)

ന്റെ ഉത്തരം തീര്‍ച്ചയായും ശരി അല്ലെങ്കില്‍
തെറ്റ്‌ എന്നായിരിക്കും. തീരുമാനം കൈക്കൊ
ള്ളുന്നത്‌ ഈ നിബന്ധനയുടെ ഉത്തരത്തിനെ
അടിസ്ഥാനമായിട്ടായിരിക്കും. ഉത്തരം ശരി
എന്നാണെങ്കില്‍ ഘട്ടം 4 പ്രവര്‍ത്തിക്കും അല്ലെ
ങ്കില്‍ ഘട്ടം 6 ആണ്‌ പ്രവര്‍ത്തിക്കുക. ഇവിടെ

ഒരു നിബന്ധനയുടെ അടിസ്ഥാനത്തില്‍ രണ്ടു
പ്രസ്താവനകളില്‍ ഏതെങ്കിലും ഒന്നാണ്‌
(ഘട്ടം 4 അല്ലെങ്കില്‍ ഘട്ടം 6) പ്രവര്‍ത്തനത്തി

നായി തിരഞ്ഞെടുക്കപ്പെടുക. ഘട്ടം 3ല്‍ പ്രോ
ഗ്രാം രണ്ടു ശാഖകളായി പിരിയുന്നു. അതായത്‌

പ്രശ്നം പരിഹരിക്കുന്നതിന്‌ വേണ്ടി ഈ

അല്‍ഗോരിതം ഒരു തിരഞ്ഞെടുക്കല്‍ ഘടന

ഉപയോഗപ്പെടുത്തുന്നു. ചിത്രം 4.9 ല്‍ കാണി ചിത്രം 4.8 ഉയര്‍ന വില കാണാനുള്ള ഫ്ലോച്ചാര്ട്‌
ച്ചിരിക്കുന്നത്‌ പോലെ നിബന്ധനയുടെ ഉത്തര

ത്തിനനുസരിച്ചു പ്രവര്‍ത്തനത്തിന്റെ ഗതി രണ്ടില്‍ ഏതെങ്കിലും ഒരു പ്രസ്താവനയിലേക്ക്‌
വിഘടിച്ചു പോകുന്നു.

ത അ ആം
[2
ര
ചി(തം 4.9 തിരഞ്ഞെടുക്കല്‍ ഘെ

തിരഞ്ഞെടുക്കല്‍ നിര്‍മ്മിതിയുടെ പ്രവര്‍ത്തനം ചിത്രം 4 .1
0 ല്‍ കൊടുത്തിരിക്കുന്നു. നിയ്ര്തരണ ഗതി നിബന്ധന

യിലേക്കു വരികയും നിബന്ധന ശരി അല്ലെങ്കില്‍ തെറ്റ്‌ എന്ന്‌ ‘coo

വിലയിരുത്തപ്പെടുകയും ചെയ്യുന്നു. നിബന്ധനയുടെ ഫലം ഗ്‌
ശരി എന്നാണെങ്കില്‍, ശരിയായാല്‍ പ്രവര്‍ത്തിക്കേണ്ട
നിര്‍ദേശങ്ങളുടെ കൂട്ടം നടപ്പിലാക്കുകയും, തെറ്റായാല്‍
പ്രവര്‍ത്തിക്കേണ്ട നിര്‍ദേശങ്ങളുടെ കൂട്ടത്തെ ഒഴിവാക്കു
കയും ചെയ്യുന്നു. നിബന്ധനയുടെ ഫലം തെറ്റ്‌ ആണെങ്കില്‍ പ്രവര്‍ത്തിക്ക്‌!
തെറ്റായാല്‍ പ്രവര്‍ത്തിക്കേണ്ട നിര്‍ദേശങ്ങളുടെ കൂട്ടം നടപ്പി

ലാക്കുകയും ശരിയായാല്‍ പ്രവര്‍ത്തിക്കേണ്ട നിര്‍ദേശ ച/൫൦ 4.10 തിഞ്ഞെടുക്കലിന്റെ 6822/9065"
ങ്ങളുടെ കൂട്ടാത്തെ ഒഴിവാക്കുകയും ചെയ്യുന്നു. ഇനി നമുക്ക്‌

മറ്റൊരു പ്രശ്നം പരിഹരിക്കാം.

4. പ്രോഗ്രാമിന്റെ തത്വങ്ങളും പ്രശ്നപരിഹാരവും

ഒന്നാം വര്‍ഷ കമ്പ്യൂട്ടര്‍ സയന്‍സ്‌

| een vi 7 “z=

ഇവിടെ സ്‌കോറുകള്‍ സൂചിപ്പിക്കുന്നതിനു വേണ്ടി മൂന്നു സംഖ്യകള്‍ നല്‍കുകയും അവയില്‍

ഏറ്റവും വലിയ MoM} കണ്ടുപിടിക്കുകയും ചെയ്യുന്നു. ഇതിന്റെ അല്‍ഗോരിതം താഴെ
കൊടുത്തിരിക്കുന്നു. ചിത്രം 4.11 ല്‍ ഫ്‌ളോച്ചാര്‍ട്ട്‌ പ്രദര്‍ശിപ്പിച്ചിരിക്കുന്നു.

MI, M2, M3 gatas!
ചെയ്യുക

ഗി
0 M1>M3
ആണോ

ഘട്ടം 1: ആരംഭിക്കുക

ഘട്ടം 2: M1,M2,M3 എന്നീ സംഖ്യകള്‍ ഇന്‍പുട്ട്‌
ആരംഭിക്കുക

ചെയ്യുക .

ഘട്ടം 3: അഥവാ 14 1 51 2 ഉം 14 1 10 3

ആണെങ്കില്‍
ഘട്ടം 4: 1൧ | പ്രിന്റ്‌ ചെയ്യുക
ഘട്ടം 5: അല്ലെങ്കില്‍ M2>M 3
ആണെങ്കില്‍

«ang (No)

അതെ (1
ആരംഭിക്കുക
'

9g (No)

ഘട്ടം 6: 1/2 പ്രിന്റ്‌ ചെയ്യുക

ഘട്ടം 7: അല്ലെങ്കില്‍

ഘട്ടം 8: M3 പ്രിന്‍റ്‌ ചെയ്യുക.

ഘട്ടം 9: വ്യവസ്ഥാ പരിശോധനയുടെ അവസാനം

ഘട്ടം 10: അവസാനിപ്പിക്കുക

വ്യത്യസ്തമായ നിബന്ധനകളുടെ അടിസ്ഥാനത്തില്‍ ചിത്രം 4.11 മൂന്ന്‌ സംഖ്യകളില്‍ ഏറ്റവും
അല്‍ഗോരിതത്തില്‍ ഒന്നിലധികം തിരഞ്ഞെടുക്കല്‍ വലിയ സംഖ്യ കാണാനുള്ള ഫ്ളോച്ചാര്‍ട്ട
നിര്‍മിതകള്‍ ഉപയോഗിക്കുന്നു. ഇവിടെ വ്യത്യസ്തമായ

മൂന്നു പ്രവൃത്തികള്‍ നല്‍കിയിരിക്കുന്നു. എന്നാല്‍ അവയില്‍ ഒന്ന്‌ മാത്രമേ പ്രവര്‍ത്തിക
മാകുകയുള്ളൂ. ശ്രദ്ധിക്കേണ്ട മറ്റൊരു വസ്തുത, ഇവിടെ ആദ്യത്തെ നിബന്ധനയില്‍ രണ്ടു താര
തമ്യങ്ങള്‍ അടങ്ങിയിരിക്കുന്നു എന്നതാണ്‌. ഇത്തരം നിബന്ധനകള്‍ സംയുക്ത നിബന്ധനകള്‍
(Compound conditions) എന്ന്‌ പറയുന്നു.

2 തത്മിരിക്കുന്ന സാംഖ്യ ഒറുയാണോ ഇരട്ടയാണോ എന്ന്‌ പരിശോധിക്കാനുള്ള
അതിഗോരിതം തയാറാക്കുക. ഫ്ളോച്ചാരീട്‌ വരയ്ക്കുക.

2. ദിവസ്സത്തെ സ്ധൂചിച്ഛിക്കുന്ന സംഖ്യ ഇന്പുട്ട്‌ ആയി നതിക?യാരതി ദിവസ്സത്തിസ്റെ്‌

ചേര്‌ പ്രദരീശിച്ഛിക്കാനുളൂള തഅത്ഗോരി?തവും ഫ്ളോച്ചാര്ടും തയാറാക്കുക.

(ഉദാഹരണത്തിന്‌ 1 ഇനീപുട്‌ നതീകി?യാത്‌ ഓക്പുട്ട്‌ Sunday എന്തായിരി

ക്കണം. അഥവാ 2 ആണ്‌ ഇനപുട്ടെങില്‍ ഓട്ട്പുട്ട്‌ Monday എന്നായിരിക്കണം.

7 മുതതി 7 വരെയുള്ള സ്പാഖ്യ Gee! ഇനപുട്ടെങ്കില്‍ INVALID DATA‘ എന്നാ

യിരിക്കേണ്ടതാണ്‌.

. പത്താം തരത്തിലെ മുല്യനിര്ണയ വ്യവസ്ഥയുടെ അടിസ്ഥാനത്തില്‍ ഒരു
സ്കോര്‍ (ചരമാവഗ്‌ 100) സ്ഥികതിച്ചു CNW കാണാനുളള അതിഗോരിതം
തയാറാക്കുക.

4. പ്രോഗ്രാമിന്റെ തത്വങ്ങളും പ്രശ്നപരിഹാരവും

ഒന്നാം വര്‍ഷ കമ്പ്യൂട്ടര്‍ സയന്‍സ്‌

ഒരു പ്രവൃത്തി തന്നെ ആവര്‍ത്തിച്ചു നിര്‍വഹിക്കേണ്ട ഒരു സാഹചര്യം പരിഗണിക്കുക.
ഉദാഹരണത്തിന്‌ ആദ്യത്തെ 100 എണ്ണല്‍ സംഖ്യകള്‍ പ്രിന്‍റ്‌ ചെയ്യണമെന്നിരിക്കട്ടെ എങ്ങനെ
യാണ്‌ നമുക്കത്‌ ചെയ്യാന്‍ സാധിക്കുക?നമുക്കറിയാം ആദ്യത്തെ സാംഖ്യ 1 ആണ്‌ .അത്‌ പ്രിന്റ്‌
ചെയ്യേണ്ടതാണ്‌.ആദ്ൃത്തെ സംഖ്യയോട്‌ 1 കൂട്ടിയാല്‍ അടുത്ത സംഖ്യ ലഭിക്കുന്നു. അതും പ്രിന്റ്‌
ചെയ്യണം. ഇതില്‍ നിന്ന്‌ ഒരു കാര്യം വ്യക്തമാണ്‌, സംഖ്യ പ്രിന്‍റ്‌ ചെയ്യുക സംഖ്യയോടു 1 കൂട്ടുക
എന്നീ പ്രവൃത്തികള്‍ ആവര്‍ത്തിച്ച്‌ ചെയ്യേണ്ടവയാണ്‌. അവസാനത്തെ സാഖ്യ പ്രിന്‍റ്‌ ചെയ്തു
കഴിഞ്ഞാല്‍ പ്രവര്‍ത്തനം അവസാനിപ്പിക്കേണ്ടതാണ്‌ .ഇതിനു വേണ്ടിയുള്ള ഒരു അല്‍ഗോരിതം
നമുക്ക്‌ തയാറാക്കാം.

ഘട്ടം 1: ആരംഭിക്കുക

ഘട്ടം 3: N പ്രിന്റ്‌ ചെയ്യുക
ഘട്ടം 4: N=N+1

ഘട്ടം 5: അഥവാ N <=100 ആണെങ്കില്‍

ഘട്ടം 3 ലേക്ക്‌ പോകുക
ഘട്ടം 6: അവസാനിപ്പിക്കുക

ഉദാഹരണം 4.503 കൊടുത്തിരിക്കുന്ന അല്‍ഗോരിതത്തില്‍ ഘട്ടം
5 ല്‍ ഒരു വ്യവസ്ഥ പരിശോധിക്കുന്നു. അഥവാ വ്യവസ്ഥ
ശരിയാണെങ്കില്‍ നിയ്രന്രണ ഗതി ഘട്ടം 3 ലേക്ക്‌ തിരിച്ചു
പോകുന്നു.അതു കാരണം വ്യവസ്ഥ ശരിയായിരിക്കുന്നതു വരെ
ഘട്ടം 3 ,ഘട്ടം 4 ,ഘട്ടം 5 എന്നിവ ആവര്‍ത്തിച്ചു പ്രവര്‍ത്തിച്ചു
കൊണ്ടിരിക്കും.ഇവിടെ ഒരു ലൂപ്പ്‌ രൂപം കൊണ്ടതായി നമുക്ക്‌
പറയാം.ഘട്ടം 3 ,4,5 എന്നിവ ചേര്‍ന്നതാണ്‌ ആ ലൂപ്പ്‌.വ്യവസ്ഥ

തെറ്റാകുമ്പോള്‍ മാത്രമെ നിയ്യരന്രണം ലൂപ്പിനു പുറത്തേക്കു ചിതം 4.121 23000 100 വരെയുള്ള
MoAyerB (രിദ്‌ ചെയ്യാനുള്ള

വരുകയുള്ളൂ.ഈ അല്‍ഗോരിതത്തിന്റെ ഫ്ളോച്ചാര്‍ട്ട്‌ ചിത്രം 4.12 ഫ്ളോച്ചാര്‍ടട

ല്‍ കാണിച്ചിരിക്കുന്നു.

മുകളില്‍പ്പറഞ്ഞ അല്‍ഗോരിതത്തെ താഴെ പറയും പ്രകാരം ലഘൂകരിക്കാം
ഘട്ടം 1: ആരംഭിക്കുക
ഘട്ടം2: N=l
ഘട്ടം 3: N<100 ആയിരിക്കുന്നത്‌ വരെ ഘട്ടം 4 ഉം 5 ഉം ആവര്‍ത്തിക്കുക
ഘട്ടം 4: (പ്രിന്റ്‌ ചെയ്യുക
ഘട്ടംട. N=N+1

ഘട്ടം 6: അവസാനിപ്പിക്കുക

ഒന്നാം വര്‍ഷ കമ്പ്യൂട്ടര്‍ സയന്‍സ്‌

ഘട്ടം 3 ല്‍ “ആവര്‍ത്തിക്കുക”, “ആയിരിക്കുന്നത്‌ വരെ” മുത
ലായ വാക്കുകള്‍ ലൂപ്പ്‌ നിര്‍മ്മിക്കാന്‍ ഉപയോഗിക്കുന്നു. ആവര്‍
ത്തിച്ചു പ്രവര്‍ത്തിക്കേണ്ട പ്രസ്താവനകള്‍ “ആവര്‍ത്തിക്കുക”
എന്ന വാക്കിന്റെ കുടെ പ്രസ്താവിക്കുകയും പരിശോധി
ക്കേണ്ട വ്യവസ്ഥ “ആയിരിക്കുന്നത്‌ വരെ” എന്ന വാക്കിന്റെ
കൂടെയും നല്‍കുന്നു. അല്‍ഗോരിതം വ്ൃത്യസ്തമായിരി
ക്കുന്നത്‌ പോലെ ചിത്രം 4.13 ല്‍ കാണിച്ചിരിക്കുന്ന ഫ്ളോ
ച്ചാര്‍ട്ടും അല്പം വൃതൃസ്തമായിരിക്കും. ചിത്രം 4.14 ല്‍
ലൂപ്പിന്റെ പ്രവര്‍ത്തന ശൈലി കാണിച്ചിരിക്കുന്നു.

ചി(തം 4 . 14 ലുഷിംഗ്‌ നിര്‍മിതി

ഒരു ലൂപ്പിനു നാല്‍ ഘടകങ്ങള്‍ ഉണ്ട്‌. സ്വാഭാവികമായും
അവയില്‍ ഒന്ന്‌ വ്യവസ്ഥ (Condition) തന്നെ. വ്യവസ്ഥ
നല്‍കുന്നതിനു വേണ്ടി ഒരു വേരിയബിളളെങ്കിലും ഉപയോഗി
ക്കണം എന്നു നമുക്കറിയാം. ഇതിനെ ലൂപ്പ്‌ നിയ്രന്തണ വേരി
യബിള്‍ എന്ന്‌ വിളിക്കാം. വ്യവസ്ഥ പരിശോധിക്കുന്നതിന്‌
മുമ്പ്‌ ലൂപ്പ്‌ നിയ്രന്തണ വേരിയബിളിന്‌ ഒരു വില ലഭ്യമാക്കേ
ണ്ടതാണ്‌. ഇന്‍പുട്ട്‌ അല്ലെങ്കില്‍ വില നല്‍കല്‍ (Assignment)
വഴി ഇത്‌ സാധ്യമാകുന്നതാണ്‌. അത്തരത്തിലുള്ള നിര്‍ദേ
ശങ്ങളെ ലൂപ്പിന്റെ പ്രാരംഭ വില നല്‍കല്‍ നിര്‍ദേശങ്ങള്‍
(Initialization Instructions) എന്ന്‌ പറയുന്നു. പരിഷ്കരണ
നിര്‍ദേശം (Update Instruction) എന്ന മൂന്നാമത്തെ ഘടകമാണ്‌
ലൂപ്പ്‌ നിയ്രന്തണ വേരിയബിളിന്റെ വില മാറ്റുന്നത്‌. ഇത്‌ വളരെ
അത്യാവശ്യമാണ്‌. എന്തെന്നാല്‍ പരിഷ്കരണ നിര്‍ദേശം
ഇല്ലെങ്കില്‍ ലൂപ്പിന്റെ പ്രവര്‍ത്തനം ഒരിക്കലും അവസാനി
ക്കില്ല. ആവര്‍ത്തിച്ചു പ്രവര്‍ത്തിക്കേണ്ട ഒരു കൂട്ടം നിര്‍ദേശ
ങ്ങളാണ്‌ ലൂപ്പിന്റെ ചട്ടക്കൂട്‌ (Body of the Loop) എന്ന നാലാമത്തെ
ഘടകം. ചിത്രം 4.15 ല്‍ കാണിച്ചിരിക്കുന്ന ഫ്ളോച്ചാര്‍ട്ട്‌ ലൂപ്പിങ്‌
ഘടന വ്യക്തമാക്കുന്നു.

4. പ്രോഗ്രാമിന്റെ തത്വങ്ങളും പ്രശ്നപരിഹാരവും

allo 4.13 1 23008 100 വരെരുള്ള
ശംഖുകള്‍ പ്രിര്റ്‌ ചെയ്യാനുള്ള 068/905"

പ്രാംരം8 വില നല്‍കല്‍

അതെ (yes)

ലുരിന്റെ ചട്ടക്കൂട്‌
പരിഷ്ക്കരണ നിര്‍ദേശം

ചി(തം 4.15 ചുഷിങ്ങിനുള്ള
ഫ്ളോച്ഛാരീട്ട്‌

4. പ്രോഗ്രാമിന്റെ തത്വങ്ങളും പ്രശ്നപരിഹാരവും

ഒന്നാം വര്‍ഷ കമ്പ്യൂട്ടര്‍ സയന്‍സ്‌

പ്രരാരംഭ വില നല്‍കല്‍ നിര്‍ദേശമാണ്‌ ആദ്യം പ്രവര്‍ത്തിക്കുക. ശേഷം വ്യവസ്ഥ പരിശോധി
ക്കുന്നു. വ്യവസ്ഥ ശരിയാണെങ്കില്‍ ലൂപ്പിന്റെ ചട്ടക്കൂടും തുടര്‍ന്ന്‌ പരിഷ്കരണ നിര്‍ദേശവും
പ്രവര്‍ത്തിക്കുന്നു. പരിഷ്കരണ നിര്‍ദേശം പ്രവര്‍ത്തിച്ചു കഴിഞ്ഞാല്‍ വീണ്ടും വ്യവസ്ഥ പരിശോ
ധിക്കുന്നു. വ്യവസ്ഥ തെറ്റാകുന്നത്‌ വരെ ഈ ല്രര്രിയ തുടരുന്നു. ലൂപ്പിന്റെ ചട്ടക്കൂട്‌ പ്രാവര്‍ത്തിക
മാകുന്നതിനു മുമ്പ്‌ വൃവസ്ഥ പരിശോധിക്കുന്ന ലൂപ്പിനെ ആഗമന നിയ്യ്തിത ലൂപ്പ്‌ (entry
cotnrolled Loop ) എന്ന്‌ വിളിക്കുന്നു. മറ്റൊരു രീതിയിലുള്ള ലൂപ്പിംഗ്‌ നിര്‍മ്മിതിയും നിലവിലുണ്ട്‌.
അതില്‍ ലൂപ്പിന്റെ ചട്ടക്കൂടും പരിഷ്കരണ നിര്‍ദേശവും പ്രവര്‍ത്തിച്ചു കഴിഞ്ഞ ശേഷം മാര്രമേ
വ്യവസ്ഥ പരിശോധിക്കുകയുള്ളു. ഇത്തരത്തിലുള്ള ലൂപ്പിനെ നിര്‍ഗമന നിയ്യ്രിത ലൂപ്പ്‌ (Exit
Cotnrolled Loop) എന്ന്‌ വിളിക്കുന്നു.

എണ്ണല്‍
തുക കണ്ടെത്തുക

ഇവിടെ N ന്റെ വില നമ്മള്‍ ഇന്‍പുട്ട്‌ ആയി നല്‍കുന്നു.

N ഇന്‍പുട്ട്‌ ചെയ്യുക,

1 മുതല്‍ N വരെയുള്ള സംഖ്യകളുടെ തുക

കണ്ടുപിടിക്കേണ്ടതാണ്‌. തുക സംഭരിക്കുന്നതിനായി
എന്ന വേരിയബിളാണെന്നിരിക്കട്ടെ, ചിത്രം 4.16 ല്‍ ഈ
അല്‍ഗോരിതത്തിന്‍റെ ഫ്‌ളോച്ചാര്‍ട്ട്‌ കാണിച്ചിരിക്കുന്നു.

ഘട്ടം 1: തുടങ്ങുക
ഘട്ടം 2: N ലേക്ക്‌ വില ഇന്‍പുട്ട്‌ ആയി സ്വീകരിക്കുക
ഘട്ടം 3: ൧51,550

ഘട്ടം 4: (A<=N) ആയിരിക്കുന്നത്‌ വരെ ഘട്ടം
5 ഉം 6 ഉം ആവര്‍ത്തിക്കുക

ഘട്ടം 5: S=S+A

ഘട്ടം 6: ൧-൧. 1

ചിത്രം 4.16 ആശ ത്തെ7/ എണ്ണല്‍ MowABIOS
ആകെത്തുക കാണാമുള്ള ഫ്ളോച്ചാര്‍ട്‌

ഘട്ടം 7: S പ്രിന്റ്‌ ചെയ്യുക.

ഘട്ടം 8 : അവസാനിപ്പിക്കുക

ഈ അല്‍ഗോരിതം ഒരു ആഗമന നിയ്യന്ത്രിത ലൂപ്പ്‌
ഉപയോഗിക്കുന്നു. അടുത്ത ഉദാഹരണത്തില്‍ പ്രശ്ന

പരിഹാരത്തിനായി ഒരു നിര്‍ഗമന നിയന്ത്രിത ലൂപ്പ്‌
ഉപയോഗിക്കുന്ന അല്‍ഗോരിതം കാണാം.

4. പ്രോഗ്രാമിന്റെ തത്വങ്ങളും പ്രശ്നപരിഹാരവും

ഒന്നാം വര്‍ഷ കമ്പ്യൂട്ടര്‍ സയന്‍സ്‌

യുടെ ആദ്യത്തെ
ുക

ഘട്ടം 1: തുടങ്ങുക

N ഇന്‍പുട്ട്‌ ചെയ്യുക.

ഘട്ടം 2 : N ഇന്‍പുട്ട്‌ ആയി സ്വീകരിക്കുക

ഘട്ടം 3: ൧51

ഘട്ടം 4: M=A xN

ഘട്ടം 5: M പ്രിന്റ്‌ ചെയ്യുക
ഘട്ടം 6: A=A+1

ഘട്ടം 7: (A<=10) ആയിരിക്കുന്നത്‌ വരെ ഘട്ടം
4 മുതല്‍ 5 വരെ ആവര്‍ത്തിക്കുക
ഘട്ടം 8: അവസാനിപ്പിക്കുക

ഈ അല്‍ഗോരിതത്തിന്‌ അനുസൃതമായ ഫ്‌ളോച്ചാര്‍ട്ട്‌

ചിത്രം 4.7 ല്‍ നല്‍കിയിരിക്കുന്നു. ഇവിടെ ലൂപ്പ്‌ ചട്ടക്കൂട്‌

പ്രവര്‍ത്തിച്ച ശേഷം മാത്രം പരിശോധിക്കപ്പെടുന്ന ഒരു 4൫417 തന്നിരിക്കുന്ന Moayagos
[1 ആദത്തെ 10 ഗുണിതങ്ങള്‍
വ്യവസ്ഥ അടങ്ങിയ ഒരു ലൂപ്പ്‌ ഉപയോഗിച്ചിരിക്കുന്നു. കണ്ടുപിടിക്കാനുള്ള ഫ്ളോച്ചാട്‌

ആഗമന നിയ്യരന്രിത ലൂപ്പും നിര്‍ഗമന നിയന്ത്രിത ലൂപ്പും
തമ്മിലുള്ള താരതമ്യം പട്ടിക 4.1 ല്‍ കാണിച്ചിരിക്കുന്നു.

ആഗമന നിയന്ത്രിത ലുഷ്‌ നിര്‍ഗമന നിയന്ത്രിത ലുഷ്‌

ANA ചട്ടക്കൂട്‌ പ്രാവര്‍ത്തിക്മാക്കുന്നതിനു മുമ്പ്‌ ൭ Ad? ചട്ടക്കൂട്‌ പ്രാവര്‍ത്തിക്കാക്കിയതിന്‌ ശേഷം
വ്യവസ്ഥ പരിശോധിക്കുന്നു വ്യവസ്ഥ പരിശോധിക്കുന്നു

ലൂക്‌ ചട്ടക്കൂട്‌ ഒരിക്കല്‍ പോലും പ്രവര്‍ത്തിച്ചില്ല Alay ചട്ടക്കൂട്‌ കുറഞ്ഞത്‌ ഒരു തവണ എങ്കിലും
എന്ന്‌ വരാം നിര്‍ബന്ധമായും പ്രവര്‍ത്തിച്ചിരിക്കും

ചട്ടക്കൂടിന്റെ സാധാരണ നിലയിലുള്ള
ലൂക്‌ ചട്ടക്കൂട്‌ പ്രാവര്‍ത്തികമാക്കുന്നതില്‍ നിന്നും പ്രവര്‍ത്തനം ഉറഷുവരുത്തണമെങ്കില്‍
ഒഴിവാക്കണമെങ്കില്‍ ഉത്‌ ഉപയോഗിക്കുന്നു. ഉപയോഗിക്കുന്നു

പട്ടിക 4.1: ലുഷുകളുടെ താരതമ്യം

പഠന പ്രവര്‍ത്തനങ്ങളുടെ ഭാഗമായി നല്‍കിയിരിക്കുന്ന പ്രശ്നപരിഹാരത്തിനുള്ള അല്‍ഗോരിത
ങ്ങളും ഫ്ളോച്ചാര്‍ട്ടും ഉപയോഗിച്ച്‌ നമുക്ക്‌ പരിശീലിക്കാം
4. പ്രോഗ്രാമിന്റെ തത്വങ്ങളും പ്രശ്നപരിഹാരവും

ഒന്നാം വര്‍ഷ കമ്പ്യൂട്ടര്‍ സയന്‍സ്‌

താഴെ പറയുന്ന പ്രശ്നങ്ങള്‍ക്കു വേണ്ടി അല്‍ഗോരിതവും ഫ്ളോച്ചാര്‍ട്ടും

തയാറാക്കുക

1. 100 ല്‍ താഴെയുള്ള എല്ലാ ഇരട്ട സംഖ്യകളും അവരോഹണ ക്രമത്തില്‍ പ്രിന്റ്‌

ചെയുക

2. 100 നും 200 നും ഇടയിലുള്ള ഒറ്റ സംഖ്യകളുടെ തുക കണ്ടുപിടിക്കുക

3. തന്നിരിക്കുന്ന സംഖ്യയുടെ ഗുണനപ്പട്ടിക പ്രിന്‍റ്‌ ചെയ്യുക

4. ഒരു സംഖ്യയുടെ ഫാക്ടോറിയല്‍ (FACTORIAL) കണ്ടുപിടിക്കുക

5. ഒരു സാഖ്യ ഇന്‍പുട്ട്‌ ചെയ്ത്‌ അവിഭാജ്യ സംഖ്യയാണോ എന്ന്‌

പരിശോധിക്കുക

4.3.3 പ്രോഗ്രാം കോഡ്‌ തയാറാക്കല്‍ (Coding the Program)

അല്‍ഗോരിതവും ഫ്ളോച്ചാര്‍ട്ടും രൂപകല്‍പന ചെയ്തു കഴിഞ്ഞാല്‍ പ്രോഗ്രാമിങിന്റെ അടുത്ത
പടി നിര്‍ദേശങ്ങള്‍ സൂക്ഷ്മവും സംക്ഷിപ്തവുമായ പ്രതീകങ്ങള്‍ ഉപയോഗിച്ച്‌ ആവിഷ്കരിക്കുക
എന്നതാണ്‌. അതായത്‌ നിര്‍ദേശങ്ങള്‍ പ്രോഗ്രാമിങ്‌ ഭാഷയില്‍ ആവിഷ്കരിക്കുന്നു. പ്രശ്ന പരിഹാ
രത്തിന്‌ വേണ്ടി ഇത്തരം പ്രോഗ്രാം നിര്‍ദേശങ്ങള്‍ എഴുതുന്നതിനെയാണ്‌ കോഡിങ്‌ എന്ന്‌
പറയുന്നത്‌. കമ്പ്യൂട്ടറില്‍ കോഡ്‌ എഴുതുന്നതിനായി ടെക്സ്റ്റ്‌ എഡിറ്റര്‍ പ്രോഗ്രാമുകള്‍ ലഭ്യമാണ്‌.

ആശയവിനിമയത്തിനുള്ള ഒരു സംവിധാനമാണ്‌ ഭാഷ. ഇംഗ്ലീഷ്‌ മലയാളം മുതലായ സ്വാഭാവിക
ഭാഷകള്‍ ഉപയോഗിച്ച്‌ നാം നമ്മുടെ ആശയങ്ങളും വികാരങ്ങളും പരസ്പരം പങ്കുവയ്ക്കുന്നു .

അത്‌ പോലെ ഉപയോക്താവിനും കമ്പ്യൂട്ടറിനും ഇടയില്‍ ആശയവിനിമയം നടത്താന്‍ പ്രോഗ്രാമിങ്‌
ഭാഷ ഉപയോഗിക്കുന്നു. കമ്പ്യൂട്ടര്‍ പ്രോഗ്രാം എഴുതുന്ന വൃക്തിക്ക്‌
കംപ്യൂട്ടറിനു മനസ്സിലാകുന്ന ഭാഷയും പരിചിതമായിരിക്കണം. മനു
ഷ്യര്‍ക്ക്‌ മനസ്സിലാക്കാനും ഉപയോഗിക്കാനും ബുദ്ധിമുട്ടുള്ള BIW ഭാഷ
(BInary Language) മാത്രമേ കമ്പ്യൂട്ടറിന്‌ അറിയുകയുള്ളു എന്നത്‌ നമ്മള്‍
നേരത്തെ കണ്ടതാണ്‌. അതിനാല്‍ അധ്യായം മുന്നില്‍ പഠിച്ചതു പോലെ
ഇംഗ്ലീഷ്‌ ഭാഷയ്ക്ക്‌ സമാനമായതും മനുഷ്യര്‍ക്ക്‌ സഹൃദയമായതുമായ
ഉയര്‍ന്നതല ഭാഷ (High Level Language) (HLL) നമുക്ക്‌ ഉപയോഗിക്കാ

വുന്നതാണ്‌. ഉയര്‍ന്നതല ഭാഷയില്‍ എഴുതിയിരിക്കുന്ന പ്രോഗ്രാമുകളെ
OLD ഭാഷയിലേക്കു വിവര്‍ത്തനം അല്ലെങ്കില്‍ മൊഴിമാറ്റം ചെയ്യാന്‍
ലാംഗ്വേജ്‌ പ്രോസസ്സര്‍ ഉപയോഗിക്കുന്നു. ഉയര്‍ന്നതല ഭാഷയില്‍ എഴുതിയിരിക്കുന്ന പ്രോഗ്രാം,
സോഴ്‌സ്‌ കോഡ്‌ (Source Code) എന്നറിയപ്പെടുന്നു.

ഒരു പ്രോഗ്രാമര്‍ ആകണമെങ്കില്‍ പ്രോഗ്രാമിലെ നിര്‍ദേശങ്ങള്‍ ആവിഷ്ക്കരിക്കുന്നതിനു
വേണ്ടിയുള്ള ബേസിക്‌ (BASIC), കോബോള്‍ (COBOL), പാസ്കല്‍ (PASCAL), C++ തുടങ്ങിയ
ഉയര്‍ന്നതല ഭാഷകളില്‍ ഏതിലെങ്കിലും ഒന്നില്‍ നൈപുണ്യം കൈവരിക്കേണ്ടതാണ്‌. പ്രോഗ്രാ
മുകള്‍ തയാറാക്കുന്നതിന്‌ വേണ്ടി ഓരോ പ്രോഗ്രാമിങ്‌ ഭാഷയും അതിന്റേതായ അക്ഷരമാലകളും
(Charecter Set), ശബ്ദകോശങ്ങളും (Voccabulary), വ്യാകരണങ്ങളും (Grammar) (നമുക്കതിനെ വാക്യ
ഘടന (Syntax) എന്ന്‌ വിളിക്കാം) ഉണ്ടായിരിക്കും.
4. പ്രോഗ്രാമിന്റെ തത്വങ്ങളും പ്രശ്നപരിഹാരവും

* ഒന്നാം വര്‍ഷ കമ്പ്യൂട്ടര്‍ സയന്‍സ്‌

ഈ ഭാഷ ഉപയോഗിച്ച്‌ പ്രോഗ്രാം തയ്യാറാക്കി കഴിഞ്ഞാല്‍ അത്‌ ഒരു ഫയലില്‍ (സോഴ്സ്‌ ഫയല്‍?)
സൂക്ഷിക്കുകയും പ്രോഗ്രാമിങിന്റെ അടുത്ത ഘട്ടത്തിലേക്ക്‌ കടക്കുകയും ചെയ്യുന്നു.

4.3.4 പരിഭാഷ (Translation)

സോഴ്‌സ്‌ കോഡ്‌ വികസിപ്പിക്കുന്നതിനായി ഭാഷ തിരഞ്ഞെടുക്കുമ്പോള്‍ ഉപയോഗിക്കുന്ന
ഡാറ്റയുടെ അളവ്‌, പ്രവര്‍ത്തനത്തിന്റെ സങ്കീര്‍ണ്ണത, ഫയലുകളുടെ ഉപയോഗം മുതലായ ചില
മാനദണ്ഡങ്ങള്‍ പരിഗണിക്കേണ്ടതുണ്ട്‌. പ്രോഗ്രാമിങ്‌ ഭാഷ തിരഞ്ഞെടുക്കുകയും സോഴ്സ്‌ കോഡ്‌
തയ്യാറാക്കുകയും ചെയ്തു കഴിഞ്ഞാല്‍ അതിനെ ലാംഗ്വേജ്‌ പ്രോസെസ്സറിന്‍റെ സഹായത്തോടെ
പരിഭാഷ ചെയേണ്ടതാണ്‌. ഉയര്‍ന്നതല ഭാഷയില്‍ എഴുതപ്പെട്ടിരിക്കുന്ന പ്രോശഗാമിനെ അതിനു
തുല്യമായ യ്യരന്രഭാഷാ പതിപ്പിലേക്കു രൂപഭേദം വരുത്തുന്ന പ്രക്രിയയാണ്‌ പരിഭാഷ (Translation).
കംപൈലര്‍ അല്ലെങ്കില്‍ ഇന്‍റെര്‍പ്രെറ്റര്‍ ഇതിനായി ഉപയോഗിക്കുന്നു. പ്രോഗ്രാമിലുള്ള സിന്റാക്സ്‌
എററുകള്‍ (Syntax Error) ഈ ഘട്ടത്തില്‍ ദൃശ്യമാകുന്നു. സോഴ്‌സ്‌ കോഡ്‌ അടങ്ങിയ ഫയല്‍
തുറന്നു ഈ തെറ്റുകള്‍ തിരുത്തേണ്ടതാണ്‌. അതിനു ശേഷം സോഴ്‌സ്‌ കോഡ്‌ വീണ്ടും കബൈല്‍
ചെയ്യാനായി (പരിഭാഷ) നല്‍കുന്നു. "No Errors or Warnings" അല്ലെങ്കില്‍ "Sucessfull Compilation"
എന്ന സന്ദേശം ലഭിക്കുന്നത്‌ വരെ ഈ ല്ര്രകിയ തുടര്‍ന്ന്‌ കൊണ്ടിരിക്കും. പൂര്‍ണമായും
യ്രന്രഭാഷയിലെ നിര്‍ദേശങ്ങള്‍ അടങ്ങിയ പ്രോഗ്രാം നമുക്കിപ്പോള്‍ ലഭ്യമാകുന്നു.സോഴ്സ്‌
കോഡിന്‍റെ ഈ പതിപ്പ്‌ ഒബ്ജക്റ്റ്‌ കോഡ്‌ (Object Code) എന്ന്‌ അറിയപ്പെടുന്നു. കംപൈലര്‍
തന്നെ ഈ ഒബ്ജക്റ്റ്‌ കോഡിനെ മറ്റൊരു ഒരു ഫയലില്‍ സൂക്ഷിക്കുകയും ചെയ്യുന്നു

സോഴ്‌സ്‌ കോഡ്‌ പരിഭാഷ ഒബ്ജക്റ്റ്‌ കോഡ്‌

ചി(തം 4.18 പരിഭാഷാ (പ്രവര്‍ത്തനം

ഇങ്ങനെ ഒബ്ജക്റ്റ്‌ കോഡ്‌ ലഭിച്ചു കഴിഞ്ഞാല്‍ പഫ്രോ്രഗാം ഉപയോഗിക്കുന്നിടത്തോളം കാലം
ഈ കോഡ്‌ ആ കമ്പ്യൂട്ടറില്‍ തന്നെ ഉണ്ടായിരിക്കേണ്ടതാണ്‌.

4.3.5 ഡീബഗ്ഗിങ്‌ (Debugging)

പ്രോഗാമിങ്ങിലുള്ള തെറ്റുകള്‍ കണ്ടെത്തുകയും അവ തിരുത്തുകയും ചെയ്യുന്ന ഘട്ടമാണ്‌
ഡീബഗ്ഗിങ്‌.മനുഷ്യര്‍ കമ്പ്യൂട്ടറുകളെ പ്രോഗ്രാം ചെയ്യുന്നിടത്തോളം കാലം പ്രോഗ്രാമുകളില്‍
തെറ്റുകള്‍ സംഭവിക്കാം. പ്രോഗ്രാമിങ്ങിലുള്ള തെറ്റുകളെ “ബഗ്ഗ്‌ എന്ന്‌ പറയുന്നു.തെറ്റുകള്‍
കണ്ടുപിടിക്കുകയും തിരുത്തുകയും ചെയ്യുന്ന പ്രക്രിയയെ “ഡീബഗ്ഗിങ്‌” എന്ന്‌ വിളിക്കുന്നു.
പൊതുവെ പ്രോഗ്രാമിങില്‍ രണ്ടു തരത്തിലുള്ള തെറ്റുകളാണ്‌ വന്നുകൂടുക സിന്റാക്സ്‌ എററുകളും
ലോജിക്കല്‍ തെറ്റുകളും. പ്രോഗ്രാമിങ്‌ ഭാഷയുടെ നിയമങ്ങള്‍ അല്ലെങ്കില്‍ വാകൃഘടന
പാലിക്കാത്തതു കൊണ്ട്‌ സംഭവിക്കുന്ന തെറ്റുകളെയാണ്‌ സിന്റാക്‌സ്‌ എറര്‍ എന്ന്‌ വിളിക്കുന്നത്‌.
തെറ്റായ ചിഹ്നങ്ങള്‍ ഉപയോഗിക്കുക, തെറ്റായ വാക്യപ്രയോഗം, നിര്‍വചിക്കപ്പെടാത്ത പദങ്ങളുടെ
ഉപയോഗം, നിയമവിരുദ്ധമായ വാക്യരചന അല്ലെങ്കില്‍ പദങ്ങളുടെ ഉപയോഗം മുതലായ
4. പ്രോഗ്രാമിന്റെ തത്വങ്ങളും പ്രശ്നപരിഹാരവും

* ഒന്നാം വര്‍ഷ കമ്പ്യൂട്ടര്‍ സയന്‍സ്‌

കാരണങ്ങള്‍ കൊണ്ടാണ്‌ സാധാരണ അത്തരം തെറ്റുകള്‍ സംഭവിക്കുക. പരിഭാഷക്കു വേണ്ടി
പ്രോഗ്രാം നല്‍കി കഴിഞ്ഞാല്‍ തന്നെ ലാംഗ്വേജ്‌ പ്രൊസസ്സറുകള്‍ സിന്‍റ്റാക്‌സ്‌ തെറ്റുകള്‍
കണ്ടെത്തുന്നു. തെറ്റുകള്‍ സംഭവിച്ചിരിക്കുന്ന പ്രസ്താവനകളുടെ ലൈന്‍ നമ്പറുകള്‍ അതി
നോടൊപ്പം സംഭവിച്ചിരിക്കുന്ന തെറ്റിനെ കുറിച്ചുള്ള സൂചനകളും അവ നല്‍കുന്നു. എറര്‍
മെസ്സേജുകളായി പ്രദര്‍ശിപ്പിക്കുന്നു. ഇന്‍റ്റര്‍പ്രെറ്ററുകളുടെ കാര്യത്തില്‍, പ്രവര്‍ത്തന ഘട്ടത്തിലാണ്‌
സിന്‍റ്റോക്‌സ്‌ തെറ്റുകള്‍ കണ്ടുപിടിച്ച്‌ പ്രദര്‍ശിപ്പിക്കുന്നത്‌. ഡീബഗ്ഗിങ്‌ പ്രക്രിയക്കായി വേണ്ടി വരുന്ന
സമയവും പരിശ്രമവുമാണ്‌ ഒരു പ്രോഗ്രാമിങ്‌ ഭാഷ ഉപയോഗിക്കുന്നതില്‍ പ്രോഗ്രാമര്‍ക്കുള്ള പ്രാപ്തി
എസ്രത്തോളമുണ്ട്‌ എന്ന്‌ തീരുമാനിക്കുന്നത്‌. എല്ലാ സിന്‍റ്റാക്‌സ്‌ തെറ്റുകളും തിരുത്തിക്കഴിഞ്ഞാല്‍
മാത്രമേ ഒബ്ജക്റ്റ്‌ പ്രോഗ്രാം നിര്‍മ്മിക്കപ്പെടുകയുള്ളു.

പ്രോഗ്രാമിങ്‌ യുക്തിയുടെ ആസുരതണത്തിലുള്ള അപാകതകള്‍ കാരണമാണ്‌ ലോജിക്കല്‍ എറര്‍
എന്ന്‌ പേരുള്ള രണ്ടാമത്തെ തരം തെറ്റുകള്‍ സംഭവിക്കുന്നത്‌.സിന്‍റ്റാക്സ്‌ എററുകള്‍ ഇല്ലെങ്കില്‍
ലാംഗേജ്‌ പ്രൊസസ്സറുകള്‍ വിജയകരമായി സോഴ്‌സ്‌ കോഡിനെ പരിഭാഷപ്പെടുത്തുന്നു.
പ്രോഗ്രാമിന്റെ പ്രവര്‍ത്തന ഘട്ടത്തില്‍ കമ്പ്യൂട്ടര്‍, പ്രോഗ്രാം നിര്‍ദേശങ്ങള്‍ പിന്തുടരുകയും അവക്ക്‌
അനുസൃതമായ ഓട്ടപുട്ട്‌ നല്‍കുകയും ചെയ്യുന്നു.പക്ഷെ ഈ ഓട്ട്പുട്ട ശരിയായിരിക്കണമെന്നില്ല.
ഇതിനെയാണ്‌ ലോജിക്കല്‍ എറര്‍ എന്ന്‌ പറയുന്നത്‌. ലോജിക്കല്‍ എറര്‍ സംഭവിക്കുമ്പോള്‍ പ്രോഗ്രാം
തെറ്റായ ഓട്ട്പുട്ട്‌ ആണ്‌ തരുന്നത്‌ എന്ന്‌ മാത്രമേ നമുക്ക്‌ ഗ്രഹിക്കാന്‍ സാധിക്കുകയുള്ളു.എന്താണ്‌
തെറ്റ്‌ എന്ന്‌ കമ്പ്യൂട്ടര്‍ നമ്മോടു പറയുന്നില്ല. പ്രോരഗാമര്‍ അല്ലെങ്കില്‍ ഉപയോക്താവാണ്‌ അത്‌
കണ്ടെത്തേണ്ടത്‌. ലോജിക്കല്‍ തെറ്റുകള്‍ ഉണ്ടോ ഇല്ലയോ എന്നറിയുന്നതിനായി പ്രോഗ്രാം
പരീക്ഷിക്കപ്പെടേണ്ടതാണ്‌. അതിനായി പ്രോഗ്രാമിങിന്റെ അടുത്ത ഘട്ടത്തിലേക്ക്‌ നമുക്ക്‌ കടക്കാം.

43.6 പ്രവര്‍ത്തനവും പരീക്ഷണവും (Execution and Testing)

മുകളില്‍ പറഞ്ഞത്‌ പോലെ ലോജിക്കല്‍ തെറ്റുകള്‍ കൂടി തിരുത്തിയാല്‍ മാതമേ ഒരു പ്രോ്രഗാം
തെറ്റുകളില്‍ നിന്നും മുക്തമാണ്‌ എന്ന്‌ നമുക്ക്‌ പറയാന്‍ കഴിയു. ആയതിനാല്‍ കംപൈല്‍
ചെയ്യപ്പെട്ട പ്രോഗ്രാമിന്റെ പതിപ്പ്‌ പരീക്ഷണത്തിനായി പ്രവര്‍ത്തിപ്പിക്കേണ്ടതാണ്‌. ശരിയായ
ഫലങ്ങള്‍ ലഭ്യമാകുന്നുണ്ടോ എന്ന്‌ പരിശോധിക്കുകയാണ്‌ പരീക്ഷണത്തിന്റെ ഉദ്ദേശ്യം. “അറി
യാവുന്ന ഫലങ്ങള്‍” ലഭിക്കുന്നതിന്‌ വേണ്ടിയുള്ള പരീക്ഷണ ഡാറ്റ നല്‍കി പ്രോഗ്രാം പ്രാവര്‍
ത്തികമാക്കുക എന്ന ല്രരകിയയാണ്‌ പരീക്ഷണ ഘട്ടത്തില്‍ ഉള്‍പ്പെട്ടിരിക്കുന്നത്‌. അതായത്‌
പ്രോഗ്രാമില്‍ ഉള്‍പ്പെട്ടിരിക്കുന്ന ക്രിയകള്‍ മനുഷ്യന്‍ തന്നെ ചെയ്യു
കയും, ലഭ്യമാകുന്ന ഓട്ട്പുട്ട്‌ കമ്പ്യൂട്ടര്‍ മുഖേന ചെയ്യുമ്പോള്‍
ലഭിക്കുന്ന ഓപൂുട്ടുമായി താരതമ്യം ചെയ്യുകയും വേണം. പ്രോഗ്രാം
യുക്തിയുടെ കൃത്യത ഈ പരീക്ഷണ ഘട്ടം കൊണ്ട്‌ നിര്‍ണയിക്കാ
വുന്നതാണ്‌. പരീക്ഷണത്തിനായുള്ള ഡാറ്റ തിരഞ്ഞെടുക്കുമ്പോള്‍
പ്രോ്രഗാം യുക്തിയുടെ എല്ലാ വശങ്ങളും പരീക്ഷിക്കപ്പെടുന്നുണ്ട്‌
എന്ന്‌ ഉറപ്പാക്കേണ്ടതാണ്‌. അതിനാല്‍ തന്നെ ഉചിതമായ ഡാറ്റ തിര

ഞ്ഞടുക്കുക എന്നത്‌ പ്രോഗ്രാം പരീക്ഷണത്തില്‍ വളരെ പ്രാധാ
നൃമുള്ളതാണ്‌.

4. പ്രോഗ്രാമിന്റെ തത്വങ്ങളും പ്രശ്നപരിഹാരവും

) ഒന്നാം വര്‍ഷ കമ്പ്യുട്ടര്‍ സയന്‍സ്‌

തെറ്റായ യുക്തി മൂലം ലഭിക്കുന്ന തെറ്റായ ഓട്ട്പുട്ടുകളെ കുറിച്ചാണ്‌ നാം ഇതുവരെ ചര്‍ച്ച
ചെയ്തു കൊണ്ടിരുന്നത്‌. എന്നാല്‍ പ്രോഗ്രാം പ്രവര്‍ത്തനത്തെ തടസ്സപ്പെടുത്താവുന്ന മറ്റൊരു
തരം തെറ്റ്‌ സംഭവിക്കാന്‍ MWS MONS. ഒരു ക്രിയയില്‍ അനുചിതമായ ഡാറ്റ വരുന്നത്‌ മൂലം
സംഭവിക്കാവുന്ന ഒന്നാണത്‌.ഉദാഹരണത്തിന്‌, A -18 / എന്ന നിര്‍ദേശം പരിഗണിക്കുക. യുടെ
വില പൂജ്യം ആയാല്‍ ഈ പ്രസ്താവന പ്രോഗ്രാമിന്റെ പ്രവര്‍ത്തനത്തെ തടസ്സപ്പെടുത്തുന്നു
(പൂജ്യം കൊണ്ടുള്ള ഹരണം മൂലം). ഇത്തരം സാഹചര്യങ്ങളില്‍ പ്രോഗ്രാമിംഗ്‌ ഭാഷയിലുള്ള
തെറ്റുകള്‍ കൈകാര്യം ചെയ്യുന്ന ഫങ്‌:ഷനുകള്‍ (Error handling function) എറര്‍ മെസ്സേജുകള്‍
പ്രദര്‍ശിപ്പിക്കുന്നു.ഇത്തരം തെറ്റുകളെ റണ്‍ ടൈം എറര്‍ എന്ന്‌ വിളിക്കുന്നു.ഡാറ്റ പ്രോസസ്സ്‌
ചെയ്യപ്പെടുന്നതിനു മുമ്പ്‌ ഡാറ്റയുടെ സാധുത പരിശോധിക്കാനുള്ള അനുബന്ധ നിര്‍ദേശങ്ങള്‍
പ്രോ്രഗാമില്‍ ഉള്‍പ്പെടുത്തുക വഴി ഇത്തരം തെറ്റുകള്‍ തിരുത്താവുന്നതാണ്‌.

4.3.7 വിവരണം തയ്യാറാക്കല്‍ (Documentation)

ഉചിതമായ രീതിയിയില്‍ വിവരണം തയ്യാറാക്കാത്ത ഒരു കംപ്യൂട്ടര്‍വല്‍കൃത സംവിധാനം ഒരിക്കലും
പൂര്‍ണമാണെന്നു പറയാന്‍ നമുക്ക്‌ കഴിയില്ല. വാസ്തവത്തില്‍, പ്രശ്നപഠന ഘട്ടം മുതല്‍ അത്‌
പ്രയോഗത്തില്‍ വരുത്തുന്നത്‌ വരെ തുടര്‍ച്ചയായി നടന്നുകൊണ്ടിരിക്കുന്ന ഒരു പ്രകിയയാണ്‌ വിവ
രണം തയ്യാരാക്കല്‍. ഇതിന്റെ ഭാഗമായി സോഴ്‌സ്‌ കോഡില്‍ നമുക്ക്‌ കമെന്റുകള്‍ ഉള്‍പ്പെടു
ത്താവുന്നതാണ്‌. ഇത്‌ ആന്തരിക വിവരണം (Internal Documentation) എന്നറിയപ്പെടുന്നു. ഡീബഗ്ഗിങ്‌
ഘട്ടത്തിലും പില്‍ക്കാലത്ത്‌ പ്രോഗ്രാമില്‍ വരുന്ന മാറ്റങ്ങള്‍ ഉള്‍പ്പെടുത്താനും ഇത്‌ സഹായിക്കുന്നു.
പ്രോഗ്രാം നിര്‍മാണ സമയത്ത്‌ ഉപയോഗിച്ച യുക്തി പിന്നീട്‌ നമ്മുടെ തന്നെ പ്രോഗ്രാമിലൂടെ കടന്നു
പോകുമ്പോള്‍ നമുക്ക്‌ ഓര്‍മയുണ്ടായിരിക്കണമെന്നില്ല. മാത്രമല്ല ചില സാഹചര്യങ്ങളില്‍ ഒരു AsO]
എഴുതിയ പ്രോഗ്രാം മറ്റൊരു AONB ഭാവിയില്‍ മാറ്റേണ്ടതായി വരാം.ഒരു പ്രോഗ്രാമില്‍ കൃത്യമായി
വിവരണം തയ്യാറാക്കിയാല്‍ നമ്മള്‍ ഉപയോഗിച്ച യുക്തി മനസ്സിലാക്കാനും പ്രോ്രഗാമില്‍ ഒരു
പ്രസ്താവന എന്ത്‌ കൊണ്ടാണ്‌ ഉപയോഗിച്ചിരിക്കുന്നത്‌ എന്ന്‌ മനസ്സിലാക്കാനും സാധിക്കുന്നു.
എന്നിരുന്നാലും പ്രോഗ്രാം പരിഭാഷക്കായി നല്‍കുമ്പോള്‍ ലാംഗ്വേല്‍ പ്രൊസസ്സറുകള്‍ പ്രോഗ്രാമിന്റെ
വിവരണ ഭാഗങ്ങള്‍ പരിഭാഷക്കായി പരിഗണിക്കുകയില്ല.

പ്രോഗ്രാമിന്റെ ഭാഗമായ കമെന്റുകള്‍ വിവരണം തയ്യാറാക്കുന്ന ഘട്ടത്തിന്റെ ഒരു ഭാഗം മാത്രമാണ്‌.
സിസ്റ്റം മാനുവല്‍, ഉപയോക്തൃ മാനുവല്‍ എന്നിവ തയ്യാറാക്കുക എന്നത്‌ വിവരണം തയ്യാറാക്കു
ന്നതിന്റെ മറ്റൊരു പ്രകിയയാണ്‌. കമ്പ്യൂട്ടര്‍ വ്യവസ്ഥയുടെ പ്രവര്‍ത്തനം, അവയുടെ ആവശ്യകത,
പ്രോഗ്രാമുകള്‍ ഇന്‍സ്റ്റാള്‍ ചെയ്യുക, അവ ഉപയോഗിക്കുന്ന രീതികള്‍ എന്നിവ ഉള്‍പ്പെടുന്ന ഹാര്‍ഡ്‌
കോപ്പികളാണിവ. വിവിധ ആവശ്യങ്ങള്‍ക്ക്‌ വേണ്ടിയുള്ള സോഫ്റ്റ്വെയറുകള്‍ തയ്യാറാക്കുമ്പോള്‍
ഇത്തരം മാനുവലുകള്‍ നിര്‍ബന്ധമാണ്‌. ഇത്തരം വിവരണം തയ്യാറാക്കുന്നതിനെയാണ്‌
ബാഹ്യമായ വിവരണം (External Documentation) എന്ന്‌ പറയുന്നത്‌.

ഇപ്പോള്‍ നാം ഒരു പ്രശ്നത്തെ വിശകലനം ചെയ്യുകയും പരിഹാരത്തിനുള്ള യുക്തി കണ്ടെ
ത്തുകയും, ഫ്‌ളോ ചാര്‍ട്ട്‌ രൂപത്തില്‍ പ്രതിപാദിക്കുകയും, പ്രോഗ്രാമിങ്‌ ഭാഷയില്‍ കോഡ്‌ തയ്യാ
റാക്കുകയും, സിന്റാക്സിലെ പിശകുകള്‍ നീക്കം ചെയ്ത ശേഷം പരിഭാഷപ്പെടുത്തുകയും
ചെയ്തു. കൂടാതെ ലോജിക്കല്‍ തെറ്റുകളും റണ്‍ ടൈം തെറ്റുകളും നീക്കം ചെയ്ത്‌ ശേഷം
ഓട്ട്പുട്ടിന്റെ കൃതൃത പരിശോധിക്കുകയും അവസാനമായി പ്രോഗ്രാമിന്റെ വിവരണം തയ്യാറാ
ക്കുകയും ചെയ്തു.
4. പ്രോഗ്രാമിന്റെ തത്വങ്ങളും പ്രശ്നപരിഹാരവും

സ്വയം പരിശോധിക്കുക

അല്‍ഗോരിതം എന്നാല്‍ എന്താണ്‌ ?

അല്‍ഗോരിതത്തിന്റെ ചിത്ര ആവിഷ്കരണമാണ്‌

ഏതു ഫ്‌ളോച്ചാര്‍ട്ട്‌ ചിഹ്നമാണ്‌ എപ്പോഴും ജോഡികളായി പി
ഏതു ഫ്‌ ളോച്ചാര്‍ട്ട്‌ ചിഹ്നത്തിനാണ്‌ ഒരു ആഗമന മാര്‍ഗവും രണ്ടോ
അതിലധികമോ നിര്‍ഗമന മാര്‍ഗങ്ങളും ഉള്ളത്‌ ?

5. HLL ല്‍ എഴുതിയിരിക്കുന്ന പ്രോഗ്രാം എന്ന്‌ അറിയപ്പെടുന്നു.

6. Wienges എന്നാലെന്ത്‌ ?

7. ഒബ്ജക്റ്റ്‌ കോഡ്‌ എന്നാലെന്ത്‌ ?

4.4 അല്‍ഗഥരോരിതങ്ങളുടെ പ്രകടനം വിലയിരുത്തല്‍

വിവിധ പ്രശ്നങ്ങള്‍ പരിഹരിക്കുന്നതിനായി നമ്മള്‍ അല്‍ഗോരിതങ്ങള്‍ തയാറാക്കിയിട്ടുണ്ട്‌.

ടട

ചിലപ്പോള്‍ ചില പ്രശ്നങ്ങള്‍ പരിഹരിക്കുന്നതിന്‌ വൃത്യസ്തമായ യുക്തി പ്രയോഗിക്കാമായിരുന്നു
എന്ന്‌ നമുക്ക്‌ തോന്നാം. ഒരേ പ്രശ്നം തന്നെ വ്ൃത്യസ്തമായ ഒരു കൂട്ടം നിര്‍ദേശങ്ങള്‍ ഉപയോഗിച്ച്‌
പരിഹരിക്കാവുന്നതാണ്‌. എന്നിരുന്നാലും വളരെ കുറഞ്ഞ കമ്പ്യൂട്ടര്‍ വിഭവങ്ങള്‍ ഉപയോഗപ്പെടുത്തി,
കുറഞ്ഞ സമയം കൊണ്ട്‌ വളരെ കൃത്യമായ ഫലം നല്‍കുന്ന പ്രോഗ്രാം തയ്യാറാക്കുന്നയാളാണ്‌
ഒരു സമര്‍ത്ഥനായ പ്രോഗ്രാമര്‍ എന്ന്‌ പറയുന്നത്‌. ഒരു അല്‍ഗോരിതത്തിന്റെ പ്രകടനം അളക്കുന്നത്‌
ടൈം കോംപ്ലക്സിറ്റി (Time complexity), സ്പേസ്‌ കോംപ്ലക്‌സിറ്റി (Space complexity) എന്നിവയുടെ
അടിസ്ഥാനത്തിലാണ്‌. ഏറ്റവും കുറവ്‌ മെമ്മറി ഉപയോഗപ്പെടുത്തി ഏറ്റവും വേഗത്തില്‍
പ്രവര്‍ത്തിക്കുന്ന അല്‍ഗോരിതത്തെയാണ്‌ പ്രശ്‌ന പരിഹാരത്തിനുള്ള ഏറ്റവും നല്ല അല്‍ഗോരിതം

ആയി കണക്കാക്കുന്നത്‌.

അല്‍ഗോരിതം 1 അല്‍ഗോരിതം 2

ഘട്ടം 1: തുടങ്ങുക : തുടങ്ങുക
ഘട്ടം 2: A,B,C ഇന്‍പുട്ട്‌ ചെയ്യുക : A,B,C ഉന്‍പുട്ട്‌ ചെയ്യുക

ഷ്ട്ടാ3: S=A+B+C S=A+B+C

ഘട്ടം 4: AVG=S/3 3 AVG =(A +B +C) /3
ഘട്ടം 5: S,AVG പ്രിന്റ്‌ ചെയ്യുക > S,AVG പ്രിന്റ്‌ ചെയ്യുക
ഘട്ടം 6: അവസാനിഷിക്കുക :  അവസാനികിക്കുക

പട്ടിക 4 2 മൂന്നു സംഖ്യകളുടെ തുകയും ശരാശരിയും കാണാനുള്ള രണ്ടു അല്‍ഗോരിതങ്ങള്‍

മൂന്നു സംഖ്യകളുടെ തുകയും ശരാശരിയും കാണാനുള്ള രണ്ടു അല്‍ഗോരിതങ്ങള്‍ പട്ടിക 4.2
ല്‍ കൊടുത്തിരിക്കുന്നു. അവയെ നമുക്ക്‌ താരതമ്യം ചെയ്യാം. രണ്ടു അല്‍ഗോരിതങ്ങളും ഘട്ടം 4
ല്‍ വൃത്യാസപ്പെട്ടിരിക്കുന്നു. അല്‍ഗോരിതം2 ല്‍ ഒരേ ഡാറ്റയില്‍ രണ്ടു തവണ സങ്കലനം ചെയ്യുന്നു
(ഘട്ടം 3, ഘട്ടം 4).സ്വാഭാവികമായിട്ടും ഈ അല്‍ഗോരിതം അല്‍ഗോരിതം! നെക്കാള്‍ കൂടുതല്‍
സമയം പ്രവര്‍ത്തനത്തിനായി ഉപയോഗിക്കുന്നു. അതിനാല്‍ കോഡിങ്ങിനു നല്ലതു അല്‍ഗോരിതം
1 ആകുന്നു.

ഒരു പ്രസ്താവന തിരഞ്ഞെടുക്കുന്നതിന്‌ വേണ്ടി താരതമ്യ ക്രിയകള്‍ ഉള്‍പ്പെടുന്ന മറ്റൊരു
ഉദാഹരണം നമുക്കു പരിശോധിക്കാം. മുന്നു സംഖ്യകളില്‍ വലുത്‌ ഏതാണെന്നു കണ്ടെത്താനുള്ള
അല്‍ഗോരിതം ഉദാഹരണം 4.4 ല്‍ നമ്മള്‍ ചര്‍ച്ച ചെയ്യുകയുണ്ടായി. അതേ പ്രശ്നം പരിഹരിക്കു
ന്നതിനുള്ള രണ്ടു അല്‍ഗോരിതങ്ങള്‍ പട്ടിക 4.3 ല്‍ നല്‍കിയിരിക്കുന്നു.
= ഒന്നാം വര്‍ഷ കമ്പൂട്ടര്‍ സയന്‍സ്‌ 4. പ്രോഗ്രാമിന്റെ തത്വങ്ങളും പ്രശ്നപരിഹാരവും

അല്‍ഗോരിതം 1 അല്‍ഗോരിതം 2

ഘട്ടം 1: തുടങ്ങുക ഘട്ടം 1: തുടങ്ങുക
ഘട്ടം 2: M1,M2,M3 ഉന്‍പുട്ട്‌ ആയി സ്വികരിക്കുക്] ഘട്ടം 2: 14 1, 14 2, 14 3 ഉന്‍പൂട്ട്‌ ആയി
സ്വീകരിക്കുക

ഘട്ടം 3: അഥവാ! 1 510 2 ഉം M1>M3 ഉം ഘട്ടം 3: അഥവാ! 1 ച്‌്‌ 2 ആണെങ്കില്‍
ആണെങ്കില്‍

ഘട്ടം 4 : M1 പ്രിന്റ്‌ ചെയ്യുക ഘട്ടം 4: Big=M 1

ഘട്ടം 5: അഥവാ! 2-4 1 9M2>M3 ഉം ഘട്ടം: അല്ലെങ്കില്‍
ആണെങ്കില്‍

ഘട്ടം 6 : M2 പ്രിന്റ്‌ ചെയ്യുക ഘട്ടം 6: Big=M2

ഘട്ടം 7: അഥവാ M3>M1 9M3>M2o0 ഘട്ടം": അഥവാ! 3 >Big ആണെങ്കില്‍
ആണെങ്കില്‍ Big=M3

ഘട്ടം 8 : M3 പ്രിന്റ്‌ ചെയ്യുക ഘട്ടം 8: Big പ്രിന്റ്‌ ചെയ്യുക

ഘട്ടം 9: അവസാനിരിക്കുക ഘട്ടം 9: അവസാനിരിക്കുക

പട്ടിക 4.3 മുന്നു സംഖ്യകളില്‍ ഏറവും വലുത്‌ കഞെത്താനുള്ള അത്ഥോരിതങ്ങശ്‌

ഉദാഹരണം 4.3 ല്‍ മുന്ന്‌ താരതമ്യ ക്രിയകളും ഒരു ലോജിക്കല്‍ ക്രിയയും ഉപയോഗിച്ചിരിക്കുന്നു.
ഏറ്റവും വലിയ വില 113 ല്‍ (മൂന്നാമത്തെ വേരിയബിള്‍) വരുമ്പോളാണ്‌ ഈ ക്രിയകള്‍ എല്ലാം
പ്രവര്‍ത്തിക്കുക. ്രവര്‍ത്തനത്തിന്റെ വേഗത അളക്കുന്നതിനായി താരതമ്യ ക്രിയക്ക്‌ 1 സെക്കന്റ്‌
സമയമെടുക്കുന്നു എന്ന്‌ നമുക്ക്‌ അനുമാനിക്കാം. അങ്ങനെയാണെങ്കില്‍ ഏറ്റവും വേഗം കൂടിയ
ഫലം 3 സെക്കന്റ്‌ വേഗം കുറവുള്ള ഫലം 4 സെക്കന്റ്‌ വേണ്ടി വരുന്നതായി കാണാം. ശരാശരി
വേഗം 3.5 സെക്കന്റ്‌ ആയിരിക്കും.

ഇനി നമുക്ക്‌ പട്ടിക 4.3 ലുള്ള അല്‍ഗോരിതം വിശകലനം ചെയ്യാം. അതില്‍ മൂന്ന്‌ താരതമ്യ
ക്രിയകള്‍ അടങ്ങിയ മൂന്ന്‌ If (അഥവാ) പ്രസ്താവനകള്‍ അടങ്ങിയിരിക്കുന്നു. മുകളില്‍
പ്രസ്താവിച്ചിട്ടുള്ള അനുമാനം പിന്തുടരുകയാണെങ്കില്‍ വേരിയബിലിന്റെ വില ഏതാണെങ്കിലും
നമുക്ക്‌ ഫലം 9 സെക്കന്റില്‍ ലഭിക്കുന്നതാണ്‌. അപ്പോള്‍ ശരാശരി വേഗം എന്ന്‌ പറയുന്നത്തു 9
സെക്കന്റ്‌ ആണ്‌. പക്ഷെ പട്ടിക 4.3 ല്‍ പറയുന്ന അല്‍ഗോരിതംാല്‍ രണ്ടു If (അഥവാ)
പ്രസ്താവനകള്‍ ഉപയോഗിച്ചിരിക്കുന്നു. അല്‍ഗോരിതം2 ല്‍ വേരിയബിളുകളില്‍ ഏതു വില
വന്നാലും താരതമ്യം ചെയ്യാന്‍ വേണ്ട സമയം 2 സെക്കന്റ്‌ ആയിരിക്കും. അപ്പോള്‍ ശരാശരി
വേഗം എന്ന്‌ പറയുന്നത്‌ 2 സെക്കന്റ്‌ ആയിരിക്കും.എന്നു പറഞ്ഞാല്‍ അല്‍ഗോരിതം 2 മറ്റു രണ്ടു
അല്‍ഗോരിതങ്ങളെക്കാള്‍ മെച്ചപ്പെട്ടതാണ്‌.

ലൂപ്പുകള്‍ അടങ്ങിയ മറ്റൊരു ഉദാഹരണം കൂടി നമുക്ക്‌ നോക്കാം. 100 നും 200 നും ഇടയിലുള്ള
എല്ലാ ഒറ്റ സംഖ്യകളുടെ തുകയും എല്ലാ ഇരട്ട സംഖ്യകളുടെ തുകയും കണ്ടുപിടിക്കാനുള്ള
രണ്ടു അല്‍ഗോരിതങ്ങള്‍ പട്ടിക 4.4 ല്‍ കൊടുത്തിരിക്കുന്നു.
) ആം ൫05 കമ്പൂട്ടര്‍ സയന്‍സ്‌ 4. പ്രോഗ്രാമിന്റെ തത്വങ്ങളും പ്രശ്നപരിഹാരവും

അല്‍ഗോരിതം 1 അല്‍ഗോരിതം 2

ഘട്ടം 1: തുടങ്ങുക ഘട്ടം 1: തുടങ്ങുക

ഘട്ടം 2: N=100, ES =0 ഘട്ടം 2: N=100 ,ES =0,OS =0

ഘട്ടം 3: (N<=200) ആയിരിക്കുന്നതു വരെ ഘട്ടം | ഏട്ടം 3: (N <=200) ആയിരിക്കുന്നതു വരെ
4 മുതല്‍ 6 വരെ ആവര്‍ത്തിക്കുക ഘട്ടം 4 മുതല്‍ 8 വരെ

ആവര്‍ത്തിക്കുക

ഘട്ടം 4: അഥവാപ്‌/2 ന്റെ ശിഷ്ടം = 0 ഘട്ടം 4: അഥവാ N/2 ന്റെ ശിഷ്ടം = 0
ആണെങ്കില്‍ ആണെങ്കില്‍

ഘട്ടം 5: ES =ES + N ഘട്ടം 5: ES =ES + N

ഘട്ടം: N=N +1 ഘട്ടം 6: അല്ലെങ്കില്‍

ഘട്ടം 7: 18 പ്രിന്റ്‌ ചെയ്യുക ഘട്ടം 7: OS =OS +N

ഘട്ടം 8: N=100, OS =0 ഘട്ടം 8: N=N +1

alg09: (N<=200) ആയിരിക്കുന്നതു വരെ ഘട്ടം 9: ES പ്രിന്റ്‌ ചെയ്യുക
ഘട്ടം 10 മുതല്‍ 12 വരെ ആവര്‍ത്തിക്കുക ഘട്ടം 10 : OS പ്രിന്റ്‌ ചെയ്യുക

ഘട്ടം 10: അഥവാ്‌/2 ന്റെ ശിഷ്ടം = 1 ഘട്ടം 11: അവസാനിരിക്കുക
ആണെങ്കില്‍

ഘട്ടം 11: OS =OS +N

ഘട്ടം 12: N=N +1

ഘട്ടം 13: OS പ്രിന്റ്‌ ചെയ്യുക

ഘട്ടം 14: അവസാനിരിക്കുക

പട്ടിക 4.4 ഒ) MoAYABJOSOJo DOF MoWABJNSOJo തുക കാണാരുള്ള അത്മോരിതങ്ങള്‍്‌

അല്‍ഗോരിതം? രണ്ടു ലൂപ്പുകളും അല്‍ഗോരിതം: ഒരു ലൂപ്പും ഉപയോഗിക്കുന്നു. സ്വാഭാവികമാ
യിട്ടും അല്‍ഗോരിതം2 നെ അപേക്ഷിച്ച്‌ അല്‍ഗോരിതം! ന്‌ പ്രാരംഭ വിലനല്‍കാനും, പരിശോധന
യ്ക്ക്‌ വേണ്ടിയും ലൂപ്പ്‌ വേരിയബിള്‍ പുതുക്കുന്നതിന്‌ വേണ്ടിയും മറ്റും ഇരട്ടി സമയം ആവശ്യമായി
വരുന്നു. അല്‍ഗോരിതം മെച്ചപ്പെട്ടതും കാര്യക്ഷമവുമാണ്‌ എന്ന്‌ പട്ടികയില്‍ നിന്ന്‌ തന്നെ വൃക്ത
മാണ്‌. അതിനാല്‍ തന്നെ പ്രശ്ന പരിഹാരത്തിനുള്ള യുക്തി വികസിപ്പിക്കുന്നതിനു മുമ്പ്‌ വ്ൃത്യസ്‌
തവും വിഭിന്നവുമായി ചിന്തിക്കേണ്ടതു അനിവാര്യമാണ്‌.

നമുക്ക്‌ ചുരുക്കിലറയാം

ഒരു കമ്പ്യൂട്ടര്‍ ഭാഷയില്‍ ക്രമത്തില്‍ എഴുതിയിരിക്കുന്ന നിര്‍ദേശങ്ങളാണ്‌ പ്രോഗ്രാം. പ്രോ
(HOMES പ്രക്രിയ ചില ഘട്ടങ്ങളിലൂടെ കടന്നു പോകുന്നു. അല്‍ഗോരിതവും ഫ്ളോച്ചാര്‍ട്ടും
തയ്യാറാക്കുന്നത്‌ പ്രോഗ്രാമിങ്ങിന്റെ യുക്തി വികസിപ്പിക്കാന്‍ സഹായിക്കുന്നു. 1111. ല്‍
തയ്യാറാക്കിയിരിക്കുന്ന പ്രോ്രഗാമിനെ സോഴ്‌സ്‌ കോഡ്‌ എന്ന്‌ വിളിക്കുന്നു. അതിനെ യന്ത്ര
ഭാഷയിലേക്കു പരിഭാഷപ്പെടുത്തേണ്ടതാണ്‌. അതിന്റെ ഫലമായി ലഭിക്കുന്ന കോഡ്‌,
ഒബ്ജക്റ്റ്‌ കോഡ്‌ എന്ന്‌ അറിയപ്പെടുന്നു. ഡീബഗ്ലഗിങ്‌ എന്ന്‌ വിളിക്കുന്ന പ്രക്രിയയിലൂടെ
പ്രോഗ്രാമില്‍ സംഭവിച്ചിരിക്കുന്ന തെറ്റുകളെ നീക്കം ചെയ്യുന്നു. പരിഭാഷപ്പെടുത്തിയ പതിപ്പ്‌
കമ്പ്യൂട്ടര്‍ പ്രവര്‍ത്തിപ്പിക്കുന്നു. ഉചിതമായ വിവരണം തയ്യാറാക്കുന്നതിന്‌ പില്‍ക്കാലത്തു
പ്രോഗ്രാമില്‍ മാറ്റം വരുത്തുന്നതിന്‌ സഹായകമാകുന്നു. പ്രശ്ന പരിഹാരത്തിന്‌ വൃത്യസ്ത
ങ്ങളായ യുക്തികള്‍ പ്രയോഗിക്കാമെങ്കിലും പ്രോഗ്രാമിന്റെ പ്രകടനം അളക്കുന്നത്‌ ടൈം
കോംപ്ലക്സിറ്റിയുടെയും സ്പേസ്‌ കോംപ്ലക്സിറ്റിയുടെയും അടിസ്ഥാനത്തിലാണ്‌.

4. പ്രോഗ്രാമിന്റെ തത്വങ്ങളും പ്രശ്നപരിഹാരവും

ഒന്നാം വര്‍ഷ കമ്പ്യൂട്ടര്‍ സയന്‍സ്‌

ച്ച്‌ ഞ്ഞ

ഈ അദ്ധ്യായം പൂര്‍ത്തിയാകുന്നതോടെ പഠിതാവിന്‌

൭ പ്രശ്ന പരിഹാരത്തിന്റെ വിവിധ വശങ്ങള്‍ വിശദീകരിക്കാന്‍ സാധിക്കുന്നു.

൭ പ്രശ്നങ്ങള്‍ പരിഹരിക്കാനുള്ള അല്‍ഗോരിതങ്ങള്‍ വികസിപ്പിക്കാന്‍ സാധിക്കുന്നു.

൫ അല്‍ഗോരിതത്തില്‍ കൃത്യത ഉറപ്പു വരുത്താന്‍ ഫ്ളോച്ചാര്‍ട്ടുകള്‍ വരയ്ക്കാന്‍ സാധിക്കുന്നു.

൭ പ്രശനം പരിഹരിക്കാനുള്ള ഏറ്റവും നല്ല അല്‍ഗോരിതം തിരഞ്ഞെടുക്കാന്‍ സാധിക്കുന്നു.

 ാതയകാ ചോദ പ ॥॥॥॥॥॥!!॥॥॥॥॥॥॥॥॥॥॥॥॥॥॥

ഒറ്റ വാകൃത്തില്‍ ഉത്തരം എഴുതുക

1. അല്‍ഗോരിതം എന്നാലെന്ത്‌ ?

2. പ്രശ്ന പരിഹാരത്തില്‍ കമ്പ്യൂട്ടറിന്റെ പജ്‌; എന്താണ്‌ ?
3. ഫ്ളോച്ചാര്‍ട്ടില്‍ കണക്റിന്റെ ഉപയോഗമെന്ത്‌ ?

4. പ്രോഗ്രാമില്‍ ലോജിക്കല്‍ തെറ്റുകള്‍ എന്നാലെന്ത്‌ ?

ലഘു വിവരണാത്മകം

1 കമ്പ്യൂട്ടര്‍ പ്രോ്രഗാം എന്നാലെന്ത്‌ ? പ്രോ്രഗാമുകള്‍ തയ്യാറാക്കുന്നതിന്‌ അല്‍ഗോരിതങ്ങള്‍
എങ്ങനെ സഹായിക്കുന്നു ?

2. 3 സംഖ്യകളുടെ തുകയും ശരാശരിയും കണ്ടുപിടിക്കാനുള്ള അല്‍ഗോരിതം എഴുതുക
3. ആദ്യത്തെ 100 എണ്ണല്‍ സംഖ്യകള്‍ പ്രദര്‍ശിപ്പിക്കാനുള്ള ഫ്ളോച്ചാര്‍ട്ട്‌ വരയ്ക്കുക

4. ഫ്ളോച്ചാര്‍ട്ടുകളുടെ പരിമിതികള്‍ എന്തെല്ലാം?

5. ഡീബഗ്ഗിങ്‌ എന്നാലെന്ത്‌?

6. ഒരു പ്രോഗ്രാമില്‍ വിവരണം തയ്യാറാക്കുന്നതിന്റെ ആവശ്യകത എന്ത്‌?

വിവരണാത്മകം
1 അല്‍ഗോരിതത്തിന്റെ സവിശേഷതകള്‍ എന്തെല്ലാം?
2. ഫ്ളോച്ചാര്‍ട്ട ഉപയോഗിക്കുന്നത്‌ കൊണ്ടുള്ള ഗുണങ്ങള്‍ എന്തെല്ലാം?

3. പ്രോഗ്രാമിങിന്റെ വിവിധ ഘട്ടങ്ങളെ പറ്റി ചുരുക്കത്തില്‍ വിവരിക്കുക
പ്രധാന ആശയങ്ങള്‍

ഠ Cr+ -ലെ ക്യാരക്ടര്‍ സെറ്റ്‌
ഠ ടോക്കണുകള്‍
൭ കീവേഡുകള്‍
© ഐഡന്റിഫയറുകൾ
© ലിറ്ററലുകള്‍
൭ പഞ്ചുവേറററുകള്‍
© ഓഷറേറററുകള്‍

ഠ ഇന്റഗ്രേറ്റഡ്‌ ഡവലഷ്മെന്റ്‌
എന്‍വയോണ്‍ന്റ്റ്‌ (IDE)

ം ജിനി)

C++ ദപ്രാഗ്രാമിങ്‌ -
ഒരു ആമുഖം

Bjarne Stroupstrup വികസിപ്പിച്ച ശക്തവും ജനപ്രിയവു
മായ ഒരു ഒബ്ജക്ട്‌ ഓറിയന്റഡ്‌ പ്രോഗ്രാമിങ്‌ ഭാഷയാണ്‌
C++ (ഉച്ചരിക്കുന്നത്‌ € പ്ലസ്‌ പ്ലസ്‌). C++ എന്ന ആശയം
വന്നത്‌ -യോടൊപ്പം + + ഓപ്പറേറ്റര്‍ കൂടി ചേര്‍ന്നാണ്‌.
അങ്ങനെ C++ എന്നത്‌ C ഭാഷയുടെ ഒരു വിപുലീകരിച്ച
രൂപമായിത്തീര്‍ന്നു.

നാം കഴിഞ്ഞ അധ്യായത്തില്‍ ചര്‍ച്ച ചെയ്ത ക്രമപ്പെടു
ത്തല്‍, തിരഞ്ഞെടുക്കല്‍, ആവര്‍ത്തനം തുടങ്ങിയ വിവിധ
തരം പ്രോഗ്രാമിങ്‌ ആശയങ്ങള്‍ പ്രാവര്‍ത്തികമാക്കാന്‍
C++ ഭാഷ ഉപയോഗിക്കുന്നു. ഈ അധ്യായത്തില്‍, C++
-ന്റെ അടിസ്ഥാന ആശയങ്ങളെക്കുറിച്ച്‌ ഒരു അവലോകനം
നടത്താം. C++ പ്രോഗ്രാം എഴുതുന്നതിനുള്ള വിവിധ ഭാഷാ
പ്രൊസസ്സര്‍ പാക്കേജുകളും നമുക്ക്‌ പരിചയപ്പെടാം.

ഏതൊരു ഭാഷയേയും പോലെ, €..: ഭാഷാപഠനവും തുട
ങ്ങുന്നത്‌ അതിലെ അടിസ്ഥാന ചിഹ്നങ്ങളായ അക്ഷരങ്ങള്‍
പരിചയപ്പെട്ടുകൊണ്ടാണ്‌. അതിനുശേഷം വാക്കുകള്‍,
വാക്യങ്ങള്‍ (എക്സ്പ്രഷനുകള്‍;, പ്രസ്താവനകള്‍ തുട
ങ്ങിയവയിലൂടെ പഠന്രകമം തുടരും. അക്ഷരങ്ങള്‍ പഠിച്ച്‌
കൊണ്ട്‌ നമുക്ക്‌ തുടങ്ങാം.

5.1 ക്യാരക്ടര്‍ സെറ്റ്‌ (Character set)
നമുക്ക്‌ അറിയാവുന്നത്‌ പോലെ ഇംഗ്ലീഷ്‌, മലയാളം,
ഹിന്ദി തുടങ്ങിയ ഏതൊരു ഭാഷാപഠനവും ആരംഭിക്കു
ന്നത്‌ അക്ഷരമാലയിലാണ്‌. അതുപോലെ €.:4: ഭാഷയ്‌
ക്കും അതിന്റേതായ അക്ഷരമാലയുണ്ട്‌. ഒരു പ്രോഗ്രാമിങ്‌
ഭാഷയുടെ അക്ഷരമാലയെ അതിന്റെ ക്യാരക്ടര്‍ OMG
എന്ന്‌ വിളിക്കുന്നു. ഭാഷയിലെ അംഗീകരിക്കപ്പെട്ട ചിഹ
ങ്ങളുടെ ഗണമാണ്‌ അത്‌. അതില്‍ അക്ഷരങ്ങളും, അക്ക
ങ്ങളും മറ്റ്‌ ചിഹ്നങ്ങളും ഉള്‍പ്പെടുന്നു.
ന്നാം വര്‍ഷ കമ്പ്യൂട്ടര്‍ സയന്‍സ്‌ 5. C++ പ്രോഗ്രാമിങ്‌ - ഒരു ആമുഖം

ന്യുജഗ്സിയിലെ (USA) മുറേഹില്ലിലുളക്ള, AT&T ബെത്‌
ചബ്ോറട്ടറിയിലാണ്‌ Bjarne Stroustrup C++ വികമ്പിച്ഛിച്ചത്‌.
DEqJIG അദ്ദേഹം കൊളംബിയ സര്‍വകലാശാലയിലെ
MBCA അധ്യാപകനും ടെക്സാസ്‌ A&M സര്‍വകമ്ഥാശാ
ചയിലുള്ള കോളേജ്‌ ഓഫ്‌ എഞ്ചിനിയറിംഗിലെ കന്ഥ്യുട്ടീ ശാസ്ത
വിഭാഗത്തിന്റെ ചുമതലയുള്ളയാളുമാണ്‌. അദ്ദേഹത്തിന്‌ നിരവഥി ചുര
സ്‌കാരങ്ങള്‍ ലഭിച്ചിട്ട്‌. C++ ന്റെ ആദ്യകാല നാമം, ക്ലാസ്തുകളോട്‌ Bjarne

കുടിയ C എന്തായിരുന്നു. പിന്നിട്‌ 1983-03 C++ എന്ന്‌ annémoade Stroustrup
രണം ചെയ്തു.
C++ അക്ഷരമാല ചുവടെ ചേര്‍ക്കുംവിധം തരം തിരിച്ചിരിക്കുന്നു.
(0) അക്ഷരങ്ങള്‍ - ൧ മുതല്‍ Z വരെ
a മുതല്‍ 2 വരെ
(1) അക്കങ്ങള്‍ - 9 മുതല്‍ 9 വരെ
(0) പ്രത്യേക ചിഹ്നങ്ങള്‍ - +-*/A*\()[] {}=<>.°%$,;5:%7_# @
(iv) വൈറ്റ്‌ സ്‌പെയ്‌സുകള്‍ - സ്പെയ്സ്‌ ബാര്‍, ഹൊറിസോണ്ടല്‍ ടാബ്‌ (—>), ക്യാരി

യേജ്‌ റിട്ടേണ്‍ + ന്യൂ ലൈന്‍, ഫോം ഫീഡ്‌ തുടങ്ങിയവ
കൊണ്ട്‌ ഉണ്ടാക്കുന്ന വൈറ്റ്‌ സ്‌പെയ്‌സുകള്‍
V) മറ്റു ചിഹ്നങ്ങ - 256 ചിഹ്നങ്ങളില്‍ ഏതിനേയും C++ ei ആയോ
) മറ്റുചി ള്‍ ASCII ചി $108 ഏതി, yo C++ ലിറ്ററല്‍

ഡാറ്റ ആയോ പ്രക്രിയയ്ക്കു വിധേയമാക്കാന്‍ സാധിക്കും.

അടുത്തടുത്ത വാക്കുകളും സംഖ്യകളും വേരീതിരിക്കാന്‌ ഉപയോഗിക്കുന്ന അക
രങ്ങളാണ്‌ ഡൈറ്റ്‌ സ്ചെയ്സ്സപുകശ്‌.

5.2 ടോക്കണുകള്‍ (Tokens)

അക്ഷരമാല പഠിച്ചതിന്‌ ശേഷം അക്ഷരങ്ങള്‍ ചേര്‍ത്തുണ്ടാകുന്ന വാക്കുകളെക്കുറിച്ചുള്ള പഠന
മാണ്‌ അടുത്തത്‌. സ്വാഭാവിക ഭാഷയിലെ വാക്കുകള്‍ക്ക്‌ സമാനമാണ്‌ C++ ഭാഷയിലെ
“ടോക്കണ്‍. ഒരു പ്രോഗ്രാം വികസിപ്പിക്കുന്നതിനുള്ള അടിസ്ഥാന ഘടകങ്ങളാണ്‌ ടോക്കണു
കള്‍. അവ ലെക്സിക്കല്‍ യൂണിറ്റുകള്‍ എന്നും അറിയപ്പെടുന്നു. C++ -ല്‍ താഴെപ്പറയും വിധം
അഞ്ച്‌ തരത്തിലുള്ള ടോക്കണുകളുണ്ട്‌.

1 കീവേര്‍ഡുകള്‍
ഐഡന്റിഫയറുകൾ
ലിറ്ററലുകള്‍
പഞ്ചുവേറ്ററുകള്‍

a FB wRN

ഓപ്പറേറ്ററുകള്‍
5. C++ പ്രോഗ്രാമിങ്‌ - ഒരു ആമുഖം

5.2.1 കീവേഡറുകള്‍ (Keywords)
ഭാഷാ കംബയിലറിന്‌ ഒരു പ്രത്യേക അര്‍ഥം നല്‍കുന്ന വാക്കുകളാണ്‌ (ടോക്കണുകളാണ്‌)
കീവേഡുകള്‍. പ്രത്യേക കാര്യങ്ങള്‍ക്കായി ഭാഷ മാറ്റിവച്ച വാക്കുകളായതിനാലും മറ്റാവശ്യ
ങ്ങള്‍ക്ക്‌ പുനര്‍നിര്‍വചിക്കാന്‍ സാധിക്കാത്തതിനാലും ഇവയെ കീവേഡുകള്‍ എന്നു വിളിക്കുന്നു.
C++ -ലെ 48 കീവേഡുകള്‍ പട്ടിക 5.1-ല്‍ അക്ഷരമാലാക്രമത്തില്‍ രേഖപ്പെടുത്തിയിട്ടുണ്ട്‌. അവ
യുടെ ഉപയോഗം പിന്നീട്‌ വിശദീകരിക്കാം.

asm continue |} float new signed try

auto default for operator sizeof typedef
break delete friend | private static union
case do goto protected |struct unsigned
catch double if public switch virtual
char else inline ! register template |void
class enum int return this volatile
const extern long short throw while

പട്ടിക 5.1:C++ - ലെകീലേദുക്ക്‌

5.2.2 ഐഡന്റിഫയറുകൾ (Identifiers)

സ്ഥലങ്ങള്‍, വ്യക്തികള്‍, വസ്തുക്കള്‍ എന്നിവ തിരിച്ചറിയുന്നതിനായി നാം പേരുകള്‍ നല്‍കാ
റുണ്ട്‌. ഇതിനു വേണ്ടിയാണ്‌ €--ല്‍ ഐഡന്റിഫയറുകൾ ഉപയോഗിക്കുന്നത്‌. മെമ്മറി സ്ഥാന
ങ്ങള്‍, വാചകങ്ങള്‍, ഫങ്ഷനുകള്‍, ഒബ്ജക്ടുകള്‍, ക്ലാസ്സുകള്‍ തുടങ്ങിയ പ്രോഗ്രാമിലെ ഘട
കങ്ങള്‍ക്ക്‌ പേര്‍ നല്‍കുന്നതിന്‌ ഉപയോക്താവ്‌ നിര്‍വചിക്കുന്ന വാക്കുകളാണ്‌ ഐഡന്റിഫയറു
കള്‍. മെമ്മറി സ്ഥാനങ്ങളുടെ ഐഡന്റിഫയറുകളെ വേരിയബിളുകള്‍ എന്ന്‌ വിളിക്കുന്നു. വാച
കങ്ങള്‍ക്ക്‌ നല്‍കുന്ന ഐഡന്റിഫയറുകളെ ലേബലുകള്‍ എന്ന്‌ വിളിക്കുന്നു. ഒരു കൂട്ടം പ്രസ്താ
വനകള്‍ പ്രതിനിധാനം ചെയ്യുന്ന ഐഡന്റിഫയറുകളാണ്‌ ഫങ്ഷന്‍ നാമങ്ങള്‍.

ഒരു പ്രോഗ്രാമില്‍ ഐഡന്റിഫയറുകള്‍ നിര്‍മ്മിക്കുമ്പോള്‍, ചില നിബന്ധനകള്‍ കൃത്യമായി
പാലിക്കേണ്ടതാവശ്യമാണ്‌. ആ നിയമങ്ങള്‍ താഴെപ്പറയും വിധമാണ്‌.

° അക്ഷരങ്ങള്‍, അക്കങ്ങള്‍, അണ്ടര്‍ സ്‌കോര്‍ (_) തുടങ്ങിയവയുടെ ഒരു ശ്രേണിയാണ്‌
ഐഡന്റിഫയര്‍.

° ഐഡന്റിഫയര്‍ തുടങ്ങുന്നത്‌ അക്ഷരത്തിലോ, അണ്ടര്‍ സ്കോറിലോ (_) ആയിരിക്കണം.

€ വൈറ്റ്‌ സ്പെയ്‌സോ പ്രത്യേക ചിഹ്നങ്ങളോ അനുവദനീയമല്ല.

ര കീവേഡുകള്‍ ഐഡന്റിഫയറായി ഉപയോഗിക്കാന്‍ പാടില്ല.

ഭ ചെറിയ അക്ഷരങ്ങളും വലിയ അക്ഷരങ്ങളും വ്യത്യസ്തമായാണ്‌ C++-G8 ഉപയോഗിക്കു
ന്നത്‌. അതായത്‌ C++ കെയ്സ്‌ സെന്‍സിറ്റീവാണ്‌.

സാധുവായ ചില ഐഡന്റിഫയറുകള്‍ക്ക്‌ ഉദാഹരണം: Count, sumof2numbers,
Average_Height, _lstRank, Main, FOR
5. C++ പ്രോഗ്രാമിങ്‌ - ഒരു ആമുഖം

ഒന്നാം വര്‍ഷ കമ്പ്യൂട്ടര്‍ സയന്‍സ്‌

താഴെപ്പറയുന്നവ ചില അസാധുവായ ഐഡന്റിഫയറുകളാണ്‌. അതിനുള്ള കാരണങ്ങളും സൂചി

പ്പിച്ചിരിക്കുന്നു.
Sum of digits DP ശുനൃസ്ഥലങ്ങള്‍ ഉപയോഗിച്ചിരിക്കുന്നു
Istyear ൨൭. അക്കം ആദ്യത്തെ അക്ഷരമായി ഉപയോഗിച്ചിരിക്കുന്നു
First . Jan D> പ്രത്യേക ചിഹ്നം (.) ഉപയോഗിച്ചിരിക്കുന്നു
for > അതൊരു കീവേഡാണ്‌

താഴെ തന്നിരിക്കുന്നവയില്‍ നിന്ന്‌ അസാധുവായ ഐഡന്റിഫയറുകൾ കണ്ടെ

ത്തുക. അതിനുള്ള കാരണവും എഴുതുക.
Data_rec, _data, Idata, datal, my.file, asm,

ഞ്ഞ switch, goto, break

5.2.3 ലിറ്റുറലുകള്‍ (Literals)

11-00 ക്ലാസ്‌ വിദ്ധ്യാര്‍ഥികള്‍ക്കായുള്ള ഏകജാലക പ്രവേശന സംവിധാനം പരിഗണിക്കുക. പ്രവേ
ശന ഫോറത്തില്‍ നിങ്ങള്‍ ജനനത്തീയതി നല്‍കിയിട്ടുണ്ടാകും. ജനനത്തീയതി ഒരിക്കലും മാറു
ന്നില്ല. ഗണിത ശാസ്ത്രത്തില്‍ T ഒരു സ്ഥിരാംഗവും ഗുരുത്വാകര്‍ഷണ സ്ഥിരാംഗം “മ യുടെ
വില (9.8 മീ. /സെ.) ഒരിക്കലും മാറാത്തതുമാണെന്ന്‌ നമുക്കറിയാം. അതുപോലെ, C++ -ല്‍
ഡാറ്റാ ഇനങ്ങളെ പ്രതിനിധാനം ചെയ്യാന്‍ നാം ഉപയോഗിക്കുന്ന ടോക്കണുകളായ ലിറ്ററലു
കള്‍, പ്രോ്രഗാം പ്രവര്‍ത്തിച്ച്‌ തീരും വരെ വില മാറ്റം വരാതെ തുടരുന്നു. അവയെ പലപ്പോഴും
സ്ഥിരാംഗങ്ങള്‍ എന്ന്‌ വിളിക്കുന്നു. ലിറ്ററലുകള്‍ താഴെ പറയും വിധം നാലായി തരം തിരിക്ക
പ്പെട്ടിരിക്കുന്നു.

1 ഇന്റിജര്‍ ലിറ്ററല്‍
2 ഫ്‌ളോട്ടിംഗ്‌ പോയിന്റ്‌ ലിറ്ററല്‍
3 ക്യാരക്ടര്‍ ലിറ്ററല്‍
4 സ്ര്രിങ്‌ ലിറ്ററല്‍
md ad ലിറ്ററലദുകള്‍ (്രമൂര്‍ണസംഖ്യാ സ9ിരാംഗങ്ങള്‍)

1776, 707, -273 എന്നീ സംഖ്യകള്‍ പരിഗണിക്കുക. അവ പൂര്‍ണ ദശാങ്ക വിലകള്‍ സൂചിപ്പി
ക്കുന്ന ഇന്റിജര്‍ സ്ഥിരാംഗങ്ങളാണ്‌. അക്കങ്ങള്‍ മാത്രം ചേര്‍ത്തുണ്ടായിട്ടുള്ള ടോക്കണുകളായ
ഇന്റിജര്‍ ലിറ്ററലുകള്‍ അവിഭാജ്യ ഘടകങ്ങളില്ലാത്ത പൂര്‍ണ സംഖ്യകളാണ്‌. ഇന്റിജര്‍ ലിറ്ററലു
കളുടെ സ്വഭാവ സവിശേഷതകള്‍ താഴെപ്പറയുന്നവയാണ്‌.

൭ ഒരു പൂര്‍ണ സംഖ്യാ സ്ഥിരാംഗത്തിന്‌ ഒരു അക്കമെങ്കിലും ഉണ്ടായിരിക്കണം. ദശാംശം
ഉണ്ടാകരുത്‌.
ഒന്നാം വര്‍ഷ കമ്പൂട്ടര്‍ സയിന്‍സ്‌ 5. C++ പ്രോഗ്രാമിങ്‌ - ഒരു ആമുഖം

താഴെത്തന്നിടുകൂളവ സാധുവോ അസ്ധാധുവോ ആയ പുര്‍ണ്ണ സ്പാഖ്യാ
സ്ഥിരാംഗങ്ങളായ? തരാതിരിക്കുകയും അവ അമ്ധാധുവായതിന്റെ കാരണം
കണ്ടെത്തുകയും ചെയ്യുക.

77,000 70 314. 5432 +15346
42326൦ -.7563 -0228140 12340856 9999

C++ -ല്‍ ദശാംശ സംഖ്യകള്‍ (ബേസ്‌-10) കൂടാതെ അഷ്ടാംഗസംഖ്യകളും

(ബേസ്‌-ദ) ഷോഡശ സംഖ്യകളും (ബേസ്‌--16) ലിറ്ററലുകളായി (സ്ഥിരാംഗ

ങ്ങളായി) ഉപയോഗിക്കുന്നു. അഷ്ടാംഗ സംഖ്യയെ സൂചിപ്പിക്കുന്നതിന്‌ 0 (പൂജ്യം

എന്ന ചിഹ്നം) മുന്നില്‍ നല്‍കുകയും ഷോഡശ സംഖ്യയെ സൂചിപ്പിക്കുന്നതിന്‌
OX (പൂജ്യം, X) മുന്നില്‍ നല്‍കുകയും ചെയ്യുന്നു. ഉദാഹരണമായി പൂര്‍ണസംഖ്യാ സ്ഥിരാംഗ
ങ്ങളായ 75 (ബേസ്‌-10)-ഉം 0113 (ബേസ്‌-8)-ഉം 0 x 413 (ബേസ്‌--16)-ഉം എല്ലാം പരസ്പരം
തുല്യമാണ്‌.

൭ സ്സാഖ്യ പോസിറ്റീവ്‌ എന്നോ നെഗറ്റീവ്‌ എന്നോ കാണിക്കുന്ന + അല്ലെങ്കില്‍ - ചിഹ്നം
ആദ്യ അക്ഷരമായി വരാവുന്നതാണ്‌.

൭ ചിന്നം ഇല്ലാത്ത സംഖ്യ പോസിറ്റീവ്‌ സംഖ്യയായി കണക്കാക്കുന്നു.

൭ മറ്റ്‌ ചിഹ്നങ്ങള്‍ അനുവദിക്കില്ല.

ഷ്ളോട്ടിങ്‌ പോയിന്റ്‌” (അസ്ധിര ദശാംശ സംഖ്യ) ലിറ്ററലറുുകള്‍

3.1459, 3.00", 1.6x10, 3.0 തുടങ്ങിയ സംഖ്യകള്‍ നിങ്ങള്‍ക്ക്‌ പരിചിതമാണല്ലോ. ഇവ
സാധുവായ നാല്‍ വിലകളാണ്‌. ഒന്നാമത്തേത്‌ TT (പൈ)-യുടെ വിലയും, രണ്ടാമത്തേത്‌ പ്രകാശ
വേഗത മീറ്റര്‍/സെക്കന്റില്‍ ഉള്ളതും, മൂന്നാമത്തേത്‌ ഇലക്ട്രോണിന്റെ വൈദ്യുത ചാര്‍ജും (വളരെ
ചെറിയ സഖ്യ) അവസാനത്തേത്‌ 3 എന്ന സംഖ്യയെ അസ്ഥിര ദശാംശസാഖ്യ ലിറ്ററലായി
പ്രസ്താവിച്ചിട്ടുള്ളതുമാണ്‌.

അസ്ഥിര ദശാംശസാഖ്ലയ ലിറ്ററലുകള്‍ അവിഭാജ്യ ഘടകങ്ങളുള്ള രേഖീയ സ്ഥിരാംഗങ്ങള്‍ എന്നും
അറിയപ്പെടുന്നു. ഇവ അവിഭാജ്യ രൂപമായോ കൃത്യങ്കരുപമായോ എഴുതാന്‍ സാധിക്കും.

രേഖീയ സ്ഥിരാംഗങ്ങള്‍ അവിഭാജ്യ രൂപത്തില്‍ ചിഹ്നമുള്ളതോ ഇല്ലാത്തതോ ആയതും,
അക്കങ്ങള്‍ ചേര്‍ന്നതും, അവയ്ക്കിടയില്‍ ദശാംശമുള്ളവയുമായിരിക്കും. രേഖീയ സ്ഥിരാംഗങ്ങള്‍
അവിഭാജ്യ രൂപത്തിലെഴുതുന്നതിനുള്ള നിയമങ്ങള്‍ ചുവടെ ചേര്‍ക്കുന്നു.

ഭ ഒരു രേഖീയ സ്ഥിരാംഗത്തിന്‌ അതിന്റെ അവിഭാജ്യ രൂപത്തില്‍ ഒരക്കവും ഒരു ദശാംശവും
എങ്കിലും ഉണ്ടായിരിക്കണം.

€ അതിന്‌ ഒന്നുകില്‍ + (അധികം) അല്ലെങ്കില്‍ - (ന്യൂനം) ചിഹ്നം തുടക്കത്തില്‍ ഉണ്ടാകാം.
€ ചിഹ്നം ഇല്ലാത്ത ഒരു സ്ഥിരാംഗത്തെ അധിക ചിഹ്നമുള്ള സംഖ്യയായി കണക്കാക്കാം.

കൃത്യങ്കരുപത്തില്‍ ഒരു രേഖീയ സ്ഥിരാംഗത്തിന്‌ രണ്ട്‌ ഭാഗങ്ങളുണ്ടാകും - അപൂര്‍ണ സംഖ്യാ
5. C++ പ്രോഗ്രാമിങ്‌ - ഒരു ആമുഖം

ഒന്നാം വര്‍ഷ കമ്പ്യൂട്ടര്‍ സയന്‍സ്‌

ഭാഗവും (മാന്റിസ്സ) കൃത്യങ്കവും. ഉദാഹരണമായി, 5.8 എന്നത്‌ 0.58 x 10 5 0.58 El എന്നെഴു
താനാകും. ഇതില്‍ കൃത്യങ്കഭാഗം 1-ഉം (E ക്ക്‌ ശേഷം വരുന്ന ഭാഗം) മാന്റിസ്സു ഭാഗം 0.58-ഉം (1:
യ്ക്ക്‌ മുമ്പുള്ള ഭാഗം) ആണ്‌. 1: 1 എന്നത്‌ 10!-aM സൂചിപ്പിക്കുന്നു. കൃത്യം രൂപത്തില്‍ രേഖീയ
സ്ഥിരാംഗം എഴുതുന്നതിനുള്ള നിയമങ്ങള്‍ താഴെപ്പറയും വിധമാണ്‌.

൭ കൃത്യങ്ക രൂപത്തില്‍ രേഖീയ സ്ഥിരാംഗങ്ങള്‍ക്ക്‌ രണ്ട്‌ ഭാഗങ്ങളുണ്ടായിരിക്കും. ഒരു പൂര്‍ണ
സംഖ്യാ ഭാഗവും ഒരു കൃത്യങ്കവും.

൭൫ അപൂര്‍ണ സംഖ്യാ ഭാഗം ഒന്നുകില്‍ ഒരു പൂര്‍ണ സംഖ്യാ രൂപത്തിലോ അല്ലെങ്കില്‍ സാധു
വായ അവിഭാജ്യ രൂപത്തിലോ ആയിരിക്കും.

൭ അപൂര്‍ണ സംഖ്യാ ഭാഗത്തെ തുടര്‍ന്ന്‌ 1: അല്ലെങ്കില്‍ € എന്ന അക്ഷരവും കൃത്യങ്കവുമു
ണ്ടാകും.

൭ BLM Bro പൂര്‍ണസാഖ്യ ആയിരിക്കണം.

താരെത്തന്നിട്ടുളളവ സാധുവായ രേഖീയ സ്ഥിരാംഗങ്ങളാണ്‌.

52.0 107.5 -713.8 -.00925
453.E-5 1.25E08 21204 562.0E09
152E+8 1520EK04 -0.573E-7 -.097

ചില അസാധുവായ രേഖീയ സ്ഥിരാംഗങ്ങള്‍ കാരണസഹിതം ഇതോടൊപ്പം ചേര്‍ക്കുന്നു.
58,250.262 (കോമ ഉപയോഗിച്ചിരിക്കുന്നു), 5.81: (GOs ഭാഗം ഇല്ല), 0.58E2.3 (കൃത്യം

മായി അവിഭാജ്യ സംഖ്യ ഉപയോഗിച്ചിരിക്കുന്നു).

താഴെ തന്നിടുക്ളവയെ കാരണസഹിതം സ്ധാധുവോ GOMIW}EAID ആയ
രേഖീയ സ്ഥിരാംഗങ്ങളായി തരംതിരിക്കുക.

77, 00,000 7.0 3.14 -5.0E5.4 +53.45E-6
+532.67. .7562-3 -0.528E10 1234.56789 34,56.24
4353 +34/2 5.6E 4356 0

ക്യാരക്ടര്‍ ലിറ്ററല്‍

സാധാരണ ലിംഗഭേദത്തെ കാണിക്കുന്നതിനായി ആണ്‍ (Male) എന്നതിന്‌ 'M' അല്ലെങ്കില്‍ 'm'

എന്നും പെണ്‍ (Female) എന്നതിന്‌ 1 അല്ലെങ്കില്‍ 'f എന്നും ഉപയോഗിക്കാറുണ്ട്‌. അതുപോ
ലെ, അതെ (Yes) എന്നതിന്‌ 'y' അല്ലങ്കില്‍ 'Y' എന്നും അല്ല (No) എന്നതിന്‌ ൩ അല്ലെങ്കില്‍ 'N'
എന്നും നാം ഉപയോഗിക്കുന്നു. ഇവയെല്ലാം ഒറ്റ അക്ഷരങ്ങളാണ്‌. പ്രോ്രഗാം പ്രവര്‍ത്തിച്ച്‌ തീരും
വരെ അവ വില മാറ്റമില്ലാതെ തുടരുന്നു. ഒരു ജോഡി ഏക സൂചകങ്ങള്‍ക്കുള്ളില്‍ (ഒറ്റ ഉദ്ധര
ണികള്‍ക്ക്‌ ഉള്ളില്‍) ഉപയോഗിച്ചിരിക്കുന്ന അക്ഷരത്തെ ക്യാരക്ടര്‍ ലിറ്ററല്‍ അല്ലെങ്കില്‍ ക്യാര
ക്ടര്‍ സ്ഥിരാംഗം എന്നു വിളിക്കുന്നു.

ഉദ്ധരണി ഇല്ലാതെ ഉപയോഗിക്കുന്ന X ഐഡന്റിഫയറും ഉദ്ധരണിക്കുള്ളില്‍ ഉപയോഗിക്കുന്ന
'X' ക്യാരക്ടര്‍ ലിറ്ററലുമാണ്‌. ക്യാരക്ടര്‍ സ്ഥിരാംഗത്തിന്റെ വില എന്നത്‌ അതിന്റെ ASCII വില
യാണ്‌. '൦ -യുടെ വില എന്നത്‌ 'c' -യുടെ ASCII വിലയായ 99-ഉം '൧'-യുടെ വില എന്നത്‌
അതിന്റെ ASCII വിലയായ 65-ഉം ആണ്‌.

) 5) ഒന്നാം വര്‍ഷ കമ്പൂട്ടര്‍ സയിന്‍സ്‌ 5. C++ പ്രോഗ്രാമിങ്‌ - ഒരു ആമുഖം

C++ ഭാഷയില്‍ ചില ചിത്രീകരിക്കാനാകാത്ത ക്യാരക്ടര്‍ സ്ഥിരാംഗങ്ങളുണ്ട്‌, അവയെ കീ
ബോര്‍ഡില്‍ നിന്ന്‌ നേരിട്ട്‌ ടൈപ്പ്‌ ചെയ്യാന്‍ സാധിക്കില്ല. ഉദാഹരണമായി, ക്യാരിയേജ്‌ റിട്ടേണ്‍
അല്ലെങ്കില്‍ എന്റര്‍ കീ, ടാബ്‌ കീ, ബാക്ക്‌ സ്പെയ്സ്‌ കീ എന്നിവ ഒരു രീതിയിലും പ്രകടിപ്പി
ക്കാന്‍ സാധ്യമല്ല. ഇത്തരം പ്രകടിപ്പിക്കാനാകാത്ത ചിഹ്നങ്ങളെ പ്രതിനിധീകരിക്കാനായി
എസ്‌കേപ്പ്‌ സീക്വന്‍സുകള്‍ ഉപയോഗിക്കാം. അവയില്‍ ബാക്ക്‌ സ്ലാഷും തുടര്‍ന്ന്‌ വരുന്ന
ഒന്നോ അതിലധികമോ അക്ഷരങ്ങളും അടങ്ങിയിരിക്കും. എസ്‌കെയ്പ്‌ സീക്വന്‍സുകള്‍ ഒരു
ജോഡി ഏക സൂചകങ്ങള്‍ക്കുള്ളിലുള്ള ഒന്നിലധികം അക്ഷരങ്ങള്‍ ചേര്‍ന്നതാണെങ്കിലും ആനു
പാതികമായ ഒരു ASCII കോഡുപയോഗിച്ചാണ്‌ അത്‌ സൂചിപ്പിക്കുന്നത്‌ എന്ന കാര്യം ശ്രദ്ധി
ക്കേണ്ടതാണ്‌. അതുകൊണ്ടാണ്‌ അവയെ ക്യാരക്ടര്‍ സ്ഥിരാംഗങ്ങളായി കണക്കാക്കുന്നത്‌. പട്ടിക
5.2-ല്‍ എസ്‌കേപ്പ്‌ സീക്വന്‍സുകളും ആനു

പാതികമായ ക്യാരക്ടറുകളും കുറിച്ചിട്ടുണ്ട്‌. എസ്‌കേപ്പ്‌ ആനുപാതികമായ
സീക്വന്‍സ്‌ ചിത്രീകരിക്കാനാകാത്ത
ചിഹ്നങ്ങള്‍

പട്ടിക 5.2-ല്‍ \’, \’, \? എന്നിവ നിങ്ങള്‍ക്ക്‌

കാണാന്‍ സാധിക്കും. ഈ ചിഹ്നങ്ങള്‍

(അക്ഷരങ്ങള്‍) കീ ബോര്‍ഡില്‍ നിന്ന്‌ ടൈപ്പ്‌ ഓഡിയബിള്‍ ബെല്‍
ചെയ്യാന്‍ സാധിക്കുമെങ്കിലും എസ്‌കേപ്പ്‌ (അലെര്‍ട്ട)

സീക്വന്‍സ്‌ ഇല്ലാതെ ഉപയോഗിച്ചാല്‍ അവ ബാക്ക്‌ സ്പെയ്സ്‌
പ്രത്യേക ഉദ്ദേശ്യവും കാര്യവുമായിരിക്കും ഫോം ഫീഡ്‌
നിര്‍വഹിക്കുന്നത്‌. അവ അതുപോലെ തന്നെ ന്യൂലൈന്‍ അല്ലെങ്കില്‍
പ്രദര്‍ശിപ്പിക്കുകയോ അച്ചടിക്കുകയോ ചെ ലൈന്‍ഫീഡ്‌

യ്യേണ്ടി വന്നാല്‍ എസ്‌കേപ്പ്‌ സീക്വന്‍സ്‌ ഉപ ക്യാരിയേജ്‌ റിട്ടേണ്‍
യോഗിക്കണം. ചില സാധുവായ ക്യാരക്ടര്‍ ഹൊറിസോണ്ടല്‍ ടാബ്‌

സ്ഥിരാംഗങ്ങള്‍ക്ക്‌ ഉദാഹരണങ്ങളാണ്‌; വെര്‍ട്ടിക്കല്‍ ടാബ്‌

96S, WW, 4, 9 ബാക്ക്‌ ayont
ചില അസാധുവായ ക്യാരക്ടര്‍ സ്ഥിരാങ്കം സിംഗിള്‍ കോട്ട (ഏകസൂചകം)
ങ്ങള്‍ കാരണ സഹിതം തന്നിരിക്കുന്നു. ഡബിള്‍ ക്വോട്ട്‌ (ജോഡിയായ

A (ഏക ഉദ്ധരണി ഇല്ല), “82” (ഒന്നിലധികം സൂചകം)

ക്വസ്റ്്യന്‍ മാര്‍ക്ക്‌ (ചോദ്യ,

അക്ഷരങ്ങള്‍), "K" (ഏക ഉദ്ധരണിക്ക്‌ പകരം
ജോഡിയായ ഉദ്ധരണികള്‍), “ഉ (അസാധു ചിഹ്നം)
വായ എസ്‌കേപ്പ്‌ സീക്വന്‍സ്‌ അല്ലെങ്കില്‍ MB ക്യാരക്ടര്‍

ഒന്നിലധികം അക്ഷരങ്ങള്‍).
പട്ടിക 5.2: Vert ൯7ക്രീദ്ധുകള്‍്‌

ഒക്ടല്‍ സംഖ്യകളെയും ഹെക്സാ ഡെസിമല്‍ സംഖ്യകളെയും എസ്കേപ്പ്‌
സീക്വന്‍സുകളുടെ സഹായത്താലാണ്‌ C++-G സൂചിപ്പിക്കുന്നത്‌. \On-go \xHn-
ഉം യഥാക്രമം ഒക്ടല്‍ സംഖ്യാ സ്രമ്പദായത്തിലും ഹെക്സാ ഡെസിമല്‍ സംഖ്യാന
സ്ര്രദായത്തിലും ഉളള സംഖ്യകളെ സൂചിപ്പിക്കുന്നു.
5. C++ പ്രോഗ്രാമിങ്‌ - ഒരു ആമുഖം

ഒന്നാം വര്‍ഷ കമ്പ്യൂട്ടര്‍ സയന്‍സ്‌

av(sles’ ലിറ്ററല്‍

നന്ദന ഒരു വിദ്യാര്‍ഥിനിയാണ്‌. അവള്‍ ബാപ്പുജി നഗറില്‍ താമസിക്കുന്നു. ഇവിടെ “Nandana”
എന്നത്‌ ഒരു പെണ്‍കുട്ടിയുടെ പേരും “Bapuji Nagar” എന്നത്‌ ഒരു സ്ഥല നാമവുമാണ്‌. ഈ
രീതിയിലുള്ള ഡാറ്റ, പ്രോശഗോമുകളുടെ സഹായത്താല്‍ പ്രോസസ്സ്‌ ചെയ്യേണ്ടി വരും. അത്തരം
ഡാറ്റയെ സ്ര്രിങ്‌ സ്ഥിരാംഗങ്ങളായി പരിഗണിക്കുകയും ജോഡികളായ ഉദ്ധരണികള്‍ക്കുള്ളില്‍
ഉള്‍പ്പെടുത്തുകയും ചെയ്യുന്നു. തുടര്‍ച്ചയായ ഒന്നോ അതിലധികമോ അക്ഷരങ്ങള്‍ (ചിഹ്നങ്ങള്‍),
രണ്ട്‌ ജോടിയായ സൂചകങ്ങള്‍ക്കുള്ളില്‍ (ഉദ്ധരണികള്‍ക്കുള്ളില്‍) അടക്കം ചെയ്തതാണ്‌ സ്ര്രിങ്‌
സ്ഥിരാംഗങ്ങള്‍. ഉദാഹരണമായി “Hello friends”, “123”, “C++”, “Baby\’s Day Out” എന്നിവ
സാധുവായ സ്ര്രിങ്‌ സ്ഥിരാംഗങ്ങളാണ്‌.

താഴെ തന്നിടുളളുവ പല വിഭാഗങ്ങളിലുള്ള ഥിറ്ററലുകളായ? (സ്ഥിരാംഗങ്ങ

8001) തരംതിരിക്കുക.

= Xa’ ‘rita’ -124 12.5 -12e-1
നമുക്ക്‌ ചെയ്യാ
“raju\’s pen” 0 -11.999 *\\" 32760

5.2.4 പഞ്ചറുവേറ്റററുകള്‍ (പൂര്‍ണ വിരാമ ചിഹ്നങ്ങള്‍)
(Punctuators)

വാക്യങ്ങളിലെ വ്യാകരണത്തിന്റെ പൂര്‍ണതയ്ക്കായി പഞ്ചുവേഷന്‍ അടയാളങ്ങള്‍ ഇംഗ്ലീഷ്‌,
മലയാളം തുടങ്ങിയ ഭാഷകളിലുപയോഗിക്കുന്നുണ്ട്‌. ഉദാഹരണമായി, “ആരാണ്‌ C++ വികസി
പ്പിച്ചത്‌?” എന്ന വാക്യം ശ്രദ്ധിക്കുക. ഇവിടെ *? എന്നത്‌ പഞ്ചുവേഷന്‍ അടയാളവും അത്‌ സൂചി
പ്പിക്കുന്നത്‌ ഒരു ചോദ്യ പ്രസ്താവനയെയുമാണ്‌. അതുപോലെ എല്ലാ വാക്യങ്ങളുടെയും അവ
സാനം നാം പൂര്‍ണവിരാമ ചിഹ്നം (.) ഇടുന്നു. അത്തരത്തില്‍ അര്‍ഥ സംബന്ധമായോ, പദ
വിന്യാസപരമായോ ഉള്ള പൊരുള്‍ കംബയിലറിന്‌ എത്തിക്കുവാനായി ----ലും ചില പ്രത്യേക
ചിഹ്നങ്ങള്‍ ഉണ്ട്‌. അവയെ പഞ്ചുവേറ്ററുകള്‍ എന്ന്‌ വിളിക്കുന്നു.

അവയ്ക്കുള്ള ഉദാഹരണങ്ങളാണ്‌ # ; * ₹ () { ) [ 1] എന്നിവ. ഓരോ പഞ്ചുവേറ്ററി
ന്റെയും ഉപയോഗം പിന്നീട്‌ ചര്‍ച്ച ചെയ്യാം.

5.2.5 ഓഷറേറ്ററുകള്‍ (Operators)

5-Q0 3-ഉം തമ്മില്‍ കൂട്ടേണ്ടി വരുമ്പോള്‍, അവ 5+3 എന്ന്‌ നാം സൂചിപ്പിക്കുന്നു. ഇവിടെ +
എന്നത്‌ സങ്കലനം എന്ന പ്രവൃത്തിയെ കാണിക്കുന്ന ഓപ്പറേറ്റര്‍ ആണ്‌. --ല്‍
ഇതുപോലെയുള്ള ധാരാളം ഓപ്പറേറ്ററുകള്‍ ഉണ്ട്‌. കംമ്പയിലറിനോട്‌ ഒരു പ്രത്യേക പ്രവൃത്തി
യെക്കുറിച്ച്‌ പറയുന്നതിന്‌ ഉപയോഗിക്കുന്ന ചിഹ്നമാണ്‌ ഓപ്പറേറ്റര്‍. ഏതെങ്കിലും തരത്തിലുള്ള
പ്രവൃത്തിയെ ഉത്തേജിപ്പിക്കുന്ന ടോക്കണുകളാണ്‌ അവ. ഓപ്പറന്റുകള്‍ എന്ന്‌ വിളിക്കുന്ന ഒരു
കൂട്ടം ഡാറ്റാകളില്‍ ഓപ്പറേറ്ററുകള്‍ പ്രയോഗിക്കുന്നു. അരിത്മെറ്റിക്‌, ലോജിക്കല്‍, റിലേഷണല്‍,
കണ്ടീഷണല്‍, അസൈന്‍മെന്റ്‌ തുടങ്ങിയ വിവിധ തരം ഓപ്പറേറ്ററുകള്‍ C++ -G8 ഉണ്ട്‌. ഓപ്പറേ
റ്ററുകളെക്കുറിച്ച്‌ കൂടുതലായി നമുക്ക്‌ അടുത്ത അധ്യായത്തില്‍ ചര്‍ച്ച ചെയ്യാം.
5. C++ പ്രോഗ്രാമിങ്‌ - ഒരു ആമുഖം

താഴെ തന്നിടടുള്ളവ വിവിധയിനം ടോക്കണ്ടുകളായി തരംതിരിക്കുക.

/ -24 + -12e-1 '“KLO1”

Sum “raju\’s pen” if rita \\"
reak }

5
5.3 ഇന്റഗ്രേറ്റഡ്‌ ഡവലപ്മെന്റ്‌ എന്‍വയോണ്‍മെന്റ്‌ - IDE

ഒരു C++ പ്രോഗ്രാമിലെ അടിസ്ഥാന ഘടകങ്ങള്‍ നാം ഇപ്പോള്‍ പഠിച്ചു കഴിഞ്ഞു. C++ പ്രോഗ്രാ

മുകള്‍ എഴുതിത്തുടങ്ങുന്നതിന്‌ മുന്‍പ്‌ എവിടെയാണ്‌ പ്രോ്രഗാം ടൈപ്പ്‌ ചെയ്യേണ്ടതെന്ന്‌ നാം
അറിഞ്ഞിരിക്കണം. മറ്റ്‌ പ്രോഗ്രാമിങ്‌ ഭാഷകളെപ്പോലെ ഒരു ടെക്സ്റ്റ്‌ എഡിറ്റര്‍ ഉപയോഗിച്ച്‌
C++ പ്രോഗ്രാം നിര്‍മ്മിക്കാം. C++ പ്രോഗ്രാമുകള്‍ സൃഷ്ടിക്കാനായി ടര്‍ബോ ൦, ബോറോ
ലാന്റ്‌ C++, GCC തുടങ്ങിയ കമ്പയിലറുകള്‍ IDE ലഭ്യമാക്കുന്നു. ഇവയില്‍ പല 1121:-കളിലും
ടൈപ്പിങ്‌, എഡിറ്റിങ്‌, സേര്‍ച്ചിങ്‌, ലിങ്കിങ്‌, കമ്പയിലിങ്‌, എക്സിക്യൂട്ടിങ്‌ എന്നീ സാകര്യങ്ങള്‍
ഉണ്ട്‌. ഇത്തരം പ്രവര്‍ത്തനങ്ങള്‍ക്കായി നാം ഇവിടെ ജിനി IDE (ഐ.ടി.൪ സ്കൂള്‍ ഉബുണ്ടു
ലിനക്സ്‌ 14.04) ഉപയോഗിക്കുന്നു.

GCC യോടൊപ്പമുള്ള ജിനി IDE

ലിനക്സ്‌ ഓപ്പറേറ്റിംഗ്‌ സിസ്റ്റത്തോടൊപ്പം ലഭ്യമാകുന്ന ഒരു സ്വത്രത്ര സോഫ്റ്റ്വെയറാണ്‌
GCC കമ്പയിലര്‍. GCC എന്നത്‌ GNU കമ്പയിലര്‍ കളക്ഷനെ പ്രതിനിധാനം ചെയ്യുന്നതും ISO
C++ മാനദണ്ഡങ്ങള്‍ അനുസരിച്ച്‌ പ്രവര്‍ത്തിക്കുന്നതുമായ ഒരു ജനപ്രിയ കമ്പയിലറാണ്‌. C++
പ്രോഗ്രാമുകള്‍ എഴുതുന്നതിനും, കമ്പയില്‍ ചെയ്യുന്നതിനും എക്സികൂട്ട്‌ ചെയ്യുന്നതിനുമുള്ള
ഒരു ക്രോസ്‌ - പ്ലാറ്റ്ഫോം IDE ആണ്‌ ജിനി.

A. എഡിറ്റ്‌ വിന്‍ഡോ തുറക്കുന്ന വിധം
ഉബുണ്ടു ലിനക്സിന്റെ ആപ്ലിക്കേഷന്‍സ്‌ മെനുവില്‍ നിന്നുമാണ്‌ ജിനി 1121:-യുടെ എഡിറ്റ്‌
വിന്‍ഡോ തുറക്കുന്നത്‌.

അപ്ലിക്കേഷനുകള്‍ -൭. പ്രോഗാമിങ്‌ 22101

ജിനി IDE അതിന്റെ വിന്‍ഡോ തുറക്കുന്നത്‌ ചിത്രം 5.1-ല്‍ കാണിച്ചിരിക്കും വിധമാണ്‌. അതിന്‌
ഒരു ടൈറ്റില്‍ ബാര്‍, മെനു ബാര്‍, ടൂള്‍ ബാര്‍, കോഡ്‌ എഡിറ്റ്‌ ചെയ്യാനുള്ള സ്ഥലം എന്നിവ ഉ
ണ്ടാകും. അണ്‍ ടൈറ്റില്‍ഡ്‌ എന്ന പേരിലുള്ള ഒരു ടാബും അവിടെ കാണാന്‍ സാധിക്കും.
വിന്‍ഡോസ്‌ ഓപ്പറേറ്റിംഗ്‌ സിസ്റ്റത്തില്‍ ജിനി 1.24 ആണ്‌ നാം ഉപയോഗിക്കുന്നതെങ്കില്‍, തുറ
ക്കുന്ന ജാലകം (വിന്‍ഡോ) ചിത്രം 5.2-ല്‍ കാണിച്ചിരിക്കും വിധമായിരിക്കും. മുകളില്‍ പരാ
മര്‍ശിച്ച രണ്ട്‌ ജാലകങ്ങളും (വിന്‍ഡോകളും) സമാനമാണെന്ന്‌ നമുക്ക്‌ കാണാം.

അണ്‍ടൈറ്റില്‍ഡ്‌ എന്ന തനത്‌ പേരുള്ള ഫയലില്‍ നമുക്ക്‌ പ്രോ്രഗാം എഡിറ്റ്‌ ചെയ്യാം. ഒരു
പുതിയ ഫയല്‍ തുറക്കാനായി ഫയല്‍ മെനുവിലെ ന്യൂ ഓപ്ഷന്‍ തിരഞ്ഞെടുക്കുകയോ ടൂള്‍

ബാറിലുളള ന്യൂ ബട്ടണ്‍ ക്ലിക്ക്‌ ചെയ്യുകയോ ആകാം. ഇതേ ആവശ്യത്തിനായി Ctrl+N

എന്നീ കീ-കള്‍ ഒരുമിച്ചും ഉപയോഗിക്കാം.
ഒന്നാം വര്‍ഷ കമ്പ്യൂട്ടര്‍ സയന്‍സ്‌

13. പ്രോഗ്രാം സേവ്‌
ചെയ്യുന്നു

ഒരിക്കല്‍ ഫയല്‍ തുറന്നാല്‍ C++
പ്രോഗ്രാം നല്‍കുകയും അനുയോ
ജ്യമായ ഫയല്‍ നാമത്തോടൊപ്പം
CPP എന്ന എക്സ്റ്റന്‍ഷന്‍ കൊടുത്ത്‌
അത്‌ സേവ്‌ ചെയ്യുകയും ആകാം.
GCC എന്നത്‌ ഒരു കൂട്ടം കമ്പയില
റുകള്‍ ആയതിനാല്‍ കോഡിന്റെ
കമ്പയിലേഷന്‌ വേണ്ടി ഏത്‌ കമ്പ
യിലര്‍ തിരഞ്ഞെടുക്കണമെന്ന്‌ തീരു
മാനിക്കുന്നത്‌ അതിന്റെ എക്സ്റ്റന്‍
ഷന്‍ നോക്കിയാണ്‌. അതുകൊണ്ട്‌
ഫയല്‍ എക്സ്റ്റന്‍ഷന്‍ കൃത്യമായി
നല്‍കിയിരിക്കണം. പ്രോഗ്രാം ടൈപ്പ്‌
ചെയ്യുന്നതിന്‌ മുന്‍പായി നാം
ഫയല്‍ നാമം നല്‍കുകയാണെ
ങ്കില്‍, പ്രോഗ്രാമിലുള്ള വിവിധയിനം
ടോക്കണുകളെ വേര്‍തിരിച്ച്‌ കാണി
ക്കാനായി GCC സ്വയം പല നിറ
ങ്ങള്‍ ലഭ്യമാക്കും. സോഴ്സ്‌ കോ
ഡിലെ വാചകങ്ങളുടെ സ്ഥാനം
തിരിച്ചറിയുന്നതിനുള്ള ഇന്‍ഡന്റേ
ഷനും ഇത്‌ ഉപയോഗിക്കുന്നു.
ഇന്‍ഡന്റേഷന്‍ എന്ന ആശയം
നമുക്ക്‌ പിന്നീട്‌ ചര്‍ച്ച ചെയ്യാം.

5. C++ പ്രോഗ്രാമിങ്‌ - ഒരു ആമുഖം

29:54:50: This is Guarry 0.16.
Stabs 19:56:59: New file “unttied* opened.

Compiler

- > at

7 7 Bock ബന്‍ | Compile Bus "

sove 0

ih) a
New "Open "Sree

ന്ന Documents, untied 26

‘No tags found =

ന്ന ണേ 1.24
ണി

ന്ന is Geary 1.26.

ചിത്രം 5.2: വിര്ദ്ധോന്്‌ ഓഷ്റിങ്‌ MIgpormles

പ്രോഗ്രാം 5.1-ല്‍ കാണിച്ചിരിക്കുന്നത്‌ പോലെ ലളിതമായ ഒരു പ്രോഗ്രാം നമുക്ക്‌ എഴുതുകയും
welcome.cpp എന്ന പേരില്‍ അത്‌ സേവ്‌ ചെയ്യുകയും ആകാം.

// my first C++ program

#include<iostream>

using namespace std;

int main()

{
cout <<
return 0;

"Welcome to the world of C++";

} //end of program

പ്രോഗ്രാം 5.1 കൊടുത്തശേഷമുളള IDE വിന്‍ഡോ ചിത്രം 5.3-ല്‍ കാണിച്ചിരിക്കുന്നു. ടോക്കണു

കളില്‍ ഉപയോഗിച്ചിട്ടുള്ള വിവധ നിറങ്ങള്‍ നിരീക്ഷിക്കുക.
5. C++ പ്രോഗ്രാമിങ്‌ - ഒരു ആമുഖം

Project പമ Took Help
ax #3 &@->:
* welcomecpp
17 ay റ Cos progres
tamespace std
cout <
reeurm 8:

2
2
3
4
s
e
ന
a
ry

9 cokO sekO INS TAB mode Unix (iF) encoding ഡന്‌ fet

aio 5.3: ജിനി IDE-0108 ഒരു പേര്‌ നതിക? B(as1N00 സേവ്‌ ചെയ്യുന്നു.
പ്രോഗ്രാം സേവ്‌ ചെയ്യുന്നതിനായി, ഫയല്‍ മെനുവിലെ സേവ്‌ ഓപ്ഷന്‍ എടുക്കുകയോ
കീബോര്‍ഡിലെ ൨5 എന്ന കുറുക്കുവഴി ഉപയോഗിക്കുകയോ ചെയ്യുക. ടൂള്‍ ബാറിലെ
സേവ്‌ ബട്ടണ്‍ ക്ലിക്ക്‌ ചെയ്ത്‌ കൊണ്ടും ഫയല്‍ സേവ്‌ ചെയ്യാവുന്നതാണ്‌ ടയ്ക്കിടെ Ctrl+S
അമര്‍ത്തിക്കൊണ്ട്‌ പ്രോഗ്രാം സേവ്‌ ചെയ്യുന്നതാണ്‌ ഉചിതമായ രീതി __ .

അപ്രതീക്ഷിതമായ സിസ്റ്റത്തിന്റെ പിഴവോ, വൈദ്യുതിത്തകരാറോ മൂലം ഡാറ്റ നഷ്ടപ്പെടു
ന്നത്‌ ഒഴിവാക്കാന്‍ ഇത്‌ സഹായിക്കുന്നു. ഒരിക്കല്‍, പ്രോ്രഗാം ടൈപ്പ്‌ ചെയ്യുന്നത്‌ പൂര്‍ണമാ
യാല്‍ കമ്പയിന്‍ ചെയ്യുകയോ വ്യത്യാസം വരുത്തുകയോ ചെയ്യുന്നതിന്‌ മുന്‍പായി ഫയല്‍
സേവ്‌ ചെയ്യുന്നതാണ്‌ ഏറ്റവും ഉചിതം. താല്‍ക്കാലികമായ അസ്ഥിര പ്രാഥമിക മെമ്മറിയില്‍
(വോളട്ടൈല്‍ പ്രൈമറി മെമ്മറിയില്‍) നിന്ന്‌ ഒരു ഫയല്‍ ദീര്‍ഘകാലത്തേക്കുള്ള സുസ്ഥിരമായ
ദ്വീതീയ മെമ്മറിയിലേക്ക്‌ (നോണ്‍ വോളട്ടൈല്‍ സെക്കന്ററി മെമ്മറിയിലേക്ക്‌) പകര്‍ത്തുന്നതി
നെയാണ്‌ പ്രോഗ്രാം സേവ്‌ ചെയ്യുക എന്ന്‌ പറയുന്നത്‌.

വിവിധ C++ കമ്പയിലറുകശിക്കനുമ്സതിച്ച്‌ പല എക്സ്തനീഷനുകളാണ്‌
പ്രോഗ്രാം ഫയലുകശിക്ക്‌ നത്കുന്ാത്‌. അതായത്‌ AlaNw കമ്വയിലറുകള്‍
വ്യത്യസ്തങ്ങളായ ഫയത്‌ എക്ന്തുനഷനുകശ്‌ ചിര്തുടരുന്തു. ഉദാഹരണ
മായി .ഗു, .CXX, .CC, .Ct++ തുടങ്ങിയ DATY BUN} 08 ശ്രദ്ധിക്കുക.

C. പ്രോഗ്രാമിന്റെ കമ്പയിലിങ്ങും ലിങ്കിങ്ങും

പ്രോഗ്രാം കമ്പയില്‍ ചെയ്യുകയും, തെറ്റ്‌ കണ്ടെത്തിയാല്‍ തിരുത്തുകയും ചെയ്യുന്ന ഘട്ടമാണ്‌
അടുത്തന്‌_ടെത്തിന്‌ ബില്‍ഡ്‌ മെനുവിലെ കമ്പയില്‍ ഓപ്ഷന്‍ എടുക്കുകയോ കമ്പയില്‍
ബട്ടണ്‍ P@ ഉപയോഗിക്കുകയോ ചെയ്യാം. തെറ്റുകളുണ്ടായാല്‍, ആ തെറ്റുകള്‍ താഴെ ഭാഗ
ത്തുള്ള കമ്പയിലറിന്റെ സ്ഥിതി കാണിക്കുന്ന വിന്‍ഡോയില്‍ പ്രദര്‍ശിപ്പിക്കുകയും മറിച്ചാണെ
ങ്കില്‍, കമ്പയിലേഷന്‍ വിജയകരമായി പൂര്‍ത്തീകരിച്ചു എന്ന സന്ദേശം പ്രദര്‍ശിപ്പിക്കുകയും
ചെയ്യുന്നു (ചിത്രം 5.3 പരിശോധിക്കുക). വിജയകരമായ കമ്പയിലേഷന്‍ ശേഷം ലിങ്‌; ചെയ്യാ
നായി ടൂള്‍ ബാറിലെ ബില്‍ഡ്‌ ബട്ടണ്‍ ക്ലിക്ക്‌ ചെയ്യുകയോ ബില്‍ഡ്‌ മെനുവിലെ ബില്‍ഡ്‌
ഓപ്ഷന്‍ തിരഞ്ഞെടുക്കുകയോ ചെയ്യുക. ഇപ്പോള്‍ പ്രോഗ്രാം എക്സിക്യൂഷന്‍ തയാറായിക്ക
ഴിഞ്ഞിരിക്കുന്നു.

1. പ്രോഗ്രാം റണ്‍./എക്സിക്യൂട്ട്‌ ചെയ്യുക.

ഒരു കമ്പ്യൂട്ടര്‍ പ്രോഗ്രാമിലെ നിര്‍ദേശങ്ങള്‍ കമ്പ്യൂട്ടര്‍ പ്രാവര്‍ത്തികമാക്കുന്ന പ്രക്രിയയാണ്‌
പ്രോഗ്രാം റണ്ണിംഗ്‌. പ്രോരഗാം റണ്‍ ചെയ്യാനായി ബില്‍ഡ്‌ മെനുവിലെ ഏക്സിക്യൂട്ട്‌ ഓപ്ഷന്‍

ഒന്നാം വര്‍ഷ കമ്പ്യൂട്ടര്‍ സയന്‍സ്‌ 5. C++ പ്രോഗ്രാമിങ്‌ - ഒരു ആമുഖം

തിരഞ്ഞെടുക്കുക. ടൂള്‍ ബാറിലുള്ള എക്സിക്യൂട്ട ബട്ടണ്‍ ക്ലിക്ക്‌ ചെയ്തുകൊണ്ടും പ്രോഗ്രാം
എക്സിക്യൂട്ട്‌ ചെയ്യാവുന്നതാണ്‌. ഓട്ട്പുട്ട്‌ ചിത്രം 5.4-G കാണുന്നത്‌ പോലെ ഒരു പുതിയ
വിന്‍ഡോയില്‍ പ്രദര്‍ശിപ്പിക്കുന്നതാണ്‌.

1. IDE യുടെ പ്രവര്‍ത്തനം അവസാനിപ്പിക്കുക

ഒരിക്കല്‍ നാം പ്രോഗ്രാം എക്സിക്യൂട്ട്‌ ചെയ്യുകയും പ്രതീക്ഷിച്ച ഓട്ടപുട്ട്‌ ലഭിക്കുകയും ചെയ്ത്‌
കഴിഞ്ഞാല്‍, ഫയല്‍ മെനുവില്‍ നിന്ന്‌ ക്ലോസ്‌ ഓപ്ഷന്‍ തിരഞ്ഞെടുത്തോ സജീവമായ ടാബിലെ
ക്ലോസ്‌ ബട്ടണ്‍ (X) ക്ലിക്ക്‌ ചെയ്തോ പ്രോ്രഗാം അവസാനിപ്പിക്കാം. പ്രോഗ്രാമിങ്‌ തുടരുന്നുവെ
ങ്കില്‍ മുമ്പ്‌ വിവരിച്ചത്‌ പോലെ പുതിയ
ഫയല്‍ തുറന്ന്‌ അതില്‍ പ്രോ്രഗാം ടൈപ്പ്‌ geany_run_script.sh
ചെയ്യാവുന്നതാണ്‌. അല്ലെങ്കില്‍ ടൈറ്റില്‍ | ലട to the world of C++
ബാറിലെ ക്ലോസ്‌ ബട്ടണ്‍ (X) ക്ലിക്ക്‌ ചെയ്ത്‌ Po
IDE- യുടെ പ്രവര്‍ത്തനം അവസാനിപ്പിക്കാം. | (റാ exited with code: 0)
ഇതിനു പുറമേ ൩4: കീ-കള്‍ ഒരുമിച്ചു ഉപ [Press return to continue
യോഗിച്ചോ ഫയല്‍ മെനുവില്‍ നിന്ന്‌ ക്വിറ്റ്‌

ഓപ്ഷന്‍ തിരഞ്ഞെടുത്തോ 1212-ല്‍ നിന്ന്‌
പുറത്തുവരാം. ചി(തം 5.4: BF പുട്ട്‌ വിരി

ഉബുണ്ടു ലിനക്സിലെ ജിനി 11014-യില്‍ .cpp എന്ന എക്സ്റ്റന്‍ഷന്‍ നല്‍കി സേവ്‌
ചെയ്ത ഒരു സോഴ്‌സ്‌ പ്രോഗ്രാം കമ്പയില്‍ ചെയ്യുമ്പോള്‍ ലഭിക്കുന്ന ഫയലിന്റെ
എക്സ്റ്റന്‍ഷന്‍ .0 (ഒബ്ജക്ട്‌ ഫയല്‍) എന്നായിരിക്കും. പ്രോഗ്രാം ലിജ്‌: ചെയ്യു
മ്പോള്‍ ഒബ്ജക്ട്‌ ഫയലില്‍ നിന്ന്‌ പ്രൊസസ്സറിന്‌ എക്സിക്യൂട്ട്‌ ചെയ്യാന്‍ വേണ്ട
.0 എന്ന എക്സ്റ്റന്‍ഷനോട്‌ കൂടിയ എക്സിക്യൂട്ടബിള്‍ ഫയല്‍ ലഭിക്കും. ഈ ഫയലാണ്‌
പ്രൊസസ്സര്‍ എക്സിക്യൂട്ട്‌ ചെയ്യുന്നത്‌.

“SMOKING IS INJURIOUS TO HEALTH” എന്ന സന്ദേശം 110108
പ്രദരീശിച്ചിക്കാനായി ഒരു ക്രോം എഴുതുക.

2 “TOBOCCO CAUSES CANCER” എന്ന സന്ദേശം മോണിട്ടറിതി (2.186001
നമുക്ക്‌ ചെയ്യാം പ്രിക്കാനായി ഒരു ദ്രോ്ഗഗാം എഴുതുക

നമുക്ക്‌ സംഗ്രഹിക്കാം

1980-കളുടെ തുടക്കത്തില്‍ Bjarne Stroustrup ആണ്‌ C++ വികസിപ്പിച്ചത്‌. ---ന്‌
അതിന്റേതായ ക്യാരക്ടര്‍ സെറ്റുണ്ട്‌. ടോക്കണ്‍ എന്നത്‌ പ്രോഗ്രാമിന്റെ ഏറ്റവും
ചെറിയ ഘടകവും അവ നിര്‍മ്മിക്കപ്പെട്ടിരിക്കുന്നത്‌ -ലെ ഒന്നോ അതിലധികമോ
അക്ഷരങ്ങള്‍ ചേര്‍ന്നുമാണ്‌. കീവേഡുകള്‍, ഐഡന്റിഫയറുകൾ, ലിറ്ററലുകള്‍,
പഞ്ചുവേറ്ററുകള്‍, ഓപ്പറേറ്ററുകള്‍ എന്നിങ്ങനെയുള്ള അഞ്ച്‌ തരം ടോക്കണുകളു
ണ്ട്‌. പ്രോ്രഗാമുകള്‍ കമ്പ്യൂട്ടറില്‍ എഴുതുന്നത്‌ ഒരു എഡിറ്ററിന്റെ സഹായത്താലാ
ണ്‌. സോഴ്സ്‌ കോഡ്‌ കമ്പ്യൂട്ടറില്‍ നല്‍കുന്നതിനും അത്‌ കമ്പയില്‍ ചെയ്യുന്നതിനും
ഒബ്ജക്ട്‌ കോഡ്‌ എക്സിക്യൂട്ട്‌ ചെയ്യുന്നതിനും വേണ്ടി ൭-യും ജിനി 1101:-യും
പോലുള്ള സോഫ്റ്റ്വെയറുകള്‍ സൌകര്യമൊരുക്കുന്നു.

ഒന്നാം വര്‍ഷ കമ്പൂട്ടര്‍ സയിന്‍സ്‌ 5. C++ പ്രോഗ്രാമിങ്‌ - ഒരു ആമുഖം

പഠന യേട്ടങ്ങള്‍

ഈ അധ്യായത്തിന്റെ പൂര്‍ത്തീകരണത്തിന്‌ ശേഷം പഠിതാവിന്‌ കഴിയും.

C++-08! ക്യാരക്ടര്‍ സ്റ്റ്‌ ലിസ്റ്റ്‌ ചെയ്യുക.
വിവിധ ടോക്കണുകളെ തരം തിരിക്കുക.
കീവേഡുകളെ തിരിച്ചറിയുക.

സാധുവായ ഐഡന്റിഫയറുകള്‍ എഴുതുക.
ലിറ്ററലുകള്‍ തരം തിരിക്കുക.

ജിനി 11214-യുടെ പ്രധാന ഭാഗങ്ങള്‍ തിരിച്ചറിയുക.

൭ കു © © ൭ Oe ൭

ഒരു ലളിതമായ പ്രോഠ്രഗാം എഴുതി കമ്പയില്‍ ചെയ്ത്‌ റണ്‍ ചെയ്യുക.

ഈാന്ങിിി॥॥॥॥॥॥॥॥॥॥॥

വളരെ ലഘുവായ ഉത്തരങ്ങള്‍ എഴുതുന്നവ.

1 C+t ക്യാരക്ടര്‍ സെറ്റിലെ വിവിധ ക്യാരക്ടറുകള്‍ എന്തെല്ലാം?

2. എന്താണ്‌ എസ്‌കേപ്പ്‌ സീക്വന്‍സ്‌?

ദ. ആരാണ്‌ C++ വികസിപ്പിച്ചത്‌?

4. ടോക്കണുകള്‍ എന്നാലെന്ത്‌? ---ലെ ടോക്കണുകളുടെ പേരെഴുതുക.
5. എന്താണ്‌ --ലെ ഒരു ക്യാരക്ടര്‍ സ്ഥിരാങ്കം?

6. എങ്ങനെയാണ്‌ ചിത്രീകരിക്കാനാകാത്ത ക്യാരക്ടറുകള്‍ ---ല്‍ പ്രതിനിധാനം ചെയ്യു
ന്നത്‌? ഉദാഹരണം നല്‍കുക.

7. !(സ്ലാഷ്‌), “ (ഏക ഉദ്ധരണി), * (ജോഡിയായ ഉദ്ധരണി), ? (ചോദ്യച്ചിഹ്നം) തുടങ്ങിയ
ക്യാരക്ടറുകള്‍ എസ്കേപ്പ്‌ സീക്വന്‍സുകള്‍ ഉപയോഗിച്ച്‌ ടൈപ്പ്‌ ചെയ്യുന്നത്‌ എന്ത്‌
കൊണ്ടാണ്‌?

8. ഏത്‌ എസ്‌കേപ്പ്‌ സീക്വന്‍സുകളാണ്‌ ന്യൂലൈന്‍ ക്യാരക്ടറിനേയും നള്‍ ക്യാരക്ടറിനെയും
പ്രതിനിധാനം ചെയ്യാന്‍ ഉപയോഗിക്കുന്നത്‌?

9. ഒരു എസ്‌കേപ്പ്‌ സീക്വന്‍സ്‌ ................... ക്യാരക്ടറുകളെ പ്രതിനിധാനം ചെയ്യുന്നു.

10. താഴെ തന്നിട്ടുള്ളവയില്‍ ഏതൊക്കെയാണ്‌ ൦ "-ലെ സാധുവായ ക്യാരക്ടറുകള്‍/സ്്രിങ്‌

സ്ഥിരാംഗങ്ങള്‍?
ലം ‘anu’ “anu” ine “min’s’ ar
“char VY
5: ഒന്നാം വര്‍ഷ കമ്പൂട്ടര്‍ സയന്‍സ്‌ 5. C++ പ്രോഗ്രാമിങ്‌ - ഒരു ആമുഖം

1. എന്താണ്‌ ഫ്‌ളോട്ടിങ്‌ പോയിന്റ്‌ സ്ഥിരാംഗം? അവ പ്രതിനിധാനം ചെയ്യുന്നതിനുള്ള വിവിധ
മാര്‍ഗങ്ങള്‍ എന്തെല്ലാം?

12. എന്താണ്‌ C++-o81 സ്ദ്രിങ്‌ ലിറ്ററലുകള്‍? ക്യാരക്ടര്‍ സ്ഥിരാംഗങ്ങളും സ്ര്രിങ്‌ ലിറ്ററലു
കളും തമ്മിലുള്ള വ്യത്യാസമെന്ത്‌?

13. റണ്‍ ചെയ്യുവാനുപയോഗിക്കുന്ന ഒരു C++ ഫയലിന്റെ എക്സ്റ്റന്‍ഷന്‍ എന്താണ്‌?

14. താഴെ തന്നിട്ടുള്ളവയില്‍ നിന്ന്‌ അസാധുവായ ഐഡന്റിഫയറുകള്‍ കണ്ടെത്തുക. അസാ
ധുവായതിന്‌ കാരണമെഴുതുക.

(a) Principal amount (b) Continue (c)Area (d) Date-of-join (e) 9B
15. ലേബല്‍ എന്നത്‌ C++-O01 ഒരു ................. ആണ്‌
(a) കീവേര്‍ഡ്‌ (൨) ഐഡന്റിഫയര്‍ (൭) ഓപ്പറേറ്റര്‍ (൨) ഫങ്ഷന്‍

16. താരെത്തന്നിട്ടുള്ള ടോക്കണുകള്‍ C++ പ്രോ്ഗാമില്‍ നിന്ന്‌ എടുത്തിട്ടുള്ളവയാണ്‌. താഴെ
തന്നിട്ടുള്ള പട്ടികയില്‍ അവ യഥാസ്ഥാനത്ത്‌ നിരത്തുക.

(int, cin, %, do, =, “break”, 25.7, digit)

കീവേഡുകള്‍ ഐഡന്റിഫയറുകൾ ലിറ്ററലുകള്‍ ഓപ്പറേറ്ററുകള്‍

ലഘു ഉത്തരങ്ങളെഴുതുന്നവ.
1 ഐഡന്റിഫയറുകളെ പരിപാലിക്കുന്ന നിയമങ്ങളെഴുതുക.

2. എന്താണ്‌ €:---ലെ ടോക്കണുകള്‍? എത്ര തരം ടോക്കണുകള്‍ C++-G8 അനുവദിക്കുന്നു?
അവ ലിസ്റ്റ്‌ ചെയ്യുക.

3. കീവേഡുകളും, ഐഡന്റിഫയറുകളും വേര്‍തിരിക്കുക

4. പൂര്‍ണ സംഖ്യാ സ്ഥിരാംഗങ്ങളെ ---ല്‍ എങ്ങനെ പ്രതിനിധാനം ചെയ്യുന്നു? ഉദാഹരണ
സഹിതം വിശദീകരിക്കുക

5. 0---ലെ ക്യാരക്ടര്‍ സ്ഥിരാംഗങ്ങള്‍ എന്തെല്ലാം? എങ്ങനെ അവ പ്രയോഗത്തില്‍ വരു
ത്തുന്നു?

വിവരണാത്മക ഉത്തരങ്ങളെഴുതുന്നവ.
1 വിവിധയിനം ടോക്കണുകളെക്കുറിച്ച്‌ ചുരുക്കി വിവരിക്കുക.
2. വിവിധയിനം ലിറ്ററലുകളെക്കുറിച്ച്‌ ഉദാഹരണ സഹിതം വിശദീകരിക്കുക.

3. ജിനി IDE-oWGN Nao അതിന്റെ പ്രത്യേകതകളെക്കുറിച്ചും ചുരുക്കി വിശദീകരിക്കുക.
പ്രധാന ആശയങ്ങള്‍

ഠ ഡാറ്റ ഉനങ്ങള്‍ എന്ന ആരയം
ഠ C+ ഡാറ്റ ഉനങ്ങള്‍
ഠ അടിസ്ഥാന ഡാറ്റ ഉനങ്ങള്‍
© ടൈഷ്‌ മോഡിഫയറുകള്‍
ഠ വേരിയബിളുകള്‍
ഠ ഓഷദേററുകള്‍
൭ അരിത്മ്റിക്‌
൭ റിലേഷണല്‍
൭ ലോജിക്കല്‍
ഉന്‍പുട്ട/ഓട്ട്പുട്ട്‌
© അസൈന്‍മെന്റ്‌
അരിത്മെറ്റിക്‌ അസൈന്‍മെന്റ്‌
ഉന്‍ക്രിമെന്റും ഡിക്രിമെന്റും
൭ കണ്ദീഷണല്‍
e സൈഡ്‌ ഓഫ്‌
© ഓര്‍റ്റുറുകളുടെ മുന്‍ഗണനാക്രമം
ഠ പദപ്രയോഗങ്ങള്‍
൭ അരിതമെറ്റിക്‌
൭ റിലേഷണല്‍
൭ ലോജിക്കല്‍
ഠ ഉനം മാറ്റല്‍
ഠ പ്രസ്താവനകള്‍
൭ പ്രഖ്യാപനം
© അസൈന്‍മെന്റ്‌
൭ ഉന്‍പുട്ട/ഓട്ടപുട്ട്‌
ഠ ഒരു C++ പ്രോഗ്രാമിന്റെ ഘടന
© പ്രി പ്രോസസ്സര്‍ നിര്‍ദ്ദേശകങ്ങള്‍
൭ ഹെഡര്‍ ഫയലുകള്‍
൭ നെയിംസ്പേസ്‌ എന്ന ആശയം
൭ main () ഫങ്ഷന്‍
© ഒരു AMI പ്രോഗ്രാം
ഠ കോഡിംഗിനുള്ള മാര്‍ഗനിര്‍ദ്ദേശങ്ങള്‍

a പ്‌;
H9U7I1
ഇതിനു മുന്‍പുള്ള അധ്യായത്തില്‍ C++ ന്റെ അടിസ്ഥാന
നിര്‍മ്മാണ ഘടകങ്ങളും പ്രോഗ്രാം വികസിപ്പിക്കുന്നതി
നുപയോഗിക്കുന്ന IDE യും നാം പരിചയപ്പെട്ടു കഴി
ഞ്ഞു. കമ്പ്യൂട്ടറുകളില്‍ നടക്കുന്ന പ്രധാന പ്രവര്‍ത്തനം
ഡാറ്റ പ്രോസസ്സിംഗ്‌ ആണെന്ന്‌ നമുക്കറിയാമല്ലോ. എല്ലാ
പ്രോഗ്രാമ്മിംഗ്‌ ഭാഷകളും ഡാറ്റ കൈകാര്യം ചെയ്യുന്ന
തിന്‌ പ്രാധാന്യം നല്‍കുന്നുണ്ട്‌. ചില പ്രത്യേകമായ
സങ്കേതങ്ങള്‍ ഉപയോഗിച്ചുകൊണ്ടാണ്‌ കമ്പ്യൂട്ടറുകളില്‍
ഇന്‍പൂട്ട ചെയ്യപ്പെടുന്ന ഡാറ്റയുടെ ക്രമീകരണവും സം
ഭരണവും നടക്കുന്നത്‌. ഡാറ്റ സംഭരിക്കുന്നതിന്‌ --ന്‌
മുന്‍കൂട്ടി നിര്‍വചിച്ച ഒരു രൂപരേഖയുണ്ട്‌. സംഭരിക്കപ്പെട്ട
ഡാറ്റ പിന്നീട്‌ ഓപ്പറേറ്ററുകള്‍ ഉപയോഗിച്ച്‌ പ്രോസസ്സ്‌
ചെയ്യപ്പെടുന്നു. ഉപയോക്ത്യ നിര്‍വചിത ഡാറ്റ ഇനങ്ങള്‍
എന്നു വിളിക്കുന്ന പുതിയ ഡാറ്റ ഇനങ്ങള്‍ നിര്‍വചി
ക്കുന്നതിന്‌ ഉപയോക്താവിനെ C++ അനുവദിക്കുന്നു.

ഭാഷയുടെ മുഖ്യ ആശയങ്ങളായ ഡാറ്റ ഇനങ്ങള്‍,
ഓപ്പറേറ്ററുകള്‍, പദ്രപയോഗങ്ങള്‍, പ്രസ്താവനകള്‍
എന്നിവയെക്കുറിച്ച്‌ നമുക്ക്‌ ഈ അദ്ധ്യായത്തില്‍ വിശദ
മായി പഠിക്കാം.

ഡാറ്റ ഇനങ്ങള്‍ എന്ന ആശയം
(Concept of data types)

പരീക്ഷയ്ക്കുശേഷം ഒരു വിദ്യാര്‍ത്ഥിയുടെ പ്രോഗ്രസ്‌
കാര്‍ഡ്‌ തയ്യാറാക്കുന്നതിനായി നമുക്ക്‌ അയാളുടെ രജിസ്‌
96 നമ്പര്‍, റോള്‍ നമ്പര്‍, പേര്‍, വിലാസം, വിവിധ വിഷ
യങ്ങള്‍ക്ക്‌ ലഭിച്ച സ്‌കോര്‍, ഗ്രേഡുകള്‍ തുടങ്ങിയ ഡാറ്റ
ആവശ്യമുണ്ട്‌. ഇത്‌ കുടാതെ, വിദ്യാര്‍ത്ഥിയുടെ സ്കോര്‍,
ഹാജര്‍ എന്നിവ ശതമാനത്തില്‍ പ്രദര്‍ശിപ്പിക്കേണ്ടതുണ്ട്‌.
ശാസ്ര്ത സംബന്ധിയായ ഡാറ്റ പ്രോസസിംഗ്‌ പരിഗണി
ക്കുമ്പോള്‍ പ്രകാശത്തിന്റെ വേഗതയായ (3x10*m/s), ഗുരു
ത്വാകര്‍ഷഞണത്തിന്റെ വിലയായ (9.8 m/s’), ഇലക്ട്രോ
ണിന്റെ ഇലക്ട്രിക്‌ ചാര്‍ജ്ജായ (-1.6x10'’c), തുടങ്ങിയ
അക്കങ്ങളുടെ രൂപത്തിലുള്ള ഡാറ്റ ആവശ്യമായി വരാം.

6.1
ഒന്നാം വര്‍ഷ കമ്പ്യൂട്ടര്‍ സയന്‍സ്‌ 6 ഡാറ്റയുടെ തരങ്ങളും ഓകഷറ്റേറുകളും

മേല്‍ പറഞ്ഞതില്‍ നിന്ന്‌, ക്യാരക്ടര്‍ (character), ഇന്റിജര്‍ (integer), ഭിന്ന സംഖ്യ (Real
Number), വാക്കുകള്‍ (string) മുതലായ വിവിധതരം ഡാറ്റയുണ്ടെന്ന്‌ നമുക്ക്‌ അനുമാനി
ക്കാം. --ലെ സാധുവായ ഒരു അക്ഷരം ഒരു ജോഡി ഏക ഉദ്ധരണികള്‍ക്കുള്ളില്‍
(single quotes) രേഖപ്പെടുത്തിയാല്‍ അത്‌ ഒരു ക്യാരക്ടര്‍ ഡാറ്റയെ പ്രതിനിധീകരിക്കു
ന്നു എന്ന്‌ നാം കഴിഞ്ഞ അദ്ധ്യായത്തില്‍ പഠിച്ചതാണല്ലേോ. അതുപോലെ ദശാംശസ്ഥാന
മില്ലാത്ത സംഖ്യകള്‍ ഇന്റിജര്‍ (integer) ഡാറ്റയെ പ്രതിനിധാനം ചെയ്യുന്നു, ഭിന്നസംഖ്യ
കള്‍ ഫ്‌ളോട്ടിംഗ്‌ പോയിന്റ്‌ (floating point) ഡാറ്റ എന്നും, ഇരട്ട ഉദ്ധരണികളില്‍ രേഖപ്പെ
ടുത്തിയിരിക്കുന്നവ സ്റ്റിംഗ്‌ (string) ഡാറ്റ എന്നും അറിയപ്പെടുന്നു. വിവിധ തരം ഡാറ്റ
കൈകാര്യം ചെയ്യേണ്ടതിനാല്‍ എല്ലാ പ്രോഗ്രാമിംഗ്‌ ഭാഷകളും അതിനുള്ള സംവിധാനം
നല്‍കേണ്ടതാണ്‌. ഡാറ്റ ഇനങ്ങള്‍ക്ക്‌ പേരുകള്‍ നല്‍കികൊണ്ട്‌ വിവിധതരം ഡാറ്റ
കൈകാര്യം ചെയ്യുന്നതിനുള്ള സംവിധാനം C++ നല്‍കുന്നു. ഡാറ്റ ഇനങ്ങള്‍ (data types)
എന്നാല്‍ ഡാറ്റയുടെ സ്വഭാവം, അതിന്‍മേല്‍ നടത്തുന്ന പ്രവര്‍ത്തനങ്ങള്‍ എന്നിവ തിരി
ച്ചറിയുന്നതിനുള്ള ഉപാധിയാണ്‌. ഈ സവിശേഷതകള്‍ വേര്‍തിരിക്കുന്നതിനായി ---ല്‍
വിവിധ ഡാറ്റ ഇനങ്ങള്‍ നിര്‍വചിച്ചിരിക്കുന്നു.

അദ്ധ്യായം നാലിലെ അല്‍ഗോരിതങ്ങളില്‍ ഡാറ്റയെ സൂചിപ്പിക്കുവാന്‍ വേരിയബിളുക
ളാണ്‌ നാം ഉപയോഗിച്ചത്‌. പ്രോഗ്രാമുകളിലും വേരിയബിളുകള്‍ തന്നെയാണ്‌ ഡാറ്റയെ
സൂചിപ്പിക്കുവാന്‍ ഉപയോഗിക്കുന്നത്‌. C++ ഭാഷയില്‍ നാം പഫ്രോരഗാമുകള്‍ എഴുതുമ്പോള്‍
വേരിയബിളുകളെ അവ ഉപയോഗിക്കുന്നതിനുമുമ്പായി പ്രഖ്യാപിക്കേണ്ടതുണ്ട്‌ (declaration
of variable) ഈ വേരിയബിളുകള്‍ പ്രഖ്യാപിക്കുന്നതിന്‌ ഡാറ്റ ഇനങ്ങള്‍ ആവശ്യമാണ്‌.

6.2 C++ ലെ ഡാറ്റ ഇനങ്ങള്‍ (C++ Data Types)

C++ വിവിധതരം ഡാറ്റാഇനങ്ങള്‍ കൊണ്ട്‌ സമ്പുഷ്ടമാണ്‌. ഇവയെ സ്വഭാവം, വലിപ്പം,
അവയുമായി ബന്ധപ്പെട്ട പ്രവര്‍ത്തനങ്ങള്‍ എന്നിവയുടെ അടിസ്ഥാനത്തില്‍ ചിത്രം 6.1ല്‍
കാണുന്നതു പോലെ പലതായി തരം തിരിച്ചിട്ടുണ്ട്‌. ഡാറ്റ ഇനങ്ങളെ അടിസ്ഥാന ഡാറ്റ
ഇനങ്ങള്‍ അല്ലെങ്കില്‍ അന്തര്‍ നിര്‍മിത ഡാറ്റ ഇനങ്ങള്‍ (built-in data types), രൂപീകൃത
ഡാറ്റ ഇനങ്ങള്‍ (Derived data types), ഉപയോക്ത നിര്‍വചിത ഡാറ്റ ഇനങ്ങള്‍ (user
defined data types) എന്നിങ്ങനെ തരം തിരിച്ചിരിക്കുന്നു.

C++ ഡാറ്റ ഉനങ്ങള്‍

ഉപയോക്തൃ നിര്‍വചിത അടിസ്ഥാന രൂപീകൃത
ഡുറുഉനങ്ങള്‍ ഡാറ്റ ഉനങ്ങള്‍ ഡാറ്റ ഉനങ്ങള്‍

പൂര്‍ണസംഖ്യാ ദമാം സംഖ്യാ
ഡാറ്റ ഉനങ്ങള്‍ ഡാറുഉനങ്ങള്‍

ചിത്രം 6.1 : C++ WIN തുനങ്ങളുടെ തദംതിദിക്കത്‌
ന്നാം വര്‍ഷ കമ്പ്യൂട്ടര്‍ സയന്‍സ്‌ 6 ഡാറ്റയുടെ തരങ്ങളും ഓഷറ്റേറുകളും

അടിസ്ഥാന ഡാറ്റ ഇനങ്ങള്‍: C++ കംപൈലറില്‍ അടിസ്ഥാന ഡാറ്റ ഇനങ്ങള്‍ നിര്‍വൃവ
ചിച്ചിരിക്കുന്നു. അന്തര്‍ നിര്‍മിത ഡാറ്റ ഇനങ്ങള്‍ എന്നും അവ അറിയപ്പെടുന്നു. ഇവ
വീണ്ടും വിഭജിക്കുവാന്‍ കഴിയാത്ത ഏറ്റവും ചെറിയ ഘടകങ്ങളാണ്‌. char, int, float,
double, void എന്നിവയാണ്‌ C++oe! അഞ്ച്‌ അടിസ്ഥാന ഡാറ്റ ഇനങ്ങള്‍. ഇവയില്‍ int,
char, എന്നിവ പൂര്‍ണസഖ്യാ ഡാറ്റ ഇനത്തിനു കീഴില്‍ വരുന്നതാണ്‌. പൂര്‍ണ്ണ സംഖ്യകളെ
മാത്രമേ ഇവയ്ക്ക്‌ കൈകാര്യം ചെയ്യാന്‍ കഴിയുകയുള്ളൂ. ഭിന്നസംഖ്യകള്‍ സാധാരണ
യായി ദശാംശ സംഖ്യാ ഡാറ്റ ഇനം (floating point data type) എന്ന്‌ അറിയപ്പെടുന്നു.
ഇവയെ വ്യാപ്തിയുടെയും (range) കൃത്യതയുടെയും (presion) അടിസ്ഥാനത്തില്‍ float,
double എന്നിങ്ങനെ രണ്ടായി തരം തിരിച്ചിരിക്കുന്നു.

ഉപോയോക്തൃ നിര്‍വചിത ഡാറ്റ ഇനങ്ങള്‍: പ്രോ്രഗാമര്‍ക്ക്‌ സ്വന്തമായി ഡാറ്റ ഇനം
നിര്‍വചിക്കുവാനുള്ള സൌകര്യം --ല്‍ ഉണ്ട്‌. സ്ര്രക്ചര്‍ (struct), എന്യൂമറേഷന്‍ (enum),
യൂണിയന്‍ (union), ക്ലാസ്സ്‌ (class) തുടങ്ങിയവ ഇത്തരം ഡാറ്റ ഇനങ്ങള്‍ക്കുള്ള ഉദാഹര
ണങ്ങളാണ്‌.

രൂപീകൃത ഡാറ്റ ഇനങ്ങള്‍: അടിസ്ഥാന ഡാറ്റ ഇനങ്ങളെ ഗണങ്ങള്‍ ആക്കി മാറ്റിയോ
വലിപ്പ മാറ്റം വരുത്തിയോ നിര്‍മ്മിക്കപ്പെടുന്ന ഡാറ്റ ഇനങ്ങള്‍ രൂപീകൃത ഡാറ്റ ഇനങ്ങള്‍
എന്ന്‌ അറിയപ്പെടുന്നു. അറെകള്‍, പോയിന്ററുകള്‍, ഫങ്ഷനുകള്‍ തുടങ്ങിയവ രൂപീ
കൃത ഡാറ്റ ഇനങ്ങള്‍ക്കുള്ള ഉദാഹരണങ്ങളാണ്‌.

6.3 അടിസ്ഥാന ഡാറ്റ ഇനങ്ങള്‍ (fundamental data types):

അടിസ്ഥാന ഡാറ്റ ഇനങ്ങള്‍ മൌലികമായ സ്വഭാവ വിശേഷമുള്ളവയാണ്‌. അവയെ വീണ്ടും
ചെറിയ ഭാഗങ്ങളായി വിഭജിക്കുവാന്‍ കഴിയില്ല. കമ്പൈലറില്‍ നിര്‍ചിക്കപ്പെട്ടിരിക്കുതി
നാല്‍ അവയുടെ വലിപ്പം (അനുവദിക്കപ്പെട്ട മെമ്മറിയുടെ അളവ്‌) കമ്പൈലറിനെ ആശ്ര
യിച്ചിരിക്കുന്നു. നാം ഉപയോഗിക്കുന്നത്‌ GCC -ല്‍ ലഭ്യമായ കമ്പൈലർ ആയതിനാല്‍
ഡാറ്റയുടെ വലിപ്പവും അതുപോലെ ഡാറ്റയുടെ വ്യാപ്തിയും അതിന്‌ അനുസൃതമായി
രിക്കും. ടര്‍ബോ C++ IDE പോലുള്ള കംപയിലറുകള്‍ നിങ്ങള്‍ ഉപയോഗിക്കുമ്പോള്‍
ഇത്‌ വ്ൃത്യസ്തമാകാം. അഞ്ചു അടിസ്ഥാന ഡാറ്റ ഇനങ്ങള്‍ താഴെ വിശദീകരിച്ചിരിക്കുന്നു.

int ഡാറ്റഇനം (പൂര്‍ണ സംഖ്യകള്‍ക്കായി): ദശാംശ ഭാഗമില്ലാത്ത പൂര്‍ണ്ണ സംഖ്യക
ളാണ്‌ ഇന്റിജറുകള്‍. ഇവ പോസിറ്റീവോ, പൂജ്യമോ, നെഗറ്റീവോ ആകാം. ഒരു പ്രത്യേക
പരിധിക്കുള്ളിലുള്ള ഇന്റിജറുകളെ പ്രതിനിധീകരിക്കാന്‍ ഉപയോഗിക്കുന്ന കീ വേര്‍ഡ്‌
ആണ്‌ int. int ഇനത്തിലുള്ള ഇന്റിജറുകള്‍ക്ക്‌ GCC നാല്‍ ബൈറ്റ്‌ മെമ്മറി അനുവദിക്കു
ന്നു. ആയതിനാല്‍ -2147483648 മുതല്‍ 2147483647 വരെയുള്ള സംഖ്യകളെ int ഡാറ്റാ
ഇനം ഉപയോഗിച്ച്‌ സൂചിപ്പിക്കാം. 69, 0, -112, 17, -32768, 32767 എന്നിവ int ഡാറ്റാ
ഇനത്തിനുള്ള ഉദാഹരണങ്ങളാണ്‌. 22000000.00, - 2147483649 എന്നിവ അനുവദനീയമാ
യ പരിധിക്ക്‌ പുറത്തായതിനാല്‍ int ഡാറ്റാ ഇനമായി പരിഗണിക്കുകയില്ല.

char ഡാറ്റ ഇനം (ക്യാരക്ടര്‍ സ്ഥിരാംഗങ്ങള്‍ക്കുവേണ്ടി) : C++ ഭാഷയിലെ ക്യാരക്ടര്‍
സെറ്റിലൂള്‍പ്പെടുന്ന ചിഹ്നങ്ങള്‍ ആണ്‌ ക്യാരക്ടറുകള്‍. എല്ലാ അക്ഷരങ്ങള്‍ അക്കങ്ങള്‍
പ്രത്യേക ചിഹ്നങ്ങള്‍ വിരാമ ചിഹ്നങ്ങള്‍ തുടങ്ങിയവ ഈ വിഭാഗത്തില്‍ ഉള്‍പ്പെടുന്നു.
ഈ ക്യാരക്ടറുകള്‍ ഡാറ്റയായി ഉപയോഗിക്കുമ്പോള്‍ അവയെ C++ ലെ char ഡാറ്റഇന
മായി പരിഗണിക്കപ്പെടുന്നു. Char കീ വേര്‍ഡ്‌ C++ ലെ ക്യാരക്ടര്‍ ലിറ്ററലുകളെ പ്രതിനി
ധീകരിക്കുന്നു എന്നു നമുക്ക്‌ പറയാം.ഓരോ char ഇനത്തിലുള്ള ഡാറ്റായ്ക്കും 1 ബൈറ്റ്‌
മെമ്മറി അനുവദിക്കുന്നു. 'a','+', /, '0' മുതലായവ char ഡാറ്റാ ഇനത്തില്‍പ്പെടുന്നവയാണ്‌.
(5) (5) ഒന്നാം വര്‍ഷ കമ്പ്യൂട്ടര്‍ സയന്‍സ്‌ 6 ഡാറ്റയുടെ തരങ്ങളും ഓഷറേററുകളും

char ഡാറ്റയെ ഇന്റിജര്‍ ആയിട്ടാണ്‌ പരിഗണിക്കുന്നത്‌ എന്തുകൊണ്ടെന്നാല്‍ ASCII കോ
ഡ്‌ ഉപയോഗിച്ചാണ്‌ കമ്പ്യൂട്ടര്‍ ക്യാരക്ടറുകളെ തിരിച്ചറിയുന്നത്‌. മെമ്മറിയില്‍ ക്യാരക്ടര്‍
ഡാറ്റാ സംഭരിക്കുന്നത്‌ അതിന്റേതായ ASCII കോഡ്‌ ഉപയോഗിച്ചാണ്‌. ASCII കോഡ്‌
ഇന്റിജറായതിനാലും അവ 8 ബിറ്റ്‌/1 ബൈറ്റ്‌ സ്ഥലത്ത്‌ സംഭരിക്കപ്പെടേണ്ടതിനാലും
char ഡാറ്റാ ഇനത്തിന്റെ പരിധി -128 മുതല്‍ +127 വരെയാണ്‌.

float ഡാറ്റഇനം (ദശാംശ സാംഖ്യകള്‍ക്കായി): ദശാംശ ഭാഗത്തോടുകൂടിയ സാഖ്യ
കളെ ഫ്‌ളോട്ടിംഗ്‌ പോയിന്റ്‌ സംഖ്യകളെന്നു വിളിക്കുന്നു. കമ്പ്യൂട്ടറില്‍ ഫ്‌ളോട്ടിംഗ്‌
പോയിന്റ്‌ സംഖ്യകള്‍ രേഖപ്പെടുത്തുന്നത്‌ ശാസ്ത്രീയമായ പ്രതീകങ്ങള്‍ ഉപയോഗിച്ചാ
ണ്‌. ഉദാഹരണത്തിന്‌ -4728 1.97 എന്ന്‌ സംഖ്യയെ ശാസ്ര്രീയ പ്രതീകങ്ങള്‍ ഉപയോഗി
ച്ചാണ്‌ എഴുതുന്നത്‌ 0.4728 19൩007 എന്നാണ്‌. ഇതിന്റെ ആദ്യഭാഗത്തെ (0.4728197)
ഭിന്നാംശം (mantissa) എന്നും പത്തിന്റെ വര്‍ഗ്ഗമായ 5നെ (10°) കൃത്യംങ്കം (exponent)
എന്നും പറയുന്നു. ഫ്‌ളോട്ടിംഗ്‌ പോയിന്റ്‌ വിലകളെ പ്രതിനിധീകരിക്കാന്‍ കമ്പ്യൂട്ടര്‍ സാധാ
രണയായി കൃത്യങ്ക മാതൃക (E-notation) ഉപയോഗിക്കുന്നു. അത്‌ പ്രകാരം 4728 1.97 എ
ന്നത്‌ 0.4728 197835 ആയാണ്‌ രേഖപ്പെടുത്തുന്നത്‌. ES} മുമ്പുള്ള സാംഖ്യ ഭിന്നാംശവും
1ക്ക്‌ ശേഷമുള്ള സംഖ്യ കൃത്ൃയങ്കവുമാണ്‌. C++@8 float എന്ന കീ വേര്‍ഡാണ്‌ ഇത്തരം
സംഖ്യകളെ സൂചിപ്പിക്കാന്‍ ഉപയോഗിക്കുന്നത്‌. float ഡാറ്റ ഇനത്തില്‍പ്പെട്ട സംഖ്യകള്‍ക്ക്‌
4 ബൈറ്റ്‌ മെമ്മറി GCC അനുവദിക്കുന്നു. ഈ ഡാറ്റ തരത്തിലുള്ള സംഖ്യകള്‍ക്ക്‌ സാധാ
രണയായി ദശാംശത്തിനുശേഷം 7 അക്കങ്ങള്‍ വരെ ആവാം.

Double ഡാറ്റ ഇനം (ഡബിള്‍ പ്രിസിഷന്‍ ദശാംശ സാഖ്യകള്‍ക്കായി): ദശാംശത്തി
നുശേഷം കൂടുതല്‍ അക്കങ്ങള്‍ വേണ്ട സംഖ്യകള്‍ക്ക്‌ അതായത്‌ കൂടതുല്‍ കൃത്യത വേ
ണ്ട ദശാംശ സംഖ്യകള്‍ക്ക്‌ ഉപയോഗിക്കുന്ന ഡാറ്റ ഇനമാണ്‌ double. ഫ്ളോട്ട്‌ ഡാറ്റാ
ഇനം ഉപയോഗിച്ച്‌ കൈകാര്യം ചെയ്യാവുന്ന സംഖ്യകളുടെ പരിധി ഈ 0999 ഇനം ഉപ
യോഗിച്ച്‌ വര്‍ധിപ്പിക്കാവുന്നതാണ്‌. എന്തുകൊണ്ടെന്നാല്‍ ഈ ഡാറ്റാ ഇനം ഫ്‌ളോട്ട്‌
ഡാറ്റാ ഇനത്തെക്കാള്‍ ഇരട്ടി മെമ്മറി ഉപയോഗിക്കുന്നു. C++ ല്‍ double ന്റെ കൃത്യതയും
പരിധിയും കുറഞ്ഞത്‌ float ന്റെ അത്രയെങ്കിലും ആയിരിക്കണം. gcc ഇത്തരത്തിലുള്ള
ഡാറ്റ സംഭരിക്കുന്നതിന്‌ 8 ബൈറ്റ്‌ മെമ്മറി നീക്കിവച്ചിരിക്കുന്നു. ഡബിള്‍ ഡാറ്റാ ഇന
ത്തില്‍ ദശാംശ സ്ഥാനത്തിനു ശേഷം 15 അക്കങ്ങള്‍ വരെ ആകാം.

Void ഡാറ്റ തരം (എം.:റ്റി. സെറ്റ്‌ ഡാറ്റക്കായി): എംറ്റി സെറ്റിലെ ഡാറ്റയെ സൂചിപ്പിക്കാന്‍
ഉപയോഗിക്കുന്ന കീ വേഡാണ്‌ വോയിഡ്‌ (Void). തീര്‍ച്ചയായും ഇതിന്‌ മെമ്മറി ആവശ്യ,
മില്ല, ഈ ഡാറ്റാ ഇനത്തിന്റെ വിശദമായ ഉപയോഗം അധ്യായം 10 ല്‍ ചര്‍ച്ച ചെയ്യാം.

അടിസ്ഥാന ഡാറ്റ ഇനങ്ങളെ അവയുടെ വലിപ്പത്തിന്റെ അവരോഹണ ക്രമത്തില്‍ double,
float, int, char.void എന്ന്‌ ക്രമീകരിക്കാം.

6.4 ടൈഷ്‌ മോഡിഫയറുകള്‍ (Type modifiers)

വ്യാപ്തി വര്‍ദ്ധിപ്പിച്ചു കൊണ്ട്‌ അധിക സാധനങ്ങള്‍ ഉള്‍പ്പെടുത്താവുന്ന തരത്തിലുള്ള
യാത്രാ ബാഗുകള്‍ നിങ്ങള്‍ കണ്ടിട്ടുണ്ടോ? സാധാരണയായി നമ്മള്‍ ഈ അധിക സ്ഥലം
ഉപയോഗിക്കാറില്ല. ബാഗിള്‍ ഘടിപ്പിച്ചിട്ടുള്ള സിബ്‌ അവയുടെ വ്യാപ്തി കൂടുന്നതിനോ
കുറയ്ക്കുന്നതിനോ നമ്മെ സഹായിക്കുന്നു. അല്‍പ്പം വലിപ്പം കൂടിയതോ കുറഞ്ഞതോ
ആയ ഡാറ്റ ഉള്‍ക്കൊള്ളാവുന്ന ഡാറ്റ ഇനങ്ങള്‍ ലും നമുക്ക്‌ ആവശ്യമാണ്‌. അതി
AOS ഒന്നാം വര്‍ഷ കമ്പ്യൂട്ടര്‍ സയന്‍സ്‌ 6 ഡാറ്റയുടെ തരങ്ങളും ഓഷറേറ്ററുകളും

നുള്ള ൨4--ലെ സംവിധാനമാണ്‌ ഡാറ്റാ ടൈപ്പ്‌ മോഡിഫെയറുകള്‍ (type modifiers). ഇവ
C++@8 ഡാറ്റ ഇനങ്ങളുടെ വലിപ്പം (size), പരിധി (range), ദശാംശത്തിനുശേഷമുള്ള സം
ഖ്യയുടെ വലിപ്പം (precision) എന്നിവ ക്രമീകരിക്കാന്‍ ഉപയോഗിക്കുന്നു. വേരിയബിള്‍
പ്രഖ്യാപനത്തില്‍ ഡാറ്റാ ഇനത്തിന്റെ പേരിന്‌ മുന്‍പായി മോഡിഫെയറുകള്‍ ചേര്‍ക്കു
ന്നു. അതുകൊണ്ട്‌ ഒരു ഡാറ്റാ ഇനത്തിന്‌ അനുവദിച്ചിരിക്കുന്ന സ്ഥലവും ഡാറ്റയുടെ
ചിഹ്നവും മാറ്റം വരുത്തി വിലകളുടെ പരിധി വ്ൃത്യാസപ്പെടുത്താന്‍ അനുവദിക്കുന്നു.
signed, unsigned, long, short എന്നിവയാണ്‌ പ്രധാനപ്പെട്ട മോഡിഫയറുകള്‍.

ഡാറ്റ ഇനങ്ങളുടെ ശരിയായ വലിപ്പം നിങ്ങള്‍ ഉപയോഗിക്കുന്ന കംപ്യൂട്ടറിനെയും കംപ

യിലറിനെയും ആശ്രയിച്ചിരിക്കുന്നു. താഴെ പറയുന്നവ ഇത്‌ ഉറപ്പു നല്‍കുന്നു.

* ഒരു double ഡാറ്റ ഇനത്തിന്‌ ഏറ്റവും കുറഞ്ഞത്‌ float ഡാറ്റ ഇനത്തിന്റെ വലിപ്പം
ഉണ്ടാകണം.

* ഒരു long double ന്‌ ഏറ്റവും കുറഞ്ഞത്‌ double ഡാറ്റ ഇനത്തിന്റെയെങ്കിലും വലിപ്പമു
ള്ളതായിരിക്കും.

ഓരോ ഡാറ്റ ഇനങ്ങളും അവയുടെ മോഡിഫയറുകളും ടേബിള്‍ 6.1 ല്‍ കാണിച്ചിരി

ക്കുന്നു. (GCC കമ്പൈലറിനെ അടിസ്ഥാനമാക്കി)

Name Description Size Range
പേര്‌ വിശദീകരണം വലിഷം പരിധി

ക്യാരക്ടര്‍ signed: -128 to 127
unsigned: 0 to 255

short int] ഷോര്‍ട്ട്‌ ഉന്റിജര്‍ signed: -32768 to 32767
(short)

int ഉന്റിജര്‍ signed: -2147483648 to 2147483647
unsigned: 0 to 4294967295

long int | ലോംഗ്‌ ഉന്റിജര്‍ നി Signed: -2147483648 to 2147483647

(long) unsigned: 0 to 4294967295

Float ഫ്‌ളോട്ടിംഗ്‌ പോയിന്റ്‌ നമ്പര്‍ 32൧൮0൩ to +3.4 x LOS ഏകദേശം 7
se ദശാംശ സ്ഥാനങ്ങള്‍
double COMER (ellen -1.7 x 10*°8 to +1.7 x 10° ഏ
ഫ്‌ളോട്ടിംഗ്‌ പോയിന്റ്‌ നമ്പര്‍ ല്‍ Clo 15 ദമാം സ്ഥാനങ്ങള്‍

send തി നി -3.4 x 10? to 43.4 x10? ഏക
നമ്പര്‍ ല്‍ ദേശം 19 ദശാംശ സ്ഥാനങ്ങള്‍

പട്ടിക 6.1: WIN ഇനങ്ങളും ദൈഷ്‌ മോദഥിഫമഥുകളും
ഡാഠ്റ DNB എങ്ങനെ വ്ൃത്യാസപ്ലെട്ടിരിക്കുന്നു എന്ന്‌ നിങ്ങശിക്ക്‌
അറിയുന്നതിനുള്ള ഉദ്ധഹരണങ്ങളാണ്‌ GSMA 6.1 തീ കൊടുത്തിരി
ക്കുന്നത്‌. ഇതിചുക്ളു പഥ വിലകളും നിങ്ങളുടെ കമന്ധ്യുക്ട്റിത്‌
വ്യത്യ സ്തമായിതിക്കാം

(5) ഒന്നാം വര്‍ഷ കമ്പ്യൂട്ടര്‍ സയന്‍സ്‌ 6 ഡാറ്റയുടെ തരങ്ങളും ഓഷറ്റേറുകളും

വേരിയബിളുകള്‍ (variables): ഡാറ്റ പരാമര്‍ശിക്കുന്നതിന്‌ മെമ്മറിയില്‍ അതിന്റെ സ്ഥാന
ങ്ങള്‍ തിരിച്ചറിയേണ്ടതുണ്ട്‌. മെമ്മറി സ്ഥാനങ്ങള്‍ക്ക്‌ നല്‍കുന്ന പേരുകളാണ്‌ വേരിയ
ബിളുകള്‍. മെമ്മറി സ്ഥാനങ്ങളില്‍ ഡാറ്റയെ സ്റ്റോര്‍ ചെയ്യാനും വീണ്ടെടുക്കാനും ഉപ
യോഗിക്കുന്ന C++ -ലെ ഐഡന്റിഫയറുകളാണ്‌ വേരിയബിളുകള്‍. ഒരു വേരിയബിളില്‍
സ്റ്റോര്‍ ചെയ്തിട്ടുള്ള ഡാറ്റയുടെ സ്വഭാവവും അതിന്റെ വലിപ്പവും ആ വേരിയബിളിന്റെ
ഡാറ്റ ഇനത്തിന്‌ അനുസരിച്ചിരിക്കും. ഒരു വേരിയബിളിന്‌ മുന്ന്‌ പ്രധാനപ്പെട്ട സ്വഭാവ
സവിശേഷതകളുണ്ട്‌.
1. വേരിയബളിന്റെ പേര്‍ (variable name): മെമ്മറിയിലെ ഒരു സ്ഥലത്ത്‌ സംഭരിച്ചിരി
ക്കുന്ന ഡാറ്റ പരാമര്‍ശിക്കുന്നതിന്‌ വേണ്ടി പ്രതീകാത്മകമായ ഉപയോഗിക്കുന്ന പേ
രാണിത്‌.

11. മെമ്മറി വിലാസം (memory address): ഒരു ബൈറ്റു ഡാറ്റ വീതം സംഭരിക്കാന്‍
കഴിയുന്ന സെല്ലുകളുടെ (cell) ശേഖരമാണ്‌ കമ്പ്യൂട്ടറിന്റെ RAM. RAM ലുള്ള ഓ
രോ സെല്ലും (ബൈറ്റ്‌) ഉപയോഗിക്കുന്നതിന്‌ അവയ്ക്ക്‌ തനതാ
യ വിലാസങ്ങള്‍ നല്‍കപ്പെട്ടിരിക്കുന്നു. എല്ലാ വേരിയബിളുക 1001 1002 1003 1004
ളും RAM ലുള്ള ഒന്നോ അതിലധികമോ മെമ്മറി സ്ഥാനങ്ങളു
മായി ബന്ധപ്പെട്ടിരിക്കുന്നു. അനുവദിച്ചിട്ടുള്ള മെമ്മറിയുടെ ആരം N

um
ഭത്തിലെ സെല്ലിന്റെ വിലാസത്തെ പ്രാരംഭ വിലാസം (base allo 6.2:
address) എന്നു പറയുന്നു. സാധാരണഗതിയില്‍ ഈ വിലാസം ഒരു ലേദിമബിളിന്റെ
അനുവദിക്കുന്നത്‌ കംപചൈലര്‍ ആണ്‌. ഈ വിലാസത്തെ വേരി മ്ധംഗിപ്രതിതിധാനം
യബിളിന്റെ എല്‍ മൂല്യം (L-Value) എന്നും വിളിക്കുന്നു. ചിത്രം
6.2 ല്‍ Num വേരിയബിളിന്റെ പ്രാരംഭ വിലാസം 1001 ആണ്‌.

iii, ഉള്ളടക്കം (Content): ഒരു മെമ്മറി സ്ഥാനത്ത്‌ സംഭരിച്ചിരിക്കുന്ന മൂല്യത്തെ വേരി
യബിളിന്റെ ഉള്ളടക്കം എന്ന്‌ വിളിയ്ക്കുന്നു. ഇതിനെ വേരിയബിളിന്റെ ആര്‍. മൂല്യം
(R-value) എന്നും വിളിയ്ക്കുന്നു. ഉള്ളടക്കത്തിന്റെ തരവും വലിപ്പവും വേരിയബി
ളിന്റെ ഡാറ്റാ ഇനത്തെ ആശ്രയിച്ചിരിക്കുന്നു.
ചിത്രം 6.2 ഒരു വേരിയബിളിന്റെ മെമ്മറിയിലെ പ്രതിനിധാനം കാണിച്ചിരിക്കുന്നു.
ഇവിടെ Num എന്നതു വേരിയബിളിന്റെ പേരും 1001, 1002, 1003, 1004 എന്നീ നാലു
മെമ്മറി വിലാസങ്ങള്‍ ഉപയോഗിക്കുന്ന 4 ബൈറ്റ്‌ മെമ്മറിയുമാണ്‌. ഈ വേരിയബി
ളിന്റെ ഉള്ളടക്കം 18 ആണ്‌. അതായത്‌ Num ന്റെ L മൂല്യം. 1001 ഉം R മൂല്യം 18 ഉം
ആണ്‌.

6.6. ഓഷറേറ്ററുകള്‍ (Operators):

കമ്പ്യൂട്ടറുകളില്‍ പ്രവര്‍ത്തനങ്ങള്‍ (operations) നടപ്പിലാക്കുന്നതിന്‌ പ്രേരിപ്പിക്കുന്ന മുന്‍

കൂട്ടി നിശ്ചയിച്ചിട്ടുള്ള ചിഹ്നങ്ങളാണ്‌ ഓപ്പറേറ്ററുകള്‍. ഒരു ഓപ്പറേഷനില്‍ പങ്കെടുക്കുന്ന

വയെ ഓപ്പറാന്‍ഡ്സ്‌ (operands) എന്നു വിളിക്കുന്നു. ഒരു ഓപ്പറന്റ്‌ വേരിയയബിളോ
സ്ഥിരാംഗമോ ആകാം.

ഉദാഹരണത്തിന്‌ atb എന്ന അരിത്മെറ്റിക്‌ ഓപ്പറേഷനില്‍ + (സങ്കലനം) ഓപ്പറേറ്ററും, a,

b എന്നിവ ഓപ്പറാന്‍ഡുകളും ആണ്‌. വിവിധ മാനദണ്ഡങ്ങള്‍ക്കനുസൃതമായി ലെ

ഓപ്പറേറ്ററുകളെ തരം തിരിച്ചിരിക്കുന്നു. C++ ഓപ്പറേഷനുപയോഗിക്കുന്ന ഓപ്പറാന്‍ഡ്‌

കളുടെ എണ്ണം അനുസരിച്ച്‌ ഓപ്പറേറ്ററുകളെ യൂനറി (unary), ബൈനറി (binary), ടെറിന
റി (terinary) എിങ്ങനെ മൂന്നായി തരം തിരിച്ചിരിക്കുന്നു.

യൂനറി ഓപ്പറേറ്ററുകള്‍ (Unary Operators ): ഒരു ഓപ്പറാന്റ്‌ മാത്രമുള്ള പ്രവര്‍ത്തനങ്ങ

ളിലെ ഓപ്പറേറ്ററുകളാണ്‌ യൂനറി ഓപ്പറേറ്ററുകള്‍. ഒരു സംഖ്യ പോസിറ്റീവ്‌ അല്ലെങ്കില്‍

നെഗറ്റീവ്‌ എന്നു കാണിക്കാനുപയോഗിക്കുന്ന +, (-) ചിഹ്നങ്ങളാണ്‌ സാധാരണ ഉപ
AOS ഒന്നാം വര്‍ഷ കമ്പ്യൂട്ടര്‍ സയന്‍സ്‌ 6 ഡാറ്റയുടെ തരങ്ങളും ഓഷറ്റേറുകളും

യോഗിക്കുന്ന യൂനറി ഓപ്പറേറ്ററുകള്‍ ചിഹ്നത്തോടു
കൂടിയ ഒരു നമ്പറിന്‌ മുന്‍പില്‍ + ഓപ്പറേറ്റര്‍ നല്‍ cult» വിം
കുമ്പോള്‍ നിലവിലുള്ള ചിഹ്നത്തിന്‌ മാറ്റമുണ്ടാ x +x

കുന്നില്ല. എന്നാല്‍ - നല്‍കുമ്പോള്‍ വിലയില്‍ മാറ്റ
മുണ്ടാകുന്നു. ചിഹ്നത്തോടു കൂടിയ ഒരു സംഖ്യ
യില്‍ യുനറി ഓപ്പറേറ്റര്‍ നാം പ്രയോഗിച്ചാല്‍
സംഖ്യയുടെ നിലവിലുള്ള ചിഹ്നം നേരേ വിപരീ
തമാകുന്നു. DYMO] ഓപ്പറേറ്ററിന്റെ ഉപയോഗം
പട്ടിക 6.208 കൊടുത്തിരിക്കുന്നു. പട്ടിക 6.2 - തമുനറി ഓഷറ്റേറുകശ്‌

ഇന്‍ക്രിമന്റ്‌ (increment) ++ (decriment) -- എന്നിവയും യുനറി ഓപ്പറേറ്ററുകള്‍ക്ക്‌ ഉദാഹ
രണങ്ങളാണ്‌.

ബൈനറി ഓാപ്പറേറ്ററുകള്‍ (Binary Operator): ബൈനറി ഓപ്പറേറ്ററുകള്‍ രണ്ട്‌ ഓപ്പ
റാന്‍ഡുകളില്‍ പ്രവര്‍ത്തിക്കുന്നു. അരിത്മെറ്റിക്‌ ഓപ്പറേറ്ററുകള്‍ (arithmatic), റിലേഷണല്‍
ഓപ്പറേറ്ററുകള്‍ (relational), ലോജിക്കല്‍ ഓപ്പറേറ്ററുകള്‍ (logical) മുതലായവയാണ്‌ സാ
ധാരണയായി ഉപയോഗിക്കുന്ന ബൈനറി ഓപ്പറേറ്ററുകള്‍.

ടെറിനറി ഓപ്പറേറ്റര്‍ (Terinary operator): SBMA ഓപ്പറേറ്ററുകള്‍ മൂന്ന്‌ ഓപ്പറാന്‍ഡു
കളില്‍ പ്രവര്‍ത്തിക്കുന്നു. കണ്ടീഷണല്‍ (conditional) ഓപ്പറേറ്റര്‍ (2:) ഇതിന്‌ ഒരു ഉദാഹ
രണമാണ്‌.

മുകളില്‍ പറഞ്ഞിരിക്കുന്ന ഓപ്പറേറ്ററുകളില്‍ ചിലത്‌ അടുത്ത ഭാഗങ്ങളിലും മറ്റു ചിലത്‌
അധ്യായം ഏഴിലും ചര്‍ച്ച ചെയ്യാം.

പ്രവര്‍ത്തനരീതി അടിസ്ഥാനമാക്കി ഓപ്പറേറ്ററുകളെ അരിത്മാറ്റിക്‌ (arithmatic), റിലേഷ
ണല്‍ (relational), ലോജിക്കല്‍ (logical), ഇന്‍പുട്ട്‌ BY§al§ (input/output), അസൈന്‍
മെന്റ്‌ (assignment), ഷോര്‍ട്ട്‌ -ഹാന്‍ഡ്‌ (short-hand), ഇന്‍ക്രിമെന്റ്‌ / ഡിക്രിമെന്റ്‌ (increment/
decrement) എന്നിങ്ങനെ തരംതിരിച്ചിരിക്കുന്നു.

6.6.1 അരിത്മെറ്റിക്‌ ഓപ്പറേറ്ററുകള്‍ (Arithmetic operators)

അടിസ്ഥാന ഗണിത്രപ്രകിയകളായ സങ്കലനം, വ്യവകലനം, ഗുണനം, ഹരണം എന്നിവ
യ്ക്ക്‌ ഉപയോഗിക്കുന്ന ഓപ്പറേറ്ററുകളാണ്‌ അരിത്മെറ്റിക്‌ ഓപ്പറേറ്ററുകള്‍. യഥാക്രമം +,
* /എന്നീ ചിഹ്നങ്ങള്‍ ഇതിനായി ഉപയോഗിക്കുന്നു. ഹരണത്തിനു ശേഷമുള്ള ശിഷ്ടം
ലഭിക്കുന്നതിനായി C++ ല്‍ മോഡുലസ്‌ ഓപ്പറേറ്റര്‍ (%) എന്നൊരു പ്രത്യേക ഓപ്പറേറ്റ
റും ഉപയോഗിക്കുന്നു. ഇവയെല്ലാം ബൈനറി ഓപ്പറേറ്ററുകളാണ്‌. + ഉം, - ഉം യുനറി
ഓപ്പറേറ്റുകളായും ഉപയോഗിക്കുന്നു എന്നത്‌ ശ്രദ്ധിക്കുക. ഈ പ്രവര്‍ത്തനങ്ങള്‍ക്ക്‌ സംഖ്യാ
സംബന്ധിയായ ഓപ്പറന്റുകളാണ്‌ ആവശ്യമായിട്ടുള്ളത്‌. ഈ പ്രവര്‍ത്തനത്തിന്‌ ശേഷം
ലഭിക്കുന്ന ഫലവും ഒരു സംഖ്യയായിരിക്കും. പട്ടിക 6.3ല്‍. ബൈനറി അരിത്മെറ്റിക
പ്രവര്‍ത്തനത്തിന്റെ ചില ഉദാഹരണങ്ങള്‍ കാണിച്ചിരിക്കുന്നു.

വേരിയബിള്‍ | വേരിയബിര്‍ | സങ്കലനം വ്യവകലനം
x + = x - y

ചിത്രം 6.3 അഭിത്മെറ്റിക്‌ ഓഷറ്റുകള്‍്‌

5) ഒന്നാം വര്‍ഷ കമ്പ്യൂട്ടര്‍ സയന്‍സ്‌ 6 ഡാറ്റയുടെ തരങ്ങളും ഓകഷറ്റേറുകളും

മോഡുലസ്‌ ഓപ്പറേറ്ററുകള്‍ (Modulus operator (%)): മോഡ്‌ അഥവാ മോഡുലസ്‌
ഓപ്പറേറ്റര്‍ ഹരണത്തിനുശേഷമുള്ള ശിഷ്ടം കണ്ടുപിടിക്കാന്‍ ഉപയോഗിക്കുന്നു. ഇത്‌
ഇന്റിജര്‍ ഓപ്പറാന്‍ഡുകളോടൊപ്പം മാത്രമേ ഉപയോഗിക്കാന്‍ കഴിയു. മോഡുലസ്‌ ല്ര്രകി
യയുടെ ചില ഉദാഹരണങ്ങള്‍ പട്ടിക 6.4 ല്‍ കാണിച്ചിരിക്കുന്നു. ഈ പ്രിയയുടെ ഫല
ത്തിന്റെ ചിഹ്നം ഒന്നാമത്തെ ഓപ്പറാന്‍ഡിന്റെ ചിഹ്നം തന്നെ ആയിരിക്കുമെന്നത്‌ ശ്രദ്ധി
ക്കുക. ഇവിടെ പട്ടികയില്‍ ഒന്നാമത്തെ ഓപ്പറാന്റ്‌ X ആണ്‌. ഉദാഹരണം പട്ടിക 6.4ല്‍.

വേരിയബിര്‍ | വേരിയബിള്‍ മോഡുലസ്‌ വേരിയബിര്‍ | വേരിയബിള്‍ മോഡുലസ്‌
ഓഷറേഷന്‍ ഓഷറേഷന്‍

പട്ടിക 6.4: മോദ്ധുലന്ധ്‌ ഓഷഥ്റേര്‍ ഉപമോഗഗിച്ചുള്ള പ്രവര്‍ത്തനങ്ങള്‍

സ്വയം പരിശോധിക്കുക

അടിസ്ഥാന ഡാറ്റ ഇനങ്ങളെ ആരോഹണ ക്രമത്തില്‍ ക്രമീകരിക്കുക.
ഒരു സംഭരണ സ്ഥാനത്തിനു നല്‍കുന്ന പേര്‍ ......................... എന്ന്‌ അറിയ
പ്പെടുന്നു.

C++ ലെ ഒരു ടെര്‍നറി ഓപ്പറേറ്ററുടെ പേരെഴുതുക.

4. X=-5, y=3 ആയാല്‍ താഴെ കൊടുത്തിരിക്കുന്ന ഓപ്പറേഷനുകളുടെ ഓട്ടപുട്ട്‌

പ്രവചിക്കുക.
a. —X fixty
b. -y g.x%y
Cc. -X+-y h.x/y
d.-x-y 1. x *-y
€. x%-11 ]. -x%-5

6.6.2 റിലേഷണല്‍ ഓപ്പറേറ്ററുകള്‍ (Relational Operators) :

സംഖ്യ സംബന്ധിയായ ഡാറ്റയെ താരതമ്യം ചെയ്യുന്നതിനാണ്‌ റിലേഷനല്‍ ഓപ്പറേ
റ്ററുകള്‍ ഉപയോഗിക്കുന്നത്‌. ഇവ ബൈനറി ഓപ്പറേറ്ററുകളാണ്‌. ഏതൊരു റിലേഷണല്‍
ഓപ്പറേഷന്റെയും ഫലം ശരി (true) അല്ലെങ്കില്‍ തെറ്റ്‌ (false) എന്നതായിരിക്കും. C++O3
True നെ | കൊണ്ടും False നെ 0 കൊണ്ടും പ്രതിനിധീകരിക്കുന്നു. (ചെറുതാണ്‌), < =
(ചെറുതോ, തുല്യമോ ആണ്‌,, > (വലുതാണ്‌), > = (വലുതോ, തുല്യമോ ആണ്‌, ==
(തുല്യമാണ്‌), ! = (തുല്യമല്ല). എന്നിങ്ങനെ 6 റിലേഷണല്‍ ഓപ്പറേറ്ററുകളാണ്‌ C++08
ഉള്ളത്‌. തുല്യതാ പരിശോധനയ്ക്ക്‌ രണ്ട്‌ തുല്യ ചിഹ്നങ്ങള്‍ (=) ആവശ്യാമാണെന്നത്‌
ശ്രദ്ധിക്കുക. വിവിധ റിലേഷണല്‍ ഓപ്പറേറ്ററുകളുടെ ഉപയോഗവും അവയുടെ ഫല
ങ്ങളും പട്ടിക 6.5 ല്‍ കാണിച്ചിരിക്കുന്നു.
ര

ഒന്നാം വര്‍ഷ കമ്പ്യൂട്ടര്‍ സയന്‍സ്‌ 6 ഡാറ്റയുടെ തരങ്ങളും ഓഷറ്റേറുകളും

— 6.5 റിലഘണത്‌ —— പ _

6.6.3 ലോജിക്കല്‍ ഓപ്പറേറ്ററുകള്‍ (Logical Operators):

റിലേഷണല്‍ ഓാപ്പറേറ്ററുകള്‍ ഉപയോഗിച്ച്‌ നമുക്ക്‌ വിലകള്‍ താരതമ്യം ചെയ്യാം. ഉദാഹ
രണത്തിന്‌ 3<5,num 1510 മുതലായവ C++G ഇത്തരം താരതമ്യ പ്രവര്‍ത്തനങ്ങളെ റിലേ
ഷണല്‍ പദപ്രയോഗങ്ങള്‍ എന്ന്‌ വിളിക്കുന്നു. ചില സാഹചര്യങ്ങളില്‍ രണ്ടോ അതില
ധികമോ താരതമ്യങ്ങള്‍ സംയോജിപ്പിക്കേണ്ടതായി വരും. ഗണിതശാസ്ത്രത്തില്‍ a>b>c
എന്ന രീതിയിലുള്ള പദ്പപയോഗങ്ങള്‍ നമുക്ക്‌ ഉപയോഗിക്കാം. എന്നാല്‍ C++@8 ഇത്‌
സാധ്യമല്ല. ഇവയെ a>b എന്നും b>c എന്നും വേര്‍തിരിച്ച്‌ & എന്ന ലോജിക്കല്‍ ഓപ്പറേ
Qa ഉപയോഗിച്ച്‌ സംയോജിപ്പിക്കുന്നു. അതായത്‌ (a>b) && (b>c). ഇത്തരം ലോജിക്കല്‍
സംയോഗങ്ങളുടെ ഫലവും (true) (1) അല്ലെങ്കില്‍ (false) (0) ആയിരിക്കും. && (ലോജി
ക്കല്‍ ആന്‍ഡ്‌ (AND),! (ലോജിക്കല്‍ ഓര്‍ (OR)), ! (ലോജിക്കല്‍ നോട്ട്‌ (NOT)) എന്നി
വയാണ്‌ C++ ലെ ലോജിക്കല്‍ ഓപ്പറേറ്ററുകള്‍.

ലോജിക്കല്‍ ആന്റ്‌ (logical AND) ഓപ്പറേറ്റര്‍: El, E2 എന്നീ രണ്ട്‌ റിലേഷന്‍ പദപ്രയോ
ഗങ്ങള്‍ logical AND ഉപയോഗിച്ച്‌ സംയോജിപ്പിക്കു

മ്പോള്‍ ഫലം true(1) ലഭിക്കണമെങ്കില്‍ El, E2 റ ഞി
എന്നിവ രണ്ടും true(1) തന്നെ ആയിരിക്കണം. അല്ലാ
ത്ത എല്ലാ സന്ദര്‍ഭങ്ങളിലും ഫലം false(0) ആയിരി
ക്കും. വിവിധ ഇന്‍പുട്ടുകള്‍ക്ക്‌ അനുസരിച്ചുള്ള ലോജി

£903 AND പ്രക്രിയയുടെ ഫലം പട്ടിക 6.6 ല്‍ കാണി
ച്ചിരിക്കുന്നു.

ഉദാഹരണം 1055441525 ഫലം true (1). 10>5
&&100<25 ഫലം false (0).

ലോജിക്കല്‍ ഓര്‍ (logical OR) ഓപ്പറേറ്റര്‍. El, E2
എന്നീ രണ്ട്‌ റിലേഷന്‍ പദ്ര്പയോഗങ്ങള്‍ logical OR
ഉപയോഗിച്ച്‌ സംയോജിപ്പിക്കുമ്പോള്‍ ഫലം false(0)
ലഭിക്കുമെങ്കില്‍ El, E2 എന്നിവ രണ്ടും false (0) ആ
യിരിക്കണം. അല്ലാത്ത എല്ലാ സന്ദര്‍ഭങ്ങളിലും ഫലം
true(1) ആയിരിക്കും. വിവിധ ഇന്‍പുട്ടുകള്‍ക്ക്‌ അനു
സരിച്ചുള്ള ലോജിക്കല്‍ OR പ്രക്രിയയുടെ ഫലം പട്ടിക 6.7 ഓര്‍ ഓഷണ്റഥിന്റെ ഉപതോഗം
പട്ടിക 6.7ല്‍ കാണിച്ചിരിയ്ക്കുന്നു.

ഉദാഹരണം: 10>15 | 1100<25 ഫലം true(1), 10>15 | 1100<90 ഫലം false (0).

ലോജിക്കല്‍ നോട്ട്‌ (logical NOT) ഓപ്പറേറ്റര്‍: റിലേഷനല്‍ പദ്ര്പയോഗങ്ങളുടെ ഫലം
വിപരീതമാക്കാനാണ്‌ logical NOT ഉപയോഗിക്കുന്നത്‌. ഇത്‌ ഒരു യൂനറി ഓപ്പറേഷനാണ്‌.

(5) ഒന്നാം വര്‍ഷ കമ്പ്യൂട്ടര്‍ സയന്‍സ്‌ 6 ഡാറ്റയുടെ തരങ്ങളും ഓഷറ്റേറുകളും

വിവിധ ഇന്‍പുട്ടുകള്‍ക്ക്‌ അനുസരിച്ചുള്ള ലോജിക്കല്‍ NOT
പദപ്രയോഗത്തിന്റെ ഫലം പട്ടിക 6.803 കാണിച്ചിരിക്കുന്നു.

ഉദാഹരണം ! (100<2) ഫലം 1

| (10052) ഫലം 0 (False) ന്‌

6.6.4 ഇന്‍പുട്ട്‌ / ഓട്ട്പുട്ട്‌ ഓപ്പറേറ്ററുകള്‍ (Input/Output operators)

ഇന്‍പൂട്ട പ്രവര്‍ത്തനങ്ങള്‍ക്ക്‌ സാധാരണയായി ഉപയോക്താവിന്റെ ഇടപെടല്‍ ആവശ്യ
മാണ്‌. ഇന്‍പുട്ട്‌ പ്രോസസ്സില്‍ കീബോഡ്‌ വഴി നല്‍കുന്ന ഡാറ്റ മെമ്മറി ലൊക്കേഷനുക
ളില്‍ സൂക്ഷിക്കുന്നു. --ല്‍ ഇന്‍പുട്ട്‌ ഓപ്പറേഷന്‍ ചെയ്യുന്നതിനായി >> ഓപ്പറേറ്റര്‍ ഉപ
യോഗിക്കുന്നു. ഈ ഓപ്പറേറ്റര്‍ ഗേറ്റ്‌ ഫ്രം (get from) അഥവാ എക്സ്ട്രാക്ഷന്‍ (extraction)
ഓപ്പറേറ്റര്‍ എന്ന്‌ അറിയപ്പെടുന്നു. രണ്ട്‌ > ചിഹ്നങ്ങള്‍ ഉപയോഗിച്ചാണ്‌ ഈ ചിഹ്നം
നിര്‍മ്മിച്ചിരിക്കുന്നത്‌.

ഇതുപോലെ ഓട്ട്പൂട്ട്‌ പവര്‍ത്തനങ്ങളില്‍ ഡാറ്റ റാമില്‍ നിന്നും ഓട്ട്പുട്ട ഉപകരണത്തി
ലേക്ക്‌ മാറ്റുന്നു. സാധാരണയായി ഫലം നേരിട്ട്‌ ലഭിക്കാന്‍ ഉപയോഗിക്കുന്ന ഓട്ട്പുട്ട്‌ ഉ
പകരണം മോണിറ്ററാണ്‌. പൂട്ട്‌ ടു (Put to) അഥവാ ഇന്‍സേര്‍ഷന്‍ (insertion) ഓപ്പറേറ്റര്‍
എന്നു വിളിക്കുന്ന ഓപ്പറേറ്റര്‍ ഓട്ടപുട്ട്‌ പ്രവര്‍ത്തനത്തിന്‌ ഉപയോഗിക്കുന്നു. ഇത്‌
രണ്ട്‌ “ചിഹ്നങ്ങള്‍ ഉപയോഗിച്ചാണ്‌ നിര്‍മ്മിച്ചിരിക്കുന്നത്‌.

6.6.5 വിലനല്‍കല്‍ ഓപ്പരേറ്റര്‍ (Assignment operators) (=)

സാധാരണയായി ഒരു വില മെമ്മറിയില്‍ സംഭരിക്കുന്നതിനായി വിലനല്‍കല്‍ ഓപ്പറേ

96 ഉപയോഗിക്കുന്നു. ഇത്‌ ഒരു ബൈനറി ഓപ്പറേറ്ററായതിനാല്‍ ഇവയ്ക്ക്‌ രണ്ട്‌ ഓപ്പ നി
റാന്റുകള്‍ ആവശ്യമാണ്‌. ആദ്യത്തെ ഓപ്പറാന്റ്‌ ഒരു വേരിയബിള്‍ ആയിരിക്കണം. അതി

ലാണ്‌ രണ്ടാമത്തെ ഓപ്പറാന്റിന്റെ മൂല്യം സൂക്ഷിക്കുന്നത്‌.

ചില ഉദാഹരണങ്ങള്‍ പട്ടിക 6.9ല്‍ കാണിച്ചിരിക്കുന്നു.

വേരിയബിര്‍ b യുടെ വില a ല്‍ സംഭരിക്കുന്നു

സ്ഥിരാംഗം 3 വേരിയബിള്‍ a ല്‍ സംഭരിക്കുന്നു

പട്ടിക 6.9 അസൈന്‍മെന്റ്‌ ഓഷദേറ്റര്‍
റിലേഷണല്‍ ഓപ്പറേറ്ററായ = = ഉപയോഗത്തെപ്പറ്റി ഭാഗം 6.6.208 നമ്മള്‍ ചര്‍ച്ച ചെയ്തി
രുന്നു. ഈ രണ്ടു ഓപ്പറേറ്ററുകള്‍ തമ്മിലുള്ള വ്യത്യാസം ശ്രദ്ധിക്കുക. = ചിഹ്നം ഒരു വേ
രിയബിളിനു വില നല്‍കുന്നതിനും എന്നാല്‍ = = ചിഹ്നം രണ്ട്‌ വിലകളെ തമ്മില്‍ താര
തമ്യം ചെയ്ത്‌ true അല്ലെങ്കില്‍ false എന്ന ഉത്തരം നല്‍കുന്നതിനും ഉപയോഗിക്കുന്നു.

6.6.6 അരിത്മെറ്റിക്‌ വിലനല്‍കല്‍ ഓപ്പരേറ്ററുകള്‍ (Arithmetic assignment operators)

ലളിതമായ ഒരു അരിത്മാറ്റിക്‌ പ്രസ്താവന ചുരുക്കി സൂചിപ്പിക്കാന്‍ അരിത്തമാറ്റിക്‌ വില
നല്‍കല്‍ ഓപ്പറേറ്റര്‍ ഉപയോഗിക്കുന്നു. ഉദാഹരണത്തിന്‌ 2 - 210 എന്നത്‌ ൭-5 10 എ
ന്നും എഴുതാം. ഇവിടെ + = എന്നത്‌ അരിത്മാറ്റിക്‌ വിലനലല്‍കല്‍ ഓപ്പറേറ്റര്‍ ആണ്‌.
ഈ രീതി എല്ലാ അരിത്മാറ്റിക്‌ ഓപ്പറേറ്ററുകളിലും ഉപയോഗിക്കാവുന്നതാണ്‌. അവ പട്ടിക
6.10 കാണിച്ചിരിക്കുന്നു. +=, =, *=,/=, 65 എന്നിവ. C++oe! അരിത്മാറ്റിക്‌ വിലനല്‍കല്‍
ന്നാം വര്‍ഷ കമ്പ്യൂട്ടര്‍ സയന്‍സ്‌ 6 ഡാറ്റയുടെ തരങ്ങളും ഓഷറ്റേറുകളും

ഓപ്പററ്ററുകളാണ്‌. C++ ചുരുക്കെഴുത്തുകള്‍ അരിത്മ്െറ്റിക്‌ തത്തുല്യ
(short hands) എന്നുകൂടി ഇവ അറിയപ്പെടുന്നു. വിലനല്‍കല്‍ അരിത്മെറ്റിക്‌
ഇവയെല്ലാം തന്നെ ബൈനറി ഓപ്പറേറ്ററുക പ്രവര്‍ത്തനം പ്രവര്‍ത്തനം
ളാണ്‌. ഇവയുടെ ഒന്നാമത്തെ ഓപ്പറാന്റ്‌
എപ്പോഴും ഒരു വേരിയബിള്‍ തന്നെയായിരി
ക്കണം. സങ്കലനം, വിലനല്‍കല്‍ എന്നീ
പ്രവര്‍ത്തനങ്ങള്‍ സാധാരണ രീതിയേക്കാള്‍
വേഗത്തില്‍ ചെയ്യുന്നതിനായി ഈ ഓപ്പറേറ്റ
റുകള്‍ ഉപയോഗിക്കുന്നു.

പട്ടിക 6.10 C++ ചുരുക്കെഴുത്തുകള്‍

6.6.7 ഇന്‍ക്രിമന്റ്‌ (Increment) (++) ഡിക്രിമന്റ്‌ (Decrement) (--)

ഓപ്പറേറ്ററുകള്‍ (Opertors)
C++O2! രണ്ടു പ്രത്യേക ഓപ്പറേറ്ററുകളാണ്‌ ഇന്‍ക്രിമെന്റ്‌, ഡിക്രിമെന്റ്‌ ഓപ്പറേറ്ററുകള്‍.
ഇവ യൂനറി ഓപ്പറേറ്ററുകളാണ്‌. അവയുടെ ഓപ്പറാന്റ്‌ വേരിയബിള്‍ ആയിരിക്കണം.സോ
FAS കോഡ്‌ സംക്ഷിപ്തമാക്കാന്‍ ഈ ഓപ്പറേറ്ററുകള്‍ സഹായിക്കും.

MB Alaa ഓപ്പറേറ്റര്‍; (++) ഒരു ഇന്റിജര്‍ വേരിയബിളിന്റെ ഉള്ളടക്കത്തെ ഒന്നു വര്‍ദ്ധി
പ്പിക്കാന്‍ ഈ ഓപ്പറേറ്റര്‍ ഉപയോഗിക്കുന്നു. ++X പ്രീഇന്‍ക്രിമെന്റ്‌ (pre increment), x++
പോസ്റ്റ്ഇന്‍ര്രിമെന്റ്‌ (post increment) എന്നിങ്ങനെ ഇതിനെ രണ്ടു രീതിയില്‍ എഴുതാം.
ഇത്‌ 1 അല്ലെങ്കില്‍ X+=1 എന്നതിനു തുല്യമാണ്‌.

ഡി്രിമെന്റ്‌ ഓപ്പറേറ്റര്‍; ഇന്‍ക്രിമെന്റ്‌ ഓപ്പറേറ്ററിന്റെ നേര്‍വിപരീതമായ ഡിക്രിമെന്റ്‌
ഓപ്പറേറ്റര്‍ ഇന്റിജര്‍ വേരിയബിളിന്റെ ഉള്ളടക്കത്തെ കുറക്കുന്നു. ---%, X- എന്നിങ്ങനെ
ഈ NAG Hloagy /ഡിക്രിമെന്റ്‌ ര്രവര്‍ത്തനങ്ങളുടെ ഓപ്പറേറ്ററും രണ്ടു രീതിയില്‍ ഉപ
യോഗിക്കാം. ഇത്‌ 1 അല്ലെങ്കില്‍ x-=1 എന്നതിന്‌ തൂല്യമാണ്‌.

ഈ ഓപ്പറേറ്ററുകളുടെ രണ്ട്‌ രീതിയിലുള്ള ഉപയോഗങ്ങളെ ഇന്‍ക്രിമെന്റ്‌ /ഡിക്രിമെന്റ്‌
പ്രവര്‍ത്തനങ്ങളുടെ പ്രിഫിക്സ്‌ രൂപമെന്നും, പോസ്റ്റ്ഫിക്സ്‌ രൂപമെന്നും എന്ന്‌ വിളി
ക്കുന്നു.

രണ്ടു രീതികളും ഓപ്പറാന്റില്‍ ഒരേ മാറ്റമാണ്‌ വരുത്തുന്നത്‌ എങ്കിലും മറ്റ്‌ ഓപ്പറേറ്ററുക
ളുടെ കുടെ ഉപയോഗിക്കുമ്പോള്‍ ഇവയുടെ പ്രവര്‍ത്തന രീതി വ്യത്യസ്തമായിരിക്കും.

MB Alana / ഡിക്രിമന്റ്‌ ഓപ്പറേറ്ററുകളുടെ പ്രീഫിക്സ്‌ രൂപം: പ്രീഫിക്സ്‌ രീതിയില്‍
ഓപ്പറേറ്റര്‍ ഓപ്പറാന്റിന്റെ മുന്‍പായിരിക്കും എഴുതുക. ഇവിടെ ഇന്‍ക്രിമെന്റ്‌ / ഡിക്രി
മെന്റ്‌ ആദ്യം ചെയ്യുകയും അങ്ങനെ കിട്ടുന്ന മൂല്യം മറ്റ്‌ ഓപ്പറേഷനുകള്‍ക്ക്‌ ഉപയോഗി
ക്കുകയും ചെയ്യും. അതുകൊണ്ട്‌ ഈ രീതിയെ മാറ്റുക പിന്നീട്‌ ഉപയോഗിക്കുക (change,
then use) എന്ന്‌ വിളിക്കുന്നു.

a, b,c, d എന്നീ വേരിയബിളുകള്‍ പരിഗണിക്കുക. അവയില്‍ a, യുടെ വില 10 ഉം b യുടെ
വില 5 ഉം ആണ്‌. C=++a എന്ന പ്രസ്താവനയില്‍ a യുടെ മൂല്യം 11 ഉം c യുടെ മൂല്യം
11 ഉം ആയി ലഭിക്കും. ഇവിടെ ആദ്യം a യുടെ മൂല്യം ഒന്ന്‌ വര്‍ദ്ധിച്ച്‌ 11 ആകും. ഈ കൂടി
യ മൂല്യമാണ്‌ ക്ക്‌ നല്‍കുന്നത്‌. അതുകൊണ്ടാണ്‌ രണ്ടിനും ഒരേ വില ലഭിക്കുന്നത്‌.
അതുപോലെ തന്നെ d= -- എന്നതില്‍ റ യുടെയും b യുടെയും മൂല്യം 4 ആകും.
MB Alaa /ഡി്രിമെന്റ്‌ ഓപ്പറേറ്ററുകളുടെ പോസ്റ്റ്‌ ഫിക്സ്‌ രൂപം: പോസ്റ്റ്ഫിക്സ്‌
രീതിയില്‍ DB olay /ഡിക്രിമന്റ്‌ ഓപ്പറേഷന്‍ നടത്തുമ്പോള്‍ ഓപ്പറേറ്റര്‍ ഓപ്പറാന്റിനു
ഒന്നാം വര്‍ഷ കമ്പ്യൂട്ടര്‍ സയന്‍സ്‌ 6 ഡാറ്റയുടെ തരങ്ങളും ഓകഷറ്റേറുകളും

ശേഷമാണ്‌ എഴുതുക. വേരിയബിളിന്റെ നിലവിലുള്ള വിലയാണ്‌ മറ്റ്‌ ഓപ്പറേഷനുകള്‍
ക്ക്‌ ഉപയോഗിക്കുക. അതിനുശേഷം മൂല്യം വര്‍ദ്ധിപ്പിക്കുകയോ കുറയ്ക്കുകയോ ചെ
യ്യും. അതിനാല്‍ ഈ രീതിയെ ഉപയോഗിക്കുക, പിന്നീട്‌ മാറ്റുക (use, then change) എന്ന
3 വിളിക്കുന്നു.

മുകളില്‍ കൊടുത്ത ഉദാഹരണം അതേ തുടക്ക വിലകള്‍ ഉപയോഗിച്ച്‌ നിരീക്ഷിക്കു
മ്പോള്‍ C = At+ എന്ന പ്രയോഗത്തില്‍ മയുടെ മുല്യം 11, ൦ യുടെ മുല്യം 10 എന്ന്‌ ലഭി
ക്കും. ഇവിടെ A യുടെ മൂല്യം ക്ക്‌ നല്‍കുകയും അതിന്‌ ശേഷം a യുടെ മൂല്യം ഒന്ന്‌ വര്‍
ദ്ധിപ്പിക്കുകയും ചെയ്യുന്നു. അതായത്‌ a യുടെ മൂല്യം വര്‍ദ്ധിപ്പിക്കുന്നതിന്‌ മുന്‍പുതന്നെ
ക്ക്‌ ആ വില നല്‍കുന്നു. അതുപോലെ ദ = b- - എന്ന പ്രവര്‍ത്തനത്തിനുശേഷം റിയു
ടെ മൂല്യം 5 ഉം b യുടെ മൂല്യം 4 ഉം ആയിരിക്കും.

6.6.8 കണ്ടീഷണല്‍ ഓപ്പറേറ്റര്‍ (conditional operator) (?:)

മൂന്ന്‌ ഓപ്പറാന്റുകള്‍ക്കുമേല്‍ ഉപയോഗിക്കുന്ന ഒരു ടെറിനറി ഓപ്പറേറ്ററാണ്‌. ഇതില്‍
ആദ്യത്തെ ഓപ്പറാന്റ്‌ ഒരു ലോജിക്കല്‍ പ്രയോഗവും (വ്യവസ്ഥ) മറ്റു രണ്ടെണ്ണം വില
കളും ആയിരിക്കും. അവ സ്ഥിരാംഗമോ വേരിയബിളോ പ്രയോഗമോ ആവാം. ആദ്യം
വ്യവസ്ഥ പരിശോധിച്ച്‌ ശരിയാണെങ്കില്‍ രണ്ടാമത്തെ ഓപ്പറാന്റ്‌ തിരഞ്ഞെടുക്കുന്നു.
അല്ലെങ്കില്‍ മൂന്നാമത്തെ ഓപ്പറാന്റ്‌ തിരഞ്ഞെടുക്കുന്നു.

വാകൃഘടന

പ്രയോഗം 1 ? പ്രയോഗം 2 :പ്രയോഗം 3;

താഴെ കൊടുത്തിരിക്കുന്ന പ്രവര്‍ത്തനം നമുക്ക്‌ നോക്കാം.
result= score >50? 'p':'f;

എന്ന പ്രയോഗത്തില്‍ scroreay മൂല്യം 50 ല്‍ കൂടുതല്‍ ആണെങ്കില്‍ 7 എന്ന വിലയും
അല്ലെങ്കില്‍ 'f എന്ന വിലയുമാണ്‌ result എന്ന വേരിയബിളില്‍ സംഭരിക്കുന്നത്‌. ഈ
ഓപ്പറേറ്ററുകളെ കുറിച്ചുള്ള കൂടുതല്‍ കാര്യങ്ങള്‍ ഏഴാം അദ്ധ്യായത്തില്‍ നമ്മള്‍ ചര്‍ച്ച
ചെയ്യും.

6.6.9 സൈസ്‌ ഓഫ്‌ ഓപ്പറേറ്റര്‍ (size of operator)

സൈസ്‌ ഓഫ്‌ ഓപ്പറേറ്റര്‍ യൂനറി കംപൈല്‍ ടൈം ഓപ്പറേറ്ററാണ്‌. ഒരു ഓപ്പറാന്റ്‌ എത്ര
മെമ്മറി ഉപയോഗിച്ചു എന്ന്‌ കണക്കാക്കുന്നതിനാണ്‌ ഇത്‌ ഉപയോഗിക്കുന്നത്‌. ഇതിലുപ
യോഗിക്കുന്ന ഓപ്പറാന്റ്‌ സ്ഥിരാംഗമോ, വേരിയബിളോ, ഡാറ്റയുടെ ഇനമോ ആവാം.

ഇതിന്റെ വാകൃഘടന താഴെ കൊടുത്തിരിക്കുന്നു
size of (data type);

size of (variable name);

size of (constant)

ഓപ്പറാന്റായി ഡാറ്റ ഇനം നല്‍കുമ്പോള്‍ അത്‌ ആവരണ ചിഹനത്തിനുള്ളില്‍ ആയിരിക്ക
ണമെന്നത്‌ ശ്രദ്ധിക്കുക. മറ്റുള്ള ഓപ്പറാന്റുകള്‍ക്ക്‌ ആവരണം നിര്‍ബന്ധമില്ല. പല രൂപ
ത്തിലുള്ള സൈസ്‌ ഓഫ്‌ ഓപ്പറേറ്ററിന്റെ ഉപയോഗം പട്ടിക 6.11 ല്‍ കാണിച്ചിരിക്കുന്നു.
5൨൫൫ ഒന്നാം വര്‍ഷ കമ്പ്യൂട്ടര്‍ സയന്‍സ്‌ 6 ഡാറ്റയുടെ തരങ്ങളും ഓഷറേറററുകളും

വിശദീകരണം

sizeof (int) 4 എന്ന വില ലഭിക്കുന്നു (GCC ല്‍ int ഡാറ്റ ഇനത്തിന്റെ വലിഷം 4 ബൈറ്റ്‌ ആണ്‌.

sizeof 3.2 ഫലം 8 ലഭിക്കുന്നു (ഫ്‌ളോട്ടിംഗ്‌ പോയിന്റ്‌ സ്ഥിരാംഗം എന്നത്‌ double ഡാറ്റാ ഉന
മായി കണക്കാക്കുന്നു.
sizeof p; P എന്നത്‌ float തരത്തിലുള്ള വേരിയബിള്‍ ആണെങ്കില്‍ 4 എന്ന വില നല്‍കുന്നു.

പട്ടിക 6.11, സൈസ്‌ ഓഫ്‌ ഓഷറ്റററിന്റെ വിവിധ പ്രയോഗങ്ങള്‍

6.6.10 ഓപ്പറേറ്ററുകളുടെ മുന്‍ഗണനാക്രമം (Precedence of operators)

പലതരം ഓപ്പറേറ്ററുകള്‍ ഒരു പ്രയോഗത്തില്‍ ഉപയോഗിക്കുമ്പോള്‍ ഏത്‌ ക്രമത്തിലാണ്‌
ആ ക്രിയകള്‍ ചെയ്യേണ്ടത്‌ എന്ന്‌ അറിയേണ്ടതുണ്ട്‌. C++ ല്‍ അവയുടെ മുന്‍ഗണനാക്ര
മം എങ്ങനെയാണെന്ന്‌ നോക്കാം. വിവിധ ഓപ്പറേറ്ററുകള്‍ ഉപയോഗിക്കുന്ന ഒരു പ്രയോ
ഗത്തില്‍ ആവരണ ചിഹത്തിനാണ്‌ ആദ്യ പരിഗണന. ( ) ആവരണ ചിഹ്നം ഇല്ലെങ്കില്‍
മുന്‍നിശ്ചയിച്ച,പകാരമുള്ള ഒരു മുന്‍ഗണനാക്രമത്തിലാണ്‌ അവ വിലയിരുത്തപ്പെടുക.
ഓപ്പറേറ്ററുകളുടെ ഈ മുന്‍ഗണനാക്രമം പട്ടിക 6.12 ല്‍ നല്‍കിയിരിക്കുന്നു. ഒരു പ്രയോ
ഗത്തില്‍ മുന്‍ഗണനാക്രമത്തില്‍ ഒരേ സ്ഥാനം വരുന്ന ഓപ്പറേറ്ററുകള്‍ ഉണ്ടെങ്കില്‍ അവ
മിക്കവാറും ഇടത്തുനിന്ന്‌ വലത്തേക്ക്‌ എന്ന രീതിയിലാണ്‌ പ്രവര്‍ത്തിക്കുക.

( ആവരണം

-, --, ! , യൂനറി +, യുനറി -, sizeof
* (ഹരണം), / (രൂണനം), % (മോഡുലസ്‌)
+ (സങ്കലനം), — (വ്യവകലനം)

< (ചെറുതാണ്‌), <= (ചെറുതോ തുല്യമോ ആണ്‌, > (വലുതാണീ), >= (വലുതോ തുല്യമോ ആണ്‌)

== (തുല്യമാണ്‌), != (തുല്യമല്ല)
&& (ലോജിക്കല്‍ ചവ)
| | (ലോജിക്കല്‍ OR)

2 : (കണ്ദീഷണല്‍ പ്രയോഗം)

Co mrnNnt nn FF WN

= (അസൈന്‍മെന്റ്‌ ഓര്‍), *=, /=, Y=, +=, —= (അരിത്മെറ്റിക്‌ അസൈന്‍മെന്റ്‌
82460903800)

 (അല്പവിരാമം)

പട്ടിക 6.12: BICICOQNGABIOS 29MWOENNIA20.
a=3, 0-5, c=4, d=2, % എന്നീ വേരിയബിളുകളും അവയുടെ വിലകളും പരിഗണിക്കുക.

X=atb*c-d എന്ന പ്രയോഗം ചെയ്തു കഴിയുമ്പോള്‍ ന്റെ വില 21 ആയിരിക്കും. ഇവിടെ
* (ഗുണനത്തി)ന്‌ (സങ്കലനം), -(വ്യവക്ലനം) എന്നിവയേക്കാള്‍ മുന്‍ഗണനയുള്ളതി
നാല്‍ b, € എന്നീ വേരിയബിളുകള്‍ തമ്മില്‍ ഗുണിച്ചശേഷമേ അതിന്റെ ഫലം a യോടൊപ്പം
കൂട്ടിചേര്‍ക്കൂ. ആ കിട്ടുന്ന ഉത്തരത്തില്‍ നിന്നും d കുറച്ചാല്‍ അന്തിമഫലം ലഭ്യമാകും.
അങ്ങനെ കിട്ടുന്ന ഉത്തരം XM നല്‍കുന്നു. പ്രോഗ്രാമറുടെ ആവശ്യാനുസരണം പ്രയോ
(5) ഒന്നാം വര്‍ഷ കമ്പ്യൂട്ടര്‍ സയന്‍സ്‌ 6 ഡാറ്റയുടെ തരങ്ങളും ഓഷറ്റേറുകളും

ഗത്തിലെ ഓപ്പറേറ്ററുകളുടെ മുന്‍ഗണനാക്രമം മാറ്റുന്നതിനായി ( ) (ആവരണചിഹ്നം) ഉ
പയോഗിച്ചാല്‍ മതിയാകും. ഉദാഹരണത്തിന്‌ 255, 054, c=3, d=2 എന്നായാല്‍ atb-c*d
എന്നതിന്റെ ഉത്തരം 3 ആയിരിക്കും. പ്രോഗ്രാമര്‍ക്ക്‌ ആദ്യം വ്യവകലനം, പിന്നീട്‌ സങ്ക
ലനം, ഗുണനം എന്ന ക്രമത്തില്‍ ചെയ്യണമെങ്കില്‍ അതിനായി ശരിയായ രീതിയില്‍
ആവരണ ചിഹങ്ങള്‍ ഉപയോഗിച്ച്‌ (at(b-c))*d എന്ന്‌ എഴുതണം. ഇതിന്റെ ഉത്തരം 12
ആയിരിക്കും. മുന്‍ഗണനാക്രമം മാറ്റുതിനായി [], () ഇത്തരം ആവരണചിഹ്നങ്ങള്‍ ഉപ
യോഗിക്കാന്‍ സാധിക്കില്ല.

അറിവ്പെട്ടി

ഓപ്പറേറ്ററുകളുടെ മുന്‍ഗണനാക്രമം വിവിധ കപലറുകളില്‍ വ്ൃത്യസ്തമായിരിക്കും. Tubo,
C++ പോസ്റ്റ്ഫിക്സ്‌ രൂപത്തെക്കാള്‍ ഉയര്‍ന്ന്‌ മുന്‍ഗണ പ്രീഫിക്സ്‌ ഇന്‍ക്രിമെന്റ്‌ /ഡിക്ര
മെന്റിനെ നല്‍കുന്നു.

ഉദാഹരണമായി A യുടെ പ്രാരംഭ വില 5 ആണെങ്കില്‍ b= at+ +++ 2 എന്ന പ്രയോഗ
ത്തില്‍ 0 യുടെയും 2 യുടെയും വിലകള്‍ യഥാക്രമം 12,7 എന്നായിരിക്കും. ഇവ a = at]
(്രഫിക്‌സ്‌ പൂര്‍ണ്ണരൂപം), b=ata, 25-21 (പോസ്റ്റ്‌ ഫിക്‌സ്‌ പൂര്‍ണ്ണ രൂപം) എന്നിവക്ക്‌ തുല്യ
മായിരിക്കും.

6.7. പദപ്രയോഗങ്ങള്‍ (expressions)

ഒരു പദ്രപയോഗം ഓപ്പറേറ്ററുകളും ഓപ്പറാന്റുകളും ചേര്‍ന്നതാണ്‌. ഓപ്പറാന്റുകള്‍ സ്ഥി
രാംഗങ്ങളോ വേരിയബിളുകളോ ആകാം. എല്ലാ പദ്രപയോഗങ്ങളും പൂര്‍ത്തീകരിച്ചതി
നുശേഷമേ ആ പ്രയോഗത്തിന്റെ അന്തിമ ഫലം ലഭ്യമാകൂ. ഈ ഫലം പദപ്രയോഗം
തിരികെ നല്‍കിയ വില എന്ന്‌ അറിയപ്പെടുന്നു. ഉപയോഗിച്ചിരിക്കുന്ന ഓപ്പറേറ്ററുകളുടെ
അടിസ്ഥാനത്തില്‍ പദ്രപപയോഗങ്ങളെ പ്രധാനമായും GOO AGNES പദ്രപയോഗങ്ങള്‍,
റിലേഷണല്‍ പദ്രപ്രയോഗങ്ങള്‍, ലോജിക്കല്‍ പദ്രപയോഗങ്ങള്‍ എന്നിങ്ങനെ തരംതിരി
ച്ചിരിക്കുന്നു.

6.7.1 അരിത്മാറ്റിക്‌ പദ്രപയോഗങ്ങള്‍ (Arithmetic expressions)

അരിത്മാറ്റിക്‌ ഓപ്പറേറ്ററുകള്‍ മാത്രം ഉപയോഗിച്ചിട്ടുള്ള പദ്രപയോഗങ്ങളെ അരിത്മാ
JIE പദ്ര്പയോഗങ്ങള്‍ എന്ന്‌ വിളിക്കുന്നു. ഇവിടെ ഓപ്പറാന്റുകള്‍ സംഖ്യകളാണ്‌. അവ
വേരിയബിളുകളോ സ്ഥിരാംഗങ്ങളോ ആകാം. ഈ പദ്രപയോഗത്തില്‍ നിന്നും ലഭ്യമാ
കുന്ന വിലയും ഒരു സംഖ്യ ആയിരിക്കും. അരിത്മാറ്റിക്‌ പദ്രപയോഗങ്ങളെ വീണ്ടും പൂര്‍
ണ്ണ സംഖ്യാപദ്പപയോഗങ്ങള്‍, ദശാംശസംഖ്യാ (eal) പദപ്രയോഗങ്ങള്‍, സ്ഥിരാംഗ പദ്രപ്പ
യോഗങ്ങള്‍ എന്നിങ്ങനെ തരം തിരിച്ചിരിക്കുന്നു.

പൂര്‍ണ്ണസംഖ്യാ പദ്രപചയോഗങ്ങള്‍: ഒരു അരിത്മെറ്റിക്‌ പദ്രപയോഗത്തില്‍ പൂര്‍ണ്ണസം
ഖ്യകള്‍ മാത്രമേ ഉള്‍കൊള്ളുന്നുള്ളൂ എങ്കില്‍ അതിനെ പൂര്‍ണ്ണസംഖ്യാപദ്രപയോഗം എ
ന്ന്‌ വിളിക്കുന്നു. ഇവയുടെ ഫലവും ഒരു പൂര്‍ണ്ണസംഖ്യ ആയിരിക്കും.
ഉദാഹരണത്തിന്‌: X, Y എന്നിവ പൂര്‍ണ്ണസംഖ്യാ വേരിയബിളൂുകള്‍ ആണെങ്കില്‍ ചില
പൂര്‍ണ്ണ സംഖ്യാ പദ്രപയോഗവും അവയുടെ ഫലങ്ങളും പട്ടിക 6.13 ല്‍ കൊടുത്തിരി
ക്കുന്നു. എല്ലാ പദ്രപയോഗങ്ങളുടെയും ഫലം ഒരു പൂര്‍ണ്ണസംഖ്യ ആയിരിക്കും എന്നത്‌
ശ്രദ്ധിക്കുക.
OOS ഒന്നാം വര്‍ഷ കമ്പ്യൂട്ടര്‍ സയന്‍സ്‌ 6 ഡാറ്റയുടെ തരങ്ങളും ഓഷറ്റററുകളും

പട്ടിക 6.13 പുര്‍ണ്ണ MoO) പ്രമോഗങ്ങളും അവയുടെ ഫലങ്ങളും
ദശാംശസാംഖ്യാ പദപ്രയോഗങ്ങള്‍ (floating point/ real expression): ഒരു അരിത്മാ
AE പദ്രപയോഗത്തില്‍ എല്ലാ വിലകളും ദശാംശസഖ്യകള്‍ ആണെങ്കില്‍ അവയെ ദശാം
ശസഖ്യ അഥവാ ഭിന്ന സംഖ്യാപദ്രപയോഗം എന്ന്‌ വിളിക്കുന്നു. ഇതിന്റെ ഫലം തീര്‍ച്ച
യായും ഒരു ദശാംശസംഖ്യ ആയിരിക്കും. X,Y എന്നിവ ദശാംശസംഖ്യാ വേരിയബിള്‍
ആണെന്ന്‌ കരുതുക. ചില ദശാംശസംഖ്യാപദ്പ്രയോഗങ്ങളും അവയുടെ ഫലങ്ങളും പ
6.14ല്‍ കൊടുത്തിരിക്കുന്നു.

പട്ടിക 6.14: ശോംശദ്ധംല്യാപദ്പ്രമോഗങ്ങളും അവയുടെ ഫലങ്ങളും

മുകളില്‍ കൊടുത്തിരിക്കുന്ന എല്ലാ പദ്ര്പയോഗങ്ങളുടെയും ഉത്തരം ദശാംശസംഖ്യക
ളാണ്‌ എന്ന്‌ കാണാന്‍ കഴിയും.

ഒരു അരിത്മാറ്റിക്‌ പദ്രപയോഗത്തില്‍ ഉപയോഗിക്കുന്ന എല്ലാ ഓപ്പറാന്റുകളും സ്ഥിരാം
ഗങ്ങളാണെങ്കില്‍ അതിനെ സ്ഥിരാംഗപദ്രപ്പയോഗം (const. expression) എന്നു വിളിക്കുന്നു.
ഉദാ: 20+5/2.0. സ്ഥിരാംഗങ്ങളായ 15,3.14, ൭ എന്നിവയും സ്ഥിരാംഗപദ്രപയോഗങ്ങ
ളായി അറിയപ്പെടുന്നു.

6.7.2 റിലേഷണല്‍ പദ്രപ്പയോഗങ്ങള്‍ (relational expressions)

റിലേഷണല്‍ ഓപ്പറേറ്ററുകള്‍ ഉപയോഗിക്കുന്ന പദ്രപയോഗങ്ങളെ റിലേഷണല്‍ പദ്രപ്ര
യോഗങ്ങള്‍ എന്ന്‌ വിളിക്കുന്നു. ഇവ true(1) അല്ലെങ്കില്‍ [ലിടം(0) എന്ന ഫലം നല്‍കുന്നു.
ഇത്തരം പദ്രപയോഗങ്ങളില്‍ ഓപ്പറാന്ററുകളായി സംഖ്യകളാണ്‌ ഉപയോഗിക്കുക. ഇവ
യുടെ ചില ഉദാഹരണം പട്ടിക 6.15 ല്‍ കാണിച്ചിരിക്കുന്നു.

നിനി

5.0]2.0]1 (True) 1 (True)
130 (False) 0 (False)

പട്ടിക 6.15 റിലേഘണ്‌ പദപ്രയോഗങ്ങളും അവയുടെ ഫലങ്ങളും

അരിത്മാറ്റിക്‌ ഓപ്പറേറ്ററുകള്‍ക്ക്‌ റിലേഷണല്‍ ഓപ്പറേറ്ററേക്കാള്‍ മുന്‍ഗണയുണ്ടെന്ന്നമു
ക്കറിയാം. ഒരു റിലേഷണല്‍ ഓപ്പറേറ്ററിന്റെ ഇരുവശങ്ങളിലായി അരിത്മാറ്റിക്‌ പദ്രപയോ
ഗങ്ങള്‍ ഉപയോഗിക്കുമ്പോള്‍ ആദ്യം അരിത്മാറ്റിക്‌ ഓപ്പറേഷനുകള്‍ ചെയ്യുകയും അതിന്‌
ശേഷം ആ ഫലങ്ങള്‍ താരതമ്യം ചെയ്യുന്നു. പട്ടികയിലെ ചില പദ്രപയോഗങ്ങളില്‍
അരിത്മാറ്റിക്‌ ഓപ്പറേറ്ററും റിലേഷണല്‍ ഓപ്പറേറ്ററുകളും ഉള്‍പ്പെട്ടിരിക്കുന്നു. വിവിധ
തരം ഓപ്പറേറ്ററുകള്‍ ഉള്‍പ്പെട്ടിട്ടുണ്ടെങ്കിലും ഇവയുടെ ഫലം സ(1) അല്ലെങ്കില്‍ false
(0) ആയതിനാല്‍ അവയെ റിലേഷണല്‍ പദപ്രയോഗങ്ങള്‍ എന്നാണ്‌ വിളിക്കുന്നത്‌.

(5) ഒന്നാം വര്‍ഷ കമ്പ്യൂട്ടര്‍ സയന്‍സ്‌ 6 ഡാറ്റയുടെ തരങ്ങളും ഓഷറേറ്ററുകളും

6.7.3 ലോജിക്കല്‍ പ്രയോഗങ്ങള്‍ (logical expressions)

രണ്ടോ അതിലധികമോ റിലേഷണല്‍ പദ്ര്പയോഗങ്ങളെ ലോജിക്കല്‍ ഓപ്പറേറ്റര്‍ ഉപ
യോഗിച്ച്‌ ലോജിക്കല്‍ പദ്രപയോഗങ്ങള്‍ സംയോജിപ്പിക്കുന്നു. ഇവയുടെ ഫലം true(1)
അല്ലെങ്കില്‍ false (0) എന്നായിരിക്കും. ലോജിക്കല്‍ പദ്ര്പയോഗത്തില്‍ വേരിയബിളുകള്‍,
സ്ഥിരാംഗങ്ങള്‍ ലോജിക്കല്‍ ഓപ്പറേറ്ററുകള്‍, റിലേഷനല്‍ ഓപ്പറേറ്ററുകള്‍ എന്നിവ ഉള്‍
പ്പെടാവുന്നതാണ്‌. ചില ഉദാഹരണങ്ങള്‍ പട്ടിക 6.16 ല്‍ കാണിച്ചിരിക്കുന്നു.

5.0/2.0 0 (False) 1 (True) 0 (False) 1 (True)
20 | 13 1 (True) 0 (False) 0 (False) 1 (True)

പട്ടിക 6.16 ലോജിക്ക്‌ പഴ പ്രയോഗങ്ങളും അവയുടെ ഫലങ്ങളും

പട്ടിക 6.16 ല്‍ കാണുന്നതു പോലെ ചില പദ്പ്പയോഗങ്ങളില്‍ ലോജിക്കല്‍ ഓപ്പറേറ്ററു
കളെ കൂടാതെ അരിതമാറ്റിക്‌ ഓപ്പറേറ്ററുകളും റിലേഷണ്‍ ഓപ്പറേറ്ററുകളും ഉള്‍പ്പെട്ടിട്ടു
ണ്ടെങ്കിലും ഈ പ്രയോഗങ്ങളെ ലോജിക്കല്‍ പ്രയോഗങ്ങളായി കണക്കാക്കുന്നു. അവ
സാനം ചെയ്യുന്ന പ്രവര്‍ത്തനം ലോജിക്കല്‍ പ്രവര്‍ത്തനം ആയതിനാലും അതിന്റെ ഫലം
True അല്ലെങ്കില്‍ False ആയത്‌ കൊണ്ടുമാണ്‌ ഇത്‌.

സ്വയം പരിരോധിക്കാം.

1. 05 5,൮53 ആയാല്‍ താഴെ കൊടുത്തിരിക്കുന്ന പ്രവര്‍ത്തനങ്ങളുടെ
ഓട്ട്പുട്ട്‌ പ്രവചിക്കുക
a) x>= 10<<y>=4, b)x>=l<<y>=3, c)x>=lly>=4, d)x>=1 11൮
2. p=5, g=3, x=2 ആണെങ്കില്‍ ഓട്ട്പുട്ട്‌ പ്രവചിക്കുക
a) +4+P-qxr/2 b) pxq--+r c)p-q-rx2+p ടാതെ

6.8 ഇനം മാറ്റല്‍ (type conversion)

പൂര്‍ണ്ണസംഖ്യ പദ്രപയോഗം, ദശാംശസംഖ്യാ പദപ്രയോഗം എന്നിങ്ങനെ രണ്ട്തരം
അരിത്മെറ്റിക്‌ പദ്രപയോഗങ്ങള്‍ ഉണ്ടെന്ന്‌ നാം മുന്പ്‌ ചര്‍ച്ച ചെയ്തുവല്ലോ. ഇവ രണ്ടിലും
അരിത്മാറ്റിക്‌ ഓപ്പറേഷനില്‍ ഉള്‍പ്പെട്ടിരിക്കുന്ന ഓപ്പറാന്റുകള്‍ ഒരേ ഡാറ്റാ ഇനത്തിലു
ള്ളവയാണ്‌. എന്നാല്‍ വ്യത്യസ്ത ഇനം സംഖ്യകള്‍ ഉപയോഗിക്കേണ്ട സാഹചര്യങ്ങളും
ഉണ്ടാകാം. ഉദാഹരണമായി C++ ല്‍ പൂര്‍ണ്ണസംഖ്യാ പദ്രപയോഗം 5/2, എന്നത്‌ 2 എന്ന
ഫലം തരുമ്പോള്‍ ദശാംശസംഖ്യാ പദ്ര്പയോഗമായ 5.0/2.0 എന്നത്‌ 2.5 എന്ന ഫലം
തരുന്നു. പക്ഷെ 5/2.0, അല്ലെങ്കില്‍ 5.0/2 എന്നിവയുടെ ഉത്തരം എന്തായിരിക്കും? ഇനം
മാറ്റല്‍ രീതിയാണ്‌ ഈ സാഹചര്യത്തില്‍ ഉപയോഗിക്കേണ്ടി വരുക. ഒരു ഓപ്പറാന്റിന്റെ
ഡാറ്റാ ഇനം മറ്റൊന്നിലേക്ക്‌ മാറ്റുകയാണ്‌ ചെയ്യേണ്ടത്‌. ഇതിനെ ഇനം മാറ്റല്‍ എന്ന്‌ പറ
യാം. ഇത്‌ ആന്തരിക ഇനം മാറ്റല്‍, ബാഹ്യഇനം മാറ്റല്‍ എന്നിങ്ങനെ രണ്ടു രീതിയില്‍
ചെയ്യാം.

6.8.1 ആന്തരിക ഇനം മാറ്റല്‍ (implicit type conversion/ type promotion):

ആന്തരിക ഇനം മാറ്റല്‍ C++ കമ്പൈലർ ആന്തരികമായി ചെയ്യുന്നതാണ്‌. വൃത്യസ്ഥതരം
ഡാറ്റ ഉള്ള ഒരു പദ്രപയോഗത്തില്‍ C++ കുറഞ്ഞ വലിപ്പത്തിലുള്ള ഓപ്പറാന്റിനെ കൂടു
(5) ഒന്നാം വര്‍ഷ കമ്പ്യൂട്ടര്‍ സയന്‍സ്‌ 6 ഡാറ്റയുടെ തരങ്ങളും ഓവറ്റേറുകളും

തല്‍ വലുപ്പമുള്ളതിന്റെ ഡാറ്റാ ഇനമാക്കി മാറ്റുന്നു. അതായത്‌ എല്ലായ്പ്പോഴും ചെറിയ
തിനെ വലുതാക്കുക മാത്രമാണ്‌ ചെയ്യുന്നത്‌. ആയതിനാല്‍ ഇതിനെ ടൈപ്പ്‌ ര്രമോഷന്‍
എന്നും പറയുന്നു. ഡാറ്റ ഇനങ്ങള്‍ വലിപ്പത്തിന്റെ അവരോഹണ ക്രമത്തില്‍ താഴെ പറ
യുന്ന രീതിയിലായിരിക്കും.

long double, double, float, unsigned long, long int, unsigned int short in

ഫലത്തിന്റെ ഡാറ്റാ ഇനം വലിയ ഓപ്പറാന്റിന്റെ ഡാറ്റാ ഇനമായിരിക്കും. ഉദാഹരണ
മായി 5/2*34+2.5 എന്ന പ്രയോഗത്തിന്റെ ഫലം 8.5 ആണ്‌. ഇത്‌ എങ്ങിനെ ലഭിക്കുന്നു
എന്ന്‌ നോക്കാം.

ഘട്ടം 1: 5/2 ൭ 2 പൂര്‍ണ്ണസംഖ്യയുടെ ഹരണം

ഘട്ടം 2: 2*3 -൭ 6 പൂര്‍ണ്ണസംഖ്യയുടെ ഗുണനം

ഘട്ടം 3: 6+2.5-98.5 (ദശാംശസാഖ്യാ സങ്കലനം ഇവിടെ 6 നെ 6.0 ആക്കി മാറ്റുന്നു).

6.8.2: ബാഹ ൃഇനംമാറ്റല്‍ (explicit type conversion /type casting):

ആന്തരിക ഡാറ്റാ ഇനം മാറ്റലില്‍ നിന്നും വൃത്യസ്തമായി ചില സാഹചര്യങ്ങളില്‍ ചില
പ്രോഗ്രാമര്‍ തന്നെ ഫലത്തിന്റെ ഡാറ്റ ഇനം തീരുമാനിക്കേണ്ടതായി വരും. അങ്ങനെ വ
രുമ്പോള്‍ പ്രോഗ്രാമര്‍ തന്നെ ഡാറ്റ ഇനം ആവരണ ചിഹ്നത്തില്‍ ഓപ്പറാന്റിന്റെ ഇടതു
വശത്തായി നല്‍കണം. ഇത്‌ ഇനം മാറ്റാന്‍ ഉപകരിക്കുന്നു. ഈ രീതിയില്‍ പ്രോഗ്രാമര്‍
തന്നെ ആവശ്യമായ ഇനത്തിലേക്ക്‌ ഡാറ്റയെ ഇനം മാറ്റുന്നതിനെ ബാഹ്യഇനം മാറ്റല്‍
അഥവാ ടൈപ്പ്‌ കാസ്റ്റിംഗ്‌ എന്നു പറയുന്നു. സാധാരണയായി പദ്രപ്രയോഗത്തിലെ വേ
രിയബിളുകളുടെ ഇനം മാറ്റത്തിനാണ്‌ ഇത്‌ ഉപയോഗിക്കുന്നത്‌. കൂടുതല്‍ ഉദാഹരണ
ങ്ങള്‍ ഭാഗം 6.9.2 ല്‍ ചര്‍ച്ച ചെയ്യാം.

6.9. പ്രസ്താവനകള്‍ (Statements)

ഒരു ഭാഷയുടെ പഠനശ്രേണി എന്നത്‌ അക്ഷരമാല, പദങ്ങള്‍, ശൈലികള്‍, വാക്യങ്ങള്‍,
ഖണ്ഡികകള്‍ തുടങ്ങിയവയാണ്‌. അതുപോലെ ന്റെ പഠനത്തില്‍ അക്ഷരമാല
(character set), ടോക്കണുകള്‍ (tokens), പദ്ര്പയോഗങ്ങള്‍ എന്നിവ നമ്മള്‍ മനസ്സിലാക്കി
കഴിഞ്ഞു. പ്രസ്താവനകളുടെ സഹായത്തോടെ കമ്പ്യൂട്ടറുമായി യുക്തിപരമായും അര്‍ത്ഥ
വത്തായും സംവദിക്കാവുന്ന രീതിയില്‍ നാമിപ്പോള്‍ എത്തിയിട്ടുണ്ട്‌. ഒരു പ്രോ്രഗാമിംഗ്‌
ഭാഷയിലെ ഏറ്റവും ചെറിയ പ്രവര്‍ത്തന ഘടകമാണ്‌ പ്രസ്താവനകള്‍. ഒരു പ്രസ്താ
വന അവസാനിച്ചു എന്ന്‌ സൂചിപ്പിക്കുവാന്‍ C++; (Semi column) ഉപയോഗിക്കുന്നു. C++
ല്‍ വ്ൃത്യസ്ത ആവശ്യങ്ങള്‍ക്കായി പ്രഖ്യാപന പ്രസ്താവനകള്‍ (declaration), വില
നല്‍കുന്ന (assignment) പ്രസ്താവനകള്‍, ഇന്‍പുട്ട്‌ (input) പ്രസ്താവനകള്‍, നിയ്രന്രണ
പ്രസ്താവനകള്‍ (control), ഓട്ട്പൂട്ട്‌ (output) പ്രസ്താവനകള്‍ തുടങ്ങിയവ ഉപയോഗി
ക്കുന്നു. ഒരു ---പ്രോരഗോമിലെ ഓരോ പ്രസ്താവനക്കും അതിന്റേതായ ലക്ഷ്യങ്ങളുണ്ട്‌.
ഇവയില്‍ പ്രഖ്യാപന പ്രസ്താവനകള്‍ ഒഴികെയുള്ളവ ചില പ്രത്യേക പ്രവര്‍ത്തനങ്ങള്‍
കമ്പ്യൂട്ടര്‍ ഉപയോഗിച്ച്‌ ചെയ്യാനുള്ളവയാണ്‌. നിര്‍വഹണ പ്രസ്താവനകള്‍ (execulable
statements) കമ്പ്യൂട്ടറനുള്ള നിര്‍ദ്ദേശങ്ങളാണ്‌. നിയ്രത്രണപ്രസ്താവനകളുടെ പ്രവര്‍ത്തനം
അദ്ധ്യായം 7ല്‍ ചര്‍ച്ച ചെയ്യാം.

മറ്റു ചില പ്രസ്താവനകളെ നമുക്കിവിടെ ചര്‍ച്ചചെയ്യാം.
(5) ഒന്നാം വര്‍ഷ കമ്പ്യൂട്ടര്‍ സയന്‍സ്‌ 6 ഡാറ്റയുടെ തരങ്ങളും ഓഷറ്റേറുകളും

6.9.1. പ്രഖ്യാപന പ്രസ്താവനകള്‍ (Declaration statement)

എല്ലാ ഉപയോക്തൃ നിര്‍വചിത വാക്കുകളും പ്രോഗ്രാമില്‍ അവ ഉപയോഗിക്കുന്നതിനു
മുന്‍പുതന്നെ നിര്‍വചിക്കേണ്ടതാണ്‌. ഒരു വേരിയബിള്‍ എന്നത്‌ ഉപയോക്താവ്‌ നിര്‍വ
ചിക്കുന്നതാണൊും മെമ്മറിയിലെ ഒരിടത്തിനെ സൂചിപ്പിക്കുന്നതാണെന്നും നാം കണ്ടു.
ഉപയോഗിക്കുന്നതിന്‌ മുന്‍പ്‌ പ്രോ്രഗാമില്‍ ഇവ പ്രഖ്യാപിക്കപ്പെടേണ്ടതുണ്ട്‌. നാം ഒരു
വേരിയബിളിനെ പ്രഖ്യാപിക്കുമ്പോള്‍ അതില്‍ സൂക്ഷിച്ചിരിക്കുന്ന ഡാറ്റയുടെ ഇനം ഏ
താണെന്ന്‌ കംപൈലറിനെ അറിയിക്കുകയാണ്‌ ചെയ്യുന്നത്‌. വേരിയബിള്‍ പ്രഖ്യാപിക്കു
ന്നതിന്റെ വാകൃഘടന:

Data Type<variable>, [<variable 2>, < variable 3>...];

Data Type എന്നത്‌ ലെ ഏതെങ്കിലും അംഗീകൃതമായ ഡാറ്റ ഇനം ആകാം. ഒന്നില
ധികം വേരിയബിളുകള്‍ പ്രയോഗിക്കുമ്പോള്‍ അവയെ വേര്‍തിരിക്കാന്‍ കോമ (,) ഉപ
യോഗിക്കണം. ഒരു പ്രഖ്യാപന പ്രസ്താവന അര്‍ദ്ധവിരാമം (;) ത്തോട്‌ കൂടി അവസാനി
ക്കുന്നു. സാധാരണയായി വേരിയബിളുകള്‍ പ്രഖ്യാപിക്കുന്നത്‌ അവ ഉപയോഗിക്കുന്നതി
ന്‌ തൊട്ട്‌ മുന്‍പോ അല്ലെങ്കില്‍ പ്രോഗ്രാമിന്റെ തുടക്കത്തിലോ ആയിരിക്കും. വാകൃഘട
MONG | | ല്‍ നല്‍കിയിരിക്കുന്നത്‌ ആവശ്യമുണ്ടെങ്കില്‍ AYMo ഉപയോഗിച്ചാല്‍ മതി
എന്ന അര്‍ത്ഥത്തിലാണ്‌. താഴെ കൊടുത്തിരിക്കുന്ന പ്രസ്താവനകള്‍ വേരിയബിള്‍ പ്ര
ഖ്യാപനങ്ങള്‍ക്ക്‌ ഉദാഹരണങ്ങളാണ്‌:

int roll number;

double wgpa, avg-score;
ഒന്നാമത്തെ പ്രസ്താവനയില്‍ വേരിയബിള്‍ roll number ഒരു int ഡാറ്റ ഇനമായതിനാല്‍
ഇതിനായി 4 ബൈറ്റ്‌ മെമ്മറി മാറ്റിവക്കപ്പെടുന്നു. (0൦ അനുസരിച്ച്‌) ഇതില്‍ 2147483648
മുതല്‍ 2147483647 വരെയുള്ള ഏതെങ്കിലും പൂര്‍ണ്ണസംഖ്യ സൂക്ഷിക്കാവുന്നതാണ്‌.

രണ്ടാമത്തെ പ്രസ്താവന wegpa, avg-score എന്നീ double ഡാറ്റ ഇനത്തിലുള്ള വേരിയ
ബിളുകള്‍ നിര്‍വചിക്കുന്നു. ഇവ ഓരോന്നിനും 8 ബൈറ്റ്‌ മെമ്മറി വീതം നീക്കി വയ്ക്കുന്നു.
പ്രോ്രഗാം കംപൈല്‍ ചെയ്യുന്ന സമയത്ത്‌ ഇവക്കുള്ള മെമ്മറി നീക്കി വയ്ക്കുന്നു.
വേരിയബിളുകള്‍ക്ക്‌ പ്രാരംഭവില നല്‍കല്‍ (Veriable initialisation)

വേരിയബിളുമായി ബന്ധപ്പെട്ട L മൂല്യം (വിലാസം), R മൂല്യം (ഉള്ളടക്കം) എന്നിങ്ങനെ
രണ്ട്‌ വിലകള്‍ ഉണ്ടെന്ന്‌ ഭാഗം 6.ടല്‍ നാം കണ്ടു. ഒരു വേരിയബിള്‍ പ്രഖ്യാപിക്കുമ്പോള്‍
അതിനായി വിലാസത്തോടുകൂടിയ ഒരു മെമ്മറി ഭാഗം നീക്കി വെക്കുന്നു. എന്തായി
രിക്കും അതിന്റെ ഉള്ളടക്കം? അത്‌ പൂജ്യം, ശൂന്യം, സ്ഥലം/ വിടവ്‌ എന്നിവയൊന്നും ആ
യിരിക്കില്ല! വേരിയബിളുകള്‍ int ഡാറ്റയായി പ്രഖ്യാപിക്കുമ്പോള്‍ വേരിയബിളുകളുടെ
ഉള്ളടക്കം അഥവാ R വാല്യു എന്നത്‌ അനുവദനീയമായ പരിധിക്ക്‌ അകത്തുള്ള ഒരു
പൂര്‍ണ്ണസംഖ്യ ആയിരിക്കും. എന്നാല്‍ ഈ സാഖ്യ പ്രവചിക്കാന്‍ സാധ്യമല്ല, എല്ലായി
പ്പോഴും ഒരേ വില ആയിരിക്കണമെന്നുമില്ല. അതുകൊണ്ട്‌ ഇതിനെ ഗാര്‍ബേജ്‌ വില
(garbage value) എന്ന്‌ വിളിക്കുന്നു. നാം വേരിയബിളിന്‌ ഒരു വില നല്‍കുമ്പോള്‍ അതി
ന്റെ പഴയ വിലയെ മാറ്റി പുതിയ വില ആക്കുന്നു. വേരിയബിളിന്‌ കംപൈലേഷന്‍ സ
മയത്തോ പ്രോഗ്രാമിന്റെ പ്രവര്‍ത്തന (execution) സമയത്തോ വില നല്‍കാവുന്നതാണ്‌.
ഒന്നാം വര്‍ഷ കമ്പ്യൂട്ടര്‍ സയന്‍സ്‌ 6 ഡാറ്റയുടെ തരങ്ങളും ഓഷറ്റേറുകളും

പ്രഖ്യാപന സമയത്തുതന്നെ വേരിയബിളിന്‌ വില നല്‍കുന്നതിന്‌ പ്രാരംഭ വിലനല്‍കല്‍
(variable initialisation) എന്നു പറയുന്നു. ഈ വില കപൈല്‍ സമയത്ത്‌ മെമ്മറിയില്‍ സംഭ
രിക്കപ്പെടുന്നു. ഇതിനായി അസ്സറെസ്മെന്റ്‌ ഓപ്പറേറ്റര്‍ ഉപയോഗിക്കുന്നു. താഴെ കൊടുത്തി
രിക്കുന്നതു പോലെ രണ്ടു രീതിയില്‍ ഇത്‌ ചെയ്യാവുന്നതാണ്‌.
Data type variable = value
അല്ലെങ്കില്‍
Data type variable (value)

XYZ എന്നൊരു വേരിയബിള്‍ പ്രഖ്യാപിച്ച്‌ അതിന്‌ 120 എന്ന വില നല്‍കുന്നതിനായി
താഴെ പറയുന്ന രണ്ട്‌ രീതികള്‍ സ്വീകാര്യമാണ്‌.

int xyz=120; 120

int xyz (120); ഈ രണ്ടു പ്രസ്താവനകളും ൮2 എന്ന ഇന്റിജര്‍ വേരി xyz
യബിള്‍ പ്രഖ്യാപിച്ച്‌ 120 എന്ന വില ചിത്രം 6.3 ല്‍ കാണിച്ചിരി soo 6.3: ബേരിയബിളിനു
ക്കുന്നതുപോലെ സൂക്ഷിക്കുകയും ചെയ്യുന്നു. പ്രാരംഭവില നത്കത്‌

കൂടുതല്‍ ഉദാഹരണങ്ങള്‍:
float val=0.12, b=5.234;
char k='A';

പ്രോഗ്രാമിന്റെ പ്രവര്‍ത്തനസമയത്തും വേരിയബിളുകള്‍ക്ക്‌ പ്രാരംഭവില നല്‍കാവു
ന്നതാണ്‌. ഇത്‌ ഡൈനാമിക്‌ പ്രാരംഭവില നല്‍കല്‍ എന്ന്‌ അറിയപ്പെടുന്നു (dynamic
initialisation). താഴെ കൊടുത്തിരിക്കുന്ന പ്രസ്താവനകളിലുള്ളതു പോലെ ഒരു പ്രയോ
ഗത്തെ വേരിയബിളിലേക്ക്‌ അസൈന്‍ ചെയ്യാന്‍ കഴിയും.

float product = x*y;
float interest = p*n*r/100.0;

ഒന്നാമത്തെ പ്രസ്താവനയില്‍ xX, Y എന്നിവ പ്രവര്‍ത്തന സമയത്ത്‌ ഗുണിച്ചു കിട്ടുന്ന
ഫലമാണ്‌ product എന്ന വേരിയബിളിന്റെ പ്രാരംഭ വില. രണ്ടാമത്തേതില്‍ p*n*r/100.0;
എന്നതിന്റെ ഫലമാണ്‌, interest എന്ന വേരിയബിളില്‍ സംഭരിക്കുന്നത്‌.

ഡൈനാമിക്‌ പ്രാരംഭ വിലനല്‍കുമ്പോള്‍ അസൈന്‍മെന്റ്‌ ഓപ്പറേറ്ററിന്‌ വലതുവശത്തു
ള്ള എല്ലാ വേരിയബിളുകളിലും സാധുവായ വില ഉണ്ടായിരിക്കണമെന്നത്‌ ശ്രദ്ധിക്കുക.
അല്ലെങ്കില്‍ അപ്രതീക്ഷിത ഫലങ്ങള്‍ അത്‌ സൃഷ്ടിക്കും.
Const- ആക്സസ്‌ മോഡിഫയര്‍

സാഖ്യ സ്ഥിരാംഗങ്ങള്‍ ഉപയോഗിക്കുതിനേക്കാള്‍ നല്ല രീതി അവയുടെ പ്രതീകങ്ങള്‍
ഉപയോഗിക്കുന്നതാണ്‌. ഉദാഹരണമായി 3.14 അല്ലെങ്കില്‍ 22.0/7.0 എന്ന്‌ ഉപയോഗിക്കു
ന്നതിന്‌ പകരം Pi എന്ന പ്രതീകം നമുക്ക്‌ ഉപയോഗിക്കാം. ഇതിനായി const എന്ന കീ
വേഡ്‌ ആണ്‌ ഉപയോഗിക്കേണ്ടത്‌. Const എന്ന സൂചികപദം (keyword) ഉപയോഗിച്ച്‌ ഒരു
പ്രതീകാത്മക സ്ഥിരാംഗം നിര്‍മിക്കുമ്പോള്‍ ആ വേരിയബിളിന്റെ വില പ്രവര്‍ത്തന സ
മയത്ത്‌ മാറ്റം വരുത്താന്‍ കഴിയാത്തതായിതീരുന്നു. താഴെ കൊടുത്തരിക്കുന്ന പ്രസ്താ
വന പരിഗണിക്കുക.
ഒന്നാം വര്‍ഷ കമ്പ്യൂട്ടര്‍ സയന്‍സ്‌ 6 ഡാറ്റയുടെ തരങ്ങളും ഓഷറേറ്ററുകളും

float Pi=3.14;

Pi എന്ന ദശാംശസംഖ്യാ വരിയബിളിന്‌ 3.14 എന്ന പ്രാരംഭവില നല്‍കിയിരിക്കുന്നു. Pi
എന്നതിന്റെ മൂല്യം പ്രോഗ്രാമിന്റെ പ്രവര്‍ത്തന സമയത്ത്‌ മാറ്റം വരുത്താവുന്നതാണ്‌.
ഈ പ്രഖ്യാപനത്തെ താഴെപറയുന്ന രീതിയില്‍ നാം പരിഷ്കരിച്ചാല്‍ Pi യുടെ വില
പ്രോഗ്രാമിന്റെ പ്രവര്‍ത്തനസമയം മുഴുവന്‍ സ്ഥിരമായിരിക്കാം.

const float 1൬253. 14%;
ഇതിന്റെ വില പിന്നീട്‌ മാറ്റം വരുത്താന്‍ സാധ്യമല്ല. വേരിയബിളില്‍ മൂല്യങ്ങള്‍ രേഖപ്പ
ടുത്താനും തിരിച്ചെടുക്കാനുള്ള അവകാശം (read/write accessibility) പരിഷ്കരിച്ച്‌ തിരി
ച്ചെടുക്കുക എന്നത്‌ മാത്രമാക്കി മാറ്റുന്നു. അതിനാല്‍ const എന്നത്‌ ഒരു ആക്സസ്‌ മോ
ഡിഫയര്‍ ആയി പ്രവര്‍ത്തിക്കുന്നു.

സോഫ്റ്റ്വെയര്‍ വികസിരിക്കുമ്പോള്‍ വലിയ പ്രോഗ്രാമുകള്‍ വികസിഷിക്കുന്നത്‌

സംയുക്ത സംരംഭങ്ങളായിട്ടാണ്‌. ഒരേ പ്രോഗ്രാമിന്റെ പല ദാനങ്ങളില്‍ ധാരാളം ആളു

കള്‍ ജോലി ചെയ്യുന്നുങാകും അവര്‍ ഒരേ വേരിയബിള്‍ പങ്കുവെക്കുന്നുങാകാം.

ഉത്തരം സന്ദര്‍ഭങ്ങളില്‍ ഒരാ വേരിയബിളിന്റെ ഉള്ളടക്കത്തില്‍ വരുത്തുന്ന മാറ്റം മറ്റൊ
രാർ തയ്യാറാക്കുന്ന കോഡിനെ ദോഷകരമായി ബാധിച്ചേക്കാം. ഇവിടെ മറ്റുള്ളവരുടെ പ്രവര്‍ത്തി വേരി
യബിളിന്റെ ഉള്ളടക്കത്തെ ബാധിക്കാതെ നോക്കണം. const ഉപയോഗിച്ച്‌ കൊണ്ട്‌ ഉത്‌ ചെയ്യാന്‍ കഴി
യും.

6.9.2 അസൈന്‍മെന്റ്‌ പ്രസ്താവനകള്‍ (Assignment statements)

ഒരു വേരിയബിളിലേക്ക്‌ വില നല്‍കുന്നതിനാണ്‌ അസൈന്‍മെന്റ്‌ ഓപ്പരേറ്റര്‍ (=) ഉപ
യോഗിക്കുന്നത്‌. ഇങ്ങനെ ഉപയോഗിക്കുന്നതിനുള്ള പ്രസ്താവനകളെ അസൈന്‍മെന്റ്‌
പ്രസ്താവന എന്ന്‌ വിളിക്കുന്നു.
താഴെപറയുന്ന ഏതെങ്കിലും രീതികളില്‍ അവ എഴുതാം.

variable = constant;

variable 1 = variable2;

variable = expression;

variable = function();

ഒന്നാമത്തേതില്‍ ഒരു സ്ഥിരാംഗം വേരിയബിളില്‍ സംഭരിക്കുന്നു. രണ്ടാമത്തേതില്‍ വേ
രിയബിളിന്റെ വില മറ്റൊരു വേരിയബിളില്‍ സംഭരിക്കുന്നു. മൂന്നാമത്തേതില്‍ പദപ്രയോ
ഗത്തിന്റെ ഫലം വേരിയബിളില്‍ സംഭരിക്കുന്നു. അതുപോലെ നാലാമത്തേതില്‍ anes
ഷന്‍ തിരിച്ചുനല്‍കുന്ന വിലയാണ്‌ വേരിയബിളിലേക്ക്‌ സംഭരിക്കുന്നത്‌. ഫങ്ഷന്‍ എന്ന
ആശയത്തെക്കുറിച്ച്‌ അദ്ധ്യായം 10ല്‍ ചര്‍ച്ച ചെയ്യാം.

അസൈന്‍മെന്റ്‌ പ്രസ്താവനകള്‍ക്കുള്ള ചില ഉദാഹരണങ്ങള്‍ താഴെ കൊടുത്തിരിക്കുന്നു.

൧൭5 15;

05 5.8;

c=atb;

d= (a+b) & (c+d)
r= sqrt (25);
ഒന്നാം വര്‍ഷ കമ്പ്യൂട്ടര്‍ സയന്‍സ്‌ 6 ഡാറ്റയുടെ തരങ്ങളും ഓഷറ്റേറുകളും

അവസാനം നല്‍കിയിരിക്കുന്ന ഉദാഹരണത്തില്‍ sqrt ( ) എന്നത്‌ ഒരു ഫങ്ഷനാണ്‌. 2
എന്ന വേരിയബിളില്‍ 25 ന്റെ വര്‍ഗമൂലമായ 5 ആണ്‌ സംഭരിക്കപ്പെടുക.
അസൈന്‍മെന്റ്‌ പ്രസ്താവനകളില്‍ ഇടതുവശത്ത്‌ ഒരു വേരിയബിള്‍ തന്നെ ആയിരി
ക്കണം. പ്രോഠ്രഗാം പ്രവര്‍ത്തിക്കുമ്പോള്‍ ആദ്യം വലതുവശം പ്രവര്‍ത്തിച്ചശേഷം കി
ട്ടുന്ന ഫലം ഇടതുവശത്തെ വേരിയബിളില്‍ (115) സംഭരിക്കുന്നു.
താഴെകാണിച്ചിരിക്കുന്നതുപോലെ ഒന്നില്‍ കൂടുതല്‍ അസൈന്‍മെന്റുകള്‍ കൂട്ടിച്ചേര്‍ത്ത്‌
ഒരേ സമയം ചെയ്യാവുന്നതാണ്‌.

ഉദാഹരണത്തിന്‌ ടയ 52-13;

ഇവിടെ 13 എന്ന വില 2. എന്നി ക്രമത്തില്‍ മുന്ന്‌ വേരിയബിളുകള്‍ക്കും നല്‍കുന്നു.
അസൈന്‍മെന്റ്‌ പ്രസ്താവനയ്ക്കുമുമ്പ്‌ വേരിയബിളുകള്‍ പ്രഖ്യാപിച്ചിരിക്കണം. ഒരു
വേരിയബിളിന്‌ നാം വില നല്‍കുകയാണെങ്കില്‍ അതിലുള്ള പഴയ വില മാറ്റി പുതിയ
വില നല്‍കുന്നു.

ഇനം അനുയോജ്യപ്പെടുത്തല്‍

ഒരു വില നല്‍കല്‍ പ്രസ്താവന നടപ്പിലാക്കുമ്പോള്‍ RHS പ്രയോഗത്തിന്റെ ഡാറ്റ ഇനം
LHS വേരിയബിളില്‍ നിന്നും വ്ൃത്യസ്തമാകാം, അതിന്‌ രണ്ട്‌ സാധ്യതകളുണ്ട്‌. LHS-
ലുള്ള വേരിയബിളിന്റെ ഡാറ്റ ഇനത്തിന്റെ വലിപ്പം 1ധ1ട ലുള്ള വേരിയബിള്‍ അല്ലെങ്കില്‍
പദ്രപയോഗത്തിലേതിനേക്കാളും കൂടുതലാകാം. ഈ സാഹചര്യത്തില്‍, RHS ലെ
മൂല്യത്തിന്റെ ഡാറ്റ ഇനം 1115ലെ വേരിയബിളിലേക്ക്‌ ഉയര്‍ത്തപ്പെടുന്നതാണ്‌ (ടൈപ്പ്‌
പ്രൊമോഷന്‍). താഴെയുള്ള കോഡ്‌ ശകലം പരിഗണിക്കുക:

int 255, b=2;

float p, q;

p=b;

q=a/p;
ഇവിടെ b യുടെ ഡാറ്റ ഇനം ടൈപ്പ്‌ പ്രൊമോഷനിലൂടെ float ആക്കി മാറ്റുകയും 2.0
എന്നത്‌ P യില്‍ സൂക്ഷിക്കുകയും ചെയ്യുന്നു. g=a/p എന്ന പ്രസ്താവനയില്‍ a യുടെ

ഡാറ്റാഇനം ടൈപ്പ്‌ പ്രൊമോഷന്‍ ചെയ്തുകഴിയുമ്പോള്‍ ഉത്തരം 2.5 എന്ന്‌ ലഭിക്കുകയും
9 യില്‍ സൂക്ഷിയ്ക്കപ്പെടുകയും ചെയ്യും.

LHS ന്റെ ഡാറ്റാഇനത്തിന്റെ വലിപ്പം 1115 ന്റേതിനേക്കാള്‍ കുറവായിരിക്കാം എന്നതാണ്‌
രണ്ടാമത്തെ സാധ്യത. 1115 ന്റെ വില (truncate) ചുരുക്കി LHS നു അനുയയോജ്യമാക്കുന്നു.
താഴെയുള്ള കോഡ്‌ ഇത്‌ വിശദീകരിക്കുന്നു.

float a=2.6;
int p, q;
p=a;
q=a*4;

ഇവിടെ p യുടെ വില 2 ഉം റു എന്നത്‌ 10 ആകുന്നു. a*4 എന്ന പദപ്രയോഗത്തിന്റെ വില
കാണുമ്പോള്‍ 10.4 എന്ന്‌ ലഭിക്കുന്നു. എന്നാല്‍ q int ഇനത്തില്‍പ്പെട്ടതിനാല്‍ 10 മാത്രമേ
അതില്‍ സൂക്ഷിക്കൂ. ഓപ്പറേറ്ററുകളുടെ ഡാറ്റ ഇനങ്ങളില്‍ ചേർച്ചയില്ലാതെ വരുമ്പോള്‍
ഒന്നാം വര്‍ഷ കമ്പ്യൂട്ടര്‍ സയന്‍സ്‌ 6 ഡാറ്റയുടെ തരങ്ങളും ഓകഷറ്റേറുകളും

ആഗ്രഹിക്കുന്ന ഫലം ലഭിക്കുന്നതിനായി പ്രോഗ്രാമര്‍ക്ക്‌ ബാഹ്യഇനം മാറ്റല്‍ രീതി പ്രയോ
ഗിക്കാവുനനതാണ്‌.

താഴെക്കൊടുത്തിരിക്കുന്ന പ്രോഗ്രാം ശകലം ശ്രദ്ധിക്കുക.

int p=5, q=2;

float x, y;

x= p/q;

y= (xtp)/q;
മുകളിലെ കോഡ്‌ ശകലം പ്രവര്‍ത്തിച്ചു കഴിയുമ്പോള്‍ ന്റെ വില 2.0 ,൮/ യുടെ വില 3.5
ആയിരിക്കും. 2/9 എന്ന പദപ്രയോഗം ഒരു പൂര്‍ണ്ണസംഖ്യാ പദ്രപയോഗം ആയതിനാല്‍
അതിന്റെ ഫലമായി 2 ലഭിക്കുകയും, ഫ്‌ളോട്ടിംഗ്‌ പോയിന്റ്‌ വിലയായി x ല്‍ സംഭരിക്ക
പ്പെടുകയും ചെയ്യുന്നു. X+P ബ്രാക്കറ്റിനകത്ത്‌ ആയതിനാല്‍ മുന്‍ഗണന ലഭിക്കുന്നു. ന്റെ
ഇനം float ആയതിനാല്‍ p ടൈപ്പ്‌ പ്രമോഷന്‍ ചെയ്യുകയും ഫലം 7.0 എന്ന്‌ ലഭിക്കുകയും
ചെയ്യും. പിന്നീട്‌ 7.0 ഹരണ്ക്രിയയുടെ ഒന്നാമത്തെ ഓപ്പെറന്റ്‌ ആക്കി ഹരണ്ര്രിയ
നടത്തുന്നു 9 നെ float ആക്കി മാറ്റി ഫലം 3.5 എന്ന്‌ ലഭിക്കുകയും ചെയ്യുന്നു. നമുക്ക്‌
2/9 ന്റെ ഫലം ദശാശസംഖ്യയായി x ല്‍ സംഭരിക്കുന്നതിന്‌ ടൈപ്പ്‌ കാസ്റ്റിങ്‌ ഉപയോഗിച്ച്‌
താഴെപ്പറയുന്ന രീതിയില്‍ പ്രസ്താവന മാറ്റി എഴുതാവുന്നതാണ്‌.

x=(float)p/q; or x=p/(float)q;

6.9.3 ഇന്‍പുട്ട്‌ പ്രസ്താവനകള്‍ (Input statement)
പ്രോ്രഗാമിന്റെ പ്രവര്‍ത്തനസമയത്ത്‌ ഉപയോക്താവിന്‌ ഡാറ്റ മെമ്മറിയില്‍ സംഭരിക്കു
ന്നതിന്‌ ഉപയോഗിക്കുന്ന പ്രസ്താവനകള്‍ ഇന്‍പുട്ട്‌ പ്രസ്താവനകള്‍ എന്നറിയപ്പെടുന്നു.
ഗെറ്റ്‌ (ao, എക്സ്ര്രാക്ഷന്‍ എന്നീ പേരുകളിലറിയപ്പെടുന്ന >> ഓപ്പറേറ്ററാണ്‌ ഇന്‍പുട്ട്‌
ഓപ്പറേറ്റര്‍ എന്നും നാം കണ്ടതാണ്‌. ഡാറ്റ സൂക്ഷിക്കേണ്ട ലെ സ്ഥാനവും ഇന്‍പുട്ട്‌
നല്‍കുന്ന ഉപകരണവുമാണ്‌ ഇന്‍പുട്ട്‌ ഓപ്പറേറ്ററുടെ രണ്ട്‌ ഓപെറന്റുകള്‍. ഒരു അംഗീകൃത
ഇന്‍പുട്ട്‌ ഉപകരണമായ കീബോര്‍ഡില്‍ നിന്ന്‌ വരുന്ന തുടര്‍ച്ചയായ ഡാറ്റാ പ്രവാഹത്തെ
വേരിയബിളുകള്‍ സൂചിപ്പിക്കുന്ന മെമ്മറി സ്ഥാനങ്ങളില്‍ സംഭരിക്കപ്പെടുന്നു.. C++ ഒരു
ഒബ്ജക്റ്റ്‌ ഓറിയന്റഡ്‌ ഭാഷയായതിനാല്‍ കീബോര്‍ഡ്‌ ഒരു അംഗീകൃത ഇന്‍പുട്ട്‌ സ്ര്രീം
ഉപകരണമായാണ്‌ കണക്കാക്കപ്പെടുന്നത്‌. സി ഇന്‍ (Cin) എന്ന പേരിലുള്ള ഒരു ഒബ്ജക്റ്റ്‌
ആയി തിരിച്ചറിയപ്പെടുകയും ചെയ്യുന്നു. ഒരു ഇന്‍പുട്ട്‌ പ്രസ്താവനയുടെ ലളിതമായ
രൂപം താഴെ കൊടുത്തിരിക്കുന്നു.

streamobject >> variable;

കീ ബോര്‍ഡ്‌ ഒരു ഇന്‍പുട്ട്‌ ഉപകരണമായി നാം ഉപയോഗിക്കുന്നതിനാല്‍ മുകളില്‍
പറഞ്ഞ വാകൃഘടന
യില്‍ stream object നു
പകരം CIN എന്നു എഴ എക്സ്ട്രാക്ഷന്‍

തുന്നു. >> എന്ന ഓപ്പ ഓഷറ്റേര്‍
റേറ്ററിനു നിര്‍ബന്ധമാ —(>)\— eee
യും ഒരു വേരിയബിള്‍ 2000

തന്നെയാകണം ഓപ്പറന്റ

ആയി ഉപയോഗിക്കേ ചിത്രം 6.4 C++ ലെഇരപുട്ട്‌ (G0

ഒന്നാം വര്‍ഷ കമ്പ്യൂട്ടര്‍ സയന്‍സ്‌ 6 ഡാറ്റയുടെ തരങ്ങളും ഓഷറ്റേറുകളും

ണ്ടത്‌. ഉദാഹരണത്തിന്ന്‌ താഴെ പറയുന്ന പ്രസ്ഥാവന കീബോര്‍ഡില്‍ നിന്ന്‌ ഡാറ്റാ
സ്വീകരിക്കുകയും വപ്ധ൩ എന്ന വേരിയബിളില്‍ സൂക്ഷിക്കുകയും ചെയുന്നു.

cin>>num;
ഡാറ്റ കീ ബോര്‍ഡില്‍ നിന്നും സ്വീകരിച്ച്‌ എങ്ങനെ വേരിയബിളില്‍ സംഭരിക്കുന്നു എന്ന്‌
ചിത്രം 6.4. ല്‍ കാണിച്ചിരിക്കുന്നു.

6.9.4 ഓട്ട്പുട്ട്‌ രരസ്താവനകള്‍ (Output statements)

ഏതൊരു ഓട്ട്പുട്ട്‌ ഉപകരണത്തിലൂടെയും ഉപയോക്താക്കള്‍ക്ക്‌ ഫലം ലഭ്യമാക്കുന്നതാ
ണ്‌ ഒട്ട്പൂട്ട്‌ പ്രസ്താവന. പൂട്ട്‌ ടു അല്ലെങ്കില്‍ ഇന്‍സേര്‍ഷന്‍ എന്നി പേരുകളില്‍ അറിയ
പ്പെടുന്ന ഓപ്പറേറ്ററാണ്‌ ഈ പ്രവര്‍ത്തനത്തിന്‌ ഉപയോഗിക്കുന്നത്‌. ഇവിടെ ഓട്ട്പുട്ട്‌
ചെയ്യേണ്ട ഡാറ്റയും ഓട്ട്പുട്ട്‌ ഉപകരണവുമാണ്‌ രണ്ട്‌ ഓപെറന്റുകള്‍. ഓട്ട്പൂട്ട്‌ ര്രസ്താ
വനയുടെ വാകൃഘടന ഇതാണ്‌.

streamobject << data;

stream object ഏതെങ്കിലും ഓട്ട്പുട്ട്‌ ഉപകരണമാകാം. Data ഒരു സ്ഥിരാംഗമോ ഒരു
വേരിയബിളോ അല്ലെങ്കില്‍ ഒരു പദ്പ്പയോഗമോ ആകാം. മോണിറ്റര്‍ ആണ്‌ സാധാരണ
ഉപയോഗിക്കുന്ന ഓട്ട്പുട്ട ഉപകരണം. C++ ല്‍ cout (സി ഓട്ട്‌ എന്ന്‌ ഉച്ചരിക്കുന്നു)
എന്നതാണ്‌ മോണിറ്ററിനെ സൂചിപ്പിക്കുന്ന ഒബ്ജക്റ്റ്ന്റെ പേര. മോണിറ്റര്‍ ഓട്ട്പുട്ട്‌ ഉപ
കരണമായി ഉപയോഗിക്കുന്ന ചില ഓട്ട്പുട്ട്‌ രരസ്താവനകള്‍ക്കുള്ള ഉദാഹരണങ്ങളാണ്‌
താഴെ പറയുന്നവ.

cout << num;

cout << "hello friends";

cout << num+12;

ഒന്നാമത്ത പ്രസ്താവന num 0000 ->-———
ന്റെ വില മോണിറ്ററില്‍ പ്രദര്‍ശി LJ ഉന്‍സേര്‍ഷന്‍” |——_|
. « |
പ്പിക്കുന്നു. രണ്ടാമത്തേത്‌ hello ഒബ്ജക്ട്‌ ഓഷറ്റേര്‍ [7]

friends എന്ന സ്ട്രിംഗ്‌ പ്രദര്‍ശി [cout |
(ഴി
പ്പിക്കുന്നു. അവസാനത്തേ ഇ ഞ്ഞ
ആഞ്ഞ

തില്‍ മ്ഥന നോടുകൂടി 12 കൂട്ടി

കിട്ടുന്ന ഫലം പ്രദര്‍ശിപ്പിക്കു ചിതം 6.5: C++ ലെ 8950195 (ക്ഥം

ന്നു. (num @ സംഖ്യയാണെന്ന്‌

കരുതുക). മെമ്മറി സ്ഥാനം num ല്‍ നിന്ന്‌ ഡാറ്റ എങ്ങനെയാണ്‌ stream object (മോണി
റ്റര്‍)ല്‍ ചേര്‍ത്തിരിക്കുന്നത്‌ എന്ന്‌ ചിത്രം 6.5. ല്‍ കാണിച്ചിരിക്കുന്നു.

ടോക്കണുകളായ Cin ഉം cout ഉം കിവേഡുകളല്ല. C++ ദാഷയുടെ ഭാഗമല്ലാത്ത മുന്‍

നിര്‍വചിത വാക്കുകളാണിവ. ഉപയോക്താവിന്‌ ഉവയെ പുനര്‍ വ്യാഖ്യാനം ചെയ്യാനാവു

ന്നതാണ്‌. C++ ഭാഷയുടെ ലൈബ്രറിയില്‍ നിര്‍വ്ൃചിച്ചിട്ടുള്ള അടിസ്ഥാനവാക്കാണിത്‌. വ്യക്ത

മായി പറയുകയാണെങ്കില്‍ മുന്‍ നിര്‍വചിത വാക്കുകളെ പുനര്‍വ്യാഖ്യാനം ചെയ്ത്‌ മാറ്റാ
വര്യങ്ങള്‍ക്ക്‌ ഉപയോഗിക്കുന്നത്‌ അപകടകരവും ചിന്താക്കുഴഷം വരുത്തുന്നതുമാണ്‌. ഉത്‌ ഒഴിവാ
ക്കേണ്താണ്‌. എല്ലാ മുന്‍ നിര്‍വചിത ഐഡയന്റി ഫയറുകളെയും കീവേര്‍ഡുകളെ പോലെ കരുതുന്ന
താണ്‌ സുരക്ഷിതവും ഏളുഷവുമായ രീതി.

ഒന്നാം വര്‍ഷ കമ്പ്യൂട്ടര്‍ സയന്‍സ്‌ 6 ഡാറ്റയുടെ തരങ്ങളും ഓഷറേറ്ററുകളും

1/0 ഓപ്പറേറ്ററുകളുടെ സംയോജനം
നമുക്ക്‌ X,Y,Z എന്നീ മൂന്നു പേരുകളിലായി ഡാറ്റ ഇന്‍പുട്ട്‌ ചെയ്യുന്നതിനായി

cin>>x;

cin>>y;

cin>>z;
ഇങ്ങനെ 3 പ്രസ്താവനകള്‍ ഉപയോഗിക്കാം; താഴെ പറയുന്ന രീതിയില്‍ ഇവ മുന്നും
കൂട്ടി യോജിപ്പിച്ച്‌ ഒറ്റ പ്രസ്താവനയായി ഉപയോഗിക്കാവുന്നതാണ്‌.

cin>>x>>y>>Z;
ഒന്നില്‍കൂടുതല്‍ ഇന്‍പുട്ട്‌ ഓട്ടപൂട്ട്‌ ഓപ്പറേറ്ററുകള്‍ ഒറ്റ പ്രസ്താവനയില്‍ ഉപയോഗിക്കു
ന്നതിന്‌ സംയോജിപ്പിച്ച്‌ ഉണ്ടാക്കുമ്പോള്‍ ഓഫ്‌ ഇന്‍പൂുട്ട ഓട്ട്പുട്ട്‌ ഓപ്പറേറ്ററുകളുടെ
സംയോജനം എന്നു പറയുന്നു. ഇന്‍പുട്ട്‌ ഓപ്പറേറ്ററുകള്‍ ചെയ്യുമ്പോള്‍ ആദ്യം നല്‍കുന്ന
വില ആദ്യത്തെ വേരിയബിളിന്‌ ലഭിക്കും. രണ്ടാമത്തേ വില രണ്ടാമത്തേതിന്‌ അങ്ങനെ
ഇടത്തുനിന്ന്‌ വലത്തേക്ക്‌ വില ലഭിക്കും. ഉദാഹരണമായി cin>>x>>y>>zZ; ഒന്നാമത്‌ നല്‍
കുന്ന വില X നും രണ്ടാമത്തേത്‌ y ക്കും മൂന്നാമത്തേത്‌ Z നും ലഭിക്കും. പ്രവര്‍ത്തനസമ

യത്ത്‌ വിലനല്‍കുമ്പോള്‍ വേരിയബിളുകളുടെ വിലകള്‍ തമ്മില്‍ വേര്‍തിരിക്കുന്നതിന്‌
സ്പൈസ്‌, ബാര്‍, ടാബ്‌, അല്ലെങ്കില്‍ എന്റര്‍ കീ ഇവ ഏതെങ്കിലും ഉപയോഗിക്കാം.

ഇതുപോലെ ഒന്നിലധികം വേരിയബിളുകളുടെ വിലകള്‍ മോണിറ്ററില്‍ കാണിക്കുന്ന
തിനായി താഴെ പറയുന്ന രീതി ഉപയോഗിക്കാം.

cout<<x<<y<<z;
വേരിയബിളുകള്‍ സ്ഥിരാംഗങ്ങള്‍ പദപ്രയോഗങ്ങള്‍ എന്നിവ ഒരുമിച്ച്‌ ഓട്ടപുട്ട്‌ ചെയ്യാ
നായി താഴെ പറയുന്ന രീതി ഉപയോഗിക്കാം

cout<<"The number is “<<z;
ഓട്ട്പുട്ട ഓപ്പറേറ്ററുകള്‍ സംയോജിപ്പിച്ച്‌ ഉപയോഗിക്കുമ്പോള്‍ വലത്തുനിന്ന്‌ ഇടത്തേ
ക്കായിരിക്കും ഓട്ട്പുട്ട്‌ വിലകള്‍ ക്രമമാക്കുന്നത്‌. താഴെ കൊടുത്തിരിക്കുന്ന കോഡ്‌
ശകലം ശ്രദ്ധിക്കുക.

int x=5;

cout<<x<<'\t'<<++x;
ഓട്ട്പുട്ട്‌ : 66
ഓട്ട്പുട്ട 5 6 എന്ന്‌ ആയിരിക്കില്ല.
<<>> ഓപ്പറേറ്ററുകളെ ഒരേ പ്രസ്താവനയില്‍ ഉപയോഗിക്കാന്‍ കഴിയില്ല എന്നത്‌ ശ്രദ്ധി
ക്കുക. 2൦൧5; എന്ന പ്രസ്താവനയില്‍ = ഓപ്പറേറ്റര്‍ സംയോജിപ്പിച്ചു ഉപയോഗിച്ചിരി
ക്കുന്നു. ഇവിടെയും വലത്തുനിന്ന്‌ ഇടത്തോട്ടാണ്‌ സംയോജനം നടക്കുന്നത്‌.

6.10803 C++ പ്രോഗ്രാമിന്റെ ഘടന (Structure of a C++ program)

ഇതുവരെ ചര്‍ച്ച ചെയ്ത പ്രസ്താവനകള്‍ ഉപയോഗിച്ച്‌ ലഘുവായ പ്രശ്നങ്ങള്‍ പരിഹ
രിക്കാവുന്ന സ്ഥിതിയില്‍ നാം ഇപ്പോള്‍ എത്തിക്കഴിഞ്ഞു. എന്നാല്‍ ഒരു കൂട്ടം പ്രസ്താ
ഒന്നാം വര്‍ഷ കമ്പ്യൂട്ടര്‍ സയന്‍സ്‌ 6 ഡാറ്റയുടെ തരങ്ങളും ഓഷറ്റേറുകളും

വനകള്‍ മാത്രം ചേര്‍ന്നാല്‍ ഒരു പ്രോഗ്രാമാകുകയില്ല. C++ പ്രോഗ്രാമിന്‌ ഒരു സവി
ശേഷ ഘടനയുണ്ട്‌. അത്‌ ഒന്നോ അതിലധികമോ oNBoUUM}ABJOS ശേഖരമാണ്‌. ഫങ്‌
ഷന്‍ എന്നാല്‍ ഒരു പേരില്‍ സ്വരൂപിച്ചിരിക്കുന്നതും ഒരു പ്രത്യേക കാര്യം ചെയ്യുന്നതിനാ
യുമുള്ള പ്രസ്താവനകളുടെ കൂട്ടമാണ്‌. ഒരു C++ പ്രോഗ്രാമില്‍ ഒന്നിലധികം ഫങ്്‌.ഷനുകള്‍
ഉപയോഗിക്കുന്നതിനാല്‍ അവ ഓരോന്നും അനന്യമായ പേരുകളില്‍ ആയിരിക്കണം
തിരിച്ചറിയപ്പെടേണ്ടത്‌. എല്ലാപ്രോഗ്ഗാമിലും ഏറ്റവും അത്യാവശ്യമായി ഉണ്ടായിരിക്കേണ്ട
ഫങ്കഷനാണ്‌ main() ഫങ്ഷന്‍.

ഒരു C++ പ്രോഗ്രാമിന്റെ ഘടന താഴെ കൊടുത്തിരിക്കുന്നു
#include <header file>
using namespace identifier;
int main()
{

statements;

return 0;

}
ഒന്നാമത്തെ വരിയെ (all - പ്രൊസസ്സര്‍ നിര്‍ദ്ദേശം എന്നും രണ്ടാമത്തെ വരിയെ നെയിം
സ്പേസ്‌ പ്രസ്താവന എന്നും വിളിക്കുന്നു. മുന്നാമത്തെ വരിയില്‍ ഫങ്ഷന്‍ ഹെഡറും
തുടര്‍ന്നുള്ള വരികളില്‍ ഒരു ജോഡി ബ്രാക്കറ്റുകള്‍ക്കുള്ളില്‍ ഉള്ള ഒരു കൂട്ടം പ്രസ്ഥാവ
നകളുമാണ്‌ അടങ്ങിയിരിക്കുന്നത്‌.

പ്രോഗ്രാമിലെ ഈ ഓരോ ഭാഗങ്ങളും നമുക്ക്‌ ചര്‍ച്ച ചെയ്യാം.
6.10.1 ്രീപ്രൊസസ്സര്‍ നിര്‍ദ്ദേശങ്ങള്‍ (Preprocessor directive)

പ്രീ പ്രോസസ്സര്‍ നിര്‍ദ്ദേശങ്ങളോടു കൂടിയാണ്‌ ഒരു C++ പ്രോഗ്രാം ആരംഭിക്കുന്നത്‌.ഇവ
കംപൈലറിനുള്ള നിര്‍ദേശ പ്രസ്താവനകളാണ്‌. കംമ്പൈേലേഷന്‍ ആരംഭിക്കുന്നതിനു
മുമ്പ്‌ കമ്പൈലർ ചെയ്യേണ്ടുന്ന കാര്യങ്ങള്‍ ഇത്‌ നിര്‍ദ്ദേശിക്കുന്നു. പ്രോഗ്രാം പ്രസ്താവ
നകള്‍ അല്ലാത്തതും എന്നാല്‍ പ്രോഗ്രാമില്‍ ഉള്‍പ്പെട്ടിട്ടുള്ളതുമായ വരികളാണ്‌ പ്രീപ്രൊ
MAYS നിര്‍ദ്ദേശങ്ങള്‍. ഈ വരികള്‍ എപ്പോഴും # ചിഹ്നത്തോടു കൂടിയാണ്‌ തുടങ്ങുന്ന
ത്‌. പ്രോഗ്രാമിന്‌ ആവശ്യമായ സൌകര്യങ്ങള്‍ ലഭ്യമാക്കാന്‍ C++ ലൈബ്രറിയിലെ ശീര്‍ഷക
ഫയലുകളെ ന്ധം എന്നുതുടങ്ങുന്ന പ്രീപ്രോസസ്സൂര്‍ നിര്‍ദ്ദേശം ഉപയോഗിച്ച്‌ ബന്ധി
പ്പിക്കുന്നു. ഈ വരികളുടെ അവസാനം അര്‍ദ്ധവിരാമം (;) ആവശ്യമില്ല. വിവിധ ശീര്‍ഷക
ഫയലുകള്‍ക്ക്‌ വേണ്ടി വ്യത്യസ്ത #include പ്രസ്താവനകള്‍ ഉപയോഗിക്കണം. #de-
fine, #undef മുതലായവ മറ്റു ചില പ്രീപ്രോസസ്സര്‍ നിര്‍ദ്ദേശങ്ങളാണ്‌.

6.10.2 ഹെഡര്‍ ഫയലുകള്‍ (Header files)

ഫംഗ്ഷനുകള്‍, ഒബ്ജക്ടുകള്‍ മുന്‍നിര്‍വചിത - രൂപീകൃത ഡാറ്റഇനങ്ങള്‍ എന്നിവയെ
ക്കുറിച്ചുള്ള വിവരങ്ങള്‍ കപൈലറിനോടൊപ്പം ലഭ്യമായിട്ടുളള ശീര്‍ഷകംമായിട്ടുള്ള
(5) ഒന്നാം വര്‍ഷ കമ്പ്യൂട്ടര്‍ സയന്‍സ്‌ 6 ഡാറ്റയുടെ തരങ്ങളും ഓഷറ്റേറുകളും

ശീര്‍ഷക ഫയലുകളില്‍ അടങ്ങിയിരിക്കുന്നു. ലൈ.്രറിയില്‍ സൂക്ഷിച്ചിട്ടുള്ള ഇത്തരം
നിരവധി ഫയലുകള്‍ C++ പ്രോഗ്രാമുകളെ പിന്തുണയ്ക്കുന്നു. ഇത്തരത്തിലുള്ള
ഏതെങ്കിലും വിവരങ്ങള്‍ ആവശ്യമുള്ള പ്രോഗ്രാമുകളില്‍ അവ ഉപയോഗിക്കുന്നതിന്‌
അതുമായി ബന്ധപ്പെട്ട ഹെഡര്‍ ഫയല്‍ ഉള്‍പ്പെടുത്തണം. ഉദാഹരണത്തിന്‌ മുന്‍ നിര്‍വ
ചിത ഒബ്ജക്ടുകളായ cin, cout എന്നിവ നമുക്ക്‌ ഉപയോഗിക്കേണ്ടതായി വരുമ്പോള്‍
പ്രോഗ്ഗാമിന്റെ തുടക്കത്തില്‍ താഴെ പറയുന്ന പ്രസ്താവന നമ്മള്‍ ഉപയോഗിക്കണം.

#include <iostream> എന്ന ഹെഡര്‍ ഫയലില്‍ cin, COUt എന്നീ ഒബ്ജക്ടുകളുടെ വിവര
ങ്ങള്‍ അടങ്ങിയിരിക്കും. ഹെഡര്‍ ഫയലുകള്‍ക്ക്‌ h എക്സ്റ്റന്‍ഷന്‍ ഉണ്ടെങ്കിലും GCC ല്‍
അതു ഉപയോഗിക്കരുത്‌. പക്ഷേ ടര്‍ബോ C++ IDE പോലെയുള്ള മറ്റു ചില കംപൈല
റുകള്‍ക്ക്‌ ഈ എക്സ്റ്റന്‍ഷന്‍ നിര്‍ബന്ധമാണ്‌.

6.10.3. നെയിംസ്പേസ്‌ ഏന്ന ആശയം (Concept of namespace)

ഒരു പ്രോഗാമില്‍ ഒരേ വ്യാപ്തിയില്‍ ഒരേ പേരിലുള്ള ഒന്നിലധികം ഐഡന്റി ഫയറു
കള്‍ (വേരിയബിളുകള്‍ അല്ലെങ്കില്‍ ഫാങ്ഷനുകള്‍?) ഉണ്ടായിരിക്കാന്‍ പാടില്ല. ഉദാഹര
ണത്തിന്‌ നമ്മുടെ വീട്ടില്‍ രണ്ടോ അതിലധികമോ ആളുകള്‍ക്ക്‌ (അല്ലെങ്കില്‍ ജീവജാല
ങ്ങള്‍ക്ക്‌) ഒരേ പേരുണ്ടാവില്ല. അങ്ങനെയുണ്ടെങ്കില്‍ തീര്‍ച്ചയായും വീട്ടിനുള്ളില്‍ അവരെ
പേരു കൊണ്ട്‌ തിരിച്ചറിയുക എന്നത്‌ വിഷമകരമാകും. അതുകൊണ്ട്‌ നമ്മുടെ വീട്ടില്‍
ഓരോ പേരും അനന്യമായിരിക്കണം. എന്നാല്‍ നമ്മുടെ അയല്‍പക്കത്തെ വീട്ടില്‍ സമാ
നമായ പേരുള്ള ഒരാള്‍ (അല്ലെങ്കില്‍ ജീവജാലം) ഉണ്ടായിരിക്കാം. അതാത്‌ പരിധിക്കു
ള്ളില്‍ വ്ൃക്തികളെ പേരു കൊണ്ട്‌ തിരിച്ചറിയുന്നതിന്‌ ഇത്‌ യാതൊരു ആശയക്കുഴപ്പവു
മുണ്ടാക്കില്ല. പക്ഷേ പുറമേ നിന്നൊരു വ്യക്തിക്ക്‌ പേരു മാത്രം ഉപയോഗിച്ച്‌ കൊണ്ട്‌
ഇവരെ തിരിച്ചറിയാന്‍ കഴിയില്ല. അതിനായി വീട്ടുപേരു കൂടി പരാമര്‍ശിക്കേണ്ടതുണ്ട്‌.

നെയിം സ്പേസ്‌ എന്ന ആശയം വീട്ടുപേരിനു സമാനമാണ്‌. ഒരു പ്രത്യേക നെയിംസ്‌
പേസുമായി ADSM ഐഡന്റിഫയറുകൾ ബസ്ധപ്പെട്ടിരിക്കുന്നു. ഓരോ ഇനവും വൃത്യ
സ്തമായിരിക്കുന്ന ഒരു ഗണത്തിന്റെ പേരാണിത്‌. വേരിയബിളുകള്‍ക്കും ഫംഗ്ഷനുകള്‍ക്കു
മായി പ്രത്യേകം നെയിം സ്പേസുകള്‍ സൃഷ്ടിക്കുന്നതിന്‌ ഉപയോക്താവിനു അനുവാ
ദമുണ്ട്‌. ഒരു നെയിംസ്പേസിനു പേരു കൊടുക്കാന്‍ നമുക്ക്‌ ഒരു ഐഡന്റിഫയര്‍ ഉപ
യോഗിക്കാം. പ്രോഗ്രാമിംഗില്‍ ഉപയോഗിക്കുന്ന ഘടകങ്ങളെ ഏത്‌ നെയിം സ്പേസില്‍
തിരയണമെന്ന്‌ using എന്ന കീവേര്‍ഡ്‌ സാങ്കേതികമായി കംപൈലറിനോട്‌ പറയുന്നു.
C++ ല്‍ standard എന്നതിന്റെ ചുരുക്കെഴുത്താണ്‌ std. cin, cout തുടങ്ങി മറ്റ്‌ പല ഒബ്ജ
ക്ടുകളും നിര്‍വചിച്ചിട്ടുള്ള ഒരു നെയിം സ്പേസ്‌ ആണിത്‌. അതിനാല്‍ ഒരു പ്രോഗ്രാ
മില്‍ ഇവ ഉപയോഗിക്കണമെങ്കില്‍ std::cin, std::cout എന്ന മാതൃക നാം പിന്തുടരേണ്ടതാ
ണ്‌. using name space std എന്ന പ്രസ്താവന പ്രോഗ്രാമില്‍ ഉപയോഗിക്കുന്നതിലൂടെ
ഇത്തരത്തിലുള്ള വിശദമായ പരാമര്‍ശങ്ങള്‍ ഒഴിവാക്കാവുന്നതാണ്‌. അത്തരമൊരു സാഹ
ചര്യത്തില്‍ കംപൈലര്‍ cin, cout, end] മുതലായവയ്ക്കായി ഈ നെയിംസേപസില്‍ തിര
യുന്നു. cin, cout, endl അല്ലെങ്കില്‍ അതുപോലെയുളളവ എപ്പോഴൊക്കെ ഒരു C++ പ്രോഗ്രാ
മില്‍ കമ്പ്യൂട്ടര്‍ കാണുന്നുവോ, അവയെ std::cin, std::cout, std::endl എന്നിങ്ങനെ വ്ൃഖ്യാ
നിക്കുന്നു.
(5) ഒന്നാം വര്‍ഷ കമ്പ്യൂട്ടര്‍ സയന്‍സ്‌ 6 ഡാറ്റയുടെ തരങ്ങളും ഓഷറ്റേറുകളും

using name space std എന്ന പ്രസ്താവന യഥാര്‍ത്ഥത്തില്‍ പ്രോഗ്രാമിലേക്ക്‌ ഒരു ഫംഗ്ഷ
നും കൂട്ടിച്ചേര്‍ക്കുന്നില്ല, #include<iostreaam> എന്ന നിര്‍ദ്ദേശമാണ്‌ cin, cout, endl അതു
പോലെയുള്ളവ ഉള്‍പ്പെടുത്തുന്നത്‌.

6.10.4 main() ഫങ്ഷന്‍

എല്ലാ C++ പ്രോ്ഗാമിലും main() എന്നു പേരുള്ള ഫങ്ഷന്‍ ഉള്‍പ്പെട്ടിരിക്കുന്നു. പ്രോഗ്രാ
മിന്റെ പ്രവര്‍ത്തനം ആരംഭിക്കുന്നതും അവസാനിക്കുന്നതും main() ഫങ്ഷനിലാണ്‌. മറ്റ്‌
ഏതെങ്കിലും ഫങ്ഷനുകള്‍ നാം പ്രോ്രഗാമില്‍ ഉപയോഗിക്കുന്നുണ്ടെങ്കില്‍ അവയെ
വിളിക്കുന്നത്‌ main() ഫങ്ഷനില്‍ നിന്നാണ്‌. സാധാരണയായി main() ഫങ്ഷന്‍ മുമ്പായി
ഒരു ഡാറ്റ ഇനം ഉണ്ടായിരിക്കും. GCC -ല്‍ ഇത്‌ int ആയിരിക്കണം.

main () ഫങ്ഷന്റെ ഹെഡറിനെ തുടര്‍ന്ന്‌ ഒരു ജോഡി ബഡ്രാക്കറ്റുകള്‍ക്കുള്ളില്‍ ഒന്നോ
അതിലധികമോ പ്രസ്താവനകള്‍ അടങ്ങിയ ഫങ്ഷന്റെ ചട്ടക്കൂടും ഉണ്ടായിരിക്കും. ഈ
ഘടന MAIN ഫങ്ഷന്റെ നിര്‍വചനം എന്ന്‌ അറിയപ്പെടുന്നു. ഓരോ പ്രസ്താവനയും ഒരു
അര്‍ദ്ധവിരാമത്തില്‍ ';' അവസാനിക്കുന്നു. പ്രസ്താവനകള്‍ നിര്‍വഹിക്കാവുന്നവയോ
നിര്‍വഹിക്കാനാവത്തവയോ ആകാം. കമ്പ്യൂട്ടര്‍ ചെയ്യേണ്ട കാര്യങ്ങള്‍ക്കുള്ള നിര്‍ദേശ
ങ്ങളാണ്‌ നിര്‍വഹണ പ്രസ്താവനകള്‍ പ്രതിനിധാനം ചെയ്യുന്നത്‌. നിര്‍വഹിക്കാനാവാത്ത
പ്രസ്താവനകള്‍ കമ്പയിലറിനെയോ പ്രോഗ്രാമറെയോ ഉദ്ദേശിച്ചുള്ളവയാണ്‌. അവ വിവ
രാധിഷ്ഠിത പ്രസ്താവനകള്‍ ആണ്‌. main() ഫംഗ്ഷന്‍ ഉള്ളിലെ അവസാനത്തെ പ്രസ്താ
വന return 0 എന്നായിരിക്കും. ഈ പ്രസ്താവനകള്‍ നാം ഉപയോഗിച്ചില്ലെങ്കിലും പ്രോഗ്രാ
മില്‍ അത്‌ ഒരു തരത്തിലുള്ള പിശകും വരുത്തുന്നില്ല. ഇതിന്റെ പ്രസക്തി അധ്യായം 10-
ല്‍ ചര്‍ച്ച ചെയ്യാം. ഓരോ പ്രസ്താവനകളും പുതിയ വരികളില്‍ തുടങ്ങണമെന്ന്‌ നിര്‍ബ്ദ
ന്ധമില്ലാത്തതിനാല്‍ C++ ഒരു സ്വതന്ത്ര രൂപത്തിലുള്ള ഭാഷയാണ്‌. അതുപോലെ ഒരു
പ്രസ്താവനക്ക്‌ ഒന്നില്‍ കൂടുതല്‍ വരികള്‍ ഉപയോഗിക്കാവുന്നതാണ്‌.

6.10.5 ഒരു മാതൃക പ്രോഗ്രാം

പൂര്‍ണ്ണമായ ഒരു പ്രോഗ്രാം നമുക്ക്‌ പരിശോധിച്ച്‌ അതിന്റെ സവിശേഷതകള്‍ വിശദ
മായി പരിചയപ്പെടാം. ഈ പ്രോഗ്രാം സ്ക്രീനില്‍ ഒരു വാചകം പ്രദര്‍ശിപ്പിക്കും.

#include<iostream.h>
void main()
{
cout<<"Hello, Welcome to C++";
}
താഴെ പറയുന്ന രീതിയില്‍ ഈ പ്രോ്രഗാമിന്‌ ഏഴു വരികളുണ്ട്‌.

വരി 1. പ്രീ പ്രോസസ്സര്‍ നിര്‍ദേശം #include എന്നത്‌ iostream.h എന്ന ഹെഡര്‍ ഫയലിനെ
ഈ പ്രോഗ്രാമുമായി ബന്ധിപ്പിക്കുന്നു.

വരി 2. using name space std എന്ന പ്രസ്താവന cout എന്ന ഐഡന്റി ഫയറിനെ പ്രോഗ്രാ
മില്‍ ലഭ്യമാക്കുന്നു.
ഒന്നാം വര്‍ഷ കമ്പ്യൂട്ടര്‍ സയന്‍സ്‌ 6 ഡാറ്റയുടെ തരങ്ങളും ഓകഷറ്റേറുകളും

വരി 3. പ്രോരഗാമില്‍ നിര്‍ബന്ധമായും ഉണ്ടായിരിക്കേണ്ട മെയിന്‍ എന്ന ഫങ്ഷന്റെ
ഹെഡര്‍

വരി 4. ആദ്യത്തെ ബ്രാക്കറ്റ്‌ ((റ്രസ്താവനകള്‍ തുടങ്ങുന്നു എന്നു കാണിക്കുന്നു.

വരി 5. നാം പ്രോഗ്രാം പ്രവര്‍ത്തിപ്പിക്കുമ്പോള്‍ ഈ ഓട്ട്പുട്ട്‌ പ്രസ്താവന പ്രവര്‍ത്തിച്ച്‌
Hello, welcome to C++ എന്ന്‌ മോണിറ്ററില്‍ പ്രദര്‍ശിപ്പിക്കുന്നു. Cout പ്രസ്താവന
ഈ പ്രോഗ്രാമില്‍ ഉപയോഗിക്കുന്നതിന്‌ iostream എന്ന്‌ ഹെഡര്‍ ഫയല്‍
ഉള്‍പ്പെടുത്തിയിട്ടുണ്ട്‌.

വരി 6. return പ്രസ്താവന main() ഫങ്ഷന്റെ പ്രവര്‍ത്തനം അവസാനിപ്പിക്കുന്നു. ഈ
പ്രസ്താവന Main ഫങ്ഷനെ സംബന്ധിച്ചിടത്തോളം നിര്‍ബന്ധമല്ല.

വരി 7. അവസാന ബ്രാക്കറ്റ്‌ (}) ഈ പ്രോ്ഗാം അവസാനിപ്പിച്ചതായി സൂചിപ്പിക്കുന്നു.

6.11 പ്രോഗ്രാം എഴുതുന്നതിനുള്ള മാര്‍ഗ്ഗ നിര്‍ദ്ദേശങ്ങള്‍

ഒരു പ്രോഗ്രാം കോഡ്‌ യുക്തിസഹവും സ്പഷ്ടവും തെറ്റുകള്‍ പെട്ടെന്ന്‌ കണ്ടെത്തുവാന്‍
കഴിയുന്നതുമാണെങ്കില്‍ അത്‌ ഒരു നല്ല സോഴ്സ്‌ കോഡ്‌ ആയിരിക്കും. പ്രോഗ്രാമുകള്‍
എഴുതുമ്പോള്‍ ചില രീതികള്‍ പിന്തുടരുകയാണെങ്കില്‍ ഈ സവിശേഷതകള്‍ നമുക്ക്‌
അനുഭവവേദ്യമാക്കാം.
ശൈലീപരമായ പ്രോഗ്രാമുകള്‍ എഴുതുന്നതിനുള്ള ചില മാര്‍ഗ്ഗ നിര്‍ദ്ദേശങ്ങള്‍ ഈ ഭാ
ഗത്ത്‌ ചര്‍ച്ച ചെയ്യുന്നു.
ഐഡന്റിഫയറുകള്‍ക്ക്‌ യോജിച്ച പേര്‍ നല്‍കുക.
ഒരു ജോലിക്കാരന്റെ കിഴിവുകള്‍ക്കുശേഷമുള്ള ശമ്പളം നമുക്ക്‌ കണക്കാക്കണം എന്നി
രിക്കട്ടെ. താഴെ കാണുന്ന രീതിയില്‍ നമുക്ക്‌ കോഡ്‌ ചെയ്യാവുന്നതാണ്‌.
ഇവിടെ A എന്നത്‌ മിച്ച ശമ്പളവും b മൊത്ത ശമ്പളവും ൦ ആകെ കിഴിവും ആണ്‌, എന്നാല്‍
ഈ പേരുകള്‍ അവയുടെ ഉപയോഗത്തെ പ്രതിഫലിപ്പിക്കുന്നില്ല. ഇതേ പ്രസ്താവന
താഴെ പറയുന്ന രീതിയിലായാല്‍ കൂടുതല്‍ വ്യക്തമായിരിക്കും.
Net_Slary=Gross_Slary-Deduction;
ഇവിടെ വേരിയബിളുകളുടെ പേരുകള്‍ അവയുടെ മൂല്യവുമായി പൊരുത്തമുള്ളതും
പെട്ടെന്ന്‌ ഓര്‍ത്തിരിക്കാന്‍ പറ്റുന്നതുമാണ്‌. ഈ പേരുകള്‍ അവയുടെ ഉദ്ദേശ്യത്തെ പ്രതി
ഫലിപ്പിക്കുന്നു.ഇത്തരം പേരുകളെ ന്യുമോണിക്‌ പേരുകള്‍ (mnemonic names) എന്നു
വിളിക്കുന്നു. പേരുകള്‍ സ്വീകരിക്കുമ്പോള്‍ താഴെപ്പറയുന്ന കാര്യങ്ങള്‍ ശ്രദ്ധിക്കണം.
1. വേരിയബിളുകള്‍, ഫങ്ഷനുകള്‍, പ്രൊസീഡറുകള്‍ എന്നിവക്ക്‌ നല്ല ന്യുമോണിക്
പേരുകള്‍ തിരഞ്ഞെടുക്കാം.
ഉദാഹരണം: avg_hgt, Roll_No, emp_code, Sum Of Digits, തുടങ്ങിയവ

2. ബന്ധപ്പെട്ട വേരിയബിളുകള്‍ക്ക്‌ നിലവാരമുള്ള പിന്‍ വാക്കുകളും, മുന്‍ വാക്കുകളും
ഉപയോഗിക്കാം.

ഉദാഹരണം: (മൂന്ന്‌ സംഖ്യകള്‍ക്കായി) സബ, num2, num3

3. പ്രോ്രഗാമിന്റെ തുടക്കത്തില്‍തന്നെ സ്ഥിരാംഗങ്ങള്‍ക്ക്‌ പേരുകള്‍ നല്‍കുക.
(5) ഒന്നാം വര്‍ഷ കമ്പ്യൂട്ടര്‍ സയന്‍സ്‌ 6 ഡാറ്റയുടെ തരങ്ങളും ഓഷറ്റേറുകളും

ഉദാഹരണം: const float PI = 3.14;
വ്യക്തവും ലളിതവുമായ പ്രയോഗങ്ങള്‍ ഉപയോഗിക്കുക

പ്രവര്‍ത്തനസമയം കുറയ്ക്കുന്നതിനായി പ്രോ്രഗാമുകളുടെ ലാളിത്യം നഷ്ടപ്പെടുത്തുന്ന
പ്രവണത ചില ആളുകള്‍ക്കുണ്ട്‌. ഇത്‌ ഒഴിവാക്കേണ്ടതാണ്‌. താഴെ പറയുന്ന ഉദാഹ
രണം പരിഗണിക്കുക. X നെ ദ/കൊണ്ട്‌ ഹരിച്ച്കിട്ടുന്ന ശിഷ്ടം കാണുന്നതിന്‌ y=x-(x/n)*n;
എന്ന പ്രസ്താവന ഉപയോഗിക്കാം. ഇതേ കാര്യത്തിനായി താഴെ കാണുന്ന ലളിതവും
സുന്ദരവുമായ കോഡ്‌ ഉപയോഗിക്കാവുന്നതാണ്‌.

y=x%n;
അതു കൊണ്ട്‌ ഒരു പ്രോഠ്രഗാമിനെ ലളിതവും വ്യക്തവുമാക്കുന്നതിന്‌ ലളിതമായ കോഡു
കള്‍ ഉപയോഗിക്കുന്നതാണ്‌ നല്ലത്‌.
ആവശ്യമുള്ളിടത്ത്‌ കമന്റുകള്‍ ഉപയോഗിക്കുക.

ഒരു പ്രോ്രഗാമിന്റെ മുകളില്‍ വിവരണം നല്‍കുന്നതിന്‌ കമന്റുകള്‍ വളരെ പ്രധാനപ്പെട്ട
പട്‌: വഹിക്കുന്നു. അവയെ പ്രോഗ്രാമുകളെ വിശദീകരിക്കുവാനുള്ള വരികളായിട്ടാണ്‌
പ്രോഗ്രാമിനുള്ളില്‍ കൂട്ടി ചേര്‍ത്തിരിക്കുന്നത്‌. കപൈലറുകള്‍ അവയെ അവഗണിക്കു
ന്നു. C++ ല്‍ കമന്റുകള്‍ എഴുതുന്നതിന്‌ രണ്ടു മാര്‍ഗ്ഗങ്ങളുണ്ട്‌.

ഒറ്റവരി കമന്റ്‌ : “//” ചിഹ്നങ്ങളാണ്‌ ഒറ്റവരി കമന്റുകള്‍ എഴുതാനായി ഉപയോഗിക്കുന്നത്‌.
ഒരു വരിയില്‍ // ന്‌ ശേഷമുള്ള വാക്യങ്ങള്‍ കമന്റുകളായി C++ കമ്പൈലർ
കണക്കാക്കുന്നു.

ഖണ്ഡിക കമന്റ്‌ (multiline comment): /* നും */ നും ഇടയില്‍ എഴുതുന്ന എന്തിനെയും
കമ്പൈലർ കമന്റ്‌ ആയി കണക്കാക്കുന്നു. ആയതിനാല്‍ ഒരു കമന്റില്‍ എത്ര വരികള്‍
വേണമെങ്കിലും ഉള്‍പ്പെടുത്താം. പക്ഷേ പ്രോഗ്രാമില്‍ ആവശ്യമായ പ്രസ്താവനകള്‍
കമന്റുകളില്‍ ആയി പോകാതിരിക്കാന്‍ പ്രത്യേകം ശ്രദ്ധിക്കേണ്ടതാണ്‌.

കമന്റുകള്‍ നല്‍കുമ്പോള്‍ താഴെ പറയുന്ന കാര്യങ്ങള്‍ ശ്രദ്ധിക്കണം

e പ്രോഗ്രാമിന്റെ തുടക്കത്തിലുള്ള കമന്റുകള്‍ പ്രോഗ്രാമിന്റെ ഉദ്ദേശ്യത്തെ സംഗ്രഹിക്കു
ന്നതായിരിക്കണം.

© ഓരോ വേരിയബിളും, സ്ഥിരാംഗവും പ്രഖ്യാപിക്കുമ്പോള്‍ കമന്റുകള്‍ ഉപയോഗിക്കുക.

© സങ്കീര്‍ണമായ പ്രോഗ്രാം ഘട്ടങ്ങള്‍ വിശദീകരിക്കുന്നതിന്‌ കമന്റുകള്‍ ഉപയോഗിക്കുക.

ഭ പ്ര്രോ്ഗാം എഴുതുന്ന സമയത്തു തന്നെ കമന്റുകള്‍ ഉള്‍പ്പെടുത്തുന്നതാണ്‌ നല്ലത്‌.

© ലളിതവും വൃക്തവുമായി കമന്റുകള്‍ എഴുതുക.

ഇന്റന്റേഷന്റെ ആവശ്ൃകത

കമ്പ്യൂട്ടര്‍ പ്രോഗ്രാമിംഗില്‍ പ്രോഗ്രാം ഘടന വ്യക്തമാക്കുന്നതിന്‌ കോഡുകള്‍ മാര്‍ജി

നില്‍ നിന്നും നിശ്ചിത അകലത്തില്‍ എഴുതുന്ന സ്രമ്പദായമുണ്ട്‌. ഇതിനെ ഇന്റന്റേഷന്‍

എന്ന്‌ പറയുന്നു. ഇത്‌ പ്രസ്താവനകളുടെ വായന സുഗമമാക്കുകയും പ്രോഗ്രാമിന്‌ വ്യക്തത

വരുത്തുകയും ചെയ്യുന്നു.

ഇത്‌ പ്രോഗ്രാമിലെ പ്രസ്താവനകളുടെ വിവിധ നിലകളെ സൂചിപ്പിക്കുന്നു.
ഒന്നാം വര്‍ഷ കമ്പ്യൂട്ടര്‍ സയന്‍സ്‌ 6 ഡാറ്റയുടെ തരങ്ങളും ഓകഷറ്റേറുകളും

ഈ മാര്‍ഗ്ഗ നിര്‍ദ്ദേശങ്ങളുടെ ഉപയോഗം അടുത്ത ഭാഗത്തുള്ള പ്രോഗ്രാമുകളില്‍ നിരീ
ക്ഷിക്കാവുന്നതാണ്‌.

പ്രോഗ്രാമുകള്‍
പ്രോഗ്രാം 6.1 ഒരു സന്ദേശം പ്രദര്‍ശിപ്പിക്കുന്നു.

കോഡിംഗ്‌ മാര്‍ഗനിര്‍ദേശങ്ങള്‍ അനുസരിച്ച്‌ ചില പ്രശ്നങ്ങള്‍ നിര്‍ദ്ധാരണം ചെയ്യുന്ന
തിനുള്ള പ്രോഗ്രാമുകള്‍ നമുക്ക്‌ ഇപ്പോള്‍ എഴുതാം. തന്നിരിക്കുന്ന കോഡുകള്‍ പ്രോഗ്രാ
മിന്റെ ഭാഗമല്ല.

/* This program displays the message

"Smoking is injurious to health"
on the monitor */

#include <iostream.h> // To use the cout object

void main() //program begins here ~ again

{ //The following output statement displays a message

cout << "Smoking is injurious to health";

//end of the program

പ്രോഗ്രാം 6.1 പ്രവര്‍ത്തിക്കുമ്പോള്‍ താഴെ കൊടുത്തിരിക്കുന്ന ഓട്ട്പുട്ട്‌
ലഭിക്കും.

ഉന്‍ന്റന്റേഷന്‍

ഓട്ട്പുട്ട്‌ :
Smoking is injurious to health

അദ്ധ്യായം 7ലെ ഉദാഹരണങ്ങളില്‍ ഇന്റന്റേഷന്റെ ഉപയോഗം കൂടുതല്‍ വിവരിച്ചിരിക്കു
ന്നു.

പ്രോ്രഗാം 6.2 ഉപയോക്താവില്‍ നിന്ന്‌ രണ്ടു പൂര്‍ണ്ണ സംഖ്യകള്‍ സ്വീകരിക്കുകയും അവ
യുടെ തുക കണ്ടുപിടിക്കുകയും ഫലം പ്രദര്‍ശിപ്പിക്കുകയും ചെയ്യുന്നു.

#include<iostream.h>
{ //Program begins

/* Two variables are declared to read user inputs and the variable
sum is declared to store the result

*/

int numl, num2, sum;
ഒന്നാം വര്‍ഷ കമ്പ്യൂട്ടര്‍ സയന്‍സ്‌ 6 ഡാറ്റയുടെ തരങ്ങളും ഓഷറേറുറുകളും

cout<<"Enter two numbers: "; //Prompt for input
cin>>numl>>num2; //Cascading to get two numbers
sum=numl+num2; //Assignment statement to find the sum
cout<<"Sum of the entered numbers = "<<sum;

/* The result is displayed with proper message.
Cascading of output operator is utilized */

return 0;

}

പ്രോഗ്രാം 6.2 ന്റെ ഒരു മാതൃക ഓട്ട്പുട്ട്‌ ചുവടെ കൊടുത്തിരിക്കുന്നു.
ഓട്ട്പുട്ട്‌ :

ഉപയോക്താവിന്റെ ഇന്‍പുട്ടു
കള്‍ സ്പേസ്‌ ഉപയോഗിച്ച്‌

Sum of the entered numbers = 12

നമുക്ക്‌ മറ്റൊരു പ്രശ്നം പരിഗണിക്കാം. തുടര്‍ച്ചയായ മൂന്നു മുല്യനിര്‍ണയങ്ങളില്‍ ഒരു
വിദ്യാര്‍ഥിക്ക്‌ മൂന്ന്‌ സ്‌കോറുകള്‍ ലഭിച്ചു. ഒരു പ്രവര്‍ത്തിയിലെ കൂടിയ സ്‌കോര്‍ 20
ആണ്‌. വിദ്യാര്‍ഥിയുടെ ശരാശരി സ്‌കോര്‍ കണ്ടുപിടിക്കുക.

#include<iostream.h>
void main ()

{

int score_l, score_2, score_3;

float avg;

//Average of 3 numbers can be a floating point value
cout << "Enter the three CE scores: ";
cin >> score_l >> score_2 >> score_3;

avg = (score_l + score_2 + score_3) / 3.0;

/* The result of addition will be an integer value. If 3 is written

instead of 3.0, integer division will be performed and will not get
the correct result */

cout << "Average CE score is: " << avg;

}

CE സ്‌കേറുകളായി 17,19,20 എന്നിവ നല്‍കുമ്പോള്‍ പ്രോഗ്രാം 6.3 താഴെയുള്ള ഓട്ട്പുട്ട്‌
നല്‍കുന്നു.
ഒന്നാം വര്‍ഷ കമ്പ്യൂട്ടര്‍ സയന്‍സ്‌ 6 ഡാറ്റയുടെ തരങ്ങളും ഓഷറേറ്ററുകളും

Enter the three CE scores: 17 19 20
Average CE score is: 18.666666

ശരാശരി വില കാണുന്നതിനായി വിലനല്‍കല്‍ പ്രസ്താവന, വില നല്‍കല്‍ ഓപ്പറേറ്റ
റിന്റെ (=) വലതുഭാഗത്ത്‌ ഒരു പദ്രപയോഗം ഉപയോഗിക്കുന്നു. ഈ പദ്രപയോഗത്തില്‍
രണ്ടു-- ഓപ്പറേറ്ററുകളും ഒരു / ഓപ്പറേറ്ററുമുണ്ട്‌./ ഓപ്പറേറ്റര്‍ക്ക്‌ + ഓപ്പറേറ്ററിനുമേലുള്ള
മുന്‍ഗണന, സങ്കലനത്തിനായി ആവരണ ചിഹ്നങ്ങള്‍ ഉപയോഗിച്ച്‌ മാറ്റം വരുത്തുന്നു.
സങ്കലന ഓപ്പറേറ്ററുകളുടെ ഓപ്പറന്റുകളെല്ലാം int ഇനം ഡാറ്റയായുതുകൊണ്ടുതന്നെ
ഫലവും ഇന്റിജര്‍ ആയിരിക്കും. ഈ ഇന്റിജര്‍ ഫലത്തെ 3 കൊണ്ടു ഗുണിക്കുമ്പോള്‍
ഓട്ട്പുട്ട വീണ്ടുമൊരു ഇന്റിജര്‍ ആയിരിക്കും. അങ്ങനെയായിരുന്നെങ്കില്‍ പ്രോഗ്രാം
6.3ന്റെ ഓട്ട്‌ പുട്ട്‌ 18 ആകുമായിരുന്നു. അത്‌ കൃത്യമാകുകയില്ല. അതിനാല്‍ / ഓപ്പറേറ്റ
റുടെ രണ്ടാമത്തെ ഓപ്പറേറ്ററായി 3.0 എന്ന ദശാംശ സ്ഥിരാംഗം ഉപയോഗിക്കുന്നു. ഇത്‌
ഡാറ്റാ ഇനം ഉയര്‍ത്തലിലൂടെ ഇന്റിജര്‍ അംശത്തെ float ആക്കുന്നു.

ഒരു വൃത്തത്തിന്റെ ആരം '2 എന്നു നല്‍കി അതിന്റെ വിസ്തീര്‍ണവും ചുറ്റളവും കണക്കു
കൂട്ടുവാന്‍ നിങ്ങളോട്‌ അഭ്യര്‍ഥിക്കുന്നു എന്നിരിക്കട്ടെ. നമുക്കറിയാവുന്നതുപോലെ വൃത്ത
ത്തിന്റെ വിസ്തീര്‍ണം 2 എന്ന സമവാക്യം ഉപയോഗിച്ചും, ചുറ്റളവ്‌ 2 2 ഉപയോഗിച്ചും
(ഇവിടെ 53.14) മാണ്‌ കണക്കാക്കുന്നത്‌. പ്രോഗ്രാം 6.4 ഈ പ്രശ്നം പരിഹരിക്കുന്നു.

അനുസരിച്ച്‌ ഒരു വൃത്തത്തിന്റെ
വണ്ടി.

#include <iostream>
using namespace std;
int main()
{
const float PI = 22.0/7; //Use of const access modifier
float radius, area, perimeter;
cout<<"Enter the radius of the circle: ";
cin>>radius;

Area®jos വില പ്രദര്‍ശി
ഷിച്ച ശേഷം' മ ' എന്ന
എസ്‌കേപ്‌ സീക്വന്‍സ്‌ ഒരു
പുതിയ വരിയിലേക്ക്‌ കര്‍സ
൮നെ കൊണ്ടുഫോകുന്നു

area = PI * radius * radius;
perimeter = 2 * PI * radius;
cout<<"Area of the circle = "<<area<<"\n";
cout<<"Perimeter of the circle = "<<perimeter;
return 0;

}
പ്രോഗ്രാം 6.4ന്റെ ഒരു മാതൃക ഓട്ട്പൂട്ട്‌ താഴെ കൊടുത്തിരിക്കുന്നു.

Enter the radius of the circle: 2.5
Area of the circle = 19.642857
Perimeter of the circle = 15.714285
ഒന്നാം വര്‍ഷ കമ്പ്യൂട്ടര്‍ സയന്‍സ്‌ 6 ഡാറ്റയുടെ തരങ്ങളും ഓഷറ്റേറുകളും

പ്രോഗ്രാം 6.4ന്റെ അവസാനത്തെ രണ്ട്‌ ഓട്ട്പുട്ട്‌ രപരസ്താവനകള്‍ രണ്ടു ഫലങ്ങളെയും
വ്യത്യസ്ത വരികളിലായി പ്രദര്‍ശിപ്പിക്കുന്നു. അവസാനത്തെ ജട്ട്പൂട്ട്‌ പ്രസ്താവന
പ്രവര്‍ത്തിക്കുന്നതിനു മുമ്പായി എന്ന എസ്‌കേപ്പ്‌ സീക്വന്‍സ്‌ കര്‍സറിനെ പുതിയ വരി
യിലേക്ക്‌ വരുത്തുന്നു.

വെറും പലിശ കണക്കാക്കുന്നതിന്‌ മറ്റൊരു പ്രോ്രഗാം നമുക്ക്‌ എഴുതി നോക്കാം. നമുക്ക
റിയാവുന്നതു പോലെ ഫലം കണക്കാക്കുന്നതിനായി മൂലധനം, പലിശയുടെ ശതമാ
നം, കാലാവധി എന്നിവ ഇന്‍പുട്ട്‌ ആയി നല്‍കേണ്ടതാണ്‌.

#include <iostream>
using namespace std;
int main ()
{
float p_Amount, n_Year, i_Rate, int_Amount;
cout<<"Enter the principal amount in Rupees: ";
cin>>p_Amount;
cout<<"Enter the number of years for the deposit: ";
cin>>n_Year;
cout<<"Enter the rate of interest in percentage: ";
cin>>i_Rate;
int_Amount = p_Amount * n_Year * i_Rate /100;
cout <<"Simple interest for the principal amount "
<< p_Amount<<" Rupees for a period of "<<n_Year
<<" years at the rate of interest "<<i_rate
<<" is "<<int_Amount<<" Rupees";
return 0;

}
പ്രോഗ്രാം 6.5ന്റെ ഒരു മാതൃക ഓട്ടപുട്ട താഴെ കൊടുത്തിരിക്കുന്നു.

Enter the principal amount in Rupees: 100

Enter the number of years for the deposit: 2

Enter the rate of interest in percentage: 10

Simple interest for the principal amount 100 Rupees for a
period of 2 years at the rate of interest 10 is 20 Rupees
പ്രോഗ്രാം 6.ടലെ അവസാനത്തെ പ്രസ്താവനയാണ്‌ ഓട്ട്പൂട്ട്‌ പ്രസ്താവന. ഇത്‌ നാലു
വരികളിലായി സജ്ജീകരിച്ചിരിക്കുന്നു. ഓരോ വരിയുടെയും അവസാനത്തില്‍ അര്‍ദ്ധ
വിരാമം ഇല്ല എന്നതു പ്രത്യേകം ശ്രദ്ധിക്കുക. അതിനാല്‍ ഇത്‌ ഒറ്റ പ്രസ്താവനയായി
ട്ടാണ്‌ പരിഗണിക്കപ്പെടുന്നത്‌. പ്രോ്രഗാം പ്രവര്‍ത്തിക്കുമ്പോള്‍ നിങ്ങളുടെ കമ്പ്യൂട്ടര്‍
ഒന്നാം വര്‍ഷ കമ്പ്യൂട്ടര്‍ സയന്‍സ്‌ 6 ഡാറ്റയുടെ തരങ്ങളും ഓഷറേറ്ററുകളും

മോണിട്ടറിന്റെ വലിപ്പത്തിനും റെസലൂഷനും അനുസരിച്ച്‌ ഒന്നിലധികം വരികളിലായി
പ്രദര്‍ശിപ്പിക്കപ്പെടുന്നു.

പ്രോഗ്രാം 6.6 ഒരു താപനില പരിവര്‍ത്തന പ്രശ്നം പരിഹരിക്കുന്നു. താപനില ഡിഗ്ര

സെല്‍ഷ്യസില്‍ ഇന്‍പുട്ട്‌ ആയി നല്‍കുകയും ഒട്ട്പുട്ട്‌ തത്തുല്യമായ ഫാരന്‍ ഹീറ്റിലും
ആയിരിക്കും.

#include <iostream>
using namespace std;
int main ()
{
float celsius, fahrenheit;
cout<<"Enter the Temperature in Celsius: ";
cin>>celsius;
fahrenheit=1.8*celsius+32;
cout << celsius<<" Degree Celsius = "

<< fahrenheit<<" Degree Fahrenheit";
return 0;

}
പ്രോഗ്രാം 6.6 ന്റെ ഒരു മാതൃക ഓട്ടപുട്ട താഴെ കൊടുത്തിരിക്കുന്നു.

Enter the Temperature in Celsius: 37
37 Degree Celsius = 98.599998 Degree Fahrenhei
C++ ലെ ഓരോ ക്യാരക്ടര്‍ സ്ഥിരാംഗത്തിനും ൧ടവ൮കോഡ്‌ എന്നു വിളിക്കുന്നു. ഒരു

അനന്യവിലയുണ്ടെന്ന്‌ നമുക്കറിയാം. ഈ വിലകള്‍ ഇന്റിജറുകളാണ്‌. തന്നിരിക്കുന്ന ക്യാര
ക്ടറിന്റെ ASCII കോഡ്‌ കണ്ടെത്തുവാനുള്ള പ്രോഗ്രാം നമുക്ക്‌ എഴുതി നോക്കാം.

Galas 67 80} കയാേകിടിന്റെ മട വില കണ്ടെത്തുവാന്‍ വേണ്ടി

#include <iostream>
using namespace std;
int main()
{
char ch;
int asc;
cout << "Enter the character: ";
cin >> ch;
asc = ch;
cout << "ASCII value of "<<ch<<" = " << asc;
return 0;
ഒന്നാം വര്‍ഷ കമ്പ്യൂട്ടര്‍ സയന്‍സ്‌ 6 ഡാറ്റയുടെ തരങ്ങളും ഓഷറ്റേറുകളും

പ്രോ്രഗാം 6.7 ന്റെ ഒരു മാതൃക ഒട്ട്പുട്ട്‌ താഴെ കൊടുത്തിരിക്കുന്നു.

Enter the character: A
ASCII value of A = 65
¢ നമുക്ക്‌ സംഗ്രഹിക്കാം

ഡാറ്റയുടെ തരം തിരിച്ചറിയുന്നതിനും അവയുമായി ബന്ധപ്പെട്ട ക്രിയകളെ കൈകാര്യം
ചെയ്യുന്നതിനുമുള്ള ഒരു ഉപാധിയാണ്‌ ഡാറ്റ ഇനങ്ങള്‍. ഓരോ ഡാറ്റ ഇനത്തിലെ ഡാറ്റ
യ്ക്കും അതിന്റേതായ വലിപ്പവും പരിധിയുമുണ്ട്‌. വേരിയബിളുകള്‍ നിര്‍വചിക്കാന്‍ ഡാറ്റ
ഇനങ്ങള്‍ ഉപയോഗിക്കുന്നു. C++ ല്‍ വിവിധ ക്രികകള്‍ക്കായി വൃത്യസ്തതരം ഓപ്പറേറ്ററു
കള്‍ ലഭ്യമാണ്‌. ഓപ്പറേറ്ററുകള്‍ ഓപ്പറന്റുകളുമായി (ഡാറ്റ) കൂട്ടി ചേര്‍ക്കുമ്പോള്‍ പ്രയോഗ
ങ്ങള്‍ രൂപപ്പെടുന്നു. മൂന്നു തരത്തിലുള്ള പ്രയോഗങ്ങളാണുള്ളത്‌. അരിത്മാറ്റിക്‌, റിലേഷ
ണല്‍, ലോജിക്കല്‍ അരിത്മാറ്റിക്‌ പ്രയോഗങ്ങളില്‍ നിന്നും ഉദ്ദേശിച്ചു ഫലങ്ങള്‍ ലഭ്യമാകു
ന്നതിന്‌ ചില സാഹചര്യങ്ങളില്‍ തരം മാറ്റല്‍ ഉപയോഗിക്കുന്നു. ഒരു പ്രോഗ്രാമിന്റെ ഏറ്റ
വും ചെറിയ പ്രവര്‍ത്തന ഭാഗമാണ്‌ പ്രസ്താവന വേരിയബിളിനെ പ്രഖ്യാപിക്കുന്ന പ്രസ്താ
വനകള്‍. പ്രോഗ്രാമില്‍ ഒരു വേരിയബിളിലെ നിര്‍വചിക്കുകയും അവക്ക്‌ മെമ്മറി സ്ഥാനം
നീക്കി വയ്ക്കുകയും ചെയ്യുന്നു. വില നല്‍കല്‍ പ്രസ്താവന, ഇന്‍പുട്ട്‌ പ്രസ്താവനകള്‍,
ഓട്ട്‌ പുട്ട്‌ പ്രസ്താവനകള്‍ മുതലായവ കമ്പ്യൂട്ടറുകള്‍ക്ക്‌ നിര്‍ദ്ദേശങ്ങള്‍ നല്‍കാന്‍ സഹാ
യിക്കുന്നു. അരിത്മാറ്റിക്‌ വിലനല്‍കല്‍, പ്രസ്താവന, ഡിക്രിമെന്റ്‌ മുതലായ ചില പ്രത്യേക
ഓപ്പറേറ്റരുകള്‍ പ്രയോഗങ്ങളെയും പ്രസ്താവനകളെയും ചുരുക്കുകയും തന്‍മൂലം പ്രോഗ്രാ
മിന്റെ പ്രവര്‍ത്തന വേഗം കൂട്ടുകയും ചെയ്യുന്നു. C++ പ്രോഗ്രാമിന്‌ തനതായ ഒരു ഘടന
യുണ്ട്‌. പ്രോഗ്രാമുകള്‍ തയാറാക്കുമ്പോള്‍ അത്‌ തീര്‍ച്ചയായും പിന്തുടരേണ്ടതാണ്‌. പ്രോഗ്രാം
ആകര്‍ഷണീയവും മനുഷ്യര്‍ക്കിടയില്‍ വിനിമയ യോഗ്യവുമാക്കുവാന്‍ ശൈലീപരമായ
മാര്‍ഗ്ഗരേഖകള്‍ പിന്തുടരേണ്ടതാണ്‌.

ഈ അധ്യായത്തില്‍ പൂര്‍ത്തികരണത്തോടെ പഠിതാവിന്‌
൭ C++ ലെ വിവിധ ഡാറ്റ ഇനങ്ങള്‍ തിരിച്ചറിയാന്‍ സാധിക്കുന്നു.

൭ ഉചിതമായ ഡാറ്റ ഇനങ്ങളുടെ തരം മാറ്റല്‍ പട്ടികപ്പെടുത്താനും ആവശ്യമായത്‌ തിര
ഞ്ഞെടുക്കുവാനും സാധിക്കുന്നു.

© ഉചിതമായ വേരിയബിളുകള്‍ തിരഞ്ഞെടുക്കുവാന്‍ സാധിക്കുന്നു.
© വിവിധ ഓപ്പറേറ്ററുകള്‍ പരീക്ഷിച്ചു നോക്കുവാന്‍ സാധിക്കുന്നു.
൭ വിവിധ 1/0 ഓപ്പറേറ്ററുകള്‍ പ്രയോഗിക്കുവാന്‍ സാധിക്കുന്നു.

© വിവിധ പ്രയോഗങ്ങളും പ്രസ്താവനകളും എഴുതുവാന്‍ സാധിക്കുന്നു.
ഒന്നാം വര്‍ഷ കമ്പ്യൂട്ടര്‍ സയന്‍സ്‌ 6 ഡാറ്റയുടെ തരങ്ങളും ഓഷറേറ്ററുകളും

൭ ഒരു ലളിതമായ C++ പ്രോഗ്രാമിന്റെ ഘടന തിരിച്ചറിയാന്‍ സാധിക്കുന്നു.

൭ പ്രോഗ്രാമില്‍ ശൈലിപരമായ മാര്‍ഗ്ലേരേഖകളുടെ ആവശ്യകത തിരിച്ചറിയാന്‍ സാധി
ക്കുന്നു.

© Ct പ്രോഗ്രാമുകള്‍ എഴുതുവാന്‍ സാധിക്കുന്നു.

ലാബ്‌ പ്രവര്‍ത്തനം

1. ഉപയോഗക്താവിനോട്‌ തൂക്കം ഗ്രാമില്‍ നല്‍കാന്‍ ആവശ്യപ്പെടുകയും പിന്നീട്‌
തത്തുല്യ കിലോഗ്രാമായി പ്രദര്‍ശിപ്പിക്കുകയും ചെയ്യാനുളള ഒരു പ്രോഗ്രാം എഴു
തുക.

2. താഴെ പറയുന്ന പട്ടിക നിര്‍മ്മിക്കാനുള്ള പ്രോഗ്രാം എഴുതുക

2013 100%
2012 99.9%
2011 95.5%
2010 90.81%
2009 85%

ഓട്ട്പുട്ടിനായി ഒറ്റ പ്രസ്താവന ഉപയോഗിക്കുക.
(സൂചന: \N ഉം \t ഉം ഉപയോഗിക്കുക)

4. നിങ്ങളുടെ ഉയരം മീറ്ററിലും സെന്റീമീറ്ററിലും ആവശ്യപ്പെടുകയും അതിനെ ഫീറ്റിലും
ഇഞ്ചിലുമായി പരിവര്‍ത്തനം ചെയ്യുന്നതിലുള്ള ഒരു ചെറിയ പ്രോ്രഗാം എഴുതുക.
(1 ഫൂട്ട്‌ -12 ഇഞ്ചി, 1 ഇഞ്ച്‌ = 2.54 cm)

5. വെറും പലിശയും കൂട്ടുപലിശയും കണക്കാക്കുന്നതിനുള്ള പ്രോഗ്രാം എഴുതുക.

6. പ്രോഗ്രാം എഴുതുക : (1) തന്നിരിക്കുന്ന അക്കത്തിന്റെ ASCH കോഡ്‌ പ്രിന്റ്‌ ചെയ്യാന്‍,
(ii) ബാക്ക്‌ സ്പേസിന്റെ ASCII കോഡ്‌ പ്രിന്റ്‌ ചെയ്യാന്‍. (സൂചന: ബാക്ക്‌ സ്പേസിന്റെ
എസ്‌കേപ്പ്‌ സീക്വന്‍സ്‌ ഒരു ഇന്റിജര്‍ വേരിയബിളില്‍ സംഭരിക്കുക)

2. സമയം സെക്കന്റുകളായി സ്വീകരിച്ച്‌ hrs: MINS: ടേ രൂപത്തിലേക്ക്‌ പരിവര്‍ത്തനം
ചെയ്യാനുള്ള ഒരു പ്രോഗ്രാം എഴുതുക. ഉദാഹരണത്തിന്‌, ഇന്‍പുട്ട്‌ 3700 സെക്കന്റു
കള്‍ ആണെങ്കില്‍ ഒട്ട്പുട്ട്‌ Lhr: 1 min: 40 ടംടേഎന്നായിരിക്കും.

J aoqjeo ചോദങ ॥॥॥॥॥॥॥॥॥॥॥॥॥॥॥॥॥

ഹ്രസ്വ ചോദ്യങ്ങള്‍

1. ഡാറ്റ ഇനങ്ങള്‍ എന്നാലെന്ത്‌? ലെ എല്ലാ മുന്‍നിര്‍മ്മിത ഡാറ്റ ഇനങ്ങളും എഴു
തുക.

2. സ്ഥിരാംഗം എന്നാലെന്ത്‌?
ഒന്നാം വര്‍ഷ കമ്പ്യൂട്ടര്‍ സയന്‍സ്‌ 6 ഡാറ്റയുടെ തരങ്ങളും ഓഷറ്റേറുകളും

പ്രവര്‍ത്തന സമയത്തെ വേരിയബിളുകളുടെ പ്രാരംഭ വിലനല്‍കല്‍ (dynamic
initialisation) എന്നാല്‍ എന്ത്‌?

ഇനം മാറ്റല്‍ എന്നാലെന്ത്‌?

പ്രഖ്യാപന പ്രസ്താവനയുടെ ഉദ്ദേശമെന്ത്‌?

പ്രോഗ്രാമുകളില്‍ cin, 0േ/എന്നിവ ഉപയോഗിക്കുന്നതിനായി ഉള്‍പ്പെടുത്തേണ്ട
ഹെഡര്‍ ഫയലിന്റെ പേര്‍ എഴുതുക.

"മാം" ഇന്‍പുട്ട്‌ ഓപ്പറേറ്ററിനെയും "<<" ഓട്ട്‌ പൂട്ട്‌ ഓപ്പറേറ്ററിനെയും എന്താണ്‌ വിളി
ക്കുന്നത്‌?

a (i) float ഉം (ii) int ഉം ആയാല്‍ a = 5/3ന്റെ ഫലമെന്തായിരിക്കും?

പ്രാരംഭത്തില്‍ 1 എന്നത്‌ 22 ഉം P= 390 ആണെങ്കില്‍ P= P++ + ++i യുടെ വില
എന്തായിരിക്കും?

പ്രാരംഭത്തില്‍ | -5 ആണെങ്കില്‍ താഴെ കാണുന്ന പദ്പ്പയോഗങ്ങളുടെ വില കണ
ക്കാക്കുക.

(i) (5*++4j)%6 (ii) (5*j++)%6

താഴെ പറയുന്ന പദപ്രയോഗങ്ങളുടെ പ്രവര്‍ത്തന ക്രമം എന്തായിരിക്കും.
0-6 (ii) s+10<p-2+2*q

പ്രാരംഭത്തില്‍ ൧൧൭ എന്നത്‌ 6 ആണെങ്കില്‍ താഴെ കാണുന്നവയുടെ ഫലം എന്താ
യിരിക്കും

(i) cout <<ans = 8 ; (ii) cout << ans ==

ലഘു വിവരണാത്മകം

1.

2.

3.

വേരിയബിള്‍ എന്നാലെന്ത്‌* അതുമായി ബന്ധപ്പെട്ട രണ്ടു വിലകള്‍ എഴുതുക.
C++ എത്ര തരത്തില്‍ വേരിയബിളുകളെ പ്രഖ്യാപിക്കാം?

C+t ലെ വേരിയബിളിന്റെ പ്രഖ്യാപനത്തില്‍ ഇനം മാറ്റല്‍ ഉപയോഗിക്കുന്നതിന്റെ
അനന്തരഫമലമെന്ത്‌?

‘const’ കീവേര്‍ഡിന്റെ പങ്കെന്താണ്‌?

വര്‍ദ്ധനവ്‌ പ്രവര്‍ത്തനത്തില്‍ എങ്ങനെയാണ്‌ പ്രീഫിക്സ്‌ രൂപം പോസ്റ്റഫിക്സ്‌
രൂപത്തില്‍ നിന്നും വൃത്യാസപ്പെട്ടിരിക്കുന്നത്‌ എന്ന്‌ വിവരിക്കുക.

SIZCOF ഓപ്പറേറ്റര്‍ നിര്‍വഹിക്കുന്ന പ്രവര്‍ത്തനത്തെപറ്റി എഴുതും.

ഇനം മാറ്റലിന്റെ രണ്ടു രീതികളെ പറ്റി വിവരിക്കുക.

ഒരു പ്രോ്രഗാമില്‍ main() ഇല്ലെങ്കില്‍ എന്ത്‌ സംഭവിക്കും?

താഴെ കാണുന്ന കോഡ്‌ ശകലത്തിലുള്ള തെറ്റുകള്‍ തിരിച്ചറിയുക.
൫) (5) ame വര്‍ഷ കമ്പ്യൂട്ടര്‍ സയന്‍സ്‌ 6 ഡാറ്റയുടെ തരങ്ങളും ഓകഷറ്ററുകളും

(a) int main()

{ cout << "Enter two numbers"

cin >> num >> auto

float area = Length * breadth ; }
(b)  #include <iostream>

using namespace std

void Main()

{ inta, b

cin <<a <<b

max=(a > b) a:b

cout>max

}

12. താഴെ കാണുന്ന C++ പ്രസ്താവനകളില്‍ തെറ്റുകളുണ്ടെങ്കില്‍ കണ്ടെത്തുക.

(0) cout<< "a=" a; (൭) cin >> "\n" >> y ;
(ii) m=5,n=12;015 (vi) cout >> \n "abe"
(iil) cout << "x" j <<x; (vil) a=bte
(iv) cin >> y (vill) break = x
13. റിലേഷണല്‍ ഓപ്പറേറ്ററുകളുടെ കര്‍ത്തവ്യമെന്ത്‌*? == Qo = ഉം തമ്മില്‍ വേര്‍തിരി
ക്കുക.

14. ഒരു പ്രോഗ്രാമിന്റെ ശരഹണവും വായനാക്ഷമതയും വര്‍ദ്ധിപ്പിക്കാന്‍ കമന്റുകള്‍ ഉപ
കരിക്കുന്നു. ഈ പ്രസ്താവന ഉദാഹരണസഹിതം സമര്‍ഥിക്കുക.

വിവരണാത്മകം

1. C++ ലെ ഓപ്പറേറ്ററുകള്‍ വിശദ്ധമായി വിവരിക്കുക.

2. C++ ലെ വിവിധതരം പദപ്രയോഗങ്ങളും ഇനം മാറ്റല്‍ രീതികളും വിശദ്ധമായി
വിവരിക്കുക.

3. അരിതമറ്റിക്‌ വിലനല്‍കല്‍ ഓപ്പറേറ്ററിന്റെ ര്രവര്‍ത്തനം എഴുതുക. ഉദാഹരണ
സഹിതം എല്ലാ അരിത്മറ്റിക്‌ വിലനല്‍കല്‍ ഓപ്പറേറ്ററുകളും വിവരിക്കുക.
5) ആ (5) ഒന്നാം വര്‍ഷ കമ്പ്യൂട്ടര്‍ സയന്‍സ്‌ പദാവലി

പദാവലി

1 ന്റെ പൂരകം

2 ന്റെ പൂരകം

അംഗീകൃത തത്വങ്ങള്‍
അനന്യത നിയമം
അഷ്ട്സംഖ്യ

അസംബ്ലി ദാഷ

അസ്ഥിര ദശാംശ സംഖ്യ ലിറ്ററല്‍
അസ്ഥിര പ്രാഥമിക മെമറി
ആധാരം

ആസ്കി

ഉടം നല്‍കല്‍

ഇസ്കി

ഉപയോക്തു നിര്‍വചിക്കുന്ന
ഏക ഉദ്ധരണി (ഏക സൂചകം)
ക്രമ നിയമം

ഗണിതം

ചിഹ്നവും മൂല്യവും
തലക്കെട്ട്‌

തനത്‌

ദരസംഖ്യാ സമ്പ്രദായം
ദ്വയസംഖ്യ

ദ്ധൈത സിദ്ധാന്തം

ദ്വിതീയ സംഭരണം

നല്‍കിയ ഇടം തിരികെ എടുക്കല്‍

1’s Complement

2’s Complement
postulates

identtiy law

octal number
assembly language
floating point numeric literal/floating point literal
volatile primary memory
base

ASCII

allocation

ISCII

user-defined

single quote
commutative law
arithmetic

sign and magnitude
header

default

decimal number system
binary number
principle of duality
secondary storage

de-allocation
നിര്‍ദ്ദേശം വ്യാഖ്യാനിക്കുക.
പദപ്രയോഗം

പരിവര്‍ത്തനം

പൂരകം

പൂരക നിയമം
പൂര്‍ണസംഖ്യ

പ്രതിനിധാനം

പ്രാഥമിക സംദരണം
പ്രൊസസ്സ്‌ കൈകാര്യം ചെയ്യുക
പ്രസ്താവന

ഫങ്ഷന്‍ നാലം

ഫയല്‍ നാഥം

ഫയല്‍ കൈകാര്യം ചെയ്യുക
ഫ്‌ളോട്ടിങ്‌ പോയിന്റ്‌ നമ്പര്‍
ഭാഷ പ്രൊസസ്ത്റര്‍

ദഭാരതിക ഘടകങ്ങള്‍
ബീജഗണിതം

മൂലസംഖ്യ

മെമറി കൈകാര്യം ചെയ്യുക
മെമറി സ്ഥാനം

ട്രൂത്ത്‌ ടേബിര്‍

യുക്തി വിചിന്തനം (ലോജിക്കല്‍ റീസണിംഗി)

യുക്തിപരമായ നിഷേധം
യന്ത്ര ദാഷ

വര്‍ഗപുരക നിയമം
വര്‍ഗസമ നിയം

വിതരണ നിയം

ഒന്നാം വര്‍ഷ കമ്പ്യൂട്ടര്‍ സയന്‍സ്‌

command interpretation
expression
conversion
complement
complementary law
integer
representation
primary storage
process management
statement

function name

file name

file management
floating point number
language processor
physcial component
algebra

radix

memory management
memory location
truth table

logical reasoning
logical negation
machine language
involution law
idempotent law

distributive law

പദാവലി
വേരിയബിള്‍

ശ്രേണി

സംയോജന നിയഥം
സിദ്ധാന്തം

സ്ഥാന വില

സ്ഥാനീയ സംഖ്യ
സ്വാംരീകരണ നിയമം
സ്വതന്ത്ര ഓണ്‍ സോഴ്‌സ്‌

സുസ്ഥിര ദ്വിതീയ മെമറി

variable

sequence
associative law
theorem

weight

positional number
absorption law

free and open source

non-volatile secondary memory
ഹയര്‍ സെക്കന്ററി കോഴ്‌സ്‌

I)

oe

നി്‌
പൊതുവിദ്യാഭ്യാസ വകുല്‌
സംസ്ഥാന വിദ്യാഭ്യസ ഗവേഷണ പരിശീലന സമിതി (SCERT); കേരളം
2019
ദേശീയഗാനം

ജനഗണമന അധിനായക ജയഹേ

ഭാരത ഭാഗ്യവിധാതാ,
പഞ്ചാബസിന്ധു ഗുജറാത്ത മറാഠാ
ദ്രാവിഡ ഉത്ക്കല ബംഗാ,
വിന്ധൃഹിമാചല യമുനാഗംഗാ,
ഉച്ഛല ജലധിതരംഗാ,
തവശുഭനാമേ ജാഗേ,
തവശുഭ ആശിഷ മാഗേ,
ഗാഹേ തവ ജയ ഗാഥാ
ജനഗണമംഗലദായക ജയഹേ
ഭാരത ഭാഗ്യവിധാതാ
ജയഹേ, ജയഹേ, ജയഹേ,

ജയ ജയ ജയ ജയഹേ!

പ്രതിഇഞ
ഇന്ത്യ എന്റെ രാജ്യമാണ്‌. എല്ലാ ഇന്ത്യക്കാരും എന്റെ
സഹോദരീ സഹോദരന്മാരാണ്‌.
ഞാന്‍ എന്റെ രാജ്യത്തെ സ്‌നേഹിക്കുന്നു;
സമ്പൂര്‍ണവും വൈവിധ്ൃയപൂര്‍ണവുമായ അതിന്റെ
പാരമ്പര്യത്തില്‍ ഞാന്‍ അഭിമാനം കൊള്ളുന്നു.
ഞാന്‍ എന്റെ മാതാപിതാക്കളെയും ഗുരുക്കന്മാരെയും
മുതിര്‍ന്നവരെയും ബഹുമാനിക്കും.

ഞാന്‍ എന്റെ രാജ്യത്തിന്റെയും എന്റെ നാട്ടുകാരു
ടെയും ക്ഷേമത്തിനും ഐശ്വര്യത്തിനും വേണ്ടി
പ്രയത്നിക്കും.

ത്ഇമാഖം

ഏതു വിജ്ഞാനവദും മാതൃഭാഘയില്‍ പഠിക്കാനും പ്രകാശനം Oalqpoadgo സാധി

ക്കം. അതിനുള്ള അവസരം പഠിതാക്കള്‍ക്ക്‌ ഒരുക്കേണ്ടത്‌; ഏതൊരു പഠന സന്്ര
ദധായത്തിന്റെയറും അനിവാര്യതയാണ്‌. അതിന്റെ തുടക്കമെന്ന നിലയ്ക്കാണ്‌
ഹയര്‍സെക്കന്ററി തലത്തില്‍ ഭാഘേതര വിഷയങ്ങളിലെ പഠഠപറുസ്തകങ്ങള്‍ മലയാ
ത്തില്‍ ച്രസിദ്ധീകരിക്കടൂന്നത്‌.

മാതൃഭാഘയിലദുടെയുള്ള വിദ്യാഭ്യാസം, ജ്ഞാനസമ്പാദനത്തിനമുള്ള സൂഗമമ്ധാര്‍ഗം
എന്നതി നോടൊഷം സാംസ്കാരികത്തനിമയറുടെ തിരിച്ചറിയല്‍ കൂടിയാണ്‌. അതു
കൊണ്ടാണ്‌ വികസിതരാജ്യങ്ങള്‍ മാത്ൃഭാഘയെ മദുഖ്യബോധന മാധ്യമമായി സ്വീക
രിച്ഛിരിക്കുന്നത്‌: ഇന്ത്യയിലാകട്ടെ, ദേശീയതലത്തിലദുള്ള പ്രധാന ചരീക്ഷകളളെല്ലാം
പ്രാദേശിക ഭാഘകളില്‍ക്കമൂടി നടത്തുന്നതിനുള്ള സംവിധാനവും ഉണ്ടായി വരിക
യാണ്‌. ഇയയൊരു സാഹചര്യത്തില്‍ നമ്മുടെ കുട്ടികളും ഷാതൃഭാഘയറുടെ ശക്തി
സയന്ദര്യങ്ങള്‍ തിരിച്ചറിഞ്ഞ്‌ വിവിധ വിഘയങ്ങളില്‍ ജഞാനധിര്‍മിതിയില്‍ ഏര്‍ഖെടെ
ണ്ടതുണ്ട്‌. അതിന്‌ അവരെ സജ്ജരാക്കദുകയാണ്‌ ഈ പാഠപദുസ്തകങ്ങളുടെ മുഖ്യ
ലക്ഷ്യം.

പരിഭാഘകെടുത്തിയ പുസ്തകങ്ങളില്‍ അതത്‌ വിഘയങ്ങളിലെ സാങ്കേതിക പദങ്ങള്‍
പരമാവധി മലയാളത്തിലാക്കിയിട്ടുണ്ട്‌. നമ്മുടെ ഭാഘയില്‍ ചിരപരിചിതമായ Mogae”
പദങ്ങളെ അതേപടി സിികരിച്ചിടുകമുണ്ട്‌. വിവര്‍ത്തനത്തിന്‌ തീര്‍ത്തും വഴങ്ങാത്ത
പദങ്ങളെ അതേരീതിയില്‍ തന്നെ ഉപയോഗിച്ചിരിക്കുന്നു. മാത്ൃഭാഘയില്‍ ചഠിക്കൂ
ന്നവര്‍ക്ക്‌ ആശയഗ്രഹണം സുഗമമാക്കുന്ന വിധത്തിലാണ്‌ പാഠച്ുസ്തകരചന നട
ത്തിയിരിക്കുന്നത്‌. GOEMIOSINo മലയാളഭാഘയറദുടെ വളര്‍ച്ചയ്ക്കും ഈ
പ്രവര്‍ത്തനം സഹായകമാകുമെന്ന്‌ കരുതുന്നു.

പാഠപദുസ്തകവിവര്‍ത്തന രംഗത്ത്‌ നമ്മുടെ രാജ്യത്ത്‌ നടന്ന വലിയൊരു കാല്‍വെ
MOM ഇത്‌. പ്രഥമ സംരംഭമെന്നനിലയില്‍ പല പരിമിതികളും പരിഭാഘയില്‍
വന്നിട്ടുണ്ടാകാം. ക്ലാസ്മുറിയില്‍ പ്രയോഗത്തില്‍ വരുമ്പോഴാണ്‌” അവയെല്ലാം
കടൂടുതല്‍ ബോധ്യഷെടുക. തുടര്‍ന്ന്‌ വരുന്ന ഘട്ടങ്ങളില്‍ അവയൊക്കെ പരിഹരി
ക്കുന്നതിന്‌ എല്ലാ അഭ്യുദയകാംക്ഷികളില്‍ നീന്നും വിശിഷ്യ അധ്യാപകര്‍, വിദ്യാര്‍ത്ഥി
കള്‍ എന്നിവരില്‍ നിന്നും അഭിപ്രായങ്ങളും നിര്‍ദേശങ്ങളും പ്രതീക്ഷിക്കുന്നു.

ഡോ. 022. പ്രസാദ്‌
ഡയറക്ടര്‍,

എസ്‌.സി.ഇ.ആര്‍.ടി. കേരളം

Ga)

പാഠപുസ്തക നിര്‍മാണ സമിതി

ശ്രീ. ജോയ്‌ ജോണ്‍

എച്ച്‌.എസ്റ്‌ എസ്റ്്‌.ടി.,

സെന്റ്‌ ജോസഫ്‌ എച്ച്‌.എസ്റ്റ്‌ എസ്റ്റ്‌. തിരുവനന്തപുരം
, വിനോദ്‌ വി.
ച്ച.എസ്റ്റ്‌ എസ്ററ്‌.ടി., എന്‍.എസ്റ്റ്‌ എസ്സ്‌
ച്ച്‌.എസ്റ്റ്‌ എസ്റ്റ്‌ ,പ്രാകുളം, കൊല്ലം

, എ. എസ്‌. ഇസ്മൈല്‍

ച്ച്‌ എസ്ററ്‌.എസ്്‌. ടി., പി.ജെ.എം.എസ്‌

ച്ച്‌. oO) OQ), കണ്ദമ്ലാന്‍കടവ്‌, തൃശ്ശൂര്‍
ശ്രീ. റോയ്‌ ജോണ്‍
പിച്ച്‌. എസ്ററ്‌. എസ്സ്‌, ടി., സെന്റ്‌ അലോഷ്യസ്‌
എച്ച്‌.എസ്ററ്‌.എസ്ററ്‌., ഇല്‍തുരുത്ത്‌, തൃശ്ശൂര്‍

S835 335

(രീ, പ്രശാന്ത്‌ പി.എം
എച്ച്‌.എസ്റ്‌.എസ്റ്റ്‌.ി.,
സെന്റ്‌ ജോസഫ്‌ ബോയ്സ്‌ എച്ച്‌ എസ്റ്‌,എസ്റ്‌,,
കോഴിക്കോട്‌
(രീ. സുനില്‍ കാര്യത്താന്‍
എച്ച്‌. എസ്സ്‌ .എസ്റ്്‌.ടി., ൫൨. ബ്രിനന്‍ എന്‍.എസ്റ്‌.എസ്റ്്‌,
തലശേരി

(രീ. രാജ്മോഹന്‍ സി.
എച്ച്‌.എസ്‌ എസ്ററ്‌.ടി., നവമുകുദ എച്ച്‌.എസ്‌.എസ്‌.
തിരുനാവായ, മലദുറം

രരീ. ടി. മുഹമദ്ദ്‌ സലീം

എച്ച്‌. എസ്സ്‌ എസ്ററ്‌, ടി., ഓറിയന്റല്‍ of of oH എസ്റ്‌,,
തിരുവങ്ങാടി, മലഭുറം.

ഡോ. ലജീഷ്‌ വി, എല്‍
അസ്സി. പ്രൊഫ. ഡിഷാര്‍ട്ട്മെന്റ്‌ ഓഫ്‌
കമ്പ്യൂട്ട സയന്‍സ്‌, കോഴിക്കോട്‌ സര്‍വകലാശാല

ശ്രീ. മധു വി.ടി.
ഡയറക്ടര്‍, കമ്പ്യൂട്ടര്‍ സെന്റര്‍, സര്‍വകലാശാല
കോഴിക്കോട്‌.

ഡോ. സുഷീല്‍ കുമാര്‍

അസ്സി. പ്രൊഫ. ഡിചാര്‍ട്ട്മെന്റ്‌ ഓഫ്‌ ഉംഗ്ലീഷ്‌,
ഡി.ബി.കോളജ്‌, രാസ്താംകോട്ട

ഡോ. വിനായകുമാരന്‍ നായര്‍ എന്‍.

അസ്സി. കമാന്‍ഡന്റ്‌, ഹൈ. ടെക്‌ സെല്‍, പോലീസ്‌
ഹെഡ്‌ കോര്‍ട്ടേര്‍സ്‌, തിരുവനന്തപുരം

ആര്‍ട്ട്‌

ഡോ. മധു എസ്റ്റ്‌. നായര്‍

അസ്സി. പ്രൊഫ. ഡിഷാര്‍ട്ടമെന്റ്‌ ഓഫ്‌

കമ്പ്യൂട്ടര്‍ സയന്‍സ്‌, കേരള സര്‍വകലാശാല

ഡോ. ബിനു പി.ചാക്കോ

അസോ. പ്രൊഫ. ഡിഭാര്‍ട്ടമെന്റ്‌ ഓഫ്‌

കമ്പ്യൂട്ടര്‍ സയന്‍സ്‌ , പ്രജ്യോതി നികേതന്‍ കോളജ്‌,
പുതുക്കാട്‌, തൃക്ശൂര്‍

ഡോ. ദീപ എല്‍.സി.

അസ്സി. പ്രൊഫ. ഡികാര്‍ട്ട്മെന്റ്‌ ഓഫ്‌ ഉംഗ്ലീഷ്‌,
ഗവ.വിമന്‍സ്‌ കോളജ്‌, തിരുവനന്തപുരം

ഡോ. കബീര്‍, വി

അസ്സി. പ്രൊഫ. & ഹെഡ്‌, ഡിഭാര്‍ട്ട്മെന്റ്‌ ഓഫ്‌
കമ്പ്യൂട്ടര്‍ സയന്‍സ്‌, ഫറൂക്ക്‌ കോളേജ്‌, കോഴിക്കോട്‌

സുധീര്‍ വൈ

[പലി

വിനിത്‌ വി

അക്കാദമിക കോര്‍ഡിനേറ്റര്‍

ഡോ. മീന എസ്‌,
അസ്സി. പ്രൊഫ, എസ്‌.സി.ഇ.ആര്‍.ടി

പാഠപുസ്തക പരിഭാഷ സമിതി
(മലയാളം)

ഡോ. ബിനു പി ചാക്കോ
അസോസിയേറ്റ്‌ പ്രൊഫസര്‍, ഡിചാര്‍ട്ടമെന്റ്‌ ഓഫ്‌ കമ്പ്യൂട്ടര്‍ സയന്‍സ്‌
പ്രജോതി നികേതന്‍ കോളേജ്‌, പുതുക്കാട്‌
ഡോ. ഗ്ലാഡ്സ്സൂണ്‍ എസ്‌. രാജ്‌
അസിസ്ത്ന്റ്‌ പ്രൊഫസര്‍ & ഹെഡ്‌, ഡിഷാര്‍ട്ട്മെന്റ്‌ ഓഫ്‌ കമ്പ്യൂട്ടര്‍ സയന്‍സ്‌
൫൨. കോളേജ്‌, നെടുമങ്ങാട്‌
ഡോ. എസ്‌.നിരിഷ്കുമാര്‍
അസിസ്റ്റന്റ്‌ പ്രൊഫസര്‍, ലയാള വിദാനം
ര്രീ.കേരളവര്‍മ കോളേജ്‌, തുരൂര്‍
ഡോ. പ്രിയ ആര്‍
അസിസ്തന്റ്‌ പ്രൊഫസര്‍ & ഹെഡ്‌, ഡിഷാര്‍ട്ടമെന്റ്‌ ഓഫ്‌ കമ്പ്യൂട്ടര്‍ സയന്‍സ്‌
OA. കോളേജ്‌ കാര്യവട്ടം, തിരുവനന്തപുരം
ആദര്‍്‌. വി.കെ
സീനിയര്‍ മാനേജര്‍ (ടെക്നിക്കല്‍), യുണിയന്‍ ബാങ്ക്‌ ഓഫ്‌ ഇന്ത്യ

ര്രീ. അരുണ്‍ പി മാത്യു ശ്രീ. സുനില്‍കുമാര്‍

എച്ച്‌.എസ്‌.എസ്‌ ടി, എം.ടി.എം.എച്ച്‌ എസ്‌ എസ്‌ എച്ച്‌.എസ്‌.എസ്‌.ടി, ൪൨. എച്ച്‌.എസ്‌.എസ്‌.
പത്തനംത്തിട്ട തേമ്പാംമുട, തിരുവനന്തപുരം

ശ്രീ. ഹരി കെ ത്രീ. വിനയചന്ദ്രന്‍ സി

എച്ച്‌.എസ്‌. എസ്സ്‌. ടി, ൫൨. വി. എച്ച്‌.എസ്‌.എസ്‌. എച്ച്‌. എസ്‌.എസ്‌.ടി, വി.ജി.എച്ച്‌ എസ്‌.എസ്‌.
കടഷുറം, ചാവക്കാട്‌, തൃരൂര്‍ അംമ്പികോദയം എച്ച്‌.എസ്‌.എസ്‌

(രീ. മുഹമ്മദ്‌ സര്‍ഫറാസ്‌ തെടിയവിള, കൊല്ലം

എച്ച്‌.എസ്‌.എസ്‌ ടി, സി.എച്ച്‌, എസ്‌.എസ്‌. നെല്ലിപുഴ (രീ. ഷിജു ആര്‍.

(രീ. ഷിനില്‍. പി.പി എച്ച്‌ av ope sl,
എച്ച്‌.എസ്‌.എസ്‌ ടി, പാലോറ എച്ച്‌ എസ്‌.എസ്‌ ജി.എച്ച്‌.എസ്‌.എസ്‌. വടകര, പുത്തൂര്‍
ഉളളിരേരി, കോഴിക്കോട്‌

അക്കാദമിക കോര്‍ഡിനേറ്റര്‍

ശ്രീമതി റിയാന അന്‍സാരി
റിസര്‍ച്ച്‌ ഓഫീസര്‍, എസ്‌.സി.ഇ.ആര്‍.ടി

1. സ്ദ്രക്ചറും പോയിന്റ്റും 9
2. ഒബ്ജക്റ്റ്‌ ഓറിയന്റഡ്‌ പ്രോഗ്രാമിങ്ങിന്റെ തത്വങ്ങള്‍ 48
3. ഡാറ്റസ്ട്രക്ചറുകളും പ്രവര്‍ത്തനങ്ങളും 71

4, വെബ്‌ സാങ്കേതികവിദ്യ 101
നി പെയോഥിലുള വെബ്‌

6. ജാവാസ്ക്രിപ്റ്റ്‌ ഉപയോഗിച്ചുള്ള ക്ലൈന്റ്‌ സൈഡ്‌ സ്ക്രിച്റ്റിങ്‌ 206

7ം വെബ്ഹോസ്റ്റിങ്‌ 254

C5T9D2

ചാഠപുസ്തകത്തില്‍ ഉപയോഗിച്ചിരിക്കുന്ന സൂചനകള്‍

നമുക്കു ചെയ്യാം

നിങ്ങളുടെ പുരോഗതി അറിയുക

ഇന്‍ഫര്‍മേഷന്‍ ബോക്സ്‌

നമുക്കു പരിരിലിക്കാം

നമുക്കു സംഗ്രഹിക്കാം

സ്ദ്രക്ചറും പോയിന്ററും
൭

പ്രധാന പഠനനേട്ടങ്ങ

DO അധ്ധാതത്ത?മ്റെ പഠനം പുര്ത്ത?യകുന്ന
തോടെ പഠിതാവ്‌ ആര്‍ജിക്കേട പറനനേടങ്ങശി
൭ ഉപയോക്യാവിനാല്‍ നിര്‍വചിക്കുന്ന (user
defined) ഡാറ്റ ഇനത്തിന്റെ ആവര്യകത, സ്ട്രക്ചര്‍
ഉപയോഗിച്ചു വിവിധ ഉനം ഡാറ്റ ഏകോപിരി
ക്കുന്നതിന്റെ സാധ്യത എന്നിവ തിരിച്ചറിയുക.
സ്ര്രക്ചര്‍ ഡാറ്റ ഉനങ്ങള്‍ നിര്‍മിച്ച്‌ അതിലെ
അംഭങ്ങളെ സൂചിദിക്കുക.

അടിസ്ഥാന ഡാറ്റകളെയും ഏകോപിത ഡാറ്റക
ളെയും പ്രതിനിധീകരിക്കുന്നതില്‍ നെസ്ത്ഡ്‌
സ്ര്രക്ചറിന്റെ ഉപയോഗം മനസിലാക്കുക.
ദൈനംദിന ജീവിതത്തിലെ പ്രശ്നങ്ങള്‍ പരിഹ
രിക്കാന്‍ സ്ട്രക്ചര്‍ ഉപയോരിച്ചുള്ള C++ പ്രോ
ര്രാമുകള്‍ നിര്‍മിക്കുക.

പോയിന്റര്‍ എന്ന ആരയവും, &, * എന്നീ ഓല
േറററുകളുടെ ഉപയോരവും വിവരിക്കുക.
രണ്ട്‌ തരം മെമ്മറി നീക്കിവയ്ക്ലുകള്‍ താരതമ്യം
ചെയ്യുക. ഡൈനാമിക്‌ 6160903480 new,
delete എന്നി ഓഷറ്റുറുകളുടെ ഉപയോനം
മനസ്സിലാക്കുക.

പോയിന്ററുകര്‍ക്കു മേലുള്ള പ്രവര്‍ത്തനങ്ങള്‍
ഉദാഹരണസഹിതം വിവരിക്കുകയും അതിന്റെ
ടഒെട്ട്പൂട്ട്‌ നിര്‍വചിക്കുകയും ചെയ്യുക.
പോയിന്ററും അറെയും തമ്മിലുള്ള ബന്ധം
സമര്‍ഥിക്കുക.

സ്ട്രിങ്ങുകള്‍ കൈകാര്യം ചെയ്യുന്നതില്‍ പോയി
MOOG ഉപയോഗം അറിയുക.

സ്വയം സുചിത (self referential) സ്്രക്ചറിന്റെ
ആശയം വിവരിക്കുക.

വിവിധ പ്രശ്നങ്ങള്‍ നിര്‍ധാരണം ചെയ്യാനുള്ള
C++ പ്രോഗ്രാമുകള്‍ പരിചയപ്പെട്ടിട്ടുണ്ടല്ലോ.
മിക്ക വാറും എല്ലാ (്പശ്‌നങ്ങളിലും ഡാറ്റ
പ്രോസസിങ്‌ ആവശ്യമായി വരാറുണ്ട്‌. അടി
സ്ഥാന ഡാറ്റ വിഭാഗത്തിലുള്ള പൂര്‍ണസം
ഖ്യകള്‍ (integers), ദശാംശ സംഖൃകള്‍
(fractional numbets) കാരക്ടറുകള്‍, സ്ട്രിംഗു
കള്‍ എന്നിവയെക്കുറിച്ച്‌ നാം കഴിഞ്ഞ വര്‍ഷം
മനസ്സിലാക്കി. ഈ ഡാറ്റകളെ സൂചിപ്പിക്കുന്ന
തിന്‌ വേരിയബിളുകള്‍ ഉപയോഗിക്കുകയും
ഇത്തരം വേരിയബിളുകളെ C++ ലെ അടി
സ്ഥാന ഡാറ്റ ഇനങ്ങള്‍ ഉപയോഗിച്ച്‌ സ്ഥാപി
ക്കുകയും ചെയ്തു. എല്ലാ ഡാറ്റയും അടി
സ്ഥാന വിഭാഗത്തില്‍ ഉള്‍പ്പെടുന്നില്ല എന്നു
നമുക്കറിയാം. ചിലത്‌ വിവിധതരം അടിസ്ഥാന
ഡാറ്റ വിഭാഗങ്ങളുടെ ഏകോപനത്തിലൂടെ
യാണ്‌ നിര്‍മിക്കപ്പെടുന്നത്‌. എല്ലാത്തരം ഡാറ്റ
കളെയും ഉള്‍ക്കൊള്ളുന്ന തരത്തില്‍ ഡാറ്റ ഇന
ങ്ങളെ നിര്‍ണയിക്കാന്‍ ഒരു പ്രോഗ്രാമിങ്‌
ഭാഷയ്ക്കും സാധിക്കില്ല. അതുകൊണ്ടുതന്നെ
പ്രോഗ്രാമിങ്‌ ഭാഷകളില്‍ ഉപയോക്താവിന്റെ
ആവശ്യമനുസരിച്ചു പുതിയ ഡാറ്റ ഇനങ്ങള്‍
നിര്‍മിക്കാനുള്ള സൌകര്യം അനുവദിച്ചിട്ടുണ്ട്‌.
ഈ അധ്യായത്തില്‍ നമ്മള്‍ അത്തരത്തിലുള്ള
ഉപയോക്തൃ നിര്‍വചിത ഡാറ്റ ഇനം (user-
defined data type) ആയ സ്രടക്ചര്‍
കമ്പ്യൂട്ടര്‍ സയന്‍സ്‌ - XII

(structure) എന്ന ഡാറ്റ ഇനത്തെക്കുറിച്ച്‌ ചര്‍ച്ച ചെയ്യുന്നു. മറ്റൊരുതരം വേരിയബിളായ
പോയിന്ററിനെ (pomter) കുറിച്ചും ഈ അധ്യായത്തില്‍ പരിചയപ്പെടാം. പോയിന്റര്‍
എന്ന ആശയം C, C++ എന്നീ ഭാഷകളിലെ പ്രത്യേകതയാണ്‌. ഇത്‌ മെമ്മറി സ്ഥാന
ങ്ങളെ നേരിട്ട്‌ അതിന്റെ വിലാസത്തിലൂടെ (Address) പ്രാപ്യമാക്കുകയും അതുവഴി
പ്രോ്ഗാം നടപ്പിലാക്കല്‍ (Execution) വേഗത്തിലാക്കുകയും ചെയ്യുന്നു. ഈ ആശയം
നന്നായി മനസ്സിലാക്കിയാല്‍ നമുക്ക്‌ സിസ്റ്റം ലെവല്‍ (system level) പ്രോഗ്രാമുകളും
ഡാറ്റാ സ്ദ്രക്ചര്‍ ആപ്ലിക്കേഷനുകളും എളുപ്പത്തില്‍ തയാറാക്കാം.

കഴിഞ്ഞ വര്‍ഷം നിങ്ങള്‍ GNU കമ്പയിലര്‍ കളക്ഷന്‍ (GCC) ഉള്‍ക്കൊള്ളുന്ന ജിനി
IDE ewo ടര്‍ബോ €- IDE യോ C++ പ്രോഗ്രാം നിര്‍മിക്കാന്‍ ഉപയോഗിച്ചിരിക്കാം.
ഈ അധ്യായത്തില്‍ C++ പ്രോഗ്രാമുകള്‍ പൂര്‍ണമായും GCC ഉപയോഗിച്ച്‌ ചെയ്യാ
വുന്ന തരത്തിലാണ്‌ അവതരിപ്പിച്ചിട്ടുള്ളത്‌.

1.1 സ്രക്ചറുകള്‍ (Structures)

വിദ്യാര്‍ഥികള്‍, തൊഴിലാളികള്‍, ഉദ്യോഗസ്ഥര്‍ തുടങ്ങിയവര്‍ അവരവരുടെ സ്ഥാപന
ങ്ങള്‍ നല്‍കുന്ന തിരിച്ചറിയല്‍ കാര്‍ഡ്‌ (Identity card) ധരിക്കാറുണ്ട്‌. ചിത്രം 1.1 കാണി
ക്കുന്നത്‌ ഒരു കൂട്ടിയുടെ തിരിച്ചറിയല്‍ കാര്‍ഡ്‌ ആണ്‌. പട്ടിക 11 ലെ ഒന്നാമത്തെ കോള
ത്തില്‍ കാര്‍ഡില്‍ പ്രിന്റ്‌ ചെയ്തിരിക്കുന്ന ചില ഡാറ്റകളാണ്‌ കാണിച്ചിരിക്കുന്നത്‌. പട്ടി
കയുടെ രണ്ടാമത്തെ കോളം ഈ ഡാറ്റകള്‍ക്കനുയോജ്യമായ C++ ഡാറ്റ ഇനങ്ങള്‍ ഉപ

— [Lae |
Govt.HSS Thykkunnam,Kottayam lass [
Sneha ൭. Raj
20/02/1997

StudentID: 12345
Student Name: Sneha S.Raj യ

Date of Birth: 20-02-1997 .
Blood group: O+ve Snehanilayam,

Address: Sneha Nilayam Gandhi Nagar,
Gandhi N;
Chemmenattom Chemmanavattom,
Pin: 685 531 Pin 685 531

IMOMoLt കുട്ടിയുടെ തിരിച്ചറിയത കാര്ഡ്‌ പട്ടിക 1.1: ഡാറ്റയും C++ awaga asa fargo

നിങ്ങള്‍ അഡ്മിഷന്‍ നമ്പറിന്‌ short അല്ലെങ്കില്‍ int ഡാറ്റ ഇനങ്ങളും പേര്‌ (Sneha
S. Raj), രക്ത്ഗഗ്ുപ്പ്‌ (blood group, (O +ve)), വിലാസം (അധ്ധസ്സ്‌) തുടങ്ങിയവയ്ക്ക്‌
Char അറെയും ഉപയോഗിച്ചിട്ടുണ്ടാവും. ചിലപ്പോള്‍ നിങ്ങള്‍ക്ക്‌ ജനന തീയതിക്കും
(Date of birth) വിലാസത്തിനും ഏറ്റവും യോജിച്ച ഡാറ്റ ഇനം കണ്ടെത്താന്‍ കഴി
ഞ്ഞില്ല എന്നു വന്നേക്കാം. നമുക്ക്‌ 20/02/1997 എന്ന തീയതി പരിഗണിക്കാം. ഇത്‌
ഒരു സംയോജിത (compound) ഡാറ്റ ഇനമാണെന്നു എന്ന്‌ വിശകലനം ചെയ്താല്‍ മന
സ്സിലാവും. ഇതില്‍ ദിവസസാഖ്യ (20), മാസസാഖ്യ (02), വര്‍ഷസാഖ്യ (1997) എന്നിവ

1. സ്ട്രക്ചറും പോയിന്റും

കൂടിച്ചേര്‍ന്നിരിക്കുന്നു. മാസസംഖ്യക്കു പകരം മാസത്തിന്റെ പേര്‍ ഉപയോഗിക്കാറുണ്ട്‌.
ഇതുപോലെ വിലാസം എന്നത്‌, വീട്ടുനമ്പര്‍, വീട്ടുപേര്‍, സ്ഥലം, ജില്ല, സംസ്ഥാനം,
പിന്‍കോഡ്‌ എന്നിവയുടെ ഒരു സംയോജിത രൂപമാണ്‌. ഈ കാര്‍ഡിലെ മുഴുവന്‍ വിവ
രങ്ങളെയും വേണമെങ്കില്‍ ഒരു വലിയ ഏകോപിത ഡാറ്റ ഇനമായി (grouped datatype)
പരിഗണിക്കാം. ഇത്തരം ഏകോപിത ഡാറ്റ ഇനത്തിനെ പ്രതിനിധാനം ചെയ്യാന്‍ ഉപ
യോക്താവ്‌ നിര്‍വചിക്കുന്ന ഡാറ്റ ഇനത്തെ ഉപയോക്തൃ നിര്‍വചിത ഡാറ്റ ഇനം (user
defined data type) എന്നു വിളിക്കുന്നു. C++ ല്‍ ഇത്തരം പുതിയ ഡാറ്റ ഇനങ്ങളെ
നിര്‍വചിക്കാനുള്ള സൌകര്യമുണ്ട്‌.

സ്ര്രക്ചര്‍: - യുക്തിപരമായി പരസ്പരം ബന്ധപ്പെട്ടു നില്‍ക്കുന്ന ഒരുകൂട്ടം ഡാറ്റ ഇന
ങ്ങളെ പ്രതിനിധാനം ചെയ്യാന്‍ C++ ല്‍ ഉപയോഗിക്കുന്ന പൊതു പേരോടുകൂടിയ ഉപ
യോക്തൃ നിര്‍വചിത ഡാറ്റ ഇനമാണ്‌ സ്ട്രക്ചര്‍. ഈ ഡാറ്റകള്‍ ചിലപ്പോള്‍ വൃത്യസ്ത
ങ്ങളായ ഡാറ്റ ഇനങ്ങളിലുള്ളവ ആയിരിക്കും. 11-00 ക്ലാസില്‍ നമ്മള്‍ പഠിച്ച “അറെ' ഒരേ
തരത്തിലുള്ള ഡാറ്റയുടെ ഏകോപിതരുപമാണ്‌. പക്ഷേ ഒരു പേരിലൂടെ അറിയപ്പെടുന്ന
പല തരത്തിലുള്ള ഡാറ്റയുടെ ഏകോപിത രൂപമാണ്‌ സ്ര്രക്ചര്‍. C++ ല്‍ സ്ട്രക്ചര്‍
നിര്‍വചിക്കുന്നതും ഉപയോഗിക്കുന്നതും നമുക്ക്‌ ചര്‍ച്ച ചെയ്യാം.

1.2.1 സ്ര്രക്ചര്‍ നിര്‍വചനം (Structure definition)

കമ്പ്യൂട്ടര്‍ പ്രോഗ്രാമിലൂടെ പ്രശ്നങ്ങള്‍ നിര്‍ധാരണം ചെയ്യുമ്പോള്‍ മേല്‍ വിവരിച്ച പ്രകാരം
ഏകോപിത ഡാറ്റ ഇനങ്ങള്‍ ഉപയോഗിക്കേണ്ടിവരും. ആ സമയത്ത്‌ ഏകോപിത ഡാറ്റ
ഇനത്തിന്‌ കൃത്യമായ പേര്‍ നല്‍കുന്നതോടൊപ്പം, അതില്‍ അടങ്ങിയിരിക്കുന്ന ഡാറ്റ
ഇനങ്ങള്‍ കണ്ടെത്തി നിര്‍വചിക്കേണ്ടതുണ്ട്‌. താഴെ കൊടുത്തിരിക്കുന്ന വാകൃഘടന
ഉപയോഗിച്ച്‌ സ്ട്രക്ചറിനെ നിര്‍വചിക്കാം:

struct structure_tag

{
data_type variablel;
data_type variable2;

data_type variableN;
i

മുകളില്‍ ചേര്‍ത്ത വാകൃഘടനയില്‍ struct എന്നത്‌ സ്ട്രക്ചര്‍ നിര്‍വചിക്കാനുള്ള
കീവേഡാണ്‌. structure_tag or (structure നട) സ്്രക്ചറിന്റെ പേര്‍ നിര്‍ണ
യിക്കുന്ന ഐഡന്റിഫയര്‍ ആണ്‌. variablel, variable2,...,variableN എന്നിവ
സ്ട്രക്ചറിലെ അടിസ്ഥാന ഡാറ്റ ഘടകങ്ങളുടെ പേര്‍ നിര്‍ണയിക്കുന്ന ഐഡന്റിഫയറു
കളാണ്‌. സ്്രക്ചറിന്റെ പേര്‍ സൂചിപ്പിക്കാന്‍ ഉപയോഗിക്കുന്ന ഐഡന്റിഫയര്‍ ആയ
structure tag or structure name ഒരു പുതിയ ഉപയോക്തൃ നിര്‍വചിത awog
ഇനമാണ്‌. ഈ ഡാറ്റ ഇനത്തെയും മറ്റേതൊരു ഡാറ്റ ഇനത്തിനും പോലെ നിശ്ചിത

കമ്പ്യൂട്ടര്‍ സയന്‍സ്‌ - XII

മെമ്മറി ആവശ്യമാണ്‌. ഇത്‌ പുതിയ വേരിയബിളുകള്‍ പ്രഖ്യാപിക്കാന്‍ ചെയ്യാന്‍ ഉപ
യോഗിക്കുന്നു. ഈ ഡാറ്റ ഇനത്തിലുള്ള വേരിയബിളുകള്‍ ഫങ്ഷന്‍ ആര്‍ഗ്വിമെന്റായോ,
ഫങ്ഷനില്‍നിന്നും റിട്ടേണ്‍ ചെയ്യുന്ന വേരിയബിളായോ ഉപയോഗിക്കാം. സ്ട്രക്ചര്‍
നിര്‍വചനത്തില്‍ ബ്രായ്ക്കറ്റിനുള്ളില്‍ (4) ) കാണുന്ന വേരിയബിളുകളെ സ്്രക്ചറിന്റെ
മെമ്പര്‍ വേരിയബിളുകള്‍ എന്നു പറയുന്നു. ഇത്തരം മെമ്പര്‍ വേരിയബിളിന്റെ ഡാറ്റ
ഇനം അടിസ്ഥാന ഡാറ്റ ഇനമോ ഉപയോക്ത്ു നിര്‍വചിത ഡാറ്റ ഇനമോ ആവാം. മെമ്പര്‍
വേരിയബിളുകളുടെ വലുപ്പങ്ങളുടെ തുകയാണ്‌ സ്ര്രക്ചര്‍ വേരിയബിളിന്റെ ആകെ
വലുപ്പം.

ഇനി നമുക്ക്‌ തിരിച്ചറിയല്‍ കാര്‍ഡിലെ ജനനതീയതിയായ 20/02/1997 പ്രതിനിധീക
രിക്കുന്ന ഒരു സ്ര്രകചര്‍ തയാറാക്കി നോക്കാം. ഈ തീയതിയില്‍ മുന്ന്‌ പൂര്‍ണ Moa}
കള്‍ ഉണ്ട്‌. ആദ്യത്തേത്‌ ദിവസസംഖ്യയും രണ്ടാമത്തേത്‌ മാസസംഖ്യയും മുന്നാമത്തേത്‌
വര്‍ഷസംഖ്യയുമാണ്‌. ചുവടെചേര്‍ത്ത രീതിയില്‍ നമുക്ക്‌ ഒരു സ്ട്രക്ചര്‍ നിര്‍വചിക്കാം.
struct date
{
int dd;
int mm;
int yy;
7
ഇവിടെ date എന്നത്‌ സ്ര്രക്ചര്‍ ടാഗിനെ (സ്ട്രക്ച്ചറിന്റെ പേരിനെ) സൂചിപ്പിക്കുന്നു.
dd,mm, yy എന്നീ int ഇനത്തിലുള്ള വേരിയബിളുകള്‍ യഥാ്ര്രമം ദിവസം, മാസം,
വര്‍ഷം എന്നിവയെ സൂചിപ്പിക്കുന്നു. ഇവ സ്ര്രക്ചറിലെ അംഗങ്ങളാണ്‌. മാസസംഖ്യയ്ക്ക്‌
പകരം മാസത്തിന്റെ പേര്‍ ചേര്‍ക്കണമെങ്കില്‍ സ്ര്രക്ചര്‍ നിര്‍വചനത്തില്‍ താഴെ കൊടുത്ത
രീതിയില്‍ മാറ്റം വരുത്തണം.

struct strdate

{
int day;
char month[10]; // മാസത്തിന്റെ Gad സ്ട്രിങ്ങാണ്‍
int year;
i
പ്രോഗ്രാമുകള്‍ നിര്‍മിക്കുന്ന സമയത്ത്‌ ചില ഡാറ്റകള്‍ പരസ്പരബന്ധം പുലര്‍ത്തുന്ന
തായി കാണാം. ഈ ഡാറ്റകളെ ഏകോപിപ്പിച്ച്‌ കുറച്ചുകൂടി ഒതുക്കമുള്ള രൂപത്തിലേക്ക്‌
മാറ്റാന്‍ സ്ര്രക്ചറുകള്‍ ഉപയോഗിക്കാം. ഉദാഹരണത്തിന്‌ അഡ്മിഷന്‍ നമ്പര്‍, പേര്‍,
ഗ്രൂപ്പ്‌, ഫീസ്‌ തുടങ്ങിയ വിവരങ്ങള്‍ കൂട്ടിയുമായി ബന്ധപ്പെട്ടിരിക്കുന്നു. താഴെ കൊടുത്ത
രീതിയില്‍ ഒരു സ്ട്രക്ചര്‍ നിര്‍മിക്കാം.
struct student

{

int adm_no;

1. സ്ട്രക്ചറും പോയിന്റും

char ൩൭൬൭ [20];
char group[10];
float fee;

ഇനി നിങ്ങള്‍ സ്വന്തമായി സ്ര്രക്ചര്‍ നിര്‍വചിക്കാന്‍ ശ്രമിക്കൂ.
'address'90 'blood group' 90 ആകട്ടെ പുതിയ സ്ട്രക്ചറു
കള്‍. ബ്ലഡ്‌ ഗ്രൂപ്പില്‍, ഗ്രൂപ്പിന്റെ പേരും, 2൨ വിലയും ഉണ്ടായിരിക്കണം.

4 തൊഴിലാളിയുടെ വിവരങ്ങളില്‍ employee code, name, gender,

നമുക്കു ചെയ്യാം. designation, salary എന്നിവയൊക്കെ പ്രധാനമാണെന്നു നമു

ക്കറിയാമല്ലോ. ഇവ ഉള്‍പ്പെടുത്തി അനുയോജ്യമായ ഒരു സ്ട്രക്ചര്‍
നിര്‍വചിക്കുക.

ഇതുവരെ നമ്മള്‍ ചര്‍ച്ച ചെയ്തത്‌ സ്ട്രക്ചര്‍ നിര്‍വചിക്കുന്ന രീതിയാണ്‌. ഇനി സ്്രക്ചര്‍
വേരിയബിളുകള്‍ എങ്ങനെ പ്രഖ്യാപിക്കാമെന്നും അതില്‍ ഡാറ്റ എങ്ങനെ ശേഖരിക്കാ
മെന്നും മനസ്സിലാക്കാം.

1.1.2 വേരിയബിള്‍ പ്രഖ്യാപനവും (Declaration) മെമ്മറി നീക്കി
വയ്ക്കലും (Allocation)

അടിസ്ഥാന ഡാറ്റ ഇനങ്ങളെ പോലെ തന്നെ സ്ര്രക്ചര്‍ ഡാറ്റ ഇനത്തിനും വേരിയബി
ളുകള്‍ ഉണ്ടെങ്കില്‍ മാത്രമേ ഡാറ്റ ശേഖരിക്കാന്‍ കഴിയൂ. താഴെ കൊടുത്തിരിക്കുന്ന മാതൃ
കയിലാണ്‌ വേരിയബിളുകള്‍ പ്രഖ്യാപിക്കുന്നത്‌.
struct structure tag varl, var2, ..., varN;
OR
structure tag varl, var2, ..., varN;

ഈ വാകൃഘടനയില്‍ structure _tag എന്നത്‌ സ്ട്രക്ചറിന്റെ പേരും var1, var2,
vey VALN എന്നിവ സ്ര്രക്ചര്‍ വേരിയബിളുകളുമാണ്‌. നമുക്ക്‌ date, strdate
എന്നീ സ്ര്രക്ചറുകളില്‍ വേരിയബിളുകള്‍ പ്രഖ്യാപിക്കാം.
date dob, today; OR struct date dob, today;
strdate adm date, join date;

വേരിയബിളിന്റെ പ്രഖ്യാപന പ്രസ്താവന അതിന്റെ വലുപ്പം അനുസരിച്ച്‌ മെമ്മറി നീക്കി
വയ്ക്കുന്നു എന്ന്‌ നമുക്കറിയാം. ഒരു WisHald വേരിയബിളിന്റെ വലുപ്പം എന്തായി
രിക്കും? സ്ട്രക്ചര്‍ ഒരു ഉപയോക്തൃ നിര്‍വചിത ഡാറ്റ ഇനമായതിനാല്‍ അതിന്റെ വലുപ്പം,
നിര്‍വചനം അനുസരിച്ചായിരിക്കും. മേല്‍ സൂചിപ്പിച്ച വേരിയബിള്‍ പ്രഖ്യാപനത്തില്‍,
സ്ര്രക്ച്ചര്‍ date വേരിയബിളുകളായ dob യും today യും 12 byte വീതം വലുപ്പമുള്ള
വയായിരിക്കും (മുന്ന്‌ int ഡാറ്റ ഇനത്തിലുള്ള അംഗങ്ങള്‍, GCC യില്‍ int ന്റെ
വലുപ്പം 4 byte ആയതിനാല്‍ 3 x 4 = 12 bytes). സ്ദ്രക്ചര്‍ strdate ലെ വേരിയബി
ളായ join_date ന്റെ മെമ്മറി ഘടന ചിത്രത്തില്‍ ചേര്‍ക്കുന്നു.

കമ്പ്യൂട്ടര്‍ സയന്‍സ്‌ - XII

join_date
day month[10] year

4ബൈറ്റ്‌ 10 ബൈറ്റ്‌ 4ബ്്റ്‌

ചിത്രം 1.2: സ്ക്രക്ചരീ വേതിയങജിളി്റെ aan) നാക്കിവയ്ക്കത്‌

GCC യില്‍ int ടൈപ്പിന്റെ വലുപ്പം 4 ബൈറ്റും Turbo IDE യില്‍ 2 ബൈറ്റും
ആണ്‌. ചിത്രം 1.2 ല്‍ day, year എന്നീ അംഗങ്ങള്‍ 4 ബൈറ്റും വീതം ഉപയോഗി
ക്കുന്നു. GCC ഉപയോഗിക്കുന്നതിനാല്‍ ചിലപ്പോള്‍ നമ്മള്‍ക്ക്‌ ഇത്രയും മെമ്മറി ആവ
ശ്യമില്ല എങ്കില്‍ short ഡാറ്റാ ഇനം ഉപയോഗിക്കുകയാണ്‌ നല്ലത്‌.

join_date എന്ന വേരിയബിളില്‍ റിദ, month, year എന്നീ മൂന്ന്‌ അംഗങ്ങളാണ്‌
ഉള്ളത്‌. ഇവ യഥാക്രമം 4 ബൈറ്റ്‌, 10 ബൈറ്റ്‌, 4 ബൈറ്റ്‌ മെമ്മറി ഉപയോഗിക്കുന്നു.
അങ്ങനെ ഈ വേരിയബിളിന്റെ ആകെ മെമ്മറി ഉപയോഗം 18 ബൈറ്റ്‌ ആണ്‌.

ഇനി നമ്മള്‍ മുമ്പു നിര്‍വചിച്ച സ്ര്രക്ചര്‍ student ന്റെ മെമ്മറി വലുപ്പം
കണ്ടുപിടിക്കുക. കുടാതെ Student സ്ട്രക്ചറില്‍ വേരിയബിള്‍ പ്രഖ്യാ
മു പിക്കുക. ഈ വേരിയബിളിന്റെ മെമ്മറി നീക്കി വയ്ക്കുന്നതിന്റെ ചിത്രം
നമുക്കു paso POO
താഴെ കൊടുത്തിരിക്കുന്ന രീതിയില്‍ ഒരു സ്ട്രക്ചര്‍ വേരിയബിളിനെ അതിന്റെ നിര്‍വ
ചനത്തിന്റെ കൂടെത്തന്നെ പ്രഖ്യാപിക്കാം.

struct complex
|
short real;
short imaginary;
jcl, c2;

Complex എന്നു പേരുള്ള സ്ട്രക്ചര്‍ കോംപ്ലക്സ്‌ സംഖ്യയെ പ്രതിനിധാനം ചെയ്യു
ന്നു. Cl ഉം C2 ഉം ഈ സ്ട്രക്ചര്‍ തരത്തിലുള്ള രണ്ടു വേരിയബിളുകളാണ്‌. സ്ര്ക്ചര്‍
നിര്‍വചനത്തിന്റെ കുടെ വേരിയബിള്‍ പ്രഖ്യാപിക്കുമ്പോള്‍ വേണമെങ്കില്‍ സ്ട്രക്ചര്‍
SOD ഒഴിവാക്കുകയും ചെയ്യാം. ചുവടെ കൊടുത്ത ഉദാഹരണം നോക്കുക.

struct

{

int a, b, c
teqn 1, eqn 2;

ഈ നിര്‍വചനത്തിനു ഒരു പരിമിതിയുണ്ട്‌. സ്ര്രക്ചര്‍ ടാഗ്‌ ഇല്ലാത്തതിനാല്‍ വീണ്ടും
പൂതിയ വേരിയബിളുകള്‍ നിര്‍മിക്കാന്‍ ഈ നിര്‍വചനം പര്യാപ്തമല്ല. സ്ട്രക്ചറിലെ
അംഗങ്ങള്‍ ഒരേ തരമാണെങ്കില്‍ ഒറ്റവരി പ്രഖ്യാപനമേ ആവശ്യമുള്ളൂ.

1. സ്ട്രക്ചറും പോയിന്റും

വേരിയബിളിന്‌ പ്രാരംഭ വിലനല്‍കല്‍ (Veriable Initialisation)

വേരിയബിളുകള്‍ പ്രഖ്യാപിക്കുമ്പോള്‍ത്തന്നെ അതിലേക്ക്‌ ചില വിലകള്‍ നല്‍കാവുന്ന
താണ്‌. ഇത്‌ WisHald വേരിയബിളിന്റെ കാരൃത്തിലും ശരിയാണ്‌. സ്ട്രക്ചര്‍ വേരിയ
ബിളിന്‌ താഴെ കൊടുത്ത രീതിയില്‍ പ്രാരംഭവില നല്‍കാം.

structure tag variable={valuel, value2,..., valueN};

ഉദാഹരണമായി student സ്ര്രക്ചറിന്‌ താഴെ കൊടുത്ത രീതിയില്‍ പ്രാരംഭവില
നല്‍കാം.
student s={3452, "Vaishakh", "Science", 270.00};

സ്ട്രക്ചര്‍ അംഗങ്ങളായ വേരിയബിളുകള്‍ക്ക്‌ നിര്‍വചനത്തില്‍ നല്‍കിയിരിക്കുന്ന അതേ
ക്രമത്തിലാണ്‌ ബ്രായ്ക്കറ്റില്‍ കൊടുത്ത ഡാറ്റകള്‍ നല്‍കിയിരിക്കുന്നത്‌. അതുകൊണ്ടു
തന്നെ ഡാറ്റയുടെ ക്രമത്തിലും തരത്തിലും ശ്രദ്ധിക്കേണ്ടതാണ്‌. മുകളില്‍ കൊടുത്ത
C++ വാചകം 38 ബൈറ്റ്സ്‌ മെമ്മറി 5 എന്ന വേരിയബിളിനു വേണ്ടി ഉപയോഗിക്കുന്നു.
3452, "Vaishakh", "Science", 270.00 എന്നീ ഡാറ്റ ൭൦൩ ൩൦ name, group, fee
എന്നീ വേരിയബിളുകള്‍ക്ക്‌ യഥാക്രമം നല്‍കപ്പെടുന്നു (Assign ചെയ്യപ്പെടുന്നു.

എല്ലാ അംഗങ്ങള്‍ക്കും വിലകള്‍ നല്‍കിയില്ലെങ്കില്‍ ആദ്യം മുതലുള്ള അംഗങ്ങള്‍ക്ക്‌
ക്രമത്തില്‍ വിലകള്‍ നല്‍കുകയും, അവസാനം ബാക്കി വരുന്ന അംഗങ്ങള്‍ക്ക്‌ സംഖ്യ
യാണെങ്കില്‍ 0 (2:൦0) യും, സ്ര്രിംഗ്‌ ആണെങ്കില്‍ '\0' (ന ക്യാരക്ടറും) നല്‍കുന്നു.

ഒരു സ്ര്രക്ചര്‍ വേരിയബിളിലേക്ക്‌ മറ്റൊരു സ്ദ്രക്ചര്‍ വേരിയബിളിന്റെ ഡാറ്റ നല്‍കാന്‍
കഴിയും. അങ്ങനെ ചെയ്യണമെങ്കില്‍ രണ്ട്‌ വേരിയബിളുകളും ഒരേ സ്ട്രക്ചര്‍ ഇനത്തി
ലുള്ളവയായിരിക്കണം. ഉദാഹരണം താഴെ ചേര്‍ക്കുന്നു.

student st = s;

ഈ വാചകം വേരിയബിള്‍ st ലേക്ക്‌ വേരിയബിള്‍ 's' ന്റെ ഡാറ്റ ശേഖരിക്കുന്നു.

ഇങ്ങനെ വില നല്‍കിയിരിക്കുന്നത്‌ ചിത്രം 13 ല്‍ കാണിച്ചിരിക്കുന്നു.

adm_no |name group fee

3452 Vaishakh Science 270.00
st

adm_no| |name group fee
3452 Vaishakh Science 270.00

ചിത്രം 1,3: സ്്ക്രക്ചറിമ്ലക്ക്‌ വില നല്‍കുന്നു

കമ്പ്യൂട്ടര്‍ സയന്‍സ്‌ - XII

സ്ട്രക്ചര്‍ നിര്‍വചിക്കുമ്പോള്‍ അതിനകത്തുള്ള അംഗങ്ങളായ വേരിയബിളുകള്‍ക്ക്‌
പ്രാരംഭവില നല്‍കാന്‍ പാടില്ല. കാരണം, സ്ര്രക്ചര്‍ നിര്‍വചനം നടക്കുമ്പോള്‍ മെമ്മറി
നീക്കിവയ്ക്കപ്പെടുന്നില്ല. അതായത്‌, സ്ട്രക്ച്ചർ നിര്‍വചനത്തിനെ ഒരു വീടിന്റെ ബ്ലു്രിന്റ്‌
(പ്ലാന്‍) ആയി കണക്കാക്കാം. പ്ലാനില്‍ മുറിയുടെ പേരും രൂപവും കാണാമെങ്കിലും മുറി
കളില്‍ ഒന്നും ശേഖരിക്കാന്‍ കഴിയില്ല. കാരണം, അവയ്ക്ക്‌ യഥാര്‍ഥ സ്ഥലം ഇല്ല എന്നതുതന്നെ. ഒരു
വീടിന്റെ ആകെ സ്ഥലം എന്നത്‌ എല്ലാ മുറികളുടേയും സ്ഥലത്തിന്റെ ആകെത്തുകയാണ്‌. അതുപോലെ
സ്ര്രക്ചര്‍ വേരിയബിളിന്റെ മെമ്മറി വലുപ്പം എന്നത്‌ അതിന്റെ അംഗങ്ങളുടെ വലുപ്പത്തിന്റെ തുകയാ

ണ്‌. ഈ പ്ലാന്‍കൊണ്ട്‌ ഒരേ രീതിയിലുള്ള കുറേ വീടുകള്‍ നിര്‍മിക്കാം. വീടുകള്‍ക്ക്‌ വൃത്ൃസ്തമായ
പേരും സ്ഥലവും ഉണ്ടാകാം. അതുപോലെ സ്ര്ടക്ചര്‍ നിര്‍വചനം എന്നത്‌ ബ്ലൂ്ിന്റും സ്ര്രക്ചര്‍ വേരി
യബിള്‍ എന്നത്‌ അതിന്റെ പൂര്‍ത്തികരണവുമാണ്‌. ഒരു ബ്ലൂപ്രിന്റ്‌ ഉപയോഗിച്ച്‌ അനേകം വീടുകള്‍
നിര്‍മിക്കുന്നതുപോലെ സ്ര്രക്ചര്‍ നിര്‍വചനം ഉപയോഗിച്ച്‌ വൃത്യസ്തമായ പേരില്‍ അനേകം വേരിയ
ബിളുകള്‍ പ്രഖ്യാപിക്കാം. ഓരോന്നിനും വ്യത്യസ്തമായ മെമ്മറി സ്ഥലവും ഉണ്ടായിരിക്കും.
—_ SS
1.1.3 സ്ര്രക്ചര്‍ അംഗങ്ങളെ ഉപയോഗിക്കല്‍
(Accessing elements of structure)

അറെ (aftay) എന്നത്‌ ഡാറ്റയുടെ കൂട്ടമാണ്‌. ഒരു അറെയിലെ അംഗങ്ങളെ സബ്സ്ക്രി
പ്റ്റുപയോഗിച്ച്‌ നമുക്ക്‌ ശേഖരിക്കാനും എടുക്കാനും കഴിയും. അതുപോലെ സ്ര്രക്ചര്‍
അംഗങ്ങളെ ഉപയോഗിക്കാന്‍ വേണ്ടി പിരീഡ്‌ ചിഹ്നം അഥവാ ഡോട്ട്‌ ഓപ്പറേറ്റര്‍ (.) ഉപ
യോഗിക്കുന്നു. അതിന്റെ വാകൃഘടന ചുവടെ കൊടുത്തിരിക്കുന്നു.

structure variable.element name

പ്രോഗ്രാമുകളില്‍ സ്ട്രക്ചര്‍ ഡാറ്റ ഉപയോഗിക്കണമെങ്കില്‍ മുകളില്‍ കൊടുത്തപോലെ
സ്ര്രക്ചര്‍ അംഗങ്ങളെ സൂചിപ്പിക്കണം. ചില ഉദാഹരണങ്ങള്‍ ചുവടെ കൊടുത്തിരിക്കു
ന്നു.

today.dd = 10;

strcepy(adm date.month, "June");

cin >> sl.adm_no;

cout << cl.real + c2.real;

എന്നാല്‍ C1+C2 എന്ന പ്രയോഗം സാധ്യമല്ല. കാരണം '+' എന്ന ഓപ്പറേറ്റര്‍ സംഖ്യ
കളുടെ കൂടെ DOOMED ഉപയോഗിക്കാന്‍ പാടുള്ളു.

ഇനി നമുക്ക്‌ സ്ര്രക്ചര്‍ വേരിയബിളിലെ വിലനല്‍കല്‍ (Assignment) പ്രവര്‍ത്തനവു
മായ ബന്ധപ്പെട്ട രസകരമായ ചില കാര്യങ്ങള്‍ മനസ്സിലാക്കാം.

താഴെ കൊടുത്തിരിക്കുന്നതുപോലെ രണ്ട്‌ സക്ര്രചറുകള്‍ നിര്‍വചിച്ചിരിക്കുന്നു.

struct ൩൭൭൩1 struct test 2
| { ~
int a; int a;
float bi float b;

}tl={3, 2.5}; }t2;

1. സ്ട്രക്ചറും പോയിന്റും

മുകളില്‍ കൊടുത്ത രണ്ട്‌ സ്ര്രക്ചറുകളിലെയും അംഗങ്ങള്‍ ഒരേ എണ്ണവും ഒരേ തര
വും, ഒരേ പേരുള്ളവയുമാണ്‌. ടട 1 ലെ വേരിയബിളായ t1 ലെ അംഗങ്ങളായ a യ്‌
ക്കും യ്ക്കും 3, 2.5 എന്നീ പ്രാരംഭവിലകള്‍ യഥാക്രമം നല്‍കിയിട്ടുണ്ട്‌. പക്ഷെ എന്നാല്‍
12511: എന്ന വിലനല്‍കല്‍ പ്രസ്താവന തെറ്റാണ്‌. കാരണം 11 ഉം 12 ഉം രണ്ട്‌
തരത്തിലുള്ള സ്ട്രക്ചര്‍ വേരിയബിളുകളാണ്‌. പക്ഷെ നമ്മള്‍ക്ക്‌ 11 സ്ട്രക്ചറിലെ വില
12 സ്ര്രക്ചറില്‍ നല്‍കണമെങ്കില്‍ ചുവടെ ചേര്‍ത്ത രീതി ഉപയോഗിക്കാം.

t2.a = tl.a; t2.b = tl.b;

ഇത്‌ സാധ്യമാവാന്‍ കാരണം, int ടൈപ്പിലുള്ള വേരിയബിളുകളാണ്‌ ഇവിടെ വില
നല്‍കല്‍ പ്രസ്താവനയില്‍ (Assignment statement) ഉപയോഗിച്ചിരിക്കുന്നത്‌.

ഇനി നമുക്ക്‌ ഇതുവരെ പഠിച്ച കാര്യങ്ങള്‍ ഉപയോഗിച്ചുള്ള ഒരു പ്രോഗ്രാം പരിചയപ്പെ
soo. ഇവിടെ student സ്ദ്രക്ചറില്‍ രജിസ്റ്റര്‍ നമ്പര്‍, പേര്‍, കുട്ടിയുടെ CE മാര്‍ക്ക്‌
(തുടര്‍ മൂല്യനിര്‍ണയം), PE മാര്‍ക്ക്‌ ((പാക്ടിക്കല്‍ മൂല്യനിര്‍ണയം), TE (ടേം മൂല്യ
നിര്‍ണയം) എന്നിവ അംഗങ്ങളായി ചേര്‍ത്തിട്ടുണ്ട്‌. സ്ദ്രക്ചറിലെ ഈ അംഗങ്ങളുടെ
വിലകള്‍ ഇന്‍പുൂട്ടായി നല്‍കിയാല്‍ ച്രോ്രഗാം തുടര്‍ച്ചയും സമഗ്രവുമായ മൂല്യനിര്‍ണയ
ത്തിന്റെ ഭാഗമായുള്ള ആകെ മാര്‍ക്ക്‌ കണ്ടുപിടിച്ച്‌ എല്ലാ വിവരങ്ങളും (്രദര്‍ശിപ്പിക്കും.

Program 1.1: കുട്ടിയുടെ ആകെ മാര്‍ക്ക്‌ കാണാന്‍

#include <iostream>
#include <cstdio> //gets() ഫങ്ഷന്‍ ഉപയോഗിക്കാന്‍
using namespace std;
struct student //സ്്രക്ചര്‍ നിര്‍വചനം തുടങ്ങുന്നു
{
int reg ൩൦൦ // രജിസ്റ്റര്‍ നമ്പര്‍ 32767 ലും കൂടാം, അതുകൊണ്ട്‌ int ഉപ
യോഗിക്കുന്നു.
char name[20];
short ce;//int 4 ബൈറ്റ്‌ ഉപയോഗിക്കും എന്നാല്‍ ce സ്‌കോറിന്‌ ചെറിയ

സാംഖ്യ മതി

short pe;

short te;
he //TWSH218 നിര്‍വചനത്തിന്റെ അവസാനം
int main()
{

student s; //WSEH218 വേരിയബിളിന്റെ പ്രഖ്യാപനം

int tot score;

cout<<"Enter register number: ";

cin>>s.reg_ no;

fflush(stdin); കീബോര്‍ഡ്‌ ബഫര്‍ ശുനൃമാക്കാന്‍

cout<<"Enter name: ";

gets (s.name);

fb

cout<<"Enter scores in CE, PE and TE: ";
cin>>s.ce>>s.pe>>s.te;

tot_score=s.cets.pets.te;

cout<<"\nRegister Number: "<<s.reg no;
cout<<"\nName of Student: "<<s.name;

cout<<"\nCE Score: "<<s.ce<<"\tPE Score: "<<s.pe
<<"\tTE Score: "<<s.te;

cout<<"\nTotal Score : "<<tot_score;

return 0;

}
പ്രോഗ്രാം 1.1 ന്റെ ഓഈട്ട്പുട്ട്‌ താഴെ ചേര്‍ക്കുന്നു.:
ഓട്ടപുട്ട്‌:

Enter register number: 23545

Enter name: Deepika Vijay
Enter scores in CE, PE and TH: 19 38 54

Register Number: 23545

Name of Student: Deepika Vijay

CE Score: 19 PE Score: 38 TE Score: 54
Total Score : 111

പ്രോഗ്രാം 1.1 ല്‍ സ്ട്രക്ചര്‍ നിര്‍വചിച്ചിരിക്കുന്നത്‌ main() ഫങ്ഷന്‍ പുറത്താണ്‌.
ഇതുവേണമെങ്കില്‍ main () ഫങ്ഷന്‍ അകത്തും ചെയ്യാം. നിര്‍വചനത്തിന്റെ സ്ഥാനം
സ്ദ്രക്ചറിന്റെ പരിധിയും (scope) ആയുസ്സും (life) നിര്‍ണയിക്കുന്നു. നമ്മള്‍ 11-0൦ ക്ലാസിലെ
10-00 അധ്യായത്തില്‍ പഠിച്ച ലോക്കല്‍, ഗ്ലോബല്‍ ഡാറ്റയുടെ സാധ്യതകള്‍ അതായത്‌
സ്ര്രക്ചര്‍ നിര്‍വചനം main () ന്റെ ഉള്ളിലായാല്‍ ആ സ്ര്രക്ചറിന്‌ main () ന്റെ ഉള്ളില്‍
ALMA വേരിയബിളുകള്‍ നിര്‍മിച്ച്‌ ഉപയോഗിക്കാന്‍ കഴിയു. എന്നാല്‍ സ്ര്രക്ചര്‍ നിര്‍വ
ചനം ൬൭2൩ () ന്‌ പുറത്താണെങ്കില്‍ ആ സ്ട്രക്ചറിനെ ഏത്‌ ഫങ്ഷനിലും വേരിയബി
ളുകള്‍ നിര്‍മിക്കാന്‍ ഉപയോഗിക്കാം.

1. സ്ട്രക്ചറും പോയിന്റും

പ്രോഗ്രാം 1.1 ല്‍ ഒരു സ്ര്രക്ചര്‍ വേരിയബിള്‍ മാത്രമേ ഉപയോഗിച്ിട്ടുള്ളു. അതിനാല്‍
പ്രോഗ്രാമില്‍ ഒരു കുട്ടിയുടെ മാര്‍ക്ക്‌ വിവരങ്ങള്‍ മാധ്രമെ കൈകാര്യം ചെയ്യാന്‍ കഴിയൂ.
കൂടുതല്‍ കുട്ടികളുടെ വിവരങ്ങള്‍ കൈകാര്യം ചെയ്യാന്‍ നമ്മള്‍ സ്ട്രക്ചര്‍ വേരിയബി
Flow അറെ (attay) ഉപയോഗിക്കേണ്ടതായി വരും. നമുക്ക്‌ മറ്റൊരു ഉദാഹരണത്തി
ലൂടെ സ്ര്രക്ചറുകളുടെ അറെ പരിചയപ്പെടാം.

പ്രോ്രഗാം 1.2 ല്‍ ഒരുകൂട്ടം വില്‍പ്പനക്കാരുടെ വിവരങ്ങള്‍ സ്വീകരിക്കുന്നു. സെയില്‍സ്മാന്‍
കോഡ്‌, പേര്‌, 12 മാസത്തെ സെയില്‍സ്‌ ഡാറ്റ എന്നിവയാണ്‌ സ്്രക്ചറിലെ അടിസ്ഥാന
വിവരങ്ങള്‍. ഈ പ്രോഗ്രാം നല്‍കിയ വിവരങ്ങളുടെ കൂടെ, ഓരോ വില്‍പ്പനക്കാരന്റെയും
ശരാശരി വില്‍പ്പന എത്രയാണെന്നും പ്രദര്‍ശിപ്പിക്കുന്നു. ഈ പ്രോഗ്രാമില്‍ ഉപയോഗി
ക്കുന്ന സ്ട്രക്ചറില്‍ ഒരു ഫ്‌ളോട്ടിംഗ്‌ പോയിന്റ്‌ അറെ ഉപയോഗിച്ചിട്ടുണ്ട്‌.

Program 1.2 : വില്‍പ്പനക്കാരന്റെ ശരാശരി വില്‍പന കാണാന്‍

#include <iostream>
#include <cstdio>
#include <iomanip> //setw() എന്ന ഫങ്ഷന്‍ ഉപയോഗിക്കാന്‍
using namespace std;
struct sales data
{
int code;
char name[15];
float amt[12]; //12 മാസത്തെ വില്‍പ്പന സാംഖ്യ സൂക്ഷിക്കാന്‍ ഉള്ള അറെ
float avg;

int main()

sales_data s[20]; //സ്ദ്രക്ചറിന്റെ അറെ
short n,i,j; //short മെമ്മറി ഉപയോഗം കുറയ്ക്കുന്നു
float sum;
cout<<"Enter the number of salesmen: ";
cin>>n;
for(i=0O; i<n; i++)
{
cout<<"Enter details of Salesman "<<i+1;

cout<<"\nSalesman Code: ";
cin>>s[i].code;
fflush(stdin);
cout<<"Name: ";

gets(s[i].name);

cout<<"Amount of sales in 12 months: ;
for(sum=0,j=0; 4<12; j++)

കമ്പ്യൂട്ടര്‍ സയന്‍സ്‌ - XII

{
cin>>s[i].amt[j];
sum=sumt+s[i].amt[j];
}
s[i].avg=sum/12;
}
cout<<"\t\tDetails of Sales\n";
cout<<"Code\t\tName\t\tAverage Sales\n";
for (i=O;1i<n;it+)
{
cout<<setw(4)<<s[i] .code<<setw(15)<<s[i].name;
for (3507127155)
cout<<setw(4)<<s[i].amt[j]?7
cout<<s[i].avg<<'\n';
}

return 0;

}

നിങ്ങള്‍ ഈ പ്രോഗ്രാം ലാബില്‍ ചെയ്തു നോക്കി അതിന്റെ ഓട്ട്പുട്ട്‌ നിരീക്ഷിക്കുക.
ഈ പ്രോഗ്രാമില്‍ സ്ര്രക്ചര്‍ അംഗമായി ഫ്‌ളോട്ടിംഗ്‌ പോയിന്റ്‌ അറെ വേരിയബിള്‍ ഉപ
യോഗിച്ചിട്ടുണ്ട്‌. int ഡാറ്റടൈപ്പ്‌ 4 ബൈറ്റ്‌ ഉപയോഗിക്കുന്നതിനാല്‍ ൩, i and j എന്നീ
വേരിയബിളുകള്‍ ShOrt ഡാറ്റ ഇനം ഉപയോഗിച്ചാണ്‌ ഈ പ്രോഗ്രാമില്‍ പ്രഖ്യാപിച്ചി
രിക്കുന്നത്‌.

1.14 amqnad സ്രടക്ചര്‍ (Nested structure)

ഒരു സ്ര്രക്ചറിന്റെ അംഗം മറ്റൊരു സ്ദ്രക്ചര്‍ വേരിയബിള്‍ ആവാം. ഇങ്ങനെയുള്ള
സ്ദ്രക്ചറിനെ നെസ്റ്റെഡ്‌ സ്ദ്രക്ചര്‍ എന്നു വിളിക്കുന്നു. ഈ ആശയം വളരെ ശക്തമായ
ഡാറ്റാ സ്ര്രക്ചറുകള്‍ നിര്‍മിക്കാന്‍ സഹായകമാണ്‌. നമ്മള്‍ക്ക്‌ പ്രവേശന തീയതി
(Admission date) കൂടി student സ്ട്രക്ചറില്‍ ഉള്‍പ്പെടുത്തണമെങ്കില്‍, പട്ടിക 12 ല്‍
നല്‍കിയിരിക്കുന്ന നിര്‍വചനങ്ങളില്‍ (നിര്‍വചനം A, നിര്‍വചനം 8) ഏതെങ്കിലും
ഒന്ന്‌ ഉപയോഗിക്കാം.

1. സ്ട്രക്ചറും പോയിന്റും

struct date struct student

{ {
short day; int adm no;
short month; char name[20];
short year; struct date

Me {

struct student short day;

{ short month;
int adm no; short year;
char name[20]; 2 dt_adm;
date dt_adm; float fee;

float fee;

hi

പട്ടിക 22 : ONE തരം ANG}

പട്ടിക 1.2 ലെ നിര്‍വചനം A യില്‍ രണ്ട്‌ സ്ര്രക്ചറുകളും വെവ്വേറെ നിര്‍വചിച്ചിട്ടുണ്ട്‌.
student എന്ന സ്ര്രക്ചര്‍ dt_adm എന്ന സ്ര്രക്ചര്‍ വേരിയബിളിനെ അംഗമാക്കിയി
ട്ടുണ്ട്‌. ഇത്‌ date തരത്തിലുള്ള സ്ട്രക്ചര്‍ വേരിയബിളാണ്‌.

അകത്തുള്ള സ്ട്രക്ചര്‍ നെസ്റ്റിംഗ്‌ നടത്തുന്നതിന്‌ മുന്‌ നിര്‍വചിക്കണം എന്നത്‌ ഇവിടെ
നമ്മള്‍ ഉറപ്പ്‌ വരുത്തേണ്ടതാണ്‌. എന്നാല്‍ ഡെഫനിഷന്‍ - B യില്‍ സ്ട്രക്ചര്‍ date
തന്നെ സ്ട്രക്ചര്‍ ടധഠിട൩ന്‌ ഉള്ളില്‍ നിര്‍വചിച്ചിരിക്കുന്നു. ഈ തരത്തില്‍ ഉപയോ
ഗിച്ചാല്‍ സ്ട്രക്ചര്‍ date ന്റെ പരിധി സ്ട്രക്ചര്‍ studentM ഉള്ളില്‍ മാത്രമായി ചുരു
ങ്ങും. അതിനാല്‍ പുറത്തെവിടെയും date സ്ട്രക്ചര്‍ ഇനത്തില്‍ വേരിയബിളുകള്‍
പ്രഖ്യാപിക്കാന്‍ സാധ്യമല്ല. വേണമെങ്കില്‍ അകത്തുള്ള സ്ട്രക്ചര്‍ നിര്‍വചനത്തിലെ
ടാഗിന്റെ പേര്‍ ഒഴിവാക്കാം. ഒരു നെസ്റ്റഡ്‌ സ്ര്രക്ചര്‍ വേരിയബിളിന്‌ പ്രാരംഭവില നല്‍കു
ന്നത്‌ ചുവടെ ചേര്‍ക്കുന്നു.

student s = (4325, "Vishal", (10, 11, 1997}, 575};

cout<<s. adm_no<<s .~name;

cout<<s.dt_adm.day<<"/"<<s.dt_adm.month<<"/"<<s.dt_adm.year;

ഇന്നര്‍ സ്ര്രക്ചര്‍ എലിമെന്റുകളെ ഉപയോഗിക്കാനുള്ള രീതി ചുവടെ ചേര്‍ക്കുന്നു.
outer_structure_varaiable.inner_structure_variable.element

എംപ്ലോയികോഡ്‌, പേര്‍, പ്രവേശനതീയതി, ജോലി, ശമ്പളം എന്നീ
വിവരങ്ങള്‍ അടങ്ങിയ employee എന്ന സ്ട്രക്ചര്‍ നിര്‍മിക്കുക.
{ employee ടൈപ്പില്‍ ഉള്ള വേരിയബിളിന്റെ മെമ്മറി ഘടനവരച്ച്‌

നമുക്കു ചെയ്യാം അതിന്റെ വലുപ്പം കണ്ടു പിടിക്കുക.

കമ്പ്യൂട്ടര്‍ സയന്‍സ്‌ - XII

അറെയും സ്ര്രക്ചറും തമ്മിലുള്ള താരതമ്യം

ഒരു പേരിലൂടെ അനേകം ഡാറ്റയെ സൂചിപ്പിക്കാനുപയോഗിക്കുന്ന ഡാറ്റാ ഇനങ്ങളാണ്‌
സ്ട്രക്ചറും, അറെയും. എന്നാല്‍ അവ ചില കാര്യങ്ങളില്‍ വ്യത്യസ്തമാണ്‌. അവയെ
ക്കുറിച്ചുള്ള താരതമ്യം ചുവടെ പട്ടികയില്‍ നല്‍കിയിരിക്കുന്നു.

(Derived data type) ഡാറ്റ ഇനമാണ്‌.

. ഒരേ ഇനം ഡാറ്റയുടെ കൂട്ടമാണ്‌. . വിവിധ ഇനം ഡാറ്റകളുടെ കൂട്ടമാണ്‌.

. അറെയിലെ അംഗങ്ങളെ സൂചിപ്പിക്കുന്നത്‌ 3. സ്ര്രക്ചറിലെ അംഗങ്ങളെ സൂചിപ്പിക്കു
സബ്സ്ക്രിറ്റ്‌ ഉപയോഗിച്ചാണ്‌. ന്നത്‌ ഡോട്ട്‌ ഓപ്പറേറ്റര്‍ (.) ഉപയോഗി

ച്ചാണ്‌.

. അറെയിലെ ഒരു അംഗം മറ്റൊരു അറെയെ 4. സ്ര്രക്ചറിലെ ഒരു അംഗം മറ്റൊരു സ്രടക്‌
പ്രതിനിധാനം ചെയ്യുമ്പോള്‍ മള്‍ട്ടി ഡയമന്‍ ചറിനെ പ്രതിനിധാനം ചെയ്യുന്നു എങ്കില്‍
ഷണല്‍ അറെ രൂപീകരിക്കപ്പെടുന്നു. അത്‌ നെസ്റ്റ്റഡ്‌ സ്്രക്ചറിനെ രൂപീ

കരിക്കുന്നു.

. സ്ര്രക്ചറിന്റെ അറെ നിര്‍മിക്കല്‍ സാധ്യ 5. സ്ര്രക്ചറിലെ അംഗമായി അറെ ഉപയോ

ഗിക്കാഠ.

പട്ടിക 1.3: അറെയും സ്ര്രക്ചറും തമ്മിലുള്ള താരതമ്യം

നിങ്ങളുടെ പുരോഗതി അറിയാം

1. സ്ഭ്രക്ചര്‍ എന്നാല്‍ എന്ത്‌?

2. സ്ട്രക്ചര്‍ വിവിധതരം ഡാറ്റകളെ ഒരു യൂണിറ്റായി ഏകോ
പിപ്പിക്കുന്നു - ശരി/തെറ്റ്‌.

3. സ്ട്രക്ചര്‍ അംഗത്തെ ഉപയോഗിക്കുന്നതിന്‌ താഴെ കൊടുത്ത
വയില്‍ ഏതാണ്‌ ശരി.

a. struct.element
b. structure_tag.element

c. structure _variable.element
d. structure tag.structure variable
4 .നെസ്റ്റെഡ്‌ സ്ദ്രക്ചര്‍ എന്നാല്‍ എന്ത്‌? ഉദാഹരണമെഴുതുക.

5 .അറെയ്ക്ക്‌ സബ്സ്ക്രിപ്റ്റ്‌ ആണെങ്കില്‍ സ്ട്രക്ചറിന്‌ ആണ്‌.

1.2 പോയിന്ററുകള്‍ (Pointers)

നമുക്ക്‌ “കമ്പ്യൂട്ടിങ്ങിലെ മുന്നേറ്റങ്ങള്‍” എന്ന വിഷയത്തില്‍ ഒരു ഉപന്യാസം MwooasH

ണമെന്ന്‌ കരുതുക. നമുക്ക്‌ അനുയോജ്യമായ പുസ്തകങ്ങള്‍ നാം പരിശോധിക്കേണ്ട
തായി വരും. തീര്‍ച്ചയായും നമ്മള്‍ ലൈബ്രറിയില്‍ പരതി നോക്കും. നമ്മള്‍ക്ക്‌ പുസ്തകം
കണ്ടു പിടിക്കാന്‍ കഴിഞ്ഞില്ലെങ്കില്‍ ലൈബ്രേറിയനോ, കമ്പ്യൂട്ടര്‍ സയന്‍സ്‌ അധ്യാപകനോ

1. സ്ട്രക്ചറും പോയിന്റും

നമ്മളെ ഇക്കാരൃത്തില്‍ സഹായിക്കും. ഇവിടെ നമുക്ക്‌ ലൈബ്രേറിയന്റെ /അധ്യാപകന്റെ
പങ്കെന്താണെന്ന്‌ പരിശോധിക്കാം. അദ്ദേഹം എല്ലായ്‌ പ്പോഴും ഒരു റഫറന്‍സാണ്‌.
ലൈബ്രറിയിലെവിടേയോ ഉള്ള പുസ്തകം കണ്ടെത്തി നമുക്ക്‌ തരാന്‍ അദ്ദേഹം
സഹായിക്കുന്നു.

മുകളില്‍ കൊടുത്ത ഉദാഹരണത്തിലെ
ലൈബ്രേറിയന്റെ /അധ്യാപകന്റെ പങ്കാണ്‌
പോയിന്റര്‍ വേരിയബിളിനും ഉള്ളത്‌. പോ
യിന്റര്‍ കമ്പ്യൂട്ടര്‍ മെമ്മറിയിലേക്ക്‌ ഉള്ള ഒരു
റഫറന്‍സ്‌ ആണ്‌. താഴെ കൊടുത്ത വാചകം
>a പരിഗണിക്കുക. ചിത്രം 1.4 : റഫറന്‍സിന്റെ

റ ഉദാഹരണം.

റി
|

int num=25;
്ട ഇത്‌ ഒരു പ്രാരംഭവിലനല്‍കല്‍ പ്രസ്താവന
. യാണെന്ന്‌ നമുക്കറിയാം. MOGs num എന്ന
ചിത്രം 1.4: റഫറനീസിന്റെ ഉദാഹരണം വേരിയബിള്‍ പ്രഖ്യാപിക്കുന്ന തോടൊപ്പം
അതിലേക്ക്‌ 25 എന്ന സംഖ്യ ശേഖരിക്കുകയും ചെയ്യുന്നു. ഇവിടെയുള്ള മെമ്മറി നീക്കി
വയ്ക്കലിന്റെ ചിത്രം 1.5 ല്‍ കാണിച്ചിരിക്കുന്നു. ചിത്രത്തില്‍ നിന്നും നമുക്ക്‌ വേരിയ
ബിളിന്റെ മൂന്ന്‌ സ്വഭാവ ഘടകങ്ങള്‍ മനസ്സിലാക്കാം - പേര്‌, വിലാസം (Address), ഉള്ള
ടക്കം (Content) എന്നിവയാണ്‌ ആ ഘടകങ്ങള്‍.
ഇവിടെ വേരിയബിളിന്റെ പേര്‍ num, അതിന്റെ ഉള്ള num ) 45 ]
ടക്കം 25. NUN ഒരു int ഇനത്തിലുള്ള വേരിയബിളാണ്‌. ! ! ]
ഇതിനു വേണ്ടി 4 ബൈറ്റ്‌ മെമ്മറിയാണ്‌ ഉപയോഗി 1001 1002 1003 1004
ക്കുന്നത്‌ (GCC OIG). RAM ലെ ഓരോ സെല്ലിലും 1 ഫഛിതം 1.5: മെമ്മറി നിക്കിലയ്ക്ക്‌
ബൈറ്റ്‌ മെമ്മറിയാണ്‌ ഉപയോഗിക്കുന്നത്‌. ഓരോ
സെല്ലിനും വ്യതൃസ്തമായ വിലാസം ഉണ്ട്‌. ഒന്നിലധികം സെല്ലുകള്‍ ചേര്‍ന്ന്‌ ഒരു
സ്റ്റോറേജ്‌ ലൊക്കേഷന്‍ ആയി ഉപയോഗിക്കുമ്പോള്‍ അതിനെ മെമ്മറി വേഡ്‌ എന്നു
പറയുന്നു. 1001, 1002, 1003, 1004 എന്നീ മെമ്മറി സ്ഥാനങ്ങള്‍ (Locations) വേരിയബിള്‍
ഉപയോഗിക്കുന്നു. ഇതില്‍ തുടക്കത്തിലെ സെല്ലിന്റെ വിലാസമായ (ബേസ്‌ അഡ്രസ്സ്‌)
1001 ആണ്‌ നമ്മള്‍ num എന്ന വേരിയബിളിന്റെ വിലാസമായി പരിഗണിക്കുന്നത്‌. 11-00
ക്ലാസ്സില്‍ നമ്മള്‍ പഠിച്ച ഒരു കാര്യം ഓര്‍മയുനണ്ടല്ലേോ? ഒരു വേരിയബിളിന്‌ L വില, 1
വില എന്നിങ്ങനെ രണ്ട്‌ വിലകള്‍ ഉണ്ട്‌. ഇതില്‍ L വില വിലാസത്തെയും, വില ഉള്ള
ടക്കത്തേയും പ്രതിനിധീകരിക്കുന്നു. ചിത്രം 1.5 ല്‍ num എന്ന വേരിയബിളിനു L വില
1001 ഉം R വില 25 ഉം ആണ്‌.

നമുക്ക്‌ ഒരു വേരിയബിളിന്റെ വിലാസം (L-value) മറ്റൊരു വേരിയബിളില്‍ ശേഖരിക്കണം
എന്ന്‌ കരുതുക. ഇതിനുപയോഗിക്കുന്ന വേരിയബിളിനെ പോയിന്റര്‍ വേരിയബിള്‍ എന്നു
പറയുന്നു. ഇപ്രകാരം നമുക്ക്‌ പോയിന്ററിനെ (Pointer) മെമ്മറി വിലാസം സൂക്ഷിക്കുന്ന
ഒരു വേരിയബിളായി നിര്‍വചിക്കാം. പോയിന്റര്‍ ഒരു അടിസ്ഥാന ആശയമാണ്‌. കാരണം
ഇത്‌ മെമ്മറി വിലാസത്തിനെ അതിന്റെ യഥാര്‍ഥ രൂപത്തില്‍ (Atomic) ഉള്‍ക്കൊള്ളുന്നു.
അതുകൊണ്ട്‌ പോയിന്റര്‍ എന്നാല്‍ മെമ്മറി സ്ഥാനത്തേക്ക്‌-അതിന്റെ ഉള്ളടക്കത്തിലേക്ക്‌
- ചുണ്ടുന്ന ഒരു വേരിയബിളായി നമുക്ക്‌ പറയാം.

കമ്പ്യൂട്ടര്‍ സയന്‍സ്‌ - XII

നമ്മള്‍ ഒരു വേരിയബിളിന്റെ മെമ്മറി വിലാസം പ്രദര്‍ശിപ്പിച്ചു നോക്കിയാല്‍
ഹെക്സാഡെസിമല്‍ സാഖുകളായ Ox7ffe69878784, Ox7ffe69878785 തുടങ്ങി
യവയായിരിക്കും ലഭിക്കുക. ഇതിനുകാരണം ഇക്കാലത്ത്‌ മെമ്മറി വിലാസം
സൂചിപ്പിക്കുന്നത്‌ ഹെക്സാ ഡെസിമല്‍ നമ്പറുകളിലാണ്‌ എന്നതാണ്‌.
എന്നാല്‍ ഈ പുസ്തകത്തില്‍ സൌകര്യത്തിനായി മെമ്മറി വിലാസങ്ങള്‍ 1001,
1002 തുടങ്ങിയ ഡെസിമല്‍ പൂര്‍ണസംഖ്യകളുപയോഗിച്ച്‌ രേഖപ്പെടുത്തിയിരിക്കുന്നു (ചിധ്രം
1.5 ശ്രദ്ധിക്കുക).

1964 ലെ പോയിന്ററിന്റെ കണ്ടുപിടുത്തം അറിയപ്പെടുന്നത്‌ ഹെറോള്‍ഡ്‌
ലോസന്‍ (ജനിച്ചത്‌ 1937) എന്ന സോഫ്റ്റ്‌ വെയര്‍ എഞ്ചിനീയറുടെ (ഇദ്ദേഹം
ഒരു സിസ്റ്റം എഞ്ചിനീയറും കാപ്യൂട്ടര്‍ ആര്‍ക്കിടെക്റ്റുമായിരുന്നു) പേരിലാണ്‌.
2000 ത്തില്‍, ലോസന്‍ ഈ കണ്ടുപിടുത്തത്തിന്റെ പേരില്‍ IEEE യുടെ
കാപ്യൂട്ടര്‍ പയനിയര്‍ അവാര്‍ഡ്‌ നേടുകയുണ്ടായി.

പ്രോഗ്ഗാം നിര്‍ദേശങ്ങളും, വേരിയബിളിന്റെ വില നാലി! Address

കളും ശേഖരിക്കാനാണ്‌ കംപ്യൂട്ടര്‍ അതിന്റെ മെമ്മറി [| |

ഉപയോഗിക്കുന്നത്‌ എന്ന്‌ നിങ്ങള്‍ക്കറിയാം. മെമ്മറി

എന്നത്‌ allo 1.6 കാണിച്ചതുപോലെ സ്റ്റോറേജ്‌
സെല്ലുകളുടെ തുടര്‍ച്ചയായ ഒരു ശേഖരമാണ്‌. സാധാരണമായി
ഓരോ സെല്ലിനും ഒരു ബൈറ്റ്‌ വലുപ്പമാണ്‌ ഉള്ളത്‌. ഓരോ സെല്ലി
നും അതിന്റേതായ മെമ്മറി വിലാസം ഉണ്ടായിരിക്കും. വിലാസങ്ങള്‍
പൂജൃത്തില്‍ തുടങ്ങി തുടര്‍ച്ചയായി നമ്പര്‍ ചെയ്തിരിക്കും. അവസാ
നത്തെ മെമ്മറിസെല്ലിന്റെ വിലാസം മെമ്മറിയുടെ വലുപ്പത്തെ
ആശ്രയിച്ചിരിക്കും. 64 K (64 x 1024 = 65536 ബൈറ്റ്‌) മെമ്മറി :
വലുപ്പം ഉള്ള ഒരു കാപ്യൂട്ടറിന്റെ മെമ്മറിയുടെ അവസാനത്തെ 65535
വിലാസം 65,535 ആയിരിക്കും. ചിത്രം 1.6: മെമ്മറിയുടെ
ഘടനാ

പധസ

നമ്മള്‍ ഒരു വേരിയബിളിനെ പ്രഖ്യാപിക്കുമ്പോള്‍ ആ വേരിയബി
ളിനു വേണ്ടി മെമ്മറിയിലെവിടെയോ ഒരു സ്ഥലം സുഷ്ടിക്കപ്പെടുന്നു. ഈ സ്ഥലത്താണ്‌
അതിന്റെ R വില (ഉള്ളൂടക്കം) ശേഖരിക്കപ്പെടുന്നത്‌. ഓരോ വേരിയബിളിനും അതിന്റേതായ
വിലാസം ഉണ്ടായിരിക്കും. ഇക്കാലത്ത്‌ RAMA വലുപ്പം റ8യിലും, മെമ്മറി സ്ഥാനത്തിന്റെ
വിലാസം ഹെക്‌സാഡെസിമല്‍ നമ്പറിലും ആണ്‌ രേഖപ്പെടുത്തുന്നത്‌. ഇതിനുകാരണം
ഡെസിമല്‍ നമ്പര്‍സിസ്റ്റത്തെ അപേക്ഷിച്ച്‌ ഹെക്സാഡെസിമല്‍ നമ്പര്‍ സിസ്റ്റത്തിന്‌ കുറഞ്ഞ
അക്കങ്ങള്‍ ഉപയോഗിച്ച്‌ വലിയ സംഖ്യകള്‍ രേഖപ്പെടുത്തല്‍ കഴിയും എന്നതാണ്‌.

1.2.1 പോയിന്റര്‍ വേരിയബിളിന്റെ പ്രഖ്യാപനം
(Declaration of pointer variable)

പോയിന്റര്‍ ഒരു രൂപീകൃത ഡാറ്റ ഇനമാണ്‌ (Derived data type). അതുകൊണ്ടുതന്നെ
പ്രോഗ്രാമില്‍ ഉപയോഗിക്കുന്നതിന്‌ മുമ്പ്‌ പോയിന്റര്‍ വേരിയബിളുകളെ പ്രഖ്യാപിക്കേ
ണ്ടതായിട്ടുണ്ട്‌. താഴെ കൊടുത്ത വാകൃഘടനയിലാണ്‌ പോയിന്റര്‍ വേരിയബിള്‍ പ്രഖ്യാ
പിക്കുന്നത്‌.

data_type * variable;
ഇവിടെ ഡാറ്റ ഇനം എന്നത്‌ അടിസ്ഥാന ഡാറ്റ ഇനമോ, ഉപയോക്തൃ നിര്‍വചിത cwog

1. സ്ട്രക്ചറും പോയിന്റും

ഇനമോ ആവാം. variable എന്നാല്‍ ഐഡന്റിഫയര്‍ ആണ്‌. ഡാറ്റ ഇനത്തിനും വേരിയ
ബിളിനും ഇടയിലുള്ള asterisk (*) ചിഹ്നം ശ്രദ്ധിക്കുക. ഇത്‌ പോയിന്റര്‍ വേരിയബിളിന്റെ
പ്രഖ്യാപനത്തിലെ പ്രത്യേകതയാണ്‌. ചുവടെ ചേര്‍ത്തവ പോയിന്റര്‍ വേരിയബിള്‍ പ്രഖ്യാ
പനത്തിന്റെ ഉദാഹരണങ്ങളാണ്‌.

int ഥി;

float *ptr2;

struct student *ptr3;
സാധാരണ പോലെ പോയിന്റര്‍ വേരിയബിളുകള്‍ക്കും മെമ്മറി നീക്കിവയ്ക്കല്‍ നടക്കുന്നു.
പോയിന്ററിന്‌ ആവശ്യമായ മെമ്മറി സ്ഥാനത്തിന്റെ വലുപ്പം ഡാറ്റാതരത്തിന്‌ അനുസരി
ച്ചാണെന്നു നിങ്ങള്‍ വിചാരിക്കുന്നുണ്ടോ? നമുക്കറിയാം മെമ്മറി വിലാസത്തിന്റെ തരം
അണ്‍സൈന്‍ഡ്‌ ഇന്റിജര്‍ ആണ്‌. ഇതിനര്‍ഥം എല്ലാ പോയിന്ററും അണ്‍സൈന്‍ഡ്‌
ഇന്റിജര്‍ ഇനത്തില്‍ പ്രഖ്യാപിക്കണം എന്നല്ല. പിന്നെ എന്താണ്‌ പോയിന്ററിന്റെ ഡാറ്റ
ഇനം തീരുമാനിക്കുന്നതിലെ മാനദണ്ഡം? ഒരു പോയിന്റര്‍ വേരിയബിളിന്റെ ഡാറ്റ ഇനം
അത്‌ പോയിന്റ്‌ ചെയ്യുന്ന ഡാറ്റയുടെ ഇനം തന്നെയാണ്‌. മുകളില്‍ കൊടുത്ത ഉദാഹര
ണത്തില്‍ ptrl എന്ന വേരിയബിളില്‍ ഒരു ഇന്റിജര്‍ മെമ്മറി സ്ഥാനത്തിന്റെ വിലാസമാണ്‌
സൂക്ഷിക്കപ്പെടുന്നത്‌. അതുപോലെ 2172 ഒരു ഫ്‌ളോട്ടിങ്‌ പോയിന്റ്‌ ലൊക്കേഷന്റെയും
ptr3 student ഇനത്തിലുള്ള സ്ട്രക്ചറിന്റെയും വിലാസം ഉള്‍ക്കൊള്ളുന്നു. കൂടുതല്‍ മെമ്മറി
സ്ഥാനങ്ങള്‍ ഉള്ള ഡാറ്റ ഇനങ്ങളെ പോയിന്റ്‌ ചെയ്യുമ്പോള്‍ അതിന്റെ തുടക്കത്തിലെ
സ്ഥാനത്തിന്റെ വിലാസമാണ്‌ (Base Address) പോയിന്റര്‍ വേരിയബിളില്‍ ശേഖരിക്കപ്പെ
ടുന്നത്‌. അപ്പോള്‍ ഒരു പോയിന്റര്‍ വേരിയബിളിന്റെ മെമ്മറി വലുപ്പം എന്തായിരിക്കും?
ഈ വലുപ്പം കമ്പ്യൂട്ടറിലെ വിലാസ സ്രമ്പദായത്തിനനുസരിച്ചായിരിക്കും (Addressing
scheme). സാധാരണയായി C++ ല്‍ ഒരു പോയിന്റര്‍ വേരിയബിളിന്റെ മെമ്മറി വലുപ്പം 2
മുതല്‍ 4 ബൈറ്റ്‌ വരെ ആയിരിക്കും. ഒരു പ്രോ്രാമറെ സംബന്ധിച്ചിടത്തോളം പ്രശ്നങ്ങള്‍
നിര്‍ധാരണം ചെയ്യുമ്പോള്‍ പോയിന്ററിന്റെ വലുപ്പം അറിയണമെന്ന്‌ നിര്‍ബന്ധമില്ല.

1.2.2 &, * എന്നീ ഓപ്പറേറ്ററുകള്‍ (The Operators & and *)

ഒരിക്കല്‍ ഒരു പോയിന്റര്‍ വേരിയബിള്‍ പ്രഖ്യാപിച്ചാല്‍ അതേ ഡാറ്റ ഇനത്തിലുള്ള
മെമ്മറി ലൊക്കേഷന്റെ വിലാസം മാത്രമേ അതില്‍ ശേഖരിക്കാന്‍ കഴിയൂ. സാധാരണ
C++ ല്‍ ഒരു വേരിയബിളിന്റെ പേര നല്‍കിയാല്‍ അതിന്റെ R വില മാതമേ സൂചിപ്പിക്ക
പ്പെടുന്നുള്ളൂ. അപ്പോള്‍ എങ്ങനെയാണ്‌ L വില അഥവാ വിലാസം ലഭിക്കുന്നത്‌? C++ ല്‍
ഇതിനുവേണ്ടി അഡ്രസ്സ്‌ ഓപ്പറേറ്റര്‍ (൭)
ഉപയോഗിക്കുന്നു. ഉദാഹരണമായി num ൧ 1001
ഒരു ഇന്റിജര്‍ വേരിയബിളാണെങ്കില്‍
അതിന്റെ വിലാസം താഴെ കൊടുത്ത
രീതിയില്‍ 221 എന്ന പോയിന്ററില്‍

ശേഖരിക്കാം. 1001
ചിത്രം 27 പോയിദ്മ്റും അത്‌ ചുങ്ടുന്ന മ്ഥെക്കേഷന്നും

1500

num 255)

ptrl = &num;
പ്രോഗ്രാം (പവര്‍ത്തിപ്പിക്കുന്ന സമയത്ത്‌
ഈ വാചകം 1൧) എന്ന പോയിന്റര്‍ വേരിയബിളിനും num എന്ന മെമ്മറി സ്ഥാനത്തിനും
ഇടയില്‍ ഒരു ബന്ധം സ്ഥാപിക്കുന്നു. ഇത്‌ ചിത്രം 1.7 ല്‍ കാണിച്ചിരിക്കുന്നു.

കമ്പ്യൂട്ടര്‍ സയന്‍സ്‌ - XII

പോയിന്റര്‍ ഒരു റഫറന്‍സ്‌ ആണെന്നു നാം മനസ്സിലാക്കി. അതുകൊണ്ട്‌ മെമ്മറിയില്‍
എവിടെ ഡാറ്റ ശേഖരിച്ചാലും അത്‌ സൂചിപ്പിക്കാന്‍ (refer) പോയിന്റര്‍ വേരിയബിളിനു
കഴിയും. പോയിന്റര്‍ വേരിയബിളിന്റെ ഡീറഫറന്‍സിലൂടെ നമുക്ക്‌ ഡാറ്റ ലഭ്യമാവും.
ഇതിനുവേണ്ടി ഇന്‍ഡയറക്ഷന്‍ ഓപ്പറേറ്റര്‍ (indirection operator) അഥവാ (*) ഉപ
യോഗിക്കുന്നു. ഇതിനെ ഡീറഫറന്‍സ്‌ ഓപ്പറേറ്റര്‍ (dereference operator) എന്നും പറയുന്നു.
താഴെ കൊടുത്ത C++ പ്രസ്താവന ptrl എന്ന പോയിന്റര്‍ വേരിയബിള്‍ ചൂണ്ടുന്ന ലൊക്കേ
ഷനിലെ വില പ്രദര്‍ശിപ്പിക്കുന്നു.

cout << *ptrl;

ഈ പ്രസ്താവന cout << num; എന്ന പ്രസ്താവനയ്ക്ക്‌ തുല്യമാണെന്ന്‌ വ്യക്ത
മാണല്ലോ.

* ഓപ്പറേറ്റര്‍ ഒരു പോയിന്റര്‍ ലൊക്കേഷനിലെ വില തിരിച്ച്‌ തരുന്നതു കൊണ്ട്‌ “വാല്യു
അറ്റ്‌ ഓപ്പറേറ്റര്‍” എന്നും അറിയപ്പെടുന്നു.

& ഓപ്പറേറ്ററും * ഓപ്പറേറ്ററും യൂനറി ഓപ്പറേറ്ററുകളുമാണ്‌. എല്ലാ വേരിയബിളിനും
മെമ്മറി സ്ഥാനവും വിലാസവും ഉള്ളതിനാല്‍ & ഓപ്പറേറ്റര്‍ എല്ലാ വേരിയബിളിന്റെയും
കൂടെ ഉപയോഗിക്കാം. എന്നാല്‍ * ഓപ്പറേറ്റര്‍ പോയിന്റര്‍ വേരിയബിളിന്റെ കൂടെ മാത്രമേ
ഉപയോഗിക്കാന്‍ കഴിയുകയുള്ളു.

ചിത്രം 1.7 ല്‍ കൊടുത്ത വേരിയബിള്‍ പരിശോധിക്കു. ചുവടെ കൊടുത്ത ഉദാഹരണങ്ങള്‍
& ഓപ്പറേറ്ററുകളുടെ ഉപയോഗം കാണിക്കുന്നു.

cout<< &num; // 1001 num ന്റെ വിലാസം പ്രദര്‍ശിപ്പിക്കുന്നു

cout<< ptrl; // 1001 ptrl ന്റെ ഉള്ളടക്കം പ്രദര്‍ശിപ്പിക്കുന്നു

cout<< num; // 25 num ന്റെ ഉള്ളടക്കം പ്രദര്‍ശിപ്പിക്കുന്നു

cout<< *ptrl;/* 25 ptr1 പോയിന്റ്‌ ചെയ്യുന്ന സ്ഥാനത്തെ വില പ്രദര്‍ശിപ്പി

ക്കുന്നു
cout<< éptrl;// 1500 (൬2) ന്റെ വിലാസം പ്രദര്‍ശിപ്പിക്കുന്നു.
cout<< *num; // Error!! num എന്നത്‌ പോയിന്റര്‍ വേരിയബിളല്ല.

അവസാനത്തെ പ്രസ്താവന തെറ്റാണ്‌. കാരണം NUM ഒരു പോയിന്റര്‍ വേരിയബിളല്ല.
അതിലുള്ള 25 എന്ന വില ഒരു മെമ്മറിവിലാസവും അല്ല. * ഓപ്പറേറ്റര്‍ പോയിന്റര്‍
വേരിയബിളിനോടു കൂടി മാത്രമേ ഉപയോഗിക്കാന്‍ പാടുള്ളൂ.

1.3 മെമ്മറി നീക്കിവയ്ക്കലിന്റെ രീതികള്‍
(Methods of memory allocation)

വേരിയബിള്‍ പ്രഖ്യാപന പ്രസ്താവനയിലുടെയാണ്‌ മെമ്മറി നീക്കിവയ്ക്കല്‍ തുടങ്ങു
ന്നതെന്നു എന്ന്‌ നമുക്കറിയാം. പ്രോഗ്രാം റാമില്‍ ലോഡ്‌ ചെയ്യുമ്പോള്‍ ആവശ്യമുള്ള
മെമ്മറിയും നീക്കിവയ്ക്കുന്നു. മെമ്മറി നീക്കിവയ്ക്കലിനു ശേഷമാണ്‌ പ്രോ്രഗാം പ്രവര്‍ത്തി
പ്പിക്കല്‍ ആരംഭിക്കുന്നത്‌. മെമ്മറി നീക്കി വയ്ക്കുന്നതിന്റെ അളവ്‌ പ്രോഗ്രാമില്‍ ഉപയോ
ഗിച്ചിരിക്കുന്ന വേരിയബിളുകളുടെ എണ്ണത്തെയും ഇനത്തെയും അനുസരിച്ചാണ്‌. ഈ
അളവ്‌ സ്ഥിരമാണ്‌ (static). ഇത്‌ ഒരിക്കലും പ്രോഠ്രഗാം പ്രവര്‍ത്തിപ്പിക്കുന്ന സമയത്ത്‌

1. സ്ട്രക്ചറും പോയിന്റും

കൂടുകയോ കുറയുകയോ ഇല്ല. ഇങ്ങനെ പ്രോ്രഗാം പ്രവര്‍ത്തിപ്പിക്കുന്നതിനു മുമ്പ! നട
ക്കുന്ന മെമ്മറി നീക്കിവയ്ക്കലിനെ സ്റ്റാറ്റിക്‌ മെമ്മറി നീക്കിവയ്ക്കല്‍ (Static Memory
Allocation) എന്ന്‌ പറയുന്നു. ഈ നീക്കിവയ്ക്കല്‍ നടക്കുന്നത്‌ പ്രോഗ്രാമിലെ വേരിയബിള്‍
പ്രഖ്യാപന പ്രസ്താവനയ്ക്കനുസരിച്ചാണ്‌. ഇനി മറ്റൊരുതരം മെമ്മറി നീക്കിവയ്ക്കല്‍
ആയ ഡൈനാമിക്‌ മെമ്മറി നീക്കിവയ്ക്കല്‍ (Dynamic Memory Allocation) പരിചയപ്പെടാം.
ഇവിടെ മെമ്മറി നീക്കിവയ്ക്കല്‍ നടക്കുന്നത്‌ പ്രോഗ്രാം പ്രവര്‍ത്തിക്കുമ്പോഴാണ്‌. ഈ
നീക്കിവയ്ക്കല്‍ നടക്കുന്നത്‌ NEW എന്ന ഓപ്പറേറ്റര്‍ മുഖേനയാണ്‌. ഇങ്ങനെ നീക്കിവച്ച
മെമ്മറി സ്വതന്ത്രമാക്കാന്‍ (Deallocate) delete എന്ന ഓപ്പറേറ്റര്‍ ഉപയോഗിക്കുന്നു.

1.3.1 ഡൈനാമിക്‌ ഓപ്പറേറ്ററുകള്‍ - new, delete

C++ ലെ NeW എന്ന കീവേഡ്‌ ഒരു ഓപ്പറേറ്റര്‍ ആണ്‌. ഇത്‌ ഡൈനാമിക്‌ മെമ്മറി നീക്കി
വയ്ക്കലിനുവേണ്ടി ഉപയോഗിക്കുന്നു. ഈ നീക്കിവയ്ക്കല്‍ നടക്കുന്നത്‌ പ്രോഗ്രാം
പ്രവര്‍ത്തിപ്പിക്കുന്ന സമയത്താണ്‌ (റണ്‍ ടൈമിലാണ്‌). ഇത്‌ ഒരു WMC] ഓപ്പറേറ്റര്‍
ആണ്‌. അടിസ്ഥാന ഡാറ്റ ഇനത്തിലെയോ ഉപയോക്തൃനിര്‍വചിത ഡാറ്റ ഇനത്തിലേയോ
ഒരു ഓപ്പറേറ്ററാണ്‌ ഇതില്‍ ഉപയോഗിക്കുന്നത്‌. NEW എന്ന ഓപ്പറേറ്ററും ഈ ഓപ്പറേറ്ററും
കൂടിച്ചേര്‍ന്ന്‌ ഒരു പദപ്രയോഗം (Expression) ഉണ്ടാക്കുകയും ആ പദപ്രയോഗം ഒരു വില
തിരിച്ച്‌ നല്‍കുകയും ചെയ്യുന്നു. ഒരു മെമ്മറി സ്ഥാനത്തിന്റെ വിലാസമാണ്‌ ആ വില.
മെമ്മറി സ്ഥാനത്തിന്റെ വലുപ്പം ഓപ്പറേറ്ററിന്റെ ഡാറ്റ ഇനത്തിനനുസരിച്ചായിരിക്കും.
ഡൈനാമിക്‌ നീക്കിവയ്ക്കലിന്‌ താഴെ കൊടുത്ത വാകൃഘടന ഉപയോഗിക്കുന്നു.

pointer variable = new data_type;
പോയിന്റര്‍ വേരിയബിള്‍ ഉപയോഗിക്കുന്നത്‌ ൩൭൭൦ ഓപ്പറേറ്റര്‍ തിരിച്ച്‌ തരുന്ന മെമ്മറി
വിലാസം സൂക്ഷിക്കാന്‍ വേണ്ടിയാണ്‌. അതുകൊണ്ട്‌ NEW ഓപ്പറേറ്ററിന്‌ ശേഷം നല്‍കിയ
ഡാറ്റ ഇനത്തില്‍ തന്നെ പോയിന്റര്‍ വേരിയബിള്‍ നേരത്തേ പ്രഖ്യാപിച്ചിരിക്കണം.

short * si ptr;

float * fl_ptr;

struct complex * cx_ptr;

si_ptr = new short;

21 ptr = new float;

cx_ptr = new complex;
ഇവയുടെ മെമ്മറി നീക്കിവയ്ക്കല്‍ ചിത്രം 18 ല്‍ കാണിച്ചിരിക്കുന്നു.

si_ptr fl_ptr cx_ptr

1000 1010 1200
റ്‌ i aw real imaginary

1000 1001 1010 1011 1012 1013 1200 1201 1202 1203

ചിതം 1.8; ഗ്ധൈനമ്മിക്‌ മെമ്മറി നിക്കിവയ്ക്കുന്നതിന്റെ

ചിത്രം 1.8 ല്‍ കാണിച്ചിരിക്കുന്നത്‌ ശ്രദ്ധിക്കുക. ഇവിടെ 2 ബൈറ്റ്‌ മെമ്മറി സ്ഥാനം
short ഇനത്തിലുള്ള ഡാറ്റയ്ക്ക്‌ നീക്കിവയ്ക്കുന്നു. ഇതിന്റെ വിലാസം 1000 ആണ്‌,
ഇതുപോലെ 1010 എന്ന വിലാസത്തില്‍ 4 ബൈറ്റ്‌ മെമ്മറി float ഇനത്തിലുള്ള ഡാറ്റയ്ക്ക്‌

കമ്പ്യൂട്ടര്‍ സയന്‍സ്‌ - XII

നീക്കിവയ്ക്കുന്ന. ഇത്‌ സൂക്ഷിക്കുന്നത്‌ £ 1 1൦൧ എന്ന പോയിന്റര്‍ വേരിയബിളിലാണ്‌.
മുമ്പ്‌ നാം പഠിച്ച complex എന്ന സ്ട്രക്ചര്‍ 2 Short തരത്തിലുള്ള അംഗങ്ങളെ
ഉള്‍ക്കൊള്ളുന്നു. അതുകൊണ്ട്‌ 1200 എന്ന വിലാസത്തില്‍ തുടങ്ങുന്ന 4 ബൈറ്റ്‌ മെമ്മറി
ലൊക്കോഷന്‍ ഠ:: 0൧ എന്ന complex സ്ട്രക്ചര്‍ ഇനത്തിലുള്ള പോയിന്റര്‍ വേരിയ
MAG സൂചിപ്പിക്കുന്നു. (short real നും short imaginary യ്ക്കും 2 ബൈറ്റ്‌
വീതം ആകെ 4 ബൈറ്റ്‌). ഡൈനാമിക്‌ മെമ്മറി അലോക്കേഷന്‍ നടത്തിയ സ്ഥലങ്ങള്‍
സാധാരണ വേരിയബിളുകള്‍ക്ക്‌ സൂചിപ്പിക്കാന്‍ കഴിയില്ല. ഇത്‌ സൂചിപ്പിക്കാന്‍ പോയിന്റ്‌
വേരിയബിള്‍ തന്നെ ഉപയോഗിക്കണം. താഴെ കൊടുത്ത ഉദാഹരണം ശ്രദ്ധിക്കുക.

*si_ ptr = 247;

cin >> *fl ptr;
നമുക്ക്‌ സ്്രക്ചര്‍ പോയിന്റര്‍ വേരിയബിളായ cx_ptr ഉണ്ട്‌. ഇത്‌ സൂചിപ്പിക്കുന്ന ഡാറ്റ
മുകളില്‍ കൊടുത്ത രീതിയില്‍ ഉപയോഗിക്കാന്‍ കഴിയില്ല. ഇതിന്റെ ഉപയോഗരീതി ഈ
അധ്യായത്തില്‍ത്തന്നെ നമുക്ക്‌ പിന്നീട്‌ മനസ്സിലാക്കാം.

നമുക്ക്‌ സ്റ്റാറ്റിക്‌ മെമ്മറി നീക്കിവയ്ക്കല്‍ വേരിയബിളുകള്‍ക്ക്‌ പ്രാരംഭവില നല്‍കുന്നതു
പോലെ ഡൈനാമിക്‌ മെമ്മറി നീക്കിവയ്ക്കലിലും വേരിയബിളുകള്‍ക്ക്‌ പ്രാരംഭവില
നല്‍കാം. ഇതിന്‌ ചുവടെ ചേര്‍ത്ത വാകൃഘടന ഉപയോഗിക്കുന്നു.

pointer variable = new data ലട (൫1൭)
ചുവടെ കൊടുത്തവ ഡൈനാമിക്‌ മെമ്മറി നീക്കിവയ്ക്കലിന്റെ കൂടെയുള്ള പ്രാരംഭവില
നല്‍കലിന്‌ ഉദാഹരണങ്ങളാണ്‌.

൭2 ptr = new ൭൨൧൧ (0)

21 ptr = new float(3.14);
CX_PtL ന്റെ കാരൃത്തില്‍ ഈ തരത്തിലുള്ള പ്രാരംഭവില നല്‍കല്‍ സാധ്യമല്ല.
ഒരിക്കല്‍ നമ്മള്‍ New ഓപ്പറേറ്റര്‍ ഉപയോഗിച്ച്‌ ഡൈനാമിക്‌ മെമ്മറി നീക്കിവയ്ക്കല്‍
നടത്തിയാല്‍ അത്‌ സ്വത്രന്തമാക്കേണ്ടതായിട്ടുണ്ട്‌ അഥവാ ഡീ അലോക്കേറ്റ്‌ ചെയ്യേണ്ട
തായിട്ടുണ്ട്‌. C++ ല്‍ ഇതിനുവേണ്ടി delete ഓപ്പറേറ്ററിനെ ഉപയോഗിക്കുന്നു. സ്റ്റാറ്റിക്‌
മെമ്മറി നീക്കിവയ്ക്കലിന്റെ കാരത്തില്‍ വേരിയബിളിന്റെ പരിധിയും, നിലനില്‍ക്കുന്ന
സമയവും നോക്കി ഓപ്പറേറ്റിംഗ്‌ സിസ്റ്റം തന്നെ മെമ്മറി നീക്കിവയ്ക്കലും, സ്വത്ര്ത്രമാ
ക്കലും നടത്തും. എന്നാല്‍ ഡൈനാമിക്‌ മെമ്മറി നീക്കിവയ്ക്കലുമായി ബന്ധപ്പെട്ട മെമ്മറി
സ്വതന്ത്രമാക്കാന്‍ പ്രോഗ്രാമില്‍ തന്നെ delete ഓപ്പറേറ്റര്‍ ഉപയോഗിച്ചുള്ള നിര്‍ദേശ
ങ്ങള്‍ നല്‍കേണ്ടതാണ്‌. delete ഓപ്പറേറ്ററിന്റെ ഉപയോഗം താഴെ നല്‍കിയിരിക്കുന്നു.

delete pointer variable;
ചുവടെ ഉദാഹരണങ്ങള്‍ ചേര്‍ക്കുന്നു.

delete si ptr;

delete fl ptr, cx_ptr;

1.3.2 മെമ്മറി ലീക്ക്‌ (Memory leak)

NEW ഓപ്പറേറ്റര്‍ ഉപയോഗിച്ച്‌ നീക്കി വച്ച മെമ്മറി ബ്ളോക്ക്‌ delete ഓപ്പറേറ്റര്‍
ഉപയോഗിച്ച്‌ സ്വത്രന്ത്രമാക്കുന്നില്ല എങ്കില്‍ അതിനെ ഓര്‍ഫന്‍റ്‌ ബ്ലോക്ക്‌ എന്ന്‌ പറയുന്നു.
ഇത്‌ ഉപയോഗിക്കാതെ ബാക്കി വരുന്ന മെമ്മറി ബ്ലോക്ക്‌ ആണ്‌. പക്ഷെ ഇത്‌ വീണ്ടും

1. സ്ട്രക്ചറും പോയിന്റും

ഡാറ്റ സൂക്ഷിക്കാന്‍വേണ്ടി നീക്കിവയ്ക്കാന്‍ കഴിയില്ല. പ്രോ്രഗാമിന്റെ ഓരോ പ്രവര്‍ത്തി

പ്പിക്കലിലും ഇത്തരത്തിലുള്ള ബ്ലോക്കുകള്‍ സൃഷ്ടിക്കപ്പെടുകയും മെമ്മറിയുടെ

ഉപയോഗിക്കത്തക്ക ഭാഗം തുടര്‍ച്ചയായി കുറയുകയും ചെയ്യും. ഇങ്ങനെ മെമ്മറി

നഷ്ടപ്പെടുന്നതിനെ മെമ്മറി ലീക്ക്‌ എന്ന്‌ പറയുന്നു.

താഴെ പറയുന്നവയാണ്‌ മെമ്മറി ലീക്കിന്റെ കാരണങ്ങള്‍.

€ ഡൈനാമിക്ക്‌ നീക്കിവയ്ക്കല്‍ നടത്തിയ മെമ്മറി (New ഓപ്പറേറ്റര്‍ ഉപയോഗിച്ച്‌)
സ്വത്രന്തമാക്കാന്‍ മറന്നു പോകുന്നത്‌.

പ്രോഗ്രാമിങ്ങിലെ ലോജിക്കല്‍ പിഴവ്‌ മൂലം ‘delete’ നിര്‍ദേശം പ്രവര്‍ത്തിപ്പിക്കാ
ത്തത്‌.

നിലവില്‍ ഒരു മെമ്മറി ബ്ലോക്കിനെ പോയിന്റ്‌ ചെയ്യുന്ന പോയിന്ററിലേയ്ക്ക്‌ new
ഓപ്പറേറ്ററിലൂടെ ഒരു പുതിയ മെമ്മറി വിലാസം ശേഖരിക്കുന്നത്‌.

NEW ഓപ്പറേറ്റര്‍ ഉപയോഗിച്ച്‌ നടത്തിയ മെമ്മറി നീക്കിവയ്ക്കല്‍ delete ഓപ്പറേറ്റര്‍
ഉപയോഗിച്ച്‌ സ്വതന്ത്രമാക്കുക എന്നതാണ്‌ മെമ്മറി ലീക്കിനുള്ള പരിഹാരം. ഡൈനാ
മിക്‌ നീക്കിവയ്ക്കലിന്റെ കാരൃത്തില്‍ മാ്രമാണ്‌ മെമ്മറി ലീക്ക്‌ ഉണ്ടാകുന്നത്‌. സ്റ്റാറ്റിക്‌
നീക്കിവയ്ക്കലില്‍ മെമ്മറി നീക്കിവയ്ക്കലും സ്വത്ന്ത്രമാക്കലും ഓപ്പറേറ്റിംങ്‌ സിസ്റ്റം
നേരിട്ട്‌ നടപ്പിലാക്കുന്നു. ഇതിന്‌ പ്രത്യേക നിര്‍ദേശത്തിന്റെ ആവശ്യം ഇല്ല. അതുകൊണ്ട്‌
സ്റ്റാറ്റിക്‌ മെമ്മറി നീക്കിവയ്ക്കലില്‍ മെമ്മറി ലീക്കിനുള്ള സാധ്യതയില്ല.

ഇപ്പോള്‍ നമുക്ക്‌ സ്റ്റാറ്റിക്‌ മെമ്മറി നീക്കിവെക്കലും ഡൈനാമിക്‌ മെമ്മറി
നീക്കിവെക്കലും താരതമ്യം ചെയ്യാം. പട്ടിക 14 ല്‍ ഈ താരതമ്യം കൊ
ടുത്തിരിക്കുന്നു. ചില ഭാഗങ്ങള്‍ നിങ്ങള്‍ക്ക്‌ പൂരിപ്പിക്കാന്‍ വേണ്ടി വിട്ടി

നമുക്കു ചെയ്യാം രിക്കുന്നു.

1. പ്രോഗ്രാം പ്രവര്‍ത്തിപ്പിക്കുന്നതിന്‌ മുമ്പ്‌
നടക്കുന്നു.

NEW ഓപ്പറേറ്റര്‍ ആവശ്യമുണ്ട്‌.
പോയിന്റര്‍ നിര്‍ബന്ധമാണ്‌.

Iv. ഡാറ്റയെ വേരിയബിളുകള്‍ ഉപയോഗിച്ച്‌
സൂചിപ്പിക്കുന്നു.

പ ഡീ-നീക്കിവയ്ക്കലിന്‌ വേണ്ടി പ്രത്യേ
കം സ്റ്റേറ്റ്മെന്റ്‌ ആവശ്യമില്ല.

പട്ടിക 2൭ സ്ത്ാറ്റിക്‌ തിക്കിവയ്ക്കലും ്ഥൈനാമ?ക്‌ നിക്കിവയ്ക്കലും തമ്മിലുള്ള താരതമ്യം

കമ്പ്യൂട്ടര്‍ സയന്‍സ്‌ - XII

നിങ്ങളുടെ പുരോഴതി അറിയാം
1. പോയിന്റര്‍ എന്നാല്‍ എന്ത്‌?

2. ഒരു പോയിന്ററിന്റെ ഡാറ്റ ഇനം നിര്‍ണയിക്കുന്നതിന്റെ മാനദണ്ഡ
മെന്ത്‌?

3. mks ഒരു ഇന്നിജര്‍ വേരിയബിളാണെങ്കില്‍, ഈ വേരിയബിളിന്റെ
വിലാസം ഒരു പോയിന്റര്‍ വേരിയബിളില്‍ ശേഖരിക്കാനുള്ള C++
വാചകം എഴുതുക.

4. ptr ഒരു പോയിന്റര്‍ വേരിയബിള്‍ ആണ്‌. ഇതുപയോഗിച്ച്‌ ഒരു ഇന്റിജ
റിന്‌ വേണ്ടി മെമ്മറി നീക്കി വച്ച്‌ അതില്‍ 12 എന്ന സംഖ്യ പ്രാരംഭവി
ലയായ്‌ ചേര്‍ക്കുന്നതിനുള്ള C++ വാചകം എഴുതുക.

5. ചുവടെ ചേര്‍ത്ത വാചകങ്ങള്‍ പരിഗണിക്കുക: int *p, a=5;
p=&a; cout<<*pta; ഇതിന്റെ ഓട്ട്പുട്ട്‌ എന്താണ്‌?

1.4 പോയിന്ററിലെ പ്രവര്‍ത്തനങ്ങള്‍ (Operations on pointers)

പോയിന്ററുമായി ബന്ധപ്പെട്ട്‌ ഇന്‍ഡയറക്ഷന്‍ (*) ഓപ്പറേറ്റര്‍, അഡ്രസ്സ്‌ ഓഫ്‌ (&) ഓപ്പറേ
96 എന്നിവ നമ്മള്‍ ചര്‍ച്ച ചെയ്തു കഴിഞ്ഞല്ലേ. 11-0൦ ക്ലാസ്സില്‍ അരിത്തമാറ്റിക്‌, റിലേ
ഷണല്‍, ലോജിക്കല്‍ എന്നീ ഓപ്പറേറ്ററുകളും പരിചയപ്പെട്ടു. ഈ ഭാഗത്ത്‌ പോയിന്റര്‍
വേരിയബിളില്‍ ഉപയോഗിക്കുന്ന പ്രവര്‍ത്തനങ്ങളാണ്‌ നാം പരിചയപ്പെടാന്‍ പോകുന്നത്‌.
1.4.1 പോയിന്ററിലെ അരിത്തമാറ്റിക്‌ പ്രവര്‍ത്തനങ്ങള്‍
(Arithmetic operation on pointers)

മെമ്മറി വിലാസം എന്നത്‌ ഒരു സംഖ്യയാണെന്ന്‌ നമുക്ക്‌ അറിയാം. അതിനാല്‍ ചില
അരിത്തമാറ്റിക്‌ പ്രവര്‍ത്തനങ്ങളും നമുക്ക്‌ പോയിന്ററര്‍ വേരിയബിളില്‍ പ്രയോഗിക്കാം.
ഭാഗം 13.1 ല്‍ ഉപയോഗിച്ചു si_ptr, fl_ptr എന്നീ പോയിന്ററര്‍ വേരിയബിളുകള്‍
പരിഗണിക്കുക. (ചിര്രം 1.8 കാണുക). ഇനി ചുവടെ ചേര്‍ത്ത പ്രസ്താവനകള്‍ പരിശോ
ധിക്കുക.

cout << si_ptr + 1;

cout << fl_ptr + 17
എന്തായിരിക്കും ഓട്ട്പൂട്ട്‌? 1001 ഉം 1011 ആണ്‌ @VSaNg aga നിങ്ങള്‍ കരുതുന്നുണ്ടോ.

പോയിന്ററിനോട്‌ 1 കൂട്ടുന്നത്‌ int തരത്തിലുള്ള വേരിയബിളിനോടോ float തരത്തി
ലുള്ള വേരിയബിളിനോടോ 1 കൂട്ടുന്നത്‌ പോലെ അല്ല. നമ്മള്‍ ഒരു short int പോയിന്റ്‌
റിനോട്‌ 1 കൂട്ടുമ്പോള്‍, ആ പ്രയോഗം തൊട്ടടുത്ത മെമ്മറി സ്ഥാനത്തിന്റെ വിലാസമായി
മാറുന്നു. അതായത്‌ 1000, 1001 എന്നീ ലൊക്കേഷനുകള്‍ short int വേരിയബിള്‍ ഉപ
യോഗിക്കുന്ന ലൊക്കേഷനുകളാണ്‌. 1002 എന്നത്‌ അടുത്ത short int ന്റെ ബേസ്‌
അര്ഡസ്സായിരിക്കും. അതായത്‌ നമ്മള്‍ short int പോയിന്റര്‍ വേരിയബിളിനോട്‌
ഒന്ന്‌ കൂട്ടുമ്പോള്‍ short int ന്റെ യഥാര്‍ഥ വലുപ്പം (2) ആണ്‌ മെമ്മറി അഡ്രസ്സിനോട്‌
കൂട്ടുന്നത്‌. ഇതുപോലെ ഒരു ഫ്‌ളോട്ട്‌ പോയിന്റര്‍ വേരിയബിളിനോട്‌ 1 കൂട്ടുമ്പോള്‍
അതിന്റെ വലുപ്പമായ 4 ആണ്‌ വിലാസത്തോട്‌ കൂട്ടുന്നത്‌. അതുകൊണ്ട്‌ f1_ptr+1

1. സ്ട്രക്ചറും പോയിന്റും

എന്ന പദപ്രയോഗം നല്‍കുന്നത്‌ 1014 എന്ന വിലാസമാണ്‌. അതുകൊണ്ട്‌ ൭൨ ൧-4
എന്ന പദപ്രയോഗം 1008 (1000+4X2) എന്ന വിലാസം നല്‍കുമെന്ന്‌ വ്യക്തമാണ്‌. ഇതു
പോലെ 21 2-3 നല്‍കുന്നത്‌ 1022 (1010+3X4) എന്ന വിലാസമാണ്‌. ഇതുപോലെ
പോയിന്ററര്‍ വേരിയബിളുകളില്‍ വ്യവകലനവും (Subtraction) നടത്താം. മറ്റ്‌ അരിത്തമാറ്റിക്‌
ഓപ്പറേറ്റഷനുകള്‍ ഒന്നും തന്നെ പോയിന്ററര്‍ വേരിയബിളിനു മുകളില്‍ പ്രവര്‍ത്തിക്കുക
യില്ല.

ചുവടെ കൊടുത്തിരിക്കുന്ന അരിത്തമാറ്റിക്‌ പദ്രപയോഗങ്ങള്‍ നല്‍കുന്ന
വിലകള്‍ കണ്ടുപിടിക്കുക.
a) si_ptr + 10 b) fl ptr + 7

c) si_ptr - 5 d) fl_ptr - 10

നമുക്കു ചെയ്യാം

ഇത്തരത്തിലുള്ള ഓപ്പറേഷനുകള്‍ പ്രായോഗികമായി ചിലപ്പോള്‍ തെറ്റായേക്കാം. കാരണം
ഈ പ്രവര്‍ത്തനത്തിലൂടെ സൂചിപ്പിക്കുന്ന മെമ്മറി സ്ഥാനങ്ങള്‍ ഉപയോഗിക്കുവാനുള്ള
അവകാശപ്രകാരം ഉപയോഗിക്കാന്‍ അനുവാദമില്ലാത്തവയായിരിക്കും.

ചുവടെ ചേര്‍ത്തിരിക്കുന്ന ഉദാഹരണങ്ങള്‍ പോയിന്ററര്‍ ഓപ്പറേഷനുകള്‍ വിശദീകരി

ക്കുന്നു.

int *ptrl, *ptr2; // രണ്ട്‌ പോയിന്റേറര്‍ വേരിയബിളുകളുടെ പ്രഖ്യാപനം

ptrl = new int(5); /* ഡൈനാമിക്‌ മെമ്മറി അലോക്കേഷന്‍ (വിലാസം 1000
ആണെന്നിരിക്കട്ടെ?, 5 എന്ന സാംഖ്യ പ്രാരംഭവിലയായ്‌
ചേര്‍ന്നിരിക്കുന്നു. 5 * /

10122 = ptrl + 1; /* ptr2 തൊട്ടടുത്ത ഇന്റിജര്‍ സ്ഥാനമായ 1004 ലേക്ക്‌
പോയിന്റ്‌ ചെയ്യും */

t++ptr2; // ptr2 = ptr2 + 1 എന്ന ഓപ്പറേഷന്‍ തുല്യം

cout<< ൧1% // 1000 പ്രദര്‍ശിപ്പിക്കുന്നു

cout<< *ptri; // 5 പ്രദര്‍ശിപ്പിക്കുന്നു

cout<< ptr2; // 1004 പ്രദര്‍ശിപ്പിക്കുന്നു

cin>> *ptr2; /* ഒരു ഇന്റിജര്‍ റീഡ്‌ ചെയ്ത്‌ (122 ആണെന്നിരിക്കട്ടെ)
ഇതിനെ 1004 എന്ന ലൊക്കേഷനില്‍ ശേഖരിക്കുന്നു * /

cout<< *ptrl + 1; // 6 (5 + 1) പ്രദര്‍ശിപ്പിക്കുന്നു

cout<< *(ptrl + 2)7 // 12 പ്രദര്‍ശിപ്പിക്കുന്നു, (1004 ലെ വില)

ptrl--; // 1221 = ptrl - 1 എന്ന പ്രസ്താവനയ്ക്ക്‌
തുല്യം

ഇനി നമുക്ക്‌ പോയിന്ററിന്റെ പ്രവര്‍ത്തനങ്ങള്‍ വിവരിക്കുന്ന ഒരു പ്രോഗ്രാം എഴുതാം.
പ്രോഗ്രാം 1.3 ഒരു കൂട്ടം കൂട്ടികളുടെ ശരാശരി ഉയരം കാണാനുളളതാണ്‌.

Program 1.3: കുട്ടികളുടെ ശരാശരി ഉയരം കാണാന്‍

#include <iostream>

using namespace std;

കമ്പ്യൂട്ടര്‍ സയന്‍സ്‌ - XII

int main()

{
int *ht_ptr, n, s=0;
float avg_ht;

ht_ptr = new int; ഡൈനാമിക്‌ മെമ്മറി അലോക്കേഷന്‍
cout<<"Enter the number of students: ";
cin>>n;

for (int i=O; i<n; i++)

|
cout<<"Enter the height of student "<<itl<<" - ന
cin>>* (ht_ptrt+i);//to get the address of the next location
s=s + *(ht_ptrti);

}

avg ht = (float)s/n;
cout<<"Average height of students in the class = "<<avg_ht;
return 0;

}

പ്രോഗ്രാം 1.3 ല്‍ ഡൈനാമിക്‌ നീക്കിവയ്ക്കലിലൂടെ ഒരു ഇന്റിജര്‍ മെമ്മറിസ്ഥാനം നിര്‍മിച്ച്‌
അതിന്റെ വിലാസം ht_ptr എന്ന പോയിന്റര്‍ വേരിയബിളില്‍ ശേഖരിക്കുന്നു. ലൂപ്പിന്റെ
ബോഡി ആദ്യത്തെ പ്രാവശ്യം പ്രവര്‍ത്തിക്കുമ്പോള്‍ 0 ആണ്‌ വിലാസത്തോട്‌ കൂട്ടുന്നത്‌.
ഇത്‌ പ്രതേകിച്ച്‌ മാറ്റമൊന്നും വരുത്തുന്നില്ല. ഇന്‍പുട്ട്‌ ഡാറ്റ മെമ്മറി സ്ഥാനത്ത്‌ സൂക്ഷി
ക്കുന്നു. ലൂപ്പ്‌ ബോഡിയുടെ അടുത്ത പ്രവര്‍ത്തനത്തില്‍ വിലാസത്തോട്‌ 1 കൂട്ടുന്നു.
അങ്ങനെ അടുത്ത ഇന്റിജര്‍ സ്ഥാനത്തില്‍ രണ്ടാമത്തെ ഡാറ്റ ശേഖരിക്കപ്പെടുന്നു. ഈ
പ്രവൃത്തി 2 തവണ ആവര്‍ത്തിക്കപ്പെടുന്നു. അങ്ങനെ 2൨ തവണ കൂട്ടികളുടെ ഡാറ്റയും
തുടര്‍ച്ചയായ ഇന്റിജര്‍ സ്ഥാനങ്ങളില്‍ ശേഖരിക്കപ്പെടുന്നു. ഓരോ ഡാറ്റയും നല്‍കുന്ന
സമയത്തുതന്നെ അതിന്റെ തുകയും കണക്കാക്കുന്നു. അവസാനം ശരാശരി ഉയരം കണ
ക്കാക്കി പ്രദര്‍ശിപ്പിക്കുന്നു. കൃത്യമായ ശരാശരി ഉയരം ലഭിക്കുവാന്‍ തുകയെ ബാഹ്യ
ഇനം മാറ്റലിലൂടെ (Explicit type conversion) ഫ്ളോട്ടാക്കി മാറ്റിയിരിക്കുന്നു. പ്രോഗ്രാ
മിന്റെ ഓഈട്ട്പുട്ട്‌ ചുവടെ ചേര്‍ക്കുന്നു.

Enter the number of students: 5

Enter the height of student 1 - 170
Enter the height of student 2 - 169
Enter the height of student 3 - 175
Enter the height of student 4 - 165
Enter the height of student 5 - 177

Average height of students in the class = 171.199997

GlalOLNI0 1.3 മറ്റൊരു കാര്യം കൂടി വിവരിക്കുന്നു. ഒരേതരം ഡാറ്റയുടെ കൂട്ടത്തെ അനാ
യാസമായി പോയിന്ററിലൂടെ കൈകാര്യം ചെയ്യാം. നമുക്കറിയാം 11-00 ക്ലാസില്‍ ഇതേ
ആവശ്യത്തിനു വേണ്ടി നമ്മള്‍ GOO ഉപയോഗിച്ചു. പക്ഷെ അറെ പ്രഖ്യാപനത്തോ
ടൊപ്പം തന്നെ അറെയുടെ വലുപ്പവും നല്‍കിയിരിക്കണം. ഇത്‌ മെമ്മറി അനാവശ്യമായി

1. സ്ട്രക്ചറും പോയിന്റും

നഷ്ടപ്പെടുത്തുകയും ആവശ്യത്തിന്‌ മെമ്മറി ലഭിക്കാതിരിക്കാന്‍ കാരണമാവുകയും ചെയ്യു
ന്നു. എന്നാല്‍ പോയിന്റര്‍ വേരിയബിളുപയോഗിച്ച്‌ ഡൈനാമിക്‌ അലോക്കേഷന്‍ നട
ത്തുമ്പോള്‍ അറെയുടെ വലുപ്പം കൃത്യം കുട്ടികളുടെ എണ്ണത്തിനനുസരിച്ചായിരിക്കും.
ഇവിടെ മെമ്മറി പാഴാക്കപ്പെടുന്നില്ല.

പക്ഷെ ഈ തരത്തിലുള്ള മെമ്മറി ഉപയോഗത്തിന്‌ ചില പ്രശ്നങ്ങളുണ്ട്‌. പ്രോഗ്രാം 13
എപ്പോഴും ൩ ന്റെ എല്ലാ വിലകള്‍ക്കും പ്രവര്‍ത്തിക്കണം എന്നില്ല. GCC, avg_ht എന്ന
വേരിയബിളിന്റെ ഒരു ഓട്ട്പൂട്ടും ചിലപ്പോള്‍ നല്‍കില്ല. ചില അപ്രതീക്ഷിത വിലകള്‍
പ്രദര്‍ശിപ്പിക്കാനും സാധ്യതയുണ്ട്‌. ഇതിനു കാരണം 1൨ ൧൧ ന്‌ പ്രാരംഭവിലയായി
നല്‍കുന്നത്‌ ഏതെങ്കിലും ഒരു മെമ്മറി സ്ഥാനത്തിന്റെ വിലാസമാണ്‌. നമ്മള്‍ ഉപയോഗി
ക്കുന്ന പോയിന്ററര്‍ അരിത്തമാറ്റിക്‌ ഓപ്പറേഷനും നേരത്തെ പറഞ്ഞപോലെ അനുവാദ
മില്ലാത്ത സ്ഥാനങ്ങള്‍ ഉപയോഗിക്കുന്നതിന്‌ കാരണമായേക്കാം. ഇതെല്ലാം പ്രോ്രഗാമിന്റെ
അപ്രതീക്ഷിതമായ അവസാനിപ്പിക്കലിന്‌ കാരണമാവും. പലപ്പോഴും മെമ്മറിയില്‍
സൂക്ഷിച്ച ഡാറ്റയും നഷ്ടപ്പെട്ടു പോകും, അങ്ങനെ നമുക്ക്‌ കൃത്യമായ ഓട്ട്പുട്ടും ലഭി
ക്കുകയില്ല. ഈ പ്രശ്നങ്ങള്‍ പരിഹരിക്കാന്‍ നമുക്ക്‌ ഭാഗം 1.5 ലെ ഡൈനാമിക്‌ അറെ
കള്‍ ഉപയോഗപ്പെടുത്താം.

1.4.2 പോയിന്ററിലെ റിലേഷണല്‍ പ്രവര്‍ത്തനങ്ങള്‍
(Relational operations on pointers)

നാം പഠിച്ച ആറ്‌ റിലേഷണല്‍ ഓപ്പറേറ്ററുകളില്‍ == (Equality-Melso), != (Non
equality-Me1yael) എന്നീ ഓപ്പറേറ്ററുകള്‍ മാത്രമേ പോയിന്റര്‍ വേരിയബിളുകളില്‍ ഉപ
യോഗിക്കാറുളളു. മെമ്മറി വിലാസം എന്നാല്‍ ഒരു മെമ്മറി സ്ഥാനം തിരിച്ചറിയാനുള്ള
സവിശേഷ സംഖ്യയാണ്‌. അതിനാല്‍ ഇതിനു മുകളില്‍ മറ്റ്‌ റിലേഷനില്‍ ഓപ്പറേറ്ററുകള്‍
ഉപയോഗിക്കുന്നതില്‍ അര്‍ഥമില്ല. 10, J എന്നിവ രണ്ട്‌ പോയിന്ററുകള്‍ ആണെങ്കില്‍ അവ
യില്‍ തുല്യമായതോ /വ്യത്യസ്തമായതോ ആയി മെമ്മറി സ്ഥാനങ്ങളുടെ വിലാസങ്ങ
ളാണ്‌ ഉണ്ടാവുക. ഇത്‌ പരിശോധിക്കാന്‍ p==q അല്ലെങ്കില്‍ 1 1-ഠ എന്നീ പദ്പ്രയോഗ
ങ്ങള്‍ ഉപയോഗിക്കാം.

നിങ്ങളുടെ പുരോഴതി അറിയാം

1. C++ ലെ ഡൈനാമിക്‌ മെമ്മറി നീക്കിവയ്ക്കല്‍ ഓപ്പറേറ്റര്‍ ആണ്‌
2. ചുവടെ കൊടുത്ത പ്രസ്താവന പ്രവര്‍ത്തിക്കുമ്പോള്‍ എന്ത്‌ സംഭവി
ക്കുന്നു?

int *b = new 2൩1 (10):

3. ഓര്‍ഫന്‍സ്‌ മെമ്മറി ബ്ലോക്ക്‌ എന്നാലെന്ത്‌?

4. 4 ഒരു ഇന്റിജര്‍ പോയിന്ററാണെന്നിരിക്കട്ട. ചുവടെ കൊടുത്തവയില്‍
ഏതൊക്കെയാണ്‌ അസാധുവായത്‌?
a. cout<<ép; b. p=p*5; c. p>o
d. p++; e. p=1500; f. cout<<*p * 2;

കമ്പ്യൂട്ടര്‍ സയന്‍സ്‌ - XII

1.5 പോയിന്ററും അറെയും (Pointer and array)

ar
ഒരു പേരില്‍ ഒരേ തരത്തിലുള്ള ഒന്നിലധികം ഡാറ്റകളെ ശേഖ 1000 34
രിക്കാന്‍ അറെയ്ക്ക്‌ കഴിയുമെന്ന്‌ നാം പഠിച്ച്‌ കഴിഞ്ഞല്ലോ. 1004 12
തുടര്‍ച്ചയായ മെമ്മറി സ്ഥാനങ്ങളില്‍ ഡാറ്റ ശേഖരിക്കുന്നതിനു 1008 8
അറെ ഉപയോഗിക്കാം. ചിത്രം 19 കാണിക്കുന്നത്‌ ar [10] 1012 18
എന്ന int ടൈപ്പ്‌ അറെയുടെ ചിത്രമാണ്‌. ഇതില്‍ 10 സാഖ്യ 1016 A
കളുണ്ട്‌. 1020 38
ഈ അറെ 1000 എന്ന മെമ്മറി ലൊക്കേഷനില്‍ തുടങ്ങുന്ന 1024 43
തായി സങ്കല്‍പ്പിക്കുക. ഇതിനകത്തെ ഓരോ സ്ഥാനവും 4 1028 14
ബൈറ്റ്‌ വീതം ആണ്‌ (GCC അനുസരിച്ചു). ഈ അറെയിലെ 1032 7
ഏത്‌ അംഗത്തെയും അറെയുടെ പേരും സബ്സ്ക്രിപ്റ്റും ഉപ 1036 19

യോഗിച്ച്‌ സൂചിപ്പിക്കാം. ഉദാഹരണം ar [ 0] എന്നത്‌ 34 എന്ന ചൂതം 1.9: ax എന്ന അറെ
സാംഖ്യ നല്‍കുന്നു. ദ [1] 12 ഉം ar[9] 19 ഉം തിരിച്ചു യുടെ മെമ്മറി നിക്കിലയ്ക്കല്‍
തരുന്നു.

aL എന്ന അറെയിലെ 10 സംഖ്യകളും പ്രദര്‍ശിപ്പിക്കുന്നതിനുള്ള C++
പ്രോഗ്രാം എഴുതുക.

q
എങ്ങനെയാണ്‌ ഈ അറെയുടെ ഒന്നാമത്തെ സ്ഥാനത്തിന്റെ വിലാസം

നമുക്കു ചെയ്യാം രു പോയിന്ററില്‍ ശേഖരിക്കുന്നത്‌?

122൧ എന്നത്‌ ഒരു ഇന്റിജര്‍ പോയിന്റര്‍ ആണെങ്കില്‍ ar എന്ന അറെയുടെ ആദ്യത്തെ
സ്ഥാനത്തിന്റെ വിലാസം താഴെ കൊടുക്കുന്ന രീതിയില്‍ പോയിന്ററില്‍ ശേഖരിക്കാം.
ptr = éar[0];
ഇനി നമുക്ക്‌ ചുവടെ ചേര്‍ത്ത വാചകങ്ങളുടെ ഓട്ട്പുട്ട്‌ പരിശോധിക്കാം.
cout<<ptr; //1000 പ്രദര്‍ശിപ്പിക്കുന്നു, ar[0] യുടെ വിലാസം
cout<<*ptr; //34 പ്രദര്‍ശിപ്പിക്കുന്നു, ൭: [0] യുടെ വില
cout<<(ptrt+1); //1004 പ്രദര്‍ശിപ്പിക്കുന്നു, ൭: [1] ന്റെ വിലാസം
cout<<*(ptrt+1)7 //12 പ്രദര്‍ശിപ്പിക്കുന്നു, ar[1] ന്റെ വില
cout<<(ptrt+9); //1036 പ്രദര്‍ശിപ്പിക്കുന്നു, ൭7 [9] ന്റെ വിലാസം
cout<<* (൬29) //19 പ്രദര്‍ശിപ്പിക്കുന്നു, ar[9] ന്റെ വില
cout<<ar; എന്ന പ്രസ്താവനയുടെ ജഓട്ട്പുട്ട്‌ നിങ്ങള്‍ക്ക്‌ കണ്ടെത്താന്‍ കഴിയുമോ?
ഓട്ട്‌ പൂട്ട്‌ 1000 ആണ്‌. ഇത്‌ അറെയുടെ ആദ്യത്തെ സ്ഥാനത്തിന്റെ വിലാസമാണ്‌. ഈ
വിലാസത്തെ അറെയുടെ അടിസ്ഥാന വിലാസം എന്നു പറയുന്നു. വിലാസം ശേഖരി
ക്കുന്ന വേരിയബിള്‍ ഒരു പോയിന്ററാണെന്നു നമുക്കറിയാം. അതുകൊണ്ട്‌ അറെയുടെ പേരായ
AL ഉം ഒരു പോയിന്ററാണ്‌. ആയതിനാല്‍ താഴെ കൊടുത്ത വാചകങ്ങള്‍ ശരിയാണ്‌.

cout<<ar; //1000 പ്രദര്‍ശിപ്പിക്കുന്നു, ar[0] യുടെ വിലാസം
ptr=ar; //ptr=bar[0] എന്നതിന്‌ തുല്യം?
cout<<*ar; //34 പ്രദര്‍ശിപ്പിക്കുന്നു, cout<<ar[0]; എന്നതിന്‌ തുല്യം

1. സ്ട്രക്ചറും പോയിന്റും

cout<<(art+1); //1004 പ്രദര്‍ശിപ്പിക്കുന്നു, ar[1]; ന്റെ വിലാസം

cout<<* (art1); //34 പ്രദര്‍ശിപ്പിക്കുന്നു, cout<<ar[1]; എന്നതിന്‌ തുല്യം
ചുവടെ കൊടുത്ത C++ വാചകങ്ങള്‍ ഈ അറെയുടെ എല്ലാ അംഗങ്ങളെയും പ്രദര്‍ശി
പ്പിക്കുന്നു.

for (int 2-0% i<10; i++)
cout<<*(arti)<<'\t!;
സാധാരണ പോയിന്ററും അറെയുടെ പേരും തമ്മില്‍ ചില വൃത്യാസങ്ങളുണ്ട്‌. ptr++;
എന്ന വാചകം ശരിയാണ്‌ ഇത്‌ ptr=ptrt1; എന്നതിന്‌ തുല്യമാണ്‌. ഈ വാചകം
പ്രവര്‍ത്തിപ്പിച്ചു കഴിഞ്ഞാല്‍ 122, ൭൧ [1] ന്റെ മെമ്മറി സ്ഥാനത്തേക്ക്‌ പോയിന്റ്‌ ചെയ്യും.
അതായത്‌ ptr ല്‍ 9: [1] ന്റെ വിലാസം ആണ്‌ ശേഖരിക്കപ്പെടുന്നത്‌. ptrt++% പക
രമായി art+ എന്ന്‌ ഉപയോഗിക്കാന്‍ കഴിയില്ല. കാരണം അറെയുടെ പേര്‍ എപ്പോഴും
അറെയുടെ ബേസ്‌ അയ്ധസ്സ്‌ മാത്രം ഉള്‍ക്കൊള്ളുന്നു. ഇത്‌ മാറ്റാന്‍ സാധ്യമല്ല.

ഡൈനാമിക്‌ അറെ

C++ ല്‍ അറെ ഒരേ ഈനത്തിലുള്ള ഡാറ്റ കൈകാര്യം ചെയ്യാന്‍ ഉപയോഗിക്കുന്നു. പക്ഷെ
ഡാറ്റയുടെ എണ്ണം മുന്‍കൂട്ടി അറിയില്ല എങ്കില്‍ GOO പ്രഖ്യാപിക്കാന്‍ പ്രയാസം നേരി
ടുന്നു. ഒരു ജില്ലയിലെ എല്ലാ ഹയര്‍ സെക്കണ്ടറി സ്‌കൂളുകളിലെയും വിജയ ശതമാനം
ശേഖരിക്കുന്നതിന്‌ ഒരു അറെ പ്രഖ്യാപിക്കുന്നത്‌ എങ്ങനെയാണ്‌? float pass[n];
float pass[] : എന്നീ രണ്ട്‌ പ്രഖ്യാപനങ്ങളും C++ ല്‍ തെറ്റാണ്‌. അറെയുടെ വലു
പ്പം ഒരു ഇന്റിജര്‍ സ്ഥിര വിലയായിരിക്കണം. അങ്ങനെ പ്രഖ്യാപിക്കുമ്പോള്‍ മെമ്മറി
പാഴാക്കപ്പെടുവാനോ തികയാതെ വരുവാനോ കാരണമാകാം. ജില്ലയിലെ സ്‌കൂളുകളുടെ
എണ്ണം പ്രോ്രഗാം തയാറാക്കുമ്പോള്‍ അറിയില്ല എങ്കില്‍, ഇന്‍പുട്ടിനനുസരിച്ച്‌ മെമ്മറി
നീക്കി വയ്ക്കുന്ന ഒരു അറെ ഉപയോഗിച്ചാല്‍ മതിയാകും. ഇവിടെയാണ്‌ ഡൈനാമിക്‌
അറെയുടെ ആവശ്യം ഉണ്ടാകുന്നത്‌. ഡൈനാമിക്‌ GOO പ്രോഠ്രഗാം (6്രവര്‍ത്തി
ക്കുമ്പോഴാണ്‌ നിര്‍മിക്കപ്പെടുന്നത്‌. ഇതിനുവേണ്ടി ഡ്ധൈനാമിക്‌ മെമ്മറി? അലോക്കേഷന്‍
ഓപ്പറേറ്ററായ NEW ഉപയോഗിക്കുന്നു. ഇതിന്റെ വാകൃഘടന ചുവടെ ചേര്‍ക്കുന്നു.

pointer = new data_type[size];

ഇവിടെ size ഒരു സ്ഥിരവില (constant), വേരിയബിള്‍, ഇന്റിജര്‍ എക്‌സ്പ്രഷന്‍
ഇവയില്‍ ഏതെങ്കിലും ഒന്നായാല്‍ മതി.
പ്രോരഗാം 1.4, ഡൈനാമിക്‌ അറെയുടെ ആശയം വിവരിക്കുന്നു. ഈ പ്രോഗ്രാമില്‍
വിജയശതമാനം ശേഖരിക്കുന്നത്‌ ഉപയോക്താവ്‌ റണ്‍ ടൈമില്‍ നല്‍കുന്ന സ്‌കൂളിന്റെ
എണ്ണമനുസരിച്ചാണ്‌.

Program 1.4: ഏറ്റവും കൂടിയ വിജയ രതമാനം കാണാന്‍

#include <iostream>
using namespace std;
int main()

{

float *pass, max;

കമ്പ്യൂട്ടര്‍ സയന്‍സ്‌ - XII

int i, n;
cout<<"Enter the number of schools: ";
cin>>n; 77 സ്കൂളിന്റെ എണ്ണം ഇന്‍പുട്ട്‌ ചെയ്യാന്‍
pass = new float[n]7//n അംഗങ്ങളുള്ള ഡൈനാമിക്‌ അറെയുടെ പ്രഖ്യാ
പനം
for (2-0: i<n; itt)
|
cout<<"Percent of pass by school "<<itl<<": ";
cin>>pass[i]; //സബ്സ്ക്രിപ്റ്റഡ്‌ വേരിയബിളിന്റെ ഉപയോഗം
}
max=pass[0];
for (i=l; i<n; itt)
if (pass[i]>max) max = *(pass+i);
/* അംഗങ്ങളെ സബ്സ്ക്രിപ്റ്റ്‌ ഉപയോഗിച്ചും പോയിന്റര്‍ ഓപ്പറേഷനിലൂടെയും ഉപ
യോഗിക്കുന്നു. */
cout<<"Highest percent is "<<max;
return 0;
}
Output:

Enter the number of schools: 5

Percent of pass by school 1: 75.6
Percent of pass by school 2: 66.5
Percent of pass by school 3: 89.3
Percent of pass by school 4: 71

Percent of pass by school 5: 70.6

Highest percent is 89.3

പ്രോഗ്രാം 1.4 ല്‍ ഡൈനാമിക്‌ GOO ഉപയോഗിച്ചാണ്‌ ഡാറ്റ ശേഖരിക്കുന്നത്‌. മെമ്മറി
നീക്കിവയ്ക്കല്‍ നടക്കുന്നത്‌ റണ്‍ ടൈമില്‍ മാത്രമാണ്‌. 4 ബൈറ്റ്‌ വീതമുളള ട സ്ഥാനങ്ങള്‍
PASS എന്ന അറെയില്‍ റണ്‍ ടൈമില്‍ തയാറാക്കുന്നു. ഈ അറെയിലെ അംഗങ്ങളെ
പോയിന്ററോ സബ്സ്ക്രിപ്റ്റോ ഉപയോഗിച്ച്‌ എടുക്കാന്‍ കഴിയും.

പ്രോ്രഗാം 1.4 തയാറാക്കുന്ന സമയത്ത്‌ ജില്ലയിലെ സ്‌കൂളുകളുടെ എണ്ണം
കൃത്യമായി പ്രോ്ഗാമര്‍ക്ക്‌ അറിയില്ല. ഇവിടെ സാധാരണ അറെ ഉപ
യോഗിക്കുകയാണെങ്കില്‍ ഒരു കൂടിയ സംഖ്യ വലുപ്പമായി നല്‍കി അറെ
പ്രഖ്യാപിക്കേണ്ടതായി വരുകയും ഇത്‌ ശേഷിക്കുന്ന മെമ്മറി പാഴാക്കാന്‍
കാരണമാവുകയും ചെയ്യും. എന്നാല്‍ ഇവിടെ ഡൈനാമിക്‌ അറെ ഉപ
യോഗിച്ചാല്‍ ഉപയോക്താവ്‌ നല്‍കിയ കൃത്യമായ എണ്ണത്തില്‍ അറെ
നിര്‍മിക്കുന്നതിനാല്‍ മെമ്മറി പാഴാക്കപ്പെടുന്നില്ല.

നമുക്കു ചെയ്യാം

താഴെയുളള രണ്ട്‌ പ്രസ്താവനകള്‍ തമ്മിലുള്ള വ്യത്യാസം എഴുതുക:

int *ptr new int(10);

new int[10];

നമുക്കു ചെയ്യാം int *ptr

അ: ന അഅഅഅഅഅ്ഞ്‌ നം പറ്റം അ
1.6 പോയിന്റും സ്(്രിങ്ങും (Pointer and string)

സ്ട്രിങ്ങിനെ കാരക്ടര്‍ അറെ വഴി ശേഖരിക്കാമെന്നും അറെയുടെ പേരിനെ സ്ട്രിങ്‌
വേരിയബിളായി കണക്കാക്കാമെന്നും നമ്മള്‍ 11ാം ക്ലാസില്‍ പഠിച്ചു. അറെയുടെ പേരില്‍
അതിന്റെ ബേസ്‌ അആരഡസ്സ്‌ അടങ്ങിയിരിക്കുന്നു എന്നും നമ്മള്‍ മനസ്സിലാക്കി. അതു
കൊണ്ട്‌ അറെയെ ഒരു പോയിന്ററായി കണക്കാക്കാം. ഇനി നമുക്ക്‌ ഈ ആശയങ്ങളെ
യോജിപ്പിച്ചുകൊണ്ട്‌ ഒരു സ്ര്രിങിനെ പോയിന്ററിലൂടെ എങ്ങനെ ഉപയോഗിക്കാമെന്നും
അതിന്‌ മറ്റ്‌ പോയിന്ററുമായി എന്ത്‌ വൃത്യാസമുണ്ടെന്നും ചര്‍ച്ച ചെയ്യാം. താഴെ കൊടുത്ത
വാചകങ്ങള്‍ പരിശോധിക്കുക.

char str[20]; ക്യാരക്ടര്‍ അറെ പ്രഖ്യാപനം
char *sp; /ഗക്യാരക്ടര്‍ പോയിന്റര്‍ പ്രഖ്യാപനം
cin>>str; //"Program" എന്ന സ്ര്രിങിനെ ഇന്‍പുട്ട്‌ ചെയ്യുന്നു എന്ന്‌
കരുതുക
cout<<str; //"Program"™ എന്ന സ്ര്രിങ്ങിനെ പ്രദര്‍ശിപ്പിക്കാന്‍
sp=str; 7731൧ എന്ന സ്ര്രിങിന്റെ ഉള്ളടക്കം, പോയിന്റര്‍ sp യിലേക്ക്‌ കോപ്പി
ചെയ്യുന്നു.

cout<<sp; //"Program" എന്ന സ്ര്രിങ്‌ പ്രദര്‍ശിപ്പിക്കുന്നു

cout<<éstr [0]; //"Program"™ എന്ന സ്ദ്രിങ്‌ പ്രദര്‍ശിപ്പിക്കുന്നു
cout<<spt+1; //"rogram" എന്ന സ്ര്രിങ്‌ പ്രദര്‍ശിപ്പിക്കുന്നു
cout<<é&str4+1; //“rogram"™ എന്ന സ്ര്‍്രിങ്‌ പ്രദര്‍ശിപ്പിക്കുന്നു
ഠ്‌ ഒ [01]: 7 1൬7 എന്ന ക്യാരക്ടര്‍ പ്രദര്‍ശിപ്പിക്കുന്നു
cout<<*sp; 472 എന്ന ക്യാരക്ടര്‍ പ്രദര്‍ശിപ്പിക്കുന്നു

cout<<éstr; //str അറെയുടെ ബേസ്‌ അഡ്രസ്സ്‌ പ്രദര്‍ശിപ്പിക്കുന്നു
cout<<ésp; //sp എന്ന പോയിന്ററിന്റെ വിലാസം പ്രദര്‍ശിപ്പിക്കുന്നു

ഒരു അറെയില്‍ ശേഖരിച്ചിരിക്കുന്ന സ്ര്രിങ്‌, വില നല്‍കല്‍ ഓപ്പറേറ്റര്‍ (=) ഉപയോഗിച്ച്‌
മറ്റൊരു കാരക്ടര്‍ അറെയിലേക്ക്‌ കോപ്പി ചെയ്യാന്‍ സാധിക്കില്ല. (ഇതിനു വേണ്ടി നമ്മള്‍
SCLCPY () എന്ന ഫംങ്ഷന്‍ ഉപയോഗിക്കുന്നു) എന്നാല്‍ ക്യാരക്ടര്‍ അറെയ്ക്ക്‌ പകരം
ക്യാരക്ടര്‍ പോയിന്റുകള്‍ ഉപയോഗിച്ചാല്‍ ഇത്‌ സാധ്യമാകും. മുകളിലത്തെ ഉദാഹരണ
ങ്ങളില്‍ sp=str; cout<<sp; എന്നീ വാചകങ്ങള്‍ ഈ വസ്തുത സ്ഥിരീകരിക്കുന്നു.
ഇതിനര്‍ഥം കാരക്ടര്‍ പോയിന്ററിന്‌ ഒരു സ്്രിങ്ങിനെ ശേഖരിക്കാന്‍ കഴിയും എന്നാണ്‌.
ഈ പോയിന്ററിനെ ഒരു സ്ട്രിങ്‌ വേരിയബിള്‍ ആയി കണക്കാക്കാം.

മറ്റൊരു രസകരമായ കാര്യം ഠെ [ 0]: എന്ന വാചകം മുഴുവന്‍ സ്ദ്രിങ്ങി
നേയും പ്രദര്‍ശിപ്പിക്കുന്നു എന്നതാണ്‌. ഇതിന്റെ അര്‍ഥം നമ്മള്‍ ഒരു സ്ര്രിങ്ങിന്റെ ബേസ്‌
അഡ്ധസ്സ്‌ പ്രദര്‍ശിപ്പിക്കാന്‍ ശ്രമിച്ചാല്‍ ആ സ്ട്രിങ്‌ മുഴുവനായും (പ്രദര്‍ശിപ്പിക്കപ്പെടും.
ഇതുപോലെ ഒരു int അറെയുടേയോ float അറെയുടേയോ ഒന്നാമത്തെ സ്ഥാന
ത്തിന്റെ വിലാസം പ്രദര്‍ശിപ്പിക്കാന്‍ ശ്രമിച്ചാല്‍ അതിന്റെ ബേസ്‌, അഡ്രസ്സായിരിക്കും
പ്രദര്‍ശിപ്പിക്കപ്പെടുന്നത്‌.

കമ്പ്യൂട്ടര്‍ സയന്‍സ്‌ - XII

ഉദാഹരണത്തിന്‌ int a[3] = (8, 9, 10};

cout<<é&a[0];

എന്നീ പ്രസ്താവനകള്‍ പ്രവര്‍ത്തിപ്പിക്കുമ്പോള്‍ ദ എന്ന അറെയുടെ ബേസ്‌ അധ്ഡസ്സ്‌
ആയിരിക്കും പ്രദര്‍ശിപ്പിക്കപ്പെടുന്നത്‌.

കാരക്ടര്‍ പോയിന്ററിന്റെ നേട്ടങ്ങള്‍

സ്ര്രിങ്ങിനെ സ്റ്റോര്‍ ചെയ്യാന്‍ കാരക്ടര്‍ പോയിന്ററര്‍ ഉപയോഗിക്കുമ്പോള്‍ ചുവടെ
കൊടുത്ത നേട്ടങ്ങള്‍ ഉണ്ടാകുന്നു.

€ വലുപ്പം (്പഖ്യാപന പ്രസ്താവനയില്‍ രേഖപ്പെടുത്താത്തതുകൊണ്ട്‌, എത്ര വലുപ്പ
മുള്ള സ്ട്രിങ്ങും ശേഖരിക്കാം. മെമ്മറി പാഴാക്കപ്പെടുകയോ തികയാതിരിക്കുകയോ
ചെയ്യുന്നില്ല. എന്നാല്‍ ഇത്‌ പ്രാരംഭവില നല്‍കുമ്പോള്‍തന്നെ ചെയ്തിരിക്കണം.
(eg, char *str = "Program";)

€ വിലനല്‍കല്‍ ഓപ്പറേറ്റര്‍ (=) ഉപയോഗിച്ച്‌ സ്ര്രിങ്‌ കോപ്പി ചെയ്യാം.

* സ്്രിങ്ങിലെ ഏത്‌ കാരക്ടറും പോയിന്ററര്‍ ഉപയോഗിച്ച്‌ എളുപ്പം പുറത്തെടുക്കാം.
€ കാരക്ടര്‍ അറെകളെ കുറഞ്ഞ മെമ്മറി സ്ഥലം ഉപയോഗിച്ച്‌ കൈകാര്യം ചെയ്യാം.
സ്ട്രിങ്ങുകളുടെ അറെ

നമുക്ക്‌ ഒരാഴ്ചയിലെ ദിവസങ്ങളുടെ പേരുകള്‍ ഒരു അറെയില്‍ ശേഖരിക്കണമെന്നു
കരുതുക. ഒരു കാരക്ടര്‍ അറെക്ക്‌ അല്ലെങ്കില്‍ കാരക്ടര്‍ പോയിന്ററിന്‌ ഒരു പേര്‍ മാത്രമേ
ശേഖരിക്കാന്‍ കഴിയൂ. നമുക്ക്‌ സൂചിപ്പിക്കേണ്ടത്‌ സ്്രിങ്ങുകളുടെ ഒരു കൂട്ടമാണ്‌. ("“Sun-
day", "Monday", ..., "Saturday") തീര്‍ച്ചയായും ഇതിനു വേണ്ടി നമ്മള്‍ ഉപയോഗിക്കു
ന്നത്‌ കാരക്ടര്‍ അറെകളുടെ ഒരു അറെയാണ്‌; (char തരത്തിലുളള ഒരു 2D അറെ)
അല്ലെങ്കില്‍ കാരക്ടര്‍ പോയിന്ററുകളുടെ ഒരു അറെയാണ്‌. കാരക്ടര്‍ പോയിന്ററുകളുടെ
ഒരു അറെ പ്രഖ്യാപിക്കുന്നതിന്റെ രീതി താഴെ കൊടുത്തിരിക്കുന്നു.

char *week[7];

ഈ അറെക്ക്‌ പരമാവധി  സ്ട്രിങ്ങുകളെ ഉള്‍കൊളളാനുള്ള കഴിവുണ്ട്‌. അതില്‍ ഓരോ
സ്ര്രിങ്ങിലും പരിധിയില്ലാതെ കാരക്ടറുകള്‍ ഉള്‍പ്പെടുത്താവുന്നതാണ്‌. പോയിന്റര്‍
അറെക്ക്‌ പ്രാരംഭവില നല്‍കുന്ന വിധം താഴെ ചേര്‍ക്കുന്നു.

char *week[7]={"Sunday", "Monday", "Tuesday", "Wednesday",

"Thursday", "Friday", "Saturday"};

ചിത്രം 1.10 ല്‍ മെമ്മറി നീക്കിവയ്ക്കലിന്റെ കൃത്യമായ വിവരണം കൊടുത്തിരിക്കുന്നു.
ഷേഡ്‌ ചെയ്തിരിക്കുന്ന ഭാഗമാണ്‌ നീക്കിവയ്ക്കപ്പെട്ടിരിക്കുന്നത്‌.

1. സ്ട്രക്ചറും പോയിന്റും

ക്ലാസ്‌ 11 ല്‍ പഠിച്ചിരുന്ന Week
സോര്‍ട്ടിംഗ്‌ ടെക്നിക്‌ ഉപയോ sfujn/da}al]y|\o
ഗിച്ച്‌ പേരുകള്‍ സോര്‍ട്ട്‌ ചെ tlelalalalaly

യ്യാനുള്ള ഒരു C++ പ്രോഗ്രാം
നമുക്കു ചെയ്യാം എഴുതുക. കാരക്ടര്‍ പോയിന്റ്‌
റര്‍ ഉപയോഗിക്കുന്നതിനാല്‍ He) 2/2] 2/2] 22 pe
സ്ദ്രിങ്ങിനെ വില നല്‍കല്‍ tinjulr|s]a}aly|\o
ഓപ്പറേറ്റര്‍ (=) ഉപയോഗിച്ച്‌
കോപ്പി ചെയ്യാം. കമ്പ്യൂട്ടര്‍
ലാബില്‍ വച്ച്‌ നിങ്ങള്‍ എഴു
തിയ പ്രോഗ്രാം ശരിയാണോ ചിത്രം 1.10: സ്,ടിങ്ങുകളുടെ
x മെമ്മറി സിക്കിവയ്കാത്‌
എന്ന്‌ പരിശോധിക്കുക.

1151-11:

5229 ക൮ഫ

1181015111:

സ്ര്രിങ്ങുകളെ കൈകാര്യം ചെയ്യുന്നതിന്‌ പോയിന്റര്‍ അറെയ്ക്ക്‌ പകരം സ്്രിങ്ങു
കളുടെ അറെ ഉപയോഗിക്കാം. സ്ര്രിങ്ങുകളുടെ അറെ തയാറാക്കാന്‍ 2D കാരക്ടര്‍
അറെ ഉപയോഗിക്കുന്നു. (പ്രഖ്യാപന പ്രസ്താവന താഴെ കൊടുത്തിരിക്കുന്നു.

char ൩൭൬൭ [ 10] [20];

ഈ അറെയ്ക്ക്‌ 10 പേരുകള്‍ ഉള്‍ക്കൊള്ളാനുള്ള കഴിവുണ്ട്‌. ഓരോ പേരിലും മാക്സിമം 10
ക്യാരക്ടര്‍ വരെ അനുവദിച്ചിരിക്കുന്നു. ഒരു ബൈറ്റ്‌ Mud ക്യാരക്ടറിനു (൧) വേണ്ടി
റിസര്‍വ്‌ ചെയ്യപ്പെട്ടിരിക്കുന്നു. ഓരോ സ്്രിങ്ങും name [i] എന്ന എക്സ്പ്രഷനിലൂടെ റഫര്‍
സൂചിപ്പിക്കുന്നു. ഇതില്‍ സബ്സ്ക്രിപ്റ്റ്‌ i യ്ക്ക്‌ 0 മുതല്‍ 9 വരെയുള്ള വിലകള്‍ സ്വീകരി
ക്കാം. ഇവിടെ strepy() ഫംഗ്ഷന്‍ ഉപയോഗിച്ച്‌ മാര്തമേ സ്്രിങ്ങുകള്‍ കോപ്പി ചെയ്യാന്‍
കഴിയൂ.

ചിത്രം 1.10 ല്‍ കാണിച്ചിരിക്കുന്ന week എന്ന അറെയെ char തരത്തിലുള്ള
ഒരു മാ അറെ ഉപയോഗിച്ച്‌ പ്രഖ്യാപിക്കുന്ന രീതി ചുവടെ കൊടുത്തിരിക്കുന്നു.

char week[7][11]={"Sunday", "Monday", "Tuesday",
"Wednesday", "Thursday", "Friday", "Saturday"};

എന്താണ്‌ ഈ അറെയും മുമ്പ്‌ സൂചിപ്പിച്ച ക്യാരക്ടര്‍ പോയിന്റര്‍ അറെയും ഉപയോഗി
ക്കുന്നതിലുള്ള വ്യത്യാസം? ക്യാരക്ടര്‍ പോയിന്റര്‍ അറെ ഉപയോഗിക്കുമ്പോള്‍ അറെയുടെ
നീക്കി വയ്ക്കാത്ത ഭാഗങ്ങള്‍ (ചിത്രം 1.10 ല്‍ ഷേഡ്‌ ചെയ്യാത്ത ഭാഗങ്ങള്‍) മറ്റ്‌ മെമ്മറി
നീക്കി വയ്ക്കലിനുവേണ്ടി ഉപയോഗപ്പെടുത്താം. എന്നാല്‍ 2D ക്യാരക്ടര്‍ അറെ ഉപയോഗി
ക്കുമ്പോള്‍ ഈ ഭാഗങ്ങള്‍ നീക്കിവയ്ക്കാന്‍ കഴിയാതെ പാഴാക്കപ്പെടുന്നു.

താഴെ കൊടുത്ത വാചകം സ്ട്രിങ്ങുകളെ ഉപയോഗിക്കുന്ന രീതി വിവരിക്കുന്നു.
for (i=0; i<7; itt)
cout<<week [i];

കമ്പ്യൂട്ടര്‍ സയന്‍സ്‌ - XII

നിങ്ങളുടെ പുരോഗതി അറിയാം

1. ഡൈനാമിക്‌ അറെ എന്നാല്‍ എന്ത്‌?
2. ഒരു അറെയിലെ ഒന്നാമത്തെ ലൊക്കേഷന്റെ വിലാസത്തെ
എന്ന്‌ പറയുന്നു.

3. arr ഒരു ഇന്റിജര്‍ അറെയാണെങ്കില്‍ താഴെ കൊടുത്തവയില്‍

തെറ്റേത്‌?
a. cout<<arr; b. arr++; c. cout<<* (arrt+1);
d. cin>>arr; ൦. arr=1500; f. cout<<*arr * 2;

4. 10 പുസ്തകങ്ങളുടെ പേരുകള്‍ പോയിന്ററര്‍ ഉപയോഗിച്ച്‌ സൂചിപ്പിക്കാ
നുള്ള C++ പ്രഖ്യാപന പ്രസ്താവന എഴുതുക.

൨

. ഒരു പോയിന്റര്‍ പ്രഖ്യാപിച്ച്‌ അതില്‍ നിങ്ങളുടെ പേര്‍ പ്രാരംഭവില
യായി ചേര്‍ക്കുക.

1.7 പോയിന്ററും സ്ര്ക്ചറും (Pointer and structure)

ഈ അധ്യായത്തിന്റെ തുടക്കത്തില്‍ നമ്മള്‍ സ്ര്രക്ചര്‍ ഡാറ്റ ഇനത്തെക്കുറിച്ചും അതിന്റെ
ഉപയോഗകത്തെക്കുറിച്ചും ചര്‍ച്ച ചെയ്തു. ഈ ഭാഗത്ത്‌ നമ്മള്‍ സ്ട്രക്ചര്‍ വേരിയബി
ളിനെ പോയിന്ററിന്റെ സഹായത്താല്‍ എങ്ങനെ ഉപയോഗിക്കാമെന്ന്‌ പഠിക്കുന്നു. ഒരു
employee സ്ര്രക്ചര്‍ ചുവടെ ചേര്‍ക്കുന്നു.

struct employee
{
int ecode;
char ename[15];
float salary;
i
ഇനി ചുവടെ കൊടുത്തിരിക്കുന്ന പ്രഖ്യാപന പ്രസ്താവന പരിശോധിക്കാം.
employee *eptr;

ഇവിടെ eptr എന്ന പോയിന്ററിന്‌ ഒരു employee സ്ര്രക്ചറിന്റെ ആര്ഡസ്സ്‌
ഉള്‍ക്കൊള്ളാന്‍ കഴിയും. ഇനി താഴെ കൊടുത്ത പ്രസ്താവന ശ്രദ്ധിക്കുക.

eptr = new employee;

ഈ വാചകം 23 ബൈറ്റ്‌ മെമ്മറി നീക്കിവയ്ക്കുകയും ചെയ്യുകയും അതിന്റെ ബേസ്‌
അഡ്ഡസ്സ്‌ EPL എന്ന പോയിന്ററില്‍ ശേഖരിക്കുകയും ചെയ്യും. ചിത്രം 1.11 ല്‍ ഇക്കാര്യം
വിവരിക്കുന്നു.

1. സ്ട്രക്ചറും പോയിന്റും

eptr

ecode ename salary

allo 11: employee ടൈപ്‌ ഡാറ്റയുടെ ദ്ധൈനാമിക്‌ അഥോക്കേഷഷി

സ്ട്രക്ചര്‍ അംഗങ്ങളെ താഴെ കൊടുത്ത വിധമാണ്‌ ഉപയോഗിക്കുന്നത്‌ എന്ന്‌ നമുക്ക
റിയാം.
structure variable.element നണട
ecode, ename, salary എന്നീ അംഗങ്ങളെ ഉപയോഗിക്കാന്‍ നമുക്ക്‌ ഇവിടെ
സ്ര്രക്ചര്‍ വേരിയബിള്‍ ഇല്ല. eptr എന്ന പോയിന്ററിലൂടെയാണ്‌ ഇവയെ ഉപയോ
ഗിക്കേണ്ടത്‌. ഇതിന്റെ വാകൃഘടന ചുവടെ ചേര്‍ക്കുന്നു.
structure pointer->element നണട
ശ്രദ്ധിക്കുക, സ്ര്രക്ചര്‍ പോയിന്ററും അംഗങ്ങളും > ഓപ്പറേറ്ററിലൂടെ ബന്ധിപ്പിക്കപ്പെ
ട്ടിരിക്കുന്നു. ഈ ഓപ്പറേറ്റര്‍ “-” നു പുറകെ ‘>’ ചിഹ്നം കൂടി ഉപയോഗിച്ചാണ്‌ എഴുതു
ന്നത്‌. ചുവടെ കൊടുത്ത പ്രസ്താവനകള്‍ ചിത്രം 111 ലെ സ്ര്രക്ചര്‍ അംഗങ്ങളെ ഉപ
യോഗിക്കുന്നത്‌ എങ്ങനെയെന്ന്‌ ശ്രദ്ധിക്കുക.
eptr->ecode = 657346; //employee code ന്‌ വില നല്‍കുന്നു
gets (eptr->ename) 7 //employee യുടെ പേര്‌ ഇന്‍പുട്ട്‌ ചെയ്യുന്നു
cin>> eptr->salaray; //employee യും സാലറി ഇന്‍പുട്ട്‌ ചെയ്യുന്നു
cout<< eptr->salary * 0.12; സാലറിയുടെ 12% പ്രദര്‍ശിപ്പിക്കുന്നു

1.3.1 എന്ന ഭാഗത്തില്‍ നമ്മള്‍ cx_ptr എന്ന പോയിന്റര്‍ വേരിയ
ബിള്‍ complex ടൈപ്പ്‌ സ്ര്രക്ചറില്‍ ഉപയോഗിച്ചു. ഒരു complex
4 നമ്പര്‍ ഇന്‍പുട്ട്‌ ചെയ്ത്‌ അതിനെ യഥാര്‍ഥ രൂപത്തില്‍ പ്രദര്‍ശി
പ്പിക്കാനുളള C++ പ്രസ്താവനകള്‍ WW [SH 21d പോയിന്റര്‍

നമുക്കു ചെയ്യാം ഉപയോഗിച്ച്‌ എഴുതുക.

നമുക്ക്‌ ഒരു പുതിയ അംഗത്തെ കൂട്ടിച്ചേര്‍ത്തുകൊണ്ട്‌ employee സ്ര്രക്ചറിനെ പരി
ഷ്കരിക്കാം.
struct employee
|
int ecode;
char ename[15];
float salary;
int *ip;

17

കമ്പ്യൂട്ടര്‍ സയന്‍സ്‌ - XII

തീര്‍ച്ചയായും ip എന്ന അംഗം ഒരു ഇന്റിജര്‍ പോയിന്ററാണ്‌. ഇതിന്‌ ഒരു ഇന്റിജര്‍
സ്ഥാനത്തിന്റെ വിലാസം സൂക്ഷിക്കാം. ചുവടെ കൊടുത്ത പ്രസ്താവനകള്‍ പോയിന്റ്‌
റര്‍ IP യുടെ ഉപയോഗം വിവരിക്കുന്നു.

eptr->ip = new int(5); /* ഡൈനാമിക്‌ നീക്കിവയ്ക്കല്‍ നടത്തി ip യെ
ഒരു ഇന്റിജര്‍ ലൊക്കേഷനുമായി ബന്ധിപ്പിച്ച്‌ അതില്‍ 5 ശേഖരിക്കുന്നു */ .

cout << *(eptr->ip); // 5 എന്നു വില പ്രദര്‍ശിപ്പിക്കുന്നു

int n = eptr->*iptl; // 5 നോട്‌ 1 കൂട്ടി ൩ ല്‍ ശേഖരിക്കുന്നു

നോക്കുക ip പോയിന്റ്‌ ചെയ്യുന്ന വില രണ്ട്‌ രീതിയില്‍ പുറത്തെടുക്കാം.
*(eptr->ip) അല്ലെങ്കില്‍ eptr—->*ip. ഒരു സ്ഭ്രക്ചറിന്‌ ഏത്‌ ഇനത്തിലുള്ള പോയിന്റ്‌
റിനെയും അംഗങ്ങളാക്കാം. വേണമെങ്കില്‍ ഒരു സ്ര്രക്ചറിന്റെ തരത്തില്‍ തന്നെയുള്ള
പോയിന്ററിനെ അതിന്‌ അംഗമാക്കാം.

struct employee

{

ep എന്ന അംഗം employee
int ecode;

ഇനത്തിലുള്ള പോയിന്റര്‍ ആണ്‌.
char ename[15];
float salary;
employee *ep;

7

ഇപ്പോള്‍ സ്ര്രക്ചര്‍ employee യെ സ്വയം സൂചിത സ്ട്രക്ചര്‍ (Self referential struc-

ture) എന്ന്‌ വിളിക്കുന്നു. ഇതിനെക്കുറിച്ച്‌ നമുക്കു വിശദമായി ചര്‍ച്ച ചെയ്യാം.

സ്വയം സുചിത സ്ട്രക്ചര്‍ (Self referential structure)

സ്വയം സുചിത സ്ര്രക്ചര്‍ ഒരു പ്രത്യേക തരം സ്ര്രക്ചറാണ്‌. ഇതില്‍ ഇതേ സ്രക്ചര്‍

ഇനത്തിലുള്ള ഒരു പോയിന്റര്‍ വേരിയബിള്‍ ഉണ്ടായിരിക്കും. ഈ പോയിന്റിന്‌ ഇതേ

പോലുള്ള മറ്റൊരു സ്ര്രക്ചറിലേക്ക്‌ പോയിന്റ്‌ ചെയ്യാം. ഇങ്ങനെ നിര്‍മിക്കുന്ന കണ്ണി

എത്ര വേണമെങ്കിലും ദീര്‍ഘിപ്പിക്കാം. ചിത്രം 1.12 ഈ ആശയം വിവരിക്കുന്നു.

allo 1.12: ഒരു employee സ്ഗക്ചരീ മറ്റൊന്തിനെ പൊയിര്‍്റ്‌ ചെയ്യുന്നു

"Sunil" എന്ന എംപ്പോയി "Anil" എന്ന എംപ്ലോയിയെ പോയിന്റ്‌ ചെയ്യുന്നു. അയാ

ളുടെ ടേബിള്‍ നമ്പര്‍ 12 ആണ്‌. "Anil" പോയിന്റ്‌ ചെയ്യുന്നത്‌ "Nisha" എന്ന എംപ്ലോ
യിയെയാണ്‌ ഇത്‌ തുടരുന്നു.

C, C++ ഭാഷകളില്‍ ലിങ്ക്ഡ്ലിസ്റ്റ്‌, (ദീ തുടങ്ങിയ ഡയനാമിക്‌ ഡാറ്റാ സ്ദ്രക്ചറുകളുടെ
നിര്‍മാണത്തിന്‌ സഹായകമായ ഒരു പ്രധാന ടൂള്‍ ആണ്‌ സ്വയം സൂചിത സ്ര്രക്ചര്‍.
പ്രോഗ്രാമിന്റെ (പവര്‍ത്തന സമയത്ത്‌ നീക്കി വയ്ക്കുന്ന മെമ്മറി സ്ഥാനങ്ങളിലെ ഡാറ്റ
യുടെ കൂട്ടത്തെ ഡൈനാമിക്‌ ഡാറ്റാ സ്ട്രക്ചര്‍ എന്നു വിളിക്കുന്നു. ലിങ്ക്ഡ്‌ ലിസ്റ്റ്‌ ഡാറ്റന്ദ്ര

ക്ചറിനെക്കുറിച്ച്‌ കൂടുതലായി അധ്യായം 3 ല്‍ ചര്‍ച്ച ചെയ്യുന്നു.

1. സ്ട്രക്ചറും പോയിന്റും

നമുക്കു സംഗ്രഹിക്കാം

C++ ലെ നൂതനമായ ഡാറ്റ ഇനങ്ങളെ കുറിച്ച്‌ നാം ചര്‍ച്ച്‌ ചെയ്തു. ഏകോപിത ഡാറ്റയെ
ഒരു പേരില്‍ പ്രതിനിധാനം ചെയ്യാന്‍ സ്ട്രക്ചര്‍ ഡാറ്റ ഇനം ഉപയോഗിച്ചു. സ്ര്രക്ചര്‍
അംഗങ്ങളെ ഡോട്ട്‌ ഓപ്പറേറ്ററി (.) ലൂടെ ഉപയോഗിക്കുന്നത്‌ നാം ചര്‍ച്ച ചെയ്തു.
പോയിന്റര്‍ പ്രത്യേക ഡാറ്റ ഇനം ആണെന്ന്‌ മനസ്സിലാക്കി. പോയിന്ററുമായി ബന്ധപ്പെട്ട
ഓപ്പറേഷനുകള്‍ പദപ്രയോഗത്തിന്റെ സഹായത്തോടെ വിവരിച്ചു. ഡൈനാമിക്‌ മെമ്മറി
അലോക്കേഷന്‍ എന്ന ആശയവും, ആവശ്യമായ ഓപ്പറേറ്ററുകളും നേട്ടങ്ങളും ചര്‍ച്ച
ചെയ്തു. അറെയും പോയിന്ററും തമ്മിലുളള ബന്ധം വിവരിച്ചു. Aisles ഡാറ്റ പോയിന്റ്‌
റിലൂടെ ഉപയോഗിക്കുന്നതും പോയിന്ററിനെയും സ്ര്ക്ചറിനെയും ബന്ധിപ്പിക്കുന്ന
വിധവും മനസ്സിലാക്കി. ഈ അധ്യായത്തില്‍ പഠിച്ച പല കാര്യങ്ങളും അധ്യായം - 3 പഠി
ക്കുന്നതിനുള്ള അടിസ്ഥാനമായി ഉപയോഗിക്കാം.

G'

1. ടെലിഫോണ്‍ വരിക്കാരന്റെ വിവരങ്ങള്‍ അടങ്ങുന്ന ഒരു സ്ര്രക്ചര്‍ നിര്‍വചിക്കുക.
അതില്‍ പേര്‍, ടെലിഫോണ്‍ നമ്പര്‍ എന്നീ അംഗങ്ങള്‍ ഉണ്ടായിരിക്കണം. ഇതുപ
യോഗിച്ച്‌ പേര്‍ നല്‍കിയാല്‍ നമ്പര്‍ തരുന്നതും, അല്ലെങ്കില്‍ നമ്പര്‍ നല്‍കിയാല്‍
പേര്‍ തരുന്നതുമായ ഒരു മെനു നിയ്രന്തിതമായ C++ പ്രോ്രഗാം തയാറാക്കുക.

നമുക്കു പരിരീലിക്കാം

2. ഒരു ബാങ്കിലെ ഉപഭോക്താവിന്റെ വിവരങ്ങള്‍ അടങ്ങുന്ന സ്ര്രക്ചര്‍ നിര്‍വചിക്കു
ക. അക്കൌണ്ട്‌ നമ്പര്‍, പേര്‍, അക്കാണ്ട്‌ ഓപ്പണിംഗ്‌ തീയതി, ബാലന്‍സ്‌ എന്നീ
വിവരങ്ങള്‍ ഉണ്ടായിരിക്കണം. ഇതുപയോഗിച്ച്‌ നിക്ഷേപം, പിന്‍വലിക്കല്‍, ഫലം
കാണുക എന്നീ പ്രവൃത്തികള്‍ നടത്താനാവശ്യമായ ഒരു മെനു നിയന്ത്രിത പ്രോഗ്രാം
തയാറാക്കുക. നിക്ഷേപവും പിന്‍വലിക്കലും നടക്കുമ്പോള്‍ ബാലന്‍സ്‌ സംഖ്യയില്‍
മാറ്റം വരണം. അക്കൌണ്ടില്‍ മിനിമം ബാലന്‍സായി Rs. 1000/- ഉണ്ടായിരിക്കണം
(അക്കൌണ്ട്‌ ആരംഭിച്ച തീയതി നെസ്റ്റെഡ്‌ സ്ദ്രക്ചറായി ഉള്‍പ്പെടുത്താം).

3. വിദ്യാര്‍ഥികള്‍ക്ക്‌ കമ്പ്യൂട്ടര്‍ സയന്‍സില്‍ കിട്ടിയ TE സ്‌കോര്‍ അവരോഹണ ക്രമ
ത്തില്‍ ക്രമീകരിക്കുന്നതിനു പോയിന്റര്‍ ഉപയോഗിച്ച്‌ ഒരു C++ പ്രോഗ്രാം എഴു
തുക.

4. ക്യാരക്ടര്‍ പോയിന്റര്‍ ഉപയോഗിച്ച്‌ ഇന്‍പുട്ട്‌ ചെയ്ത ഒരു സ്ര്രിങ്‌ പാലിന്‍ഡ്രോം
ആണോ അല്ലയോ എന്ന്‌ പരിശോധിക്കാനുള്ള ഒരു C++ പ്രേഠ്രഗാം തയാറാക്കുക.

൭. പോയിന്റര്‍ ഉപയോഗിച്ച്‌, നിങ്ങളുടെ ക്ലാസ്സിലെ എല്ലാ കുട്ടികളുടെയും പേരുകള്‍
ഇന്‍പുട്ട്‌ ചെയ്യുക. ഇതില്‍നിന്നും ഒരു റോള്‍ ലിസ്റ്റ്‌ നിര്‍മിക്കുക. ഈ ലിസ്റ്റില്‍ പേരു
കള്‍ അക്ഷരമാല ക്രമത്തിലും റോള്‍ നമ്പര്‍ 1, 2, 3... എന്ന ക്രമത്തിലും വരണം.

6. രജിസ്റ്റര്‍ നമ്പര്‍, പേര്‍, ആറ്‌ വിഷയത്തിലെ CE മാര്‍ക്കുകള്‍ എന്നീ വിവരങ്ങള്‍ അട
ങ്ങുന്ന ഒരു Student സ്ര്രക്ചര്‍ നിര്‍വചിക്കുക. സ്ട്രക്ചര്‍ പോയിന്റര്‍ ഉപയോഗിച്ച്‌
ഈ വിവരങ്ങള്‍ ഇന്‍പുട്ട്‌ ചെയ്യാനും രജിസ്റ്റര്‍ നമ്പര്‍, പേര്‍, സി.ഇ. മാര്‍ക്കുകളുടെ
തുക എന്നിവ പ്രദര്‍ശിപ്പിക്കാനും വേണ്ട പ്രോ്രഗാം എഴുതുക.

nse conc ന്‌ ഞ്അ
നാ വിലനിരുന്നം

1. C++ ലെ അറെയും സ്ര്രക്ചറും താരതമ്യം ചെയ്യുക.

2. താഴെ കൊടുത്തിരിക്കുന്ന സ്ര്രക്ചര്‍ നിര്‍വചനത്തിലെ തെറ്റുകള്‍ കണ്ടെത്തി
അതിനുള്ള കാരണമെഴുതുക.
struct
{
int roll, age;
float fee=1000;
hi
3. താഴെ കൊടുത്തിരിക്കുന്ന സ്ര്രക്ചര്‍ നിര്‍വചനം വായിച്ച്‌ ചോദ്യങ്ങള്‍ക്ക്‌ ഉത്തരം
എഴുതുക.
struct book
{
int book _no;
char bk_name[20];
struct
{
short dd;
short mm;
short yy?
}dt_of_ purchase;
float price;
i
a. ഈ സ്്രക്ചറിലെ വിവരങ്ങള്‍ സൂചിപ്പിക്കാന്‍ book ടൈപ്പില്‍ ഒരു വേരിയ
ബിള്‍ പ്രഖ്യാപിക്കാനുളള C++ പ്രസ്താവന എഴുതുക. വേരിയബിളിന്‌ എത്ര
മെമ്മറി ആവശ്യമുണ്ട്‌. ന്യായീകരിക്കുക.

12. നിങ്ങളുടെ കമ്പ്യൂട്ടര്‍ സയന്‍സ്‌ പാഠപുസ്തകത്തിലെ വിവരങ്ങള്‍ ഉപയോഗിച്ച്‌
ഈ സ്ട്രക്ചറിന്‌ (്രാരംഭവില നല്‍കാനുള്ള C++ പ്രസ്താവന എഴുതുക.

c. book ന്റെ വിവരങ്ങള്‍ പ്രദര്‍ശിപ്പിക്കാന്‍ ആവശ്യമായ C++ പ്രസ്താവനകള്‍
എഴുതുക.

ഠി. “അകത്തുള്ള സ്ര്രക്ചര്‍ ടാഗിന്റെ അഭാവം ഒരു തെറ്റും വരുത്തുന്നില്ല” - ഈ
വാചകം ശരിയോ തെറ്റോ എന്ന്‌ കാരണസഹിതം സമര്‍ഥിക്കുക.

4. “സ്ര്രക്ചര്‍ ഒരു ഉപഭോക്ത്യനിര്‍വചിത ഡാറ്റ ഇനമാണ്‌” - ഉദാഹരണ സഹിതം
സമര്‍ഥിക്കുക.

1. സ്ട്രക്ചറും പോയിന്റും

5.

8.

താഴെ കൊടുത്തിരിക്കുന്ന വാചകങ്ങള്‍ വായിക്കുക:

1. C++ ല്‍ സ്ട്രക്ചര്‍ നിര്‍വചിക്കുമ്പോള്‍ ടാഗ്‌ ഒഴിവാക്കാം.

൮. ഒരു സ്ര്രക്ചര്‍ വേരിയബിളിലെ ഡാറ്റ മറ്റൊരു സ്ട്രക്ചര്‍ വേരിയബിളി
ലേക്ക്‌ കോപ്പി ചെയ്യണമെങ്കില്‍ രണ്ട്‌ സ്ര്രക്ച്ചര്‍ വേരിയബിളുകളും ഒരേ
ടാഗില്‍ നിര്‍വചിച്ചിരിക്കണം.

fii. സ്ട്രക്ചര്‍ അംഗങ്ങളെ structute_name.element എന്ന രീതിയിലാണ്‌ സൂചി
പ്പിക്കുന്നത്‌.

സ. ഒരു സ്ട്രക്ചറിന്‌ മറ്റൊരു സ്ട്രക്ചറിനെ ഉള്‍ക്കൊളളാം.
ഇനി താഴെ കൊടുത്തവയില്‍ ശരിയായത്‌ തിരഞ്ഞെടുക്കുക.
a. (1) ഉം (ii) ഉം വാചകങ്ങള്‍ ശരിയാണ്‌

b. (2) ഉം (൩) ഉം വാചകങ്ങള്‍ ശരിയാണ്‌

൦. (1) ഉം, (il) ഉം, (൩൯) ഉം വാചകങ്ങള്‍ ശരിയാണ്‌

d. എല്ലാ വാചകങ്ങളും ശരിയാണ്‌

ചുവടെ ചേര്‍ത്തിരിക്കുന്ന C++ പ്രസ്താവനകള്‍ വായിക്കുക.
int * p, a=5;
p=ka;

a. P എന്ന വേരിയബിളിന്റെ പ്രത്യേകതയെന്ന്‌?

1. രണ്ടാമത്തെ വാചകം പ്രവര്‍ത്തിപ്പിച്ചതിനുശേഷം യുടെ ഉള്ളടക്കം എന്താ
യിരിക്കും.

൦. *ptl, * (ഇ) എന്നീ പദപ്രയോഗങ്ങള്‍ എങ്ങനെ വ്ൃത്യാസപ്പെട്ടിരിക്കുന്നു?

ചുവടെ കൊടുത്തിരിക്കുന്ന C++ പ്രോഗ്രാം ശകലത്തിലെ തെറ്റ്‌ കണ്ടുപിടിച്ച്‌ കാര
ണമെഴുതുക.

int *p,*q, a=5;

float b=2;

56൭;

gq=&b;

cout<<p<<*p<<*a;

if (p<q) cout<<p;
cout<<*p * a;

ഒരു പ്രോഗ്രാം തയാറാക്കുമ്പോള്‍ ഡൈനാമിക്‌ അലോക്കേഷന്‍ രീതി ഉപയോഗി
ച്ചു. എന്നാല്‍ delete] ഓപ്പറേറ്റര്‍ ഉപയോഗിച്ചുള്ള വാചകം ആ പ്രോഗ്രാമില്‍ ഇല്ലാ
യിരുന്നു. ഇത്‌ സൃഷ്ടിക്കുന്ന പ്രശ്നം വിവരിക്കുക.

കമ്പ്യൂട്ടര്‍ സയന്‍സ്‌ - XII

9.

10.

11.

12.

13.

14.

15.

താഴെ കൊടുത്തിരിക്കുന്ന C++ പ്രസ്താവനകള്‍ വായിച്ച്‌ ചോദ്യങ്ങള്‍ക്ക്‌ ഉത്തര
മെഴുതുക.

int mark[] = (34, 12, 25, 56, 38};

int *p = mark;

a. p യുടെ വിലയെന്ത്‌
2. ഇ + *(art2) എന്ന പദപ്രയോഗത്തിന്റെ വില എന്താണ്‌?

0. ൭7൦ എന്ന വാചകം തെറ്റാണ്‌ - എന്തുകൊണ്ട്‌? ഇത്‌ 21-17 എന്ന വാചക
ത്തില്‍ നിന്നും എങ്ങനെ വൃത്യാസപ്പെട്ടിരിക്കുന്നു.

താഴെ കൊടുത്തിരിക്കുന്ന പ്രോഗ്രാം ശകലത്തിന്റെ പ്രവര്‍ത്തനം വിവരിച്ച്‌ ഓട്ട്പുട്ട്‌
കണ്ടെത്തുക.

char *str = "Tobacco Kills";
for (int 150: str[iJ!="\O'; itt)
if (i>8)
*(strti) = toupper(*(strt+i));
cout<<str;

താഴെ കൊടുത്ത C++ പ്രസ്താവനകള്‍ ശ്രദ്ധിക്കുക.
int ar[] = {14, 29, 32, 63, 30};
ചുവടെ ചേര്‍ത്തവയില്‍ ഒരു വാചകം 32 എന്ന അംഗത്തെ നല്‍കുന്നില്ല. ഏതാ
ണത്‌?
a. ar[2] b. ar [*ar%3] c. *art2 ഠി. * (ar+2)

new, delete എന്നീ ഓപ്പറേറ്ററുകളുടെ പ്രവര്‍ത്തനങ്ങള്‍ ഉദാഹരണ സഹിതം
വിവരിക്കുക.

മെമ്മറി ലീക്ക്‌ എന്നാലെന്ത്‌? എന്താണ്‌ ഇതിന്‌ കാരണം? ഈ സാഹചര്യം എങ്ങനെ
ഒഴിവാക്കാം?

ചുവടെ കൊടുത്തിരിക്കുന്ന പ്രസ്താവനകള്‍ താരതമ്യം ചെയ്യുക.
int a=5;
int *a=new int(5);
ചുവടെ കൊടുത്തിരിക്കുന്ന സ്ട്രക്ചര്‍ നിര്‍വചനം വായിച്ച്‌ ചോദ്യങ്ങള്‍ക്ക്‌ ഉത്തര
മെഴുതുക.
struct sample

{

int num;
char *str;
} *sptr;

1. സ്ട്രക്ചറും പോയിന്റും

ഒ. sample ഡാറ്റാ തരത്തിലെ ഒരു ലൊക്കേഷനില്‍ ഡൈനാമിക്‌ അലോക്കേ
ഷന്‍ നടത്തി അധ്സ്സ്‌ sptt ല്‍ ശേഖരിക്കാന്‍ വേണ്ട C++ പ്രസ്താവന എഴു
തുക.

1. sptr പോയിന്റ്‌ ചെയ്യുന്ന മെമ്മറി സ്ഥാനത്തേക്ക്‌ ഡാറ്റ ഇന്‍പുട്ട്‌ ചെയ്യാനു
ളള CtHt പ്രസ്താവനകള്‍ എഴുതുക.

൦. ഈ സ്ട്രക്ചറിനെ സ്വയം സൂചിത സ്ര്രക്ചറായി നവീകരിക്കുക.

DO അധ്യായത്തിന്റെ പഠനം പുര്‍്ത്ത!യ?കു്

തോടെ പറിതാവ്‌ ആര്‍ജിക്കേങ പറനമേട്ടങ്ങള്‍്‌

© വിവിധ പ്രോദ്രാമിങ്‌ മാതൃകകള്‍ താരതമ്യം ചെ
യ്യാന്‍ സാധിക്കുന്നു.

പ്രൊസിജര്‍ ഓറിയന്റഡ്‌ പ്രോ്രാമിങ്‌ മാതുക
യുടെ വിവിധ സവിശേഷതകള്‍ സൂചികി
ക്കാന്‍ സാധിക്കുന്നു.

൭ ഒബ്ജക്ട്‌ ഓറിയന്റഡ്‌ പ്രോ്രാമിങ്‌ മാതുക
യുടെ NMR സൂചിരിക്കാന്‍ കഴിയുന്നു.

൭ ഡാ) അബ്സ്ട്രാക്ഷന്‍, ഡാറ്റ എന്‍ക്യാപ്സു
ലേഷന്‍ എന്നീ ആശയങ്ങള്‍ ഉദാഹരണസ
ഹിതം വിശദീകരിക്കാന്‍ സാധിക്കുന്നു.

൭ ഉന്‍ഫെറിറ്റന്‍സ്‌, പോളിമോര്‍ഫിസം എന്നിവ
യഥാര്‍ഥ ജീവിത ഉദാഹരണങ്ങള്‍ ഉപയോശിച്ച്‌
വിശദീകരിക്കാന്‍ സാധിക്കുന്നു.

ope “cr

D2P5S8
ഒബ്ജകറ്റ്‌ ഓറിയന്റീഡ്‌
പ്രോഗ്രാമിങ്ങിന്റെ തത്വങ്ങള്‍

കമ്പ്യൂട്ടറുകളെ കൂടുതല്‍ ഉപയോഗപ്രദമാക്കു
ന്നതിനായി നമ്മള്‍ പ്രോഗ്രാമുകള്‍ (Software)
വികസിപ്പിക്കുന്നു.അതിനായി വിവിധ പ്രോഗ്രാ
മിങ്‌ ഭാഷകള്‍ നമ്മള്‍ ഉപയോഗിക്കുന്നു. പ്രോ
ഗ്രാമിന്റെ വലിപ്പം കൂടുന്തോറും അത്‌ നിര്‍മി
ക്കുവാനുള്ള ബുദ്ധിമുട്ടും കൂടുന്നു. ഈ ബുദ്ധിമുട്ട്‌
ഒഴിവാക്കുന്നതിനായി IDE, ഡീബഗ്ഗര്‍, കംപൈലര്‍
എന്നിങ്ങനെ വിവിധ ഉപാധികള്‍ നമുക്ക്‌ ഉപയോ
ഗിക്കാം. കൂടാതെ വിവിധ നിര്‍മ്മാണ സമീപന
രീതികളായ മോഡുലാര്‍, സ്ര്രക്ച്ചര്‍ഡ്‌, പ്രൊസീ
ജറല്‍, ഒബ്ജക്റ്റ്‌ ഓറിയന്റഡ്‌ എന്നിവ സോഫ്‌
റ്റ്വെയര്‍ നിര്‍മ്മാണത്തിന്‌ നമുക്ക്‌ പിന്തുടരാവു
ന്നതാണ്‌. ഈ ഉപാധികളും സമീപനങ്ങളും സോ
ഫ്റ്റ്വെയര്‍ നിര്‍മ്മാണ സമയത്തെ സോഫ്റ്റ്വെ
യര്‍ ഉല്‍പ്പന്നങ്ങളുടെ പരിപാലനം (Maintain-
abilitiy), പുനരുപയോഗം (Reusabilitiy), വഹനീ
യത, (Portabilitiy), സുരക്ഷിതത്വം, സമ്ധ്ഗരത
(Integritiy), ഉപയോക്തസൌഹൃദം മുതലായ
പ്രശ്നങ്ങളെ അഭിമുഖീകരിക്കാന്‍ സഹായിക്കു
ന്നു.

മുന്‍ അധ്യായത്തില്‍ വിവിധ പ്രോഗ്രാമിങ്‌ ആശയ
ങ്ങളെപറ്റിയും C++ ഭാഷ ഉപയോഗിച്ച്‌ പ്രശ്ന
പരിഹാരത്തിനായി പ്രോഗ്രാമുകള്‍ നിര്‍മ്മിക്കുന്ന
തിനെപ്പറ്റിയും നമ്മള്‍ പഠിച്ചതാണ്‌. ഇന്‍പുട്ടുകളെ
പ്രോസസ്സ്‌ ചെയ്ത്‌ ജട്ട്പുട്ട്‌ ലഭ്യമാകുക എന്ന
തായിരുന്നു അവിടെയെല്ലാം നമ്മുടെ ലക്ഷ്യം.
തയാറാക്കിയ പ്രോഗ്രാമുകള്‍ ചെറുതും ലളിതവും
ആയിരുന്നതിനാല്‍ കൈക്കൊണ്ട സമീപനങ്ങളെ
പറ്റിയോ ഡാറ്റയുടെ സുരക്ഷിതത്വത്തെ പറ്റിയോ
നമ്മള്‍ ഒരിക്കലും ചിന്തിച്ചിരുന്നില്ല.

2. ബ്ജമ്റ്റ്‌ ഓറിയന്റ്‌ ഭ്പ്രാ്രാമിങ്ങിന്റെ തത്ത്വങ്ങള്‍

എന്നാലും പ്രശ്നപരിഹാരത്തിനായി പ്രോ്ഗാമുകള്‍ തയ്യാറാക്കുമ്പോള്‍ അറിഞ്ഞോ
അറിയാതെയോ നാം ഒരു സമീപനം പിന്തുടര്‍ന്നു കൊണ്ടിരുന്നു. പ്രോ്രഗാം വികസിപ്പിക്കു
വാന്‍ ഏറ്റവും ഉചിതമായ സമീപനം തിരഞ്ഞെടുക്കുന്നതിന്‌ നമ്മെ പ്രാപ്തരാക്കുന്നതി
നായി ഈ അധ്യായത്തില്‍, ഇതുവരെ നാം ഉപയോഗിച്ച പ്രോ്ശാമിങ്‌ സമീപനത്തെപ്പറ്റി
ചര്‍ച്ച ചെയ്യുകയും പുതിയ സമീപനം അവതരിപ്പിക്കുകയും ചെയ്യുന്നു.

2.1 പ്രോഗ്രാമിങ്‌ മാതൃക (Programming paradigm)

പ്രോഗ്രാമിങ്‌ മാതൃക എന്നാല്‍ ഒരു പ്രോഗ്രാം എങ്ങനെ ചിട്ടപ്പെടുത്തിയിരിക്കുന്നു എന്ന
തിനെ സൂചിപ്പിക്കുന്നതാണ്‌. പ്രോഗ്ഗാം വളരെ ചെറുതാണെങ്കില്‍ അത്‌ ചിട്ടപ്പെടുത്താന്‍
പ്രത്യേക തത്വമൊന്നും പാലിക്കേണ്ട കാര്യമില്ല. എന്നാല്‍ പ്രോഗ്രാം വലുതാകുംതോറും
അതിന്റെ സങ്കീര്‍ണത കുറയ്ക്കുവാനും അതിനെ പരിപാലിക്കുന്നതിനും ചില മുന്‍ക
രുതലുകള്‍ എടുക്കേണ്ടി വരുന്നു.

ചില മാതൃകകള്‍ നടപടിക്രമങ്ങള്‍ക്കു കൂടുതല്‍ പ്രാധാന്യം കൊടുക്കുമ്പോള്‍ മറ്റു ചിലത്‌
ഡാറ്റയ്ക്ക്‌ കൂടുതല്‍ പ്രാധാന്യം കൊടുക്കുന്നു. വിവിധ പ്രോഗ്രാമിങ്‌ ഭാഷകളുടെ കാര്യ
ക്ഷമതയും ശൈലിയുമെല്ലാം അവ സ്വീകരിക്കുന്ന പ്രോ്രഗാം മാതൃകകളാണ്‌ നിര്‍വചി
ക്കുന്നത്‌. മോഡുലാര്‍ പ്രോഗ്രാമിങ്‌, ടോപ്‌-ഡൌണ്‍സപ്രോ്രഗാമിങ്‌, ബോട്ടം-അപ്പ്‌ പ്രോഗ്രാ
മിങ്‌, സ്ര്രക്ച്ചര്‍ഡ്‌ പ്രോഗ്രാമിങ്‌ മുതലായ രീതികള്‍ നേരത്തെ പരീക്ഷിക്കപ്പെട്ടവയാണ്‌.
ഇവ ഓരോന്നും പ്രോഠ്രഗാമിങ്ങിന്റെ സങ്കീര്‍ണത കുറയ്ക്കുവാനും വിശ്വസ്തവും
പരിപാലന യോഗ്യവുമായ പ്രോ്രഗാമുകള്‍ നിര്‍മ്മിക്കുവാനും വേണ്ടിയാണ്‌ ഉപയോഗിച്ചത്‌.
ഒരു പ്രോഗ്രാമിങ്‌ മാതൃക മാത്രം പിന്തുടരുന്ന രീതിയിലാണ്‌ ചില പ്രോഗ്രാമിങ്‌ ഭാഷകള്‍
രൂപകല്‍പ്പന ചെയ്തിരിക്കുന്നത്‌. എന്നാല്‍ മറ്റു ചിലത്‌ ഒന്നിലധികം മാതൃകകള്‍ പിന്തുട
രുന്നു. C++ ഒന്നിലധികം Gla! NOTES മാതൃകകള്‍ പ്രയോജനപ്പെടുത്തുന്ന ഭാഷയാണ്‌.
C++ ഉപയോഗിച്ച്‌ ഏറ്റവും പ്രധാനപ്പെട്ട രണ്ടു മാതൃകകളായ പ്രോസിജറല്‍ മാതൃകയും
(Procedural paradigm) ഒബ്ജക്റ്റ്‌ ഓറിയന്റഡ്‌ മാതൃകയും (Object Oriented Paradigm)
നമുക്ക്‌ ര്രാവര്‍ത്തികമാക്കാവുന്നതാണ്‌. ഇവ ഓരോന്നിനെയും പറ്റി നമുക്ക്‌ വിശദമായി
ചര്‍ച്ച ചെയ്യാം.

പ്രോഗ്രാമിങ്‌ മാതൃകയുടെ ചരിത്രം

ഒബ്ജക്ട്‌ ഓറിയന്റഡ്‌
പ്രോഗ്രാമിങ്‌
മോഡുലാര്‍

പ്രൊസീജറല്‍ പ്രോഗ്രാമിങ്‌

സ്ട്രക്ച്ചേര്‍ഡ്‌ പ്രോഗ്രാമിങ്‌ | trey

പ്രോഗ്രാമിങ്ങ്‌ ഫഞ്യന്‍ 1
if else if, switch, for

ഒനിവപോജുള്ള ഖകുകള്‍ 5
അണ്‍ വാമി മരി = ദം
സ്ട്രക്ച്ചേര്‍ഡ്‌ ന 1970 ആവിര്‍വിചചു

1960 ages ആയര്‍ ദോ: C+, ജാവാ നെറ്റ്‌
പ്രോഗ്രാമിങ്‌ ന] 30: 0 ഫോര്‍ട്രാന്‍ 00: ടര്‍ബോ, പാസ്‌ക്കല്‍, അട
ഉദാ: പാസ്കല്‍, അട

കമ്പ്യൂട്ടര്‍ സയന്‍സ്‌ - XII

2.1.1 പ്രോസിജര്‍ ഓറിയന്റഡ്‌ പ്രോരഗാമിങ്‌ മാതൃക
(Procedure-Oriented Programming paradigm)

പ്രോസിജര്‍ ഓറിയന്റഡ്‌ പ്രോഗ്രാമിങ്‌ എന്നത്‌
ഒരു പ്രോഗ്രാം നിര്‍മ്മിക്കാന്‍ ആവശ്യമായ, നല്ല
രീതിയില്‍ ക്രമീകരിച്ച ഘട്ടങ്ങളുടെ ശ്രേണി
യെയും പ്രവര്‍ത്തനങ്ങളെയും സൂചിപ്പിക്കുന്നു.
ഒരു പ്രവൃത്തിയെ അല്ലെങ്കില്‍ പ്രോഗ്രാം പൂര്‍
ത്തീകരിക്കുന്നതിനായുള്ള ചിട്ടയായ (HAI
രണങ്ങളോട്‌ കൂടിയ പ്രസ്താവനകളും നടപ
ട്രികളും നിര്‍ദേശങ്ങളും ഇവയില്‍ അടങ്ങിയി
രിക്കും. ഈ നിര്‍ദേശങ്ങള്‍ ഇന്‍പുട്ട്‌ സ്വീക
രിക്കാനുള്ളതോ, ഗണിതപരമോ യുക്തിപര
മോ ആയ ക്രിയകള്‍ നിര്‍വഹിക്കാനുള്ളതോ
അതുമല്ലെങ്കില്‍ പരിണിതഫലം പ്രദര്‍ശിപ്പി
ക്കാനുള്ളതോ ആവാം. ഈ സമീപനത്തില്‍
കാര്യങ്ങള്‍ ചെയ്യുന്നതിനാണ്‌ ഈന്നല്‍ നല്‍കിയിരിക്കുന്നത്‌. ഈ മാതൃകയില്‍ പ്രോഗ്രാം
സങ്കീര്‍ണവും വലുപ്പം കൂടിയതുമാകുമ്പോള്‍ നിര്‍ദേശങ്ങളുടെ പട്ടികയെ വിഭജിച്ചു നിര്‍
ദേശങ്ങളെ ഫങ്ഷനുകളായി രൂപപ്പെടുത്തുന്നു. പ്രോഗ്ഗാമിലെ മറ്റു ഫങ്ഷനുകളുമായുള്ള
സമ്പര്‍ക്ക മാര്‍ഗത്തെയും അതിന്റെ ആവശ്യകതയെയും ഫങ്ഷന്‍ വ്ൃക്തമായി നിര്‍വ
ചിക്കുന്നു. അതുവഴി പ്രോ്രഗാമിന്റെ സങ്കീര്‍ണത കുറക്കാന്‍ ഫങ്ഷന്‍ സഹായിക്കുന്നു.
സങ്കീര്‍ണത വീണ്ടും കുറയ്ക്കുന്നതിനായി പൊതുവായ ക്രിയകളുമായി ബന്ധപ്പെട്ട anes
ഷനുകളെ മോഡ്യൂളുകളായി രൂപപ്പെടുത്തുന്നു. ഒരു വലിയ പ്രോഗാമിനെ അഞ്ചു വ്യത്യ
സ്ത ഫങ്ഷനുകളായി വിഭജിക്കുകയും പൊതുവായ പ്രവര്‍ത്തനങ്ങള്‍ ഉള്‍പ്പെടുന്ന anes
ഷനുകളെ കൂട്ടിച്ചേര്‍ത്തു രണ്ട്‌ മൊഡ്യൂളുകളാക്കുകയും ചെയ്യുന്ന പ്രോസിജര്‍ ഓറിയന്റഡ്‌
മാതൃകയാണ്‌ ചിത്രം 2.1-ല്‍ കാണിച്ചിരിക്കുന്നത്‌.

C, Pascal, FORTRAN, BASIC മുതലായവ പ്രോസിജര്‍ ഓറിയന്റഡ്‌ പ്രോഗ്രാമിങ്‌
ഭാഷകളാണ്‌. C++ പ്രോഗ്രാമിങ്‌ പഠന പ്രക്രിയയില്‍ നമ്മള്‍ ഇതുവരെ പിന്‍തുടര്‍ന്നത്‌
പ്രോസിജര്‍ ഓറിയന്റഡ്‌ മാതൃകയാണ്‌. പ്രോസിജര്‍ ഓറിയന്റഡ്‌ പ്രോഗ്രാമിങ്‌ ഭാഷകളെ
ടോപ്‌ ഡൌണ്‍ പ്രോഗ്രാമിങ്‌ ഭാഷകള്‍ എന്നും വിളിക്കുന്നു.

Function1() 001151
{

struct student

int rno, m1,m2,m3;
void main()

Function1();
If (condition)
ധം |
stat 5;

do while (condition)
Function3();

stat 11;

PROGRAM IS TOP DOWN

}

DADO 2.7 പ്രോന്ധിജറര്‌ 2IO

പക്ഷെ പ്രോഗ്രാമിന്റെ വലുപ്പം കൂടുകയും സങ്കീര്‍ണത വര്‍ധിക്കുകയും ചെയ്യുന്നതോടെ
അതിന്റെ പരിമിതികള്‍ വെളിപ്പെട്ടു തുടങ്ങുന്നു. ഈ സമീപനം എത്ര നല്ല രീതിയില്‍
പ്രാവര്‍ത്തികമാക്കിയാലും വലിയ പ്രോഗ്രാമുകള്‍ സങ്കീര്‍ണമായിത്തന്നെ തുടരുന്നു.
പ്രോസിജര്‍ ഓറിയന്റഡ്‌ ഭാഷകളുടെ സങ്കീര്‍ണത വര്‍ധിക്കുവാനുള്ള പ്രധാന കാരണ
ങ്ങള്‍ താഴെ പറയുന്നവയാണ്‌.

A. ഡാറ്റയുടെ പ്രാധാന്യം കുറച്ചു കാണുന്നു.

0. പുതിയ ഡാറ്റ അംഗത്തെ കൂട്ടിച്ചേര്‍ക്കുമ്പോള്‍ എല്ലാ ഫങ്ഷനുകള്‍ക്കോ അല്ലെ

ങ്കില്‍ ചില ഫങ്ഷനുകള്‍ക്കോ മാറ്റം വേണ്ടി വരുന്നു.
C. പുതിയ ഡാറ്റ ഇനങ്ങള്‍ നിര്‍മിക്കുക പ്രയാസകരമാണ്‌.

d. യഥാര്‍ഥ ജീവിത മാതൃകയ്ക്കു യോജിച്ചതല്ല.
നമുക്ക്‌ ഇത്‌ ഓരോന്നിനെക്കുറിച്ചും ഇവിടെ ചര്‍ച്ച ചെയ്യാം.

2. ബ്ജമ്റ്റ്‌ ഓറിയന്റ്‌ ഭ്പ്രാ്രാമിങ്ങിന്റെ തത്ത്വങ്ങള്‍

ഒ. ഡാറ്റയുടെ പ്രാധാന്യം കുറച്ചു കാണുന്നു

പ്രോസിജര്‍ ഓറിയന്റഡ്‌ ഭാഷകള്‍, കാര്യങ്ങള്‍ ചെയ്യുന്നതിനാണ്‌ പ്രാമുഖ്യം നല്‍കുന്നത്‌.
ഡാറ്റയ്ക്ക്‌ പ്രാധാന്യം കുറവാണ്‌. ഒരു ഉദാഹരണത്തിന്റെ സഹായത്തോടെ ഇത്‌ വിശദീ
കരിക്കാം. സ്‌കൂളിലെ പ്രവര്‍ത്തനങ്ങളള്‍ യ്രന്തവല്‍കരിക്കുന്നതിനായി ഒരു സോഫ്റ്റ്‌
വെയര്‍ വികസിപ്പിക്കുന്നു എന്ന്‌ കരുതുക. ഒരു പുതിയ വിദ്യാര്‍ഥിയെ ഉള്‍പ്പെടുത്തുക,
ഒരു വിദ്യാര്‍ഥിയെ നീക്കം ചെയ്യുക, ഫീ ശേഖരണ വിവരങ്ങള്‍ രേഖപ്പെടുത്തുക മുതലാ
യവയാകാം ഇതില്‍ ഉള്‍പ്പെടുന്ന പ്രവര്‍ത്തനങ്ങള്‍. സോഫ്റ്റ്വെയറില്‍ ഈ പ്രവര്‍ത്ത
നങ്ങള്‍ക്കായി പ്രത്യേക ഫങ്ഷനുകള്‍ ഉപയോഗിച്ചിരിക്കുന്നതായി എന്ന്‌ അനുമാനിക്കുക.
വിദ്യാര്‍ഥികളുടെ വിവരങ്ങള്‍ അടങ്ങിയ സ്ര്രക്ചറുകളുടെ (സ്റ്റുഡന്‍റ്‌) അറേ ഉപയോഗിച്ച്‌
ഈ ഫംഗ്ഷനുകളുടെ പ്രവര്‍ത്തനത്തിനായുള്ള ഡാറ്റ സംഭരിക്കാവുന്നതാണ്‌. ഈ ഡാറ്റ
എല്ലാ ഫംഗ്ഷനുകള്‍ക്കും ലഭ്യമാക്കണമെങ്കില്‍ അറേയെ ഗ്ലോബല്‍ ആയി നിര്‍വചി
ക്കേണ്ടി വരും (ഒന്നാം വര്‍ഷ പാഠപുസ്തകത്തിന്റെ ഭാഗം 10.5 നോക്കുക). ഇപ്പോള്‍ ഈ
ഫംഗ്ഷനുകളെ കൂടാതെ പ്രോ്രഗാമിലുള്ള മറ്റ്‌ ഏതു ഫങ്ഷനുകള്‍ക്കു വേണമെങ്കിലും
ഡാറ്റ ഉപയോഗിക്കാവുന്ന അവസ്ഥയായി. തന്മൂലം അറിഞ്ഞോ അറിയാതെയോ ഡാറ്റ
യ്ക്ക്‌ മാറ്റം സംഭവിക്കാനുള്ള കളമൊരുങ്ങുന്നു. ഇത്‌ തടയുവാന്‍ നമുക്ക്‌ യാതൊരു
തരത്തിലുമുള്ള നിയ്രത്രണവും ഏര്‍പ്പെടുത്താന്‍ സാധിക്കില്ല.

അടുത്ത ദിവസം സമര്‍പ്പിക്കേണ്ട അസൈന്‍മെന്റ്‌ തീന്‍ മേശപ്പുറത്തു വെച്ചിട്ടു പോകുന്നത്‌
പോലെയാണിത്‌. ഈ അസൈന്‍മെന്റ്‌ നാശമാകാനുള്ള MWS ഇവിടെ വളരെ കൂടു
തലാണ്‌. ചെറിയ കുട്ടികളുണ്ടെങ്കില്‍ അവര്‍ അത്‌ കീറുകയോ അല്ലെങ്കില്‍ അതില്‍ af
ങ്ങള്‍ വരയ്ക്കുകയോ ചെയ്യാം. അതുമല്ലെങ്കില്‍ മേശപ്പുറത്തു വച്ചിരിക്കുന്ന ചായ അബദ്ധ
ത്തില്‍ അതിന്റെ മേല്‍ മറിഞ്ഞു വീഴാം. ആര്‍ക്കു വേണമെങ്കിലും എടുക്കാവുന്ന രീതിയില്‍
അസൈന്‍മെന്റ്‌ വെക്കുന്നത്‌ കൊണ്ടാണ്‌ ഇത്‌ ്തുന്ത്ത്‌

സംഭവിക്കുന്നത്‌. ak

ഒരു പ്രോസീജറല്‍ ഓറിയന്റഡ്‌ പ്രോഗ്രാമിങ്‌ മാതൃ
കയിലെ ലോക്കല്‍ വേരിയബിളുകള്‍, ഗ്ലോബല്‍
വേരിയബിളുകള്‍, ഫംങ്ഷനുകള്‍ മുതലായവയു
ടെ ക്രമീകരണമാണ്‌ ചിത്രം 2.2-ല്‍ കാണിച്ചിരി ത്‌

ക്കുന്നത്‌. ഡാറ്റ ആവശയമായ ഫങ്ഷനുകളെ പച്ച

വരകള്‍ സൂചിപ്പിക്കുന്നു. ഡാറ്റയുടെ അനധികൃ ചിതം 2.2: ഡാറ്റ ഉപയോഗപ്പെടുത്തുന്ന
തമായ ഉപയോഗത്തെ ചുവപ്പു വരകള്‍ സൂചിപ്പി ഫമ്ഷനുകള്‍

ക്കുന്നു.

b. പുതിയ ഡാറ്റ അംഗത്തെ കൂട്ടിച്ചേര്‍ക്കുമ്പോള്‍ എല്ലാ ഫങ്ഷനുകള്‍ക്കോ അല്ലെ
ങ്കില്‍ ചില ഫങ്ഷനുകള്‍ക്കോ മാറ്റം വേണ്ടിവരുന്നു

പല ഫങ്ഷനുകളും ഗ്ലോബല്‍ ഡാറ്റ ഉപയോഗിക്കുന്നതിനാല്‍ ഡാറ്റ എങ്ങനെ സംഭരി
ച്ചിരിക്കുന്നു എന്നത്‌ ഏറെ പ്രാധാന്യമുള്ളതാണ്‌. ഡാറ്റ ഉപയോഗിക്കുന്ന ഫങ്ഷനുകളെ
പരിഷ്‌കരിക്കാതെ ഡാറ്റയുടെ ക്രമീകരണത്തില്‍ മാറ്റം വരുത്തുക സാധ്യമല്ല. നമ്മള്‍
പുതിയ ഡാറ്റ അംഗത്തെ കൂട്ടി ചേര്‍ക്കുമ്പോള്‍ ആ ഡാറ്റ ഉപയോഗിക്കുന്ന എല്ലാ
ഫങ്ഷനുകളെയും പരിഷ്കരിക്കേണ്ടതുണ്ട്‌. എന്നാല്‍ AMA ഈ ഫങ്ഷനുകള്‍ക്കു
പുതിയ ഡാറ്റ അംഗം ലഭ്യമാകൂ. ഇത്തരത്തില്‍ ഒരു ഡാറ്റയുമായി ബന്ധപ്പെട്ട എല്ലാ

കമ്പ്യൂട്ടര്‍ സയന്‍സ്‌ - XII

ഫങ്ഷനുകളെയും കണ്ടെത്തുക എന്നത്‌ വളരെ ശ്രമകരമായ കാര്യമാണ്‌ എന്ന്‌ മഠ്രതമല്ല
പുതിയ ഡാറ്റ ലഭ്ൃമാകത്തക്ക രീതിയില്‍ അവയെ കൃത്യമായി പരിഷ്‌ക്കരിക്കുക എന്നത്‌
അതിലും ബുദ്ധിമൂട്ടേറിയതാണ്‌.

നമ്മുടെ സ്‌കൂള്‍ സോഫ്റ്റ്വെയറിലെ സ്റ്റുഡന്‍റ്‌ സ്ഭ്രക്ച്ചറിലേക്കു ‘age’ എന്നൊരു പുതിയ
ഇനം കൂട്ടിച്ചേര്‍ക്കണം എന്നിരിക്കട്ടെ. സോഫ്റ്റ്വെയറിന്റെ സുഗമമായ പ്രവര്‍ത്തനത്തിന്‌
സ്റ്റുഡന്‍റ്‌ ഡാറ്റ ഉപയോഗിക്കുന്ന എല്ലാ ഫങ്ഷനുകളെയും കണ്ടെത്തി അവയില്‍ ആവശ്യ
മായ മാറ്റം വരുത്തല്‍ അനിവാര്യമാണ്‌.

C. പുതിയ ഡാറ്റ ഇനം നിര്‍മിക്കുക ,പയാസകരമാണ്‌

ഇന്‍റ്റിജര്‍, ഫ്ളോട്ട്‌, ക്യാരക്ടര്‍ മുതലായ ഡാറ്റ ഇനങ്ങള്‍ ആണ്‌ കമ്പ്യൂട്ടര്‍ ഭാഷകളില്‍
സാധാരണയായി ഉപയോഗിക്കാറുള്ളത്‌. ചില പ്രോഗ്രാമിങ്‌ ഭാഷകള്‍ അടിസ്ഥാന ഡാറ്റ
ഇനങ്ങളെ കൂടാതെ മറ്റു ഡാറ്റ ഇനങ്ങള്‍ നിര്‍മിക്കാന്‍ അനുവാദം നല്‍കിയിരിക്കുന്നു.
അതിനര്‍ഥം അവ വിപുലീകരിക്കാവുന്നവയാണ്‌ എന്നാണ്‌. അടിസ്ഥാന രൂപകല്‍പ്പന
കളില്‍ മാറ്റം വരുത്തുകയോ അല്ല്ലെങ്കില്‍ പ്രോരഗാം കോഡില്‍ കാര്യമായ മാറ്റം വരുത്താതെ
പ്രോഗ്ഗാമിന്റെ കഴിവിലും കാര്യക്ഷമതയിലും ഗണ്യമായ വര്‍ധന വരുത്തുകയോ ചെയ്യാ
നുള്ള കഴിവിനെയാണ്‌ വിപുലീകരണ സാധ്യത എന്ന്‌ പറയുന്നത്‌. ഈ സവിശേഷത
പ്രോഗ്രാമുകളുടെ സങ്കീര്‍ണത കുറയ്ക്കാന്‍ സഹായിക്കുന്നതിനോടൊപ്പം അതിന്റെ കഴി
വുകള്‍ വര്‍ധിപ്പിക്കുകയും ചെയ്യുന്നു. പ്രോസിജറല്‍ പ്രോരഗാമുകള്‍ വിപുലീകരണ സാ
ധ്യതയില്ലാത്തവയാണ്‌.

ഠ. യഥാര്‍ഥ ജീവിത മാതൃകയ്ക്കു യോജിച്ചതല്ല

പ്രോസിജറല്‍ പ്രോഗ്രാമിങ്‌ മാതൃകയില്‍ ഉപയോഗിക്കുന്ന ഫങ്ഷനുകളെയും പ്രോഗ്രാ
മുകളെയും ഒറ്റ ഘടകമായി പരിഗണിക്കുകയില്ല. മറിച്ചു അവ ഓരോന്നും സ്വതന്ത്രമായി
നിലകൊള്ളുന്നു. അതിനാല്‍ ഈ മാതൃകയില്‍ ഉപയോഗിക്കുന്ന ഡാറ്റയും ഫങ്ഷനുകളും
ഒരു യഥാര്‍ഥ ജീവിത മാതൃകയായി പറയാനാവില്ല.

ഉദാഹരണത്തിന്‌ നമ്മുടെ സ്കൂള്‍ സോഫ്റ്റ്വെയറില്‍ നമ്മള്‍ വിദ്യാര്‍ഥികളുടെ ഡാറ്റയും
അവയെ കൈകാര്യം ചെയ്യുന്ന ഫങ്ഷനുകളും ഉപയോഗിക്കുന്നു. അതുപോലെ അധ്യാപ
കരുടെ ഡാറ്റയും അവ കൈകാരുയം ചെയ്യുന്ന ഫങ്ഷനുകളും ഉണ്ടായിരിക്കും. പ്രോസി
ജറല്‍ മാതൃകയാണെങ്കില്‍ വിദ്യാര്‍ഥികളുടെ ഡാറ്റയും അവയുടെ ഫങ്ഷനുകളും ഒറ്റ
ഘടകമാക്കാനും അതുപോലെ അധ്യാപകരുടെ ഡാറ്റയും ഫങ്ഷനുകളും മറ്റൊരു
ഘടകമാക്കി മാറ്റാനും സാധിക്കില്ല.

നിതൃജീവിതത്തിലെ ഓരോ വസ്തുവും പരിശോധിച്ചാല്‍, അവജെല്ലാം അവയുടെ
സവിശേഷതകളും സ്വഭാവഗുണങ്ങളും ഒത്തു ചേര്‍ന്ന ഒറ്റ ഘടകമാണെന്ന്‌ നമുക്ക്‌
കാണാം. ഉദാഹരണത്തിന്‌ മനുഷ്യനെ പരിഗണിച്ചാല്‍, പേര്‍, പൌരത്വം, ലിംഗം മുതലായവ
സവിശേഷതകളും സംസാരം, ചിരി മുതലായവ സ്വഭാവ ഗുണങ്ങളും ആവാം. പ്രോസി
BOG മാതൃകയില്‍, സ്വഭാവ ഗുണങ്ങളെ ഫംങ്ഷനുകളായും സവിശേഷതകളെ ഡാറ്റ
യായും സൂചിപ്പിക്കാമെങ്കിലും അവയെ ഒറ്റ ഘടകമാക്കി മാറാന്‍ സാധിക്കാത്തതിനാല്‍,
ഈ മാതൃക യഥാര്‍ഥ ജീവിത മാതൃകയുമായി സാമൃമില്ലാത്തതാണ്‌.

അടുത്തതായി ഒബ്ജക്റ്റ്‌ ഓറിയന്റഡ്‌ മാതൃകയെപ്പറ്റി ചര്‍ച്ച ചെയ്യുകയും അത്‌ പ്രോസി
ജറല്‍ മാതൃകയുടെ പരിമിതികള്‍ എങ്ങനെ മറികടക്കുന്നു എന്ന്‌ കാണുകയും ചെയ്യാം.

2. ബ്ജമ്റ്റ്‌ ഓറിയന്റഡ്‌ ഭ്പ്രാ്രാമിങ്ങിന്റെ തത്ത്വങ്ങള്‍

നിങ്ങളുടെ പുരോഗതി അറിയുക
1. താഴെ പറയുന്ന മൂന്നു പ്രസ്താവനകള്‍ ശരിയോ തെറ്റോ എന്ന്‌
പറയുക:
a. ഗ്ലോബല്‍ വേരിയബിളുകള്‍ ഒന്നിലധികം ഫങ്ഷനുകളില്‍
ഉപയോഗിക്കാന്‍ സാധിക്കില്ല.

12. യഥാര്‍ഥ ലോകവുമായി വളരെ സാമ്യമുള്ളതാണ്‌ പ്രോസിജറല്‍
മാതൃക.

൦. പ്രോസിജറല്‍ മാതൃകയില്‍ ഡാറ്റയും ഫങ്ഷനുകളും ഒറ്റ
ഘടകമായി കൂട്ടിച്ചേര്‍ക്കാന്‍ സാധിക്കില്ല.

2. താഴെ പറയുന്നവയില്‍ നിന്ന്‌ പ്രോസിജറല്‍ ഭാഷകള്‍ തിരഞ്ഞെ
ടൂക്കുക.

C, C++, ഫോര്‍ദട്രാന്‍, ജാവ, പാസ്കല്‍

2.1.2 ഒബ്ജക്റ്റ്‌ ഓറിയന്റഡ്‌ പ്രോ്രഗാമിങ മാതൃക
(Object-Oriented Programming (OOP) paradigm)

ഒബ്ജക്റ്റ്‌ ഓറിയന്റഡ്‌ പ്രോ്ഗാമിങ്‌ മാതൃക, പ്രോസിജറല്‍ മാതൃകയിലെ പരിമിതികള്‍
പരിഹരിച്ചു കൊണ്ട്‌ ഡാറ്റയെയും അവയുടെ മേല്‍ പ്രവര്‍ത്തിക്കുന്ന ഫങ്ഷനുകളെയും
കൂട്ടിച്ചേര്‍ത്ത്‌ ഒറ്റ ഘടകമാക്കി മാറ്റുന്നു. ഈ ഘടകത്തെ ഒബ്ജക്റ്റ്‌ (object) എന്ന്‌
വിളിക്കുന്നു.

ഉദാഹരണത്തിന്‌ സ്കൂള്‍ സോഫ്റ്റ്വെയ
റില്‍ OOP നടപ്പിലാക്കിയാല്‍ വിദ്യാര്‍ഥി Student ബ്ജക്്‌ Teacher amiss

കളുടെ ഡാറ്റയും അവ ഉപയോഗപ്പെടു

ത്തുന്ന ഫങ്ഷനുകളും കൂട്ടിയോജിപ്പിച്ചു

സ്റ്റുഡന്‍റ്‌ (Student) എന്ന ഒബ്ജക്റ്റ്‌ aie ome
get_student()

show_student() |
update_fees() y

get_teacher()

നമുക്ക്‌ നിര്‍മിക്കാം. അതുപോലെ അധ്യാ
show_teacher() J

പകരുടെ ഡാറ്റയും ഫങ്ഷനുകളും കൂട്ടി
ച്ചേര്‍ത്തു ടീച്ചര്‍ (Teacher) എന്നൊരു
ഒബ്ജക്റ്റും നിര്‍മിക്കാം. ഒരു ഒബ്ജ aloo 24 ഡാറ്റകളും ഫങ്ഷയുകളും
ക്ടിലുള്ള ഫങ്ഷനുകള്‍ക്ക്‌ അനുവാദം അടങ്ങുന്ന മിററുകള്‍

കൂടാതെ മറ്റൊരു ഒബ്ജക്ടിലെ ഡാറ്റയെ ഉപയോഗിക്കുവാന്‍ സാധിക്കുകയില്ല.

OOP ഉപയോഗിക്കുന്നത്‌ കൊണ്ടുള്ള മേന്മകള്‍ :

2. സ്പഷ്ടമായ ഘടകങ്ങള്‍ അടങ്ങിയ ഒരു പ്രോഗ്രാമിങ്‌ ഘടന OOP പ്രദാനം ചെയ്യുന്നു.

b. അബ്‌സ്ട്രാക്ട്‌ ഡാറ്റ ഇനങ്ങള്‍ നിര്‍വചിക്കാന്‍ ഇത്‌ വളരെ നല്ലതാണ്‌.

കമ്പ്യൂട്ടര്‍ സയന്‍സ്‌ - XII

C. എങ്ങനെയാണ്‌ പ്രയോഗത്തില്‍ വരുത്തിയിരിക്കുന്നത്‌ എന്നുള്ള വിവരങ്ങള്‍ മറ്റു
ഘടകങ്ങളില്‍നിന്നും മറച്ചു വയ്ക്കാനും വ്യക്തമായ ഒരു സമ്പര്‍ക്കമുഖം പ്രദാനം
ചെയ്യാനും ഇത്‌ സഹായിക്കുന്നു.

d. നിലവിലുള്ളവയെ ബാധിക്കാത്ത വിധത്തില്‍ പുതിയ ഒബ്ജക്റ്റുകള്‍ നിര്‍മി
ക്കാവുന്നതിനാല്‍ നിലവിലുള്ള കോഡിനെ മാറ്റാനും പരിപാലിക്കാനും മറ്റും എളു
പ്പമാണ്‌.
യഥാര്‍ഥ ജീവിത സാഹചര്യങ്ങളെ പ്രയോഗത്തില്‍ വരുത്താന്‍ സഹായിക്കുന്നു.

ഓപ്പറേറ്ററുകള്‍ക്കു പുതിയ ഡാറ്റ ഇനങ്ങളും പുതിയ പ്രവര്‍ത്തനങ്ങളും നിര്‍വചി
ക്കാന്‍ സഹായിക്കുന്നു.

2.2 OOP ന്റെ അടിസ്ഥാന തത്വങ്ങള്‍ (Basic concepts of OOP)

ഒബ്ജക്റ്റുകള്‍, ക്ലാസ്സുകള്‍, ഡാറ്റ erenind,sossiad (Data Abstraction), ഡാറ്റ എന്‍ക്യാപ്‌
സുലേഷന്‍ (Data Encapsulation), മോഡുലാരിറ്റി (Modulartiy), ഇന്‍ഹെറിറ്റന്‍സ്‌
(Inheritance), പോളിമോര്‍ഫിസം (Polymorphism) മുതലായ ആശയങ്ങള്‍ നല്‍കുന്ന
തിലൂടെ ഒബ്ജക്റ്റ്‌ ഓറിയന്റഡ്‌ പ്രോ്രഗാമിങ്‌ സോഫ്റ്റ്വെയര്‍ വികസനവും പരിപാലനവും
ലളിതമാക്കുന്നു. ഈ ആശയങ്ങള്‍ നമുക്ക്‌ വിശദമായി ചര്‍ച്ച ചെയ്യാം.

2.2.1 ഒബ്ജക്റ്റുകള്‍ (Objects)

നമുക്ക്‌ ചുറ്റുമുള്ള ഏതൊരു വസ്തുവിനെയും ഒബ്ജക്റ്റായി പരിഗണിക്കാം. എല്ലാ
ഒബ്രക്റ്റുകള്‍ക്കും ഗുണവിശേഷങ്ങളും (ഡാറ്റ/അംഗം/ അവസ്ഥ) പ്രവര്‍ത്തനരീതികളും
(ഫങ്ഷനുകള്‍/മെത്തേഡുകള്‍) ഉണ്ടായിരിക്കും. ചിത്രം 2.4-ല്‍ ഒബ്ജക്റ്റുകളും അവയുടെ
ഗുണവിശേഷങ്ങളും രീതികളും ഉദാഹരണസഹിതം പട്ടികപ്പെടുത്തിരിക്കുന്നു.

Student State Radio State State
RegNo, Name, Age, On_Off, Current Volume, Name, Color, Breed,
Weight, Height, Mark Current Station Hungry
Behavior eof Behavior Behavior
Register, Change mark, @_00° Turn on_off, Increase Barking, Fetching,
a Change Height Weight volume, Decrease volume, Wagging tail
¢ seek, scan, and tune
State State റ State
Clock Dial Color, Hour, Car Name, Current Gear, Bike Speed, Acceleration,
Minute Current Speed, Headlight Current Gear
Status
Behavior Behavior
Set Time, Show time Behavior Turn the accelerator,
Push accelerator, Push the brake, Change
Change gear, light on off gear
State Array State Window State
[ അ Top, Length, Full, Length, Full, Empty, Top, Left, Name,
pare ( hee Empty int { ] Num, Current Index ~ - Current State
fs] ജി...
= Push, Pop ® 1 2 3 4& Insert, Delete, Sort, ri Minimise, Maximise,
Traverse, Merge, Print Move, Close

alae 2.4: Mas ജിവിതത്മിലെ BNI) അവയുടെ സവിശേഷതകളോടും (അവസ്ഥ രീതികളും
(സ്വഭാവ ഗുണങ്ങത്മോടും) കുടി

ഒറ്റിയന്റഡ്‌ ഭ്പ്രര്രാമിങ്ങിന്റെ തത്ത്വങ്ങള്‍

നിങ്ങള്‍ക്ക്‌ ചുറ്റുമുള്ള വസ്തുക്കള്‍ നിരീക്ഷിക്കുകയും അവ ഓരോന്നി
ന്റെയും സവിശേഷതകളും സ്വഭാവഗുണങ്ങളും തിരിച്ചറിയുകയും
ചെയ്യുക. നിങ്ങളുടെ കണ്ടെത്തലുകള്‍ താഴെ പറയുന്ന പട്ടികയില്‍
എഴുതുക:

നമുക്കു ചെയ്യാം

പ്രോഗ്രാമിങ്‌ ഉപയോഗിച്ച്‌ പ്രശ്ന പരിഹാരത്തിനായി OOP പ്രയോജനപ്പെടുത്തുകയാ
ണെങ്കില്‍, പ്രശ്നത്തിനെ ഫങ്ഷനുകളായി വിഭജിക്കുന്നതിനു പകരം ഒബ്ജക്റ്റുകളായി
വിഭജിക്കുന്നതായി പരിഗണിക്കുക. ഫങ്ഷനുകളായി പരിഗണിക്കാതെ ഒബ്ജക്റ്റുകളായി
പരിഗണിക്കുമ്പോള്‍ പ്രോഗ്രാമിന്റെ രൂപകല്‍പ്പന ലളിതമായി മാറുന്നു. എന്തുകൊണ്ടെ
ന്നാല്‍ പ്രോഗ്രാമുകളിലെ ഒബ്ജക്റ്റുകളും യഥാര്‍ഥ ജീവിതത്തിലെ ഒബ്ജക്റ്റുകളും
തമ്മില്‍ വളരെ സാമുൃമുണ്ട്‌.

ഡാറ്റയും അവയുടെ മേല്‍ പ്രവര്‍ത്തിക്കുന്ന ഫങ്ഷനുകളും സംയോജിപ്പിച്ച്‌ ഒറ്റ ഘടകമാ
ക്കിയാണ്‌ OOP ല്‍ ഒബ്ജക്റ്റ്‌ ലഭ്യമാക്കുന്നത്‌. സംയോജനത്തിനു ശേഷം ഒബ്ജക്റ്റിലുള്ള
ഫങ്ഷനുകളെ മെമ്പര്‍ ഫങ്ഷന്‍ എന്നും ഡാറ്റയെ മെമ്പര്‍ (മെമ്പര്‍ ഡാറ്റ) എന്നും വിളി
ക്കുന്നു.

2.2.2 ക്ലാസുകള്‍ (Classes)

ഒരു ഒബ്ജക്റ്റിനെപ്പറ്റിയുള്ള എല്ലാം
നിര്‍ണയിക്കുന്ന ക്ലാസ്‌ ഉപയോഗി
ച്ചാണ്‌ അതിനെ നിര്‍വചിക്കുന്നത്‌.
ഒരു പ്രത്യേക തരത്തില്‍പെട്ട്‌ എല്ലാ
വസ്തുക്കള്‍ക്കുമുള്ള പൊതുവായ

ഗുണങ്ങളെ നിര്‍വചിക്കുന്ന മാതൃക
യാണ്‌ ക്ലാസ്‌. ഈ നിര്‍ദേശങ്ങളില്‍
ഡാറ്റയെ കുറിച്ചും അവയുടെ മേല്‍
പ്രവര്‍ത്തിക്കുന്ന ഫങ്്‌ഷനുകളെ
കുറിച്ചും വിവരങ്ങള്‍ അടങ്ങിയിരി
ക്കും. ഒരു ക്ലാസ്സിന്റെ ഒബ്ജക്റ്റിനെ
ആ ക്ലാസ്സിന്റെ ഇന്‍സ്റ്റന്‍സ്‌ എന്ന്‌
വിളിക്കുന്നു. മാത്രമല്ല ഒരു ക്ലാസ്സില്‍ alles 2.9: ക്ലാസ്സുകളും അതിന്റെ
നിന്നും എത്ര ഒബ്ജക്റ്റ്‌ വേണ ഒ്ബ്ങക്റ്റുകളും
മെങ്കിലും നിര്‍മിക്കാം. (ചിത്രം 2.5

കാണുക.

ഞ്ഞത്‌

ക്രാസിന്റെ പ്രഖ്യാപനത്തിന്‍റെ
ഫൊയുഭുപം

class class_name
{
private :
variable declarations;
function declarations;

public :
variable declarations;
function declarations;
apmloissil eed;

ച്ചിരിക്കുന്ന ana seng

കര മെമ്പര്‍ ഫങ്ഷന്‍
എന്നിമട്െടുന്നു

ana’ ഉള്ളില്‍

പ്രഖയപികചിമക്കുന്ന

വേരിയബില്‍സിനെ
aug വര്‍
എനന്‌ ഫയുന്നു.

ui

/ കാനിന്റെ ഹണം \

class cube = —————————}- >
{
private :
int height, color; —_____|

public :
void get_cube_info()
{
cout << “Enter Height : “;
cin >> height;
cout << “Enter Color : “;
cin >> color;

t

Class
Name

Data
Members

Member
Function/
Method/
Behavior

ചിത്രം 2.6: ഒരു ക്ലാസ്ത്രിനെ AWIQDd ചെയ്യുവാനുള്ള പൊതുവായ രീത? ഉദാഹരണസ്പഹിതം

ഒരു ക്ലാസ്സിന്റെ നിര്‍വചനവും ഉപ
യോഗവും സ്ദ്രക്ചറിന്‌ സമാനമാണ്‌.
ഒരു സ്ര്രക്ച്ചറില്‍ ഡാറ്റയെ കുറി
ച്ചുള്ള വിവരങ്ങളാണുള്ളതെങ്കില്‍
ക്ലാസ്സില്‍ ഡാറ്റയെയും അവയുടെ
മേല്‍ പ്രവര്‍ത്തിക്കുന്ന ഫങ്ഷനുക
ളെയും പറ്റിയുള്ള വിവരങ്ങളാണ്‌
അടങ്ങിയിരിക്കുന്നത്‌ (ചിര്രം 2.6
കാണുക). ‘struct’ എന്ന കീ
വേര്‍ഡ്‌ ഉപയോഗിച്ചാണ്‌ സ്ര്‍്രക്ചര്‍
നിര്‍മിക്കുന്നതെങ്കില്‍ 'class’ എന്ന

get_student()
show_student() /
update_fee:

$1

get_student()
show_student()
update_fees() 4

$2

allo 2.7: സ്തു ക്ലാസ്ത്റിന്റെ ഒബ്ജക്റ്റുകശി

കീവേര്‍ഡ്‌ ഉപയോഗിച്ചാണ്‌ ക്ലാസ്‌ നിര്‍മിക്കുന്നത്‌.

Student എന്ന ക്ലാസ്‌ ഉപയോഗിച്ച്‌ '81, '32' എന്നീ പേരുകളുള്ള രണ്ടു ഒബ്ജക്റ്റുകള്‍
നിര്‍മിക്കാനുള്ള പ്രസ്താവന താഴെ കൊടുത്തിരിക്കുന്നു. (ചിത്രം 2.7 ല്‍ ഉള്ളതുപോലെ).
Student 91, 32%

2. ബ്ജമ്റ്റ്‌ ഓറിയന്റഡ്‌ ഭ്പ്രാ്രാമിങ്ങിന്റെ തത്ത്വങ്ങള്‍

രണ്ടു ഒണ്‍്ജക്റ്റുകള്‍ തമ്മില്‍ ആശയവിനിമയം Teacher ഒബ്ജക്ട്‌
നടത്തുന്നത്‌ സന്ദേശം (മെസ്സേജ്‌) കൈമാറിക്കൊ
ണ്ടാണ്‌. നിത്യ ജീവിതത്തില്‍ ആളുകള്‍ പരസ്പരം
സന്ദേശങ്ങള്‍ കൈമാറുന്നതിന്‌ സമാനമാണിത്‌.
യഥാര്‍ഥ ജീവിതത്തെ അനുകരിക്കുന്ന തരത്തി

get_teacher(}
show_teacher() J

ലുള്ള സംവിധാനം നിര്‍മിക്കുവാന്‍ ഇതു സഹാ

യിക്കുന്നു. ഒരു ഒബ്ജക്റ്റിന്റെ മെമ്പര്‍ ഫങ്ഷനെ % Student
മറ്റൊരു ഒബ്ജക്റ്റ്‌ വിളിക്കുന്നതിനെ oacque %, ഒബ്ജക്ട്‌
പഠസിംഗ്‌ എന്ന്‌ പറയുന്നു. മെസ്സേജ്‌ പാസിംഗ്‌

പ്രക്രിയയില്‍ ഒബ്ജക്ടിന്റെ പേര്‍, മെമ്പര്‍ ഫങ്ഷ

ന്റെ പേര്‍, അയയ്ക്കുവാനുള്ള വിവരം എന്നിവ ലി
സു ചി പ്പി ക്കുന്നു. update_fees() .
ഉദാഹരണത്തിന്‌ നമ്മുടെ സ്കൂള്‍ സോഫ്റ്റ്‌ ചിതം 2.8: ഒബ്ജക്റ്റുകള്‍
വെയറില്‍ Teacher ഒബ്ജക്റ്റിന്‌ ഒരു സന്ദേശം കൈമാറുന്നു

വിദ്യാര്‍ഥിയുടെ ഫീസ്‌ പരിഷ്കരിക്കണമെങ്കില്‍

Student ഒബ്ജക്ടിലേക്കു ഡാറ്റ ആവശ്യപ്പെട്ടു കൊണ്ട്‌ ഒരു സന്ദേശം അയക്കുവാന്‍
update £ടട () എന്ന മെമ്പര്‍ ഫങ്ഷനെ വിളിക്കുന്നു (ചിത്രം 2.8 കാണുക).

Sl.update_fees("Rahul", 1000);

ഇവിടെ S1 എന്നത്‌ സ്റ്റുഡന്റിന്റെ ഒബ്ജക്റ്റ്‌ ആണ്‌. സന്ദേശം ലഭിക്കുന്ന മുറയ്ക്ക്‌ Student

ഒബ്ളെക്റ്റിനു Teacher ഒബ്ജക്റ്റ്‌ നല്‍കുന്ന ഡാറ്റ ഉപയോഗിച്ച്‌ Student ന്റെ ഫീസ്‌

പരിഷ്കരിക്കുന്നു.

നിങ്ങളുടെ പുരോഗതി അറിയുക

1. OOP എന്നാല്‍ ആണ്‌.

2. OOP ല്‍ ഒരു ഒബ്ജെക്റ്റിനുള്ള ബ്ലൂ പ്രിന്റിനെ
ക്കുന്നു.

3. ക്ലാസ്സുമായി ബന്ധപ്പെട്ട ഫങ്ഷനുകളെ
ക്കുന്നു.

4. ക്ലാസ്സിന്റെ അകത്തു നിര്‍വചിക്കുന്ന വേരിയബിളുകളെ
എന്ന്‌ പറയുന്നു.

5. ക്ലാസ്സും സ്ട്രക്ചറും തമ്മിലുള്ള വൃത്യാസം എന്ത്‌?

വിളി

എന്ന്‌ വിളി

കമ്പ്യൂട്ടര്‍ സയന്‍സ്‌ - XII

താഴെ പറയുന്ന പ്രോ്രഗാം വൃത്തത്തെ ഒബ്ജക്റ്റായി ഉപയോഗിക്കുന്നു
‘Circle’ എന്ന ക്ലാസ്സ്‌ ആവശ്യമായ ഏക ഡാറ്റയായ radius പ്രസ്താവി
ക്കുകയും FAdIUS നെ സ്വീകരിക്കാനും വിസ്തീര്‍ണം പ്രദര്‍ശിപ്പിക്കാനുമുള്ള
മെമ്പര്‍ ഫംഗ്ഷനുകളെ പ്രസ്താവിക്കുകയും ചെയുന്നു.

using namespace std;
#include<ciostream>
class Circle
{
private:
float xr; } Member (മെമ്പര്‍)
public:
void get radius ()

{
Class Declaration
(ക്ലാസ്‌ നിര്‍വചനം)

cout << "Enter Radius :";

cin >> 27%
} Member
void display area() functions
{ (മെമ്പര്‍
ഫങ്ഷന്‍)
cout<< നമ: "<< 3.14*r*r;
}
he
int main()
{ Cl
Cae cp ass (ക്ലാസ്‌)
Circle Cl; ൽ
01൦0 (ഒബ്ജക്റ്റ്‌) മെയിന്‍ പ്രോഗ്രാം
Cl.get_radius(); / സന്ദേശം അയയ്ക്കുന്നു (Main program)
Cl.display_area(); //സന്ദേശം അയയ്ക്കുന്നു

}

Output :
Enter Radius : 2.0
Area: 12.56

2. ബ്ജമ്റ്റ്‌ ഓറിയന്റ്‌ ഭ്പ്രാ്രാമിങ്ങിന്റെ തത്ത്വങ്ങള്‍

2.2.3 ഡാറ്റ അബ്സ്ര്രാക്ഷന്‍ (Data Abstraction)

ആവശ്യമായ വിവരങ്ങള്‍ മാത്രം പുറം ലോകത്തിനു വെളിപ്പെടുത്തുകയും ബാക്കി
വിവരങ്ങള്‍ പിന്നണിയില്‍ മറച്ചു വെക്കുകയും ചെയ്യുന്നതിനെയാണ്‌ ഡാറ്റ അബ്സ്ട്രാ
ക്ഷന്‍ എന്നത്‌ കൊണ്ട്‌ ഉദ്ദേശിക്കുന്നത്‌.

നിത്യ ജീവിതത്തിലെ ഒരു ഉദാഹരണമായ ടിവിയുടെ പ്രവര്‍ത്തന രീതി പരിഗണിക്കുക.
സ്വിച്ച്‌ ഓണ്‍ ചെയ്യുക പവര്‍ ഓഫ്‌ ചെയ്യുക, ചാനല്‍ മാറ്റുക, ശബ്ദം നിയന്ത്രിക്കുക, VCR
പ്ലേയര്‍, 12൮ മുതലായ ഉപകരണങ്ങള്‍ കൂട്ടിച്ചേര്‍ക്കുക തുടങ്ങിയ കാര്യങ്ങള്‍ നമുക്ക്‌
ചെയ്യാവുന്നതാണ്‌. എന്നിരുന്നാലും നമുക്കതിന്റെ ആന്തരിക പ്രവര്‍ത്തനങ്ങളെക്കുറിച്ച്‌
അറിവില്ല. ടിവിയിലേക്ക്‌ എങ്ങനെ സിഗ്നലുകള്‍ ലഭിക്കുന്നു, അതെങ്ങനെ പരിവര്‍ത്തനം
ചെയ്യപ്പെടുന്നു, എങ്ങനെയത്‌ സ്‌ക്രീനില്‍ പ്രദര്‍ശിപ്പിക്കുന്നു എന്നിവയെക്കുറിച്ചു നമുക്കു
അറിയില്ല.

അപ്പോള്‍ ടെലിവിഷന്‍ അതിന്റെ ആന്തരികമായ പ്രവര്‍ത്തനതലത്തെയും ബാഹ്യമായ
സമ്പര്‍ക്കമുഖത്തെയും വേര്‍തിരിക്കുന്നതായി ഇതില്‍നിന്നും നമുക്ക്‌ മനസ്സിലാക്കാം.
ആന്തരിക പ്രവര്‍ത്തനത്തെക്കുറിച്ചുള്ള പരിജ്ഞാനം കൂടാതെതന്നെ പവര്‍ ബട്ടണ്‍,
ചാനല്‍ മാറ്റുവാനുള്ള ബട്ടണ്‍, ശബ്ദം നിയ്രന്രിക്കാനുള്ള ബട്ടണ്‍ മുതലായ നമുക്ക്‌
ഉപയോഗിക്കാവുന്നതാണ്‌.

ഇതു പോലെ C++ ക്ലാസുകളും ഡാറ്റ അബ്സ്ര്രാക്ഷന്‍ പ്രദാനം ചെയ്യുന്നു. ഒരു ഒബ്ജ
ക്റ്റിന്റെ പ്രവര്‍ത്തനത്തെ ഉപയോഗപ്പെടുത്തുവാനും അതിലെ ഡാറ്റ ലഭ്യമാക്കാനും പുറം
ലോകത്തിനു ഉപയോഗിക്കുവാനും സാധിക്കുന്ന പൊതുവായ മെത്തേഡുകള്‍ അവ
പ്രദാനം ചെയ്യുന്നു. ക്ലാസിന്റെ ആന്തരിക ഘടനയെ കുറിച്ച്‌ അറിയാതെ തന്നെ ഈ
മെത്തേഡുകള്‍ ഉപയോഗപ്പെടുത്തി ഒബ്ജക്റ്റുകളെ കൈകാര്യം ചെയ്യാവുന്നതാണ്‌.

ഉദാഹരണമായി, വിദ്യാര്‍ഥികളുടെ വിശദാംശങ്ങള്‍ പ്രദര്‍ശിപ്പിക്കുന്നതിനായി Student
ഒബ്ജക്റ്റിനോടുകൂടി show_student () എന്ന മെമ്പര്‍ ഫങ്ഷനെ വിളിക്കാവുന്നതാണ്‌.
ഏതു സമയത്തു വേണമെങ്കിലും നമുക്ക്‌ show_student () ന്റെ പ്രവര്‍ത്തന രീതി
മാറ്റാവുന്നതാണ്‌. എന്നിരുന്നാലും ഫങ്ഷന്റെ പേരിന്‌ മാറ്റം വരാത്തിടത്തോളം കാലം
ഫങ്ഷനെ വിളിക്കുന്നതിന്‌ ഒരു മാറ്റവും വരുന്നില്ല.

ഡാറ്റ അബ്സ്ട്രാക്ഷന്റെ രണ്ടു പ്രധാനപ്പെട്ട പ്രയോജനങ്ങള്‍:

© ഉപയോക്തൃ തലത്തില്‍ അപ്രതീക്ഷിതമായി വരാവുന്ന തെറ്റുകളില്‍നിന്നും
ക്ലാസിന്റെ ആന്തരിക ഘടനയെ സംരക്ഷിക്കുന്നു. ഈ തെറ്റുകള്‍ ഒബ്ജക്ടിന്റെ
അവസ്ഥയെ പ്രതികൂലമായി ബാധിക്കുന്നത്‌ ഒഴിവാക്കുവാന്‍ സാധിക്കുന്നു.

© ആവശ്യകതയനുസരിച്ചു ഉപയോക്ത തലത്തിലുള്ള കോഡിന്‌ മാറ്റം വരുത്താതെ
തന്നെ ക്ലാസിന്റെ പ്രവര്‍ത്തനത്തിനു മാറ്റം വരുത്താവുന്നതാണ്‌. കാലാന്തര
ത്തിലെ ആവശ്യകത അനുസരിച്ച്‌ ക്ലാസിന്റെ നടപ്പിലാക്കലില്‍ മാറ്റം വരുത്തുന്ന
തിന്‌, ക്ലാസിനുള്ളിലെ പ്രവര്‍ത്തന നിര്‍ദേശങ്ങള്‍ മാറ്റം വരുത്തേണ്ടതായി വരു
ന്നില്ല.

കമ്പ്യൂട്ടര്‍ സയന്‍സ്‌ - XII

2.2.4 ഡാറ്റ എന്‍ക്യാപ്സുലേഷന്‍ (Data Encapsulation)

ഫങ്ഷനുകള്‍, ഡാറ്റ എന്നീ രണ്ടു അടിസ്ഥാന ഘടകങ്ങള്‍ അടങ്ങിയതാണ്‌ C ++ -ലെ
എല്ലാ പ്രോഗ്രാമുകളും. ഡാറ്റയെയും അവയുടെ മേല്‍ പ്രവര്‍ത്തിക്കുന്ന ഫങ്ഷനുകളെയും
പരസ്പരം ബന്ധിപ്പിക്കുകയും അവയെ ബാഹൃമായ ഇടപെടലുകളില്‍നിന്നും ദുരു
പയോഗത്തില്‍നിന്നും സംരക്ഷിക്കുകയും ചെയ്യുന്ന OOP തത്വമാണ്‌ ഡാറ്റ എന്‍ക്യാപ്‌
സൂലേഷന്‍.

ക്ലാസ്‌ എന്ന്‌ പറയുന്ന ഉപയോക്തൃ നിര്‍വചിതമായ ഡാറ്റ ടൈപ്പ്‌ ഉപയോഗിച്ചാണ്‌ C++
ഡാറ്റ എന്‍ക്യാപ്സുലേഷന്‍ പ്രാവര്‍ത്തികമാക്കുന്നത്‌. private, protected, public
എന്നീ മൂന്നുതരം അംഗങ്ങള്‍ ഒരു ക്ലാസില്‍ ഉണ്ടാകാം (ചിത്രം 2.6 കാണുക). ക്ലാസില്‍
നിര്‍വചിച്ചിരിക്കുന്ന എല്ലാ അംഗങ്ങളും സ്വാഭാവികമായി private ആയിരിക്കും.
Private ആയി നിര്‍വചിക്കപ്പെട്ട അംഗങ്ങള്‍ ക്ലാസിനു പുറത്തു ദൃശ്യമാവുകയില്ല.
protected ആയി നിര്‍വചിക്കപ്പെട്ട അംഗങ്ങള്‍ അടിസ്ഥാന ക്ലാസ്സിന്‌ പുറമെ രൂപീകൃത
ക്ലാസിലും ഉപയോഗിക്കാം (ഭാഗം 2.2.6 ല്‍ വിശദീകരിച്ചിരിക്കുന്നു). പക്ഷേ അവ
ക്ലാസിനു പുറത്തു ദൃശ്യമാകുകയില്ലു.

Student ക്ലാസിലെ അംഗങ്ങളായ Regno, Name, Markl, Mark2, Mark3, Fee
എന്നിവ private ആയിട്ടാണ്‌ നിര്‍വചിച്ചിരിക്കുന്നത്‌. അതായത്‌ Student ക്ലാസിലെ
മെമ്പര്‍ ഫങ്ഷനുകള്‍ക്കു മാര്രമേ അവയെ ഉപയോഗിക്കാന്‍ സാധിക്കു, പ്രോഗ്രാമിലെ
മറ്റു ഭാഗങ്ങളില്‍ ഇവ ലഭ്യമാകുകയില്ല. ഇവിടെ ഡാറ്റ മറയ്ക്കുക വഴി എന്‍ക്യാപ്സുലേഷന്‍
സാധ്യമാക്കുകയും ചെയ്യുന്നു.

ക്ലാസിലെ അംഗങ്ങള്‍ ച്രോ്രഗാമിലെ മറ്റു ഭാഗങ്ങളിലേക്ക്‌ ലഭ്യമാകണമെങ്കില്‍ അവയെ
public എന്ന കീവേര്‍ഡ്‌ ഉപയോഗിച്ച്‌ നിര്‍വചിക്കണം. public എന്ന വാക്കിനു ശേഷം
നിര്‍വചിക്കപ്പെടുന്ന എല്ലാ ഡാറ്റയും ഫങ്ഷനുകളും പ്രോഠ്രഗാമിന്റെ മറ്റു ഭാഗങ്ങള്‍ക്കു
ലഭ്യമാകുന്നതാണ്‌. ഉദാഹരണത്തിന്‌ Student എന്ന ക്ലാസിലെ അംഗങ്ങള്‍ പ്രോഗ്രാ
മിന്റെ മറ്റു ഭാഗങ്ങള്‍ക്കു ലഭ്യമാകണമെങ്കില്‍ PUbLIc ആയിട്ട്‌ അവയെ പ്രസ്താവിക്കണം.

2.2.5 മോഡുലാരിറ്റി (Modularity)

ഒരു (്രശ്നപരിഹാരത്തിനായി കമ്പ്യൂട്ടര്‍ പ്രോഗ്രാം എഴുതുമ്പോള്‍ അതിനെ ഉപ
പ്രോഗ്രാമുകളായി വിഭജിച്ച്‌ അവ ഓരോന്നിനും പ്രതിവിധി (ഫലം) കണ്ടെത്തുന്നു.
സമ്പര്‍ക്കമുഖവും (interface), പ്രവര്‍ത്തനതലവും (implementation), വിവരണങ്ങളും
(specification) അടങ്ങിയ വ്യത്യസ്ത ഘടകങ്ങളായിരിക്കും ഓരോ ഉപപ്രോ്ഗാമുകളുടെ
യും പരിഹാരമായി ലഭിക്കുക.

മോഡ്ുലാരിറ്റി എന്ന ആശയം ഉപയോഗിച്ചാണ്‌ തന്നിരിക്കുന്ന പ്രശ്നത്തെ MIM MHA
ഘടകങ്ങളായി വിഭജിക്കുന്നത്‌. ഇത്തരത്തിലുള്ള ഓരോ മൊഡ്യൂളും മറ്റു മൊഡ്യൂളുകളില്‍
നിന്ന്‌ സ്വത്രന്രമായി എഴുതപ്പെടുന്നവയായിരിക്കും. പിന്നീട്‌ ഈ മൊഡ്യൂളുകള്‍ കോര്‍
ത്തിണക്കി പൂര്‍ണമായ ഒരു സോഫ്റ്റ്വെയര്‍ നിര്‍മിക്കുന്നു. ഇത്തരം മൊഡ്യൂളുകള്‍
ആശയവിനിമയം ചെയ്യുന്നത്‌ പരസ്പരം സന്ദേശങ്ങള്‍ അയക്കുന്നതിലൂടെ (മെസ്സേജ്‌
പാസിംഗ്‌) ആണ്‌.

2. ബ്ജമ്റ്റ്‌ ഓറിയന്റ്‌ ഭ്പ്രാ്രാമിങ്ങിന്റെ തത്ത്വങ്ങള്‍

ഫങ്ഷനുകള്‍ ഉപയോഗിച്ച്‌ മോഡുലാരിറ്റി
പ്രാവര്‍ത്തികമാക്കുന്നത്‌ എങ്ങനെയാണെന്നു
നമ്മള്‍ മുമ്പ്‌ പഠിച്ചിട്ടുണ്ട്‌ (പതിനൊന്നാം തര
ത്തിലെ പാഠപുസ്തത്തില്‍ അധ്യായം 10
ഫങ്ഷനുകള്‍ കാണുക). മോഡുലാരിറ്റി Student
പ്രവര്‍ത്തികമാക്കിയിരിക്കുന്നത്‌ ഒബ്ജക്റ്റ്‌
ഓറിയന്റഡ്‌ പ്രോ്രഗാമിങ്ങില്‍ ക്ലാസിന്റെ
സഹായത്തോടുകുടിയാണ്‌. ഉദാഹരണത്തിന്‌
നമ്മുടെ സ്കൂള്‍ സോഫ്റ്റ്വെയറില്‍ ക്ലാസ്‌ എന്ന ആശയത്തിന്റെ സഹായത്തോടെ
വിദ്യാര്‍ഥികളുമായി ബന്ധപ്പെട്ടതും അധ്യാപകരുമായി ബന്ധപ്പെട്ടതുമായ കാര്യങ്ങള്‍
പ്രത്യേകം മൊഡ്യൂളുകളായി തരം തിരിച്ചിരിക്കുന്നു (ചിത്രം 2.9 കാണുക).

Teacher

ചിതം 2.9: മോഡ്ധുലാര്റ്റ്‌

2.2.6 ഇന്‍ഹെറിറ്റന്‍സ്‌ (Inheritance)

ഒരു ക്ലാസിലെ ഒബ്ജക്റ്റുകള്‍ മറ്റൊരു ക്ലാസിലെ സവിശേഷതകളും പ്രവര്‍ത്തനങ്ങളും
ആര്‍ജിക്കുന്ന (പ്രക്രിയയാണ്‌ ഇന്‍ഹെറിറ്റന്‍സ്‌ എന്ന്‌ പറയുന്നത്‌. ക്രമ്രപകാരമുള്ള തരം
തിരിക്കല്‍ (Hierarchial Classification), പുനരുപയോഗം (Reusabiltiy) എന്നീ തത്വങ്ങളെ
ഇന്‍ഹെറിറ്റന്‍സ്‌ പിന്തുടരുന്നു.

നിത്യജീവിതത്തിലെ ഒരു ഉദാ
ഹരണത്തിലൂടെ നമുക്കീ സാഹ
ചര്യം വിവരിക്കാം. ചിത്രം 2.10
ല്‍ ഭൂതല വാഹനത്തിനും (Land നി്‌
vehicle) ജലവാഹനത്തിനും
(water vehicle) വാഹന

ത്തിന്റെ (Vehicle) സവിശേഷത [പട

Vehicle

Land Vehicle Water Vehicle

കള്‍ (അതായത്‌ ഡാറ്റ അംഗ Car Truck Hovercraft Boat

ങ്ങളും അംഗങ്ങളായ ഫങ്ഷ

നുകളും) കൈവരുന്നു. കാറിനും aih@o 2.10: യഥാരീത്ഥ ജിവിതത്മിലെ
ഇരീഹെവ്റ്റന്‍സ്‌

ട്രക്കിനും ഭൂതല വാഹനത്തിന്റെ
സവിശേഷതകള്‍ ലഭ്യമാകുന്നു (അതായത്‌ കാര്‍ /ദ്രക്ക്‌ = വാഹനം + ഭൂതല വാഹനം).
അത്‌ പോലെ ബോട്ടിന്‌ ജല വാഹനത്തിന്റെ സവിഷേതകള്‍ (അതായത്‌ ബോട്ട്‌
വാഹനം-ജല വാഹനം) ലഭിക്കുന്നു. ജലത്തിലും ഭൂതലത്തിലും സഞ്ചരിക്കുന്ന ഒരു
ഹോവര്‍ ക്രാഫ്റ്റിനു (hovercraft) ഭൂതല വാഹനത്തിന്റെയും ജല വാഹനത്തിന്റെയും
സവിശേഷതകള്‍ (അതായത്‌ ഹോവര്‍ (HIaHG= വാഹനം-ഭൂതല വാഹനം:ജല വാഹനം)
ലഭിക്കുന്നു. അതുപോലെ കാര്‍ ഹാച്ച്ബാക്ക്‌ (Hatchback), സെഡാന്‍ (Sedan), എസ്‌ യു
വി (SUV) മുതലായവയായി വീണ്ടും തരം തിരിക്കാവുന്നതാണ്‌. അവ ഓരോന്നും
വാഹനം, ഭൂതല വാഹനം, കാര്‍ എന്നിവയുടെ സവിശേഷതകള്‍ ആര്‍ജിക്കുന്നു, അതേ
സമയം തന്നെ അവയുടേതായിട്ടുള്ള സവിശേഷതകള്‍ നിലനിര്‍ത്തപ്പെടുകയും
ചെയ്യുന്നു. ഇത്തരത്തിലുള്ള ക്രമീകരണം ഏതു തലത്തിലേക്കും വ്യാപിപ്പിക്കാവുന്നതാണ്‌.

കമ്പ്യൂട്ടര്‍ സയന്‍സ്‌ - XII

ഈ ഉദാഹരണത്തില്‍ അഥവാ ഭൂതല വാഹനത്തിന്റെയും ജല വാഹനത്തിന്റെയും പൊതു
വായ സവിശേഷതകളും പ്രവര്‍ത്തനങ്ങളും വേര്‍പിരിച്ച്‌ വാഹനം എന്ന ക്ലാസ്സില്‍ തന്നെ
വച്ചിരുന്നില്ലെങ്കില്‍ ആ രണ്ടു ക്ലാസ്സുകളിലും അവ ആവര്‍ത്തിക്കേണ്ടി വന്നേനെ. ഇത്‌
പ്രോഗ്രാമിങ്ങിന്റെ വലിപ്പവും കോഡ്‌ ചെയ്യാനും തെറ്റ്‌ കണ്ടെത്തി തിരുത്താനുമുള്ള
സമയവും വര്‍ധിപ്പിക്കുന്നു. തന്നിരിക്കുന്ന ചാര്‍ട്ടിന്റെ തുടക്കം മുതല്‍ അവസാനം വരെ
നോക്കിയാല്‍ പ്രോഗ്രാമിന്റെ സങ്കീര്‍ണത എത്രത്തോളം കുറയ്ക്കുവാന്‍ ഇന്‍ഹെറിറ്റന്‍സ്‌
കൊണ്ട്‌ സാധിക്കുന്നു എന്ന്‌ നമുക്ക്‌ കാണാം.

ക്ലാസ്‌ നിര്‍മിക്കപ്പെടുകയും തെറ്റ്‌ തിരുത്ത
പ്പെടുകയും ചെയ്തു കഴിഞ്ഞാല്‍ ആവശ്യ
മെങ്കില്‍ മറ്റു പ്രോ്ഗാമുകള്‍ക്ക്‌ അതിനെ
വിതരണം ചെയ്യാവുന്നതാണ്‌. ഇതിനെ അ
പുനമുപയോഗം (നീയൂസബിലിറ്റി) എന്ന്‌ അ
ളിക്കുന്നു. OOP ല്‍ ഇന്‍ഹെറിറ്റന്‍സ്‌ തത്വം
പുനരുപയോഗം എന്ന ആശയത്തെ ഒന്നു
കൂടി വിപുലീകരിക്കുന്നു. പുനരുപയോഗ \
ത്തിലൂടെ നിലവിലുള്ള ക്ലാസില്‍ മാറ്റം വരു
ത്താതെ തന്നെ കൂടുതല്‍ വിശേഷഗുണ @
ങ്ങള്‍ നമുക്ക്‌ കൂട്ടി ചേര്‍ക്കാവുന്നതാണ്‌. ന @&>
നിലവിലുള്ള ക്ലാസില്‍നിന്നും പുതിയ ഒരു =D
ക്ലാസിനെ ഉത്പാദിപ്പിച്ചിട്ടാണ്‌ ഇത്‌ സാധ്യമാ ൽ
കുന്നത്‌. പുതിയ ക്ലാസിന്‌ അതിന്റേതായ
സവിശേഷതകള്‍ കൈവരുന്നതിനോടൊപ്പം രൂപീകൃത ളാസ്‌

അടിസ്ഥാന ക്ലാസ്‌

00
US

നിലവിലുള്ള ക്ലാസിന്റെ സവിശേഷതകള്‍ ചിത്രം 2.11: OOP ചെ ഇനിഹെറ്റ്റനസ്‌
പൈതൃകമായി ആര്‍ജിക്കുകയും ചെയ്യുന്നു.

നിലവിലുള്ള ക്ലാസിനെ അടിസ്ഥാന ക്ലാസ്‌ എന്നും പുതിയ ക്ലാസിനെ രൂപീകൃത ക്ലാസ്‌
എന്നും വിളിക്കുന്നു. രൂപീകൃത ക്ലാസിനു രണ്ടിന്റെയും സംയുക്തമായ സവിശേഷതകള്‍
ഉണ്ടായിരിക്കും. നിലവിലുള്ള ക്ലാസില്‍നിന്നും എത്ര രൂപീകൃത ക്ലാസ്‌ വേണമെങ്കിലും
ഉല്‍പാദിപ്പിക്കാം. ചിത്രം 2.11 -ല്‍ പുതിയ ക്ലാസിന്റെ ഉല്‍പത്തി കാണിച്ചിരിക്കുന്നു.

2. ബ്ജമ്റ്റ്‌ ഓറിയന്റഡ്‌ ഭ്പ്രാ്രാമിങ്ങിന്റെ തത്ത്വങ്ങള്‍

താഴെ പറയുന്ന പ്രോഗ്രാം ഇന്‍ഹഫെറിറ്റന്‍സ്‌ വഴി ‘Cone’ ക്ലാസ്സിലെ ഒബ്ജ
ക്ടില്‍ നിന്നും "൨12൦1൭ ക്ലാസിലെ ഒരു ഒബ്ജക്ടിനെ ഉല്‍പ്പാദിപ്പിക്കുന്നു. ആരം
(x) നേരത്തെ തന്നെ ‘Circle’, ക്ലാസില്‍ ഡിക്നയര്‍ ചെയ്തിരിക്കുന്നതിനാല്‍
രൂപീകൃത ക്ലാസായ ‘Cone’ ല്‍ aod ഹൈറ്റ്‌ (ട). മാര്രം ഡിക്ലയര്‍ ചെയ്‌
താല്‍ മതിയാകും. ഡാറ്റ സ്വീകരിക്കാനും വിസ്തീര്‍ണം പ്രദര്‍ശിപ്പിക്കാനും രണ്ടു മെമ്പര്‍
ഫങ്ഷനുകള്‍ ഉപയോഗിച്ചിരിക്കുന്നു. ‘Circle’ ലെ ഡാറ്റ അംഗങ്ങള്‍ ‘protected’ ആയി
ഡിക്ലയര്‍ ചെയ്തിരിക്കുന്നതിനാല്‍, ‘Cone’ ക്ലാസിനു അവ ലഭ്ൃമാകു
#include <iostream>

YT,

Te

using namespace std;
class Circle

{ protected:
float xr;
public:
void get _radius() {
cout << "Enter Radius :"; അഠിസ്ഥാനക്ടാ൯ (Base Class)

cin >> ൧9

}
void display area() {
cout<< "Area: "<< 3.14*r*r;

he

class Cone : public Circle
( pEavaieee } പുതിയ മെമ്പര്‍ (New member)
float s;7
public:
void get_cone data() { പുതിയ രുപീകൃത
get_radius(); മെമ്പര്‍ ക്ലാസ്‌
cout << "Enter slant height:"; (|, ഫങ്ഷനുകര്‍ / (Derived
cin >> s; (New class)
} member
void display cone area() { functions)
cout << "Area :" << 3.14*r* (str);
}
he
int main() {
Cone Cl; മെയിന്‍ ഫങ്ഷന്‍
Cl.get_cone_data(); //Sending message (Main
Cl.display cone area(); //Sending message

function)

}

Output: Enter Radius : 2.0
Enter slant height: 5.0
Area :43.96

കമ്പ്യൂട്ടര്‍ സയന്‍സ്‌ - XII

സിംഗിള്‍ ഇന്‍ഹെറിറ്റന്‍സ്‌,

aviv ഇന്‍ഹെറിറ്റന്‍സ്‌, A A A) B) A A
0200066910) 08 ഇന്‍ T AN \_/7 T

ഹെറിറ്റന്‍സ്‌, മള്‍ട്ടി ലെവല്‍ 48 8 Cc c B B Cc
ഇന്‍റഹെറിറ്റന്‍സ്‌, ഹൈ  mjsicd ഫൈര്‍ക്കിയല്‍ ഒര്‍ട്ടിഷിര്‍ T T ഫ്രൈബിട്‌
(ബിഡ്‌ ഇന്‍ഹെറിറ്റന്‍സ്‌ C D

എന്നിവയാണ്‌ വിവിധ തര കള്‍ട്ടിലെവല്‍
ത്തിലുള്ള ഇന്‍ഹെറിറ്റന്‍സു

ചിത്രം 2.12: വിവിധ meanler, നിഹെറിറരീസ്‌
കള്‍ (ചിത്രം 2.12 കാണുക). രം ള്ള ഇ റ

സ്കൂള്‍ സോഫ്റ്റ്വെയറില്‍ ഇന്‍ഹെറിറ്റന്‍സ്‌ നടപ്പിലാക്കുന്നത്‌ എങ്ങനെയാണെന്ന്‌
നോക്കാം. നിലവിലുള്ള ഡാറ്റയും ഫങ്ഷനും കൂടാതെ Student ക്ലാസിലേക്ക്‌ വയസ്സ്‌,

Student (Base Class) പഠിക്കുന്ന ക്ലാസ്‌ എന്നീ ഡാറ്റയും പരീക്ഷാഫലം കണ്ടു പിടിക്കാ

നുള്ള ഫങ്ഷനും കൂട്ടിച്ചേര്‍ക്കണം എന്ന്‌ കരുതുക. Student
SE QOMMM} മാറ്റം വരുത്താതെ NewStudent എന്ന ഒരു പുതിയ
പി ക്ലാസിനെ നമ്മള്‍ Student ക്ലാസില്‍ നിന്നും ഉല്‍പ്പാദിപ്പിക്കുന്നു.

Student ക്ലാസ്‌ അതേപടി തുടരുന്നു. ഇവിടെ Student ക്ലാസ്‌
അടിസ്ഥാന ക്ലാസും, NewStudent ക്ലാസ്‌ രൂപീകൃത ക്ലാസും

> ആണ്‌ (aio 2.13 കാണുക).

രൂപീകൃത ക്ലാസിനെ പ്രഖ്യാപിക്കാനുള്ള ഘടന താഴെ പറയുന്നത്‌

iget_student()

മ പോലെയാണ്‌.
NewStudent (Derived Ciass) class derived_class: AccessSpecifier
base_class
ഛിതം 2.13: {
QBIMONQBMIBG / /മെമ്പറുകളുടെയും മെമ്പര്‍ ഫങ്ഷനുകളുടെയും പ്രഖ്യാപനം

ദാഹരണം . .
(declaration of members and memberfunctions)

]7
ഇവിടെ derived_class എന്നത്‌ രൂപീകൃത ക്ലാസിനെയും base_class എന്നത്‌
ഏതു ക്ലാസില്‍ നിന്നാണോ രൂപീകൃത ക്ലാസിനെ ഉല്‍പാദിപ്പിക്കുന്നത്‌ ആ ക്ലാസിനെയു
മാണ്‌ സൂചിപ്പിക്കുന്നത്‌. AccessSpecifier എന്നത്‌ public, protected,
private ഇവയില്‍ ഏതെങ്കിലും ആവാം. ഇത്‌ അടിസ്ഥാന ക്ലാസില്‍ നിന്നും പൈതൃ
കമായി ലഭിച്ച അംഗങ്ങളുടെ ലഭ്യതയെ സൂചിപ്പിക്കുന്നു.

2.2.7 പോളിമോര്‍ഫിസം (Polymorphism)

“പോളി” എന്നാല്‍ ഒന്നിലധികം എന്നും “മോര്‍ഫ്‌” എന്നാല്‍ ആകൃതികള്‍ എന്നുമാണ്‌
അര്‍ഥം. വിവിധ രൂപത്തില്‍ പ്രകടിപ്പിക്കാനുള്ള കഴിവിനെ പോളിമോര്‍ഫിസം എന്ന്‌
നിര്‍വചിക്കാം. ചിത്രം 2.14 -ല്‍ ഇത്‌ വിശദീകരിച്ചിരിക്കുന്നു. ഇവിടെ ‘Now Speak’
എന്ന ഒരേ നിര്‍ദേശമാണ്‌ വിവിധ ജീവികള്‍ക്ക്‌ നല്‍കുന്നത്‌, പക്ഷെ അവ ഓരോന്നും
വൃത്യസ്ത രീതികളിലാണ്‌ ഈ നിര്‍ദേശത്തോട്‌ പ്രതികരിക്കുന്നത്‌.

2. ബ്ജമ്റ്റ്‌ ഓറിയന്റ്‌ ഭ്പ്രാ്രാമിങ്ങിന്റെ തത്ത്വങ്ങള്‍

ഒബ്ജക്റ്റുകളുടെ ഡാറ്റ ഇനം അല്ലെങ്കില്‍
ക്ലാസ്‌ അനുസരിച്ച്‌ അവയെ വ്യത്യസ്തമായി ക
പ്രോസസ്സ്‌ ചെയ്യാനുള്ള പ്രോഠ്രഗാമിങ്‌ ഭാഷ 7

യുടെ കഴിവിനെയാണ്‌ ഒബ്ജക്റ്റ്‌ ഓറിയന്റഡ്‌

പ്രോഗ്ഗാമിങ്ങില്‍ പോളിമോര്‍ഫിസം എന്ന്‌ പറ

യുന്നത്‌. ഒന്നുകൂടി വ്യക്തമായി പറഞ്ഞാല്‍ =

രൂപികൃത ക്ലാസിന്റെ രീതികളെ പുനര്‍ നിര്‍വ ¥ cr
ചിക്കാനുള്ള കഴിവാണ്‌ പോളിമോര്‍ഫിസം.

ഉദാഹരണത്തിന്‌ Shape എന്ന ബേസ്‌ ക്ലാ

സില്‍ നിന്നും ഉല്പാദിപ്പിച്ചിരിക്കുന്ന circle,

rectangle, triangle മുതലായ രൂപീ

കൃത ക്ലാസുകള്‍ക്ക്‌ area എന്ന പേരില്‍

വിവിധ മെത്തേഡുകള്‍ നിര്‍വചിക്കുവാനുള്ള

സൌകര്യം പോളിമോര്‍ഫിസം പ്രോഗ്ഗാമര്‍ക്കു ചിതം 2.14: പോളിത്മാര്‍ഫിസ്ത്തിന്റെ
നല്‍കുന്നു (ചിത്രം 2.15 കാണുക). ഒബ്ജക്റ്റ്‌ ലിശ്്ക്ോം
ഏതായാലും area എന്ന മെത്തേഡ്‌ പ്രയോഗിക്കുമ്പോള്‍ കൃത്യമായ ഫലം ലഭിക്കുന്നു.

പോളി മോര്‍ഫിസം

0ണ്‍ടൈം
(ധൈനമിക്‌)

B0OAa1G3 H6S0
(gga)

ഫങ്ഷന്‍

erciennd
ഓവര്‍ലോധ്ധിങ്‌

ഓവര്‍ലോധിങ്‌

ചിതം 2.16: പോളിമ്മോര്‍ഫിസത്തിന്റെ്‌

ദുരം 2.15: ുദ്മാരീഫി; Y
ao പോളിമോര്‍ഫിസ്സത്മിന്റെ ഉദാഹരണം വര്‍ഗീകരണം

പോളിമോര്‍ഫിസം രണ്ടു തരത്തിലുണ്ട്‌ (ചിത്രം 2.16 കാണുക)

ഒ. കംപൈയില്‍ ടൈം പോളിമോര്‍ഫിസം (ഏര്‍ലി ബൈന്‍ഡിങ്ങ്‌ സ്റ്റാറ്റിക്‌) (carly
binding/ static)

2. റണ്‍ ടൈം പോളിമോര്‍ഫിസം (ലേറ്റ്‌ ബൈന്‍ഡിങ്ങ്‌/ഡൈനാമിക്‌) (late binding/
dynamic)

ഒ. കംപൈയില്‍ ടൈം പോളിമോര്‍ഫിസം//ഏര്‍ലി ബൈന്‍ഡിങ്‌
(Compile time polymorphism)

കംപൈല്‍ സമയത്തു OOM ഫങ്ഷന്‍ വിളിക്കുന്നതിനെ ഫങ്ഷന്‍ നിര്‍വചനവുമായി
ബന്ധിപ്പിക്കാനുള്ള കംപൈലറിന്റെ കഴിവിനെയാണ്‌ കംപൈയില്‍ ടൈം പോളി
മോര്‍ഫിസം സൂചിപ്പിക്കുന്നത്‌. ഇതിന്റെ കീഴില്‍ വരുന്നതാണ്‌ ഫങ്ഷന്‍ ഓവര്‍ലോഡിങ്‌,
ഓപ്പറേറ്റര്‍ ഓവര്‍ലോഡിങ്‌ എന്നിവ.

കമ്പ്യൂട്ടര്‍ സയന്‍സ്‌ - XII

ഫങ്ഷന്‍ ഓവര്‍ലോഡിങ്‌ (Function Overloading): ഒരേ പേരും വൃത്യസ്തങ്ങളായ
സിഗ്നേച്ചറുകളും (ഫങ്ഷന്‍ ആര്‍ധഗ്യുമെന്റുകളുടെ എണ്ണവും തരവും) ഉള്ള ഫങ്ഷനുകള്‍
വ്ൃത്യസ്തങ്ങളായി പ്രവര്‍ത്തിക്കുന്ന. ഉദാഹരണത്തിന്‌ area (int) എന്നത്‌ ഒരു സമച
തുരത്തിന്റെ വിസ്തീര്‍ണം കണ്ടു പിടിക്കാന്‍ ഉപയോഗിക്കുന്നു. അതേസമയം
area(int, int) എന്നത്‌ ഒരു ചതുരത്തിന്റെ വിസ്തീര്‍ണം കണ്ടുപിടിക്കാന്‍ ഉപയോഗി
ക്കുന്നു. ഇപ്രകാരം ALEA () എന്ന ഒരേ ഫങ്ഷന്‍ വൃത്യസ്ത സിഗ്നേച്ചറുകള്‍ക്കനുസരിച്ച്‌
രണ്ടു രീതിയില്‍ പ്രവര്‍ത്തിക്കുന്നു. ഒന്നില്‍ കൂടുതല്‍ ഫങ്ഷനുകള്‍ ഒരേ പേരും
വ്ൃത്യസ്ത സിഗ്നേച്ചറുകളോടും കൂടി നിര്‍വചിക്കുന്നതിനെ ഫങ്ഷന്‍ ഓവര്‍ലോഡിങ്‌
എന്ന്‌ പറയുന്നു.

ഓപ്പറേറ്റര്‍ ഓവര്‍ലോഡിങ്‌ (Operator overloading): നിലവിലുള്ള C++ ഓപ്പറേ
റ്ററുകള്‍ക്ക്‌ (+, -, =, * മുതലായവ) പുതിയ നിര്‍വചനം നല്‍കുന്ന ആശയമാണ്‌ ഓപ്പറേറ്റര്‍
ഓവര്‍ലോഡിങ്‌. ലഭ്യമാകുന്ന ഓപെറന്റുകള്‍ക്ക്‌ അനുസരിച്ച്‌ ഒരു ക്ലാസിലെ വൃത്യസ്ത
ഒബ്ജക്റ്റുകളുടെ മേല്‍ വൃത്യസ്തമായി പ്രവര്‍ത്തിക്കാന്‍ സാധാരണ ഓപ്പറേറ്ററുകളെ
പ്രാപ്തരാക്കുന്ന പ്രക്രിയയാണിത്‌. ഒരു ഓപ്പറേറ്ററിനെ ഓവർലോഡ്‌ ചെയ്യണമെങ്കില്‍
ഓവർലോഡ്‌ ചെയ്യുന്ന ഓപ്പറേറ്ററിനായി ഒരു മെമ്പര്‍ ഫങ്ഷന്‍ നിര്‍വചിക്കേണ്ടതാണ്‌.

ഉദാഹരണത്തിന്‌ C++ ലെ + (glad) എന്ന ഓപ്പറേറ്റര്‍ നിലവില്‍ തന്നെ ഓവർലോഡ്‌
ചെയ്യപ്പെട്ടതാണ്‌. ഇതിന്‌ പൂര്‍ണ സംഖ്യകളെയും (4 + 5) അസ്ഥിര ദശാംശ സംഖ്യക
ളെയും കൂട്ടുവാന്‍ (3. 14 + 2. 6) സാധിക്കുന്നു. ആവശ്യമെങ്കില്‍ രണ്ടു ഒബ്ജക്റ്റുകള്‍
തമ്മിലുള്ള സങ്കലനത്തിനും ഇതേ ഓപ്പറേറ്റര്‍ ഉപയോഗിക്കാം (അതിനുള്ള കോഡ്‌
ക്ലാസില്‍ ചേര്‍ക്കണം). ഉദാഹരണത്തിന്‌, TL = 12 + 13. ഇവിടെ 11, 12, 13
എന്നത്‌ ‘time’ എന്ന ക്ലാസ്സിന്റെ ഒബ്ജക്റ്റുകളാണ്‌ .'+' എന്ന ഓപ്പറേറ്റര്‍ ഉപയോഗിച്ച്‌
1111:ഗി4:ടട മാതൃകയിലുള്ള രണ്ടു സമയങ്ങളുടെ തുക കണ്ടുപിടിക്കാവുന്നതാണ്‌.

b. റണ്‍ ടൈം പഫോളിമോര്‍ഫിസം/ലേറ്റ്‌ ബെന്‍ഡിങ്‌ (Run time polymorphism)

റണ്‍ ടൈമില്‍ ഫങ്ഷന്‍ ഉപയോഗിക്കുമ്പോള്‍ ഫങ്ഷന്‍ നിര്‍വചനവുമായി ബന്ധിപ്പിക്കു
ന്നതിനെ റണ്‍ ടൈം പോളിമോര്‍ഫിസം എന്ന്‌ പറയുന്നു. ഇന്‍ഹെറിറ്റന്‍സ്‌, പോയിന്ററുകള്‍
എന്നീ ആശയങ്ങളാണ്‌ ഇതിനായി ഉപയോഗിക്കുന്നത്‌.

2. ബ്ജമ്റ്റ്‌ ഓറിയന്റ്‌ ഭ്പ്രാ്രാമിങ്ങിന്റെ തത്ത്വങ്ങള്‍

താഴെ പറയുന്ന പ്രോ്രഗാം ഫംഗ്ഷന്‍ ഓവര്‍ലോഡിങ്‌ ഉപയോഗിച്ച്‌ സമചതുരത്തിന്റെയും
ദീര്‍ഘചതുരത്തിന്റെയും വിസ്തീര്‍ണം കണ്ടുപിടിക്കുന്നു. സമചതുരത്തിന്റെ വിസ്തീര്‍ണം
കണ്ടെത്താന്‍ വേണ്ടിയും ദീര്‍ഘചതുരത്തിന്റെ വിസ്തീര്‍ണം കണ്ടെത്താന്‍ വേണ്ടിയും
രണ്ടു ഫംഗ്ഷനുകള്‍ ഇത്‌ നിര്‍വചിക്കുന്നു.അവ രണ്ടിനും ‘area’ എന്ന പൊതുവായ പേര്‌
നല്‍കിയിട്ടുണ്ടെങ്കിലും അവ രണ്ടിലേക്കും നല്‍കുന്ന വിലകള്‍ വൃത്ൃയസ്തമാണ്‌.
ഫങ്ഷന്‍ പേരുകള്‍ #include<ciostream>
ഒരുപോലെയാണ്‌ using namespace std;
(Function names, int area (int s) { //maaimoomload വിസ്തീര്‍ണം കണ്ടുപിടിക്കാന്‍
are same) return s * s; സിഗ്നേച്ചറുകള്‍ വ്ൃതൃസ്തമാണ്‌ (Signatures
are different)
int area(int sl, int s2){ ///ചതുരത്തിന്റെ വിസ്തീര്‍ണം
return (sl * s2); / / കണ്ടുപിടിക്കാന്‍

int main()

cout << "Area of Square:" << area(5); << endl;
cout << "Area of Rectangle:"<< area (7,2);

Output:
Area of Square: 25
Area of Rectangle: 14

നിങ്ങളുടെ പുരോഗതി അറിയുക

1. ഡാറ്റയെയും ഫങ്ഷനുകളെയും ഒറ്റ ഘടകമാക്കി മാറ്റുന്നതിനെ
എന്ന്‌ വിളിക്കുന്നു.

2. ഡാറ്റയിലേക്കുള്ള അനുമതി നിയന്ത്രിക്കുന്ന സവിശേഷത

___ എന്നറിയപ്പെടുന്നു.
3. ഒബ്ജക്റ്റുകള്‍ സാധാരണയായി ബൈന്‍ഡിങ്‌ ഉപയോ
ഗിക്കുന്നു.
4. C++ > ബൈന്‍ഡിങ്‌ ഉപയോഗിക്കുന്നു
5. ഏര്‍ലി ബൈന്‍ഡിങ്ങിനെ എന്ന്‌ വിളിക്കുന്നു.
6. ലേറ്റ്‌ ബൈന്‍ഡിങ്ങിനെ എന്ന്‌ വിളിക്കുന്നു.
7. വിവിധ തരത്തിലുള്ള ഇന്‍ഹെറിറ്റന്‍സ്‌ ഏതൊക്കെയാണ്‌?

കമ്പ്യൂട്ടര്‍ സയന്‍സ്‌ - XII

¢ നമുക്കു സംഗ്രഹിക്കാം

സോഫ്‌റ്റ്വെയര്‍ കമ്പ്യൂട്ടറിനെ ഉപയോഗപ്രദമായ ഒരു ഉപകരണമാക്കി മാറ്റുന്നതിനാല്‍,
അതിന്റെ നിര്‍മ്മാണത്തിനും പരിപാലനത്തിലും പ്രത്യേക പരിഗണന ആവശ്യമാണ്‌.
മറ്റൊരു തരത്തില്‍ പറഞ്ഞാല്‍ സോഫ്‌റ്റ്വെയര്‍ വികസനം ഫല്പ്രദമാക്കാനും പരിപാ
ലനത്തിനുള്ള ചെലവ്‌ കുറക്കാനും പല തരത്തിലുള്ള മാതൃകകള്‍ പരീക്ഷിക്കപ്പെട്ടിട്ടുണ്ട്‌.
സ്ട്രക്ചര്‍ഡ്‌ മാതൃക, പ്രോസിജറല്‍ ഓറിയന്റഡ്‌ മാതൃക, ഒബ്ജക്റ്റ്‌ ഓറിയന്റഡ്‌ മാതൃക
(COOP) മുതലായവ അവയ്ക്ക്‌ ഉദാഹരണമാണ്‌. നൂതനവും പ്രചാരത്തിലുള്ളതുമായ
പ്രോഗ്രാമിങ്‌ ഭാഷകള്‍ OOP മാതൃക പിന്തുടരുന്നു. പരസ്പരം ആശയവിനിമയം നട
ത്തുന്ന വസ്തുക്കളുടെ (ഒബ്ജക്റ്റുകളുടെ) സഹായത്തോടെയാണ്‌ OOP പ്രാവര്‍ത്തികമാ
ക്കിയിരിക്കുന്നത്‌. ഇവിടെ ഡാറ്റക്ക്‌ കൂടുതല്‍ പ്രാധാന്യം നല്‍കിയിരിക്കുന്നു. ആധികാരിക
മല്ലാത്ത ഡാറ്റയുടെ ഉപയോഗത്തില്‍നിന്നും സംരക്ഷണം ലഭിക്കാന്‍ വിവിധ ആക്സസ്‌
സ്പെസിഫയറുകള്‍ ഫങ്ഷനുകളുടെ കൂടെ ഉള്‍പ്പെടുത്തുകയും ചെയ്യുന്നു. പുനരുപ
യോഗം മെച്ചപ്പെടുത്തുന്നതിനോടൊപ്പം കോഡ്‌ വിപുലീകരണത്തിനും ഫലപ്രദമായ
ഘടനാ ക്രമീകരണത്തിനും സ്റ്റാറ്റിക്‌, ഡൈനാമിക്‌ എന്നീ പോളിമോര്‍ഫിസം പ്രാവര്‍
ത്തികമാക്കാനും OOP സഹായിക്കുന്നു.

നാജി!

അധികാരികത ഇല്ലാത്ത ഫങ്ഷനുകളില്‍നിന്നും ഡാറ്റയെ സംരക്ഷിക്കുന്നതാണ്‌

A. പോളിമോര്‍ഫിസം 1. എന്‍ക്യാപ്സുലേഷന്‍
൦. ഡാറ്റ അബ്സ്ട്രാക്ഷന്‍ ഠി. ഇന്‍ഹെറിറ്റന്‍സ്‌
2. അടിസ്ഥാന ക്ലാസിനെ എന്നും വിളിക്കുന്നു.
a. ചൈല്‍ഡ്‌ ക്ലാസ്സ്‌ b. സബ്‌ ക്ലാസ്സ്‌ ൦. ഡിറൈവ്ഡ്‌ ക്ലാസ്‌ റി.പേരന്റ്‌ ക്ലാസ്‌

3. താഴെ പറയുന്നവയില്‍ ഇന്‍ഹെറിറ്റന്‍സ്‌ അല്ലാത്തത്‌ ഏത്‌?

a. ഹ്രൈബിഡ്‌ 1. മള്‍ട്ടിപ്പിള്‍ ൦. മള്‍ട്ടിലെവല്‍ 0. മള്‍ട്ടിക്ലാസ്റ്‌
4. സബ്‌ ക്ലാസിനു തുല്യമാണ്‌

A. രൂപീകൃത ക്ലാസ്‌ 0. സൂപ്പര്‍ ക്ലാസ്‌

൦. അടിസ്ഥാന ക്ലാസ്‌ 0. ഇതൊന്നും അല്ല

5. തനതായുള്ള ആക്സസ്‌ സ്പെസിഫയര്‍ ആണ്‌
a. പബ്ലിക്‌ 1. പ്പൈവറ്റ്‌ ൦. പ്രൊട്ടക്റ്റഡ്‌ d. ഇവ ഒന്നുമല്ല
6. താഴെ പറയുന്നവയില്‍ OOP ആശയം അല്ലാത്തതേത്‌.

a. ഓവര്‍ലോഡിങ്‌ 1. പ്രോസിജറല്‍ ഓറിയന്റഡ്‌ പ്രോഗ്രാമിങ്‌

൦. ഡാറ്റ അബ്സ്ര്രാക്ഷന്‍ d. ഇന്‍ഹെറിറ്റന്‍സ്‌

2. ബ്ജമ്റ്റ്‌ ഓറിയന്റ്‌ ഭ്പ്രാ്രാമിങ്ങിന്റെ തത്ത്വങ്ങള്‍

7.

10.

11.
12.
13.

14.
15.
16.
17.

18.
19.
20.

ഒരു ഡാറ്റക്ക്‌ അല്ലെങ്കില്‍ മെസ്സേജിന്‌ ഒന്നിലധികം രൂപത്തില്‍ പ്രോസസ്സ്‌ ചെയ്യപ്പെ
ടാനുള്ള കഴിവാണ്‌.

a. പോളിമോര്‍ഫിസം b. എന്‍ക്യാപ്സുലേഷന്‍
൦. ഡാറ്റ ഹൈഡിങ്‌ 0. ഇന്‍ഹെറിറ്റന്‍സ്‌
C++ ഒരു ഭാഷയാണ്‌.

a. ഒബ്ജക്ട്‌ 12. നോണ്‍ പ്രൊസിജറല്‍

൦. ഒബ്ജക്റ്റ്‌ ഓറിയന്റെഡ്‌ 6. പ്രൊസിജറല്‍

താഴെ പറയുന്നവയില്‍ OOP -ന്റെ പ്രത്യേകത അല്ലാത്തതേത്‌?

a. ഡാറ്റയെക്കാള്‍ നടപടികള്‍ക്ക്‌ പ്രാധാന്യം നല്‍കുന്നു

2. യഥാര്‍ഥ ലോകത്തിന്റെ മാതൃകയിലുള്ളത്‌

൦. ഡാറ്റയെയും ബന്ധപ്പെട്ട ഫങ്കഷനുകളെയും ഒറ്റ ഘടകമായി കൂട്ടിയിണക്കുന്ന.
d. ഇവ ഒന്നുമല്ല

താഴെ പറയുന്നവയില്‍ 001 -നെ കുറിച്ച്‌ ശരിയായതേത്‌?

a. ഡാറ്റ അബ്സ്ര്രാക്ഷനെ പിന്തുണക്കുന്നു

1. പോളിമോര്‍ഫിസത്തെ പിന്തുണക്കുന്നു

൦. ഘടനാപരമായ പ്രോഠ്രഗാമിങ്ങിനെ പിന്തുണക്കുന്നു

ഠി. ഇവയെയെല്ലാം പിന്തുണക്കുന്നു

പ്രോഗ്രാമിങ്‌ മാതൃക എന്നാലെന്ത്‌? പ്രോ്ഗാമിങ്‌ മാതൃകകളുടെ പേരെഴുതുക.
പ്രോസിജറല്‍ പ്രോഗ്രാമിങ്‌ സമീപനത്തിന്റെ പരിമിതികള്‍ എന്തെല്ലാം?

ഒബ്ജക്റ്റ്‌ ഓറിയന്റഡ്‌ പ്രോഗ്രാമിങ്‌ മാതൃക എന്നാലെന്ത്‌? OOP ന്റെ അടിസ്ഥാന
തത്വങ്ങള്‍ പട്ടികപ്പെടുത്തുക.

C++ ല്‍ എങ്ങനെയാണു OOP പ്രയോഗിച്ചിരിക്കുന്നത്‌?
എന്‍ക്യാപ്സുലേഷന്‍ എന്നാലെന്ത്‌?
ക്ലാസും ഒബ്ജക്റ്റും തമ്മിലുള്ള വൃത്യാസം കണ്ടെത്തുക.

ബേസ്‌ ക്ലാസ്‌, സബ്‌ ക്ലാസ്‌ എന്നാലെന്ത്‌? ബേസ്‌ ക്ലാസും സബ്‌ ക്ലാസും തമ്മിലുള്ള
ബന്ധം എന്താണ്‌?

ഡാറ്റ അബ്സ്ര്രാക്ഷന്‍ എന്ന ആശയം വിവരിക്കുക. ഒരു ഉദാഹരണം നല്‍കുക.

ഇന്‍ഹെറിറ്റന്‍സിനെ പറ്റി ഒരു ലഘു വിവരണം എഴുതുക.

ഒരു കാര്‍ പ്രവര്‍ത്തിപ്പിക്കുന്നതിനായി സ്റ്റിയറിംഗ്‌, ബ്രേക്ക്‌, ആക്സിലറേറ്റര്‍
മുതലായവ നമ്മള്‍ ഉപയോഗിക്കുന്നു. ഇവ ഉപയോഗിക്കുമ്പോള്‍ ആന്തരികമായി
എന്താണ്‌ സംഭവിക്കുന്നത്‌ എന്നു നമുക്കറിയേണ്ടതില്ല. ഏതെങ്കിലും OOP
ആശയവുമായി നിങ്ങള്‍ക്കിതിനെ ബന്ധപ്പെടുത്താമോ? വിശദീകരിക്കുക.

കമ്പ്യൂട്ടര്‍ സയന്‍സ്‌ - XII

21. ഇന്‍ഹെറിറ്റന്‍സ്‌ എന്നാലെന്ത്‌? പുനരുപയോഗത്തിന്‌ ഇത്‌ എങ്ങനെ സഹായ
കമാകുന്നു?

22. പോളിമോര്‍ഫിസം എന്നാലെന്ത്‌? ഇത്‌ വിവരിക്കുവാന്‍ ഒരു ഉദാഹരണം നല്‍കുക.
23. OOP എന്ന ആശയം ഉദാഹരണ സഹിതം വിവരിക്കുക.

24. സ്വിച്ചോടു കൂടിയ ഒരു പ്ലഗ്‌ പോയിന്‍റ്‌ പരിഗണിക്കുക. സ്വിച്ചിന്റെ പ്രവര്‍ത്തനം
എങ്ങനെയായിരിക്കും എന്നത്‌, ഏതു സാഹചര്യത്തിലാണത്‌ ഉപയോഗിക്കുന്നത്‌
എന്നതിന്റെയും പ്ലഗ്‌ പോയിന്റില്‍ എന്താണ്‌ ഘടിപ്പിച്ചിരിക്കുന്നത്‌ എന്നതിന്റെയും
അടിസ്ഥാനത്തിയായിരിക്കും. ഏതെങ്കിലും OOP ആശയവുമായി നിങ്ങള്‍ക്കിതിനെ
ബന്ധപ്പെടുത്താമോ? വിശദീകരിക്കുക.

25. 'Horse','Fish', ‘Bird’ എന്നാ ഉപക്ലാസുകളെ ഉല്‍പാദിപ്പിച്ചി രിക്കുന്ന
‘LivingBeings' എന്നൊരു അടിസ്ഥാന ക്ലാസ്‌ പരിഗണിക്കുക. പരാമര്‍ശിച്ചിരി
ക്കുന്ന എല്ലാ ക്ലാസുകളും ഇന്‍ഹെറിറ്റ്‌ ചെയ്യുന്ന ‘Move! എന്നൊരു ഫങ്ഷന്‍
LivingBeings ക്ലാസിലുണ്ടെന്ന്‌ അനുമാനിക്കുക. 23ഠ2ഒ൦ ക്ലാസിന്റെ ഒബ്ജക്ട്‌
Move! ഫങ്ഷനെ വിളിക്കുമ്പോള്‍, കുതിക്കുന്നു എന്നായിരിക്കാം സ്ക്രീനില്‍
പ്രദര്‍ശിപ്പിക്കുന്നത്‌. അതേസമയം Fish ക്ലാസിന്റെ ഒബ്ജക്ട്‌ അതേ ഫങ്ഷനെ

വിളിക്കുമ്പോള്‍ നീന്തുന്നു എന്നായിരിക്കാം സ്ക്രീനില്‍ പ്രദര്‍ശിപ്പിക്കുക. Bird ന്റെ
ഒബ്ജക്ടിന്റെ കാരൃത്തില്‍ പറക്കുന്നു എന്നായിരിക്കാം. ഏതെങ്കിലും OOP ആശ
യവുമായി നിങ്ങള്‍ക്കിതിനെ ബന്ധപ്പെടുത്താമോ? വിശദീകരിക്കുക.

DO അശ്യാതത്മാമ്റെ പഠനം പുര്ത്തിയാകുന്ന
തോ പഠിതാവ്‌ ആര്‍ജിക്കേങ പറനരേട്ടങ്ങള്‍

ഡാറ്റ സ്ര്രക്ചറുകളുടെ ആശയം ഉദാഹരണ
സഹിതം വിവരിക്കുവാന്‍ സാധിക്കുന്നു.
ഡാറ്റ സ്ര്രക്ചറുകളെ വിവിധ മാനദണ്ഡ
ങ്ങള്‍ക്കനുസരിച്ചു തരംതിരിക്കാന്‍ സാധി
ക്കുന്നു.

ഡാറ്റ സ്ര്രക്ചറുകളിലുള്ള വിവിധ പ്രവര്‍ത്ത
നങ്ങള്‍ ഏതൊക്കെയെന്നും മനസ്സിലാ
ക്കാനും അവയെക്കുറിച്ച്‌ വിരദീകരിക്കുവാ
നും സാധിക്കുന്നു.

സ്റ്റാക്ക്‌ ഡാറ്റ സ്ര്രക്ചറിന്റെ ഘടന ഉദാഹര
ണസഹിതം വിശദീകരിക്കാന്‍ സാധിക്കുന്നു.
സ്ത്ാക്കിലെ പുഷ്‌, പോര്‌ പ്രവര്‍ത്തനങ്ങള്‍
ക്കുള്ള അല്‍ഗോരിതം വികസിരിക്കാന്‍ സാധി
ക്കുന്നു.

ക്യു സ്ര്രക്ചറിന്റെ ഘടന ഉദാഹരണ സഹിതം
വിശദീകരിക്കാന്‍ സാധിക്കുന്നു.
രേഖീയമായ ക്യൂവില്‍ ഉര്‍കെടുത്താനും,
നീക്കം ചെയ്യല്‍ പ്രവര്‍ത്തനങ്ങള്‍ക്കുള്ള
അല്‍ മോരിതം വികസിഭരിക്കാനും സാധി
ക്കുന്നു.

വൃത്താകൃതിയിലുള്ള ക്യൂവിനു രേഖീയമായ
ക്യുവിനു മേലുള്ള നേട്ടങ്ങള്‍ വിശദീകരി
ക്കാന്‍ സാധിക്കുന്നു.

ലിങ്ക്ഡ്‌ ലിസ്റ്റ്‌ ഡാറ്റ സ്ദ്രക്ചറുകളുടെ ആശ
യം വിശദീകരിക്കാനും അറെകളുടെയും 203
സ്ഥിര ഡാറ്റ സ്ദ്രക്ചറുകളുടെയും മേല്‍
അവക്കുള്ള നേട്ടങ്ങള്‍ വിവരിക്കാനും സാധി
ക്കുന്നു.

ഡാറ്റ സ്(്രക്ചഠറുകളും
പ്രവര്‍ത്തനങ്ങളും

കമ്പ്യൂട്ടറുകള്‍ ഉപയോഗിച്ച്‌ പ്രശ്നം പരിഹരി
ക്കുമ്പോള്‍ മിക്ക സന്ദര്‍ഭങ്ങളിലും ഡാറ്റ പ്രോസസ്‌
ചെയ്യേണ്ടി വരാം. ഈ ഡാറ്റയുടെ ഇനം അടിസ്ഥാ
നപരമായതോ സംയോജിതമായതോ (ഒരു കൂട്ടം)
ആകാം. ഇത്തരം ഡാറ്റയെ പരാമര്‍ശിക്കുന്നതിനു
വേണ്ടി വേരിയബിളുകള്‍ ആവശ്യമാണെന്ന്‌ നമു
ക്കറിയാവുന്നതാണ്‌. C, C++, ജാവ മുതലായ
ഭാഷകളിലെ പ്രോഗ്രാമില്‍ വേരിയബിളുകള്‍ ഉപ
യോഗിക്കുന്നതിനു മുമ്പ്‌ അവയുടെ പ്രഖ്യാപനം
വേണമെന്ന്‌ ഈന്നിപ്പറയുന്നു. അടിസ്ഥാനപരമായ
ഡാറ്റകള്‍ക്ക്‌ വേണ്ടിയുള്ള വേരിയബിളുകള്‍ int,
char, float, double മുതലായ അടിസ്ഥാന
ഡാറ്റ ഇനങ്ങളോ അവയുടെ ടൈപ്പ്‌ മോഡിഫൈ
റുകളോ ഉപയോഗിച്ചാണ്‌ പ്രഖ്യാപിക്കുന്നതെന്നു
നമ്മള്‍ പഠിച്ചതാണ്‌. കൂട്ടമായിട്ടുള്ള ഡാറ്റയെ
സൂചിപ്പിക്കാന്‍ അറെകളും സ്ട്രക്ചറുകളും ഉപ
യോഗിക്കുന്നു എന്നും നാം കണ്ടതാണ്‌. ഒരേ തര
ത്തിലുള്ള ഡാറ്റയുടെ ശേഖരത്തെ അറെ എന്നും
വ്യത്യസ്ത തരത്തിലുള്ള ഡാറ്റയുടെ ശേഖരത്തെ
സ്ട്രക്ചര്‍ എന്നും പറയുന്നു.

വിവിധ തത്വങ്ങളുടെയും മാനദണ്ഡങ്ങളുടെയും
അടിസ്ഥാനത്തില്‍ പ്രോഗ്രാമിങ്‌ ഭാഷകളില്‍ ഡാ
റ്റയെ വൃത്യസ്ത തരങ്ങളായി ചിട്ടപ്പെടുത്താന്‍ ഉപ
യോഗിക്കുന്ന സംവിധാനങ്ങളെയാണ്‌ ഈ അധ്യാ
യത്തില്‍ അവതരിപ്പിച്ചിരിക്കുന്നത്‌. ഒരു തരത്തില്‍
ഉള്‍ക്കൊള്ളാവുന്ന ഡാറ്റയുടെ അളവും അതിന്റെ
മുകളില്‍ പ്രാവര്‍ത്തികമാക്കാവുന്ന പ്രവര്‍ത്തന
ങ്ങളും, ഡാറ്റ ഗണങ്ങള്‍ ചിട്ടപ്പെടുത്തുവാന്‍ ഉപ
യോഗിക്കുന്ന തത്വങ്ങളുടെ അടിസ്ഥാനത്തില്‍
വൃത്യസ്തമായതായിരിക്കും.
കമ്പ്യൂട്ടര്‍ സയന്‍സ്‌ - XII

3.1 ഡാറ്റ സ്ര്ക്ചര്‍ (Data Structure)

ചിത്രം 3.1 ല്‍ ചില ഗ്രൂപ്പുകള്‍ കാണിച്ചിരിക്കുന്നു. ഓരോ ഗ്രുപ്പിലും ്രമീകരണത്തിനായി
പലതരത്തിലുള്ള ത്രത്രങ്ങള്‍ ഉപയോഗിച്ചിരിക്കുന്നു. ഇതിലെ ഓരോ ചിത്രവും ഓരോ
വസ്തുക്കളുടെ ശേഖരമാണ്‌. ഓരോ ഗ്രൂപ്പിലും വസ്തുക്കളെ ക്രമീകരിക്കാന്‍ ഉപയോ
ഗിച്ചിരിക്കുന്ന തത്വം അല്ലെങ്കില്‍ മാതൃക ഏതാണെന്നു പറയാമോ?

(൪ കളിപ്പാടങ്ങളുടെ ശേഖരണം (D) ഫ്രതങ്ങളുടെ ശേഖരം (ച CD സ്ധപിഡി. പാക്കറ്റ്‌

ame 3.1; വിവിധ തരത്മിലുക്ൂട ശേഖരങ്ങള്‍

കളിപ്പാട്ടങ്ങളുടെ ഒരു ശേഖരമാണ്‌ ചിത്രം 3.1(a) ല്‍ കാണുന്നത്‌. പ്രത്യകിച്ച്‌ ഒരു
ക്രമമോ ക്രമീകരണമോ ഇല്ലാതെ കൂട്ടിയിട്ടിരിക്കുകയാണ്‌ ഈ കളിപ്പാട്ടങ്ങള്‍. allo
3.10) ല്‍ കാണിച്ചിരിക്കുന്നത്‌ ഒരു തട്ടിലെ ഒരു കൂട്ടം പാത്രങ്ങളാണ്‌. ഒന്നിന്‌ പുറകില്‍
മറ്റൊന്നായിട്ടാണ്‌ പാത്രങ്ങള്‍ വച്ചിരിക്കുന്നത്‌. തട്ടില്‍ സൂക്ഷിക്കാവുന്ന പാത്രങ്ങളുടെ
എണ്ണത്തിന്‌ ഒരു പരിമിതിയുണ്ട്‌. സ്ഥലമുണ്ടെങ്കില്‍ തട്ടില്‍ എവിടെ വേണമെങ്കിലും
പുതിയ പാത്രം വയ്ക്കാവുന്നതും ഏതു al0WWo വേണമെങ്കിലും തിരികെ എടുക്കാവുന്ന
തുമാണ്‌. സി ഡി പായ്ക്കറ്റിലെ ഒരു കൂട്ടം സി ഡികള്‍ ആണ്‌ ചിത്രം 3.1(c) ല്‍ കാണിച്ചി
രിക്കുന്നത്‌. ഈ ശേഖരത്തിലും ഡിസ്കുകളുടെ എണ്ണത്തിന്‌ ഒരു പരിധിയുണ്ട്‌. ഒരു
പുതിയ സി.ഡി. ശേഖരത്തിന്റെ മുകളില്‍ മാത്രമേ ചേര്‍ക്കാന്‍ സാധ്യമാകുകയുള്ളൂ.
അതുപോലെ മുകളിലുള്ള സി.ഡി. യെ മാര്രമെ ശേഖരത്തില്‍ നിന്നും ഒഴിവാക്കുവാനും
സാധിക്കുകയുള്ളു. പുറകുവശത്തു കൂടി മാത്രം അടുത്ത വ്ൃക്തിക്ക്‌ (അല്ലെങ്കില്‍ അടുത്ത
ഓട്ടോറിക്ഷക്ക്‌) വരിയില്‍ ചേരാന്‍ കഴിയുന്ന തരത്തിലുള്ള ഒരു വരി ആണ്‌ ചിത്രം
3.1(9) ല്‍ സൂചിപ്പിക്കുന്നത്‌. വരിയുടെ മുന്‍വശത്തു കൂടി മാത്രമെ ഒരു വൃക്തിക്ക്‌ (അല്ലെ
ക്കില്‍ ഓട്ടോറിക്ഷയ്ക്ക്‌) വരിയില്‍ നിന്ന്‌ പുറത്തേക്കു പോകുവാന്‍ സാധിക്കുകയുള്ളു.
ഈ വരിയില്‍ വ്യക്തികളുടെ എണ്ണത്തിന്‌ പരിധി ഉണ്ടാകണമെന്നില്ല. എന്നാല്‍ ചില
സാഹചര്യങ്ങളില്‍ വരിയുടെ വലുപ്പത്തിന്‌ പരിധിയുണ്ടാകാം.

3. ഡാറ്റ സ്്രക്ചറുകളും പ്രവര്‍ത്തനങ്ങളും

ചിത്രം 3.1 ലെ (1), (9), (d) എന്നീ ചിത്രങ്ങളിലെ ശേഖരങ്ങളുമായി സാമ്യമുള്ളതാണ്‌
ഡാറ്റാസ്ര്രക്ചറുകളുടെ തത്വം. പതിനൊന്നാം തരത്തില്‍ നമ്മള്‍ പഠിച്ച അറെയുമായി
സാമ്യമുള്ളതാണ്‌ ചിത്രം 3.1(b) 3 കാണിച്ചിരിക്കുന്ന ശേഖരം. അതുകൊണ്ട്‌ അറെ ഒരു
ഡാറ്റ സ്ര്രക്ചര്‍ ആണെന്ന്‌ നമുക്ക്‌ പറയാവുന്നതാണ്‌. ഒറ്റ ഘടകമായി പ്രോസസ്‌
ചെയ്യാവുന്ന യുക്തിപരമായി ഒരേപോലെ ഉള്ളതും അല്ലെങ്കില്‍ വൃത്യസ്തമായതും ആയ
ഡാറ്റയെ പ്രത്യേക രീതിയില്‍ ക്രമീകരിക്കാനുള്ള മാര്‍ഗത്തെയാണ്‌ കമ്പ്യൂട്ടര്‍ ശാസ്ര്ത
ത്തില്‍ ഡാറ്റ സ്ര്രക്ചര്‍ എന്ന്‌ പറയുന്നത്‌. ഉപയോക്താവിന്‌ വിവിധ തരത്തിലുള്ള ഡാറ്റ
യെ കൂട്ടിയോജിപ്പിക്കാന്‍ മാത്രമല്ല അവയെ ഒറ്റ ഘടകമായി കണക്കാക്കി പ്രവര്‍ത്തിക്കാനും
ഡാറ്റസ്ര്രക്ചര്‍ സഹായിക്കുന്നു.

3.1.1 ഡാറ്റ സ്ര്രക്ചറുകളുടെ തരം തിരിക്കല്‍
(Classification of data structures)

ഡാറ്റ സ്്രക്ചറുകളെ പൊതുവെ ലളിതമായ ഡാറ്റ സ്ര്രക്ചറുകളെന്നും സംയോജിത
ഡാറ്റ സ്ദ്രക്ചറുകളെന്നും തരംതിരിക്കാം. ഇതിന്റെ വിശദമായ തരംതിരിവ്‌ ചിരം 3.2
ല്‍ കാണിച്ചിരിക്കുന്നു.

വാറ്റ സ്ട്രക്ചറുക(ര്‍

ലളിതമായ ഡാറ്റ സ്്രക്ചറുകള്‍ സംയോജിത WI) സ്ട്രക്ചറുകള്‍

ത്ത ടി ഖിയ രഖിയാല്ലാത്തത്‌!

ചിതം. 3.2: awog സ്ര്രക്ചറുകളുടെ തരാംതിരിക്കത്‌

അറേ, സ്ട്രക്ചര്‍ തുടങ്ങിയ ലളിതമായ ഡാറ്റ സ്ര്രക്ചറുകള്‍ നമുക്ക്‌ പരിചിതമാണ്‌.
ഡാറ്റയുടെ ശേഖരത്തെ സൂചിപ്പിക്കുന്നതിനായി C++ പ്രോഗ്രാമുകളില്‍ നമ്മള്‍ അവ
ഉപയോഗിച്ചതുമാണ്‌. ഇത്തരം ലളിതമായ ഡാറ്റ സ്ദ്രക്ചറുകളെ വിവിധ തരത്തില്‍ കൂട്ടി
യോജിപ്പിച്ച്‌ സംയോജിത ഡാറ്റ സ്ദ്രക്ചറുകള്‍ രൂപപ്പെടുത്തുന്നു. ചിത്രം 3.2 ല്‍ കാണി
ച്ചിരിക്കുന്നത്‌ പോലെ സംയോജിത ഡാറ്റ സ്ര്രക്ചറുകളെ രേഖീയമായതും (Linear) രേ
ഖീയമല്ലാത്തതും (Non-Linear) എന്ന്‌ വീണ്ടും തരംതിരിച്ചിരിക്കുന്നു. ഒരു ഡാറ്റ Mis
ക്ചറിലെ ഡാറ്റ അംഗങ്ങള്‍ അനുവര്‍ത്തനമായി ക്രമീകരിക്കപ്പെടുകയാണെങ്കില്‍ ആ
ഡാറ്റ സ്ര്രക്ചറിനെ രേഖീയമായത്‌ എന്ന്‌ പറയുന്നു. രേഖീയമായ ഡാറ്റ സ്ര്രക്ചറിന്റെ
അംഗങ്ങളെ പ്രതിനിധീകരിക്കാന്‍ തുടര്‍ച്ചയായ മെമ്മറി ലൊക്കേഷനുകള്‍ ഉപയോഗി
ക്കുന്നു. ഒരു ഡാറ്റ സ്ര്രക്ചറിലെ അംഗങ്ങള്‍ മെമ്മറിയില്‍ അനുവര്‍ത്തന ക്രമത്തില
ല്ലെങ്കില്‍ ആ ഡാറ്റ സ്ര്രക്ചറിനെ ഒരു രേഖീയമല്ലാത്ത ഡാറ്റ സ്ദ്രക്ചര്‍ എന്ന്‌ പറയുന്നു.
ഇത്തരം ഡാറ്റ സ്ര്രക്ചറുകളില്‍ ക്രമത്തിലല്ലാതെയുള്ള മെമ്മറി ലൊക്കേഷനുകളിലാണ്‌
ഡാറ്റ അംഗങ്ങള്‍ സംഭരിക്കപ്പെടുക. മാത്രമല്ല അവ ഉപയോഗിക്കപ്പെടുന്നത്‌ ക്രമത്തിലാ
യിരിക്കണമെന്നില്ല. രേഖീയമല്ലാത്ത ഡാറ്റ സ്ര്രക്ചറുകള്‍ വളരെ സങ്കീര്‍ണമായതിനാല്‍
ഉപരിപഠന സമയത്ത്‌ അവയെപ്പറ്റി വിശദമായി പഠിക്കുന്നതാണ്‌. രേഖീയമായ ഡാറ്റ
സ്ട്രക്ചറുകളായ സ്റ്റാക്ക്‌ (Stack), ക്യൂ (Queue), ലിങ്ക്‌ ലിസ്റ്റ്‌ (Linked List) എന്നിവയെപ്പറ്റി
വിശദമായി ഈ പാഠഭാഗത്തില്‍ അവതരിപ്പിച്ചിരിക്കുന്നു.

കമ്പ്യൂട്ടര്‍ സയന്‍സ്‌ - XII

ഡാറ്റ സ്്രക്ചറുകള്‍ ഡാറ്റയുടെ ശേഖരത്തെ സൂചിപ്പിക്കുന്നതിനാല്‍ അവയ്ക്ക്‌ കമ്പ്യൂട്ട
റിന്റെ മെമ്മറിയുമായി വളരെ അടുത്ത ബന്ധമാണുള്ളത്‌. എന്തെന്നാല്‍ ഡാറ്റയെ സംഭരി
ക്കാനുള്ള സ്ഥലമാണ്‌ മെമ്മറി. മെമ്മറി പ്രാഥമികമോ ദ്വിതീയമോ ആകാം. മെമ്മറി നീക്കി
വയ്പ്പിനനുസരിച്ച്‌ ഡാറ്റ സ്ദ്രക്ചറുകളെ സ്ഥിര (static) ഡാറ്റ സ്ര്രക്ചര്‍ എന്നും പരി
വര്‍ത്തനാത്മക (dynamic) ഡാറ്റ സ്ര്രക്ചര്‍ എന്നും രണ്ടായി തരംതിരിക്കാം. സ്റ്റാറ്റിക്‌
ഡാറ്റ സ്ര്രക്ചറുകള്‍ പ്രാഥമിക മെമ്മറിയുമായി മാത്രം ബന്ധപ്പെട്ടിരിക്കുന്നു. പ്രോഗ്രാമിന്റെ
പ്രവര്‍ത്തനത്തിനു മുമ്പായി ആവശ്യമായ മെമ്മറി നീക്കിവയ്ക്കുകയും പ്രവര്‍ത്തന
ഘട്ടത്തിലൂടനീളം അതിനു മാറ്റംവരാതെ നിലകൊള്ളുകയും ചെയ്യുന്നു. അതായത്‌ ഡാറ്റ
സ്‌ര്രക്‌ചര്‍ രൂപകല്‍പ്പന ചെയ്യുമ്പോള്‍ത്തന്നെ അതിന്റെ വലുപ്പം നിര്‍ണയി
ക്കുന്നതുകൊണ്ട്‌ പിന്നീട്‌ അത്‌ മാറ്റാന്‍ സാധിക്കുന്നതല്ല. അറെകള്‍ ഉപയോഗിച്ച്‌
രൂപകല്‍പന ചെയ്തിരിക്കുന്നതും (പാവര്‍ത്തികമാക്കിയിരിക്കുന്നതും ആയ cwog
സ്ര്രക്ചറുകള്‍ സ്ഥിര സ്വഭാവമുള്ളവയായിരിക്കും. പക്ഷെ പരിവര്‍ത്തനാത്മക ഡാറ്റ
സ്ര്രക്ചറുകള്‍ക്ക്‌ പ്രവര്‍ത്തന ഘട്ടത്തിലാണ്‌ മെമ്മറി നിര്‍ണയിക്കപ്പെടുക. ലിങ്കഡ്‌
ലിസ്റ്റുകള്‍ ഉപയോഗിച്ച്‌ പ്രാവര്‍ത്തികമാക്കിയിരിക്കുന്ന ഡാറ്റ സ്ദ്രക്ചറുകള്‍ പരിവര്‍ത്ത
നാത്മകമായിരിക്കും. പരിവര്‍ത്തനാത്മക ഡാറ്റ സ്ര്രക്ചറില്‍ ശേഖരത്തിന്റെ വലുപ്പം
മുന്‍കൂട്ടി (്രസ്താവിച്ചിരിക്കുകയില്ല, പകരം ഉപയോക്താവിന്റെ ഇഷ്ടാനുസരണം
പ്രവര്‍ത്തന വേളയില്‍ വളരുകയും ചുരുങ്ങുകയും ചെയ്തു കൊണ്ടിരിക്കും. ഡാറ്റ
സംഭരണത്തിനായി ദ്വിതീയ മെമ്മറി നമ്മള്‍ ഉപയോഗിക്കുമ്പോള്‍ അത്‌ ഫയലുകളുടെ
രൂപത്തിലായിരിക്കും. ഡാറ്റ കൂട്ടിച്ചേര്‍ക്കുന്നതിനനുസരിച്ചു ഫയലിന്റെ വലുപ്പം കൂടുകയും
ഡാറ്റ നീക്കം ചെയ്യുന്നതിനനുസരിച്ച്‌ വലുപ്പം കുറയുകയും ചെയ്യുന്നു. അതിനാല്‍
ഫയലുകളെ പരിവര്‍ത്തനാത്മക ഡാറ്റ സ്ര്രക്ചറുകള്‍ എന്ന്‌ പറയുന്നു.

3.1.2 ഡാറ്റ സ്ര്രക്ചറുകളുടെ മേലുള്ള പ്രവര്‍ത്തനങ്ങള്‍

(Operations on data structures)

ഡാറ്റ സ്ട്രക്ചറുകള്‍ ഉപയോഗിച്ച്‌ പ്രതിനിധീകരിച്ചിരിക്കുന്ന ഡാറ്റ ചില പ്രവര്‍ത്തന
ങ്ങളുടെ സഹായത്തോടെയാണ്‌ പ്രോസസ്‌ ചെയ്യപ്പെടുന്നത്‌. വാസ്തവത്തില്‍ ചില
പ്രത്യേക പ്രവര്‍ത്തനങ്ങള്‍ എത്ര തവണ പ്രവര്‍ത്തിക്കണം എന്നതിനനുസരിച്ചാണ്‌ ഡാറ്റ
സ്ട്രക്ചര്‍ തിരഞ്ഞെടുക്കുന്നത്‌. കടന്നു പോകുക, തിരയുക, ഉള്‍പ്പെടുത്തുക, നീക്കം
ചെയ്യുക, ക്രമപ്പെടുത്തുക, ലയിപ്പിക്കുക മുതലായവയാണ്‌ ഡാറ്റ സ്ര്രക്ചറുകളുടെ മേല്‍
ചെയ്യാവുന്ന പ്രവര്‍ത്തനങ്ങള്‍. ഇവയെ നമുക്ക്‌ പരിചയപ്പെടാം.

ഒ. കടന്നുപോകുക (Traversing)

ഡാറ്റ സ്ര്രക്ചറിലെ ഓരോ അംഗത്തെയും സന്ദര്‍ശിക്കുന്ന പ്രവര്‍ത്തനമാണ്‌ കടന്നു
പോകല്‍. ആദ്യത്തെ അംഗത്തില്‍ തുടങ്ങി അവസാനത്തെ അംഗം വരെ സഞ്ചാരം
തുടരുന്നു. സന്ദര്‍ശിച്ച അംഗത്തെ എങ്ങനെ പ്രോസസ്‌ ചെയ്യണമെന്നുള്ളത്‌ പ്രശ്ന
ത്തിന്റെ ആവശ്യകതയ്ക്കനുസരിച്ചായിരിക്കും. ഒരു അറേയിലുള്ള എല്ലാ അംഗങ്ങളും
തിരിച്ചെടുക്കുന്നത്‌ കടന്നുപോകുന്ന പ്രവര്‍ത്തനത്തിന്‌ ഒരു ഉദാഹരണമാണ്‌ (പതിനൊ
ന്നാം തരത്തിലെ കമ്പ്യൂട്ടര്‍ സയന്‍സ്‌ പുസ്തകത്തിലെ അധ്യായം 8 നോക്കുക).

b. തിരയല്‍ (Searching)

ഒരു ഡാറ്റ WM[SHaAIMOE! ഒരു പ്രത്യേകഅംഗത്തിന്റെ സ്ഥാനം കണ്ടുപിടിക്കാനുള്ള (alls)
യയെയാണ്‌ തിരയല്‍ എന്നത്‌ കൊണ്ടുദ്ദേശിക്കുന്നത്‌. ഒന്നോ അതിലധികമോ വ്യവസ്ഥ

3. ഡാറ്റ സ്ദ്രക്ചറുകളും പ്രവര്‍ത്തനങ്ങളും

കള്‍ നിറവേറ്റുന്ന എല്ലാ അംഗങ്ങളുടെയും സ്ഥാനം കണ്ടുപിടിക്കാനുള്ള പ്രകിയയെയും
തിരയല്‍ എന്നുപറയാം. മറ്റൊരര്‍ഥത്തില്‍ തിരയലെന്നാല്‍ ഡാറ്റ സ്ര്രക്ചറില്‍ സംഭരിച്ചു
വച്ചിരിക്കുന്ന വിലകള്‍ കണ്ടെത്തി ഉപയോഗിക്കുക എന്നാണ്‌. പതിനൊന്നാം തരത്തില്‍
തിരയലിനുള്ള രണ്ടു മാര്‍ഗങ്ങള്‍ നമ്മള്‍ പഠിച്ചതാണ്‌.

C. ഉള്‍പ്പെടുത്തല്‍ (Inserting)

ഡാറ്റ സ്ര്രക്ചറില്‍ ഒരു പ്രത്യേക സ്ഥാനത്തേക്ക്‌ പുതിയ അംഗത്തെ ചേര്‍ക്കുന്ന പ്രക്രിയ
യാണ്‌ ഉള്‍പ്പെടുത്തല്‍ എന്ന്‌ പറയുന്നത്‌. ചില സാഹചര്യങ്ങളില്‍, പ്രതേകിച്ച്‌ ഡാറ്റ
സ്ര്രക്ചറിലെ ഡാറ്റ അംഗങ്ങള്‍ ക്രമത്തിലാണെങ്കില്‍, പുതിയ ഡാറ്റ ഉള്‍പ്പെടുത്തേണ്ട
സ്ഥാനം ആദ്യം കണ്ടെത്തുകയും അതിനു ശേഷം ഡാറ്റ ഉള്‍പ്പെടുത്തുകയും ചെയ്യുന്നു.

0. നീക്കം ചെയ്യല്‍ (Deleting)

ഡാറ്റ സ്ര്രക്ചറില്‍ നിന്നും ഒരു അംഗത്തെ ഒഴിവാക്കുന്ന പ്രക്രിയയെയാണ്‌ നീക്കം
ചെയ്യല്‍ എന്നു പറയുന്നത്‌. നീക്കം ചെയ്യുന്നതിനായി ഡാറ്റ അംഗത്തിന്റെ സ്ഥാനമോ
നീക്കം ചെയ്യേണ്ട അംഗത്തെ തന്നെയോ പരാമര്‍ശിക്കണം.

€. ക്രമപ്പെടുത്തല്‍ (Sorting)

ബബിള്‍ സോര്‍ട്ട്‌, സെലക്ഷന്‍ സോര്‍ട്ട്‌ എന്നീ രണ്ടു രീതികള്‍ ഉപയോഗിച്ച്‌ ഒരു അറെയെ
ക്രമപ്പെടുത്തുന്നത്‌ നമ്മള്‍ നേരത്തെ പരിചയപ്പെട്ടതാണ്‌. അംഗങ്ങളെ ഒരു പ്രത്യേക
ക്രമത്തില്‍ അതായത്‌ ആരോഹണ ക്രമത്തിലോ അവരോഹണ ക്രമത്തിലോ അടുക്കി
വയ്ക്കുന്ന രീതിയെയാണ്‌ ക്രമപ്പെടുത്തല്‍ എന്ന്‌ പറയുന്നത്‌. ഡാറ്റ സ്്രക്ചറിലെ ഡാറ്റാ
അംഗങ്ങളെ ക്രമപ്പെടുത്തുന്നത്‌ തിരയല്‍ വേഗത്തിലാക്കാന്‍ സഹായിക്കുന്നു.

f, ലയിപ്പിക്കല്‍ (Merging)

ക്രമപ്പെടുത്തിയിരിക്കുന്ന രണ്ടു ഡാറ്റ സ്ര്രക്ചറുകളുടെ അംഗങ്ങളെ കൂട്ടിയോജിപ്പിച്ച്‌
പുതിയ ഒരു ഡാറ്റ സ്ര്രക്ചര്‍ രൂപീകരിക്കുന്ന പ്രക്രിയയെ ലയിപ്പിക്കല്‍ എന്ന്‌ പറയുന്നു.
ലയിപ്പിക്കലിന്റെ ഏറ്റവും ലളിതമായ രൂപം, അംഗങ്ങളില്ലാത്ത ഒരു ഡാറ്റ സ്ര്രക്ചറിലേക്കു
മറ്റു രണ്ടു ഡാറ്റ സ്്രക്ചറുകളെ കൂട്ടിച്ചേര്‍ക്കുന്നതാണ്‌. അറെ ഉപയോഗിച്ചു ചെയ്യുകയാ
ണെങ്കില്‍ ആദ്യം ഒരു അറെയിലെ അംഗങ്ങള്‍, അംഗങ്ങളില്ലാത്ത മൂന്നാമത്തെ അറെയി
ലേക്ക്‌ പകര്‍ത്തുകയും, ശേഷം രണ്ടാമത്തെ അറെയിലെ അംഗങ്ങള്‍ മൂന്നാമത്തെ അറെയി
ലേക്ക്‌ കൂട്ടിച്ചേര്‍ക്കുകയും ചെയ്യുന്നു.

തിരയല്‍, ക്രമപ്പെടുത്തല്‍, ലയിപ്പിക്കല്‍ എന്നീ മൂന്ന്‌ പ്രവര്‍ത്തനങ്ങളാണ്‌ സംഭരണ
ഉപകരണങ്ങളില്‍ നിന്നും ഡാറ്റ വീണ്ടെടുക്കുന്ന പ്രകിയ എളുപ്പവും വേഗത്തിലും കാര്യ
ക്ഷ്വമവുമാക്കുന്നത്‌. അറെ എന്ന ഡാറ്റ സ്ദ്രക്ചറിനെക്കുറിച്ചും അതിന്മേല്‍ പ്രാവര്‍ത്തികമാ
ക്കാവുന്ന മേല്‍പറഞ്ഞ പ്രവര്‍ത്തനങ്ങളെ പറ്റിയും നമ്മള്‍ പതിനൊന്നാം തരത്തില്‍
പഠിച്ചതാണ്‌. മാത്രമല്ല സ്ര്രക്ചറുകളെയും അവയുടെ അംഗങ്ങളുടെ മേലുള്ള പ്രവര്‍ത്ത
നങ്ങളെയും കുറിച്ച്‌ ഈ പുസ്തകത്തിന്റെ ഒന്നാം അധ്യായത്തില്‍ നാം ചര്‍ച്ച ചെയ്തി
രുന്നു. ഇനി നമുക്ക്‌ സംയോജിത രേഖീയ ഡാറ്റ സ്ര്രക്ചറുകളായ സ്റ്റാക്ക്‌, ക്യൂ, ലിങ്ക്ഡ്‌
ലിസ്റ്റ്‌ മുതലായവയെപ്പറ്റി ചര്‍ച്ച ചെയ്യാം.

കമ്പ്യൂട്ടര്‍ സയന്‍സ്‌ - XII

3.2 സ്റ്റാക്ക്‌ (Stack)

ചിത്രം 3.1(c) ഒരിക്കല്‍ക്കൂടി ശ്രദ്ധിക്കുക. താഴെ കൊടുത്തിരിക്കൂന്ന ചിത്രം 3.3 ല്‍
കാണിച്ചിരിക്കുന്ന ശേഖരവും നോക്കുക. ഈ രണ്ടു വിഭാഗത്തിലും കൊടുത്തിരിക്കുന്ന
ഇനങ്ങളുടെ ഘടന ഒന്നുതന്നെയാണ്‌.

ചിതം 3.3: നിത്യജീവിതത്തിലെ സ്ത്രാക്കിന്‌ ഉദാഹരണങ്ങശി

ഒരു ഇനത്തിന്റെ മുകളില്‍ മറ്റൊന്ന്‌ ചേര്‍ത്തിട്ടാണ്‌ ഇവിടെ ശേഖരം രൂപീകരിച്ചിരിക്കുന്നത്‌.
മറ്റൊരു തരത്തില്‍ പറഞ്ഞാല്‍ ഇനങ്ങള്‍ ഏറ്റവും മുകളിലാണ്‌ ചേര്‍ക്കുന്നത്‌. അതുപോലെ
ഏറ്റവും അവസാനം ചേര്‍ത്ത ഇനം മാത്രമേ നമുക്ക്‌ നീക്കം ചെയ്യാന്‍ സാധിക്കു. ഈ
ക്രമീകരണ തത്വത്തെ ലാസ്റ്റ്‌ ഇന്‍ ഫസ്റ്റ്‌ ഓട്ട്‌ (1110) എന്ന്‌ പറയുന്നു. LIFO തത്വം
പിന്തുടരുന്ന ഡാറ്റ സ്ര്രക്ചറിനെ സ്റ്റാക്‌ എന്നു പറയുന്നു. LIFO എന്ന്‌ പറയുന്ന അറ്റത്തു
നിന്ന്‌ മാത്രം ഇനങ്ങള്‍ കൂട്ടിച്ചേര്‍ക്കുകയും നീക്കംചെയ്യുകയും ചെയ്യുന്ന ക്രമപ്പെടുത്തിയ
പട്ടികയാണ്‌ ഇത്‌.

സ്റ്റാക്ക്‌ എന്നത്‌ യുക്തിപരമായ ഒരു ആശയമാണ്‌. സ്റ്റാക്ക്‌
നിര്‍മിക്കാന്‍ പ്രോഗ്രാമിങ്‌ ഭാഷകളില്‍ ഒരു പ്രത്യേക സംവി
ധാനം ഇല്ല. അറെ ഉപയോഗിച്ച്‌ നമുക്ക്‌ സ്റ്റാക്ക്‌ പ്രാവര്‍
ത്തികമാക്കാവുന്നതാണ്‌. അത്തരത്തിലുള്ള ഒരു സ്റ്റാക്കിന്‌
അറെയുടെ എല്ലാ ഗുണങ്ങളും ഉണ്ടായിരിക്കുന്നതാണ്‌. > : 56
ഇതിന്റെ വലുപ്പം മുമ്പേ നിര്‍ണയിക്കപ്പെട്ടിരിക്കുന്നതിനാല്‍ 4

ഇത്‌ സ്ഥിരമായിരിക്കുന്നതാണ്‌. അറെ ഉപയോഗിച്ച്‌ പ്രാവര്‍ 3 37
ത്തികമാക്കിയിരിക്കുന്ന ഒരു സ്റ്റാക്ക്‌ ആണ്‌ ചിത്രം 3.4 ല്‍ 2

കാണിച്ചിരിക്കുന്നത്‌. പരമാവധി 10 പൂര്‍ണസംഖ്യകളെ

9
8
7
6

1 42
ഇതില്‍ ഉള്‍പ്പെടുത്താനാകും. ചിത്രം 3.4 പ്രകാരം നിലവില്‍ an
സ്റ്റാക്കില്‍ ആറ്‌ അംഗങ്ങളാണുള്ളത്‌. അതുപോലെ അഞ്ചാം ക്ക്‌
സ്ഥാനത്തുള്ള 56 എന്നതാണ്‌ ഈ സ്റ്റാക്കിലെ അവസാ 1 34:

നത്തെ അംഗം. അങ്ങനെയെങ്കില്‍ 705 ന്റെ മൂല്യം 5 പുരീണ്ണന്സംഖ്യകളുടെ സതക്ക്‌
ആയിരിക്കും. സ്റ്റാക്കിന്റെ അവസാനത്തെ അംഗത്തെ സൂചി

പ്പിക്കുന്നതിനു വേണ്ടി സ്റ്റാക്കിന്റെ പേരിന്‌ StackName[TOS] എന്ന പദപ്രയോഗം
ഉപയോഗിക്കുന്നു. ഇവിടെ STACK[TOS] എന്നത്‌ 56 ആയിരിക്കും. എന്തെന്നാല്‍ സ്റ്റാക്‌
നിര്‍മിക്കാന്‍ നമ്മള്‍ അറെയാണ്‌ ഉപയോഗിച്ചിരിക്കുന്നത്‌. അറെയില്‍ ആദ്യത്തെ അംഗ
ത്തെ സൂചിപ്പിക്കാന്‍ 0 എന്ന സൂചികയാണ്‌ ഉപയോഗിക്കുന്നത്‌. ഇവിടെ 51200] എന്നത്‌
25 ആകുന്നു.

3. ഡാറ്റ സ്ദ്രക്ചറുകളും പ്രവര്‍ത്തനങ്ങളും

3.2.1 സ്റ്റാക്ക്‌ ര്രാവര്‍ത്തികമാക്കല്‍ (Implementation of stack)

അറെ ഉപയോഗിച്ച്‌ സ്റ്റാക്ക്‌ ര്പാവര്‍ത്തികമാക്കാം എന്ന്‌ നേരത്തെ പരാമര്‍ശിച്ചിരുന്നു.
അങ്ങനെയെങ്കില്‍ ഒരു സ്റ്റാക്ക്‌ ഉപയോഗിച്ച്‌ പ്രതിനിധീകരിക്കാവുന്ന അംഗങ്ങളുടെ
എണ്ണത്തിന്‌ പരിധിയുണ്ട്‌. മാത്രമല്ല അത്‌ അറെയുടെ വലുപ്പത്തിനനുസരിച്ചായിരിക്കും.
തുടക്കത്തില്‍ സ്റ്റാക്ക്‌ ശൂന്യമാണ്‌ എന്നതു സൂചിപ്പിക്കുന്നതിനായി, TOS ന്റെ വില 1
ആയി നല്‍കുന്നു. അറെയുടെ സൂചികയുടെ ഏറ്റവും ഉയര്‍ന്ന വില എത്തുന്നത്‌ വരെ,
സ്റ്റാക്കിലേക്ക്‌ ഓരോ അംഗവും കൂട്ടിച്ചേര്‍ക്കപ്പെടുമ്പോള്‍ TOS ന്റെ വില ഒന്നു വച്ച്‌
കൂടുന്നു. N അംഗങ്ങളുള്ള Top എന്ന അറെ ഉപയോഗിച്ച്‌ സ്റ്റാക്ക്‌ പ്രവര്‍ത്തികമാക്കു
കയാണെങ്കില്‍, TOS ന്റെ വില 0 മുതല്‍ (N-1) വരെ മാറി വരാം. അതുപോലെ സ്റ്റാക്കിലെ
അംഗങ്ങളെ സൂചിപ്പിക്കാന്‍ STACK[O], 512൧൮], STACK[2], ..., STACK[N-1] മുതലായ
പദങ്ങള്‍ ഉപയോഗിക്കുന്നു.

3.2.2 സ്റ്റാക്കിലെ പ്രവര്‍ത്തനങ്ങള്‍ (Operations on stack)

സ്റ്റാക്ക്‌ ഡാറ്റ സ്ര്രക്ചറുകള്‍ അറെ ഉപയോഗിച്ചാണ്‌ പ്രാവര്‍ത്തികമാക്കിയിരിക്കുന്ന
തെങ്കിലും അറെക്കു ബാധകമായിട്ടുള്ള എല്ലാ പ്രവര്‍ത്തനങ്ങളും സ്റ്റാക്കില്‍ അതേ
രൂപത്തില്‍ ഉപയോഗിക്കുന്നില്ല. ഉദാഹരണത്തിന്‌ അറെയില്‍ ഏതു സ്ഥാനത്തു വേണ
മെങ്കിലും ഉള്‍പ്പെടുത്തല്‍, നീക്കം ചെയ്യല്‍ എന്നീ പ്രവര്‍ത്തനങ്ങള്‍ ചെയ്യാവുന്നതാണ്‌.
എന്നാല്‍ സ്റ്റാക്കില്‍ മുകളില്‍ നിന്ന്‌ മാത്രമേ ഈ പ്രവര്‍ത്തനങ്ങള്‍ ചെയ്യാന്‍ സാധിക്കൂ.
സ്റ്റാക്കില്‍ നിര്‍വഹിക്കുന്ന ഉള്‍പ്പെടുത്തല്‍, നീക്കം ചെയ്യല്‍ പ്രവര്‍ത്തനങ്ങളെ യഥാക്രമം
പുഷ്‌ (DUSA) എന്നും പോപ്‌ (POP) എന്നും പറയുന്നു. ഈ പ്രവര്‍ത്തനങ്ങള്‍ എങ്ങനെ
യാണ്‌ ചെയ്യുന്നതെന്നു നമുക്കു നോക്കാം.

a. പുഷ്‌ പ്രവര്‍ത്തനം (Push operation)

സ്റ്രാക്കിലേക്കു ഒരു പുതിയ അംഗത്തെ ഉള്‍പ്പെടുത്തുന്ന പ്രക്രിയയെയാണ്‌ പുഷ്‌ പ്രവര്‍
ത്തനം എന്ന്‌ പറയുന്നത്‌. സ്റ്റാക്കിന്റെ നിര്‍മാണം എന്ന്‌ പറയുന്നത്‌ പുഷ്‌ പ്രവര്‍ത്ത
നത്തിന്റെ ആവര്‍ത്തിച്ചുള്ള പ്രയോഗം കൊണ്ടാണ്‌ സാധ്യമാകുന്നത്‌.

പുഷ്‌ പ്രവര്‍ത്തനം നടപ്പിലാക്കുമ്പോഴുള്ള സ്റ്റാക്കിന്റെ സ്ഥിതിയാണ്‌
ചിത്രം 3.5 ല്‍ കാണിച്ചിരിക്കുന്നത്‌. സ്റ്റാക്ക്‌ പ്രാവര്‍ത്തികമാക്കുന്നതി
നായി ഒരു അറെ നിര്‍മിച്ചതായും TOS-1 ആയും നമുക്ക്‌ അനുമാ
നിക്കാം. ചിത്രം നിരീക്ഷിച്ചു പ്രവര്‍ത്തനം നിര്‍വഹിക്കാനുള്ള
നടപടിക്രമങ്ങള്‍ എഴുതുക.

നമുക്കു ചെയ്യാം

കമ്പ്യൂട്ടര്‍ സയന്‍സ്‌ - XII

പുതതിയ പുതിയ anon ഡി
സം സം സഖ്യ, പൂതിയ
eS, aus 9 9 MAIS 9

CC]

[ചി

34
25 25 25

=> qpeas സാക്ക്‌ സ്റ്റാക്ക്‌ യാ Hous

5 ആദ്യത്തെ സഖ്യ, രണ്ടാമത്തെ സംഖ്യ ന്നാമത്തെ സംഖ്യ നാലാമത്തെ സാഖ്യയ
ശൂന്യമായ സ്റ്റക്ക്‌ ചേര്‍ത്തിരിക്കുന്നു ചേര്‍ത്തിരിക്കുന്നു ചേര്‍ത്തിരിക്കുന്ന ചേര്‍ത്തിരിക്കുന്നു

oF NW BH യ പ

or NY BH OY ww

ചിത്രം. തുടരീച്ചയായ പുഷ്‌(പവരിത്മനത്മിന്‌ ശേഷധുക്ള സ്ത്രാക്കിമ്റെ്‌ അവസ്ഥ

ചിത്രം 3.5 തുടര്‍ച്ചയായ പുഷ്‌ പ്രവര്‍ത്തനത്തിന്‌ ശേഷമുള്ള സ്റ്റാക്കിന്റെ അവസ്ഥ സ്റ്റാക്കിന്‌

മേലുള്ള പുഷ്‌ പ്രവര്‍ത്തനത്തിനു വേണ്ടി താഴെ പറയുന്ന ഘട്ടങ്ങള്‍ നിര്‍വചിക്കാന്‍

കഴിയുന്നുണ്ടോ എന്ന്‌ പരിശോധിക്കുക.

ഘട്ടം 1: സ്റ്റാക്കിലേക്കു ഉള്‍പ്പെടുത്തുവാനുള്ള വില ഒരു വേരിയബിളിലേക്കു സ്വീക
രിക്കുക.

ഘട്ടം 2: ഠലന്റെ വില ഒന്ന്‌ വച്ച്‌ കൂട്ടുക.

ഘട്ടം 3: TOS ന്റെ സ്ഥാനത്തെ വില സംഭരിക്കുക.

സ്റ്റാക്കിന്റെ ശൂന്യമായ സ്ഥലം ഉണ്ടെങ്കില്‍ മാര്രമേ പുതിയ അംഗങ്ങളെ ഉള്‍പ്പെടുത്താ
നുള്ള മുകളില്‍ പറഞ്ഞിരിക്കുന്ന ഘട്ടങ്ങളുടെ പ്രവര്‍ത്തനങ്ങള്‍ സാധ്യമാവുകയുള്ളൂ.
ചിത്രം 3.5 ല്‍ കാണിച്ചിരിക്കുന്ന സ്റ്റാക്കില്‍ 105 ന്റെ വില 0 ആയിക്കഴിഞ്ഞാല്‍ പുതിയ
അംഗത്തെ ഉള്‍പ്പെടുത്താന്‍ കഴിയില്ല. സ്റ്റാക്ക്‌ നിറയുകയും പൂതിയ ഒരു അംഗത്തെ
ഉള്‍പ്പെടുത്താന്‍ നാം ശ്രമിക്കുകയും ചെയ്താല്‍ ഉടലെടുക്കുന്ന സാഹചര്യത്തെ (Stack
ഗഘഥ്റന) എന്ന്‌ പറയുന്നു. സ്റ്റാക്കിലെ പുഷ്‌ പ്രവര്‍ത്തനത്തിനുള്ള അല്‍ഗോരിതം
നമുക്ക്‌ നോക്കാം.

നുള്ള അല്‍ഗോരിതം

14 പരമാവധി വലുപ്പമുള്ള STACK[N] എന്ന അറെ പരിഗണിക്കുക. സ്റ്റാക്കിന്റെ മുകള്‍ഭാഗ
ത്തിന്റെ സ്ഥാനം സൂചിപ്പിക്കുന്നതിനായി TOS എന്ന വേരിയബിളും ഉണ്ട്‌. VAL എന്ന
വേരിയബിളില്‍ ഡാറ്റ സൂക്ഷിച്ചിരിക്കുന്നു. VAL-aM സ്റ്റാക്കിലേക്ക്‌ ചേര്‍ക്കണം. എന്ന
നിര്‍ദേശത്തിനും അവസാനിപ്പിക്കുന്ന നിര്‍ദേശത്തിനും ഇടയിലായി പുഷ്‌ പ്രവര്‍ത്തന
ത്തിനാവശ്യമായ ഘട്ടങ്ങള്‍ നല്‍കിയിരിക്കുന്നു.

തുടങ്ങുക
1: അഥവാ (TOS < N-1) ആണെങ്കില്‍ //സ്റ്റാക്ക്‌ ശൂന്യമാണോ എന്ന്‌ പരിശോധിക്കുന്നു
2 TOS =TOS +1
3: STACK[TOS] = VAL
4: അല്ല എങ്കില്‍

3. ഡാറ്റ സ്ദ്രക്ചറുകളും പ്രവര്‍ത്തനങ്ങളും

ട: “സ്റ്റാക്ക്‌ ഓവര്‍ ഫ്ളോ” എന്ന്‌ പ്രിന്‍റ്‌ ചെയ്യുക
6: പുറത്തേക്കു പോവുക
അവസാനിപ്പിക്കുക

a. പോപ്‌ പ്രവര്‍ത്തനം (Pop operation)

ഒരു സ്റ്റാക്കിന്റെ ഏറ്റവും മുകളിലുള്ള അംഗത്തെ നീക്കം ചെയ്യുന്ന പ്രകിയയെയാണ്‌
പോപ്‌ പ്രവര്‍ത്തനം എന്ന്‌ പറയുന്നത്‌. ഓരോ പോപ്‌ പ്രവര്‍ത്തനത്തിന്‌ ശേഷവും TOS
ന്റെ വില ഒന്ന്‌ വച്ച്‌ കുറയുന്നു.

ഒരു സ്റ്റാക്കിന്റെ ഏറ്റവും മുകളിലുള്ള അംഗത്തെ നീക്കം ചെയ്യാനുള്ള

ഘട്ടങ്ങള്‍ നിര്‍വചിക്കാന്‍ നമുക്ക്‌ ശ്രമിക്കാം. ഇതിനായി ചിത്രം 3.6

തന്നിരിക്കുന്നു. ചിര്രം നിരീക്ഷിച്ചു പോപ്‌ ഓപ്പറേഷന്‍ വേണ്ടിയുള്ള
നമുക്കു ചെയ്യാം ഘട്ടങ്ങള്‍ കണ്ടുപിടിച്ചു എഴുതുക.

വീണ്ടെടുത്ത വീണ്ടെടുത്ത
സംഖ്യ സംഖ്യ,

സട 7 സട " 7
(ചൂ; പ; )
5 5 5
4 4 4
3 C56) 3 3
<=> മ] 18 2| C18 ) 2
1 34 ros 1 34 1

0 25 0 25 0 25

qyoas സ്റ്റാക്ക്‌ STK[10]

അംഗത്തെ തിരിച്ചെടുത്തശേഷം അംഗത്തെ തിരിച്ചെടുത്തശേഷം അംഗത്തെ തിരിച്ചെടുത്തശേഷം
108 2 ആയി മാറുന്നു TOS 1 ആയി മാറുന്നു TOS 0 ആയി മാറുന്നു

alls 3.6: തുടരിച്ചയായ Gaal പവരീത്മനത്മിന്‌ ശേഷമുള്ള സ്ത്രാക്കിന്ററ്‌ അവസ്ഥ

സ്റ്റാക്കിനു മേലുള്ള പോപ്‌ പ്രവര്‍ത്തനത്തിനുവേണ്ടി താഴെ പറയുന്ന ഘട്ടങ്ങള്‍ നിര്‍മി
ക്കാന്‍ കഴിയുന്നുണ്ടോ എന്ന്‌ പരിശോധിക്കുക

ഘട്ടം 1: TOS ന്റെ സ്ഥാനത്തുള്ള അംഗത്തിന്റെ വില ഒരു വേരിയബിളില്‍ സംഭരിക്കുക.
ഘട്ടം 2: TOS ന്റെ വില ഒന്ന്‌ കുറയ്ക്കുക.

സ്റ്റാക്കില്‍ അംഗങ്ങളുണ്ടെങ്കില്‍ മുകളില്‍ പറഞ്ഞ രണ്ടു ഘട്ടങ്ങള്‍ പ്രവര്‍ത്തിക്കുന്നു. അറെ
ഉപയോഗിച്ചുള്ള സ്റ്റാക്കില്‍, പോപ്‌ പ്രവര്‍ത്തനം നടത്തുമ്പോള്‍ യഥാര്‍ഥത്തില്‍ അംഗ
ങ്ങളെ നീക്കം ചെയ്യുന്നില്ല. മറിച്ച്‌ 105 ന്റെ വില കുറച്ചുകൊണ്ട്‌ അത്തരം അംഗങ്ങളെ
ഉപയോഗിക്കുന്നതില്‍ നിന്നും തടസ്സപ്പെടുത്തുന്നു. ഏറ്റവും അവസാനത്തെ അംഗം നീക്കം
ചെയ്യപ്പെടുന്നതുവരെ ചിത്രം 3.6 ല്‍ കൊടുത്തിരിക്കുന്ന സ്റ്റാക്കില്‍ പോപ്‌ പ്രവര്‍ത്തനം
ചെയ്യാവുന്നതാണ്‌. ഏറ്റവും അവസാനത്തെ അംഗം നീക്കം ചെയ്യപ്പെട്ടു കഴിഞ്ഞാല്‍ 105

കമ്പ്യൂട്ടര്‍ സയന്‍സ്‌ - XII

ന്റെ വില -1 ആയി മാറുന്നു. ഇപ്പോള്‍ സ്റ്റാക്ക്‌ ശുന്യമാണ്‌. ഇങ്ങനെ ശൂന്യമായ സ്റ്റാക്കില്‍
നിന്നും ഒരു അംഗത്തെ നീക്കം ചെയ്യാന്‍ ശ്രമിക്കുകയാണെങ്കില്‍ ഉടലെടുക്കുന്ന പ്രതിസ
ന്ധിയെ സ്റ്റാക്ക്‌ അണ്ടര്‍ ഫ്‌ളോ (stack underflow) എന്ന്‌ പറയുന്നു. ഇനി നമുക്ക്‌
സ്റ്രാക്കിന്‌ മേലുള്ള പോപ്‌ പ്രവര്‍ത്തനത്തിന്റെ അല്‍ഗോരിതം എഴുതി നോക്കാം.

സ്ത്റാക്കിന്‌ മേലുള്ള പോപ്‌ ,്രവര്‍ത്തനത്തിനുള്ള അല്‍ഗോരിതം

പരമാവധി [4 അംഗങ്ങളെ സംഭരിക്കാവുന്ന ഒരു സ്റ്റാക്കിനെ പ്രാവര്‍ത്തികമാക്കാന്‍ വേണ്ടി
STACK[N] എന്ന ഒരു അറെ പരിഗണിക്കുക. സ്റ്റാക്കിലെ ഏറ്റവും മുകളിലെ സ്ഥാനത്തിന്റെ
വിവരം സൂക്ഷിക്കുന്നതിനായി TOS എന്നൊരു വേരിയബിള്‍ ഉപയോഗിക്കുന്നു. സ്റ്റാക്കില്‍
നിന്നും നീക്കം ചെയ്യുന്ന അംഗങ്ങളെ സൂക്ഷിക്കുന്നതിനായി VAL എന്ന വേരിയബിള്‍
ഉപയോഗിക്കുന്നു. പോപ്‌ പ്രവര്‍ത്തനത്തിനുള്ള നിര്‍ദേശങ്ങള്‍ തുടങ്ങുക, അവസാ
നിക്കുക എന്നിവയ്ക്കിടയില്‍ കൊടുത്തിരിക്കുന്നു.
തുടങ്ങുക

1: അഥവാ (TOS > -1) ആണെങ്കില്‍ //സ്റ്റാക്ക്‌ ശൂന്യമാണോ എന്ന്‌ പരിശോധിക്കുന്നു

(അണ്ടര്‍ ഫ്ളോ)

2 VAL = STACK[TOS]

3 TOS=TOS-1

4: അല്ല എങ്കില്‍

5 സ്റ്റാക്‌ അണ്ടര്‍ ഫ്ളോ” എന്ന്‌ പ്രിന്റ്‌ ചെയ്യുക

൭

പുറത്തേക്കു പോകുക
അവസാനിപ്പിക്കുക
സ്റ്റാക്ക്‌ പ്രവര്‍ത്തങ്ങള്‍ക്ക്‌ വേണ്ടിയുള്ള C++ ഫങ്ഷനുകള്‍
tos, ൩ എന്നിവ ഗ്ലോബല്‍ വേരിയബിള്‍ ആണെന്ന്‌ കരുതുക

പുഷ്‌ പ്രവര്‍ത്തനം പോപ്പ്‌ പപവര്‍ത്തനം

void push(int stack[],int val)

{

int pop(int stack[])
{

if (tos < n-1) int val;

{ if (tos > -1)
tost+t+; {
stack[tos]=val; val=stack[tos];

} tos--;

else }
cout<<“Overflow”; else

cout<<“Underflow”;
return val;

3. ഡാറ്റ സ്ദ്രക്ചറുകളും പ്രവര്‍ത്തനങ്ങളും

സ്പാക്കിന്റെ ഉപയോഗം
Oo o

സ്റ്റാക്കുകള്‍ LIFO തത്വത്തെ പിന്തുടരുന്നതിനാല്‍ സ്ട്രിങിനെ തിരിച്ചെഴുതുവാനും,
പോളിഷ്‌ സ്ര്രിങ്‌ നിര്‍മിക്കാനും മറ്റും ഉപയോഗിക്കുന്നു. സ്ദ്രിങിനെ തിരിച്ചെഴുതുക
എന്ന്‌ പറഞ്ഞാല്‍ തന്നിരിക്കുന്ന സ്്രിങിലെ അക്ഷരങ്ങളെ അവസാനത്തേതില്‍ നിന്നും
ആദ്യത്തേതിലേക്ക്‌ എന്ന ക്രമത്തില്‍ ഒരു സ്ര്രിങ്‌ രൂപപ്പെടുത്തുക എന്നാണ്‌. ഉദാഹരണത്തിന്‌ "SAD"
എന്ന സ്ര്രിങിനെ തിരിച്ചെഴുതുകയാണെങ്കില്‍ "DAS" എന്ന്‌ ലഭിക്കുന്നു. പോളിഷ്‌ സ്ര്രിങ്‌ എന്നാല്‍
ഓപ്പറന്റുകള്‍ക്കു മുമ്പോ ശേഷമോ ഓപ്പറേറ്ററുകള്‍ വരുന്ന തരത്തിലുള്ള ഒരു ഗണിത പ്രയോഗശൈ
ലിയാണ്‌. ഉദാഹരണത്തിന്‌ A+B എന്നത്‌ ABt എന്നോ +AB എന്നോ ആക്കി മാറ്റാവുന്നതാണ്‌. A+B
എന്നതിനെ ഇന്‍ഫിക്സ്‌ (infix) പ്രയോഗശൈലി എന്ന്‌ പറയുന്നു. AB+, +AB എന്നിവ യഥാക്രമം
പോസ്റ്റ്ഫിക്‌സ്‌ (postfix) എന്നും പ്രീഫിക്സ്‌ (prefix) പ്രയോഗശൈലി എന്നും അറിയപ്പെടുന്നു. ഇവ
ALU വിന്റെ പ്രവര്‍ത്തനത്തിന്‌ ആവശ്യമാണ്‌. ഇന്‍ഫിക്സിനെ മറ്റു രണ്ടു രൂപത്തിലേക്ക്‌ വിവര്‍ത്തനം
ചെയ്യാന്‍ പുഷ്‌, പോപ്പ്‌ പ്രവര്‍ത്തനങ്ങളാണ്‌ കമ്പ്യൂട്ടര്‍ ഉപയോഗിക്കുന്നത്‌. മാത്രമല്ല ഈ പ്രയോഗ
ശൈലികളെ വിലയിരുത്താനും ALU സ്റ്റാക്കുകളെ ആശ്രയിക്കുന്നു.
ES

3.3 ക്യു (Queue)

വരികള്‍ നമുക്ക്‌ സുപരിചിതങ്ങളാണ്‌. പല സാഹചര്യങ്ങളിലും നമ്മള്‍ വരികളുടെ ഭാഗ
മാകാറുമുണ്ട്‌. ചിത്രം 3.7 ല്‍ പോളിങ്‌ സ്റ്റേഷനിലെ വരിയാണ്‌ സൂചിപ്പിച്ചിരിക്കുന്നത്‌.
ഇവിടെ വരിയുടെ മുമ്പിലുള്ള ആദ്യത്തെ വോട്ടര്‍ വോട്ട്‌ ചെയ്യുന്നു. പുതിയ വ്യക്തി
വരിയില്‍ ചേരുമ്പോള്‍ ഏറ്റവും പുറകിലായിട്ടാണ്‌ വന്നു നില്‍ക്കുക. ഈ ഉദാഹരണത്തില്‍
നിന്നും വൃക്തമാകുന്നത്‌, ആദ്യം വരിയില്‍ നില്‍ക്കുന്ന വൃക്തിയാണ്‌ വരിയില്‍ നിന്നും
ആദ്യം പുറത്തു പോവുക. ഈ തരത്തില്‍ ഒരു കൂട്ടം ഇനങ്ങളെ ക്രമീകരിക്കുന്നതിനെ
ഫസ്റ്റ്‌ ഇന്‍ ഫസ്റ്റ്‌ ഓട്ട്‌ (FIFO) തത്വം എന്ന്‌ പറയുന്നു. അതിനാല്‍ FIFO തത്വത്തിന്റെ
= , : a അടിസ്ഥാനത്തില്‍ പ്രവര്‍
~ ത്തിക്കുന്ന ഡാറ്റ സ്ട്രക്ച
റിനെ ക്യൂ (Queue) എന്ന്‌
വിളിക്കുന്നു. ചിത്രത്തില്‍
കണ്ടതുപോലെ ഒരു ക്യൂ
വിനു രണ്ട്‌ അറ്റങ്ങള്‍ ഉണ്ട്‌
: മുന്‍ഭാഗവും (Front) പിന്‍
. : ഭാഗവും (Rear). ക്യൂവില്‍
alo 3.7: പോളിങ്‌ സ്റ്റേഷനിലെ വരി പൂതിയ ഡാറ്റ അംഗങ്ങളെ
ഉള്‍പ്പെടുത്തുന്നത്‌ പിന്‍
ഭാഗത്തും നീക്കം ചെയ്യുന്നത്‌ മുന്‍ഭാഗത്തും ആയിരിക്കും. സ്റ്റാക്കില്‍ പറഞ്ഞത്‌ പോലെ
ക്യൂവും ഒരു യുക്തിപരമായ ആശയം മാത്രമാണ്‌. ഒരു അറെ ഉപയോഗിച്ചാണ്ക്യു പ്രാവര്‍
ത്തികമാക്കുന്നതെങ്കില്‍ അത്തരത്തിലുള്ള ക്യൂ (സ്റ്റാറ്റിക്‌) സ്വഭാവമുള്ളതായിരിക്കും.

3.3.1 ക്യുവിനെ പ്രവര്‍ത്തികമാക്കല്‍ (Implementation of Queue)

ഒരു അറെ ഉപയോഗിച്ച്‌ ക്യു പ്രായോഗികമാക്കുകയാണെങ്കില്‍, അതില്‍ ഉള്‍കൊ
ളളിക്കാവുന്ന അംഗങ്ങള്‍ക്ക്‌ ഒരു പരിധിയുണ്ട്‌. Queue[10] എന്ന അറെ ഉപയോഗിച്ച്‌
നടപ്പിലാക്കിയിരിക്കുന്ന ഒരു ക്യു ആണ്‌ ചിത്രം 3.8 ല്‍ കാണുന്നത്‌. ഇതിന്‌ പരമാവധി

കമ്പ്യൂട്ടര്‍ സയന്‍സ്‌ - XII

10 അംഗങ്ങളെ മാത്രമേ ഉള്‍ക്കൊള്ളാനാകു. ഈ ചിത്രത്തില്‍ പ്രകാരം 0 മുതല്‍ 4 വരെ
സ്ഥാനങ്ങളിലായി അഞ്ച്‌ അംഗങ്ങളാണ്‌ ക്യൂവിലുള്ളത്‌. അതായത്‌ QUEUE 0 വും Rear
4 ഉം ആയിരിക്കും. ക്യുവിലെ ആദ്യത്തെ അംഗത്തെ QUEVE[Front] എന്നും അവസാ
നത്തെ അംഗത്തെ QUEUE[Rear] എന്നും സൂചിപ്പിക്കാവുന്നതാണ്‌.

Front Rear

QUEUE | 25%) 16 | 38 | 9 65

0 1 2 3 4 5 6 7 8 9
ചിത്രം 3.8: അറെ ഇപഴയാഗിച്ച്‌ പവരീത്മികമാക്കിയ ക്യു

അറെയുടെ അവസാന സൂചികയായ 9 ആണ്‌ ക്യൂവിന്‌ അനുവദനീയമായിട്ടുള്ള ഏറ്റവും
ഉയര്‍ന്ന വില. തുടക്കത്തില്‍ മുന്‍ഭാഗത്തിന്റെയും (Rear) പിന്‍ഭാഗത്തിന്റെയും (Front)
വില -1 ആയിരിക്കും. ഇത്‌ ക്യൂ ശുന്യമാണെന്നതിനെ സൂചിപ്പിക്കുന്നു. ക്യൂ വിലേക്കു
ആദ്യത്തെ അംഗത്തെ ഉള്‍പ്പെടുത്തുമ്പോള്‍ ഈ രണ്ടു വിലകളും 0 ആയി മാറുന്നു.
തുടര്‍ന്ന്‌ ഓരോ പുതിയ അംഗത്തെ ഉള്‍പ്പെടുത്തുമ്പോഴും Rear ന്റെ വില ഒന്ന്‌ വച്ചു
കൂടുന്നു. ഏറ്റവും ഉയര്‍ന്ന സൂചിക (ഇവിടെ 9) എത്തുന്നത്‌ വരെ ഇത്‌ തുടര്‍ന്ന്‌ പോകാ
വുന്നതാണ്‌. അതുപോലെ ഓരോ അംഗത്തെ നീക്കം ചെയ്യുമ്പോഴും Front ന്റെ വില
ഒന്നുവച്ച്‌ കൂടുന്നതാണ്‌. Front ന്റെ വില Rear നെക്കാള്‍ കൂടുതലാകുന്നതു വരെ ഇത്‌
തുടരാവുന്നതാണ്‌.

3.3.2 കട്റൂുവിലെ പ്രവര്‍ത്തനങ്ങള്‍ (Operations on queue)

സ്റ്റാക്കിലേതു പോലെ ക്യൂവിലും ഉള്‍പ്പെടുത്തല്‍, നീക്കം ചെയ്യല്‍ പ്രവര്‍ത്തനങ്ങള്‍ക്കു
ചില നിയ്രന്തണങ്ങളുണ്ട്‌. ഒരു സാധാരണ അറെയില്‍ ഉള്‍പ്പെടുത്തല്‍, നീക്കം ചെയ്യല്‍
എന്നി പ്രവര്‍ത്തനങ്ങള്‍ ഏതു സ്ഥാനത്തു വേണമെങ്കിലും ചെയ്യാവുന്നതാണ്‌. എന്നാല്‍
ഒരു സ്റ്റാക്കില്‍ ഇത്‌ ഏറ്റവും മുകളില്‍ നിന്ന്‌ മാത്രമായിരിക്കും. അതുപോലെ ക്യൂവില്‍
ഉള്‍പ്പെടുത്തല്‍, നീക്കം ചെയ്യല്‍ പ്രവര്‍ത്തനങ്ങള്‍ രണ്ട്‌ അറ്റത്തു മാത്രമായിരിക്കും
നടക്കുക.

a. ഉര്‍കെടുത്തല്‍ പ്രവര്‍ത്തനം (Insertion operation)

ക്യൂവിന്റെ പിന്‍ഭാഗത്തു പൂതിയ അംഗത്തെ കൂട്ടിച്ചേര്‍ക്കുന്ന പ്രക്രിയയെയാണ്‌ ഉള്‍പ്പെ
ടുത്തല്‍ എന്ന്‌ പറയുന്നത്‌. അടുത്ത മെമ്മറി സ്ഥാനത്തെ സൂചിപ്പിക്കാന്‍ Rear ന്റെ വില
ആദ്യം കൂട്ടുകയും പിന്നീട്‌ ആ സ്ഥാനത്ത്‌ അംഗത്തെ ഉള്‍പ്പെടുത്തുകയും ചെയ്യുന്നു.
ഉള്‍പ്പെടുത്തല്‍ പ്രവര്‍ത്തനം തുടര്‍ച്ചയായി ചെയ്യുമ്പോഴാണ്‌ ഒരു ക്യൂ രൂപപ്പെടുന്നത്‌.

ഉള്‍പ്പെടുത്തല്‍ പ്രവര്‍ത്തനത്തിന്‌ വിധേയമാകുന്ന ഒരു ക്യൂവിന്റെ

അവസ്ഥ ചിത്രം 3.0 ല്‍ കാണിച്ചിരിക്കുന്നു.

ഇതിനായി ഒരു അറെ നിര്‍മ്മിക്കുകയും, Front, Rear എന്നിവയ്ക്ക്‌ -1

എന്ന വില നല്‍കുകയും ചെയ്യുന്നു ro നിരീക്ഷിച്ചു ര്രവര്‍ത്തനം
നമുക്ക ചെയ്യാം ചെയ്യുവാനുള്ള നടപടിക്രമം എഴുതുക.

3. ഡാറ്റ സ്ദ്രക്ചറുകളും പ്രവര്‍ത്തനങ്ങളും

Rear
QUEUE | | ശൂന്യമായ ക്യൂ
t ft 0 1 2 3 4 5 6 7 8 9
പുതിയ
Moos,
Front ഥി] Rear

QUEUE | 25 ആദ്യ അംഗത്തെ

ഉള്‍പ്പെടുത്തുന്നു
0 1 2 3 4 5 6 7 8 9
ന [൦
പുതിയ
F സഖ്യ [
ront ear
Co] a
QUEVE [AS | 22 | | രണ്ടാമത്തെ അംഗത്തെ
0 1 2 3 4 5 6 7 3 9 ഉള്‍പ്പെടുത്തുന്നു
f f പുതിയ
Front സഖ്യ ര
ron ear
[6] [ 51 ണി]
QUEUE | 25 | 16 | 38 | | | | മൂന്നാമത്തെ അംഗത്തെ
ഉള്‍പ്പെടുത്തുന്നു

0 1 2 3 4 5 6 7 8 9
AMO 3.9: തുടര്‍ച്ചയായ ഇശ്പ്ലെടുത്തതീ (പവരീത്തനം MSCOWOIY ശേഷഥുള്ള ഷ്യുറഥിന്റി GRAM

ഉള്‍പ്പെടുത്തല്‍ പ്രവര്‍ത്തനത്തിന്‌ വേണ്ടി താഴെ പറയുന്ന ഘട്ടങ്ങള്‍ നിര്‍വചിക്കുവാന്‍
കഴിയുമോ എന്ന്‌ പരിശോധിക്കുക.

ഘട്ടം 1:

ക്യൂവിലേക്കു ഉള്‍പ്പെടുത്തുവാനുള്ള വില ഒരു വേരിയബിളിലേക്കു സ്വീകരി
ക്കുക

ഘട്ടം 2: Rear ന്റെ വില ഒന്ന്‌ കൂട്ടുക.
ഘട്ടം 3: Rear ന്റെ സ്ഥാനത്ത്‌ വില സംഭരിക്കുക.

കമ്പ്യൂട്ടര്‍ സയന്‍സ്‌ - XII

ശൂന്യമായ ഒരു ക്യൂവിലേക്കു ആദ്യമായി ഉള്‍പ്പെടുത്തല്‍ പ്രവര്‍ത്തനം ചെയ്യുമ്പോള്‍
Front, Rear എന്നിവയുടെ വില ഒന്നുവച്ചു കൂട്ടുന്നു. അതായത്‌ Rear ഉം Front ഉം 0)
ആയി മാറുന്നു. അതിനു ശേഷം വരുന്ന ഉള്‍പ്പെടുത്തലുകള്‍ക്കെല്ലാം Rear A കൂട്ടുന്നു.
Rear 9 ആകുന്നതു വരെ (അറെ യുടെ അവസാനത്തെ സൂചിക) ഇത്‌ തുടരുന്നതാണ്‌.
അതിനു ശേഷം വീണ്ടും ഉള്‍പ്പെടുത്താന്‍ പ്രവര്‍ത്തനത്തിനു (ശമിക്കുകയാണെങ്കില്‍
സ്റ്റാക്കിലേതു പോലെ “ക്യൂ ഓവര്‍ ഫ്ളോ' (queue Overflow) സംഭവിക്കുന്നു. ക്യുവില്‍
ഉള്‍പ്പെടുത്തല്‍ പ്രവര്‍ത്തനം നടത്തുവാനുള്ള അല്‍ഗോരിതം നമുക്ക്‌ എഴുതി നോക്കാം.

ക്യുവില്‍ ഉള്‍പ്പെടുത്തല്‍ (പവര്‍ത്തനം ചെയ്യുവാനുള്ള അല്‍ഗോരിതം

ക്യൂ നടപ്പിലാക്കുന്നതിന്‌ വേണ്ടി, N വലുപ്പമുള്ള QUEVE[N] എന്ന ഒരു അറേ പരിഗണി
ക്കുക. ക്യൂവിന്റെ മുന്‍ഭാഗത്തെയും പിന്‍ഭാഗത്തെയും സൂചിപ്പിക്കുന്നതിനായി FRONT,
REAR എന്നീ രണ്ടു വേരിയബിളുകള്‍ ഉപയോഗിക്കുന്നു. ക്യൂവിലേക്കു ഉള്‍പ്പെടുത്താനുള്ള
ഡാറ്റ VAL എന്ന വേരിയബിളില്‍ സംഭരിച്ചു വയ്ക്കുന്നു. തുടങ്ങുക, അവസാനിപ്പിക്കുക
എന്നീ നിര്‍ദേശങ്ങള്‍ക്കിടയില്‍ കൊടുത്തിരിക്കുന്ന ഘട്ടങ്ങള്‍ ഉള്‍പ്പെടുത്തല്‍ പ്രവര്‍ത്ത
നത്തെ വിശദീകരിക്കുന്നു.
തുടങ്ങുക

1: അഥവാ (REAR == -1) ആണെങ്കില്‍ /// സ്ഥലത്തിന്റെ ലഭൃത പരിശോധിക്കുന്നു

2: FRONT = REAR = 0 “ക്യൂ ഓവര്‍ ഫ്ളോ” പ്രിന്‍റ്‌ ചെയ്യുക

3: Q[REAR] = VAL പുറത്തേക്കു പോകുക

4: അല്ലെങ്കില്‍ അഥവാ (REAR < N-1) ആണെങ്കില്‍ // സ്ഥലത്തിന്റെ ലഭ്യത പരി

ശോധിക്കുന്നു.

REAR = REAR +1

Q[REAR] = VAL
അല്ലെങ്കില്‍

Print "Queue Overflow "
പുറത്തേക്കു പോകുക
അവസാനിപ്പിക്കുക

worn an

b. നീക്കം ചെയ്യല്‍ പ്രവര്‍ത്തനം (Deletion operation)

ക്യൂ വിന്റെ മുന്‍ഭാഗത്തു നിന്നും അംഗത്തെ ഒഴിവാക്കുന്ന പ്രകിയയെയാണ്‌ നീക്കം
ചെയ്യല്‍ എന്ന്‌ പറയുന്നത്‌. നീക്കം ചെയ്യലിന്‌ ശേഷം Front ന്റെ വില ഒന്നുവച്ചു കൂട്ടുന്നു.
അറെ ഉപയോഗിച്ചുള്ള ക്യൂവില്‍ നീക്കം ചെയ്യല്‍ പ്രവര്‍ത്തനം നടത്തുമ്പോള്‍ യഥാര്‍ഥ
ത്തില്‍ അംഗങ്ങളെ നീക്കം ചെയ്യുന്നില്ല. മറിച്ച്‌ Front ന്റെ വില കൂട്ടിക്കൊണ്ട്‌ അത്തരം
അംഗങ്ങളെ ഉപയോഗിക്കുന്നതില്‍ നിന്നും തടസ്സപ്പെടുത്തുന്നു.

അറെ ഉപയോഗിച്ച്‌ നടപ്പിലാക്കിയിരിക്കുന്ന ഒരു ക്യൂ പരിഗണിക്കുക.

ചിര്രം 3.10 ല്‍ നിക്കം ചെയ്യല്‍ പ്രവര്‍ത്തനത്തിന്‌ വിധേയമാകുന്ന ക്യൂ

വിന്റെ അവസ്ഥകള്‍ കാണിച്ചിരിക്കുന്നു. ഈ പ്രവര്‍ത്തനത്തിനുള്ള
നമുക്കു ചെയ്യാം വിവിധ ഘട്ടങ്ങള്‍ നിര്‍വചിക്കാന്‍ നമുക്കു ശ്രമിക്കാം.

3. ഡാറ്റ സ്ദ്രക്ചറുകളും പ്രവര്‍ത്തനങ്ങളും

തിരിച്ചെടുത്ത
അംഗം

Rear

| | ആദ്യ അംഗത്തെ
തിരിച്ചെടുത്തു

തിരിച്ചെടുത്ത
അംഗം
Rear

| | രണ്ടാമത്തെ അംഗത്തെ
6 7 8 9 തിരിച്ചെടുത്തു

ചിത്രം 3.10: തുടര്‍ച്ചയായ നിക്കം ചെയ്യത്‌ ,പവരീത്മനം നടത്മ7യതിന്‌ ശേഷമുള്ള ക്യുറഗമ്റെ അവസ്ഥ

നീക്കം ചെയ്യല്‍ പ്രവര്‍ത്തനത്തിന്‌ താഴെ പറയുന്ന ഘട്ടങ്ങള്‍ നമുക്ക്‌ നിര്‍വചിക്കാം.

Step 1: Front 003 സ്ഥാനത്തുള്ള അംഗത്തെ ഒരു വേരിയബിളിലേക്കു സ്വീകരിക്കുക.
Step 2: 6൦൩ന്റെ വില ഒന്ന്‌ കൂട്ടുക.

ചിത്രം 3.10 പ്രകാരം ക്യൂവിന്റെ മുന്‍ഭാഗത്തേക്ക്‌ അംഗങ്ങളുടെ സ്ഥാനമാറ്റം നടക്കുന്നില്ല.
അതായത്‌ നിത്യജീവിതത്തിലെപ്പോലെയല്ല ഇവിടുത്തെ ക്യൂവിന്റെ സങ്കല്‍പ്പം. ക്യൂ ഡാറ്റ
സ്ട്രക്ചറില്‍ നീക്കം ചെയ്യല്‍ പ്രവര്‍ത്തത്തില്‍ അംഗങ്ങളുടെ സ്ഥാനമാറ്റം നടത്തുന്നതിന്‌
പകരം Front ന്റെ വില കൂട്ടുകയാണ്‌ ചെയ്യുന്നത്‌. ക്യൂവില്‍ അംഗങ്ങള്‍ ഒ്ളിടത്തോളം
കാലം നീക്കം ചെയ്യല്‍ പ്രവര്‍ത്തനത്തിന്‌ മേല്‍നിര്‍വചിച്ച രണ്ടു ഘട്ടങ്ങള്‍ മതിയാകുന്ന
താണ്‌. രണ്ടാമത്തെ അംഗത്തിന്റെ നീക്കം ചെയ്യലിന്‌ ശേഷമുള്ള ക്യൂവിന്റെ അവസ്ഥ
നോക്കുക. Front ന്റെയും Rear ന്റെയും വില ഒരേ അംഗത്തെ സൂചിപ്പിക്കുന്നു. അതായത്‌
രണ്ട്‌ എന്ന അറെയുടെ സുചിക. ക്യൂവില്‍ ഒരു നീക്കം ചെയ്യല്‍ പ്രവര്‍ത്തനം കൂടി നടത്തു
ന്നതായി അനുമാനിക്കുക. നടപടി ക്രമം പ്രകാരം Front ന്റെ വില 3 ആയി മാറുന്നു. ഇത്‌
Rear ന്റെ വിലയേക്കാള്‍ കൂടുതലാണ്‌. നമുക്കറിയാം ഒരു ക്യൂവില്‍ അത്‌ ഉചിതമല്ല.
മാത്രമല്ല ക്യൂ ഇപ്പോള്‍ ശുന്യമാണെന്നു നമുക്ക്‌ കാണാവുന്നതാണ്‌. ക്യൂ ശുന്യമായാല്‍
Front ന്റെയും Rear ന്റെയും വില-1 ആകണമെന്ന്‌ നേരത്തെ പരാമര്‍ശിച്ചതാണ്‌. അപ്പോള്‍
അവസാനത്തെ അംഗത്തെ നീക്കം ചെയ്താല്‍ Front ന്റെയും Rear ന്റെയും വില -1
ആക്കാനുള്ള ഘട്ടം കൂടി അല്‍ഗോരിതത്തില്‍ ഉള്‍പ്പെടുത്തേണ്ടതാണ്‌. ഈ അവസ്ഥയില്‍
വീണ്ടും നീക്കം ചെയ്യല്‍ അനുവദനീയമല്ല. ശൂന്യമായ ക്യൂ വില്‍ നിന്നും നീക്കം ചെയ്യാന്‍
ശ്രമിക്കുമ്പോളുണ്ടാകുന്ന അവസ്ഥയെ “ക്യൂ അണ്ടര്‍ഫ്‌ളോ” (queue underflow) എന്ന്‌
പറയുന്നു. ഇനി നമുക്ക്‌ ക്യുവില്‍ നിന്നും നീക്കം ചെയ്യല്‍ പ്രവര്‍ത്തനം നടത്താനുള്ള
അല്‍ഗോരിതം തയാറാക്കാം.

കമ്പ്യൂട്ടര്‍ സയന്‍സ്‌ - XII

ഒരു ക്യൂവില്‍ നിന്ന്‌ നീക്കം ചെയ്യല്‍ പ്രവര്‍ത്തനം നടത്താനുള്ള അല്‍ഗോരിതം

ക്യൂ നടപ്പിലാക്കാന്‍ വേണ്ടി പരമാവധി N അംഗങ്ങളുള്ള QUEVE[N] എന്ന ഒരു അറെ
പരിഗണിക്കുക. FRONT, REAR എന്നീ വേരിയബിളുകള്‍ ക്യൂവിന്റെ മുന്‍ഭാഗത്തെയും
പിന്‍ഭാഗത്തെയും സൂചിപ്പിക്കാന്‍ ഉപയോഗിക്കുന്നു. ക്യൂവില്‍ നിന്നും നീക്കം ചെയ്യുന്ന
അംഗത്തെ സംഭരിക്കുന്നതിനായി VAL എന്ന വേരിയബിള്‍ ഉപയോഗിക്കുന്നു. നീക്കം
ചെയ്യല്‍ പ്രവര്‍ത്തനത്തിനുള്ള ഘട്ടങ്ങള്‍ തുടങ്ങുക, അവസാനിപ്പിക്കുക എന്നീ നിര്‍ദേ
ശങ്ങള്‍ക്കിടയില്‍ നല്‍കിയിരിക്കുന്നു.

തുടങ്ങുക
1: അഥവാ (FRONT > -1) ആണെങ്കില്‍ // ശൂന്യമായ അവസ്ഥ പരിശോധിക്കുന്നു
VAL = Q[FRONT]
FRONT = FRONT + 1
അല്ലെങ്കില്‍

“ക്യൂ ഓവര്‍ ഫ്ളോ” എന്നു പ്രിന്‍റ്‌ ചെയ്യുക
പുറത്തേക്കു പോകുക
അഥവാ (FRONT > REAR) ആണെങ്കില്‍ // അവസാനത്തെ അംഗത്തിന്റെ നീക്കം
ചെയ്യല്‍ പരിശോധിക്കുന്നു
8: FRONT = REAR = -1
9: പുറത്തേക്കു പോകുക

NoOouwPwn

അവസാനിപ്പിക്കുക

DY പ്രവര്‍ത്തങ്ങള്‍ക്ക്‌ വേണ്ടിയുള്ള CH ഫങ്ഷനുകള്‍

൮, Eront, rear എന്നിവ ഗ്ലോബല്‍ വേരിയബിള്‍ ആണെന്ന്‌ കരുതുക

ക്യൂ വില്‍ ഉള്‍പ്പെടുത്തല്‍ പ്രവര്‍ത്തനം ക്യുവില്‍ നീക്കം ചെയ്യല്‍ പ്രവര്‍ത്തനം
void 2൩5 റു (3൩ queue[],int val)]int del q(int queue[]
{ {
if (rear == -1) int val;
{ if (front > -1)
front=0;
rear=0; val=q[front];
q[rear]=val; fronttt;
{
else (if rear < n-1) else
{ cout<<"Underflow";
reartt; if (front > rear)
q[rear]=val;
} front= -1;
else rear= -1
cout<<"Overflow";
} return val;

3. ഡാറ്റ സ്്രക്ചറുകളും പ്രവര്‍ത്തനങ്ങളും

ക്യൂവിന്റെ ഉപയോഗം

ക്യു അധികവും കമ്പ്യൂട്ടര്‍ സയന്‍സില്‍ ജോബ്‌ ആസുത്രണം ചെയ്യുവാന്‍ വേണ്ടിയാണ്‌
ഉപയോഗിക്കുന്നത്‌. മെമ്മറി, പ്രോസസ്സര്‍, ഫയലുകള്‍ മുതലായവ ആസൂധ്തണം
ചെയ്യുന്നതിനാണ്‌ ഓപ്പറേറ്റിംഗ്‌ സിസ്റ്റം ക്യൂ ഉപയോഗിക്കുന്നത്‌. ഇതിന്‌ ഉദാഹരണമാണ്‌
പ്രിന്‍റ്‌ ക്യൂ. പ്രോസെസ്സറിനെ അപേക്ഷിച്ചു പ്രിന്ററിന്‌ വേഗത കുറവായതിനാല്‍ പ്രിന്‍റ്‌ ചെയ്യുവാനുള്ള
ജോലികളെല്ലാം പ്രിന്‍റ്‌ ബഫറില്‍ നിക്ഷേപിക്കുന്നു. (പിന്റ്‌ ബഫര്‍ FIFO തത്വം പിന്തുടരുന്നതിനാല്‍
അതിനെ ഒരു ക്യൂ ആയി കണക്കാക്കാം.

3.3.3 വൃത്താകൃതിയിലുള്ള 2,3 (Circular queue)

നമ്മള്‍ ഇതുവരെ ചര്‍ച്ച Front Rear
ചെയ്ത ക്യൂവിനെ രേ Ls _] Ca]

AND ക്യു എന്നാണ്‌ പറ

QUEUE | 87 | 42 | 64 |
യുക. ഇതിലെ അംഗ
ങ്ങള്‍ ഒരു നേര്‍രേഖയായിട്ട്‌ 5 6 7 3 8
അല്ലെങ്കില്‍ ഒരു നേര്‍വരിയാ ft ft
യിട്ടാണ്‌ കാണപ്പെടുക. ഇത്ത
രം ക്യൂകളുടെ രണ്ടറ്റങ്ങള്‍ ത ചിതം 3.11: തുടര്‍ച്ചയായ 6 അംഗങ്ങ

മ്മില്‍ ഒരിക്കലും കൂട്ടിമുട്ടുക നിക്കം ചെയ്തതിനു ശേഷം 3 അംഗങ്ങളുള്ള ക്യു

യില്ല. രേഖീയ ക്യൂവില്‍ ഒരു

ന്യൂനതയുണ്ട്‌. ചിത്രം 3.11 ല്‍ കൊടുത്തിരിക്കുന്ന,
6 അംഗങ്ങളെ നീക്കം ചെയ്യല്‍ പ്രവര്‍ത്തനങ്ങള്‍
ക്കു വിധേയമായ ക്യൂ പരിഗണിക്കുക. നിലവില്‍
അതില്‍ മൂന്ന്‌ അംഗങ്ങള്‍ മാത്രമേയുള്ളു. സ്വാഭാ
വികമായിട്ടും Front ന്റെ വില 6 ഉം Rear ന്റെ
വില 8 ഉം ആയിരിക്കും.

ആദ്യത്തെ 6 സ്ഥാനങ്ങള്‍ ശുന്യമാണെങ്കിലും ഉള്‍
പ്പെടുത്തല്‍ അല്‍ഗോരിതപ്രകാരം നമുക്ക്‌ ഒരു
അംഗത്തെ മാത്രമേ കൂട്ടിച്ചേര്‍ക്കാന്‍ കഴിയു. അവ
സാനത്തെ സ്ഥാനത്ത്‌ ഒരു അംഗം മാത്രമേ ഉള്ളൂ
എന്ന്‌ കരുതുക. അങ്ങനെയെങ്കില്‍ പുതിയതായി

ഒരു അംഗത്തെ കൂട്ടിച്ചേര്‍ക്കുവാന്‍ ശ്രമിക്കുകയാ കയ്യ,
ണെങ്കില്‍ “ക്യൂ ഓവര്‍ ഫ്‌ളോ” (Queue Overflow)

സംഭവിക്കുന്നു. രേഖീയ ക്യൂവിന്റെ ഈ പരിമിതി Cy

ചിത്രം 3.12: വ്ൃത്താക്ൃതിയിലുള്ള ക്യു

വൃത്താകൃതി ക്യൂ ഉപയോഗിച്ച്‌ പരിഹരിക്കാവു
ന്നതാണ്‌. ചിത്രം 3.12 ല്‍ കാണിച്ചിരിക്കുന്നത്‌

പോലെ രണ്ടറ്റങ്ങളും കൂട്ടി മുട്ടുന്ന ഒരു ക്യൂ ആ Front Rear
ണിത്‌. ca
ചിത്രം 3.13 ല്‍ രണ്ട്‌ അംഗങ്ങളെ നീക്കംചെയ്യല്‍ ചിത്രം 3.13(a): സംഖ്യ നിക്കം

പ്രവര്‍ത്തനങ്ങള്‍ നടത്തി എന്ന്‌ അനുമാനിക്കുക. 7 ത്തതിനു ശേഷമുള്ള ൃത്മാകാര ക്യു

അപ്പോള്‍ Front ന്റെ വില 2 ഉം ചിത്രം 3.13(a) ല്‍ കാണിച്ചിരിക്കുന്നതുപോലെ 4 ശുന്യ
മായ സ്ഥാനങ്ങളും സ്ഥലങ്ങളും നമുക്ക്‌ ലഭിക്കുന്നു. ഈ സ്ഥാനങ്ങളുടെ സൂചികകളുടെ

കമ്പ്യൂട്ടര്‍ സയന്‍സ്‌ - XII

വില യഥാക്രമം 6, 7,0, 1 എന്നിങ്ങനെയായിരിക്കും. നമ്മള്‍ വീണ്ടും രണ്ട്‌ അംഗങ്ങളെ
കൂട്ടിച്ചേര്‍ക്കുകയാണെങ്കില്‍ Rear ന്റെ വില / ആയി മാറുന്നു. ചിത്രം 3.13(b) ല്‍ കാണിച്ചി
രിക്കുന്നതു പോലെ 0,1 എന്നീ സൂചികകളുടെ സ്ഥാനം ഇപ്പോഴും ശുന്യമായിട്ടാണു
ള്ളത്‌. അതിനാല്‍ വീണ്ടും ഉള്‍പ്പെടുത്തല്‍ പ്രവര്‍ത്തനം ഇവിടെ നിര്‍വഹിക്കാവുന്നതാ
ണ്‌. ഇത്തവണ Rear ന്റെ വില 0 ആയി നിശ്ചയിക്കുകയും അതിനു ശേഷം ഉള്‍പ്പെടുത്തല്‍
പ്രവര്‍ത്തനം നിര്‍വഹിക്കുകയും ചെയ്യാവുന്നതാണ്‌. ക്യൂവിന്റെ ഈ അവസ്ഥയെ ചിത്രം
3.13(c) ല്‍ കാണിച്ചിരിക്കുന്നു.

aloo 3.13 (b): Rear ന്‌ അതിമ്റ്‌ ഉയരീന്ന വില ചിത്രം 3.13(¢): Rear ന്‌ അതിന്റെ്‌ തധഴ്‌ന്ന aller

നമുക്ക്‌ വിലയിരുത്താം

1. ഡാറ്റ സ്ര്രക്ചര്‍ എന്നാലെന്ത്‌?
2. ഡാറ്റ ര്രമീകരണത്തിനായി സ്റ്റാക്കില്‍ ഉപയോഗിക്കുന്ന തത്വം
ആകുന്നു.
3. FIFO എന്ന തത്വം ഉപയോഗപ്പെടുത്തുന്ന ഡാറ്റാസ്ര്രക്ചറിന്റെ
പേരെഴുതുക.

4. അറെയിലെ അണ്ടര്‍ഫ്‌ളോ (underflow) എന്നാലെന്ത്‌?

5. സ്റ്റാക്കിന്റെ ഏത്‌ അംഗമാണ്‌ നീക്കം ചെയ്യാന്‍ സാധിക്കുക (ആദ്യ
ത്തേത്‌ അല്ലെങ്കില്‍ അവസാനത്തേത്‌)?

3.4 ലിങ്കഡ്‌ ലിസ്റ്റ (Linked list)

അംഗങ്ങളുടെ എണ്ണത്തിന്‌ പരിമിതിയില്ലാത്ത ഡാറ്റ അംഗങ്ങളുടെ ശേഖരത്തെയാണ്‌
ലിങ്ക്ഡ്‌ ലിസ്റ്റ്‌ എന്ന്‌ പറയുന്നത്‌. അറെകള്‍ ഉപയോഗിച്ച്‌ പ്രാവര്‍ത്തികമാക്കുന്ന യുക്തി
പരമായ ആശയങ്ങള്‍ മാത്രമാണ്‌ കഴിഞ്ഞ ഭാഗങ്ങളില്‍ വിശദീകരിച്ച സ്റ്റാക്ക്‌, ക്യൂ മുതലായ
ഡാറ്റ സ്ര്രക്ചറുകള്‍. അതിനാല്‍ ഇവ സ്ഥിര ഡാറ്റ സ്ദ്രക്ചറുകളാണ്‌. എന്നാല്‍ ലിങ്കഡ്‌
ലിസ്റ്റ്‌ ഒരു പരിവര്‍ത്തനാത്മക ഡാറ്റ സ്ര്രക്ചറാണ്‌. പൂതിയ ഡാറ്റ ഇനങ്ങള്‍ കൂട്ടി
ച്ചേര്‍ക്കുമ്പോള്‍ ഇത്‌ വളരുകയും നീക്കം ചെയ്യുമ്പോള്‍ ചുരുങ്ങുകയും ചെയ്യുന്നു. ലിങ്ക്ഡ്‌
ലിസ്റ്റിന്‌ മുഴുവന്‍ അംഗങ്ങള്‍ക്കും ആവശ്യമായ മെമ്മറി ആദ്യമേ അനുവദിക്കുകയില്ല.

3. ഡാറ്റ സ്ദ്രക്ചറുകളും പ്രവര്‍ത്തനങ്ങളും

ലിസ്റ്റിലേക്ക്‌ ഒരു പുതിയ അംഗത്തെ ഉള്‍പ്പെടുത്തുന്നതിന്‌ തൊട്ടു മുമ്പാണ്‌ ആ
അംഗത്തിന്‌ ആവശ്യമായ മെമ്മറി അനുവദിക്കുന്നത്‌. അതുകൊണ്ടാണ്‌ ഇതിനെ (ഡൈനാ
മിക്‌) ഡാറ്റ സ്്രക്ചറുകളായി കരുതുന്നത്‌. അറെ അധിഷ്ഠിത ഡാറ്റ സ്ര്രക്ചറുകളുമായി
ലിങ്ക്ഡ്‌ ലിസ്റ്റിനുള്ള മറ്റൊരു വൃത്യാസം ലിങ്ക്ഡ്‌ ലിസ്റ്റിലെ അംഗങ്ങള്‍ മെമ്മറിയില്‍ പല
ഭാഗത്തായിട്ടാണ്‌ സംഭരിക്കപ്പെടുന്നത്‌. എന്നാല്‍ അവ പോയിന്ററുകളുടെ സഹായ
ത്തോടെ പരസ്പരം ബന്ധിപ്പിച്ചിരിക്കുന്നു. നമ്മള്‍ അധ്യായം ഒന്നില്‍ പഠിച്ചത്‌ പ്രകാരം
പോയിന്റര്‍ എന്നാല്‍ മെമ്മറി സ്ഥാനങ്ങളുടെ വിലാസം സംഭരിച്ചു വച്ചിരിക്കുന്ന വേരി
യബിളാണ്‌. അപ്പോള്‍ ഒരുകാര്യം വ്യക്തമാണ്‌ ലിജംഡ്‌ ലിസ്റ്റിലെ ഒരു അംഗത്തിന്‌ ഡാ
റ്റയും അഡ്ഡസ്സും ഉണ്ടായിരിക്കും. ലിങ്കഡ്‌ ലിസ്റ്റിലെ ഒരു അംഗത്തെ നോഡ്‌ (Node)
എന്ന്‌ വിളിക്കുന്നു. നോഡില്‍ അടങ്ങിയിരിക്കുന്ന അഡ്ധസ്സിനെ ലിജ; (Link) എന്ന്‌ പറ
യുന്നു.

ഒരു ഡാറ്റയും ലിങ്കും (ലിസ്റ്റിലെ അടുത്ത നോഡിലേക്കുള്ള പോയിന്റര്‍) അടങ്ങിയ നോ
ഡുകളുടെ ശേഖരമാണ്‌ ലിങ്കഡ്‌ ലിസ്റ്റ്‌. അതായത്‌ ലിസ്റ്റിലെ ആദ്യത്തെ നോഡില്‍ ആദ്യ
ത്തെ ഡാറ്റ അംഗവും രണ്ടാമത്തെ നോഡിന്റെ വിലാസവും അടങ്ങിയിരിക്കുന്നു. രണ്ടാ
മത്തെ നോഡില്‍ രണ്ടാമത്തെ ഡാറ്റ അംഗവും മുന്നാമത്തെ നോഡിന്റെ വിലാസവും
അടങ്ങിയിരിക്കുന്നു. ഇപ്രകാരം ലിസ്റ്റ്‌ തുടരുന്നു. അവസാനത്തെ നോഡില്‍ അവസാ
നത്തെ ഡാറ്റയും ഒരു നള്‍ പോയിന്ററും (Null Pointer) അടങ്ങിയിരിക്കുന്നു. എവിടെയും
പോയിന്‍റ്‌ ചെയ്യാത്ത പോയിന്ററാണ്‌ Null Pointer. അങ്ങനെയെങ്കില്‍ ആദ്യത്തെ നോ
ഡിന്റെ വിലാസം എവിടെയാണുണ്ടാകുക? ആദ്യത്തെ നോഡിന്റെ വിലാസം അടങ്ങിയ
ഒരു പ്രത്യേക പോയിന്റര്‍ എല്ലാ ലിഡ്‌ ലിസ്റ്റിലും ഉണ്ടായിരിക്കും. ഇതിനെ സ്റ്റാര്‍ട്ട്‌
(Start) അല്ലെങ്കില്‍ ഹെഡര്‍ (Header) എന്നു പറയുന്നു. അഞ്ച്‌ അംഗങ്ങള്‍ അടങ്ങിയ
ഒരു ലിങ്ക്ഡ്‌ ലിസ്റ്റിനെ ചിത്രം 3.14 ല്‍ പ്രദര്‍ശിപ്പിച്ചിരിക്കുന്നു.

Node1 Node2 Node3 Node4 Node5

ചിതം 3.14: enoanjag388 elle ലിസ്റ്റ്‌

ഡാറ്റയായി ഒരു സംഖ്യയും പോയിന്റര്‍ ആയി അടുത്ത നോഡിലേക്കു ചൂണ്ടിക്കാണി
ക്കുന്ന ലിങ്കും അടങ്ങിയ നോഡുകള്‍ ആണ ചിത്രത്തില്‍ കാണിച്ചിരിക്കുന്നത്‌. എല്ലാ
നോഡുകളുടെയും വലുപ്പം സമമായിരിക്കും. അതായത്‌ ഓരോ നോഡിനു വേണ്ടിയും
മാറ്റി വയ്ക്കുന്ന മെമ്മറി സമമായിരിക്കും.

3.4.1 ലിങ്കഡ്‌ ലിസ്റ്റ്‌ പ്രാവര്‍ത്തികമാക്കല്‍ (Implementation of linked list)

ഓരോ നോഡിനും മെമ്മറി അനുവദിക്കുന്ന നോഡുകളുടെ ശേഖരമാണ്‌ ലിജ:ഡ്‌ ലിസ്റ്റ്‌
എന്ന്‌ നമ്മള്‍ നേരത്തെ കണ്ടു കഴിഞ്ഞു. നോഡിനു വേണ്ടിയുള്ള മെമ്മറിയില്‍ ഏറ്റവും
കുറഞ്ഞത്‌ രണ്ടു തരത്തില്‍പ്പെട്ട ഡാറ്റയാണ്‌ അടങ്ങിയിരിക്കുന്നത്‌, അതില്‍ ഒന്ന്‌
അംഗത്തിന്റെ യഥാര്‍ഥ ഡാറ്റയും രണ്ടാമത്തേത്‌ അടുത്ത നോഡിലേക്കുള്ള പോയിന്ററും
ആയിരിക്കും. വിവിധ തരത്തില്‍പ്പെട്ട ഡാറ്റകള്‍ അടങ്ങിയ ഉപയോക്തൃ നിര്‍വചിതമായ

കമ്പ്യൂട്ടര്‍ സയന്‍സ്‌ - XII

ഡാറ്റ ഇനമാണ്‌ സ്ട്രക്ചര്‍ എന്നത്‌ നാം അധ്യായം ഒന്നില്‍ കണ്ടതാണ്‌. സ്ര്രക്ചറിലെ
അംഗം ഒരു പോയിന്റര്‍ ആകാം എന്ന്‌ മാര്രമല്ല അതേ സ്ര്രക്ചറിലേക്കു സൂചിപ്പിക്കുന്ന
പോയിന്ററുമാകാം. അത്തരം സ്ര്രക്ചറുകളെ സ്വയം സൂചിതസ്ര്രക്ചറുകള്‍ (Self Refer-
ential Sructure) എന്ന്‌ പറയുന്നു. അതായത്‌ സ്വയം സൂചിത സ്ര്രക്ചറുകളുടെ സഹായ

ത്തോടെയാണ്‌ ലിങ്കഡ്‌ ലിസ്റ്റുകള്‍ നിര്‍മ്മിക്കുന്നത്‌. താഴെ പറയുന്ന സ്വയം സൂചിത
സ്ര്രക്ചര്‍ ഉപയോഗിച്ച്‌ ചിത്രം 3.14 ല്‍ കാണിച്ചിരിക്കുന്ന ലിങ്ക്ഡ്‌ ലിസ്റ്റിന്റെ നോഡുകള്‍
രൂപകല്‍പ്പന ചെയ്തിരിക്കുന്നു.
struct Node
{
int data;
Node *link;
he
സ്ര്രക്ചറിന്റെ പേര്‍ Node ആണെന്നും സ്ര്രക്ചറിലെ രണ്ടാമത്തെ അംഗം അതേ സ്6്രക്ച
റിന്റെ തരത്തിലുള്ള ഒരു പോയിന്റര്‍ ആണെന്നും നമുക്ക്‌ കാണാം. താഴെ പറയുന്ന
പ്രസ്താവന ഉപയോഗിച്ച്‌ ആദ്യത്തെ നോഡിനെ സൂചിപ്പിക്കുന്ന Start എന്ന പ്രത്യേക
പോയിന്റര്‍ നിര്‍മിക്കാവുന്നതാണ്‌.

struct Node * Start; or Node *Start;

ചിത്രം 3.15 ല്‍ സ്ദ്രിങുകളുടെ ഒരു ലിങ്ക്ഡ്‌ ലിസ്റ്റ്‌ ആണ്‌ കാണിച്ചിരിക്കുന്നത്‌. ഇതിലെ
നോഡുകളുടെ ഡാറ്റ സ്ദ്രിങുകള്‍
ഉപയോഗിച്ചും ലിങ്കുകള്‍ മറ്റു നോ
ഡുകളുടെ വിലാസം ഉപയോഗിച്ചും
നിറച്ചിരിക്കും. ശ്രദ്ധിക്കേണ്ട കാര്യം
ഇവിടെ വിലാസങ്ങള്‍ എന്നത്‌ അനു
മാനിച്ചിരിക്കുന്ന ചില സംഖ്യകള്‍
ആണ്‌. ഈ നോഡുകളെ താഴെ
പറയുന്ന സ്ര്രക്ചര്‍ ഉപയോഗിച്ച്‌
പ്രതിനിധീകരിക്കാവുന്നതാണ്‌.

Start

struct Node

{

char data[10];

Node *link; 1500
}; alo 3.15: eiloxas engy പ്രാവരീത്തികമാക്കാത്മ്‌

പ്രവര്‍ത്തന സമയത്ത്‌ ആദ്യത്തെ നോഡിന്‌ 1000 എന്ന വിലാസമുള്ള മെമ്മറി സ്ഥാനം
നീക്കിവയ്ക്കുന്നതായി അനുമാനിക്കുക. അതിനാല്‍ Start പോയിന്ററിന്റെ വില 1000
ആയിരിക്കും. ഒന്നാമത്തെ നോഡിന്റെ ഡാറ്റ ഭാഗത്തു "Sonu" എന്ന സ്ര്രിങ്‌ സംഭരിച്ചി
രിക്കുന്നു. രണ്ടാമത്തെ നോഡിന്‌ 1200 എന്ന മെമ്മറി വിലാസമാണ്‌ നല്‍കിയിരിക്കുന്നത്‌.
അതിന്റെ ഡാറ്റ ഭാഗത്തു "Nived" എന്ന വില സംഭരിച്ചിരിക്കുന്നു. രണ്ടാമത്തെ നോഡ്‌

3. ഡാറ്റ സ്ദ്രക്ചറുകളും പ്രവര്‍ത്തനങ്ങളും

ആയതിനാല്‍ ആദ്യത്തെ നോഡിന്റെ eile ഭാഗത്ത്‌ ഈ നോഡിന്റെ ആരഡസ്‌ സംഭരി
ച്ചിരിക്കുന്നു. ചിര്രത്തില്‍ കാണിച്ചിരിക്കുന്നതു പോലെ അവസാനത്തെ നോഡില്‍
ലിങ്കിന്റെ സ്ഥാനത്ത്‌ NULL പോയിന്‍റ്റര്‍ ആയിരിക്കും ഉണ്ടായിരിക്കുക.

3.4.2 ലിങ്കഡ്‌ ലിസ്റ്റിലെ പ്രവര്‍ത്തനങ്ങള്‍ (Operations on linked list)

ഭാഗം 3.1.2 ല്‍ പ്രതിപാദിച്ചിരിക്കുന്ന എല്ലാ പ്രവര്‍ത്തനങ്ങളും ഉപാധികളില്ലാതെ ലിങ്ക്ഡ്‌
ലിസ്റ്റില്‍ ചെയ്യുവാന്‍ സാധിക്കുന്നതാണ്‌. പക്ഷേ നിര്‍മാണം, കടന്നുപോകല്‍, ഉള്‍പ്പെ
ടുത്തല്‍, നീക്കം ചെയ്യല്‍ എന്നീ പ്രവര്‍ത്തനങ്ങളെപ്പറ്റി മാര്രമേ നമ്മള്‍ ഇവിടെ ചര്‍ച്ച
ചെയ്യുന്നുള്ളു. ഉപരിപഠന സമയത്തു ബാക്കി പ്രവര്‍ത്തനങ്ങളെപ്പറ്റി നിങ്ങള്‍ പഠിക്കു
ന്നതാണ്‌.

a. ലിങ്ക്ഡ്‌ ലിസ്സിന്റെ നിര്‍മാണം (Creation of linked list)
തുടക്കത്തില്‍ നമുക്ക്‌ സ്വയം സൂചകമായി ഒരു സ്ര്രക്ചര്‍ നിര്‍വചിക്കേണ്ടതുണ്ട്‌. Start
അല്ലെങ്കില്‍ Header എന്ന ഒരു പോയിന്റര്‍ വേരിയബിളിനെ നിര്‍വചിച്ച്‌ നള്‍ (NULL)

എന്ന വില നല്‍കുന്നു. ഇനി ആവശ്യകതയനുസരിച്ച്‌ നോഡുകള്‍ക്കുള്ള മെമ്മറി അസ്ഥിര
മായി നീക്കിവച്ചുകൊണ്ട്‌ ലിങ്കഡ്‌ ലിസ്റ്റ്‌ നിര്‍മിക്കാം.

താഴെ പറയുന്ന ഘട്ടങ്ങള്‍ വികസിപ്പിക്കുവാന്‍ സാധിക്കുമോ എന്ന്‌ പരിശോധിക്കുക.

ഘട്ടം 1: ഒരു നോഡ്‌ നിര്‍മിച്ച്‌ അതിന്റെ മെമ്മറി വിലാസം ലഭ്യമാക്കുക.
ഘട്ടം 2: ഡാറ്റയും NULL എന്ന വിലയും നോഡില്‍ സംഭരിക്കുക.

ലിങ്കഡ്‌ ലിസ്റ്റ്‌ നിര്‍മാണ സമയത്തെ അവസ്ഥയാണ്‌ ചിത്രം 3.16 ല്‍
കാണിച്ചിരിക്കുന്നത്‌. Node എന്ന പേരുള്ള ഒരു സ്വയം സൂചിത സ്ര്ര
ക്ചര്‍ നിര്‍മിച്ചതായും Start എന്ന NULL തരത്തില്‍പ്പെട്ട പോയിന്ററിനു
Node എന്ന വില നല്‍കിയതായും നമുക്ക്‌ അനുമാനിക്കാം. ഇനി
താഴെ പറയുന്ന ചിത്രങ്ങള്‍ നിരീക്ഷിച്ച്‌ ലിങ്ക്ഡ്‌ ലിസ്റ്റ്‌ നിര്‍മാണത്തിനാ
വശ്യമായ നടപടിക്രമം തയാറാക്കുക.

നമുക്കു ചെയ്യാം

കമ്പ്യൂട്ടര്‍ സയന്‍സ്‌ - XII

Start Start

Da
ലിങ്ക്ഡ്‌ ലിസ്റ്‌ ശൂന്യം [25

2000

ഒന്നാമത്തെ നോഡിന്റെ വിലാസം

ഇ അനു സ്താര്‍ട്ടില്‍ സംഭരിക്കുന്നു

2000
ആദ്യനോഡ്‌ നിര്‍മിക്കുന്നു. ഡാറ്റയ്ക്കും
ലിങ്കിനും നല്‍കുന്നു.

Data

[34 _| Start

2300 2000 2300

രങാമത്തെ നോഡ്‌ നിര്‍മിക്കുന്നു. രങാമത്തെ നോഡിന്റെ വിലാസം
ാറ്റയ്ക്കും ലിങ്കിനും വില നല്‍കുന്നു. ഒന്നാമത്തെ നോഡിന്റെ ലിങ്കില്‍ സംഭരിക്കുന്നു.
Data

Start

xr
eh Sef So

3000 2000 2300 3000
മൂന്നാമത്തെ നോഡ്‌ നിര്‍മിക്കുന്നു. ഒന്നാമത്തെ നോഡിന്റെ വിലാസം
ാറ്റയ്ക്കും ലിങ്കിനും വില നല്‍കുന്നു. ദങ്മത്തെ നോഡിന്റെ ലിങ്കില്‍ സംഭരിക്കുന്നു.

ചത്രം 3.16: ലിമമ്ഡ്‌ elgy നിര്‍മാണത്തിന്റെ തുകരീച്ചയായ (പവരിത്മനങ്ങശി

ഘട്ടം 3: അത്‌ ആദ്യത്തെ നോഡ്‌ ആണെങ്കില്‍ അതിന്റെ വിലാസം node ല്‍ സംഭരിക്കുക.

ഘട്ടം4: അത്‌ ആദ്യത്തെ നോഡ്‌ അല്ലെങ്കില്‍ അതിന്റെ വിലാസം തൊട്ടു മുമ്പത്തെ
നോഡിന്റെ ലിങ്കില്‍ സംഭരിക്കുക.

ഘട്ടം 5: ഉപയോക്താവിന്റെ ആവശ്യാനുസരണം ഘട്ടം 1 മുതല്‍ 4 വരെ ആവര്‍ത്തി
ക്കുക.

യഥാര്‍ഥത്തില്‍ ലിങ്ക്ഡ്‌ ലിസ്റ്റിന്റെ നിര്‍മാണം എന്നത്‌ ലിങ്ക്ഡ്‌ ലിസ്റ്റിന്റെ അവസാന

ഭാഗത്ത്‌ ആവര്‍ത്തിച്ചു നടത്തുന്ന ഉള്‍പ്പെടുത്തല്‍ പ്രവര്‍ത്തനം ആണ്‌. രണ്ടാമത്തെ നോഡ്‌

മുതല്‍ ഉള്‍പ്പെടുത്തല്‍ പ്രവര്‍ത്തനം ചെയ്യണമെങ്കില്‍ നിലവിലുള്ള ലിസ്റ്റിലെ അവസാ

നത്തെ അംഗത്തിന്റെ വിലാസം ലഭിക്കുന്നതിനാവശ്യമായ കടന്നുപോകല്‍ പ്രവര്‍ത്തനം

നടത്തണം. അതിനാല്‍ കടന്നുപോകല്‍ പ്രവര്‍ത്തനത്തെപ്പറ്റി നമുക്ക്‌ വിശദമായി ചര്‍ച്ച

ചെയ്യാം.

1. ലിഭ്ഡ്‌ ലിസ്സിലൂടെ കടന്നുപോകുന്നു (Traversing a linked list)

നമുക്കറിയാം ഒരു ഡാറ്റ സ്ദ്രക്ചറില്‍ കടന്നുപോകല്‍ എന്നാല്‍ അതിലുള്ള എല്ലാ അംഗ
ങ്ങളെയും സന്ദര്‍ശിക്കലാണ്‌. GND ലിസ്റ്റുകളുടെ കാരൃത്തില്‍ യാത്ര ചെയ്യല്‍ ആരംഭി
ക്കുന്നത്‌ ആദ്യത്തെ നോഡ്‌ മുതലാണ്‌. ആദ്യത്തെ നോഡിന്റെ വിലാസം arrow എന്ന

3. ഡാറ്റ സ്ദ്രക്ചറുകളും പ്രവര്‍ത്തനങ്ങളും

പോയിന്‍റ്ററില്‍ നിന്നും ലഭിക്കുന്നു. ഇതുപയോഗിച്ച്‌ ആരോ (—>) ഓപ്പറേറ്ററിന്റെ സഹാ
യത്തോടെ നമുക്ക്‌ ഡാറ്റ ഭാഗത്തെ ലഭ്യമാക്കാം. ശേഷം രണ്ടാമത്തെ നോഡിന്റെ വിലാസം
അടങ്ങിയ ആദ്യത്തെ നോഡിന്റെ ലിങ്ക: ഭാഗത്തെ ഉപയോഗപ്പെടുത്തുന്നു. ഈ വിലാസം
ഉപയോഗിച്ച്‌ രണ്ടാമത്തെ നോഡിലെ ഡാറ്റയും ലിങ്കും ലഭ്യമാക്കുന്നു. നോഡിന്റെ ലിങ്കില്‍
NULL ലഭിക്കുന്നത്‌ വരെ ഈ ല്രക്രിയ തുടരുന്നു.

താഴെ പറയുന്ന ഘട്ടങ്ങള്‍ നിങ്ങള്‍ക്ക്‌ നിര്‍വചിക്കാന്‍ കഴിയുന്നുണ്ടോ എന്ന്‌ പരിശോ
ധിക്കുക.

ഘട്ടം 1: ആദ്യത്തെ നോഡിന്റെ വിലാസം Start ല്‍ നിന്നും Temp ലേക്ക്‌ സംഭരിക്കുക.

ചിത്രം 3.17 ല്‍ നല്‍കിയിരിക്കുന്ന ലിങ്കഡ്‌ ലിസ്റ്റ്‌ നിരീക്ഷിച്ച്‌ wow

ചെയ്യല്‍ പ്രവര്‍ത്തനത്തിന്‌ വേണ്ട ഘട്ടങ്ങള്‍ നമുക്ക്‌ നിര്‍വചിക്കാം.

Node തരത്തില്‍പ്പെട്ട ഒരു പോയിന്റര്‍ ആണ്‌ TEMP എന്നും VAL എന്നത്‌

നോഡില്‍ നിന്നുമുള്ള ഡാറ്റ സംഭരിക്കാനാവശ്യമായ ഒരു വേരിയബിള്‍
നമുക്കു ചെയ്യാം ആണെന്നും കരുതുക.

Start

2000 2300 3000
മൂന്ന്‌ നോഡുകളുള്ള ഒരു ലിങ്ക്ഡ്‌ ലിസ്റ്‌

25] Capt] [ pon]

2000 2300 3000
Start ന്റെ ഉള്ളടക്കം Temp ല്‍ സംഭരിക്കുന്നു.

ഉഷോര്‍ Temp ന്‌ ഒന്നാമത്തെ നോഡിനെ പ്രതിനിധീകരിക്കാം.

Temp ഉപയോരിച്ച്‌ ഒന്നാമത്തെ നോഡിലെ ഡാറ്റ തിരിച്ചെടുക്കുന്നു.
രണ്ടാമത്തെ നോഡിന്റെ വിലാസം ഉപര്‍യോരിച്ച്‌ Temp നെ പുതുക്കുന്നു.

Temp ഉപയോഗിച്ച്‌ രണ്ടാമത്തെ നോഡിലെ ഡാറ്റ
തിരിച്ചെടുക്കുന്നു. മൂന്നാമത്തെ നോഡിന്റെ
വിലാസം ഉപയോശിച്ച്‌ Temp നെ പുതുക്കുന്നു.

കമ്പ്യൂട്ടര്‍ സയന്‍സ്‌ - XII

Start

Stef ജി Oe

aoe 2300 =I
Temp ഉപയോകിച്ച്‌ മൂന്നാമത്തെ ഭനാഡിലെ ഡാറ്റ തിരിച്ചെടുക്കുന്നു.
മൂന്നാമത്തെ നോഡിന്റെ ലിങ്ക്‌ ഭാരത്തെ വിലാസം ഉപയോശിച്ച്‌
Temp പുതുക്കുന്നു. അത്‌ നർ ആയതിനാല്‍ കടന്നുപോകല്‍
അവസാനിക്കുന്നു

Eas

ചിതം 3.17: ലിങ്ക്ഡ്‌ ചിസ്ണ്റിലുടെ കടന്നുപോകുന്ന രവരിത്മനം

ഘട്ടം 2: Temp ലെ വിലാസം ഉപയോഗിച്ച്‌ ആദ്യത്തെ നോഡിന്റെ ഡാറ്റ Val ലില്‍
സംഭരിക്കുക.

ഘട്ടം 3: ഈ നോഡിന്റെ eile ഭാഗത്തെ വിലാസം (അതായത്‌ അടുത്ത നോഡിന്റെ
വിലാസം?) Temp ലേക്ക്‌ സ്വീകരിക്കുക.

ഘട്ടം4: Temp ലെ വിലാസം NULL അല്ലെങ്കില്‍ ഘട്ടം 2 ലേക്ക്‌ പോകുക അല്ലെങ്കില്‍
അവസാനിപ്പിക്കുക.

Start ന്റെ വില NULL അല്ലാത്ത സാഹചര്യത്തില്‍ ഒരു ലിങ്ക്‌ഡ്‌ ലിസ്റ്റിനെ നിര്‍മിക്കാന്‍
മേല്‍പ്പറഞ്ഞ ഘട്ടങ്ങള്‍ ഉപയോഗിക്കുന്നു. ഇത്തരം സാഹചര്യത്തില്‍ അവസാനത്തെ
നോഡിന്റെ വിലാസം കണ്ടുപിടിക്കേണ്ടതുണ്ട്‌. എന്തിനെന്നാല്‍ പൂതിയ നോഡിന്റെ
വിലാസം അതിന്റെ eile ഭാഗത്താണ്‌ സംഭരിക്കേണ്ടത്‌. Start ല്‍ നിന്നും ആദ്യത്തെ
നോഡിന്റെ വിലാസം സ്വീകരിച്ചുകൊണ്ടാണ്‌ യാത്രചെയ്യല്‍ പ്രവര്‍ത്തനം ആരംഭിക്കു
ന്നത്‌. ഈ വിലാസം താല്‍ക്കാലിക പോയിന്റര്‍ വേരിയബിളിലേക്ക്‌ പകര്‍ത്തുകയും (ചി
ത്രത്തില്‍ Temp) പിന്നീട്‌ Temp ചുണ്ടുന്ന നോഡിലെ ലിങ്‌ ഭാഗത്തുള്ള വിലാസം പകര്‍
ത്തിയെടുത്തു. താല്‍ക്കാലിക പോയിന്‍റ്റര്‍ വേരിയബിള്‍ പുതുക്കപ്പെടുകയും ചെയ്യുന്നു.
Temp ചൂണ്ടുന്ന നോഡിന്റെ eile ഭാഗത്തു നള്‍ വില ലഭിക്കുന്നത്‌ വരെ ഈ സന്ദര്‍ശനം
തുടര്‍ന്ന്‌ കൊണ്ടേയിരിക്കുന്നു.

c. ലിങ്ക്ഡ്‌ ലിസ്സിലെ ഉര്‍കെടുത്തല്‍ പ്രവര്‍ത്തനം (Insertion in a linked list)

ലിങ്ക്ഡ്‌ ലിസ്റ്റില്‍ ഒരു അംഗത്തെ ഉള്‍പ്പെടുത്തല്‍ എന്നാല്‍ ആ അംഗം ഉള്‍പ്പെടുന്ന
നോഡിനെ നിശ്ചിതസ്ഥാനത്തു സ്ഥാപിക്കുന്ന പ്രക്രിയയാണ്‌. അറെയിലേതു പോലെ

ലിങ്കഡ്‌ ലിസ്റ്റില്‍ നോഡിനെ എവിടെ വേണമെങ്കിലും ഉള്‍പ്പെടുത്താവുന്നതാണ്‌.
തുടക്കത്തിലോ, അവസാനത്തിലോ അല്ലെങ്കില്‍ രണ്ടു നോഡുകള്‍ക്കിടയിലോ ആകാം.

ഉള്‍പ്പെടുത്തല്‍ പ്രവര്‍ത്തനത്തിന്‌ താഴെ പറയുന്ന ഘട്ടങ്ങള്‍ നിര്‍വചിക്കാം:
ഘട്ടം 1: നോഡ്‌ നിര്‍മിച്ച്‌ അതിന്റെ വിലാസം Temp ല്‍ സംഭരിക്കുന്നു.
ഘട്ടം 2: Temp ഉപയോഗിച്ച്‌ ഈ നോഡിന്റെ ഡാറ്റാഭാഗവും ലിജ; ഭാഗവും സംഭരിക്കുക.

ആരംഭത്തില്‍ മൂന്ന്‌ നോഡുകളുള്ള ഒരു ലിങ്കഡ്‌ ലിസ്റ്റിന്റെ മൂന്നാം സ്ഥാന
ത്തേക്കു നോഡിനെ ഉള്‍പ്പെടുത്താനുള്ള പ്രവര്‍ത്തനങ്ങളാണ്‌ ചിത്രം 3.18ല്‍
കാണിച്ചിരിക്കുന്നത്‌. ചിത്രം നിരീക്ഷിച്ചു ലിങ്കഡ്‌ ലിസ്റ്റിലേക്ക്‌ ഒരു നോഡിനെ
ഉള്‍പ്പെടുത്താനുള്ള പ്രവര്‍ത്തനത്തിന്റെ ഘട്ടങ്ങള്‍ നമുക്ക്‌ നിര്‍വചിക്കാം. [100൦
തരത്തില്‍പ്പെട്ട പോയിന്റുകളാണ്‌ Temp, PreNode, PostNode എന്നിവ എന്നും
POS നോഡിനെ ഉള്‍പ്പെടുത്തേണ്ട സ്ഥാനം സംഭരിച്ചിരിക്കുന്ന വേരിയബിള്‍
ആണെന്നും നമുക്ക്‌ അനുമാനിക്കാം.

നമുക്കു ചെയ്യാം

3. ഡാറ്റ സ്ദ്രക്ചറുകളും പ്രവര്‍ത്തനങ്ങളും

Start

[= [aot] [ [ot

2000 2300 3000
മുന്ന്‌ നോഡുള്ള ഒരു ലിങ്ക്ഡ്‌ ely

3500 3500

പുതിയ നോഡ്‌ നിര്‍മിച്ച്‌ വിലാസം Temps സംഭരിക്കുന്നു പുതിയ നോഡിന്റെ ഡാറ്റ ഭാരത്തിനും
ലിങ്ക്‌ ഭാരത്തിനും വില നല്‍കുന്നു

Start

Ca) [൦]

2000 2300 3000
രണ്ടാമത്തെ നോഡിന്റെ വിലാസം PreNode ല്‍
സംഭരിക്കുന്നു. മൂന്നാമത്തെ 8നാഡിന്റെ

വിലാസം PostNode ലും PreNode PostNode

Temp ല്‍ ഉള്ള പുതിയ നോഡിന്റെ
[ 23004 വിലാസം രണ്ടാമത്തെ നോഡിന്റെ
PreNode ലിങ്ക്‌ Many സംഭരിക്കുന്നു. PostNode

Start

[2000
കട്‌] (a py
2000 2300

PreNode ല്‍ ഉള്ള നാലാമത്തെ നോഡിന്റെ വിലാസം
പുതിയ നോഡിന്റെ ലിങ്ക്‌ ഭാഥത്തും സംഭരിക്കുന്നു. PostNode

Start

[a0
Ce) Cap] La boll

2000 2300 3500 3000
മൂന്നാമത്തെ സ്ഥാനത്ത്‌ പുതിയ നോഡ്‌ ഉള്‍ക്കൊള്ളിച്ച ശേഷം ഉള്ള അവസ്ഥ

alo 3.18: ലിഡ്‌ elgyloes ഉശീപ്പെടുത്തത്‌ (പവരിത്തനം

കമ്പ്യൂട്ടര്‍ സയന്‍സ്‌ - XII

ഘട്ടം 3: യാത്ര ചെയ്യല്‍ (പവര്‍ത്തനത്തിന്റെ സഹായത്തോടെ (POS-1), (0051) എന്നീ
സ്ഥാനങ്ങളിലുള്ള നോഡുകളുടെ വിലാസം യഥാക്രമം PreNode, PostNode
എന്നീ പോയിന്ററുകളിലേക്കു സ്വീകരിക്കുക.

ഘട്ടം 4: Temp (POS-1) സ്ഥാനത്തുള്ള നോഡ്‌) ന്റെ link ഭാഗത്തിലേക്കു PreNode
(പുതിയ നോഡ്‌) ന്റെ വിലാസം സംഭരിക്കുക.

ഘട്ടം 5: Temp (പുതിയ നോഡ്‌) ന്റെ link ഭാഗത്തിലേക്കു PostNode (POS+1) സ്ഥാന
ത്തുള്ള നോഡ്‌) ന്റെ വിലാസം സംഭരിക്കുക.

d. ലിങ്ക്ഡ്‌ ലിസ്സില്‍ നിന്നും നീക്കം ചെയ്യല്‍ (Deletion from a linked list)

ലിങ്കഡ്‌ ലിസ്റ്റിലുള്ള ഒരു അംഗത്തെ നീക്കം ചെയ്യല്‍ എന്നാല്‍ ലിസ്റ്റില്‍ നിന്നും ഒരു
നോഡിനെ ഒഴിവാക്കുന്ന പ്രക്രിയയാണ്‌. നീക്കം ചെയ്യാനുള്ള നോഡിന്റെ സ്ഥാനം
നല്‍കിയിട്ടുണ്ടായിരിക്കും. അതിനു പകരം ഡാറ്റയാണ്‌ നല്‍കിയിരിക്കുന്നതെങ്കില്‍, ആ
ഡാറ്റ അടങ്ങിയ നോഡ്‌ തിരഞ്ഞു കണ്ടുപിടിക്കുകയും അതിന്റെ സ്ഥാനം കണ്ടെത്തേ
ണ്ടതുമാണ്‌. അതിനുശേഷം നീക്കം ചെയ്യല്‍ പ്രവര്‍ത്തനത്തിനുള്ള നടപടിക്രമങ്ങള്‍ നടപ്പി
ലാക്കേണ്ടതാണ്‌. ലിസ്റ്റിലെ ഏതു നോഡിനെയും നീക്കം ചെയ്യുന്നതിന്‌ സാധ്യമാണ്‌.
ഒന്നാമത്തെ നോഡാണ്‌ നീക്കം ചെയ്യേണ്ടതെങ്കില്‍ ഒന്നാമത്തെ നോഡിലെ link ലെ
വിലാസം START ലേക്ക്‌ സംഭരിക്കണം. അതുപോലെ അവസാനത്തെ നോഡാണ്‌ നീക്കം
ചെയ്യേണ്ടതെങ്കില്‍ അവസാനത്തേതിന്റെ തൊട്ടു മുമ്പുള്ള നോഡിലെ link ന്റെ വില
NULL ആയി സംഭരിക്കണം. ഒരു പ്രത്യേക സ്ഥാനത്തുള്ള നോഡിനെ നീക്കം ചെയ്യുന്ന
തിന്‌ ആവശ്യമായ നടപടിക്രമങ്ങള്‍ നമുക്ക്‌ ചര്‍ച്ച ചെയ്യാം.

നീക്കം ചെയ്യല്‍ പ്രവര്‍ത്തനത്തെ നിര്‍വചിക്കാന്‍ താഴെ പറയുന്ന നടപടികള്‍ നിങ്ങളെ
സഹായിക്കുന്നു.

ഘട്ടം 1: കടന്നുപോകല്‍ പ്രവര്‍ത്തനത്തിന്റെ സഹായത്തോടെ (POS-1), (POS+1) എന്നീ
സ്ഥാനങ്ങളിലുള്ള നോഡുകളുടെ വിലാസം യഥാക്രമം PreNode, PostNode
എന്നീ പോയിന്ററുകളിലേക്കു സ്വീകരിക്കുക.

തുടക്കത്തില്‍ നാല്‍ നോഡുകളുള്ള ലിങ്കഡ്‌ ലിസ്റ്റില്‍ നിന്നും മൂന്നാ
മത്തെ നോഡിനെ നീക്കം ചെയ്യാനുള്ള നടപടികളാണ്‌ ചിത്രം 3.190ല്‍
പ്രതിപാദിച്ചിരിക്കുന്നത്‌. ചിത്രം നിരീക്ഷിച്ച്‌ ലിങ്കഡ്‌ ലിസ്റ്റില്‍ നിന്നും
ഒരു നോഡിനെ നീക്കം ചെയ്യാനുള്ള പ്രവര്‍ത്തനത്തിന്റെ ഘട്ടങ്ങള്‍
നമുക്ക്‌ നിര്‍വചിക്കാം. Node തരത്തില്‍പ്പെട്ട പോയിന്ററുകളാണ്‌
PreNode, PostNode എന്നിവ എന്നും POS നോഡിനെ നീക്കം ചെ
യ്യേണ്ട സ്ഥാനം സംഭരിച്ചിരിക്കുന്ന വേരിയബിള്‍ ആണെന്നും നമുക്ക്‌
അനുമാനിക്കാം.

കമ

നമുക്കു ചെയ്യാം

3. ഡാറ്റ സ്ദ്രക്ചറുകളും പ്രവര്‍ത്തനങ്ങളും

Start

C=) Ca] La Toll

2000 2300 3500 3000
നാല്‌ നോഡുകള്‍ ഉള്ള ലിങ്ക്ഡ്‌ ely

രണ്ടാമത്തെ നോഡിന്റെ വിലാസം
27പ്വഠഠിേലും നാലാമത്തെ

PreNode നോഡിന്റെ വിലാസം PostNode postNode
-ലും സംഭരിക്കുന്നു.

PostNode ല്‍ ലഭ്യമായ നാലാമത്തെ നോഡിന്റെ വിലാസം
രണ്ടാമത്തെ നോഡിന്റെ ലിങ്ക്‌ ദാത്ത്‌ സംഭരിക്കുന്നു.
മൂന്നാമത്തെ നോഡ്‌ ലിസ്്ില്‍ നിന്ന്‌ നീക്കം ചെയ്യകെടുന്നു.

Start

നി] [൨ [ടൂ

2000 2300 3000

മൂന്നാമത്തെ നോഡ്‌ നീക്കം ചെയ്ത ശേഷം ഉള്ള ലിങ്ക്ഡ്‌ ലിസ്റ്‌

ചിതം 3.19: ഛഫിങ്കഡ്‌ E/T IAL! നിക്കം ചെയ്തത്‌ (പവരീത്മനം

ഘട്ടം 2: PostNode ((POS+1) സ്ഥാനത്തുള്ള നോഡ്‌) ന്റെ link ഭാഗത്തിലേക്കു PreNode
((POS-1) സ്ഥാനത്തുള്ള നോഡിന്റെ വിലാസം സംഭരിക്കുക.

ഘട്ടം 3: POS സ്ഥാനത്തുള്ള നോഡിനെ മെമ്മറിയില്‍ നിന്നും ഒഴിവാക്കുക.

ചിത്രം 3.19 ല്‍ സുചിപ്പിച്ചിരിക്കുന്ന ആദ്യത്തെ രണ്ടു ഘട്ടങ്ങള്‍ പാലിച്ച്‌ മുന്നാമത്തെ
നോഡിനെ രണ്ടാമത്തേതില്‍ നിന്നും വേര്‍പ്പെടുത്തിയാലും, മൂന്നാമത്തെ നോഡ്‌ നാലാമ
ത്തേതിലേക്കു ചുണ്ടിക്കൊണ്ട്‌ മെമ്മറിയില്‍ത്തന്നെ അവശേഷിക്കുന്നു. അതിനാല്‍ പ്രോ
ഗ്രാമിങ്‌ ഭാഷകളിലെ മെമ്മറി സ്വാത്രന്ത്രമാക്കല്‍ സംവിധാനങ്ങള്‍ ഉപയോഗപ്പെടുത്തി
ആ നോഡിനെ നീക്കം ചെയ്യേണ്ടതാണ്‌. അതുപോലെ ലിങ്കഡ്‌ ലിസ്റ്റുകളില്‍ പ്രവര്‍ത്ത
നങ്ങള്‍ നടത്തുമ്പോള്‍ പ്രവര്‍ത്തനത്തിന്‌ ശേഷം TEMP, PreNode, PostNode മുതലായ
താല്‍ക്കാലിക പോയിന്ററുകളും സ്വത്ര്്രമാക്കപ്പെടേണ്ടവയാണ്‌.

പുരോഗതി ഇതുവരെ
1. ഡൈനാമിക്‌ ഡാറ്റാസ്ര്രക്ചറിന്‌ ഒരു ഉദാഹരണം പറയുക.
2. ലിങ്ക്ഡ്‌ ലിസ്റ്റ്‌ എന്നാലെന്ത്‌?

3. ഒരു ലിങ്കഡ്‌ ലിസ്റ്റിന്റെ നോഡില്‍ ഉം ഉം അടങ്ങി
യിരിക്കും.

4. ഒരു ലിങ്ക്ഡ്‌ ലിസ്റ്റിലെ നോഡിനെ നിര്‍വചിക്കാന്‍ ഉപയോഗിക്കുന്ന
പ്രോഗ്രാമിങ്‌ ഭാഷയിലെ സംവിധാനം ഏതാണ്‌?

5. ഒരു ലിങ്കഡ്‌ ലിസ്റ്റില്‍ Start അല്ലെങ്കില്‍ Header ന്റെ ഉള്ളടക്കം
എന്തായിരിക്കും?

ക നമുക്ക്‌ സംഗ്രഹിക്കാം

ഡാറ്റസ്ര്രക്ചറുകള്‍ എന്ന ആശയത്തെയും അവയുടെ മേല്‍ നടപ്പിലാക്കാവുന്ന പ്രവര്‍ത്ത
നങ്ങളെയും നമ്മള്‍ പരിചയപ്പെട്ടു. ഏതു തരത്തിലുള്ള ഡാറ്റയെയും പ്രതിനിധീകരിക്കാന്‍
അനുയോജ്യമായ വ്യത്യസ്തങ്ങളായ ഡാറ്റ സ്ദ്രക്ചറുകളുണ്ട്‌. ഇവയില്‍ ഉപയോഗിക്കുന്ന
പ്രവര്‍ത്തനങ്ങളും അംഗങ്ങളെ ഗണങ്ങളാക്കാന്‍ ഉപയോഗിക്കുന്ന തത്വത്തിനനുസരിച്ചു
വ്ൃത്യാസപ്പെട്ടിരിക്കും. ചില ഡാറ്റാ സ്ദ്രക്ചറുകള്‍ യുക്തിപരമായ ആശയങ്ങള്‍ മാത്രമാ
ണെങ്കിലും അവയുടെ നടപ്പിലാക്കലിനെക്കുറിച്ചും നമ്മള്‍ ചര്‍ച്ച ചെയ്തു. അറെയും
ലിങ്ക്ഡ്‌ ലിസ്റ്റും തമ്മിലുള്ള വൃത്യാസങ്ങളെപ്പറ്റിയും ചര്‍ച്ചയില്‍ പരാമര്‍ശിച്ചിരുന്നു.
കമ്പ്യൂട്ടര്‍ സയന്‍സിന്റെ ഉപരിപഠനത്തിനു ഈ അധ്യായത്തില്‍ പറഞ്ഞ ആശയങ്ങള്‍
വളരെ വേണ്ടപ്പെട്ടവയാണ്‌.

3. ഡാറ്റ സ്ദ്രക്ചറുകളും പ്രവര്‍ത്തനങ്ങളും

നമുക്ക്‌ പരിശോധിക്കാം

1.

nO Fe Y

താഴെ പറയുന്ന പ്രസ്താവനകള്‍ വായിക്കുക:

(i) ഒറ്റ ഘടകമായി പ്രോസസ്‌ ചെയ്യപ്പെടുന്ന ഡാറ്റയുടെ ശേഖരം.

(it) അറെ ഉപയോഗിച്ചാണ്‌ എല്ലാ ഡാറ്റ സ്ര്രക്ചറുകളും പ്രാവര്‍ത്തികമാക്കി
യിരിക്കുന്നത്‌.

(iti) സ്റ്റാക്ക്‌, ക്യൂ എന്നിവ യുക്തിസഹമായ ആശയങ്ങളും അറെ, eilesad
ലിസ്റ്റ്‌ എന്നിവ ഉപയോഗിച്ച്‌ പ്രാവര്‍ത്തികമാക്കിയവയുമാണ്‌.

(iv) സ്റ്റാറ്റിക്‌ ഡാറ്റ സ്ദ്രക്ചറുകളുടെ കാര്യത്തില്‍ ഓവര്‍ഫ്‌ളോ സംഭവി
ക്കുന്നു.

മുകളില്‍ കൊടുത്തിരിക്കുന്ന പ്രസ്താവനകളില്‍ ഏതാണ്‌ ശരിയായിട്ടുള്ളത്‌? ഏറ്റവും

ഉചിതമായത്‌ തിരഞ്ഞെടുക്കുക.

a. പ്രസ്താവനകള്‍ (1), (2) മാത്രം b. പ്രസ്താവനകള്‍ (1), (2), (2) മാത്രം

൦. പ്രസ്താവനകള്‍ (1), (iil), (Iv) മാത്രം 0. പ്രസ്താവനകള്‍ (1), (2), (IV) മാത്രം

ഡാറ്റ സ്ര്രക്ചറുകള്‍ സ്റ്റാറ്റിക്കോ ഡൈനാമിക്കോ ആവാം.

A. സ്റ്റാറ്റിക്‌ ഡാറ്റ സ്്രക്ചറുകള്‍ക്കു രണ്ട്‌ ഉദാഹരണം നല്‍കുക.

2. സ്റ്റാറ്റിക്‌ ഡാറ്റ സ്ര്രക്ചറുകള്‍ ഓവര്‍ ഫ്‌ളോ സാഹചര്യം നേരിടേണ്ടി വരാം.
എന്തുകൊണ്ട്‌?

റ

ലിങ്കഡ്‌ ലിസ്റ്റ്‌ ഒരു ഡൈനാമിക്‌ ഡാറ്റ സ്്രക്ചര്‍ ആണ്‌. ഈ പ്രസ്താവനയെ
ന്യായീകരിക്കുക.

സ്റ്റാക്കിലേക്കു ഒരു അംഗത്തെ ഉള്‍പ്പെടുത്താനുള്ള അല്‍ഗോരിതം എഴുതുക.
പുഷ്‌, പോപ്‌ പ്രവര്‍ത്തനങ്ങള്‍ എന്നാലെന്ത്‌?
സ്റ്റാക്കില്‍ നിന്ന്‌ ഒരു അംഗത്തെ നീക്കം ചെയ്യാനുള്ള അല്‍ഗോരിതം എഴുതുക.

രേഖീയക്യൂവില്‍ ഉള്‍പ്പെടുത്തല്‍, നീക്കംചെയ്യല്‍ പ്രവര്‍ത്തനങ്ങള്‍ പ്രാവര്‍ത്തി
കമാക്കാനുള്ള അല്‍ഗോരിതം എഴുതുക.

രേഖീയക്യുവിന്റെ പരിമിതികള്‍ വൃത്താകൃതി ക്യു എങ്ങനെ മറികടക്കുന്നു.
ഡാറ്റ സ്ദ്രക്ചറുകളില്‍ നടപ്പാക്കാവുന്ന ചില പ്രവര്‍ത്തനങ്ങള്‍ താഴെ പറയുന്നു
1. ഉള്‍പ്പെടുത്തല്‍ ൮. നീക്കംചെയ്യല്‍ സ.തിരയല്‍ സുക്രമപ്പെടുത്തല്‍

A. ഇവയില്‍ ഏതു പ്രവര്‍ത്തനത്തിനാണ്‌ അണ്ടര്‍ ഫ്‌ളോ സാഹചര്യം നേരിടേണ്ടി
വരിക.

1. ഈ സാഹചര്യം ഉചിതമായ ഡാറ്റ സ്ട്രക്ചറിന്റെ പശ്ചാത്തലത്തില്‍
വിവരിക്കുക.

കമ്പ്യൂട്ടര്‍ സയന്‍സ്‌ - XII

0. ചേരുംപടി ചേര്‍ക്കുക

A B Cc

a. അറെ 1. സ്റ്റാര്‍ട്ട്‌ 1. വൃത്യസ്ത ഭാഗങ്ങളില്‍ ഉള്‍പ്പെടുത്ത
ലും നീക്കം ചെയ്യലും സംഭവിക്കുന്നു.

0. സ്റ്റാക്ക്‌ 1. സൂചിക 2. ഒരേ ഭാഗത്തു തന്നെ ഉള്‍പ്പെടുത്തലും
നീക്കം ചെയ്യലും സംഭവിക്കുന്നു

C. ക്യൂ 21. റിയര്‍ 3. സ്വയം സൂചിത സ്ദ്രക്ചറുകള്‍ ഉപയോ
ഗപ്പെടുത്തുന്നു.

d. ലിങ്കഡ്‌ ലിസ്റ്റ്‌ സ. ടോപ്പ്‌ 4. അംഗത്തിന്റെ സ്ഥാനം ഉപയോഗിച്ചി

ട്ടാണ്‌ അതിനെ ആക്സസ്‌ ചെയ്യുന്നത്‌

10. അറെ ക്രേന്ദീകൃത ഡാറ്റ സ്്രക്ചറുകളുടേതുപോലെ ലിങ്ക്ഡ്‌ ലിസ്റ്റുകള്‍ക്ക്‌ ഓവര്‍
ഫ്ളോ സാഹചര്യം നേരിടേണ്ടി വരാത്തത്‌ എന്തുകൊണ്ടെന്നു വിശദീകരിക്കുക.

വെബ്‌ സാങ്കേതികവിദ്യ

DO അമശ്യധായത്മിമ്റെ പഠനം പുരിത്ത?യാകുന്ന
60205 പഠിതാവ്‌ ആര്‍ജിക്കേങ പറനമേട്ടങ്ങശ്‌
സുരക്ഷിത ആശയവിനിമയം വെബ്പേജുകളിലൂടെ
സാധ്യമാകുന്നതെങ്ങനെ എന്ന്‌ വിശദീകരിക്കുന്നു.
വെബ്സെര്‍വറിന്റെ ഉപയോഴവും വെബ്ഹോ
സ്തിങ്ങിനെക്കുറിച്ചുള്ള അറിവും വിവരിക്കുന്നു.
Mls, ഡൈനാമിക്‌ എന്നീ വെബ്‌ പേജുകള്‍
താരരല്യം ചെയ്യുന്നു.

പ്രോ്രാമിങ്‌ ദാഷകളും സ്ക്രിപ്റ്റുകളും തമ്മിലുള്ള
വ്യത്യാസം തിരിച്ചറിയുന്നു.

വിവിധ സ്ക്രിപ്റിംന്ഭദാഷകള്‍ താരതമ്യം ചെയ്യുന്നു.
കാസ്‌കേഡിംന്‌ സ്റ്റൈല്‍ ഷീറ്റിന്റെ ആവശ്യകത
വിരദീകരിക്കുന്നു.

ലളിതമായ HTML എലമെന്റുകള്‍ ഉപയോരിച്ചുള്ള
വെബ്പേജ്‌ നിര്‍മാണം ഒനസ്സിലാക്കുന്നു.
അടിസ്ഥാന HTML ടാനുകളും അവയുടെ പ്രധാന
ആഭ്രിബയുട്ടുകളും പട്ടികക്െടുത്തുന്നു.

HTML ടാരുകളെ തരം തിരിക്കുന്നു.

HTML പേജുകള്‍ ആകര്‍ഷക്കാക്കുന്നതിന്‌ ഫോര്‍
മാറ്റിംന്‌ ടാരുകള്‍ HTML ഡോകുമെന്റുകളില്‍ ഉപ
യോശിക്കുന്നത്‌ എങ്ങനെയെന്ന്‌ മനസ്സിലാക്കുന്നു.
ഫോര്‍മാറ്റിംന്‌ ടാുകള്‍ തമ്മിലുള്ള സാല്യങ്ങളും
വ്യത്യാസങ്ങളും തിരിച്ചറിയുന്നു.

© <PRE>, <DIV> എന്നീ ടാരുകളുടെ ഉപയോ
നിരീക്ഷിക്കുന്നു.

ഒരു ഡോക്യുമെന്റിലെ ഉള്ളടക്കമോ മറ്റ്‌ ബ്ജ
ക്ടുകളോ (വസ്തുക്കളോ) ചലികിക്കുന്നതിനുള്ള
SO തിരിച്ചറിയുന്നു.

<FONT> ടാന്‌ ഉപയോഗിച്ച്‌ ടെക്സ്റ്റ്‌ ഉള്ളടക്കം ഫല
പ്രദമായി രുപകെടുത്തുന്നു.

HTML ഡോക്യുമെന്റുകളില്‍ കമന്റുകള്‍ ഉപയോ
രിക്കുന്നു.

<IMG> 596) ഉപർയോരിച്ച്‌ HTML ഡോക്യുമെന്റു
കളില്‍ ചിത്രങ്ങള്‍ ഉര്‍ക്കൊള്ളിക്കുന്നു.

പുറ!
OO 101010,
ഡമ്‌
0. 0,27
OAS OL ny Or 4.

ഇന്റര്‍നെറ്റ്‌ യുഗത്തിലാണ്‌ നാമെല്ലാം ജീവിക്കു
ന്നത്‌. വിവരങ്ങള്‍ ആവശ്യമായി വരുമ്പോള്‍
നാം ആദ്യം തിരയുന്നത്‌ ഇന്റര്‍നെറ്റിലായിരി
ക്കും. 11-00 ക്ലാസിലെ പരീക്ഷാഫലം വെബ്‌
സൈറ്റില്‍ നിങ്ങള്‍ തിരഞ്ഞ്‌ അറിഞ്ഞിട്ടുണ്ട്‌.
ഓണ്‍ ലൈന്‍ അപേക്ഷ സമര്‍പ്പണം, വെബ്‌
സൈറ്റിലുള്ള കാരൃങ്ങള്‍ പരിശോധിക്കല്‍,
സിനിമ കാണല്‍, ധനവ്യാപാരസ്ഥാപനങ്ങ
ളിലെ ക്രയവിക്രയം, ഓണ്‍ലൈന്‍ ക്രയവിക്ര
യത്തിലൂടെ സാധനങ്ങള്‍ വാങ്ങല്‍ തുടങ്ങി
വിവിധ ആവശ്യങ്ങള്‍ക്കായി ധാരാളം വെബ്‌
സൈറ്റുകളെ നാം ആശ്രയിക്കാറുണ്ട്‌. വെബ്‌
പേജുകളുടെ ഒരു കൂട്ടമാണ്‌ വെബ്‌ സ്റ്റ്റ്‌ എന്ന്‌
നമുക്കറിയാം. ചിഹ്നങ്ങള്‍ (അക്ഷരങ്ങളോ
അല്ലാത്തവയോ ആയത്‌, ചിത്രങ്ങള്‍, ഗ്രാഫു
കള്‍, ചലനാത്മക്ചിയധ്തങ്ങള്‍, ശബ്ദ വീഡിയോ
കള്‍ തുടങ്ങിയവ വെബ്‌ പേജുകളിലുണ്ടാവാം.
സ്ഥാപനങ്ങള്‍, ഉല്‍പന്നങ്ങള്‍, സേവനങ്ങള്‍
തുടങ്ങിയവയെക്കുറിച്ചുള്ള വിവരം പ്രദാനം
ചെയ്യുന്നതിനാണ്‌ ധാരാളം പേജുകളുള്ള ഒരു
വെബ്സൈറ്റ്‌ രൂപകല്‍പന ചെയ്യുന്നത്‌. ഈ
വെബ്സൈറ്റ്‌ ഇന്റര്‍നെറ്റില്‍ നിന്നും നമുക്ക്‌
എങ്ങനെ ലഭിക്കുന്നു? ഇന്റര്‍നെറ്റുമായി
ബന്ധിപ്പിച്ചിട്ടുള്ള വെബ്‌ സെർവറുകളിൽ ഈ
പേജുകള്‍ മറ്റുള്ളവര്‍ക്ക്‌ ലഭിക്കത്തക്കവിധം
സംഭരിച്ച്‌ വച്ചിരിക്കുന്നു. ഈ അധ്യായത്തില്‍
ഇന്റര്‍നെറ്റ്‌ വഴിയുള്ള ആശയവിനിമയവും
വെബ്‌ സെര്‍വറുകള്‍ക്ക്‌ അതിലുള്ള പ്രാധാ
നയവും അവലോകനം ചെയ്യുന്നു. വെബ്‌ സൈ
റ്റുകള്‍ വികസിപ്പിക്കുന്നതിനാവശ്യമായ വിവിധ
ടുളുകളെക്കുറിച്ചും, സാങ്കേതികതകളെക്കുറിച്ചും ഇവിടെ പ്രതിപാദിക്കുന്നുണ്ട്‌. പരിവര്‍ത്ത
നാത്മക (dynamic) വെബ്‌ പേജുകളുടെ ആശയവും അവ പരിവര്‍ത്തനാത്മകം ആക്കുന്ന
തിന ഉപയോഗിക്കുന്ന സ്ക്രിപ്റ്റിംഗ്‌ ഭാഷകളുടെ അവലോകനവും ഇവിടെ ചര്‍ച്ചചെയ്യു
ന്നു. ഹൈപ്പര്‍ ടെക്സ്റ്റ്‌ മാർക്കപ്പ്‌ ഭാഷ (HTML) ഉപയോഗിച്ചാണ്‌ വെബ്‌ പേജുകള്‍ നിര്‍മിക്കു
ന്നത്‌. ഇന്റര്‍നെറ്റിന്റെ ഭാഷയായി 111141. അറിയപ്പെടുന്നു. ഒരു വെബ്‌ പേജിന്റെ ഉള്ളടക്കം
ര്രൌസര്‍ വിന്‍ഡോയില്‍ എങ്ങനെ പ്രദര്‍ശിപ്പിക്കണമെന്നാണ്‌ 11111. ്രൌസറിനോട്‌
പറയുന്നത്‌. 1174. ഉപയോഗിച്ചുളള വെബ്‌ പേജ്‌ നിര്‍മിതിയുടെ അടിസ്ഥാന തത്വങ്ങള്‍
ഈ അധ്യായത്തില്‍ നമുക്ക്‌ പരിചയപ്പെടാം.

4.1 വെബ്ബിലുടെയുള്ള ആശയ വിനിമയം
(Communication on the web)

വെബ്‌ ബ്രൌസര്‍ (ക്ലയന്റ്‌ ) ഇന്റര്‍നെറ്റിലുള്ള ഒരു വെബ്‌ സ്റ്റ്‌ പരിശോധിക്കുമ്പോള്‍
എന്തെല്ലാം കാര്യങ്ങള്‍ നടക്കുന്നുവെന്ന്‌ 11-00 ക്ലാസ്സിലെ അധ്യായം 12 -ല്‍ നാം പഠിച്ച
താണ്‌. അനുബന്ധ ഇന്റര്‍നെറ്റ്‌ പ്രോട്ടോകോള്‍ (IP) മേല്‍വിലാസത്തിനായി URL (യൂണി
ഫോം റിസോഴ്‌സ്‌ ലൊക്കെറ്റര്‍)-നെ DNS (ഡൊമൈല്‍ നെയിം സിസ്റ്റം) സെര്‍വറിലേ
യ്ക്ക്‌ അയയ്ക്കുകയും തുടര്‍ന്ന്‌ ലഭിക്കുന്ന IP മേല്‍വിലാസം ഉപയോഗിച്ച്‌ ്രൂസര്‍
സെര്‍വറുമായി ബന്ധം സ്ഥാപിക്കുകയും ചെയ്യുന്നു. സെര്‍വര്‍ കമ്പ്യൂട്ടറിലുള്ള സെര്‍
വര്‍ സോഫ്‌റ്റ്വെയര്‍ ഈ ആവശ്യം പ്രോസസ്‌ ചെയ്ത്‌ പ്രദര്‍ശിപ്പിക്കേണ്ട വെബ്‌ പേജിനെ
ക്ലയന്റിന്‌ അയച്ച്‌ കൊടുക്കുന്നു. ക്ലയന്റ്‌ ര്രൌൂസര്‍ വെബ്‌ പേജ്‌ ക്രമമായി കാണിക്കുന്നു.

വെബ്‌ ഉപയോഗിച്ചുള്ള ആശയവിനിമയത്തിന്‌, കമ്പ്യൂട്ടറുകള്‍ അല്ലെങ്കില്‍ ഉപകരണ
ങ്ങള്‍ പരസ്പരം തിരിച്ചറിയേണ്ടതുണ്ട്‌. ട്രാന്‍സ്മിഷന്‍ കണ്‍ട്രോള്‍ പ്രോട്ടോകോള്‍ /
ഇന്റര്‍നെറ്റ്‌ പ്രോട്ടോകോള്‍ (TCP/IP) എന്ന ഒറ്റ പ്രോട്ടോകോള്‍ തന്നെ എല്ലാ ഉപകരണ
ങ്ങളും അനുസരിക്കുന്നത്‌ കൊണ്ടാണ്‌ ഇത്‌ സാധ്യമാകുന്നത്‌. TCP/IP പ്രോട്ടോകോ
ളുകളെക്കുറിച്ചും അവയുടെ പ്രവര്‍ത്തനത്തെക്കുറിച്ചും 11-00 ക്ലാസിലെ കമ്പ്യൂട്ടര്‍ ശൃംഖല
കള്‍ (കമ്പ്യൂട്ടര്‍ നെറ്റ്വര്‍ക്ക്സ്‌) എന്ന അധ്യായത്തില്‍ നാം വിശദമായി ചര്‍ച്ച ചെയ്തിട്ടുണ്ട്‌.
അയയ്ക്കേണ്ട ഡാറ്റയെ, TCP/IP പ്രോട്ടോകോള്‍ വിഘടിപ്പിച്ച്‌ ചെറിയ കൂടുകളിലാക്കി
സ്വീകര്‍ത്താവിന്റെ കമ്പ്യൂട്ടര്‍ വിലാസത്തോടൊലപ്പം ചേര്‍ക്കുന്നു. ഇന്റര്‍നെറ്റ്‌ പ്രോട്ടോകോ
ളിന്റെ സഹായത്താല്‍, റൂട്ടറുകള്‍ (വഴികാട്ടുന്ന ഉപകരണങ്ങള്‍) ഈ ഡാറ്റ ഉള്‍ക്കൊള്ളുന്ന
കൂടുകളെ അവ എത്തേണ്ട കമ്പ്യൂട്ടറിലെത്തിക്കുന്നു. അയക്കുന്നയാള്‍ (പ്രേഷിതന്‍) ഡാറ്റ
യുടെ ഒരു കൂട്‌ സ്വീകര്‍ത്താവില്‍ എത്തിക്കുന്നതെങ്ങനെ എന്ന്‌ ചിത്രം 4.1 ല്‍ കാണിച്ചി
ഘട്ടം 2: കുടൂകള്‍ നൂട്ടടില്‍

ട്ടും 3: കുടുകളിലുള്ള ഡേറ്റുകളെ
രിക്കുന്നു.
ന്നു sage 1: TCP iim റൂട്ടിലേക്ക്‌ IP

TCP വീണും മൂട്ടിച്ചേര്‍ത്ത്‌
യഥാര്‍ഥ രൂപത്തിലാക്കുന്നു
Dy, ഡാറ്റയെ വിഘടിരിച്ച്‌ അനുദരിച്ച്‌ ഇന്റര്‍നെറ്റി [₹
മേ ar ലൂടെ സഞ്ചരിക്കുന്നു ™

Allo 4.1: WIQ ഉശിക്കൊള്ളുന കുടുകള്‍ Bol AOM C8 നി്‌ ദ്വകരിത്താവിലെക്ക്‌ 219125) അമക്കുമ്നു

4. വെബ്‌ സാങ്കേതികവിദ്യ

വെബ്സൈറ്റ്‌ പരിശോധിക്കല്‍, ഇ-മെയില്‍ അയക്കല്‍ തുടങ്ങി പലതരത്തിലുള്ള ആശ
യവിനിമയങ്ങള്‍ ഇന്റര്‍നെറ്റില്‍ നടക്കുന്നു. വെബ്സൈറ്റുകള്‍ക്ക്‌ വേണ്ടിയുള്ള തിരയല്‍

HTTP (ഹൈപ്പര്‍ ടെക്സ്റ്റ്‌ (ട്രാന്‍സ്മിഷന്‍ പ്രോട്ടോകോള്‍?) ഉപയോഗിച്ചും ഇ-മെയില്‍
വഴിയുള്ള ആശയവിനിമയം SMTP (സിമ്പിള്‍ മെയില്‍ ട്രാന്‍സ്ഫര്‍ പ്രോട്ടോകോള്‍)
ഉപയോഗിച്ചുമാണ്‌ നടക്കുന്നതെന്ന്‌ നാം പഠിച്ചിട്ടുണ്ട്‌. താഴെ തലത്തിലുള്ള ഇന്റര്‍നെറ്റ്‌
പ്രോട്ടോകോളിന്റെ ഏറ്റവും മുകളിലായാണ്‌ ഈ രണ്ട്‌ പ്രോട്ടോകോളുകളും പ്രവര്‍ത്തി
ക്കുന്നത്‌. ഇന്റര്‍നെറ്റ്‌ വഴിയുള്ള ആശയവിനിമയം ലളിതമാക്കുന്നത്‌ ഇന്റര്‍നെറ്റ്‌ പ്രോട്ടോ
കോളാണ്‌. ഈ പ്രോട്ടോകോള്‍ തന്നെ ഉപയോഗിക്കുന്നതുകൊണ്ട്‌ ധാരാളം നേട്ടങ്ങളുണ്ട്‌.
വിവിധതരം ഡാറ്റ കൈകാര്യം ചെയ്യുന്നതിനായി റൂട്ടറുകള്‍ പ്രത്യകം പ്രോഗ്രാം ചെയ്യേ
ണ്ടിവരുന്നില്ല. കൊണ്ടുപോകേണ്ട ഡാറ്റ ര്രദ്ധിക്കാതെ അവ ഉള്‍ക്കൊള്ളുന്ന കൂടുകള്‍
എത്തിക്കേണ്ട മേല്‍വിലാസത്തെക്കുറിച്ച്‌ മാത്രം ്രദ്ധിച്ചാല്‍ മതിയാകും. കൂടുകളിലെ
ഡാറ്റ ഉള്‍ക്കൊള്ളുന്ന ഭാഗം സുതാര്യമായതിനാല്‍, പൂതിയ പ്രോട്ടോകോളുകള്‍ രൂപ
പ്പെടുത്തി ഇന്റര്‍നെറ്റില്‍ ഉപയോഗിക്കുവാനുള്ള സ്വാതന്ത്ര്യം നമുക്ക്‌ ലഭിക്കുന്നു. TCP/
IP യുടെ ഈ സുതാര്യതയും വഴക്കവുമാണ്‌, സന്ദേശങ്ങള്‍ കൈകാര്യം ചെയ്യുന്നതി
നുള്ള സമൂഹമാധ്യമ സൈറ്റുകള്‍, ശബ്ദം, വീഡിയോ തുടങ്ങിയവ ഉള്ളടക്കങ്ങളായി
വരുന്ന സൈറ്റുകള്‍, സുരക്ഷിതപണമിടപാടുകള്‍ക്കായി ധനകാരൃസ്ഥാപനങ്ങള്‍ ഉപ
യോഗിക്കുന്ന സൈറ്റുകള്‍ തുടങ്ങിയവയ്ക്കായി പ്രോട്ടോകോളുകള്‍ നിര്‍മിക്കുന്നതിന്‌
സഹായിച്ചത്‌. ഇന്റര്‍നെറ്റിന്റെ സാമ്പത്തിക വിജയത്തിന്‌ കാരണം ഇതായിരുന്നു.

വെബ്‌ വഴിയുള്ള ആശയവിനിമയം ക്ലയന്റ്‌ ്രൌസറില്‍ നിന്ന്‌ വെബ്‌ സെര്‍വറിലേക്കെ
ന്നും, വെബ്‌ സെര്‍വറില്‍നിന്ന്‌ വെബ്‌ സെര്‍വറിലേക്കെന്നും, രണ്ടായി തരംതിരിച്ചിരി
ക്കുന്നു. ഇന്റര്‍നെറ്റ്‌ വഴിയുള്ള ആശയ വിനിമയത്തിന്‌ ആധികാരികതയും സുരക്ഷിത
ത്വവും അത്യാവശ്യമാണ്‌. വെബിലുള്ള ഒരു കമ്പ്യൂട്ടര്‍/സെര്‍വര്‍ യഥാര്‍ഥ അവകാശി
യായ കമ്പ്യൂട്ടറാണെന്ന്‌ ഉറപ്പ്‌ വരുത്തുന്ന പ്രക്രിയയാണ്‌ ആധികാരികത ഉറപ്പിക്കല്‍
(authentication). MAGang വഴിയുള്ള ആശയവിനിമയത്തിന്‌ സുരക്ഷിതത്വം ലഭിക്കുന്ന
തിനാല്‍, കമ്പ്യൂട്ടറിലെ വിവരങ്ങള്‍ ചോര്‍ത്തുന്നവര്‍ക്ക്‌ (ഹാക്കേഴ്‌സിന്‌) സന്ദേശങ്ങള്‍
പിടിച്ചെടുക്കുവാനോ, രൂപമാറ്റം വരുത്തുവാനോ സാധിക്കുകയില്ല.

4.1.1 ക്ലയന്റില്‍ നിന്നും വെബ്‌ സെര്‍വറിലേക്കുള്ള ആശയവിനിമയം
(Client to web server communication)

ക്ലയന്റില്‍ നിന്ന്‌ വെബ്‌ സെര്‍വറിലേക്കുള്ള ആശയവിനിമയത്തിന്‌ സാധാരണഗതിയില്‍
ആധികാരികത ഉറപ്പിക്കേണ്ടതില്ല. എന്നാല്‍, ധനകാരൃസ്ഥാപനങ്ങളുടെ ഉപയോഗ
ത്തിനോ, ഇ-മെയില്‍ സേവനത്തിനോ ആണെങ്കില്‍ യൂസര്‍ നാമവും (യൂസര്‍ നെയിം)
പാസ്വേഡും സെര്‍വറിലേക്ക്‌ അയക്കേണ്ടതുണ്ട്‌. സുരക്ഷിതത്വകാരണങ്ങളാല്‍, ഈ
വിവരങ്ങള്‍ സാധാരണ ചിഹ്നങ്ങളായി / അക്ഷരങ്ങളായി സെര്‍വറിലേയ്ക്ക്‌ അയയ്ക്കാ
റില്ല. അഥവാ അങ്ങനെ ചെയ്താല്‍ നുഴഞ്ഞ്‌ കയറ്റക്കാര്‍ക്ക്‌ (ഹാക്കേഴ്സിന്‌) യൂസര്‍

നാമവും പാസ്വേഡും മോഷ്ടിക്കാനാകും. അത്തരം സാഹചര്യങ്ങളില്‍ യൂസര്‍ നാമ

വും പാസ്വേഡും രൂപമാറ്റം വരുത്തി (എന്‍ക്രിപ്റ്റ്‌ ചെയ്ത്‌) സെര്‍വറിലേക്ക്‌ അയക്കാ
നായി നാം HTTPS (ഹൈപ്പര്‍ ടെക്സ്റ്റ്‌ ട്രാന്‍സ്ഫര്‍ പ്രോട്ടോകോള്‍ സെക്യൂര്‍) എന്ന
സാങ്കേതികവിദ്യ ഉപയോഗിക്കുന്നു. ഇന്റര്‍നെറ്റിലുള്ള കമ്പ്യൂട്ടറുകള്‍ തമ്മില്‍ ഇത്തര
ത്തില്‍ ബന്ധം സ്ഥാപിക്കാന്‍ ഉതകുന്ന സുരക്ഷിത സാങ്കേതികവിദ്യയായ SSL (സെ
ക്യൂര്‍ഡ്‌ സോക്കറ്റ്‌ ലെയര്‍) ഉപയോഗിച്ച്‌ ആണ്‌ 11115 പ്രവര്‍ത്തിക്കുന്നത്‌. 11111 യ്ക്ക്‌
സുരക്ഷിതത്വം പ്രദാനം ചെയ്യുന്നത്‌ HTTPS ആണ്‌. SSL പ്രോട്ടോകോള്‍ സ്വകാര്യത
ഉറപ്പ്‌ വരുത്തുന്നതോടൊപ്പം മറ്റൊരു വെബ്സൈറ്റിനും ഉപയോക്താവിന്റെ ലോഗിന്‍
അക്കൌണ്ടില്‍ ആള്‍മാറാട്ടം നടത്താനോ അയച്ച വിവരം മാറ്റം വരുത്താനോ സാധിക്കാ
ത്തവിധം സുരക്ഷ ഉറപ്പ്‌ വരുത്തുകയും ചെയ്യുന്നു.

ഒരു സുരക്ഷിതമായ SSL ഭാഗം അയച്ച്‌

തുടങ്ങാന്‍ ബ്രസ ന്റിര്‍ദേശിക്കുന്നു,
സെര്‍വര്‍ SSL യോഗ്യതാ

‘You are connected to. [
പത്രം തിരിപ്പയയ്ക്കുന്നു. ൽ 5 a
ബൌസര്‍ പരിശോധിക്കുന്നു [Indi
യോഗ്യതാപത്രത്തിന്റെ സാധുത which stun by

STATE BANK OF INDIA

© ഒ STATE BANK OF INDIA (IN) https://www.onlinesbicom:

ഉപയോക്തൃ വിശ്വാസം സാക്ഷ്യപ്പെടുത്തിയിട്ടുണ്ടോ എന്ന്‌
൭ സാധുതയുള്ളതാണെമ്കില്‍ മുപമാറ്റും വരുത്തി ഒരു ഭാഗം, . Maresh N

PDAOIE മുടങ്ങുന്നു = Verified by: VeriSign, Inc.

൫൦൦൦൦൦ ബ്രയസരും അയച്ച എല്ലാ വിവരങ്ങളും രൂപമാറ്റം പെ
വരുത്തുന്നു. ~ The connecticn to this website is secure.

01010010110 eax) 01010010110
More
alo 4.2(A) : കലയത്ള്‌ -സ്വെരവര്‍ ആധികാരികത ഉറച്ഛി ചിതം 4.2(b): SBI വെബ്‌ സൈറ്റിന്റെ

N03 (്രവരീത്മനം ആശികാരികത Qa flonos

ര്രൌസര്‍ ഒരു സുരക്ഷിത പേജ്‌ ആവശ്യപ്പെടുമ്പോള്‍, സെര്‍വര്‍ ആദ്യം അതിന്റെ SSL
യോഗ്ൃതാപ്രതം തിരിച്ച്‌ നല്‍ക്കുന്നു. തുടര്‍ന്ന്‌ ഈ സാക്ഷ്യപ്ര്രം ബന്ധപ്പെട്ട സാക്ഷ്യ
പ്രത അധികാരികളുമായി ഒത്തുനോക്കി സാധുത ഉറപ്പ്‌ വരുത്തുന്നു. സാക്ഷ്യപ്ര്ത അധി
കാരിക്കു നല്‍കിയ യോഗ്യതാപ്രതം സാധുത ഉള്ളതാണെങ്കില്‍, അധികാരി സാക്ഷ്യ
പ്പെടുത്തുന്നു. ഒരു പ്രത്യേക വെബ്സ്്റ്‌ അത്‌ അവകാശപ്പെടുന്ന സ്ഥാപനത്തിന്റേത്‌
തന്നെ ആണെന്ന്‌ ഉറപ്പിക്കലാണ്‌ ഇത്‌. വെരിസൈന്‍ ഇന്‍കോര്‍പ്പറേഷന്‍ ഒരു സാക്ഷ്യ
പ്രത അധികാരിയാണ്‌. ഒരു SSL സാക്ഷ്യപ്രതം സാധുത ഉള്ളതായാല്‍, ബ്രൌസര്‍ രൂപ
മാറ്റം വരുത്തിയുള്ള (എന്‍ക്രിപ്റ്റ്‌ ചെയ്ത) ആശയ വിനിമയത്തിന്‌ വേണ്ടി ഒരു നിശ്ചിത
സമയം തുടങ്ങിവയ്ക്കുന്നു. ഈ പ്രവര്‍ത്തനം ചിത്രം 4.2 (൭)-യില്‍ ചിത്രീകരിച്ചിരിക്കു
ന്നു. ഇന്ത്യയില്‍ ധനകാര്യസ്ഥാപനങ്ങളുമായുള്ള ഇടപാടുകള്‍ക്ക്‌ ഉപയോഗിക്കുന്ന വെബ്‌
സൈറ്റുകള്‍, ക്ലയന്റുകളില്‍ നിന്നും രഹസൃവിവരങ്ങള്‍ സ്വീകരിക്കുവാന്‍ HTTPS ഉപ
യോഗിക്കണമെന്ന്‌ വിവരസാങ്കേതികവിദ്യ നിയമം നിഷ്കര്‍ഷിച്ചിട്ടുണ്ട്‌. നിങ്ങള്‍ അഡ്രസ്‌

ബാറിലുള്ള ലോക്കില്‍ ക്ലിക്ക്‌ ചെയ്താല്‍ ചിത്രം 4.2 ()-യില്‍ തന്നിട്ടുള്ള സാക്ഷ്യപ്ര്രം
കാണാവുന്നതാണ്‌.

4. വെബ്‌ സാങ്കേതികവിദ്യ

4.1.2 വെബ്‌ സെര്‍വറില്‍ നിന്നും വെബ്‌ സെര്‍വറിലേക്കുള്ള ആശയ
വിനിമയം (Web server to web server communication)

ചില വെബ്‌ ആപ്ലിക്കേഷനുകളുടെ പ്രവര്‍ത്തനത്തിന്‌ വെബ്‌ സെര്‍വറില്‍നിന്ന്‌
വെബ്‌ സെര്‍വറിലേക്കുള്ള ആശയവിനിമയം ആവശ്യമാണ്‌. ഉദാഹരണമായി, ഇന്റര്‍നെറ്റ്‌
വഴി സാധനങ്ങള്‍ വാങ്ങാന്‍ ഉപയോഗിക്കുന്ന ഒരു വെബ്സ്്റ്‌ സൂക്ഷിച്ചിരിക്കുന്ന
വെബ്‌ സെര്‍വറിന്‌ (ഇന്റര്‍നെറ്റിലെ വ്യാപാരിക്ക്‌/വില്‍പ്പനക്കാരന്‌), ധനകാര്യസ്ഥാപന
ത്തിന്റെ വെബ്‌ സെര്‍വറിലേക്കും അതുപോലെ തിരിച്ചും രഹസ്യ വിവരങ്ങള്‍ അയയ്‌
ക്കേണ്ടി വരുന്നു. അത്തരം സന്ദര്‍ഭങ്ങളില്‍ വ്യാപാരിയുടെയും ധനകാര്യ സ്ഥാപനത്തി
ന്റെയും വെബ്സര്‍വറുകളുടെ ആധികാരികത ഉറപ്പിക്കേണ്ടതുണ്ട്‌. സ്വീകരിക്കപ്പെട്ട ഡാറ്റ
യഥാര്‍ഥ സെർവറുകളിൽ നിന്നുള്ളവയാണോ എന്നുറപ്പിക്കാന്‍ ഡിജിറ്റല്‍ സാക്ഷ്യപ്രത

പ്രടബന്റ്‌ STEM ERIE അപു

പ]

sone OEM [ITA Lg9

വ്യാപാരിയുടെ
വെബ്‌ സെര്‍വര്‍

ഉപയാക്താവ്‌ നിര്‍ദ്ദേശം
നല്‍കുന്നു

വ്യാപാരിയുടെ ബാങ്ക്‌ ബാങ്കിന്റെ വെബ്‌
അക്കാണ്‌ സര്‍വര്‍

AMO 4.3 : ഒരറ്റം 23008 മറ്റേ അറ്റം വരെയുള്ള ഓണ്ിലൈരി വ്യവഹാരം

ങ്ങള്‍ സഹായിക്കുന്നു. ഒരിക്കല്‍ സെര്‍വറുകളുടെ ആധികാരികത ഉറപ്പിച്ചു കഴിഞ്ഞാല്‍,
അവ രൂപമാറ്റം വരുത്തിയ (എന്‍ക്രിപ്റ്റ്‌) ഡാറ്റ ഉപയോഗിച്ച്‌ ആശയവിനിമയം നടത്തു
ന്നു. ഇന്റര്‍നെറ്റ്‌ വഴി പണം അടയ്ക്കുകയോ/കൈമാറുകയോ ചെയ്യുമ്പോള്‍, വ്യാപാരി
യുടെ സെര്‍വറിനും ധനകാരൃസ്ഥാപനത്തിന്റെ സെര്‍വറിനും ഇടയ്ക്ക്‌ ഒരു പേയ്മെന്റ്‌
ഗേറ്റ്വേ സെര്‍വര്‍ പ്രവര്‍ത്തിച്ച്‌ രൂപമാറ്റം (എന്്രിപ്റ്റ്‌ ചെയ്ത) വരുത്തി ധനവിനിമയം
നടത്തുന്നു. ഈ പ്രവര്‍ത്തനം ചിത്രം 4.3-ല്‍ കാണിച്ചിരിക്കുന്നു.

4.2 വെബ്‌ സെര്‍വര്‍ സാങ്കേതികവിദ്യകള്‍ (Web server technologies)

ഹയര്‍സെക്കന്ററി വിദ്യാഭ്യാസ ഡയറക്ടറേറ്റിന്റെ (101151:-ഡയറക്ടറേറ്റ്‌ ഓഫ്‌ ഹയര്‍
സെക്കന്ററി എഡ്യുക്കേഷന്‍) ഓദ്യോഗിക വെബ്സൈറ്റായ www.dhsekerala.gov.in
സന്ദര്‍ശിക്കുമ്പോള്‍ സംഭവിക്കുന്നത്‌ എന്തൊക്കെയെന്ന്‌ നമുക്ക്‌ നോക്കാം. ആദ്യമായി

വെബ്‌ സ്്്റിന്റെ ഹോം പേജ്‌ (ഒരു വെബ്‌ സ്റ്റ്‌ പരിശോധിക്കുമ്പോള്‍ കാണിക്കുന്ന
ആദ്യത്തെ പേജ്‌), DHSE യുടെ സെര്‍വറില്‍ നിന്നും നമ്മുടെ (ക്ലയന്റിന്റെ) കമ്പ്യൂട്ടറി
ലേക്ക്‌ കൈമാറ്റം ചെയ്യുന്നു. സാധാരണയായി, വെബ്‌ പേജിന്‌ അഭ്യര്‍ഥന നടത്തുന്ന ഒരു
കമ്പ്യൂട്ടറോ മൊബൈല്‍ ഉപകരണമോ ആയിരിക്കും ക്ലയന്റ്‌. വെബ്‌ സെര്‍വറില്‍ ശേഖ
രിച്ചു വച്ചിരിക്കുന്ന വെബ്‌ സൈറ്റിലെ പേജുകള്‍, ക്ലയന്റിന്റെ അപേക്ഷയ്ക്കനുസരിച്ച്‌,
സെര്‍വര്‍ സോഫ്‌റ്റ്വെയര്‍ വിട്ടു നല്‍കുന്നു. വെബ്‌ സെര്‍വറിന്റെ സവിശേഷതകളെക്കു
റിച്ചും അവ ക്രമീകരിക്കുവാന്‍ ഉപയോഗിക്കുന്ന വസ്തുക്കളെക്കുറിച്ചും നമുക്ക്‌ ചര്‍ച്ച ചെയ്യാം.

4.2.1 വെബ്‌ സെര്‍വര്‍ (Web server)

വെബ്സൈറ്റുകള്‍ സംഭരിച്ചിരിക്കുന്ന
സെര്‍വര്‍ കമ്പ്യൂട്ടറുകളെ സൂചിപ്പി
ക്കുന്നതിനാണ്‌ പലപ്പോഴും വെബ്‌
സെര്‍വര്‍ എന്ന പദം ഉപയോഗിക്കു
ന്നത്‌. ഒരു സെര്‍വര്‍ കമ്പ്യൂട്ടറിനെ
വെബ്സെര്‍വറാക്കാനായി അതില്‍
സ്ഥാപിച്ചിട്ടുളള വെബ്‌ സെര്‍വര്‍ സോ
ഫ്റ്റ്വെയറിനെയും ഈ പദം ഉപയോ
ഗിച്ച്‌ സുചിപ്പിക്കാറുണ്ട്‌. വെബ്സെര്‍വര്‍
കമ്പ്യൂട്ടറിന്റെയും വെബ്‌ സെര്‍വര്‍
സോഫ്റ്റ്വെയറിന്റെയും സവിശേഷത ചിതം 4.4 : ഒരു ഡാറ്റാ സ്വെന്്ര
കള്‍ എന്തൊക്കെയാണെന്ന്‌ നമുക്ക്‌

നോക്കാം.

ഇന്റര്‍നെറ്റ്‌ ഉപയോടതാക്കള്‍ക്ക്‌ ഇ-മെയില്‍, ബ്ലോഗ്‌ തുടങ്ങിയ സേവനങ്ങളോ വെബ്‌
പേജുകളോ വിട്ട്‌ നല്‍കാന്‍ വെബ്സെര്‍വര്‍ സഹായിക്കുന്നു. WWW, ഇ-മെയില്‍ തുട
ങ്ങിയ സേവനങ്ങള്‍ ഇന്റര്‍നെറ്റിലൂടെ നല്‍കുന്നതിനു വേണ്ടി ഒരു സെര്‍വര്‍ ഓപ്പറേ
Glo സിസ്റ്റവും സെര്‍വര്‍ സോഫ്റ്റ്വെയറും പ്രവര്‍ത്തനക്ഷമമാക്കിയിട്ടുള്ള ഒരു സെര്‍വര്‍
കമ്പ്യൂട്ടറാണ്‌ വെബ്സെര്‍വര്‍. ഇത്‌ വളരെ കാര്യക്ഷമതയുള്ളതും എപ്പോഴും പ്രവര്‍ത്തി
ക്കുന്നതും ഉയര്‍ന്ന ബാന്റ്‌ വിഡ്ത്തോടുകൂടിയ ഇന്റര്‍നെറ്റ്‌ ബന്ധമുള്ളതും ആയിരിക്കും.
ലോകമെമ്പാടുമുള്ള ഇന്റര്‍നെറ്റ്‌ ഉപയോക്താക്കള്‍ക്ക്‌ ഇതിലുള്ള വെബ്‌ സൈറ്റുകളും
സേവനങ്ങളും ഉപയോഗിക്കാനാകും. ഒരു വെബ്‌ സെര്‍വറില്‍ ഒന്നോ അതിലധികമോ
പ്രൊസസ്സറുകളും, ഉയര്‍ന്ന വേഗതയുള്ള റാമും, വര്‍ധിച്ച കാര്യക്ഷമതയുള്ള ഹാര്‍ഡ്‌
ഡിസ്കും, ദ്രുതഗതിയിലുള്ള ആശയവിനിമയത്തിന്‌ ഉപകരിക്കുന്ന ഈഥര്‍നെറ്റ്‌ കാര്‍ഡു
മൊക്കെയുണ്ടാകും. വേഗതയുള്ള ഇന്റര്‍നെറ്റ്‌ ബന്ധം ഉറപ്പാക്കാനും, ആവശ്യാനുസരണം
വൈദ്യുതി എത്തിക്കുന്നതിനും മറ്റുമായി ഒരു വെബ്‌ സെര്‍വര്‍ സാധാരണ ഗതിയില്‍
ഡാറ്റ സെന്ററുകളിലാണ്‌ സ്ഥാപിക്കാറുള്ളത്‌. സ്ഥാപനങ്ങളുടെ സെര്‍വറുകളും അനു
ബന്ധ കമ്പ്യൂട്ടറുകളും സ്ഥാപിക്കുന്നതിന്‌ മാത്രമായി വിനിയോഗിച്ചിട്ടുളള ഭാതികസ്ഥല
ങ്ങളാണ്‌ ഡാറ്റസെന്ററുകള്‍. ക്ലയന്റിന്‌ വേണ്ടി, നിയുക്ത പ്രവൃത്തിയുമായി ബന്ധപ്പെട്ട
നിര്‍ണായക ഡാറ്റ സംഭരിക്കുന്നതിനും, പ്രോസസ്സ്‌ ചെയ്യുന്നതിനും, പ്രയോജനപ്പെടു

4. വെബ്‌ സാങ്കേതികവിദ്യ

ത്തുന്നതിനും വേണ്ടിയാണ്‌ ഡാറ്റസെന്ററുകള്‍ ഉപയോഗിക്കുന്നത്‌. വൈദ്യുതവിത
രണത്തിന്‌ തടസം വരാതിരിക്കാനുള്ള സംവിധാനം, ശീതീകരണ സംവിധാനം, വേഗ
മേറിയ നെറ്റ്വര്‍ക്ക്‌, സുരക്ഷിതത്വ്രമീകരണങ്ങള്‍ തുടങ്ങിയ സാകര്യങ്ങള്‍ ഡാറ്റസെന്റ
റിന്‌ ആവശ്യമാണ്‌. ഇത്തരത്തിലുള്ള ഒരു ഡാറ്റസെന്റര്‍ ചിത്രം 4.4-ല്‍ കാണിച്ചിരിക്കു
ന്നു. ചിതം 4.5-ല്‍ കാണുന്ന തരത്തിലുള്ള എളുപ്പത്തില്‍ പരിപാലിക്കാവുന്നതും വാതാ
യനങ്ങളോട്‌ കൂടിയതുമായ പ്രത്യേകതരം ചട്ടക്കൂടുകളില്‍ ഉറപ്പിച്ച ധാരാളം സെര്‍വറു
കള്‍ ഡാറ്റ സെന്ററുകളിലുണ്ടാവും.

വിവിധ ലിനക്സ്‌ പതിപ്പുകള്‍ (റെഡ്ഹാറ്റ്‌, ഓ
പ്പന്‍സൂസ്‌, ഡിബിയന്‍, ഉബുണ്ടു തുടങ്ങിയവ),
മൈക്രോ സോഫ്‌റ്റ്‌ വിന്‍ഡോസ്‌ സെര്‍വര്‍, ഫ്രീ
ബി.എസ്‌.ഡി, ഒറാക്കിള്‍ സൊളാരീസ്‌ എന്നിവ
പ്രചാരത്തിലുള്ള സെര്‍വര്‍ ഓപ്പറേറ്റിംഗ്‌ സിസ്റ്റ
ങ്ങളാണ്‌. ഒരു സെര്‍വര്‍ സ്ഥാപിച്ച്‌ അതില്‍ ഒരു
വെബ്‌ സെര്‍വര്‍ സോഫ്റ്റ്വെയര്‍ ഉള്‍ക്കൊള്ളിച്ച്‌
ഓപ്പറേറ്റിംഗ്‌ സിസ്റ്റത്തിന്‌ അനുയോജ്യമായ രീതി
യില്‍ അതിനെ രൂപപ്പെടുത്തിയെടുക്കേണ്ടതുണ്ട്‌.
സംഭരിച്ച്‌ വച്ചിട്ടുള്ള ഫയലുകള്‍ ഉപയോക്താ
ക്കള്‍ക്ക്‌ സമയബന്ധിതമായി നല്‍കുന്നതിനു
വേണ്ടി, ഹൈപ്പര്‍ ടെക്സ്റ്റ്‌ (ഭാന്‍സ്ഫര്‍ പ്രോട്ടോ
കോളിന്റെ സഹായത്താല്‍ ക്ലയന്റ്‌ -സെര്‍വര്‍ മോ
ഡലില്‍ പ്രവൃത്തിക്കുന്ന ഒരു പ്രോ്രഗാമാണ്‌
വെബ്‌ സെര്‍വര്‍ സോഫ്റ്റ്വെയര്‍. ഉപയോക്താ
ക്കള്‍ നല്‍കുന്ന അപേക്ഷയ്ക്കനുസരിച്ച്‌, വെബ്‌
സെര്‍വര്‍ സോഫ്‌റ്റ്വെയറിന്റെ സഹായത്തോടെ
ഈ ഫയലുകള്‍ വെബ്‌ പേജുകളാക്കി ക്ലൈയന്റിന്‌ അയയ്ക്കുന്നു. തുടര്‍ന്ന്‌ ക്ലയന്റ്‌ ബ്രസ
റില്‍ ഇവ കാണുന്നു. അപ്പാഷെ സെര്‍വര്‍, മൈക്രോസോഫ്‌റ്റ്‌ ഇന്റര്‍നെറ്റ്‌ ഇന്‍ഫര്‍മേ
ഷന്‍ സര്‍വീസസ്‌, ഗുഗില്‍ വെബ്സെര്‍വര്‍ (GWS), എന്‍ജിന്‍-എക്സ്‌ തുടങ്ങിയവ പ്രചാ
രത്തിലുള്ള വെബ്സെര്‍വര്‍ പാക്കേജുകളാണ്‌.

ചിത്രം 4.5: പ്രമ്ത്യകതരം ചട്ടക്കുടുകകി
൧ുറപ്ലിച്ചിടുള്ള സെര്‍വറുകശി

സോഫ്റ്റ്‌ വെയര്‍ സ്ഥാപിച്ച്‌ ്രവര്‍ത്തന യോഗ്യമാക്കിയ ശേഷം അതോടൊപ്പം
സോഫ്റ്റ്വെയര്‍ പാക്കേജുകളായ FTP (ഫയല്‍ ട്രാന്‍സ്ഫര്‍ പ്രോട്ടോകോള്‍), ഇ-മെ
യില്‍, 1പുട, ഡാറ്റ ബേസ്‌ തുടങ്ങിയവ കൂടി വെബ്സെര്‍വറില്‍ ഉള്‍പ്പെടുത്താവുന്നതാ
ണ്‌. വെബ്‌ സ്റ്റിന്റെ സുരക്ഷിതത്വത്തിന്‌ രൂപംകൊടുക്കുക, ഒന്നിലധികം വെബ്‌ സൈ
റ്റുകളുടെ നിര്‍മാണം സാധ്യമാക്കുക എന്നിങ്ങനെയുള്ള വ്യവസ്ഥകള്‍ വെബ്‌ സെര്‍വര്‍
സോഫ്റ്റ്വെയര്‍ തന്നെ കൈകാര്യം ചെയ്യും.

4.2.2 സോഫ്റ്റ്വെയര്‍ പോര്‍ട്ടുകള്‍ (Software ports)

കമ്പ്യൂട്ടര്‍ സിസ്റ്റത്തിലെ ഹാര്‍ഡ്വെയര്‍ പോര്‍ട്ടുകളെക്കുറിച്ച്‌ 11-0൦ ക്ലാസില്‍ നാം പഠി
ച്ചിട്ടുണ്ട്‌. പുറമേ നിന്നുള്ള ഉപകരണങ്ങള്‍ കമ്പ്യൂട്ടറുമായി ബന്ധിപ്പിക്കുവാന്‍ ഹാര്‍ഡ്വെ

യര്‍ പോര്‍ട്ടുകള്‍ ഉപയോഗിക്കുന്നു. ഈ പോര്‍ട്ടുകള്‍ ഉപയോഗിച്ചാണ്‌ ഇത്തരം ഉപകര
ണങ്ങള്‍ കമ്പ്യൂട്ടറുമായി ആശയവിനിമയം നടത്തുന്നത്‌. ഉദാഹരണമായി VGA പോര്‍ട്ട്‌
മോണിട്ടറുമായി ബന്ധിപ്പിക്കുന്നതിനും, PS/2 പോര്‍ട്ട്‌ കീബോര്‍ഡ്‌ /മൌസ്‌ എന്നിവയു
മായി ബന്ധിപ്പിക്കുന്നതിനും ഉപയോഗിക്കുന്നു. അതുപോലെ, ഒരു സോഫ്റ്റ്വെയര്‍
പോര്‍ട്ട്‌ ഉപയോഗിച്ചുകൊണ്ട്‌ ക്ലയന്റ്‌ കമ്പ്യൂട്ടറിനെ സെര്‍വറുമായി ബന്ധിപ്പിച്ച്‌, അതിലെ
സേവനങ്ങളായ HTTP, FTP, SMTP തുടങ്ങിയവ ഉപയോഗിക്കാനാകും. പോര്‍ട്ടുകളെ
തമ്മില്‍ തിരിച്ചറിയുന്നതിനായി അവയ്ക്ക്‌ അതിവിശിഷ്ടമായ സംഖ്യാനാമം നല്‍കു
ന്നു. ഇ-മെയില്‍, ഫയല്‍ കൈമാറ്റം തുടങ്ങിയ ഒരേ സെര്‍വര്‍ കമ്പ്യൂട്ടറില്‍ തന്നെ നട
ക്കുന്ന വൃത്യസ്ത സേവനങ്ങളെ തിരിച്ചറിയുക എന്നതാണ്‌ സോഫ്റ്റ്വെയര്‍ പോര്‍ട്ടിന്റെ
ഉദ്ദേശ്യം. വ്യത്യസ്ത പോര്‍ട്ട്‌ സംഖ്യാനാമങ്ങളുപയോഗിച്ച്‌, സെര്‍വറില്‍ ലഭ്യമായ ഓരോ
സേവനവും തുടങ്ങാനും, ഉപയോഗിക്കാനും /എടുക്കാനും സാധിക്കുന്നു. പോര്‍ട്ട്‌
സംഖ്യാനാമം എന്നത്‌ ഒരു 16-ബിറ്റ്‌ സംഖ്യയാണ്‌. അത്‌ കമ്പ്യൂട്ടറിന്റെ IP മേല്‍വിലാസ
ത്തോടൊപ്പം (URL-A5 ഒപ്പം) ചേര്‍ത്തുപയോഗിച്ച്‌ സെര്‍വറില്‍ ലഭ്യമായ ഒരു പ്രത്യേക
സേവനവുമായി ആശയവിനിമയം സാധ്യമാക്കുന്നു. ഒരു വെബ്സൈറ്റിലുള്ള സേവന
ങ്ങള്‍ താഴെ തന്നിരിക്കുന്ന വിധം ഉപയോഗിക്കാന്‍ സാധിക്കും.

http://google.co.in:80

ഇവിടെ http എന്നത്‌ പ്രോട്ടോകോളും, google.co.in എന്നത്‌ ഡൊമൈന്‍ നാമവും 80
എന്നത്‌ പോര്‍ട്ടിന്റെ സംഖ്യഠനാമവുമാണ്‌. പട്ടിക 4.1-ല്‍ അറിയപ്പെടുന്ന ചില പോര്‍ട്ട്‌
സംഖ്യാനാമങ്ങളും അനുബന്ധ സേവനങ്ങളും കൊടുത്തിരിക്കുന്നു.

ഫയല്‍ കൈമാറുന്നതിനുള്ള ഫയല്‍ ദ്രാന്‍സ്ഫര്‍
പ്രോട്ടോകോള്‍ (FTP)

സെക്യൂര്‍ ഷെല്‍ (൭൭1)

ലഘു സന്ദേശങ്ങള്‍ കൈമാറുന്നതിനുള്ള സിമ്പിള്‍
മെയില്‍ ട്രാന്‍സ്ഫര്‍ പ്രോട്ടോകോള്‍ (ട/11)

ഡൊമൈന്‍ നെയിം സിസ്റ്റം (DNS)

ഹൈപ്പര്‍ ടെക്സ്റ്റ്‌ ട്രാന്‍സ്ഫര്‍ പ്രോട്ടോകോള്‍

൨൧)
പോസ്റ്റ്‌ ഓഫീസ്‌ പ്രോട്ടോകോള്‍ (POP3)
HTTP സെക്യൂര്‍ (HTTPS)

പട്ടിക 4.1 2 പോരട്ടുകളും അവയുടെ സേവനങ്ങളും

നം: ടി അഅഞ്ഞ്‌ 7 നാടത്ംറിം അ
4.2.3 DNS സെര്‍വറുകള്‍ (DNS servers)

1-00 ക്ലാസില്‍ കമ്പ്യൂട്ടര്‍ ശൃംഖലകള്‍ Five &
എന്ന അധ്യായത്തില്‍ ഡൊമൈന്‍
നാമകരണ രീതിയെക്കുറിച്ച്‌ നാം പഠി ~
ച്ചിട്ടുണ്ട്‌. ഡൊമൈന്‍ നാമങ്ങളുടെ
ഡാറ്റബേസും അനുബന്ധ IP മേല്‍
വിലാസങ്ങളും ഉള്ള ഒരു പ്രത്യേക
നെറ്റ്‌ വര്‍ക്കിങ്‌ സോഫ്‌റ്റ്‌ വെയര്‍
ഓരോ DNS സെര്‍വറിലും പ്രവൃത്തി
ക്കുന്നുണ്ടാവും. ഡൊമൈന്‍ നാമക ന്‌
രണ സ്രമ്രദായം ഒരു DNS സെര്‍വ ചിത്രം 4.6: ലോകമെമ്വാടുമുള്ള റുട്ട്‌ സെര്വറുകള്‍
റില്‍ പ്രവര്‍ത്തിക്കുകയും ക്ലയന്റ്‌

കമ്പ്യൂട്ടര്‍ നല്‍കുന്ന അപേക്ഷയ്ക്കനുസരിച്ച്‌ ഡൊമൈന്‍ നാമത്തിന്റെ IP മേല്‍വിലാസം
തിരിച്ച്‌ നല്‍കുകയും ചെയ്യു

ന്നു.

ഒരു ഡൊമൈന്‍ നാമകരണ
സ്ര്പദായത്തില്‍ ധാരാളം
DNS സെര്‍വറുകളുണ്ടായിരി
ക്കും. ഇവ സ്ഥാന്രകമമനുസ
രിച്ച്‌ ക്രമീകരിച്ചിരിക്കും. .com,
OFZ തുടങ്ങിയ ഉയര്‍ന്നതും ചിത്രം 4.7: DNS mowed

മുകള്‍ തട്ടിലുള്ളതുമായ

ഡൊമൈനുകളോ, രാജ്യങ്ങളെ സൂചിപ്പിക്കുന്ന ഡൊമൈന്‍ നാമങ്ങളായ 1! അല്ലെങ്കില്‍
Uk തുടങ്ങിയവയോ ഉള്‍പ്പെടുന്ന 13 റൂട്ട്‌ സെര്‍വറുകളായിരിക്കും ഏറ്റവും മുകളിലുള്ള
ത്‌. ചിധ്രം 4.6-ല്‍ കാണിച്ചിരിക്കുന്നത്‌ പോലെ ലോകമെമ്പാടുമായി പലസ്ഥലങ്ങളില്‍
റൂട്ട്‌ സെര്‍വറുകളുടെ ധാരാളം പകര്‍പ്പുകള്‍ സ്ഥാപിച്ചിട്ടുണ്ടാകും. മറ്റെല്ലാ DNS സെര്‍വ
റുകളും, സ്ഥാന്രകമത്തിന്റെ താഴെത്തലങ്ങളില്‍ പ്രതിഷ്ഠിച്ചിരിക്കും. 10പ്ട എങ്ങനെയാണ്‌
ഡൊമൈന്‍ നാമത്തിന്റെ IP മേല്‍വിലാസം തിരഞ്ഞെടുക്കുന്നതെന്ന്‌ നമുക്ക്‌ നോക്കാം.

ക്ലൈന്റ്‌ പ്രോഗ്രാം ാപ്പറേററിംഗ സിസ്സം

Your Computor

കേരളത്തിലെ പോലീസ്‌ വകുപ്പിന്റെ വെബ്‌ സ്റ്റ്‌ നാം സന്ദര്‍ശിക്കുന്നു എന്ന്‌ കരുതുക.
www.keralapolice.org എന്ന പേരിലുള്ള പോലീസ്‌ വകുപ്പിന്റെ ഡൊമൈന്‍ നാമം നമുക്ക്‌
ര്രൌസറില്‍ ടൈപ്പ്‌ ചെയ്യാം. DNS എങ്ങനെ IP മേല്‍വിലാസം കണ്ടെത്തുന്നു. എന്ന്‌
താഴെ തന്നിട്ടുള്ള ഘട്ടങ്ങള്‍ വിശദീകരിക്കുന്നു. ചിത്രം 4.7 കാണുക.

1. എല്ല ര്രൌസറുകളും അതിന്റെ ക്യാഷ്‌ മെമ്മറിയില്‍ സമീപകാലത്ത്‌ സന്ദര്‍ശിച്ച IP
മേല്‍വിലാസങ്ങള്‍ സുൂക്ഷിക്കുന്നുണ്ടാകും. അതിനാല്‍, ബ്രൌസര്‍ ആദ്യം പ്രാദേ
ശിക മെമ്മറി (മിനി ക്യാഷ്‌) പരിശോധിച്ച്‌ IP മേല്‍വിലാസമുണ്ടോ എന്ന്‌ ഉറപ്പ്‌ വരു
ത്തുന്നു. ഉണ്ടെങ്കില്‍ അതുപയോഗിക്കുന്നു.

2. ബ്രൌസറിന്റെ ക്യാഷ്‌ മെമ്മറിയില്‍ IP മേല്‍വിലാസം ഇല്ലെങ്കില്‍ അത്‌ ഓപ്പറേറ്റിംഗ്‌
സിസ്റ്റത്തിന്റെ പ്രാദേശിക ക്യാഷ്‌ മെമ്മറി പരിശോധിക്കുന്നു.

3. അവിടെയുമില്ലെങ്കില്‍ 1512-യുടെ പ്രാദേശിക DNS സെര്‍വറില്‍ പരിശോധിക്കുന്നു.

4. ISP യുടെ DNS സെര്‍വറിലും ഡൊമൈന്‍ നാമമില്ല എങ്കില്‍ ISP യുടെ DNS സെര്‍
വര്‍, റൂട്ട്‌ സെര്‍വറില്‍ തുടങ്ങി ആവര്‍ത്തിച്ചുള്ള തിരച്ചിലിലൂടെ അത്‌ കണ്ടെത്തുന്നു.

5. ISP-ayoas DNS സെര്‍വര്‍, IP മേല്‍വിലാസം ബ്രൌസറിന്‌ തിരിച്ച്‌ നല്‍കുന്നു.

6. www.keralapolicegov യുടെ IP മേല്‍വിലാസം ഉപയോഗിച്ചുകൊണ്ട്‌ (ബ്രൌസര്‍,
വെബ്‌ സെര്‍വറുമായി ബന്ധപ്പെടുകയും, ബ്രൌസര്‍ വിന്‍ഡോയില്‍ വെബ്‌ പേജ്‌
കാണിക്കുകയും ചെയ്യുന്നു. IP മേല്‍വിലാസം കിട്ടിയില്ലായെങ്കില്‍ “സെര്‍വര്‍ കണ്ടെ
ത്തിയില്ല" എന്ന സന്ദേശം ബ്രൌസര്‍ വിന്‍ഡോയിലെത്തിക്കുന്നു.

ഡൊമൈന്‍ നാമങ്ങളുടെയും അനുബന്ധ മേല്‍വിലാസങ്ങളുടെയും മൊത്തമാ

യുള്ള ഡാറ്റാബേസ്‌ ലോകമെമ്പാടുമുള്ള 13 റൂട്ട്‌ സെര്‍വറുകളാണ്‌ കൈകാര്യം

ചെയ്യുന്നത്‌. ഓരോ റൂട്ട്‌ സെർവറും പലരാജ്യങ്ങളില്‍ സ്ഥാപിച്ചിട്ടുളള സെര്‍വറു

കളുടെ ഒരു ശൃംഖലയിലാണുള്ളത്‌. അവയ്ക്ക്‌ A, 8, ൨. 2. 1.1, ൭1, 1. J,K,L,M
എന്നിങ്ങനെ നാമകരണം നല്‍കിയിരിക്കുന്നു. ICANN, NASA (നാഷണല്‍ ഏറോനോട്ടിക്സ്‌
ആന്റ്‌ സ്പേസ്‌ അഡ്മിനിസ്ട്രേഷന്‍), മേരിലാന്റ്‌ സര്‍വകലാശാല, വെരിസൈന്‍ ഇന്‍കോര്‍പ്പ
റേഷന്‍ തുടങ്ങിയ സ്ഥാപനങ്ങളാണ്‌ ഈ സെര്‍വറുകളെ പരിപാലിക്കുന്നത്‌. റൂട്ട്‌ സെര്‍വറൂു
കളെ പരിപാലിക്കുന്ന സ്ഥാപനങ്ങള്‍ ചേര്‍ന്നാണ്‌ ICANN (ഇന്റര്‍നെറ്റ്‌ കോര്‍പ്പറേഷന്‍ ഫോര്‍
അസ്സറൈന്‍ഡ്‌ നെയിംസ്‌ ആന്റ്‌ നമ്പേഴ്സ്‌) റൂട്ട്‌ സെര്‍വര്‍ സ്രമ്പദായ ഉപദേശക സമിതി
ഉണ്ടായിരിക്കുന്നത്‌. ഇവരാണ്‌ ഇന്റര്‍നെറ്റിലെ റൂട്ട്‌ സെര്‍വര്‍ സ്രമ്പദായത്തിന്റെ പ്രവര്‍ത്ത
നം, കാരൃനിര്‍വഹണം, സുരക്ഷിതത്വം, സമ്പൂര്‍ണത ഉറപ്പാക്കല്‍ തുടങ്ങിയവയുമായി ബന്ധ
പ്പെട്ട ഉപദേശങ്ങള്‍ ICANN ന്‌ നല്‍കുന്നത്‌. ഇന്ത്യയില്‍ NIXI (നാഷണല്‍ ഇന്റര്‍നെറ്റ്‌
എക്സ്ചേഞ്ച്‌ ഓഫ്‌ ഇന്ത്യ) യാണ്‌ മുംബൈ (I റൂട്ടു), ഡല്‍ഹി (K റൂട്ടു), ചെന്നൈ (F റൂട്ട്‌)
എന്നിവിടങ്ങളില്‍ റൂട്ട്‌ സെര്‍വറുകള്‍ നിര്‍മിച്ച്‌ നല്‍കിയിട്ടുള്ളത്‌.

നൂറ്‌ കണക്കിന്‌ കമ്പ്യൂട്ടറുകളും ഉപകരണങ്ങളും ഇന്റര്‍നെറ്റുമായി ബന്ധിപ്പിച്ചിട്ടുള്ള വിദ്യാ
ഭ്യാസസ്ഥാപനങ്ങള്‍, സര്‍ക്കാര്‍ വകുപ്പുകള്‍, സോഫ്‌റ്റ്വെയര്‍ നിര്‍മാണശാലകള്‍ തുട
ങ്ങിയവര്‍ അവരുടെ ഇന്‍ദ്രാനെറ്റില്‍ സ്വന്തം DNS സെര്‍വര്‍ സ്ഥാപിച്ചിട്ടുണ്ടാകും. ഉപ
യോക്താക്കള്‍ സ്ഥിരമായി ഉപയോഗിക്കുന്ന ഡൊമൈന്‍നാമങ്ങളും അവയുടെ IP മേല്‍വി
ലാസങ്ങളും ഉള്‍പ്പെടുന്ന ഒരു പട്ടിക ഈ പ്രാദേശിക DNS സെര്‍വറിലുണ്ടാകും. പുതിയ
ഡൊമൈന്‍ നാമങ്ങള്‍ ഉള്‍പ്പെടുത്തിക്കൊണ്ട്‌ ഈ പട്ടിക സമയാസമയം നവീകരിക്കാറു
മുണ്ട്‌. ഇന്റര്‍നെറ്റിലെ കമ്പ്യൂട്ടര്‍ ഒരു വെബ്സൈറ്റ്‌ ഉപയോഗിക്കാന്‍ ശ്രമിക്കുമ്പോള്‍
പ്രസ്തുത വെബ്‌ സ്ഡ്റ്റിന്റെ ഡൊമൈന്‍ നാമവുമായി ബന്ധപ്പെട്ട IP മേല്‍വിലാസത്തി
നായി ആദ്യം പ്രാദേശിക DNS സെര്‍വറില്‍ അന്വേഷിച്ച്‌ കണ്ടെത്തുന്നു. ഇത്‌ സ്ഥാപന
ത്തിന്റെ ഇന്റര്‍നെറ്റ്‌ വേഗത വര്‍ധിപ്പിക്കുന്നു. ഈ രീതിയില്‍ IP മേല്‍വിലാസം കണ്ടെ
ത്താനായില്ലായെങ്കില്‍ ISP mos DNS സെര്‍വറില്‍ അന്വേഷിക്കുന്നു.

നിലവിലുള്ള നമ്മുടെ DNS ദാതാവിന്‌ പകരം ഉപയോഗിക്കാവുന്ന സ്വതന്ത്ര DNS
സേവനമാണ്‌ ഗുഗിളിന്റെ പൊതു DNS. ഇതിന്റെ IP മേല്‍വിലാസങ്ങളാണ്‌ 8.8.8.8,
8.8.4.4 എന്നിവ. ഈ പൊതു DNS ന്റെ IP മേല്‍വിലാസങ്ങളില്‍ ഏതിലേക്കെ
ക്ടിലും നമ്മുടെ കമ്പ്യൂട്ടറിനെ നയിക്കുന്നരീതിയില്‍ നമ്മുടെ ശൃംഖലയെ ക്രമീ

കരിക്കാവുന്നതാണ്‌.

4. വെബ്‌ സാങ്കേതികവിദ്യ

നിങ്ങളുടെ പുരോഗതി അറിയുക

1. ഇന്റര്‍നെറ്റ്‌ പ്രോട്ടോകോളിന്റെ (IP) ഉയര്‍ന്ന തലത്തില്‍ പ്രവര്‍ത്തി
ക്കുന്ന ഒരു പ്രോട്ടോകോളിന്റെ പേരെഴുതുക.

2. HTTPS എന്നതിന്റെ പൂര്‍ണ രൂപം എഴുതുക.

3. ഡാറ്റ സെന്റുകളില്‍ വെബ്സെര്‍വറുകള്‍ സ്ഥാപിക്കുന്നതിന്റെ eng
ങ്ങള്‍ എന്തെല്ലാം?

4. ശരിയോ തെറ്റോ എന്ന്‌ പ്രസ്താവിക്കുക.

a. ക്ലയന്റ്‌ -സെര്‍വര്‍ മാതൃക അനുസരിച്ചാണ്‌ വെബ്‌ സെര്‍വര്‍
സോഫ്റ്റ്വെയര്‍ പ്രവര്‍ത്തിക്കുന്നത്‌.

1. സെര്‍വര്‍ ഓപ്പറേറ്റിംഗ്‌ സിസ്റ്റവും വെബ്‌ സെര്‍വര്‍ സോഫ്റ്റ്‌വെ
യറും ചേര്‍ന്നതാണ്‌ വെബ്‌ സെര്‍വര്‍.

5. ഒരു സോഫ്റ്റ്വെയര്‍ പോര്‍ട്ട്‌ സംഖ്യാനാമസ്യ്രദായത്തിലെ ബിറ്റു
കളുടെ എണ്ണം ആണ്‌.
2. 8 b. 16 c. 32 d. 64

6. ഡൊമൈന്‍ നാമകരണസ്രമ്പദായം ഡൊമൈന്‍ നാമത്തിന്റെ
തിരികെ നല്‍കുന്നു.

4.3 വെബ്‌ രൂപകല്‍പന ചെയ്യാം (Web designing)

വെബ്‌ സൈറ്റ്‌ നിര്‍മാണത്തിന്റെ ആദൃഘട്ടം വെബ്‌ പേജുകളുടെ ആസുധ്രണമാണ്‌.
നമ്മുടെ വിദ്യാലയത്തിനായി ഒരു വെബ്സൈറ്റ്‌ വികസിപ്പിക്കുന്നു എന്ന്‌ കരുതുക. വെബ്‌
പേജുകളും അവ തമ്മിലുള്ള ബന്ധങ്ങളും തീരുമാനിച്ച്‌ കഴിഞ്ഞാല്‍ അവയുടെ രൂപ
കല്‍പ്പനയിലേക്ക്‌ കടക്കാം. ഇതിനായി ഏതെങ്കിലും ഒരു ടെക്സ്റ്റ്‌ എഡിറ്റര്‍ ഉപയോഗി
ക്കാവുന്നതാണ്‌. ഒരു ഹോം പേജും, സ്‌കൂളില്‍ ലഭ്യമാകുന്ന കോഴ്‌സുകള്‍, സൌകര്യ
ങ്ങള്‍, ബന്ധപ്പെടേണ്ട മേല്‍വിലാസം തുടങ്ങിയവ ദൃശ്യമാക്കുന്ന മറ്റൊരു പേജും നിര്‍മിച്ച്‌
അവ തമ്മില്‍ മെനു ഉപയോഗിച്ച്‌ ബന്ധപ്പെടുത്തുന്ന രീതിയില്‍ മനോഹരമായ ഒരു
വെബ്‌ സ്റ്റ്റ്‌ നമുക്ക്‌ നിര്‍മിക്കാം.

വെബ്‌ രൂപകല്‍പ്പന ചെയ്യുന്നതിന്‌ നിരവധി സോഫ്റ്റ്വെയറുകള്‍ ലഭ്യമാണ്‌. വേഡ്‌ പ്രൊസ്സറ
സര്‍ ഉപയോഗിച്ച്‌ അനായാസമായി ഒരു ഡോക്യുമെന്റ്‌ തയ്യാറാക്കുന്നത്‌ പോലെ, വെബ്‌
നിര്‍മാണ ടൂളുകളില്‍ ലഭ്യമായിട്ടുള്ള സങ്കേതങ്ങളുടെ സഹായത്തോടെ വെബ്‌ പേജു
കള്‍ നിര്‍മിക്കാവുന്നതാണ്‌. വെബ്‌ പേജുകള്‍ രൂപകല്‍പന ചെയ്യുന്നതിനും അവയെ പര
സ്പരം ബന്ധിപ്പിച്ച്‌ കൊണ്ട്‌ വെബ്സ്റ്റ്‌ രൂപീകരിക്കുന്നതിനുമുള്ള സംവിധാനങ്ങള്‍
ഈ സോഫ്റ്റ്വെയറുകള്‍ നല്‍കുന്നു. FTP പ്രോട്ടോകോളുകള്‍ ഉപയോഗിച്ച്‌ ഫയലുകള്‍
സെര്‍വറുകളിലേക്ക്‌ കൈമാറ്റം ചെയ്യുന്നതിനുള്ള സ്വാഭാവിക സൌകര്യം ഇത്തരം സോ
ഫ്റ്റ്വെയറുകളില്‍ ഉണ്ടാകും. ബ്ലൂഫിഷ്‌, ബൂട്ട്‌ സ്ട്രാപ്പ്‌, അഡോബ്‌ ഥ്ധീംവീവര്‍, മൈക്രോ
സോഫ്റ്റ്‌ എക്‌സ്പ്രഷന്‍ വെബ്‌ തുടങ്ങിയവ വെബ്‌ നിര്‍മാണത്തിന്‌ ഉപയോഗിക്കുന്ന
പ്രമുഖ സോഫ്റ്റ്വെയറുകളാണ്‌, ചിത്രം 4.8-ല്‍ വെബ്‌ നിര്‍മാണത്തിന്‌ ഉപയോഗിക്കുന്ന

പ്രശസ്തമായ ചില സോഫ്റ്റ്വെയറുകളുടെ IDE (ഇന്റഗ്രേറ്റഡ്‌ ഡവലപ്മെന്റ്‌ എന്‍വ
യോണ്‍മെന്റ്‌ ) കാണിച്ചിരിക്കുന്നു.

ലം it Yew Document Ge ject ous വജ മഞ്ജ He
BEX acalr.S\/oe\ S50 B16
ന്നതു Tales [Lit] C5S] Fre] Fonts Fares]
HBAMHD+%2e\/tO00bs see
© fonts ATMA Docfook HIM പെസ PHP Rupce SQL
Bi EE hia. PUBLIC ശന BTML 4.0 Tr

Sera i.

ബ്ല്ൂഫിഷ്‌ (apts വിവര

AMO 3.൭. PANT രുപകത്പനക്കുപയോഗിക്കുന്ന സോഫ്റ്റ്വെയറുക്ളുടെ [DE

വെബ്‌ സ്്്റുകളുടെ നിര്‍മാണത്തെക്കുറിച്ച്‌ ഹൈസ്കൂള്‍ ക്ലാസുകളില്‍ നിങ്ങള്‍ പഠിച്ചി
ട്ടുണ്ട്‌. 11117.-ല്‍ ഉള്ള ടാഗുകളും അവയുടെ ആട്രിബ്യൂട്ടുകളും ഉപയോഗിച്ച്‌ വെബ്‌
പേജുകള്‍ രൂപകല്‍പ്പന ചെയ്യാം.

4.4. സ്റ്റാറ്റിക്‌, ഡൈനാമിക്‌ വെബ്‌ പേജുകള്‍
(Static and dynamic web pages)

ചെറുകിട വ്യവസായങ്ങള്‍, വിദ്യാലയങ്ങള്‍ തുടങ്ങിയവയുടെ വെബ്‌ സൈറ്റുകള്‍ എപ്പോള്‍
സന്ദര്‍ശിച്ചാലും, പേജുകളിലെ ഉള്ളടക്കം സ്ഥിരമായി (സ്റ്റാറ്റിക്‌ ആയി) നില്‍ക്കുന്നത്‌ ശ്രദ്ധിച്ചു
കാണുമല്ലോ? ഇത്തരം വെബ്‌ സൈറ്റുകളെ സ്റ്റാറ്റിക്‌ വെബ്സൈറ്റുകള്‍ എന്ന്‌ വിളിക്കു
ന്നു. എസ്‌.എസ്‌.എല്‍.സി/ഹയര്‍സെക്കന്ററി പരീക്ഷ എഴുതിയ വിദ്യാര്‍ഥികള്‍ തങ്ങളുടെ
രജിസ്റ്റര്‍ നമ്പര്‍ നല്‍കുമ്പോള്‍, അവരവരുടെ പരീക്ഷാഫലം ദൃശ്യമാകുംവിധം ഉള്ള
ടക്കം മാറിവരുന്ന വെബ്‌ സ്റ്്റുകളും നിങ്ങള്‍ കണ്ടിട്ടുണ്ടാകും. ഇവ ഡൈനാമിക്‌ പേജു
കള്‍ എന്നറിയപ്പെടുന്നു. പ്രോഗ്രാം കോഡില്‍ മാറ്റം വരുത്താത്തിടത്തോളം ഉള്ളടക്കം
സ്ഥിരമായിത്തന്നെ നിലനില്‍ക്കുന്ന പേജുകളാണ്‌ സ്റ്റാറ്റിക്‌ വെബ്‌ പേജുകള്‍. ആദ്യകാ
ലത്ത്‌ HTML മാത്രം ഉപയോഗിച്ചാണ്‌ ഈ സ്റ്റാറ്റിക്‌ വെബ്‌ പേജുകള്‍ നിര്‍മിച്ചിരുന്നത്‌.
പിന്നീട്‌ ജാവ സ്ക്രിപ്റ്റ്‌, വിബി സ്ക്രിപ്റ്റ്‌ തുടങ്ങിയ സ്ക്രിപ്റ്റിംഗ്‌ ഭാഷകളുടെ വര
വോടെ വെബ്‌ പേജുകള്‍ക്ക്‌ ചലനാത്മകത കൈവന്നു. വെബ്‌ പേജിന്റെ ചില ഭാഗങ്ങ
ളില്‍ മൌസ്‌ പോയിന്റര്‍ വയ്ക്കുമ്പോള്‍ ആ ഭാഗത്ത്‌ നിറവൃത്യാസവും രൂപമാറ്റവും സംഭ
വിക്കുന്നതും, ചി്രങ്ങള്‍ ഒന്നിന്ന്‌ പിറകേ ഒന്നായി ക്രമീകരിക്കപ്പെടുന്നതുമെല്ലാം
സ്ക്രിപ്റ്റിംഗ്‌ ഭാഷ ഉപയോഗിക്കുന്നതു കൊണ്ടാണ്‌. ഇത്തരം പ്രത്യേകതകളുള്ള വെബ്‌
പേജുകളും സ്റ്റാറ്റിക്‌ വെബ്‌ പേജുകളായിട്ടാണ്‌ കണക്കാക്കിയിട്ടുള്ളത്‌.

4. വെബ്‌ സാങ്കേതികവിദ്യ

guogles dani പേജിനായുക്ള നിര്‍ദേശം ഡൈനാമിക്‌ വെച്‌ പജിനായുക്കൂ നിര്‍ദേശം

ചിത്രം ട്‌. - ന്്രാറ്റിക, ഡ്ധൈനാമിക്‌ എമ്തി വെമ്മ്‌ പേജുകശിക്കായുക്ള നിരീദ്ദശങ്ങശി

ഓരോ തവണ വെബ്‌ പേജ്‌ എടുക്കുമ്പോഴും സെര്‍വര്‍ ഭാഗത്ത്‌ പേജിലുള്ള കോഡ്‌ അത്‌
നിര്‍മിക്കുന്നു എങ്കില്‍ അത്തരം പേജിനെ ഡൈനാമിക്‌ വെബ്‌ പേജ്‌ എന്ന്‌ വിളിക്കുന്നു.
വെബ്‌ സെര്‍വറില്‍ സ്ഥാപിച്ചിട്ടുള്ള ആപ്ലിക്കേഷന്‍ പ്രോഠ്രഗാം ഉപയോഗിച്ച്‌ ഡൈനാമിക്‌
പേജുകള്‍ പ്രവര്‍ത്തിപ്പിക്കുന്നു. വെബ്‌ പേജിലെ സ്ക്രിപ്റ്റ്‌, വെബ്‌ സെര്‍വറില്‍ പ്രവര്‍ത്തി
ക്കുമ്പോള്‍ ഉണ്ടാകുന്ന 11111. പേജുകള്‍ ക്ലയന്റ്‌ പ്രൌസറിലേക്കയക്കപ്പെടുന്നു. മിക്ക
വാറും സന്ദര്‍ഭങ്ങളില്‍ ഇത്തരം വെബ്‌ പേജുകള്‍ നിര്‍മിക്കാന്‍ ഡാറ്റബേസിലുള്ള ഡാറ്റ
യാണ്‌ ഉപയോഗിക്കുന്നത്‌. SSLC/HSE പരീക്ഷാഫലങ്ങള്‍ കാണിക്കുന്ന വെബ്‌ സ്റ്റ
കള്‍, റോഡ്‌, റെയില്‍, വ്യോമ യാത്രകള്‍ക്കുള്ള ടിക്കറ്റ്‌ മുന്‍കൂട്ടി ഉറപ്പിക്കാനാകുന്ന സ്റ്റു
കള്‍, പണമിടപാടുകള്‍ക്കുള്ള വെബ്‌ സ്റ്റുകള്‍ തുടങ്ങിയവയുടെ പേജുകളില്‍ പരി
വര്‍ത്തനാത്മക ഉള്ളടക്കമുണ്ടാവുകയും അവ ഡൈനാമിക്‌ പേജുകളായി കണക്കാക്കു
കയും ചെയ്യുന്നു. PHP, ASP, JSP തുടങ്ങിയവ ഉപയോഗിച്ച്‌ ഡൈനാമിക്‌ വെബ്‌ പേജു
കള്‍ നിര്‍മിക്കുന്നു. സ്റ്റാറ്റിക്‌, ഡൈനാമിക്‌ എന്നീ വെബ്‌ പേജുകള്‍ തമ്മിലുള്ള ഒരു താര
തമ്യം പട്ടിക 4.2-ല്‍ തന്നിട്ടുണ്ട്‌.

വെബ്‌ പേജിന്റെ ഉള്ളടക്കവും രൂപരേഖയും സ്ഥിര ഉള്ളടക്കവും രൂപരേഖയും പ്രോഗ്രാം പ്രവര്‍ത്തിക്കു
മായിരിക്കും. മ്പോര്‍ വ്ൃത്യാസകെടുന്നു.

സ്താറ്റിക്‌ വെബ്‌ പേജുകള്‍ ഒരിക്കലും ഡാറ്റാബേസ്‌ ഡാറ്റാബേസ്‌ ഉപയോരിച്ച്‌ കറികളുടെ സഹായത്താല്‍
ഉപയോരിക്കുന്നില്ല. പരിവര്‍ത്തനാത്മക ഉള്ളടക്കം സൃഷ്ടിക്കുന്നു.

സ്താറ്റിക്‌ വെബ്‌ പേജുകള്‍ ബ്രസറില്‍ നേരിട്ട്‌ പ്രവര്‍ ഡൈനാമിക്‌ വെബ്‌ പേജുകള്‍ സെര്‍വര്‍ ദാഭത്തുള്ള
ത്തിക്കുന്നതിനാല്‍ സെര്‍വര്‍ ഭാഗത്തുള്ള ആപ്പിക്കേ ആപ്പിക്കേഷന്‍ പ്രോ(്രാമുകളുടെ സഹായത്താല്‍
ഷന്‍ പ്രോഗ്രാമുകളുടെ ആവശ്യമില്ല. ച്ച്‌ ഫലങ്ങള്‍ പ്രദര്‍രികിക്കുന്നു.

QING വെബ്‌ പേജുകള്‍ എളുകത്തില്‍ നിര്‍മിക്കാനു ഡൈനാമിക്‌ വെബ്‌ പേജുകളുടെ നിര്‍മാണത്തിന്‌
കും പ്രോദ്രാമിങ്‌ വൈദന്ധ്യം ആവശ്യമാണ്‌.

പട്ടിക 4.2: സ്ത്ാറ്റിക്‌, ഡ്ധൈനാമിക്‌ എന്ന? വെ്മ്‌ ചേജുകകളുടെ താരതമ്യം

4.5 സ്ക്രിപ്റ്റുകള്‍ (Scripts)

11141. പേജുകളില്‍ ഉള്‍ക്കൊള്ളിക്കുന്ന പ്രോഗ്രാം കോഡുകളാണ്‌ സ്ക്രിപ്റ്റുകള്‍. നോട്ട്‌
പാഡ്‌ പോലുള്ള ഒരു ടെക്സ്റ്റ്‌ എഡിറ്റര്‍ ഉപയോഗിച്ചാണ്‌ അവ തയാറാക്കുന്നത്‌. ഡൈനാ
മിക്‌ വെബ്‌ പേജുകള്‍ നിര്‍മിക്കുന്നതിനായി ജാവ സ്ക്രിപ്റ്റ്‌, വി.ബി. സ്ക്രിപ്റ്റ്‌, പി.എച്ച്‌.പി,
പേള്‍ തുടങ്ങിയ സ്ക്രിപ്റ്റിങ്‌ ഭാഷകള്‍ ഉപയോഗിക്കുന്നു. ഓപ്പറേറ്റിംഗ്‌ സിസ്റ്റത്തിന്റെ
സഹായത്തോടെ കമ്പ്യൂട്ടര്‍ ഹാര്‍ഡ്വെയറിനെക്കൊണ്ട്‌ നിര്‍ദേശങ്ങള്‍ നടപ്പിലാക്കിക്കുന്ന
വയാണ്‌ സാമ്പ്രദായിക പ്രോഗ്രാമിങ്‌ ഭാഷകള്‍. എന്നാല്‍ വെബ്‌ സെര്‍വറുകളാല്‍/വെബ്‌
ര്ബൌസറുകളാല്‍ വ്യാഖ്യാനിക്കപ്പെടുന്നവയാണ്‌ സ്ക്രിപ്റ്റിംഗ്‌ ഭാഷകള്‍. ഇന്ന്‌, ഭൂരിഭാഗം
ഏക കമ്പ്യൂട്ടര്‍ അധിഷ്ഠിത പ്രോഗ്രാമുകളും വെബ്‌ അധിഷ്ഠിത പ്രോഗ്രാമുകളാല്‍ പൂന
സ്ഥാപിക്കപ്പെട്ടിട്ടുണ്ട്‌. ധനകാര്യസ്ഥാപനങ്ങളിലും മറ്റും ഉപയോഗിച്ചിരുന്ന സോഫ്‌്റ്റ്വെയ
റുകള്‍ അതാത്‌ ശാഖകളില്‍ത്തന്നെ സ്ഥാപിച്ചിരുന്നവയാണ്‌. എന്നാല്‍ ഇന്ന്‌ ഈ സ്ഥാ
പനങ്ങള്‍ തങ്ങളുടെ സോഫ്റ്റ്വെയര്‍ വെബ്‌ സെര്‍വറില്‍ ലഭ്യമാക്കുകയും അത്‌ ഇന്റര്‍നെ
റ്റിന്റെ സഹായത്താല്‍ ജീവനക്കാര്‍ ഉപയോഗിക്കുകയും ചെയ്യുന്നു. ധനവിനിമയ സ്ഥാപ
നത്തിന്‌ ആവശ്യമായ സോഫ്റ്റ്വെയറുകള്‍, ഹയര്‍സെക്കന്ററി പ്രവേശനത്തിനുള്ള
സോഫ്റ്റ്വെയര്‍ തുടങ്ങിയ വെബ്‌ അധിഷ്ഠിത സോഫ്‌റ്റ്വെയറുകളുടെ നിര്‍മാണത്തിന്‌
സ്ക്രിപ്റ്റിങ്‌ ഭാഷകള്‍ ഉപയോഗിക്കുന്നു. ഒരു 111111. പേജില്‍ <SCRIPT>, </SCRIPT>
എന്നീ ടാഗുകള്‍ക്ക്‌ ഉള്ളിലായാണ്‌ സ്ക്രിപ്റ്റ്‌ എഴുതുന്നത്‌. ഒരു 111141. ഡോകു്യുമെന്റില്‍
സ്ക്രിപ്റ്റ്‌ ഉള്‍പ്പെടുത്തുന്നതിനോ, സൂചിപ്പിക്കുന്നതിനോ ആണ്‌ <SCRIPT> ടാഗ്‌ ഉപ
യോഗിക്കുന്നത്‌. ഇതിന്‌ Type, Sre എന്നീ ആഭ്രിബ്യൂട്ടുകളുണ്ട്‌. സ്ക്രിപ്റ്റ്‌ ടാഗിന്‌ ഉള്ളി
ലുള്ള സ്ക്രിപ്റ്റിങ്‌ ഭാഷ തിരിച്ചറിയാനായാണ്‌ Type ആട്രിബ്യൂട്ട്‌ ഉപയോഗിക്കുന്നത്‌.
സ്ക്രിപ്റ്റ്‌ കോഡ്‌ ഉള്‍ക്കൊള്ളുന്ന ഫയലിന്റെ പേര നല്‍കാനാണ്‌ SRC ആഭ്രിബ്യൂട്ട്‌ ഉപ
യോഗിക്കുന്നത്‌. 1111. ടാഗുകളെയും ആട്രിബ്യൂട്ടുകളെയും കുറിച്ച്‌ നമുക്ക്‌ തുടര്‍ന്നുള്ള
ഭാഗങ്ങളില്‍ മനസിലാക്കാം.

80) HTML കോഡിനുള്ളില്‍ ജാവ സ്ക്രിപ്റ്റ്‌ ഉള്‍പ്പെടുത്താന്‍ <SCRIPT Type="text/
javascript"> ഉപയോഗിക്കുന്നു.

4.5.1 വിവിധതരം സ്ര്രിപ്റ്റിങ ഭാഷകള്‍ (Types of scripting languages)

ഇന്റര്‍നെറ്റിലെ ഒരു വെബ്സൈറ്റിന്റെ ലോഗിന്‍ പേജ്‌ പരിഗണിക്കുക (സാധാരണയായി
ഉപയോക്താവ്‌ യൂസര്‍ നാമവും, പാസ്വേഡും നല്‍കാനുപയോഗിക്കുന്ന പേജാണിത്‌).
ഉപയോക്താവ്‌ യൂസര്‍ നാമവും പാസ്വേഡും നല്‍കിയശേഷം ലോഗിന്‍ ബട്ടണില്‍
ക്ലിക്ക്‌ ചെയ്യും. എന്നാല്‍ ഇവ നല്‍കാതെ ലോഗിന്‍ ബട്ടണില്‍ ക്ലിക്ക്‌ ചെയ്താല്‍ എന്ത്‌
സംഭവിക്കും? സ്വാഭാവികമായും ഇവ നല്‍കിയിട്ടില്ലെന്ന്‌ കമ്പ്യൂട്ടര്‍ ഉപയോക്താവിനോട്‌
പറയും. രണ്ട്‌ കമ്പ്യൂട്ടറുകളാണ്‌ ഈ വെബ്‌ പേജ്‌ നിയന്ത്രിക്കുന്നത്‌ വെബ്‌ പേജ്‌ പ്രദര്‍ശി
പ്പിക്കുന്ന ക്ലയന്റ്‌ കമ്പ്യൂട്ടറും വെബ്‌ പേജ്‌ നല്‍കുന്ന സെര്‍വര്‍ കമ്പ്യൂട്ടറും. ഉപയോ
ക്താവ്‌ യൂസര്‍ നാമം നല്‍കിയിട്ടുണ്ടോ എന്ന്‌ എവിടെയാണ്‌ പരിശോധിക്കുന്നത്‌. ക്ലയന്റ്‌
കമ്പ്യൂട്ടറിലോ അതോ സെര്‍വര്‍ കമ്പ്യൂട്ടറിലോ? ധാരാളം ആളുകള്‍ ഒരേ വെബ്സ്റ്റ്റ്‌

സന്ദര്‍ശിക്കുന്നതിനാലും സെര്‍വര്‍ തന്നെ ഇത്തരം അപേക്ഷകംളെല്ലാം കൈകാര്യം ചെയ്യേ

4. വെബ്‌ സാങ്കേതികവിദ്യ

ണ്ടതിനാലും ക്ലയന്റ്‌ കമ്പ്യൂട്ടറിനേ
ക്കാള്‍ വളരെയധികം തിരക്കിലായി
രിക്കും സെര്‍വര്‍ കമ്പ്യൂട്ടര്‍. ആയ
തിനാല്‍ ക്ലയന്റ്‌ ഭാഗത്ത്‌ ചെയ്യാ Mert
വുന്ന പ്രവൃത്തികളെല്ലാം അവിടെ
ത്തന്നെ ചെയ്യുന്നതാണ്‌ ഉചിതം.
അങ്ങനെ സെര്‍വറിന്റെ ജോലി password |
ഭാരം കുറയ്ക്കാനാകും. ഈ പരി

ശോധന സെര്‍വറിലാണ്‌ നടക്കുന്ന Login | Cancel

തെങ്കില്‍, ഉപയോക്താവ്‌ നല്‍കിയ

അപേക്ഷ ക്ലൂയന്റില്‍ നിന്നും ഇന്റര്‍ ചിതം 4.10: സെര്വറിമ്റീ (പതികരണം

Login Failed. Please Check User Name.

User Name

നെറ്റിലൂടെ സെര്‍വറില്‍ അയ്ക്കേ

ണ്ടിവരും. ചിലപ്പോഴെങ്കിലും സെര്‍ Login
വറിലെത്താന്‍ ഇതിന്‌ ഇന്റര്‍നെറ്റി
ലൂടെ വളരെ ദൂരം സഞ്ചരിക്കേണ്ടി User Name

യും വരും. വളരെ അധികം ക്ലയന്റു നി C4

കളില്‍ നിന്ന്‌ ലഭിക്കുന്ന ഇത്തരം

അപേക്ഷകള്‍ വന്ന (്രമത്തില്‍ ന്നി
സെര്‍വര്‍ ശേഖരിക്കുന്നു. സെര്‍വര്‍
പ്രൊസസ്സ്‌ ചെയ്യുന്നതുവരെ അയച്ച Please enter user name.

അപേക്ഷ നിരയില്‍ കാത്ത്‌
നില്‍ക്കുന്നു. ക്ലയന്റ്‌ ഏതെങ്കിലും
യൂസര്‍ നാമമോ പാസ്വേഡോ നല്‍
കിയിട്ടുണ്ടോയെന്ന്‌ ക്രമം അനുസ
രിച്ച്‌ സെര്‍വര്‍ പരിശോധിക്കുന്നു.
നല്‍കിയിട്ടില്ലെങ്കില്‍, ചിത്രം 4.10-ല്‍
കാണിച്ചിട്ടുള്ളതുപോലെ ഉചിതമായ ഒരു സന്ദേശം സെര്‍വര്‍ ക്ലയന്റിലേക്ക്‌ അയയ്ക്കു
ന്നു. ഈ സന്ദേശവും ഇന്റര്‍നെറ്റിലൂടെ വളരെ ദൂരം സഞ്ചരിച്ച്‌ ക്ലയന്റിലെത്തുന്നു. ചുരു
ക്കത്തില്‍ യൂസര്‍ നാമം നല്‍കാതെ ഉപയോക്താവ്‌! സബ്മിറ്റ്‌ ബട്ടണില്‍ ക്ലിക്ക്‌ ചെയ്താല്‍
യൂസര്‍ നാമം നല്‍കിയിട്ടില്ല എന്ന സന്ദേശം ക്ലയന്റ്‌ കമ്പ്യൂട്ടറില്‍ ലഭിക്കുന്നതുവരെ
അയാള്‍ കാത്തിരിക്കേണ്ടിവരുന്നു. കൂടാതെ ക്ലയന്റില്‍ നിന്ന്‌ സെര്‍വറിലേക്കും തിരിച്ചും
ഡാറ്റ സഞ്ചരിക്കുന്നതിനാല്‍ ശൃംഖലയുടെ ഗതാഗത തിരക്ക്‌ വര്‍ധിക്കുകയും ചെയ്യുന്നു.

OK

ചിത്രം 4.11: ക്ലയന്റ്‌ enroaoladg പ്രതി7കരണം

ഈ പരിശോധന ക്ലയന്റ്‌ ഭാഗത്തു തന്നെ നടക്കുകയാണെങ്കില്‍, ഉപയോക്താവ്‌ സബ്മിറ്റ്‌
ബട്ടണ്‍ അമര്‍ത്തുമ്പോള്‍, യൂസര്‍ നാമമോ, പാസ്വേഡോ നല്‍കിയിട്ടുണ്ടോ എന്ന്‌ ക്ലയന്റ്‌

ഭാഗത്തെ സ്ക്രിപ്റ്റ്‌ കോഡിന്‌ തന്നെ പരിശോധിക്കാവുന്നതാണ്‌. അല്ലാത്തപക്ഷം ഉചി
തമായ ഒരു സന്ദേശം ദൃശ്യമാക്കാവുന്നതുമാണ്‌. ഈ പ്രക്രിയയില്‍, ഡാറ്റ ഇന്റര്‍നെറ്റി
ലൂടെ സെര്‍വറിലേക്ക്‌ സഞ്ചരിക്കുകയോ, ലളിതമായ ഈ ദൌതൃത്തിന്‌ സെര്‍വറിനെ

ശല്യപ്പെടുത്തുകയോ ചെയ്യുന്നില്ല. ഉപയോക്താവ്‌ സബ്മിറ്റ്‌ ബട്ടണ്‍ അമര്‍ത്തുമ്പോള്‍
യൂസര്‍നാമവും/പാസ്വേഡും നല്‍കിയിട്ടില്ല എന്ന സന്ദേശം നിമിഷനേരം കൊണ്ട്‌ ചിത്രം
4.11-ല്‍ കാണുന്നത്‌ പോലെ ഉപയോക്താവിനു ലഭിക്കും. ഇതിനായി ശൃംഖലയിലെ
വിഭവങ്ങള്‍ ഉപയോഗിക്കേണ്ടിവരുന്നുമില്ല.

ഇനി നമുക്ക്‌ മറ്റൊരു സാഹചര്യം പരിചയപ്പെടാം. ഒരു ഉപയോക്താവ്‌ തെറ്റായ യൂസര്‍
നാമവും പാസ്വേഡും നല്‍കിയെന്ന്‌ കരുതുക. യൂസര്‍ നാമവും പാസ്വേഡും നല്‍കി
യിട്ടുണ്ടോ എന്ന്‌ ക്ലയന്റ്‌ കമ്പ്യൂട്ടറിന്‌ പരിശോധിക്കുവാന്‍ കഴിഞ്ഞേക്കാം. എന്നാല്‍ ഇത്‌
ശരിയാണോ എന്ന്‌ പരിശോധിക്കുവാന്‍ കഴിയില്ല. യൂസര്‍ നാമങ്ങളുടെയും അനുബന്ധ
പാസ്വേഡുകളുടേയും വിശദാംശങ്ങള്‍ സെര്‍വര്‍ കമ്പ്യൂട്ടറിലാണ്‌ സൂക്ഷിക്കുന്നത്‌ എന്ന
താണ്‌ ഇതിന്‌ കാരണം. ഇവയുടെ പരിശോധന സെര്‍വര്‍ ഭാഗത്ത്‌ മാത്രമേ ചെയ്യാന്‍
സാധിക്കുകയുള്ളു. ഡാറ്റയുടെ സാധുത ഉറപ്പ്‌ വരുത്തുന്നതിന്‌ സെര്‍വര്‍ ഭാഗത്തെ സ്ക്രിപ്റ്റ്‌
ഉപയോഗിക്കുന്ന സന്ദര്‍ഭമാണിത്‌. സെര്‍വറിലുള്ള വിവരങ്ങള്‍ ഉപയോഗപ്പെടുത്തിക്കൊണ്ട്‌
ഡാറ്റയുടെ സാധുത ഉറപ്പ്‌ വരുത്തേണ്ടിവന്നാല്‍ അത്‌ സെര്‍വര്‍ ഭാഗത്ത്‌ തന്നെ ചെയ്യേ
ണ്ടതുണ്ട്‌.

സ്ക്രിപ്റ്റിങ്‌ ഭാഷകളെ ക്ലയന്റ്‌ ഭാഗത്തെ സ്ക്രിപ്റ്റുകള്‍ എന്നും സെര്‍വര്‍ ഭാഗത്തെ
സ്ക്രിപ്റ്റുകള്‍ എന്നും തരംതിരിച്ചിരിക്കുന്നു എന്ന്‌ ഇതില്‍ നിന്നും വ്യക്തമാണല്ലോ?
ക്ലയന്റ്‌ ഭാഗത്തെ സ്ക്രിപ്റ്റിങ്‌ ഉപയോഗിക്കുന്നത്‌ ക്ലയന്റ്‌ ഭാഗത്ത്‌ ചെയ്യേണ്ട ജോലി
ര്രൌസറില്‍ പ്രവര്‍ത്തിപ്പിച്ച്‌ ചെയ്യിക്കുന്നതിനാണ്‌. സെര്‍വറില്‍ പ്രവര്‍ത്തിക്കുന്ന
സ്ക്രിപ്റ്റുകളെ സെര്‍വര്‍ ഭാഗത്തുള്ള സ്ക്രിപ്റ്റുകള്‍ എന്നു പറയുന്നു. സെര്‍വര്‍ ഭാഗത്തെ
സ്ക്രിപ്റ്റുകള്‍ പ്രവര്‍ത്തിക്കുമ്പോള്‍ ലഭിക്കുന്ന ഓട്ട്പുട്ട്‌ HTML പേജുകളുടെ രൂപത്തില്‍
ഉള്ളതും ക്ലയന്റിലേക്ക്‌ അയയ്ക്കാവുന്നതും ആയിരിക്കും.

A. QO ഭാഗത്തെ സ്ക്രിപ്റ്റിങ (Client side scripting)

ക്ലയന്റ്‌ ഭാഗത്തെ സ്ക്രിപ്റ്റിങില്‍ ഡാറ്റയുടെ സാധുത ഉറപ്പാക്കുന്ന സ്ക്രിപ്റ്റ്‌ കോഡ്‌
111141. കോഡിനൊപ്പം ര്രൌസറിലേക്ക്‌ ഡയണ്‍ലോഡ്‌ ചെയ്യപ്പെടുന്നു. ഡാറ്റ അസാധു
ആണെങ്കില്‍ ഉചിതമായ സന്ദേശം ദൃശ്യമാകുന്നു. ശരിയായ സാധുത ഉറപ്പാക്കിയശേഷം
മാത്രമേ ഡാറ്റയെ വെബ്‌ സെര്‍വറിലേക്ക്‌ അയയ്ക്കുകയുള്ളു.

സ്ക്രിപ്റ്റ്‌, ക്ലയന്റ്‌ (ബ്രൌസറില്‍ പ്രവര്‍ത്തിക്കുന്നതിനാല്‍ അത്‌ ഉപയോക്താക്കള്‍ക്ക്‌ ഉടന്‍
തന്നെ പ്രതികരണം നല്‍കുന്നു. വെബ്‌ ആപ്ലിക്കേഷന്‍ പ്രവര്‍ത്തിക്കുമ്പോള്‍, ചില ചുമ
തലകള്‍ ക്ലയന്റ്‌ ്രൌസറുമായി പങ്കുവയ്ക്കുവാന്‍ ഇത്തരം സ്ക്രിപ്റ്റിങ്ങിലൂടെ സാധി
ക്കുന്നു. സ്ക്രിപ്റ്റുകളെ പിന്തുണയ്ക്കാത്ത ര്രൌസറുകള്‍ ഉള്ളതാണ്‌ ക്ലയന്റ്‌ ഭാഗത്തെ
സ്ക്രിപ്റ്റിങ്ങിന്റെ പരിമിതി. ചില അവസരങ്ങളില്‍ ബ്രൌസറില്‍ സ്ക്രിപ്റ്റുകള്‍ പ്രവര്‍ത്തി
ക്കുന്നതിനുള്ള അനുമതി ഉപഭോക്താക്കള്‍ നിഷേധിച്ചിട്ടുമുണ്ടാകും. അത്തരം സാഹച
ര്യങ്ങളില്‍ ക്ലയന്റ്‌ ഭാഗത്തെ സ്ക്രിപ്റ്റ്‌ പ്രവര്‍ത്തിക്കുകയില്ല. ജാവാസ്ക്രിപ്റ്റും വി.ബി.
സ്ക്രിപ്റ്റും പ്രമുഖ സ്ക്രിപ്റ്റിങ്‌ സാങ്കേതിക വിദ്യകളാണ്‌. ഡാറ്റ സെര്‍വറിലേക്ക്‌
അയയ്ക്കുന്നതിനു മുന്‍പ്‌, സാധുത പരിശോധനയും ലളിത്മായ കണക്കുകൂട്ടലുകളും
ചെയ്യുന്നതിനാണ്‌ ക്ലയന്റ്‌ ഭാഗത്തെ സ്ക്രിപ്റ്റിങ്‌ സാധാരണയായി ഉപയോഗിക്കുന്നത്‌.

4. വെബ്‌ സാങ്കേതികവിദ്യ

13. സെര്‍വര്‍ ഭാഗത്തെ സ്ക്രിപ്റ്റിങ്‌ (Server side scripting)

ഡൈനാമിക്‌ വെബ്‌ പേജുകളെക്കുറിച്ച്‌ കഴിഞ്ഞ ഭാഗത്ത്‌ നാം ചര്‍ച്ച ചെയ്തിട്ടുള്ളതാ
ണ്‌. ഇത്തരം പേജുകള്‍ ഉണ്ടാക്കാന്‍ സെര്‍വര്‍ ഭാഗത്തെ സ്ക്രിപ്റ്റിങ്‌ ഉപയോഗിക്കുന്നു.
സെര്‍വര്‍ ഭാഗത്തെ സ്ക്രിപ്റ്റിങ്ങിനുള്ള മറ്റൊരു ഉദാഹരണം നോക്കാം. SSLC പരീക്ഷാ
ഫലം പ്രസിദ്ധീകരിക്കുന്ന വെബ്‌ സൈറ്റ്‌ പരിഗണിക്കുക. നാം ഒരു കുട്ടിയുടെ രജിസ്റ്റര്‍
നമ്പര്‍ നല്‍കുമ്പോള്‍, വെബ്‌ സൈറ്റില്‍ ആ കുട്ടിയുടെ മാര്‍ക്ക്‌ ലിസ്റ്റ്‌ കാണാം. ഓരോ
കുട്ടിയുടെ കാര്യവും ഇതുപോലെ ആയിരിക്കും. SSLC പരീക്ഷയെഴുതിയ ലക്ഷക്കണ
ക്കിന്‌ കുട്ടികള്‍ ഓരോരുത്തര്‍ക്കും വേണ്ടി ഓരോ വെബ്‌ പേജ്‌ തയാറാക്കുകയെന്നത്‌
പ്രായോഗികമല്ല. അങ്ങനെയെങ്കില്‍ ഇത്‌ സാധിക്കുന്നതെങ്ങനെ? ലക്ഷക്കണക്കിന്‌ കൂട്ടി
കളുടെ പരീക്ഷാഫലം വെബ്‌ സെര്‍വറിലുള്ള ഒരു ഡാറ്റാബേസില്‍ സംഭരിക്കുന്നു. ഉപ
യോക്താവ്‌ രജിസ്റ്റര്‍ നമ്പര്‍ നല്‍കുമ്പോള്‍ ആ വിദ്യാര്‍ഥിയുടെ പരീക്ഷാഫലം ഡാറ്റ
ബേസില്‍ നിന്നും എടുക്കാന്‍ സെര്‍വര്‍ ഭാഗത്തെ സ്ക്രിപ്റ്റുകള്‍ ഉപയോഗിക്കുന്നു. പിന്നീട്‌
ഈ പരീക്ഷാഫലം ഉപയോഗിച്ച്‌ സെര്‍വര്‍ ഭാഗത്തെ സ്ക്രിപ്റ്റുകള്‍ ഒരു വെബ്‌ പേജ്‌
നിര്‍മിക്കുന്നു. തുടര്‍ന്ന്‌ ഈ വെബ്‌ പേജ്‌
ക്ലയന്റ്‌ ്രൌസറിഥേഷ്ക്ക്‌ അയക്കുകയും
ര്രൌസര്‍ അത്‌ പ്രദര്‍ശിപ്പിക്കുകയും ചെ
യ്യുന്നു. ഇത്തരത്തില്‍ സെര്‍വര്‍ ഭാഗത്തെ
സ്ക്രിപ്റ്റ്‌, SSLC പരീക്ഷയെഴുതിയ
ഓരോ കുട്ടിക്കുമായി ഓരോ വെബ്‌ പേജ്‌
നിര്‍മിക്കുന്നു. വെബ്‌ അടിസ്ഥാനമാക്കി
യുള്ള ആപ്പിക്കേഷനുകളുടെ ത്വരിത ഗതി ചിതം 4.12: സ്വെരീവരി ഭാഗത്തെ
യിലുള്ള വളര്‍ച്ച സെര്‍വര്‍ ഭാഗത്തെ MB Iya gos (്രവരീതമനം
സ്ക്രിപ്റ്റുകളുടെ ഉപയോഗം കൂട്ടിയിട്ടുണ്ട്‌.

ഉപയോക്താവ്‌ നിര്‍ദേശിക്കുന്നതും, സെര്‍വര്‍ ഭാഗത്തെ സ്ക്രിപ്റ്റുകള്‍ ഉള്‍പ്പെട്ടിട്ടുള്ള
വെബ്‌ പേജ്‌ സെര്‍വറില്‍ പ്രവര്‍ത്തിക്കുകയും, തല്‍ഫലമായി ലഭിക്കുന്ന HTML കോഡ്‌
ക്ലയന്റ്‌ ര്രൌസറിലേക്ക്‌ അയയ്ക്കുകയും ചെയ്യുന്ന സാങ്കേതികവിദ്യയാണ്‌ സെര്‍വര്‍
ഭാഗത്തെ സ്ക്രിപ്റ്റിങ്‌. സെര്‍വര്‍ ഭാഗത്തെ സ്ക്രിപ്റ്റുകള്‍ ഉള്ളടക്കം മാറിക്കൊണ്ടിരി
ക്കുന്ന വെബ്‌ പേജുകള്‍ നിര്‍മിക്കുന്നു. സ്ക്രിപ്റ്റുകള്‍ സെര്‍വറില്‍ പ്രവര്‍ത്തിക്കുന്ന
തിനാല്‍ ക്ലയന്റ്‌ കമ്പ്യൂട്ടറിലുള്ള രബരൌസറിന്റെയോ ഓപ്പറേറ്റിങ്‌ സിസ്റ്റത്തിന്റെയോ
പതിപ്പും തരവും ഈ പ്രവര്‍ത്തനത്തെ ബാധിക്കുന്നില്ല. സെര്‍വറിലുള്ള വിഭവങ്ങള്‍
ഉപയോഗിച്ചുകൊണ്ടാണ്‌ ഇത്‌ പ്രവര്‍ത്തിക്കുന്നത്‌. സെര്‍വര്‍ ഭാഗത്തെ സ്ക്രിപ്റ്റ്‌ എഴു
തുന്നതിന്‌ ഉപയോഗിക്കുന്ന പ്രമുഖമായ സ്ക്രിപ്റ്റിങ്‌ ഭാഷകളാണ്‌ PERL, PHP, ASP.
JSP തുടങ്ങിയവ.

സ്ക്രിപ്റ്റിങ്‌ ഭാഷകളുടെ തരംതിരിക്കലിനെക്കുറിച്ചുള്ള ഒരു താരതമ്യപഠനം പട്ടിക 4.3-8
തന്നിട്ടുണ്ട്‌.

സ്ക്രിപ്റ്റ്‌ കൂയന്റ്‌ ബ്രാസറിലേയ്ക്ക്‌ പകര്‍ത്തുന്നു. സ്ക്രിപ്റ്റ്‌ വെബ്‌ സെര്‍വറില്‍ നിലനിര്‍ത്തുന്നു.

സ്ക്രിപ്റ്റ്‌ കൂയന്റ്‌ (ബൌസറില്‍ പ്രവര്‍ത്തിക്കുന്നു. സ്ക്രിപ്റ്‌ വെബ്‌ സെര്‍വറില്‍ പ്രവര്‍ത്തിക്കുഃമ്പോള്‍ ലഭി

ക്കുന്ന വെബ്‌ പേജ്‌ ക്ലയന്റ്‌ ബ്രസറിലേക്കയയ്ക്കു

ന്നു.

ക്ലയന്റ്‌ ഭാരത്തെ ഡാറ്റയുടെ സാധുത പരിഭോധന ഡാറ്റാബേസുമായി ബന്ധകെടുന്നതിനും വെബ്‌ സെര്‍

യ്ക്കാണ്‌ പ്രധാനമായും സ്ക്രിപ്റ്റ്‌ ഉപയോരിക്കുന്നത്‌. വറില്‍ നിന്നും ഡാറ്റ ബ്രസ്റിലേയ്ക്ക്‌ അയക്കുന്നതി
നുമാണ്‌ സെര്‍വര്‍ ഭാരത്തെ സ്ക്രിപ്റ്റുകള്‍ ഉപയോ
രിക്കുന്നത്‌.

ഉപയോക്താവിന്‌ ക്ലയന്റ്‌ ദാത്തെ സ്ക്രിപ്റ്റിന്റെ സെര്‍വര്‍ ദാനത്തെ സ്ക്രിപ്റ്റുകളുടെ പ്രവര്‍ത്തനം ഉപ
പ്രവര്‍ത്തനം തടയാന്‍ സാധിക്കും. യോക്താവിന്‌ തടയുവാന്‍ സാധിക്കില്ല.

(MOMMA തരവും പതികും ക്ലയന്റ്‌ ഭാരത്തെ സ്ക്രി വെബ്‌ ബ്രസറിന്റെ സവിശേഷതകള്‍ സെര്‍വര്‍ ദാ
പ്റ്റിന്റെ പ്രവര്‍ത്തനത്തെ ബാധിക്കുന്നു. ത്തെ സ്ക്രിപ്റ്റിന്റെ പ്രവര്‍ത്തനത്തെ ബാധിക്കുന്നില്ല.

പട്ടിക 4.3: BOA ഭാഗത്തെയും സവെരിവര്‍ ഭാഗത്മെയും സ്കുച്റ്റുകശി തമ്മിലുള്ള താരതമ്യം

ക്ലയന്റ്‌ ഭാഗത്തെ സ്ക്രിപ്റ്റുകള്‍ ഡാറ്റയുടെ സാധുത ഉപയോക്താവിന്റെ

ര്രൌസറില്‍ വച്ചുതന്നെ പരിശോധിക്കുന്നതിനാണ്‌ ഉപയോഗിക്കുന്നത്‌. DL

മല്ല അത്‌ സെര്‍വറിന്റെ ജോലി ഭാരവും ശൃംഖലയിലെ ഗതാഗതക്കുരുക്കും

കുറയ്ക്കുകയും ചെയ്യുന്നു. ആയതിനാല്‍, സാധുത പരിശോധിക്കുന്നതിനാ

യുള്ള സ്ക്രിപ്റ്റുകള്‍ പൂര്‍ണമായും ക്ലയന്റ്‌ ഭാഗത്തേക്ക്‌ മാറ്റിയിട്ടുണ്ട്‌. അതു
കൊണ്ട്‌, സെര്‍വറിലേക്ക്‌ അയയ്ക്കുന്ന ഡാറ്റ പൂര്‍ണമായും തെറ്റുകളില്ലാത്തതും നേരിട്ട്‌
ഡാറ്റാബേസില്‍ സംഭരിക്കാവുന്നതുമാണ്‌. എന്നാല്‍ ക്ലയന്റ്‌ ര്രൌസര്‍, സ്ക്രിപ്റ്റുകള്‍ an
സ്സിലാക്കാതിരിക്കുകയോ, ഉപയോക്താവ്‌ സുരക്ഷിത കാരണങ്ങളാല്‍ സ്ക്രിപ്റ്റിന്റെ ബ്രസ
റിലുള്ള പ്രവര്‍ത്തനം തടയുകയോ ചെയ്താല്‍, സാധുത പരിശോധന നടത്താതെ ഡാറ്റ
സെര്‍വറിലേക്ക്‌ അയയ്ക്കപ്പെടും. ഇക്കാരണത്താല്‍ അസാധു ആയ ഡാറ്റ ഡാറ്റബേസിൽ
സംഭരിക്കപ്പെടും. ഡാറ്റയുടെ സാധുത സെര്‍വര്‍ ഭാഗത്ത്‌ കൂടി ഉറപ്പാക്കാനായാല്‍ ഡാറ്റാ
ബേസില്‍ സംഭരിക്കുന്ന ഡാറ്റയുടെ സാധുത സംരക്ഷിക്കപ്പെടും.

4.5.2 സ്ക്രിപ്റ്റിങ ഭാഷകള്‍ (Scripting languages)

രണ്ടു തരം സ്ക്രിപ്റ്റിങ്‌ ഭാഷകള്‍ നാം പരിചയപ്പെട്ടു കഴിഞ്ഞു. പ്രചാരത്തിലുള്ള ചില
സ്ക്രിപ്റ്റിങ്‌ ഭാഷകളുടെ സവിശേഷതകള്‍ നമുക്ക്‌ ചര്‍ച്ച ചെയ്യാം.

A. ജാവ സ്ക്രിപ്റ്റ്‌ (Java Script)

ഉപയോക്താവുമായി സംവദിക്കുന്ന വെബ്‌ പേജുകളുടെ നിര്‍മാണത്തിന്‌ ഉപയോഗി
ക്കുന്ന സ്ക്രിപ്റ്റിങ്‌ ഭാഷയാണ്‌ ജാവാസ്ക്രിപ്റ്റ്‌. നെറ്റ്സ്കേപ്പ്‌ കമ്മ്യൂണിക്കേഷന്‍ കോര്‍പ്പ
റേഷനില്‍ പ്രവര്‍ത്തിച്ചിരുന്ന കാലത്ത്‌ ബ്രണ്ടന്‍ ഇച്ച്‌ (Brenden Eich - ചിത്രം 4.13) നിര്‍മി
ച്ചതാണ്‌ ജാവ സ്ക്രിപ്റ്റ്‌. ക്ലയന്റ്‌ ഭാഗത്തെ വ്യാഖ്യാനിക്കാവുന്ന ഭാഷയാണ്‌ ജാവ സ്ക്രിപ്റ്റ്‌
. ജാവ സ്ക്രിപ്റ്റ്‌ കോഡ്‌ എഴുതുവാന്‍ ജിനി IDE യോ നോട്ടപാഡോ പോലുള്ള ടെക്സ്റ്റ്‌
എഡിറ്ററുകള്‍ ഉപയോഗിക്കാവുന്നതാണ്‌. ക്ലയന്റ്‌ ഭാഗത്തെ ഒരു പ്രമുഖ സ്ക്രിപ്റ്റിങ്‌
ടൂള്‍ ആയ ഇത്‌ മിക്കവാറും ര്രൌസറുകളില്‍ പ്രവര്‍ത്തിക്കുന്നു. ജാവസ്ക്രിപ്റ്റ്‌ HTML

4. വെബ്‌ സാങ്കേതികവിദ്യ

കോഡില്‍ ഉള്‍പ്പെടുത്തിയോ പ്രത്യേക ഫയലിലെഴുതി HTML
ഫയലിനോട്‌ ലിങ്‌: ചെയ്തോ ഉപയോഗിക്കാം. പ്രത്യേക ഫയ
ലില്‍ എഴുതിയ ജാവ സ്ക്രിപ്റ്റ്‌ js എക്സ്റ്റന്‍ഷനോടുകൂടി സൂക്ഷി
ക്കണം. ജാവാസ്ക്രിപ്റ്റ്‌ ഫയലുകളെ തിരിച്ചറിയാന്‍ ഇത്‌ സഹാ
യിക്കുന്നു. ക്ലയന്റ്‌ ഭാഗത്തെ ഫോമുകളിലെ ഡാറ്റയുടെ സാധുത
ഉറപ്പിക്കാന്‍ ഉപയോഗിക്കുന്ന ടൂള്‍ എന്ന നിലയില്‍ ജാവാ |
സ്ക്രിപ്റ്റ്‌ പശസ്തമാണ്‌. ലളിതമായ കണക്ക്‌ കൂട്ടലുകളും ചലി ഛുതം 4. 13 (auenead
ക്കുന്ന കാര്‍ട്ടൂണ്‍ ചിത്രങ്ങളും വെബ്‌ പേജുകളില്‍ ഉള്‍പ്പെടുത്തു Daf (1961 -)
ന്നതിന്‌ ഇത്‌ ഉപയോഗിക്കുന്നു. അധ്യായം 6-68 ജാവ സ്ക്രിപ്റ്റിനെക്കുറിച്ച്‌ വിശദമായി
ചര്‍ച്ച ചെയ്യാം.

ജാവ സ്ക്രിപ്റ്റിന്റെ പ്രചാരം ക്ലയന്റ്‌ ഭാഗത്തെ സ്ക്രിപ്റ്റുകള്‍ തയാറാക്കുന്ന പ്രവര്‍ത്ത
നത്തിന്റെ പുരോഗതിക്ക്‌ കാരണമായി. ഒന്നാംവര്‍ഷ ഹയര്‍സെക്കന്ററി പ്രവേശനത്തിന്‌
അപേക്ഷ സമര്‍പ്പിക്കുമ്പോള്‍, SSLC രജിസ്റ്റര്‍ നമ്പര്‍ നല്‍കിയാലൂുടന്‍, നിങ്ങളുടെ പേരും,
ജനനത്തീയതിയും, മറ്റ്‌ വിവരങ്ങളും താഴെയുള്ള ടെക്സ്റ്റ്‌ ബോക്സുകളില്‍ പ്രത്യക്ഷ
പ്പെടുന്നത്‌ ശ്രദ്ധിച്ചിരിക്കുമല്ലോ. ര്രൌസറില്‍ പുനര്‍പ്രവേശിക്കാതെയാണ്‌ ഇത്‌ ചെയ്യു
ന്നത്‌. വെബ്‌ പേജ്‌ പുനര്‍നിര്‍മിക്കാതെ (റിരഫഷ്‌ ചെയ്യാതെ) സെര്‍വറില്‍ നിന്ന്‌ ഡാറ്റ
എടുത്ത്‌ ടെക്സ്റ്റ്‌ ബോക്സുകളില്‍ നിറയ്ക്കുന്നു. അജാക്സ്‌ (Ajax) എന്ന സാങ്കേതികവിദ്യ
യാണ്‌ ഇവിടെ ഉപയോഗിക്കുന്നത്‌. (ബ്ൌസറുകളുടെ വിനിമയശേഷി വര്‍ധിപ്പിക്കു
ന്നതിനാണ്‌ അജാക്സ്‌ ഉപയോഗിക്കുന്നത്‌. അജാക്സ്‌ എന്നാല്‍ അസിക്രോണസ്‌ ജാവ
സ്ക്രിപ്റ്റ്‌, എക്സ്റ്റന്‍സിബിള്‍ മാർക്കപ്പ്‌ ലാംഗ്വേജ്‌ (XML) എന്നിവ ചേര്‍ന്നതാണ്‌. ഉപ
യോക്താക്കള്‍ക്ക്‌ പുതിയ ടാഗുകള്‍ നിര്‍മിക്കാന്‍ ഉതകുന്ന മാർക്കപ്പ്‌ ഭാഷയാണ്‌ 2001.
അജാക്സ്‌ വെബ്സൈറ്റില്‍ പ്രവര്‍ത്തനക്ഷമമായ ശേഷം പരിവര്‍ത്തനാത്മക ഉള്ളടക്കം
പ്രദര്‍ശിപ്പിക്കാനായി വെബ്‌ പേജ്‌ പൂര്‍ണമായും വീണ്ടും കൊണ്ടുവരേണ്ടതില്ല. ക്ലയന്റും
സെർവറും തമ്മില്‍ പിന്നണിയില്‍ ഡാറ്റ കൈമാറ്റം ചെയ്തുകൊണ്ട്‌ വെബ്‌ പേജിനെ
നവീകരിക്കാന്‍ അജാക്സ്‌ സഹായിക്കുന്നു. ്രാസറിന്‌ ജാവ സ്ക്രിപ്റ്റ്‌ കൈകാര്യം
ചെയ്യാനാകാതെ വരുകയോ, ബ്രൌസറിലുള്ള ജാവ സ്ക്രിപ്റ്റിന്റെ പ്രവര്‍ത്തനം ഉപയോ
ക്താവ്‌ തടയുകയോ ചെയ്താല്‍ അജാക്സ്‌ ആപ്ലിക്കേഷന്‍ പ്രവര്‍ത്തിക്കുകയില്ല.

13. വിബി സ്ക്രിപ്റ്റ്‌ (VB Script)

വിഷല്‍ ബേസിക്‌ എന്ന പ്രോഗ്രാമിങ്‌ ഭാഷ അടിസ്ഥാനമാക്കി മൈക്രോസോഫ്റ്റ്‌ കോര്‍പ്പ
റേഷന്‍ വികസിപ്പിച്ച സ്ക്രിപ്റ്റിങ്‌ ഭാഷയാണ്‌ വിബി സ്ക്രിപ്റ്റ്‌. മൈക്രോസോഫ്റ്റ്‌ ഇന്റര്‍നെറ്റ്‌
എക്സ്പ്ലൊററിനായി ക്ലയന്റ്‌ ഭാഗത്തെ സ്ക്രിപ്റ്റിങ്‌ ഭാഷയായും മൈക്രോസോഫ്റ്റ്‌
ഇന്റര്‍നെറ്റ്‌ ഇന്‍ഫര്‍മേഷന്‍ സര്‍വീസസിനായി സെര്‍വര്‍ ഭാഗത്തെ സ്ക്രിപ്റ്റിങ്‌ ഭാഷയായും
വി.ബി. സ്ക്രിപ്റ്റ്‌ ഉപയോഗിക്കുന്നു. നിര്‍ഭാഗ്യവശാല്‍, മറ്റ്‌ ബ്രസറുകള്‍ക്ക്‌ വിബി സ്ക്രിപ്റ്റ്‌
കോഡ്‌ കൃത്യമായി മനസിലാക്കാനോ പ്രദര്‍ശിപ്പിക്കാനോ സാധിക്കില്ല. അതുകൊണ്ടു
തന്നെ, ക്ലയന്റ്‌ ഭാഗത്തെ പ്രചാരം കുറഞ്ഞ ഒരു സ്ക്രിപ്റ്റിങ്‌ ടൂള്‍ ആണ്‌ ഇത്‌. സെര്‍വര്‍
ഭാഗത്ത്‌ വിന്‍ഡോസ്‌ ഓപ്പറേറ്റിങ്‌ സിസ്റ്റത്തിന്‌ പ്രചാരമേറെയുള്ളതിനാല്‍ സെര്‍വര്‍ ഭാഗത്തെ
സ്ക്രിപ്റ്റെഴുതുന്നതിന്‌ വിബി സ്ക്രിപ്റ്റ്‌ കൂടുതലായി ഉപയോഗിക്കുന്നു.

NET ഫ്രെയിംവര്‍ക്കിന്റെ - ഉപയോഗയോഗ്യമായ പ്രോഗ്രാം കോഡിന്റെ ഒരു ശേഖരം,
ആവിര്‍ഭാവത്തോടെ വി.ബി. സ്ക്രിപ്റ്റ്‌ NET ഫ്രെയിംവര്‍ക്കിലെ ASP.NET ന്റെ ഭാഗ
മായി മാറി.

C. PHP

PHP എന്നത്‌ ഹൈപ്പര്‍ ടെക്സ്റ്റ്‌ പ്രീപ്രൊസസറിനെ സൂചിപ്പിക്കുന്നു.
വെബ്‌ വികസനത്തിന്‌ അനുയോജ്യമായതും, 11171.- ല്‍ ഉള്‍ക്കൊ
ള്ളിക്കാവുന്നതുമായ ഇത്‌ പൊതു ആവശ്യങ്ങള്‍ക്കായുള്ള ഒരു ഓപ്പണ്‍
സോഴ്സ്‌ സ്ക്രിപ്റ്റിങ്‌ ഭാഷയാണ്‌. സെര്‍വര്‍ ഭാഗത്തെ സ്ക്രിപ്റ്റ്‌ എഴു
തുന്നതിനുള്ള ടൂള്‍ ആയ ഇതിന്റെ കോഡ്‌ ജാവ, C, PERL എന്നി
വയ്ക്ക്‌ സമാനമാണ്‌. വളരെ എളുപ്പത്തില്‍ പരിവര്‍ത്തനാത്മക വെബ്‌
പേജുകള്‍ നിര്‍മിക്കാന്‍ ഇത്‌ ഉപയോഗിക്കാം. 1994-ല്‍ റാസ്മസ്‌ ചിതം 4.14
ലെര്‍ഡോര്‍ഫ്‌ (Rasmus Lerdorf-ailimo 4.14) ആണ്‌ 12112 വികസിപ്പി റാന്മസ്‌
ച്ചത്‌, എങ്കിലും PHP സമൂഹമാണ്‌ തുടര്‍ന്ന്‌ അത്‌ പരിപോഷിപ്പിച്ച്‌ ലെര്‍ഡോര്‍ഫ്‌
കൊണ്ടിരിക്കുന്നത്‌. PHP കോഡുള്ള വെബ്‌ പേജുകളുടെ ഫയല്‍നാമ (1968 - )
ത്തിന്റെ എക്സ്റ്റന്‍ഷന്‍ php എന്നായിരിക്കും. ഉപയോക്താവ്‌ PHP വെബ്‌ പേജിനായി
അപേക്ഷിക്കുമ്പോള്‍, വെബ്‌ സെര്‍വര്‍ HTML കോഡില്‍ ഉള്‍പ്പെടുത്തിയിട്ടുള്ള PHP
കോഡ്‌ വ്യാഖ്യാനിക്കുകയും പ്രവര്‍ത്തിപ്പിക്കുകയും ചെയ്യുന്നു. PHP കോഡ്‌ വെബ്‌ സെര്‍വ
റില്‍ പ്രവര്‍ത്തിക്കണമെങ്കില്‍ ഒരു PHP ഇന്റര്‍പ്രട്ടര്‍ വെബ്‌ സെര്‍വറില്‍ ഉണ്ടായിരിക്ക
ണം. വെബ്‌ സെര്‍വറില്‍ PHP കോഡ്‌ പ്രവര്‍ത്തിക്കുമ്പോള്‍ നിര്‍മിക്കപ്പെടുന്ന HTML
പേജ്‌ ക്ലയന്റ്‌ ബ്രൌസറിലേക്ക്‌ അയയ്ക്കുന്നു. ഡാറ്റാബേസ്‌ പ്രോഗ്രാമിങ്ങിന്‌ സഹായി
ക്കുന്നു എന്നതാണ്‌ PHP യുടെ പ്രധാനപ്പെട്ട സവിശേഷത. PHP യോടൊപ്പം സാധാ
രണ ഉപയോഗിക്കുന്ന ഡാറ്റാബേസാണ്‌ MYSQL. എല്ലാ ഓപ്പറേറ്റിങ്‌ സിസ്റ്റങ്ങള്‍ക്കും
PHP ഇന്റര്‍പ്രട്ടര്‍ ലഭ്യമാണ്‌. സൌജന്യമായി ഇന്റര്‍നെറ്റില്‍ നിന്നും പകര്‍ത്താവുന്ന LAMP
(Linux, Apache, MYSQL, PHP) സെര്‍വര്‍ സോഫ്റ്റ്വെയറാണ്‌ ലിനക്സ്‌ പ്ലാറ്റ്ഫോമുക
ളില്‍ ഉപയോഗിക്കുന്നത്‌. ഇവിടെ, ലിനക്സ്‌ എന്നത്‌ സെര്‍വര്‍ ഓപ്പറേറ്റിങ്‌ സിസ്റ്റവും,
അപ്പാഷെ എന്നത്‌ വെബ്‌ സെർവറും, MYSQL എന്നത്‌ ഡാറ്റാബേസും, PHP എന്നത്‌
സെര്‍വര്‍ ഭാഗത്തെ സ്ക്രിപ്റ്റിംഗ്‌ ഭാഷയും ആയി പ്രവര്‍ത്തിക്കുന്നു. ഇന്റര്‍നെറ്റില്‍ നിന്നും
സൌജന്യമായി പകര്‍ത്താവുന്ന WAMP (WINDOWS, Apache, MYSQL, PHP) സെര്‍വര്‍
സോഫ്റ്റ്വെയറാണ്‌ വിന്‍ഡോസ്‌ ഓപ്പറേറ്റിങ്‌ സിസ്റ്റം ഉപയോഗിക്കുന്നത്‌. 10-ഠമത്തെ
അധ്യായത്തില്‍ 11117-യെക്കുറിച്ച്‌ കൂടുതലായി ചര്‍ച്ച ചെയ്യാം.

1. ആക്റ്റീവ്‌ സെര്‍വര്‍ പേജുകള്‍ (Active Server Pages)

പരസ്പരവിനിമയം നടത്തുന്ന വെബ്‌ ആപ്ലിക്കേഷനുകള്‍ നിര്‍മിക്കുന്നതിനും പ്രവൃത്തി
പ്പിക്കുന്നതിനും വേണ്ടി സെര്‍വര്‍ ഭാഗത്ത്‌ ഉപയോഗിക്കുന്ന സ്ക്രിപ്റ്റിങ്‌ സംവിധാന
മാണ്‌ മൈക്രോസോഫ്റ്റിന്റെ ആക്റ്റീവി സെര്‍വര്‍ പേജുകള്‍ (ASP). ASP -യില്‍ 111141.-ഉം,
സ്ക്രിപ്റ്റിങ്‌ ഭാഷയിലെ കോഡുണ്ടായിരിക്കും. സ്ക്രിപ്റ്റിങ്‌ ഭാഷ വിബി സ്ക്രിപ്റ്റോ
ജാവ സ്ക്രിപ്റ്റോ ആയിരിക്കും. ൧൧ഫയലുകളുടെ എക്സ്റ്റന്‍ഷന്‍ .asp എന്നായിരി
ക്കും. മൈക്രോ സോഫ്‌റ്റിന്റെ സെര്‍വര്‍ സോഫ്‌റ്റ്വെയറായ ഇന്റര്‍നെറ്റ്‌ ഇന്‍ഫര്‍മേഷന്‍

4. വെബ്‌ സാങ്കേതികവിദ്യ

സര്‍വീസസില്‍ (ITS-@) തനതായി നിര്‍മിക്കപ്പെട്ടിട്ടുള്ള സവിശേഷത ഉപയോഗിച്ച്‌ ഈ
ഫയലുകള്‍ കംപൈല്‍ ചെയ്യുന്നു. ASP ഫയലുകള്‍ വിന്‍ഡോസ്‌ ഓപ്പറേറ്റിങ്‌ സിസ്റ്റ
ത്തില്‍ മാത്രം പ്രവര്‍ത്തിക്കുന്നവയാണ്‌. സെര്‍വറില്‍ എക്സിക്യൂട്ട്‌ ചെയ്തശേഷം ലഭി
ക്കുന്ന 111171. വെബ്‌ പേജ്‌ ക്ലയന്റ്‌ ഭാഗത്തെ ര്രൌസറിലേക്കയക്കുന്നു. വിവിധ
തരത്തിലുള്ള ഡാറ്റബേസുകളെ പിന്തുണയ്ക്കുന്ന, വളരെ പ്രമുഖമായ ഒരു സ്ക്രിപ്റ്റിങ്‌
ഭാഷയാണിത്‌. ASP.NET -ന്റെ വരവോടെ, ASP -യുടെ തുടര്‍പതിപ്പുകള്‍ പുറത്തിറക്കു
ന്നത്‌ മൈക്രോസോഫ്റ്റ്‌ നിര്‍ത്തലാക്കി. കോഡുകളുടെ ചുരുക്കെഴുത്തും, വൃത്യസ്ത
ങ്ങളായ ബട്ടണുകള്‍, ടെക്സ്റ്റ്‌ ബോക്സുള്‍ തുടങ്ങിയവയുടെ ലഭ്യതയും വെബ്‌ ആപ്പി
ക്കേഷനുകള്‍ നിര്‍മിക്കാനായി ASP.NET-enss സവിശേഷതകളാണ്‌.

E. ജാവ സെര്‍വര്‍ പേജുകള്‍ (Java Server Pages)

പരിവര്‍ത്തനാത്മക വെബ്‌ പേജ്‌ നിര്‍മിക്കുന്നതിനുള്ള എളുപ്പവും വേഗമേറിയതുമായ
സാങ്കേതിക വിദ്യ JSP പ്രദാനം ചെയ്യുന്നു. 1999-ല്‍ സണ്‍ മൈക്രോസിസ്റ്റംസ്‌ നിര്‍മിച്ച
സെര്‍വര്‍ ഭാഗത്തെ സ്ക്രിപ്റ്റിങ്‌ ഭാഷയാണ്‌ ഇത്‌. 1110-ക്ക്‌ സമാനമാണ്‌ JSP, എങ്കിലും
പ്രോഗ്രാമിങ്‌ ഭാഷയായി ജാവയാണ്‌ ഉപയോഗിക്കുന്നത്‌. JSP ഫയലുകളുടെ ഫയല്‍
എക്സ്റ്റന്‍ഷന്‍ jsp എന്നാണ്‌. JSP പ്രവര്‍ത്തിപ്പിക്കുന്നതിന്‌ അപ്പാഷെ ടോം ക്യാറ്റ്‌ വെബ്‌
സെര്‍വര്‍ ആവശ്യമാണ്‌. JSP കോഡിലുള്ള 111141. കോഡും ജാവകോഡും വെബ്‌ സെര്‍വ
റില്‍ പ്രവര്‍ത്തിക്കുന്നതിന്റെ (എക്സിക്യൂട്ട്‌ ചെയ്ത്‌) ഫലമായി ലഭിക്കുന്ന HTML
കോഡിനെ ്രൌസറിലേയ്ക്ക്‌ അയക്കുന്നു. വന്‍തോതിലുള്ള വെബ്‌ അധിഷ്ഠിത
സോഫ്റ്റ്വെയറുകള്‍ നിര്‍മിക്കുന്നതിനും പ്രവര്‍ത്തിപ്പിക്കുന്നതിനും ഉപയോഗിക്കുന്ന ജാവ
2 പ്ലാറ്റ്ഫോം എന്റര്‍പ്രൈസ്‌ എഡിഷന്റെ (J2EE) അവിഭാജ്യ ഘടകമാണ്‌ JSP.

4.6 കാസ്‌കേഡിങ്‌ സ്റ്റൈല്‍ ഷീറ്റ്‌ (Cascading Style Sheet)

HTML ഭാഷയില്‍ എഴുതിയിട്ടുള്ള ഒരു ലിഖിതത്തിന്റെ ഘടന വിവരിക്കാന്‍ ഉപയോഗി
ക്കുന്ന സ്റ്റൈല്‍ ഷീറ്റ്‌ ഭാഷയാണ്‌ കാസ്കേഡിങ്‌ സ്റ്റൈല്‍ ഷീറ്റ്‌ (CSS). ഒരു വെബ്‌ പേജി
ലുള്ള ചിഹ്നങ്ങളുടെ നിറം, അക്ഷരങ്ങളുടെ രീതി, ഖണ്ഡികകള്‍ക്ക്‌ ഇടയിലുള്ള സ്ഥലം,
നിരകളുടെ വലുപ്പം പ്രദര്‍ശിപ്പിക്കുന്ന രീതി, അരികുകളും അവയുടെ നിറങ്ങളും, പശ്ചാ
ത്തല ചിധ്രങ്ങള്‍/നിറങ്ങള്‍ എങ്ങനെയാണ്‌ ഉപയോഗിക്കുന്നത്‌ തുടങ്ങിയ വിവിധതര
ത്തിലുള്ള പ്രതീതികള്‍ നിയന്ത്രിക്കുവാന്‍ CSS ഉപയോഗിക്കുന്നു. 1111. ഉള്ളടക്കത്തെ
അതിന്റെ രൂപഭംഗിയില്‍ നിന്നും വേര്‍തിരിച്ച്‌ നിര്‍ത്താന്‍ CSS നമ്മെ അനുവദിക്കുന്നു.
മൂന്ന്‌ വൃത്യസ്ത രീതികളില്‍ CSS നമുക്ക്‌ നടപ്പിലാക്കാം - ഇന്‍ലൈന്‍ (ഒപ്പംതന്നെ),
എംബഡഡ്‌ (ഉള്‍ക്കൊള്ളിച്ചു), ലിങ്കഡ്‌ (ബന്ധിപ്പിച്ച) എന്നിവയാണവ.

© ഒപ്പമെഴുതുന്ന രീതിയില്‍, വെബ്‌ പേജിന്റെ ബോഡി ഭാഗത്ത്‌, സ്റ്റൈല്‍ ആഭ്രിബ്യയൂട്ട്‌
ഉപയോഗിച്ച്‌ കൊണ്ട്‌, CSS ശൈലി ഓരോ ടാഗിനും പ്രത്യേകമായി പ്രയോഗിക്കാവു
ന്നതാണ്‌.

€ ഉള്‍ക്കൊള്ളിക്കുന്ന CSS കോഡുകള്‍, വെബ്പേജിന്റെ ഹെഡ്‌ ഭാഗത്ത്‌ സ്ഥാപിക്കുന്നു.

* CSS കോഡ്‌ മാത്രമുള്‍ക്കൊള്ളുന്ന ഒരു ബാഹ്യ ഫയലിനെ വെബ്‌ പേജുമായി ബന്ധി
പ്പിച്ച്‌ കൊണ്ടാണ്‌ CSS നിര്‍വഹണം eid രീതിയില്‍ നടപ്പിലാക്കുന്നത്‌.

എല്ലാ പേജുകള്‍ക്കും ഒരേ കോഡ്‌ പുനരുപയോഗിക്കാമെന്നതാണ്‌ CSS -ന്റെ നേട്ടം. ഒരു
വെബ്സ്്്റിനുവേണ്ടിയുള്ള CSS സ്റ്റൈല്‍ ബാഹൃഫയലായി ലിങ്ക്ചെയ്താണ്‌ നടപ്പി
ലാക്കുന്നതെങ്കില്‍, ഒരു സ്റ്റൈല്‍ വൃത്യാസപ്പെടുത്തുന്നതിലൂടെ, വെബ്‌ സൈറ്റിലെ എല്ലാ
പേജുകളിലെയും ടാഗുകളുടെ അവതരണ രീതി വൃത്യാസപ്പെടുത്താനാകും. CSS സ്റ്റൈല്‍
പൊതുവായി ഒരു സ്ഥലത്ത്‌ എഴുതുന്നതിനാല്‍ 111101.-ഉം. CSS വേര്‍തിരിച്ച്‌ നിര്‍ത്താന്‍

സാധിക്കുകയും അങ്ങനെ പരിപാലനം എളുപ്പമാവുകയും ചെയ്യുന്നു. കൂടാതെ വെബ്‌
പേജുകളിലുള്ള ടാഗുകളുടെ സ്റ്റൈല്‍ വിവരണവുമായി നല്ല രീതിയില്‍ ബന്ധപ്പെടുത്തി
ക്രമീകരിച്ചിരിക്കുന്നതുകൊണ്ട്‌ എളുപ്പത്തില്‍ അത്‌ മനസ്സിലാക്കാനാവുന്നു. ഇത്‌ വെബ്‌
പേജുകളുടെ ബൈറ്റുകളിലുള്ള വലുപ്പം കുറയ്ക്കുകയും അങ്ങനെ വേഗത്തില്‍ വെബ്‌
പേജുകള്‍ ബ്രൌസറില്‍ ദൃശ്യമാക്കുകയും ചെയ്യുന്നു.

വ്ൃതൃസ്ത സ്ക്രീന്‍ വലുപ്പമുള്ള ഉപകരണങ്ങളായ ഡെസ്ക്ടോപ്പ്‌ മോണിട്ടറുകള്‍, ടാബ്‌
കമ്പ്യൂട്ടറുകള്‍, മൊബൈല്‍ ഫോണുകള്‍ തുടങ്ങിയവയില്‍ വെബ്‌ പേജുകള്‍ പ്രദര്‍ശിപ്പി
ക്കാന്‍ അനുയോജ്യമാക്കുന്നത്‌ CSS ആണ്‌. ചലനാത്മചിത്രങ്ങള്‍, ആനിമേഷനുകള്‍,
പരസ്പരസംവേദനം എന്നിവ കൊണ്ടുവരാനാകുന്ന 111141.-ന്റെ അടുത്ത പതിപ്പായ
111171.5-ല്‍ ഉപയോഗിച്ചിരിക്കുന്നത്‌ ജാവ സ്ക്രിപ്റ്റിനോടൊപ്പമുള്ള CSS ആണ്‌.

നിങ്ങളുടെ പുരോഗതി അറിയുക
1. കോഡ്‌ വൃത്യാസപ്പെടുത്തുന്നത്‌ വരെ ഉള്ളടക്കം മാറാതെ നില്‍ക്കുന്ന
വെബ്‌ പേജുകളെ എന്ന്‌ വിളിക്കുന്നു.

2. ഡൈനാമിക്‌ വെബ്‌ പേജുകള്‍ നിര്‍മിക്കുന്നതിന്‌ ഉപയോഗിക്കുന്ന
രണ്ട്‌ സാങ്കേതിക വിദ്യകളുടെ പേരെഴുതുക.

3. സ്ക്രിപ്റ്റ്‌ ഉള്‍ക്കൊള്ളിക്കാന്‍ ഉപയോഗിക്കുന്ന ടാഗാണ്‌

4. ക്ലയന്റ്‌ ഭാഗത്ത്‌ സ്ക്രിപ്റ്റ്‌ എഴുതുന്നതിന്റെ ഏതെങ്കിലും ഒരു ഉപയോ
ഗമെഴുതുക.

5. ഒരു ജാവ സ്ക്രിപ്റ്റ്‌ ഫയലിന്റെ എക്സ്റ്റന്‍ഷന്‍ ആണ്‌.

6. അജാക്സ്‌ ഉപയോഗിക്കുന്നത്‌ കൊണ്ടുള്ള നേട്ടങ്ങള്‍ എന്തൊക്കെ
യാണ്‌?

7. താരെതന്നിട്ടുള്ള സ്ക്രിപ്റ്റിങ്‌ ഭാഷകളെ ക്ലയന്റ്‌ ഭാഗത്തേതെന്നും
സെര്‍വര്‍ ഭാഗത്തേതെന്നുമായി തരംതിരിക്കുക.

ജാവ സ്ക്രിപ്റ്റ്‌, PHP, ASP, വി.ബി. സ്ക്രിപ്റ്റ്‌

8. .asp ഫയലുകള്‍ എന്ന വെബ്‌ സെര്‍വര്‍ സോഫ്റ്റ്വെയര്‍
ഉപയോഗിച്ചാണ്‌ കംപൈല്‍ ചെയ്യുന്നത്‌.

0. CSS പ്രാവര്‍ത്തികമാക്കുന്നതിനുള്ള വ്യത്യസ്ത മാര്‍ഗങ്ങള്‍ എഴു
തുക.

4. വെബ്‌ സാങ്കേതികവിദ്യ

4.7 HTML ഡോക്റുമെന്നുകളുടെ അടിസ്ഥാന ആശയം
(Basic concepts of HTML documents)

വെബ്‌ പേജുകളുടെ നിര്‍മാണത്തിന്‌ വ്യാപകമായി ഉപയോഗിക്കുന്ന ഭാഷയാണ്‌ 111141.
ഓരോ വെബ്‌ പേജും യഥാര്‍ഥത്തില്‍ 80} HTML ഫയലാണ്‌. ഹൈപ്പര്‍ ടെക്സ്റ്റ്‌ ഡോക്യൂ
ABA നിര്‍മിക്കുന്നതിനുള്ള ഒരു കൂട്ടം നിര്‍ദേശങ്ങള്‍ അടങ്ങിയ ലളിതമായ വാചക
ങ്ങളാണ്‌ (ടെക്സ്റ്റുകളാണ്‌) ഓരോ 111141. ഫയലും. ഈ നിര്‍ദേശങ്ങള്‍ HTML som
കള്‍ എന്ന്‌ അറിയപ്പെടുന്നു. ഈ ടാഗുകള്‍ ഉപയോഗിക്കുമ്പോള്‍ നിര്‍ദേശങ്ങള്‍ കൂടു
തല്‍ വൃക്തതയുള്ളതാക്കാനായി ചില കീ-വേഡുകള്‍ അവയോടൊപ്പം ചേര്‍ക്കുന്നു.
ഈ വാക്കുകള്‍ ആട്രിബ്യൂട്ടുകള്‍ എന്നറിയപ്പെടുന്നു. ഒരു വെബ്‌ പേജിലെ ഉള്ളടക്കം
ര്ബരൌസറില്‍ എങ്ങനെ പ്രദര്‍ശിപ്പിക്കണമെന്ന്‌ തീരുമാനിക്കുന്നത്‌ HTML ഡോക്യു
മെന്റിലുള്ള ടാഗുകളും ആട്രിബ്യൂട്ടുകളും ഒരുമിച്ച്‌ പ്രവര്‍ത്തിച്ചുകൊണ്ടാണ്‌. HTML
ടാഗുകളെയും അവയുടെ ആട്രിബ്യൂട്ടുകളെയും കുറിച്ചുള്ള പഠനമാണ്‌ യഥാര്‍ഥത്തില്‍
HTML പഠനം. ടാഗുകളുടെയും ആഭ്രിബ്യൂട്ടുകളുടെയും വിശദാംശങ്ങളിലേക്ക്‌ കടക്കു
ന്നതിന്‌ മുമ്പ്‌ ഒരു 111101. ഡോക്യുമെന്റിന്റെ അടിസ്ഥാന ഘടന നമുക്ക്‌ പരിശോധിക്കാം.

4.7.1 ഒരു HTML ഡോക്്യുമെന്റിന്റെ അടിസ്ഥാനഘടന
(Basic structure of an HTML document)

ഉദാഹരണം 4.1-ല്‍ 80} HTML ഡോക്യയുമെന്റിന്റെ അടിസ്ഥാനഘടന കാണിച്ചിരിക്കുന്നു.

<HTML>
<HEAD>
<TITLE> This is the title of web page </TITLE>
</HEAD>
<BODY>
Hello, Welcome to the world of web pages!
</BODY>
</HTML>

ഒരു ജോഡി ആംഗിള്‍ ബ്രാക്കറ്റുകള്‍ക്കുള്ളിലായി (<, >) വലിയ അക്ഷരങ്ങളിലുള്ള
ചില വാക്കുകള്‍ നിങ്ങള്‍ക്ക്‌ കാണാം. ഇവ 1111. ടാഗുകളാണ്‌. HTML ടാഗുകള്‍ വലിയ
അക്ഷരങ്ങളിലെഴുതണമെന്ന്‌ നിര്‍ബന്ധമില്ല. HTML-«8 വലിയ അക്ഷരവും ചെറിയ
അക്ഷരവും തമ്മില്‍ വ്ൃത്യാസമില്ല (കേയ്സ്‌ സെന്‍സിറ്റീവ്‌ അല്ല). നമുക്ക്‌ വലിയ അക്ഷ
രത്തിലോ, ചെറിയ അക്ഷരത്തിലോ അവ കൂട്ടികലര്‍ത്തിയോ ഉപയോഗിക്കാവുന്നതാ
ണ്‌. മറ്റ്‌ വാക്കുകളില്‍നിന്നും അല്ലെങ്കില്‍ ചിഹ്നങ്ങളില്‍നിന്നും വേര്‍തിരിച്ചറിയാനായി,

HTML ടാഗുകളും അവയുടെ ആഭ്രിബ്യൂട്ടുകളുടെ ആദ്യക്ഷരവും വലിയ അക്ഷരങ്ങളായും
മറ്റുള്ളവ ചെറിയ അക്ഷരങ്ങളായുമാണ്‌ സൂചിപ്പിക്കുന്നത്‌.

ഉദാഹരണം 4.1-ല്‍ കാണിച്ചിരിക്കുന്നത്‌ പോലെ, എല്ലാ 11111. പേജുകളും തുടങ്ങു
ന്നത്‌ <HTML> ടാഗിലും അവസാനിക്കുന്നത്‌ </HTML> ടാഗിലുമായിരിക്കും. 80, HTML
ലിഖിതത്തെ ഹെഡ്‌ ഭാഗമെന്നും ബോഡി ഭാഗമെന്നും രണ്ടായി തിരിച്ചിരിക്കുന്നു. ഹെഡ്‌
വിശദീകരിക്കുന്നതിന്‌ <HEAD> ടാഗുപയോഗിക്കുന്നു. വെബ്‌ പേജിന്റെ ശീര്‍ഷകം ഉള്‍പ്പെടെ
ലിഖിതത്തെക്കുറിച്ചുള്ള വിവരങ്ങള്‍ ഹെഡ്‌ ഭാഗത്തുണ്ടാകും. ബ്രൌസര്‍ വിന്‍ഡോയിലെ
ടൈറ്റില്‍ ബാറില്‍ കാണിക്കുന്ന വെബ്‌ പേജിന്റെ ശീര്‍ഷകം നിര്‍ണയിക്കുന്നത്‌ <TITLE>
SOD ഉപയോഗിച്ചുകൊണ്ടാണ്‌. ബോഡി ഭാഗം നിര്‍വചിക്കുന്നതിന്‌ <BODY> ടാഗ്‌ ഉപ
യോഗിക്കുന്നു. ബോഡി ഭാഗത്തുള്ളത്‌ വെബ്‌ പേജിന്റെ ഉള്ളടക്കമായിരിക്കും. മുകളില്‍
തന്നിട്ടുള്ള HTML ലിഖിതം ബ്രൌസര്‍ വിന്‍ഡോയില്‍ കണ്ടാല്‍ ചിത്രം 4.15-ല്‍ കാണുന്നത്‌
പോലുണ്ടാകും.

This is the title of web page - Mozilla Firefox

File Edit View History Bookmarks Tools Help
€ @ |ട File:///nome/ubuntu/sample.htmt ന 4൫൦)

{S| This is the title of web page op

Hello, Welcome to the world of web pages!

ചിതം 4.15: വെബ്ബ്‌ (nimave DalewoGla] തുറന്ന ഒരു വെബ്‌ പേജ്‌

വിവിധ HTML പതിപ്പുകള്‍: 1991 ന്റെ അവസാനം ടിം ബെര്‍നേഴ്സ്‌ ലീ
(Tim Berners Lee) ആണ്‌ 117. നിര്‍മിച്ചത്‌. എന്നാല്‍, നിലവാരമുള്ള ആദ്യത്തെ

HTML പതിപ്പായ HTML 2.0 പ്രസിദ്ധീകരിച്ചത്‌ 1995 -ലാണ്‌. പ്രമുഖ 111171.

പതിപ്പായ HTML 4.01 പ്രസിദ്ധീകരിച്ചത്‌ 1999-കളുടെ അവസാനമാണ്‌.
2012-ലാണ്‌ ഏറ്റവും പുതിയ പതിപ്പായ HTML 5 പുറത്തിറക്കിയത്‌. ഇത്‌ കൂടുതല്‍ കൂടു
തല്‍ ദൃശ്യ-ശ്രാവ്യ സൌകര്യങ്ങള്‍ ഉള്‍പ്പെടുത്തിക്കൊണ്ട്‌ ഇപ്പോഴും പരിഷ്കരിച്ചുകൊണ്ടി
രിക്കുന്നു.

4.7.2 HTML ഡോക്യുമെന്റിലെ ടാഗുകള്‍ (Tags in HTML document)

മുമ്പ്‌ സൂചിപ്പിച്ചതു പോലെ, വെബ്‌ പേജുകളുടെ ഉള്ളടക്കം ഏതു രീതിയില്‍ ക്രമീകരി
ക്കണമെന്നും പ്രദര്‍ശിപ്പിക്കണമെന്നും ്രൌസറിനോട്‌ പറയുന്ന നിര്‍ദേശങ്ങളാണ്‌ 111141.
ടാഗുകള്‍. എല്ലാ ടാഗുകള്‍ക്കും <, > എന്നീ ആങ്കിള്‍ ബ്രായ്ക്കറ്റുകളിലടക്കം ചെയ്ത
SOD നാമമുണ്ടായിരിക്കും.

4.7.3 കണ്ടെയ്നര്‍ ടാഗുകളും GJM} ടാഗുകളും
(Container tags and empty tags)

ഭൂരിഭാഗം ടാഗുകളും ജോഡികളായാണ്‌ ഉപയോഗിക്കുന്നത്‌. പ്രാരംഭ (ഓപ്പണിംഗ്‌) ടാഗും
അവസാനിപ്പിക്കുന്ന (ക്ലോസിങ്‌) ടാഗും ഉണ്ടാകും. ഉദാഹരണമായി, <HTML> എന്നത്‌
തുടങ്ങുന്ന ടാഗും </HTML> എന്നത്‌ അവസാനിപ്പിക്കുന്ന ടാഗുമാണ്‌. അവസാനിപ്പി
ക്കുന്ന ടാഗിനും, തുടങ്ങുന്ന ടാഗിനും ഒരേ പേരാണുള്ളത്‌. എന്നാല്‍ ആദ്യത്തെ ആങ്കിള്‍

4. വെബ്‌ സാങ്കേതികവിദ്യ

ബ്രാക്കറ്റിന്‌ ശേഷം ഒരു ഫോര്‍വേഡ്‌ സ്സാഷ്‌ (/) ചിഹ്നം അവസാനിപ്പിക്കുന്ന ടാഗിന്‌
അധികമായുനണ്ടായിരിക്കും. തുടങ്ങുന്ന ടാഗും അവസാനിപ്പിക്കുന്ന ടാഗും ആവശ്യമുള്ള
ട്രാഗുകളാണ്‌ കണ്ടെയ്നര്‍ ടാഗുകള്‍. ഒരു സെക്ഷനിലേക്ക്‌ ഉപയോഗിക്കാവുന്നവയാണ്‌
കണ്ടെയ്നര്‍ ടാഗുകള്‍. സെക്ഷന്റെ തുടക്കത്തില്‍ ഓപ്പണിംഗ്‌ ടാഗും അവസാനം ക്ലോസിങ്‌
SOMJo നല്‍കുന്നു. ഉദാഹരണമായി, 80} HTML ലിഖിതത്തിന്റെ തുടക്കവും ഒടുക്കവും
ക്രമപ്പെടുത്തുന്ന ടാഗ്‌ ജോഡികളാണ്‌ <HTML>, </HTML> എന്നിവ.

ചില ടാഗുകള്‍ ഈ രീതിയിലല്ല ഉപയോഗിക്കുന്നത്‌. അത്തരം ടാഗുകള്‍ക്ക്‌ ക്ലോസിങ്‌
SOD കാണുകയില്ല. അവ ശൂന്യ ടാഗുകള്‍ അഥവാ എംപ്റ്റി ടാഗുകള്‍ എന്നറിയപ്പെടുന്നു.
ഈ ടാഗുകള്‍ ഒരു സെക്ഷനിലേക്കുള്ളവയല്ല. <BR>, <HR>, <IMG> തുടങ്ങിയവ co,
ടാഗുകള്‍ക്ക്‌ ഉദാഹരണങ്ങളാണ്‌. ഈ അധ്യായത്തിലെ തുടര്‍ന്നുള്ള ഭാഗങ്ങളില്‍ ഇത്തരം
ടാഗുകള്‍ നമുക്ക്‌ കാണാനാകും.

4.7.4 ടാഗുകളുടെ ആഭ്രിബ്ലുട്ടുകള്‍ (Attributes of tags)

നിറം, അളവ്‌, സ്ഥാനം, വിന്യാസം, അല്ലെങ്കില്‍ മറ്റ്‌ ആകാരങ്ങള്‍ തുടങ്ങിയ അധികവിവ
രങ്ങള്‍ വെബ്‌ ബ്രൌസറിന്‌ നല്‍കാനായി ചില ഘടകങ്ങള്‍ ഓപ്പണിങ്‌ ടാഗിനുള്ളില്‍
നല്‍കുന്നത്‌ പതിവാണ്‌. ഈ ഘടകങ്ങളെ ആട്രിബ്യൂട്ടുകള്‍ എന്ന്‌ വിളിക്കുന്നു. ഭൂരി
ഭാഗം ആട്രിബ്യൂട്ടുകള്‍ക്കും ഒരു വില നല്‍കേണ്ടത്‌ ആവശ്യമാണ്‌. 1111,11.-ല്‍ ഏക ഉദ്ധ
രണികള്‍ക്കുള്ളിലോ ജോഡികളായ ഉദ്ധരണികള്‍ക്കുള്ളിലോ ആണ്‌ വില നല്‍കുന്നത്‌
(അതായത്‌, ആഭ്രിബ്യൂട്ട്‌-“വില” അല്ലെങ്കില്‍ ആട്രിബ്യൂട്ട്‌ -“വില”). ആവശ്യാനുസരണം
ഉപയോഗിക്കാവുന്ന ഒരു കൂട്ടം ആഭ്രിബ്യൂട്ടുകള്‍ ഓരോ ടാഗിനോടൊപ്പവും ഉണ്ടായി
രിക്കും. ഒരു ആഭ്രിബ്യൂട്ട്‌ ഉപയോഗിക്കുകയാണെങ്കില്‍, സാധാരണയായി ടാഗ്‌ നാമത്തി
നുശേഷം ഒരു സ്പെയ്സ്‌ കഴിഞ്ഞാകും അത്‌ നല്‍കുന്നത്‌. ഒന്നിലധികം ആട്രിബ്യയൂട്ടു
കള്‍ ഉപയോഗിക്കുമ്പോള്‍, അവയുടെ ക്രമത്തിന്‌ പ്രാധാന്യം നല്‍കേണ്ടതില്ല.

ഉദാഹരണമായി, ഒരു വെബ്‌ പേജിലെ പശ്ചാത്തലനിറം മഞ്ഞയാക്കി മാറ്റാന്‍ <BODY
Bgcolor = "Yellow">. ഇവിടെ Bgcolor എന്നത്‌ <BODY> ടാഗിന്റെ ആദ്രിബ്യൂട്ടും
Yellow എന്നത്‌ അതിന്റെ വിലയുമാണ്‌. ടാഗുകളും അവയുടെ ആട്രിബ്യൂട്ടുകളും തുടര്‍ന്ന്‌
വരുന്ന ഭാഗങ്ങളില്‍ നാം ചര്‍ച്ച ചെയ്യുന്നതാണ്‌.

4.7.5 HTML എലമെന്റുകള്‍ (HTML Elements)
ഒരു ജോഡി ടാഗുകളും അവയ്ക്കിടയില്‍ ഉള്‍ക്കൊള്ളിച്ചിട്ടുള്ള ഉള്ളടക്കവും ചേര്‍ന്ന

താണ്‌ എലമെന്റ്‌. ചിരം
4.16-ല്‍ കാണിച്ചിരിക്കുന്നത്‌

Element
പോലെ, ബോഡി എലമെന്റില്‍
ഓപ്പണിങ്‌ ടാഗായ <BODY> | 300 Welcome to HIML </BODY>
യും ക്ലോസിങ്‌ ടാഗായ </

BODY> യും അവയ്ക്കിടയി Opening tag Closing tag

ലൂള്ള ഉള്ളൂടക്കവും ഉണ്ടാകും. ചിത്രം 4.16: ഒരു HIML ഘടകം

80} HTML ലിഖിതത്തിന്റെ അടിസ്ഥാനഘടനയില്‍ നാല്‌ ജോഡി ടാഗുകളുണ്ടാകും.
അവയാണ്‌ :

<HTML> </HTML>

<HEAD> </HEAD>

<TITLE> </TITLE>

<BODY> </BODY>

4.8 ഒരു HTML ഡോക്യുമെന്റ്‌ നിര്‍മിക്കുന്നു
(Creating an HTML document)

ഉദാഹരണം 4.17-ല്‍ തന്നിട്ടുള്ള HTML കോഡ്‌ ഉപയോഗിച്ച്‌ ലളിതമായ ഒരു വെബ്‌
പേജ്‌ നമുക്ക്‌ നിര്‍മിക്കാം. ജീനി (Geany), ജിഎഡിറ്റ്‌ (Gedit), ടെക്സ്റ്റ്പാഡ്‌ (TextPad),
നോട്ട്പാഡ്‌ (NotePad), നോട്ട്പാഡ്‌--- (NotePad++) തുടങ്ങിയ ടെക്സ്റ്റ്‌ എഡിറ്ററുക
ളില്‍ ഏതെങ്കിലും ഉപയോഗിച്ച്‌ HTML ലിഖിതം നിര്‍മിക്കാം. ഒരു ഫയല്‍ നാമവും
എക്സ്റ്റെന്‍ഷന്‍ ആയി htm അല്ലെങ്കില്‍ html എന്നും നല്‍കി ഫയല്‍ സേവ്‌ ചെയ്യണം
(ഉദാഹരണമായി, sample.html). ജീനി എഡിറ്ററില്‍ Sample.html എന്ന പേരില്‍ സേവ്‌
ചെയ്തിട്ടുള്ള HTML കോഡ്‌ നമുക്ക്‌ ചിധ്രം 4.17-ല്‍ കാണാം.

sample.html - /home/ubuntu - Geany

File Edit Search View Document Project Build Tools Help
a - ന രം «<n» §&@-
symbols > |sample.html 246
No tags Found a <HTML>
<HEAD>
<TITLE> This is the title of web page </TITLE>
</HEAD>
<BODY>
Hello, Welcome to the world of web pages!
</BODY>
</HTML>

WOVAURWN

22:55:41: This is Geany 0.18
Status 22:55:42: New file "untitled" opened.
22:56:01: File shome/ubuntu/sample.html saved
line: 9_col:0_sel:0_INS__TAB__ mode: Unix (LF) _ encoding: UTF-8 _filetype: HTML_...

ചിത്രം 4.17; ജിനി എഡ്റ്റവിലുക്കള HTML കോഡ്‌

ഒരു HTML ഡോക്യുമെന്റ (ബൌസറിലൂടെ കാണുന്നു
(Viewing an HTML document in a Browser)

11141. ലിഖിതം തയാറാക്കിക്കഴിഞ്ഞാല്‍, അത്‌ (SUDA ഉപയോഗിച്ച്‌ കാണാവുന്നതാ
ണ്‌. മോസില്ല ഫയര്‍ഫോക്സ്‌ (Mozilla Firefox), ഗുഗിള്‍ ക്രോം (Google Chrome),
ഇന്റര്‍നെറ്റ്‌ എക്സ്‌പ്ലൊറര്‍ (Internet Explorer), നെറ്റ്സ്കേപ്പ്‌ നാവിഗേറ്റര്‍ (Netscape Navi-
Gator) തുടങ്ങിയ ധാരാളം ര്രൌസറുകളുണ്ട്‌. മോസില്ല ഫയർഫോക്സിൽ വെബ്‌ പേജ്‌
തുറന്നപ്പോള്‍ കിട്ടിയ സ്ക്രീന്‍ ചിത്രങ്ങളാണ്‌ ഈ പുസ്തകത്തില്‍ തന്നിട്ടുള്ളത്‌. ജീനി
യുടെ ടൂള്‍ബാറിലുള്ള Execute (എക്സിക്യൂട്ട്‌) ബട്ടണ്‍ ക്ലിക്ക്‌ ചെയ്യുമ്പോഴും, 11111.
കോഡിന്റെ ഓട്ട്പുട്ട്‌ ലഭിക്കും.

4. വെബ്‌ സാങ്കേതികവിദ്യ

4.9 അനിവാര്യമായ HTML ടാഗുകള്‍ (Essential HTML tags)

ഒരു വെബ്‌ പേജ്‌ നിര്‍മിക്കുന്നതിന്‌ അവശ്യം വേണ്ട ടാഗുകളെക്കുറിച്ച്‌ നമുക്ക്‌ മനസ്സി
ലാക്കാം. ടാഗുകള്‍, അവയുടെ ഉപയോഗം, ബന്ധപ്പെട്ടുകിടക്കുന്ന ആഭ്രിബ്യൂട്ടുകളും അവ
യുടെ വിലകളും, ര്രൌ൭സര്‍ വിന്‍ഡോയില്‍ അവയുടെ രൂപം തുടങ്ങിയവ ഇവിടെ വിശ
ദീകരിക്കുന്നു.

4.9.1 <HTML>- ഒരു HTML പേജ്‌ തുടങ്ങുന്നു
(<HTML> - Starting an HTML page)

വധി. ഡോക്യുമെന്റ്‌ പൂര്‍ണമായി ഒരു ജോഡി <HTML>, </HTML> എന്നീ ടാഗ്‌ ജോഡി
കള്‍ക്കുള്ളില്‍ വലയം ചെയ്തിരിക്കുന്നു. 80} 1741. ഡോക്യുമെന്റ്‌ തിരിച്ചറിയാനാണ്‌
<HTML> ടാഗ്‌ ഉപയോഗിക്കുന്നത്‌. പൊതു വായിപ്പറഞ്ഞാല്‍ ഒരു HTML പേജില്‍
<HTML> ആദ്യ ടാഗും </HTML> അവസാന ടാഗുമായിരിക്കും. വെബ്‌ പേജിലെ മറ്റെല്ലാം
ഈ രണ്ട്‌ ടാഗുകള്‍ക്ക്‌ ഇടയിലായിരിക്കും. അതായത്‌ ഹെഡ്‌ ഭാഗവും ബോഡി ഭാഗവും
<HTML>, </HTML> എന്നീ ടാഗുകള്‍ക്കിടയിലായിരിക്കും ഉള്‍ക്കൊള്ളിച്ചിരിക്കുന്നത്‌.
ഇത്‌ ഒരു ജോഡി കണ്ടെയ്നര്‍ ടാഗുകളാണ്‌. Dir, Lang എന്നിവയാണ്‌ <HTML>
ടാഗിന്റെ പ്രധാന ആഭ്രിബ്യൂട്ടുകള്‍.

വെബ്‌ പേജില്‍ പ്രദര്‍ശിപ്പിക്കുന്ന (കാണിക്കുന്ന) l Bin English
അക്ഷരങ്ങളുടെ ദിശ സൂചിപ്പിക്കുന്നതിനാണ്‌
[ 2 Fr French
<HTML> ടാഗിലെ Dir ആട്രിബ്യൂട്ട്‌ ഉപയോഗി
ക്കുന്നത്‌. Ltr (ലെഫ്റ്റ്‌ ടു റൈറ്റ്‌ - ഇടത്ത്‌ നിന്ന്‌ 3 De German
വലത്തേക്ക്‌) 21 (റൈറ്റ്‌ ടു ലെഫ്റ്റ്‌ - വലത്ത്‌ നിന്ന്‌ 4 It Italian
ഇടത്തേക്ക്‌) എന്നീ വിലകളാണ്‌ ഈ ആഭ്രിബ്യ്യൂട്ടി 5 El Greak
നുള്ളത്‌. ടിബ്യ്യൂട്ടിന്റെ തനതുവില വില 1t .
ള്ളത്‌. ഈ ആഭ്രിബ്യൂട്ടിന്റെ 2 r 6 ae | ദി
ആയിരിക്കും. ഉള്ളടക്കം അവതരിപ്പിക്കുന്നതിന്‌ [
ഹീബ്രു, അറബിക്‌, ചൈനീസ്‌ തുടങ്ങിയ ഭാഷകള്‍ 7 Ar Arabic
ഉപയോഗിക്കുമ്പോള്‍ 211 എന്ന വില നല്‍കണം. 8 Ja Japanese
ഉദാഹരണമായി <HTML Dir = "ധനം എന്ന 9 Hi Hindi
കോഡ്‌ ഡോക്യുമെന്റ്‌ വലത്‌ വശത്ത്‌ നിന്നും ഇടത്‌ 10 Ru Russian
വശത്തേക്ക്‌ വായിക്കണമെന്ന്‌ സൂചിപ്പിക്കുന്നു.
പട്ടിക 4.4: (്രചഠാരത്തിലുക്ള ചില
Lang ഭാഷകളും അവയുടെ കോഡുകളും

ലിഖിതത്തിനുള്ളില്‍ പൊതുവായി ഉപയോഗിക്കുന്ന ഭാഷയെ സൂചിപ്പിക്കുന്നതിന്‌
<HTML> ടാഗിന്റെ Lang ആദഭ്രിബ്യൂട്ട്‌ ഉപയോഗിക്കുന്നു. “en” എന്നത്‌ ഇംഗ്ലീഷ്‌ ഭാഷ
യേയും “it” എന്നത്‌ ഇറ്റാലിയന്‍ ഭാഷയേയും സൂചിപ്പിക്കുന്നു.

ഉദാഹരണമായി <HTML Lang = "ar"> എന്ന കോഡ്‌ അറബിക്‌ ഭാഷയിലാണ്‌
111141. ഡോക്യുമെന്റെഴുതിയിട്ടുള്ളതെന്ന്‌ സൂചിപ്പിക്കുന്നു. പട്ടിക 4.3-ല്‍ Lang aos)
ബ്യൂട്ടിന്റെ വിലയായി ഉപയോഗിക്കാവുന്ന ചില ഭാഷാകോഡുകള്‍ കൊടുത്തിട്ടുണ്ട.

4.9.2 <HEAD> - ഹെഡ്‌ ഭാഗം നിര്‍മിക്കുന്നു (<HEAD> - Creating head)
ശീര്‍ഷകം, ഉപയോഗിച്ചിട്ടുള്ള സ്ക്രിപ്റ്റുകള്‍, ശൈലി നിര്‍വചനങ്ങള്‍ തുടങ്ങിയ ഡോക്യു
മെന്റിനെ കുറിച്ചുള്ള വിവരങ്ങള്‍ 11111. ലിഖിതത്തിന്റെ ഹെഡ്ഭാഗത്ത്‌ ഉള്‍പ്പെടുത്തുന്നു.
ഹെഡ്‌ ഭാഗം പ്രസ്താവിക്കുന്ന ടാഗ്‌ ജോഡികളാണ്‌ <HEAD>, </HEAD> എന്നിവ.
ഇതും ഒരു കണ്ടെയ്നര്‍ ടാഗ്‌ ജോഡിയാണ്‌.

4.9.3 <TITLE> - ശീര്‍ഷകം നിര്‍മിക്കുന്നു (<TITLE> - Creating a title)

വെബ്‌ ര്രൌസറിന്റെ ടൈറ്റില്‍ ബാറില്‍ പ്രതൃക്ഷപ്പെടുന്ന വെബ്‌ പേജിന്റെ ശീര്‍ഷകം
അടങ്ങിയിട്ടുള്ള ഒരു കണ്ടെയ്നര്‍ ടാഗാണിത്‌. ശീര്‍ഷകം ഉപയോഗിച്ചാണ്‌ സെര്‍ച്ച്‌
എന്‍ജിന്‍ പേജ്‌ തിരിച്ചറിയുന്നത്‌. <HEAD>, </HEAD> എന്നീ ടാഗ്‌ ജോഡികള്‍ക്കുള്ളില്‍
<TITLE>, </TITLE> എന്നീ ടാഗ്‌ ജോഡികള്‍ ഉപയോഗിച്ച്‌ വെബ്‌ പേജിന്‌ ശീര്‍ഷകം
നല്‍കുന്നു.

4.9.4 <BODY>-oaleni പേജിന്‌ ഒരു ബോഡി നിര്‍മിക്കുന്നു
(<BODY> - Creating a body)

ലിഖിതത്തിന്റെ ബോഡി ഭാഗം വിവരിക്കുന്നതിന്‌ ഉപയോഗിക്കുന്ന ബോഡി ടാഗ്‌ ജോഡി
കളാണ്‌ <BODY>, </BODY> എന്നിവ. ബ്രൌസര്‍ വിന്‍ഡോയില്‍ പ്രദര്‍ശിപ്പിക്കേണ്ട
ഉള്ളടക്കം ഈ ഭാഗത്ത്‌ ഉള്‍ക്കൊള്ളിക്കുന്നു. ഡോക്യുമെന്റിന്റെ ഉള്ളടക്കം നിര്‍വചി
ക്കുന്ന മറ്റെല്ലാ ടാഗുകളും ബോഡി ഭാഗത്താണ്‌ ഉള്‍പ്പെടുത്തുന്നത്‌. ഈ ടാഗുകളെക്കു
റിച്ച്‌ വിശദീകരിക്കുന്നതിന്‌ ami, <BODY> ടാഗിന്റെ ആഭ്രിബ്യൂട്ടുകള്‍ ഏതെല്ലാമെന്ന്‌
നോക്കാം.

Background
വെബ്‌ പേജിന്‌ ഒരു പശ്ചാത്തലചിത്രം നല്‍കുന്നത്‌ ഈ ആഭ്രിബ്യയൂട്ടാണ്‌. <BODY> ടാഗിന്റെ

ഈ ആട്രിബ്യൂട്ട്‌ ഉപയോഗിച്ച്‌ പേജിനെ കൂടുതല്‍ ആകര്‍ഷകമാക്കുന്നു. അതിന്റെ പൊതു
ഘടനയാണ്‌:

<BODY Background = "URL of the picture">

ആകാശത്തിന്റെ ചിത്രം ഒരു വെബ്‌ പേജിന്‌ പശ്ചാത്തലമായി നല്‍കുന്നതിനുള്ള HTML
കോഡ്‌ ഉദാഹരണം 4.2-ല്‍ കാണിച്ചിരിക്കുന്നു.

പശ്ചാത്തലമായി ചിത്രം നല്‍കുന്നു

<HTML>
<HEAD>
<TITLE> Background Image </TITLE>
</HEAD >
<BODY Background = "Sky.jpg">
Hello, Welcome to the world of Web Pages!........
</BODY>
</HTML>

4. വെബ്‌ സാങ്കേതികവിദ്യ

ഉദാഹരണം 4.1-ല്‍ ഉള്ള HTML കോ Background Image - MozillaF. O X
ഡിലെ <BODY> ടാഗിന്‌ ഒരു Back-
ground അആട്രിബ്യൂട്ടും അതിന്‌ വില
യായി "1൮. 12" എന്നും നല്‍കി
ക്കൊണ്ട്‌ <BODY Background=
"Sky. Jpg"> ആയി വൃത്യാസപ്പെടുത്തി
യിരിക്കുന്നു. വെബ്‌ പേജ്‌ തുറക്കുന്നതിന്‌
മുമ്പ്‌, ചി്രത്തിന്റെ ഫയല്‍ ഇപ്പോള്‍ ഉപ
യോഗിച്ചു കൊണ്ടിരിക്കുന്ന ഫോള്‍ഡ
റില്‍,/ഡയറക്ടറിയില്‍ ഉള്‍പ്പെടുത്തേണ്ട
താണ്‌. ചിത്രം 4.18-ല്‍ കാണിച്ചിരിക്കു
ന്നത്‌ പോലെ വെബ്‌ പേജ്‌ പ്രദര്‍ശിപ്പി ചിതം 4.46: ഒരു പശ്ചാത്മല ചിതം
ക്കാവുന്നതാണ്‌.

File Edit View History Bookmarks

(6) Background Image

Bgcolor

ഡോക്യുമെന്റിന്റെ ബോഡി ഭാഗത്തെ പശ്ചാത്തലത്തിന്‌ ഒരു നിറം നിര്‍ദേശിക്കുന്ന GSI
ബ്യൂട്ടാണിത്‌. ഉദാഹരണമായി, <BODY Bgcolor = "grey"> എന്ന കോഡ്‌ പശ്ചാ
ത്തലത്തിന്‌ ചാരനിറം നല്‍കുന്നു.

Bgcolor ആഭ്രിബ്യയൂട്ടിന്‌ രണ്ട്‌ രീതിയില്‍ വില

നല്‍കാനാകും.

* Color_name- പശ്ചാത്തലത്തിന്‌ നിറനാമം #000000
നിര്‍ദ്ദേശിക്കുന്നു “red”, “grey” തുടങ്ങിയവ #FF0000
പോലെ).

001100

* Hex_number - പശ്ചാത്തലത്തിന്‌
ഹെക്സാഡെസിമല്‍ കോഡിലുള്ള നിറം 77000011:

[2 mow "
നിര്‍ദേശിക്കുന്നു. (൧6080, "#303030 #FEFFO0
തുടങ്ങിയവ പോലെ). ഓരോ പതിനാറക്ക
കോഡും ഹാഷ്‌ ചിഹനത്തിലാണ്‌ ആരംഭി #OOFFFF
ക്കുന്നത്‌.

0൨0൧0൧

ആറക്ക സംഖ്യയും അക്ഷരങ്ങളും ചേര്‍ന്ന്‌

നിറങ്ങള്‍ക്ക്‌ RGB (ചുവപ്പ്‌, പച്ച, നീല) വില

കള്‍ നല്‍കി പ്രദര്‍ശിപ്പിക്കുന്നു. ആറ്‌ അക്ക പട്ടിക 4.5: വറങ്ങളുടെയും, അവയുടെ
പേരിമ്റിയും, 16 GRAD GHIA റ7ലയുടെയും

ങ്ങളില്‍ ആദ്യ രണ്ടെണ്ണം ചുവപ്പിന്റെ അള പട്ടിക

വിനെയും, അടുത്ത രണ്ട്‌ അക്കങ്ങള്‍ പച്ച

യൂടെ തോതിനെയും, അവസാനത്തെ രണ്ടക്കങ്ങള്‍ നീലയുടെ അളവിനെയും 00

മുതല്‍ 11” വരെയുള്ള വിലകള്‍ കൊണ്ട്‌ സൂചിപ്പിക്കുന്നു. ഉദാഹരണമായി, #000000

എന്നത്‌ കുറുപ്പും, 410000 എന്നത്‌ തിളക്കമുള്ള ചുവപ്പും, 40011700 എന്നത്‌ തിള

ങ്ങുന്ന പച്ചയും, 117 എന്നത്‌ വെള്ളയുമായിരിക്കും (മുന്ന്‌ നിറങ്ങളും പൂര്‍ണ

1111൨

മായും ഉള്‍ക്കൊള്ളിച്ചിരിക്കുന്നു). ഹെക്സാഡെസിമല്‍ കോഡിലെ വിവിധ നിറ
ക്കൂട്ടുകള്‍ നമുക്ക്‌ പരീക്ഷിക്കാവുന്നതാണ്‌. ചില നിറങ്ങളും, അവയുടെ പേരുകളും,
പതിനാറക്ക കോഡ്‌ വിലകളും പട്ടിക 4.5-ല്‍ കാണിച്ചിരിക്കുന്നു.

Text

പേജിന്റെ ഉള്ളടക്കത്തിലുള്ള വാക്യങ്ങളുടെ നിറം സൂചിപ്പിക്കുന്ന ആഭ്രിബ്യൂട്ടാണ്‌ ഇത്‌.
തനത്‌ രൂപത്തില്‍ വെള്ള,/ചാര നിറമുള്ള പശ്ചാത്തലവും വാക്യങ്ങള്‍ക്ക്‌ കറുപ്പ്‌ നിറ
വുമായി ബ്രൌസര്‍ കാണിക്കുന്നു. 89001൦ ആട്രിബ്യൂട്ട്‌ ഉപയോഗിച്ച്‌ പശ്ചാത്തലത്തിന്റെ
നിറം എങ്ങനെ വ്ൃത്യാസപ്പെടുത്താമെന്ന്‌ നാം ചര്‍ച്ച ചെയ്ത്‌ കഴിഞ്ഞു. അതുപോലെ,
ഓ ആട്രിബ്യൂട്ടുപയോഗിച്ചുകൊണ്ട്‌ വാക്യങ്ങളുടെ നിറം വൃത്യാസപ്പെടുത്താനാകും.
ഉദാഹരണമായി, <BODY Text = "൮൦11൩. എന്നത്‌ മഞ്ഞ നിറത്തിലുള്ള വാക്യത്തെ
പ്രദര്‍ശിപ്പിക്കുന്നു. 39001 ൦൧-ന്‌ വില നല്‍കിയത്‌ പോലെ നിറത്തിന്റെ പേരോ പതിനാ
റക്ക കോഡോ ഉപയോഗിച്ച്‌ Text ആട്രിബ്യൂട്ടിന്‌ വില നല്‍കാവുന്നതാണ്‌. ഉദാഹ
രണമായി Text = "Blue" അല്ലെങ്കില്‍ Text = "൫00൧" തുടങ്ങിയവ.

Link, Alink and Vlink

ക്ലിക്ക്‌ ചെയ്യുമ്പോള്‍, ഒരു ഡോക്യുമെന്റില്‍ നിന്ന്‌ മറ്റൊന്നിലേക്കോ, അല്ലെങ്കില്‍ അതേ
ഡോക്യുമെന്റിന്റെ വോറൊരു ഭാഗത്തേക്കോ നീങ്ങാന്‍ സഹായിക്കുന്ന ഒരു ഘടകം/ഒരു
വാക്യം/ഒരു ചിത്രമാണ്‌ ഹൈപ്പര്‍ലിക്‌. ഒരു ലിഖിതത്തെ മൊത്തമായോ അല്ലെങ്കില്‍
ഡോക്യുമെന്റിലുള്ള പ്രത്യേക ഭാഗത്തെയോ ആണ്‌ ഹൈപ്പര്‍ eile സൂചിപ്പിക്കുന്നത്‌.
ഹൈപ്പര്‍ ലിങ്കിനെക്കുറിച്ച്‌ വിശദമായി പിന്നീട്‌ നമുക്ക്‌ ഈ അധ്യായത്തില്‍ ചര്‍ച്ച ചെയ്യാം.

Link: കാണുന്നയാള്‍ സന്ദര്‍ശിക്കാത്ത ഹൈപ്പര്‍ ലിങ്കിന്റെ നിറം സൂചിപ്പിക്കുന്നതിന്‌
ഉപയോഗിക്കുന്ന ആഭ്രിബ്യൂട്ടാണ്‌ ഇത്‌. Link ആഭ്രിബ്യൂട്ടിന്റെ തനത്‌ നിറം
നിലയായിരിക്കും.

Alink: സജീവമായ ഹൈപ്പര്‍ ലിങ്കിന്റെ നിറമാണ്‌ ഇത്‌ സൂചിപ്പിക്കുന്നത്‌. മൌസ്‌ അതി
നുമേല്‍ ക്ലിക്ക്‌ ചെയ്യുന്ന നിമിഷം മാധ്രമാണ്‌ ആ ലിജ്‌: സജീവമാകുന്നത്‌. ആയ
തിനാല്‍, തിരഞ്ഞെടുക്കുമ്പോള്‍ ഹൈപ്പര്‍ ലിങ്കിന്റെ നിറം Alink ന്റെ വില
സൂചിപ്പിക്കും. ഇവിടെ ഹൈപ്പര്‍ ലിങ്കിന്റെ തനത്‌ നിറം പച്ചയായിരിക്കും.

V1link: കാണുന്നയാള്‍ സന്ദര്‍ശിച്ച ഹൈപ്പര്‍ ലിങ്കിന്റെ നിറം സൂചിപ്പിക്കാനാണ്‌ ഇത്‌
നല്‍കുന്നത്‌. "7121ല്‍: ന്റെ തനത്‌ നിറം ധുമനിറം (പര്‍പ്പിള്‍) ആയിരിക്കും.

Leftmargin, Topmargin

പേജിന്റെ അരികില്‍ നിന്നുള്ള ശൂന്യസ്ഥലത്തെയാണ്‌ മാര്‍ജിന്‍ സൂചിപ്പിക്കുന്നത്‌. ബ്രൌസര്‍
ജാലകത്തില്‍ ഡോക്യുമെന്റിന്റെ ഇടത്‌ ഭാഗത്ത്‌ കുറച്ച്‌ ശുന്യര്രദേശം ഒഴിച്ചിടാനായി
Leftmargin ആഭ്രിബ്യ്യൂട്ടും മുകളറ്റത്ത്‌ കുറച്ച്‌ ശൂന്യ സ്ഥലം നല്‍കാനായി Topmargin
ആദഭ്രിബ്യൂട്ടും ഉപയോഗിക്കുന്നു. വിലനല്‍കുന്നത്‌ പിക്സല്‍ പോയിന്റുകളുടെ എണ്ണമാ
യാണ്‌.

4. വെബ്‌ സാങ്കേതികവിദ്യ

ഉദാഹരണമായി, <BODY Leftmargin
= "60" Topmargin = "70">
എന്നത്‌, പ്രദര്‍ശിപ്പിക്കേണ്ട വാചകം
വെബ്‌ പേജിന്റെ ഇടത്തേ അറ്റത്ത്‌ നിന്ന്‌
60 പിക്സല്‍ പോയിന്റ്‌ അകലെയും,
മുകളറ്റത്ത്‌ നിന്ന്‌ 70 പിക്സല്‍ പോയിന്റ്‌
അകലെയും ആണെന്ന്‌ കാണിക്കുന്നു.
<BODY> ടാഗിന്റെ Bgcolor, Text, Top
margin, Leftmargin എന്നീ ആദ്രി

afters 4.19: BODY soplemoasaaso
ബ്യയൂട്ടുകള്‍ ഉദാഹരണം 4.3-ലെ കോഡി ഒമുട്രിബ്യുടുകശി ഉപയോഗിച്ചിരിക്കുന്നു
ലൂടെ വിശദീകരിച്ചിരിക്കുന്നു. ചിര്രം

4.19-@8 അനുബന്ധ വെബ്‌ പേജ്‌ കാണാവുന്നതാണ്‌.

പിജിന്റെ പശ്ചാത്തലത്തിന്‌ നിറം കൊടുക്കുന്നു

<HTML>
<HEAD>
<TITLE> This is the title of web page </TITLE>
</HEAD>
<BODY Bgcolor= "cyan" Text= " Blue"

Topmargin= "70" Leftmargin= "60">

Hello, Welcome to the world of Web Pages!........
</BODY>
</HTML>

നിങ്ങളുടെ പുരോഗതി അറിയുക
1. HTML പ്രതിനിധീകരിക്കുന്നത്‌ നെയാണ്‌.
2. എന്താണ്‌ കണ്ടെയ്നര്‍ ടാഗ്‌?

3. അവസാനിപ്പിക്കുന്ന ടാഗ്‌ ഇല്ലാതെ തുടക്ക ടാഗ്‌ മാത്രം വേണ്ട ഇനം
ടാഗാണ്‌

4. ശരിയോ തെറ്റോ എന്ന്‌ പ്രസ്താവിക്കുക.
മ. ടാഗുകള്‍ കേയ്സ്‌ സെന്‍സിറ്റീവ്‌ ആണ്‌.
b. <BODY> ടാഗിന്റെ ഒരു ആഭ്രിബ്യൂട്ടാണ്‌ Bgcolor.
൦. ഒരു എപപ്റ്റി ടാഗാണ്‌ <TITLE>.
d. <HEAD> ടാഗിന്റെ ഒരു ആടഭ്രിബ്യൂട്ടാണ്‌ Dir.
5. <HTML> ടാഗിന്റെ ആഭദ്രിബ്യൂട്ടുകളുടെ പേരെഴുതുക.

6. ഒരു ടാഗില്‍ ആട്രിബ്യൂട്ടുകളുടെ ഉപയോഗമെന്താണ്‌?

7. <BODY> ടാഗിന്റെ വിവിധ ആട്രിബ്യൂട്ടുകള്‍ എഴുതുക.

നിങ്ങളുടെ വിദ്യാലയത്തിന്റെ പേരും അതോടൊപ്പം പശ്ചാത്തലത്തില്‍

വിദ്യാലയത്തിന്റെ ചിത്രവും പ്രദര്‍ശിപ്പിക്കുന്ന ഒരു 111741. ലിഖിതം

നിര്‍മിക്കുക. തുടര്‍ന്ന്‌ വാകൃത്തിന്റെ നിറവും പശ്ചാത്തലവും വൃത്യാ
നമുക്കു ചെയ്യാം സപ്പെടുത്തി പേജ്‌ പരിഷ്കരിക്കുക.

4.10 പൊതുവായ ചില ടാഗുകള്‍ (൭ഠണ൦ common tags)

1111. ഡോക്യുമെന്റിനു വേണ്ട അടിസ്ഥാന ടാഗുകളെയും അവയുടെ ആട്രിബ്യൂട്ടുക
ളെയും കുറിച്ച്‌ നാം ചര്‍ച്ച ചെയ്തു കഴിഞ്ഞു. വെബ്‌ പേജിലെ ഉള്ളടക്കം കൂടുതല്‍
ആകര്‍ഷകമാക്കാന്‍ ഉപയോഗിക്കുന്ന മറ്റു ടാഗുകളുമുണ്ട്‌. ഇക്കൂട്ടത്തില്‍, 11111. ലിഖിത
ത്തിന്റെ ബോഡി ഭാഗത്തെ ഉള്ളടക്കത്തിലുള്ള വാക്യങ്ങളുടെ ഘടന രൂപപ്പെടുത്താന്‍ ഉ
പയോഗിക്കുന്ന ടാഗുകളെ ഫോര്‍മാറ്റിങ്‌ ടാഗുകള്‍ എന്ന്‌ വിളിക്കുന്നു. ബോഡി ഭാഗ
ത്തെ ഉള്ളടക്കത്തിന്റെ രൂപഘടനയ്ക്ക്‌ ആവശ്യമായ ടാഗുകളില്‍ ചിലത്‌ നമുക്ക്‌ പരിച
യപ്പെടാഠ.
4.10.1 <H1>, <H2>, <H3>, <H4>, <H5>, <H6> - ശീര്‍ഷക ടാഗുകള്‍
(Heading tags)
ഒരു ഖണ്ഡികയുടെ തുടക്കത്തില്‍ അത്‌ എന്താണെന്ന്‌ വിശദീകരിക്കുന്നതിനായി കൊടു
ക്കുന്ന ഒരു വാക്കോ, വാകൃമോ, വാചകമോ ആണ്‌ ശീര്‍ഷകം. ബോഡി ഭാഗത്തെ സാധാ
രണ വാക്യങ്ങളെക്കാള്‍ വലുതോ കടുപ്പിച്ചതോ ആയ സവിശേഷതയുള്ള അക്ഷരങ്ങള്‍
കൊണ്ടാണ്‌ ശീര്‍ഷകം പ്രദര്‍ശിപ്പിക്കുന്നത്‌. <H1> മുതല്‍ <HE> വരെ ആറ്‌ തലങ്ങളി
ലുള്ള ശീര്‍ഷകങ്ങള്‍ 1111,41.-ല്‍ ഉണ്ട്‌. ഇവിടെ <H1> ഏറ്റവും വലുതും <H6> ഏറ്റവും
ചെറുമായ ശീര്‍ഷകങ്ങളാണ്‌ നിര്‍മിക്കുന്നത്‌. ശീര്‍ഷകം പ്രദര്‍ശിപ്പിക്കുന്നതിന്‌ മുന്നിലും
പിന്നിലുമായി UMD ഓരോവരി ചേര്‍ക്കുന്നു. ഈ ടാഗിന്റെ പ്രധാനപ്പെട്ട ആട്രി
ബ്യട്ട്‌ Align ആണ്‌. അതിന്‌ നല്‍കാവുന്ന വിലകള്‍ താഴെ തന്നിരിക്കുന്നു.
Left : വാക്യം ഇടത്‌ അരികിനോട്‌ (മാര്‍ജിനുമായി) പൊരുത്തപ്പെട്ട്‌ നില്‍ക്കും.
Right : വാക്യം വലത്‌ അരികിനോട്‌ (മാര്‍ജിനുമായി) പൊരുത്തപ്പെട്ട്‌ നില്‍ക്കും.
Center : വാക്യം പേജിന്റെ മാധ്യഭാഗത്ത്‌ പ്രതൃക്ഷപ്പെടും.

വിവിധങ്ങളായ ശീര്‍ഷകങ്ങളും, പൊരുത്തപ്പെടലുകളും ഉദാഹരണം 4.4 - ല്‍ കാണിച്ചി
രിക്കുന്നതോടൊപ്പം അനുബന്ധ വെബ്‌ പേജ്‌ ചിത്രം 4.20-ല്‍ പ്രദര്‍ശിപ്പിച്ചിരിക്കുന്നു.

ലികള്‍ വിശദിീകരിക്കുന്നതിന്‌ വേണ്ടിയുള്ളത്‌

<HTML>
<HEAD>
<TITLE> Heading Tags </TITLE>
</HEAD >
<BODY Bgcolor= "#FFEFD5">
<H1 Align= "left"> This is a Heading type 1 </H1>
<H2 Align= "center"> This is a Heading type 2 </H2>
<H3 Align= "right"> This is a Heading type 3 </H3>
<H4> This is a Heading type 4 </H4>

4. വെബ്‌ സാങ്കേതികവിദ്യ

<H5> This is a Heading type 5 </H5>
<H6> This is a Heading type 6 </H6>
</BODY>
</HTML>

Heading Tags - Mozilla Firefox
File Edit View History Bookmarks Tools Help
9 Heading Tags SP

2 2 2 വിവിധതരം ശീര്‍ഷ
This is a Heading type 1 («itn
ഏറ്റവും വലിഷം കൂടിയതും
ട11- ഏറ്റവും വലിഖം
aot

This is a Heading type 2

This is a Heading type 3

This is a Heading type 4

വിവിധതരം വിന്യാസങ്ങള്‍ (ൂദ്ധിക്കുക.
This is a Heading type 5 <H4>, <H5>, <H6> എന്നിവക്ക്‌
ഒരു വിന്യാസവും നല്‍കിയിട്ടില്ല
ഇടത്വരം ചേര്‍ന്ന വിന്യാസമാണ്‌

This is a Heading type 6 നരായുള്ളത്‌

alka 4.20: വ്യത്യസ്ത ശീര്‍ഷക SIN}AECBINGIAINBB വിവിധ പൊരുത്താപ്പെടലുകശി

4.10.2 <P> ടാഗ്‌ - ഖണ്ഡികകള്‍ നിര്‍മിക്കുന്നു (Creating Paragraphs)

<BODY> ടാഗിലെ വാക്യങ്ങളെ വിവിധ ഖണ്ഡികകളില്‍ ആക്കുവാന്‍ നമ്മെ സഹായിക്കു
ന്നത്‌ <P> ടാഗാണ്‌. ഇത്‌ ഒരു പുതിയ ഖണ്ഡികയെ സൂചിപ്പിക്കുകയും ഒരു ശുന്യവരി
ഖണ്ഡികയ്ക്ക്‌ മുന്നില്‍ ചേര്‍ക്കാന്‍ ബ്രൌസറിനോട്‌ നിര്‍ദേശിക്കുകയും ചെയ്യുന്നു. മറ്റ്‌
ഏതൊരു വേര്‍ഡ്‌ പ്രൊസ്സ്റസറിലെയും ഖണ്ഡികകള്‍ പോലെ തന്നെയാണ്‌ HTML-oe!
ഖണ്ഡികയും. ഒരു ഖണ്ഡിക <P> ടാഗില്‍ തുടങ്ങി </P> ടാഗില്‍ അവസാനിക്കുന്നു.
Left, right, center, justify എന്നീ വിലകള്‍ നല്‍കി ഖണ്ഡികയിലെ വാക്യങ്ങ
QOS വിന്യാസം ഉറപ്പിക്കുന്നത്‌ Align ആഭ്രിബ്യൂട്ട്‌ ഉപയോഗിച്ചു കൊണ്ടാണ്‌. വൃത്യസ്ത
വിന്യാസം നല്‍കി ഖണ്ഡികകള്‍ എങ്ങനെ രൂപപ്പെടുത്തുന്നുവെന്ന്‌ ഉദാഹരണം 4.5-ലുള്ള
കോഡില്‍ തന്നിരിക്കുന്നു. അങ്ങനെ ലഭിക്കുന്ന വെബ്‌ Gale ചിത്രം 4.21-ല്‍ കാണിച്ചിരി

ക്കുന്നു

രിന്യാസത്തോട്‌ കുടിയ ഖണ്ഡികകള്‍ രൂപകല്‍പന
NAY വേണ്ടിയുള്ളത്‌

<HTML>
<HEAD>
<TITLE> Paragraph Tags </TITLE>

</HEAD>
<BODY>
<P>

This paragraph contains
a lot of lines in the source code,
but the browser ignores it.
</P>
<P Align= "right">
This paragraph contains a lot of spaces
in the source code,but the browser ignores it.
</P>
<P Align= "justify">
The number of lines in a paragraph depends on
the size of the browser window.
If you resize the browser window, the number of lines
in this paragraph will change.
When we align a paragraph as justify, the space between
the words in a line will be adjusted
so that the lines will be both left and right aligned
at the same time.
</P>
</BODY>
</HTML>

Paragraph Tags - Mozilla Firefox
File Edit View History Bookmarks Tools Help

ഭി Paragraph Tags dp

This paragraph contains a lot of lines in the source code, but the browser ignores it.
This paragraph contains a lot of spaces in the source code,but the browser ignores it.

The number of lines in a paragraph depends on the size of the browser window. If you resize the
browser window, the number of lines in this paragraph will change. When we align a paragraph as
justify, the space between the words in a line will be adjusted so that the lines will be both left and
right aligned at the same time.

ഛത്രം 4.21: Align agisiny)s ഉശിക്കൊള്ളിച്ചടുള്ള <P> ടാഗിമ്റെ ഉപയോഗം

ചിത്രം 4.5-ലെ സോഴ്‌സ്‌ കോഡില്‍ അധിക ശുന്ൃസ്ഥലങ്ങളോട്‌ കൂടിയ മൂന്ന്‌ വരികള്‍
ഒന്നാം ഖണ്ഡികയിലും, രണ്ട്‌ വരികള്‍ രണ്ടാം ഖണ്ഡികയിലും ഉള്‍ക്കൊള്ളിചിട്ടുള്ളത്‌
നമുക്ക്‌ കാണാനാകും. എന്നാല്‍ ചിത്രം 4.21-ല്‍ കാണിച്ചിട്ടുള്ള ഈ കോഡിന്റെ വെബ്‌
പേജില്‍ ആദ്യത്തെ രണ്ട്‌ ഖണ്ഡികകള്‍ക്ക്‌ ഓരോ വരിയാണുള്ളത്‌. അതായത്‌, പേജ്‌
്രദര്‍ശിപ്പിക്കുമ്പോള്‍, അധികമുള്ള വരികളും ശൂനയസ്ഥലങ്ങളും ATMS നീക്കം
ചെയ്യുന്നു. രണ്ടാം ഖണ്ഡിക വലതുവശത്ത്‌ പൊരുത്തപ്പെട്ട്‌ നില്‍ക്കുന്നതും മുന്നാം
ഖണ്ഡിക ഇരുവശങ്ങളിലും പൊരുത്തപ്പെട്ട്‌ നില്‍ക്കുന്നതും (ശദ്ധിക്കുക. ഒന്നിലധികം

4. വെബ്‌ സാങ്കേതികവിദ്യ

ശൂനൃസ്ഥലങ്ങളും വരികളും ഒരൊറ്റ ശുന്യസ്ഥലമായാണ്‌ കരുതുന്നത്‌. അതുകൊണ്ട്‌,

111171. കോഡില്‍ അധികമായി ശുന്യസ്ഥലങ്ങളോ, വരികളോ ചേര്‍ക്കുന്നതുകൊണ്ട്‌
ഓട്ട്പുട്ട്‌ വ്ൃത്യാസപ്പെടുത്താനാകില്ല. എന്നാല്‍ ഇത്‌ <BR> ടാഗ്‌ ഉപയോഗിച്ച്‌ സാധ്യ
മാകും. ഉള്ളടക്ക വാക്യങ്ങളില്‍ <BR> ടാഗ്‌ ഉപയോഗിച്ചുകൊണ്ട്‌ അധികവരി ചേര്‍ക്കാം.
വലുതോ ചെറുതോ ആയ സ്ക്രീനുകളിലും, വലുപ്പം വൃത്യാസപ്പെടുത്തിയ വിന്‍ഡോക
ളിലും ലഭിക്കുന്ന വെബ്‌ പേജുകള്‍, ചിത്രം 4.21-ല്‍ തന്നിട്ടുളളതിന്‌ സമാനമായിരിക്കുക
യില്ല എന്നത്‌ ശ്രദ്ധിക്കുക.

4.10.3 <BR> ടാഗ്‌ - വരി വിഘടിപ്പിക്കുന്നു (Inserting line break)

ഒരു വെബ്‌ പേജിലെ വരി മാറ്റിയെഴുതുക എന്നതാണ്‌ <BR> ടാഗിന്റെ ഉദ്ദേശം. നിലവി
ലുള്ള വരിയിലെ വാക്യം മുറിച്ച്‌ അടുത്ത വരിയുടെ തുടക്കത്തില്‍ നിന്നാരംഭിക്കാനാണ്‌
<BR> ടാഗുപയോഗിക്കുന്നത്‌. ഇതൊരു എംറ്റി ടാഗാണ്‌.

ഉദാഹരണം 4.6-ല്‍ തന്നിട്ടുള്ള HTML കോഡ്‌ നമ്മുടെ രാജ്യത്തിന്റെ പ്രതിജ്ഞ പ്രദര്‍ശി
പ്പിക്കുന്നു. ചിതം 4.22-ല്‍ കാണിച്ചിട്ടുള്ള പരിണത ഫലമായി ലഭിക്കുന്ന പേജില്‍ <BR>
ടാഗിന്റെ ഉപയോഗവും <BR>, <P> എന്നീ ടാഗുകള്‍ തമ്മിലുള്ള വ്യത്യാസവും നമുക്ക്‌

കാണാം.

0103 വരികള്‍ മുറിക്കുന്നല്‍ (Line break)

ണ്ടിയുള്ളത്‌
<HTML>
<HEAD>
<TITLE> Line Breaks </TITLE>
</HEAD >
<BODY Bgcolor = "#FFEFC5">
<H1 Align = "center"> Our National Pledge </H1>

<P>India is my country and all Indians
are my brothers and sisters.<BR>

love my country and I am proud of its
rich and varied heritage.<BR>

shall always strive to be worthy of it.<BR>

shall give respect to my parents, teachers and all
elders and treat everyone with courtesy.<BR>
To my country and my people, I pledge my

devotion. <BR>In theirwell-being and prosperity alone

lies my happiness.
</P>
</BODY>
</HTML>

കമ്പ്യൂട്ടര്‍ സയന്‍സ്‌ - X ലല

Line Breaks - Mozilla Firefox
File Edit View History Bookmarks Tools Help

ടി Line Breaks oF

Our National Pledge

India is my country and all Indians are my brothers and sisters.

I love my country and I am proud of its rich and varied heritage.

I shall always strive to be worthy of it.

I shall give respect to my parents, teachers and all elders and treat everyone with courtesy.
To my country and my people, I pledge my devotion.

In theirwell-being and prosperity alone lies my happiness.

ചിത്രം 4.22: <BR> ടാഗിന്റെ്‌ ഉപയോഗം കാണിക്കുന്ന ഓഈട്ട്ചുട്ട്‌

ഉദാഹരണം 4.6, aNMo 4.24 എന്നിവ നല്‍കുന സ്ധുചനയ്ക്ക്‌ GON} AMO)
ZO), <P> ടാഗും <BR> ടാഗും തമ്മ7ത്‌ GaldMlolen;™M ആശയ
നമുക്കു ചെയ്യാം CBUWGAHINE പട്ടിക 4.5 പുതിച്ഛിക്കുക.

നിലവിലുള്ള വരി ഖണ്ഡിക്കുകയും
പുതിയ വരിയില്‍ തുടരുകയും ചെയ്യുന്നു.

കണ്ടെയ്നര്‍ ടാഗ്‌

പട്ടിക 4.0: <P> ടാഗും <BR> ടാഗും

4.10.4 <HR> ടാഗ്‌ - തിരശ്ചീനമായ വര സൃഷ്ടിക്കുന്നു (Creating
horizontal line)

ബ്രൌസര്‍ വിന്‍ഡോയുടെ വീതിക്ക്‌ കുറുകേ തിരശ്ചീനമായ ഒരു വര നിര്‍മിക്കുന്നത്‌
<HR> ടാഗാണ്‌. അതിന്റെ ആഭ്രിബ്യൂട്ടുകളായ Size, Width എന്നിവ ഉപയോഗിച്ച്‌
നമുക്ക്‌ വരയുടെ വീതിയും കനവും വ്യത്യാസപ്പെടുത്താം. കനത്തിന്‌ പിക്സലുകളായും
വീതിക്ക്‌ പിക്സലുകളായോ മൊത്തം വീതിയുടെ ശതമാനമായോ വില നല്‍കുന്നു.
<HR> ടാഗിന്റെ മറ്റ്‌ രണ്ട്‌ ആഭ്രിബ്യൂട്ടുകളാണ്‌ Noshade, Color എന്നിവ. Noshade
ആദഭ്രിബ്യൂട്ടിന്‌ പ്രത്യേക വില കാണുകയില്ല. വരയ്ക്ക്‌ നിറം കൊടുക്കുന്നത്‌ Color
ആദഭ്രിബ്യൂട്ടാണ്‌. left, center, right എന്നിങ്ങനെ വരയുടെ വിന്യാസത്തിന്‌ ഉപ
യോഗിക്കുന്ന Align ആഭ്രിബ്യയൂട്ടാണ്‌ മറ്റൊന്ന്‌. <HR> ഒരു എംറ്റി ടാഗാണ്‌ എന്ന്‌ ഓര്‍ക്കുക.

<HR> ടാഗിന്റെയും അതിന്റെ ആഭ്രിബ്യൂട്ടുകളുടെയും പ്രവര്‍ത്തനം വ്യക്തമാക്കുന്ന കോഡ്‌
ഉദാഹരണം 4.7-ല്‍ തന്നിട്ടുണ്ട്‌. അതിന്റെ ഓട്ടപുട്ട്‌ ചിത്രം 4.23-ല്‍ പ്രദര്‍ശിപ്പിച്ചിരിക്കുന്നു.

ലുള്ള രേഖകള്‍ വരതയ്ക്കുന്നതിന്‌

<HTML>
<HEAD>

4. വെബ്‌ സാങ്കേതികവിദ്യ

<TITLE> Horizontal Rules </TITLE>
</HEAD >
<BODY Bgcolor= "#BDB76B">
<H1 Align= "center"> Horizontal Rules </H1>
Line 1<HR Width= "50%" Align= "center"> <BR>
Line 2<HR Width= "40%" Align= "center" Noshade> <BR>
Line 3<HR Size= "10" Width= "30%" Align= "center"> <BR>
Line 4<HR Size= "10" Width= "30%" Align= "center" Noshade><BR>
Line 5<HR Size= "10" Width= "20%" Align= "center" Noshade
Color= "gold"> <BR>
Line 6<HR Size="10" Width="20%" Align="center"” Color="Aqua">
</BODY>
</HTML>

Horizontal Rules - Mozilla Firefox

ഈ 111171. ലിഖിതവും അതിന്റെ ഓട്ട്പു വിണ
ട്ടും പരിശോധിച്ചശേഷം, വരകളുടെ ആകൃ | ©! Horizontal rules aa
തികളിലുള്ള സമാനതകളും വൃത്യാസ
ങ്ങളും നിങ്ങള്‍ക്ക്‌ തിരിച്ചറിയാനാകുമോ?
ഇവിടെ, ആദ്യത്തെ രേഖ Size, Noshade
എന്നീ ആഭ്രിബ്യൂട്ടുകളില്ലാതെയും, രണ്ടാ
മത്തെ രേഖ Size ആഭ്രിബ്യൂട്ടില്ലാതെ
യുമാണ്‌ വരച്ചിരിക്കുന്നത്‌. രേഖ മൂന്നിനും,
നാലിനും വലുപ്പം 10 ആണ്‌. എന്നാല്‍ മൂന്നാ
മത്തേതിന്‌ Noshade ആട്രിബ്യൂട്ട്‌ ഇല്ല.
അവസാനത്തെ രണ്ട്‌ രേഖകള്‍ക്ക്‌ Color
ആട്രിബ്യൂട്ട്‌ അധികമായുണ്ട്‌. ഓരോ അവ aloo 4.23 - പലതരത്തിലുള്ള
സ്ഥയിലുമുള്ള ഈ രേഖകളുടെ ആകൃതി തിശ്ചതമായ CO1048

കള്‍ ശ്രദ്ധിക്കുക. നിങ്ങളുടെ കമ്പ്യൂട്ടര്‍ ലാബിലെ പ്രവര്‍ത്തനത്തില്‍ സാധ്യമായ എല്ലാവി
ലകളും വ്യത്യസ്തങ്ങളായ ആടഭ്രിബ്യൂട്ടുകള്‍ക്ക്‌ നല്‍കിക്കൊണ്ട്‌ നിങ്ങള്‍ക്ക്‌ കോഡ്‌ മാറ്റാ
വുന്നതും വെബ്‌ പേജില്‍ അപ്പോഴുണ്ടാകുന്ന മാറ്റം ദര്‍ശിക്കാവുന്നതുമാണ്‌.

4.10.5 <CENTER> ടാഗ്‌ - ഉള്ളടക്കം മധ്യഭാഗത്താക്കുന്നു (Centering
the content)

വെബ്‌ പേജിലെ ഉള്ളടക്കം തിരശ്ചീനമായി മധ്യഭാഗത്തേക്ക്‌ കൊണ്ടു വരുന്നത്‌
<CENTER> ടാഗാണ്‌. ഉള്ളടക്കം സാധാരണയായി വാക്യങ്ങള്‍, ചിധ്രങ്ങള്‍, പട്ടികകള്‍
തുടങ്ങിയവയായിരിക്കും. ഇത്‌ ഒരു കണ്ടെയ്നര്‍ ടാഗ്‌ ആയതുകൊണ്ട്‌ <CENTER>, </
CENTER> എന്നീ ടാഗ്‌ ജോഡികള്‍ക്ക്‌ ഇടയ്ക്ക്‌ നല്‍കുന്ന ഉള്ളടക്കം ര്രൌസര്‍ ജാലക
ത്തിന്റെ മധ്യഭാഗത്ത്‌ നിര്‍ത്തുന്നു. ഈ ടാഗിന്‌ ആഭ്രിബ്യൂട്ടുകള്‍ ഇല്ല.

4.10.6 വാക്യങ്ങള്‍ക്ക്‌ രൂപഘടന നല്‍കുന്ന ടാഗുകള്‍ (Text formating
tags)

വേഡ്‌ പ്രോസസിംഗ്‌ പ്രോ്ഗാമുകള്‍ ചെയ്യുന്നതു പോലെ, നമുക്ക്‌ വെബ്‌ പേജിലെ
വാക്യങ്ങള്‍ക്ക്‌ രൂപഘടന നല്‍കാനാകും. വാക്യങ്ങളുടെ പ്രാധാന്യത്തെ സൂചിപ്പിക്കു
ന്നതിന്‌ ഉപയോഗിക്കുന്ന സവിശേഷതകളാണ്‌ ബോള്‍ഡ്‌, ഇറ്റാലിക്‌, അണ്ടര്‍ലൈന്‍
തുടങ്ങിയവ. ഇതിനായുള്ള HTML ടാഗുകളെക്കുറിച്ച്‌ നമുക്ക്‌ ചര്‍ച്ച ചെയ്യാം.

<B> - ടെക്സ്റ്റ്‌ ബോള്‍ഡ്‌ ആക്കുന്നു

ഈ ടാഗ്‌ ടെക്സ്റ്റിന്റെ ശൈലി ബോള്‍ഡ്‌ ആക്കുന്നു. ഉള്ളടക്കത്തിലെ വാക്യങ്ങളുടെ
ബാഹ്യരൂപം കൂടുതല്‍ കനത്തില്‍ പ്രദര്‍ശിപ്പിക്കുന്നത്‌ <B> ടാഗാണ്‌.

<I>- ടെക്സ്റ്റ്‌ ഇറ്റാലിക്സിലാക്കുന്നു

ഇത്‌ വാക്യങ്ങള്‍ക്ക്‌ ചരിവ്‌ നല്‍കി രൂപപ്പെടുത്തുന്നു. <I> ടാഗിനും </I> ടാഗിനുമിട
യ്ക്കുള്ള ഉള്ളടക്കത്തിന്‌ ചരിവ്‌ നല്‍കുന്നു.

<U>- ടെക്സ്റ്റിന്‌ അടിവര ഇടുന്നു

വെബ്‌ പേജിലെ വാകൃത്തിന്‌ അടിവര നല്‍കാനാണ്‌ <U> ടാഗുപയോഗിക്കുന്നത്‌. <U>
ടാഗിനും </U> ടാഗിനുമിടയ്ക്ക്‌ ഉള്‍ക്കൊള്ളിചിട്ടുള്ള ഉള്ളടക്കം അടിവര ഉള്ളതായി
മാറുന്നു. രൂപഘടന നല്‍കുന്ന ടാഗുകളായ <U>, <B>, <I> എന്നിവ ഒന്നിച്ച്‌ ഉപയോഗി
ക്കാനാകും എന്നതിനാല്‍, ഉള്ളടക്കം കനം കൂടിയതും, ചരിഞ്ഞതും, അടിവരയുള്ളതു
മാകും.

<S>, <STRIKE> - ടെകസ്റ്റിന്‌ കുറുകെ വരയ്ക്കുന്നു

<S>, <STRIKE> എന്നീ ടാഗുകള്‍ ഉപയോഗിക്കുന്നത്‌ ഒരേ പ്രര്രിയയ്ക്കാണ്‌. വാക്യ
ങ്ങള്‍ കുറുകെ വെട്ടിയ രൂപത്തില്‍ പ്രദര്‍ശിപ്പിക്കുന്നു. ഉദാഹരണമായി, കുറുകേ വെട്ടിയ

വാക്യമാണ്‌ Fhank-youall.

<BIG> - ടെക്സ്റ്റ്‌ വലുപ്പം ഉള്ളതാക്കുന്നു

സാധാരണ വലുപ്പത്തിലുള്ള ടെക്സ്റ്റിനേക്കാള്‍ വലുപ്പം ഉള്ളടക്കത്തിന്‌ നല്‍കാനാണ്‌
<BIG> ടാഗ്‌ ഉപയോഗിക്കുന്നത്‌. ഡോക്യുമെന്റിലെ വാക്കുകള്‍ക്ക്‌ അല്ലെങ്കില്‍ വരികള്‍ക്ക്‌
പ്രത്യേക പ്രാധാന്യം നല്‍കാനാണ്‌ ഇത്‌ ഉപയോഗിക്കുന്നത്‌. സാധാരണ ഗതിയില്‍
<BIG> ടാഗിലെ അക്ഷരങ്ങളുടെ വലുപ്പം നിലവിലുള്ള വലുപ്പത്തേക്കാള്‍ ഒരുപടി കൂടു
തലായിരിക്കും.

<SMALL>- ടെക്സ്റ്റ്‌ ചെറുതാക്കുന്നു

ടെക്സ്റ്റുകളുടെ നിലവിലുള്ള വലുപ്പത്തേക്കാള്‍ ചെറുതാക്കാനാണ്‌ <SMALL> ടാഗ്‌ ഉപ
യോഗിക്കുന്നത്‌. സാധാരണയായി, <SMALL> ടാഗിലെ അക്ഷരങ്ങളുടെ വലുപ്പം, നില
വിലുള്ള അക്ഷരങ്ങളുടെ വലുപ്പത്തേക്കാള്‍ ഒന്ന്‌ കുറവായിരിക്കും.

<STRONG> - ടെക്സ്റ്റ്‌ കൂടുതല്‍ കനമുള്ളതാക്കുന്നു

ഒരു ഉപവാക്യ ടാഗാണ്‌ <STRONG> ഇത്‌ പ്രാധാന്യമുള്ള വാക്യത്തെ നിര്‍വചിക്കുന്നു.
<STRONG> വാക്യം സാധാരണയായി കൂടുതല്‍ കനമുളളതാക്കിയ ബാഹ്യാകൃതിയോട്‌

4. വെബ്‌ സാങ്കേതികവിദ്യ

കൂടിയാണ്‌ ആവിഷ്കരിക്കുന്നത്‌. <B> ടാഗിനെപ്പോലെയാണിത്‌. വാക്ൃരൂപത്തിലുള്ള
ഉള്ളടക്കത്തിലെ ഒരു ഉപവാകൃത്തിന്‌ കൂടുതല്‍ പ്രാധാന്യം നല്‍കാനാണ്‌ <STRONG>
SOD ഉപയോഗിക്കുന്നത്‌.

ഉദാഹരണം 4.8-ല്‍ തന്നിട്ടുള്ള കോഡ്‌ ഈ ടാഗുകളുടെ പ്രായോഗികത വിവരിക്കുന്നു.
സന്ദര്‍ഭോചിതമായി, നമുക്ക്‌ മഹാത്മാഗാന്ധിയുടെ വാക്കുകള്‍ ഉദ്ധരിക്കാം. ഈ കോഡ്‌
ആവിഷ്‌കരിക്കുന്നതിന്റെ ഫലമായുണ്ടാകുന്ന വെബ്‌ പേജ്‌ ചിത്രം 4.24-ല്‍ കാണിച്ചിരി
ക്കുന്നു.

ുപപ്പെടുത്തുന്ന ടാഗുകളെക്കുറിച്ച്‌ വിവരിക്കുന്ന
ള്ളത്‌

<HTML>
<HEAD>
<TITLE> Formatting Tags </TITLE>
</HEAD>
<BODY>
<P>
<CENTER><B>Mahatma Gandhi </B>is the <I> <U> Father of
our Nation.</U> </I> </CENTER>
Every student must learn the inspiring words (quotes)
of Gandhiji. It will inspire everyone. Let us have a
look at it.
</P><BR>
<SMALL> The weak can never forgive </SMALL>.
<BIG> Forgiveness is an attribute of the strong</BIG>
<BR> Live as if you were to die tomorrow.
<STRONG> Learn as if you were to live forever.</STRONG>
</BODY>
</HTML>

Formatting Tags - Mozilla Firefox
File Edit View History Bookmarks Tools Help
൫ Formatting Tags

Every student must learn the inspiring words (quotes) of Gandhiji. It will

inspire everyone. Let us have a look at it.

The weak can never forgive . Forgiveness is an attribute of the strong
Live as if you were to die tomorrow. Learn as if you were to live forever.

alo 4.24} വാക്യഘടന രുപപ്പെടടുത്തുദ്ന ടാഗുകളെക്കുവിച്ചുള്ള റ്വരണം

വാക്യങ്ങള്‍ക്ക്‌ ചില പ്രത്യേക രൂപം നല്‍കുന്ന ടാഗുകള്‍ നമുക്ക്‌ പരിചയപ്പെടാം.

<EM> - വാക്യങ്ങള്‍ക്ക്‌ പ്രത്യേക പ്രാധാന്യം നല്‍കുന്നു

വാക്യങ്ങള്‍ക്ക്‌ പ്രത്യേക പ്രാധാന്യം നല്‍കാന്‍ ഉപയോഗിക്കുന്ന ടാഗാണ്‌ <EM>. പ്രയോ
ഗത്തില്‍ വരുമ്പോള്‍, ആ ഭാഗം സാധാരണ ഇറ്റാലിക്സിലായിരിക്കും ആവിഷ്കരിക്കു
ന്നത്‌. <I> ടാഗുപയോഗിക്കുമ്പോഴുള്ള ഗുണം തന്നെയാകും <EM> ടാഗും തരുന്നത്‌.

<SUB>, <SUP> എന്നീ ടാഗുകള്‍ - സബ്‌ സ്ക്രിപ്റ്റും സുപ്പര്‍ സ്രകിപ്റ്റും നിര്‍മ്മി
ക്കുന്നു

ജലം, സല്‍ഫ്യൂരിക്‌ അമൂം തുടങ്ങിയവയുടെ രാസനാമം വാക്യം ഹൈസ്കൂള്‍ ക്ലാസ്സുക
ളില്‍ നാം പഠിച്ചിട്ടുള്ളതാണ്‌. അവ യഥാക്രമം 11,0, H,SO, എന്നിങ്ങനെ ആയിരിക്കും.
HTML-@8 അത്തരം പ്രതീകങ്ങള്‍ നമുക്ക്‌ എങ്ങനെ ചിത്രീകരിക്കാനാകും? അക്കങ്ങള്‍
സബ്സ്ക്രിപ്റ്റ്‌ രൂപത്തിലാണ്‌ എഴുതിയിട്ടുള്ളതെന്ന്‌ നമുക്ക്‌ കാണാം. ഒരു വെബ്‌ പേജില്‍
സബ്സ്ക്രിപ്റ്റ്‌ നിര്‍മിക്കാനാണ്‌ <SUB> ടാഗുപയോഗിക്കുന്നത്‌. H<SUB>2</SUB>O
എന്ന കോഡുപയോഗിച്ച്‌ കൊണ്ട്‌ 11,0 എന്ന വാക്യം നമുക്ക്‌ പ്രദര്‍ശിപ്പിക്കാനാകും.

അതുപോലെ, (atb)? = ച + Zabt 17 പോലുള്ള ബീജഗണിത ആവിഷ്‌കാര രീതി
യിലെ സൂപ്പര്‍ സ്ക്രിപ്റ്റുകള്‍ <SUP> ടാഗ്‌ ഉപയോഗിച്ച്‌ നമുക്ക്‌ സൂചിപ്പിക്കാനാകും. ഈ
സുധതവാക്യം നമുക്ക്‌ ഇങ്ങനെ എഴുതാം.

(atb) <SUP>2</SUP> = a<SUP>2</SUP> + 2ab + b<SUP>2</SUP>
<BLOCKQUOTE>, <Q> എന്നീ ടാഗുകള്‍ - ഒരു ഉദ്ധരണി പ്രദര്‍ശിപ്പിക്കുന്നു

<BLOCKQUOTE> ടാഗ്‌ അവയ്ക്കിടയില്‍ ഉള്‍ക്കൊള്ളിച്ചിട്ടുള്ള ഉള്ളടക്കം മാറ്റി പ്രദര്‍ശി
പ്പിക്കാന്‍ ഉപയോഗിക്കുന്നു. വാക്യങ്ങളെ ഇരട്ട ഉദ്ധരണികള്‍ക്കുള്ളില്‍ മാറ്റി പ്രദര്‍ശിപ്പി
ക്കുന്നത്‌ സൂചിപ്പിക്കാനാണ്‌ <Q> ടാഗ്‌ ഉപയോഗിക്കുന്നത്‌. ഖണ്ഡിക മുറിക്കാതെയുള്ള
ചുരുങ്ങിയ ഉദ്ധരണികള്‍ക്ക്‌ വേണ്ടിയുള്ളതാണ്‌ ഈ ടാഗ്‌. എന്നാല്‍ <BLOCKQUOTE>
വലിയ ഉദ്ധരണികള്‍ക്ക്‌ ഉപയോഗിക്കാന്‍ വേണ്ടിയുള്ളതാണ്‌.

ഉദാഹരണം 4.9-ല്‍ മുകളില്‍ സൂചിപ്പിച്ചിട്ടുളള ടാഗുകളുടെ വിശദീകരണമുണ്ട്‌. ലോക
പരിസ്ഥിതി ദിനം ആഘോഷിക്കുന്നത്‌ ജൂണ്‍ ട-ന്‌ ആണ്‌ എന്നത്‌ നമുക്ക്‌ അനുസ്മരി
ക്കാം. ഈ ദിവസത്തേക്കുള്ള ചിന്തകള്‍ നാം സൃഷ്ടിക്കുകയും ഇത്തരം ടാഗുകളുപയോ

ഗിച്ച്‌ ഒരു വെബ്‌ പേജ്‌ നിര്‍മിക്കുകയും ചെയ്യാം. ചിരം 4.25-ല്‍ അനുബന്ധമായ വെബ്‌
പേജ്‌ കാണിച്ചിട്ടുണ്ട്‌.

CQUOTE>, <Q> എന്നി ടാഗുകള്‍ വിശദീകരി

<HTML>
<HEAD>

oe 4, വെബ്‌ സാങ്കേതികവിദ്യ

<TITLE> BlockQuote and Q tags </TITLE>
</HEAD>
<BODY Bgcolor= "#98FB98" Text= "#008000">

Every year we celebrate World Environment Day on 5<SUP>
th</SUP> June. Let us have a message to all on this
occassion.
<BLOCKQUOTE> <B>June 5<SUP>th</SUP> is World Environment
Day. </B>
Mother nature too needs care and protection. Show her
your care by caring for her trees. Love trees and love
nature. And work for a greener environment because
generations have to come... The future depends on us...
</BLOCKQUOTE>
<Q>Keep your world clean and green. Save trees, Save the
environment!!
</Q>
</BODY>
</HTML>

ആദ്യ ഖണ്ഡിക ആരംഭിക്കുന്നത്‌ ബ്രൌസര്‍ ജാലകത്തിന്റെ ഇടത്‌ മൂലയില്‍ നിന്നാണെന്ന്‌
ചിത്രം 4.25-ല്‍ നിന്നും നമുക്ക്‌ മനസിലാക്കാം. അതില്‍ സൂപ്പര്‍ സ്ക്രിപ്റ്റ്‌ പ്രയോഗിച്ചി
ട്ടുണ്ട്‌. <BLOCKQUOTE> ടാഗ്‌ ഉപയോഗിച്ചതിനാല്‍ രണ്ടാമത്തെ ഖണ്ഡിക മാറ്റി പ്രദര്‍ശി
പ്പിച്ചു കൊണ്ടാണ്‌ തുടങ്ങിയിരിക്കുന്നത്‌. അവസാനമായി, മൂന്നാമത്തെ ഖണ്ഡിക ഇരട്ട
ഉദ്ധരണികള്‍ക്ക്‌ ഉള്ളിലാക്കി

BlockQuote and റു tags - Mozilla Firefox

യിരിക്കുന്നു. അതിന്റെ ഉള്ള istory Bookmarks Tools Help
ടക്കം <Q>, </Q> ടാഗ്‌ ജോ lockQuote and Q tags

ഡികള്‍ക്ക്‌ ഉള്ളില്‍ ഉള്‍പ്പെ
ടുത്തിയിരിക്കുന്നു. ഈ a
ണ്ഡികകളുടെ വിന്യാസം
കൂടി നിരീക്ഷിക്കുക.
<BLOCK QUOTE> ടാഗില്‍
ഒന്നിലധികം ഖണ്ഡികകള്‍

ഉള്‍പ്പെടുത്തിയിരിക്കുന്നത്‌

ശ്രദ്ധിക്കുക.

ചിത്രം 4.24 . ഉദാഹരണം 4.9 മെ
കോഡ്ധിന്‌ അനുക്ഖന്ഥമായ HAUNT പേട്ട്‌

നിങ്ങളുടെ പുരോഗതി അറിയുക
1. വാക്യങ്ങള്‍ക്ക്‌ ഘടന നല്‍കുന്ന ചില ടാഗുകളുടെ പേരെഴുതുക.

2. <HR> ടാഗിന്റെ വൃത്യസ്ത ആഭ്രിബ്യൂട്ടുകളുടെ നാമാവലി തയാറാ
ക്കുക.

3. എത്ര തലങ്ങളിലുള്ള ശീര്‍ഷക ടാഗുകള്‍ 111141. -ല്‍ ലഭ്യമാണ്‌?

4. ഹസ്‌ എന്ന്‌ പ്രദര്‍ശിപ്പിക്കുന്നതിനുള്ള HTML കോഡ്‌ ശകലം എഴു
തുക.

5. ശരിയോ തെറ്റോ എന്ന്‌ പ്രസ്താവിക്കുക.
<BR> ടാഗ്‌ ഒരു എംപ്റ്റി ടാഗാണ്‌.

b. 111141. ഡോക്യുമെന്റില്‍ <EM> ടാഗിനും <I> ടാഗിനും ഒരേ
ഉപയോഗമാണുള്ളത്‌.

൦. <U> ടാഗിന്റെയും <I> ടാഗിന്റെയും ഒരുമിച്ചുള്ള ഉപയോഗം
അനുവദനീയമല്ല.

6. <STRONG> ടാഗിന്റെ ഉപയോഗമെന്താണ്‌?

7. <STRONG> ടാഗിന്റേതിന്‌ സമാനമായ കൃത്യം നിര്‍വഹിക്കുന്ന ടാഗ്‌
ഏതാണ്‌?

8. താരെതന്നിട്ടുള്ളവയില്‍ നിന്നും ഒറ്റപ്പെട്ടത്‌ പുറത്തെടുക്കുക.
a. HTML b. ALIGN c. HEAD d. CENTER

4.10.7 <PRE> - പൂര്‍വ രുപീകൃത ടെക്സ്റ്റുകള്‍ പ്രദര്‍ശിപ്പിക്കുന്നു
(Displaying Preformatted text)

ടെക്സ്റ്റ്‌ എഡിറ്ററില്‍ നല്‍കിയ ഉള്ളടക്കം നമുക്ക്‌ അതേ രൂപത്തില്‍ തന്നെ പ്രദര്‍ശിപ്പിക്ക
ണം എന്നിരിക്കട്ടെ. ഈ ആവശ്യം <PRE> ടാഗിന്‌ നിര്‍വഹിക്കാനാകും. സാധാരണ
ഗതിയില്‍ വൈറ്റ്‌ സ്പേസുകള്‍, ന്യൂ ലൈന്‍ ക്യാരക്ടറുകള്‍, ടാബ്‌ സ്‌പെയ്‌സുകള്‍ തുട
ങ്ങിയവയ്ക്ക്‌ ര്രൌ൭സര്‍ പരിധി നിശ്ചയിച്ചിട്ടുണ്ട്‌. അതുകൊണ്ട്‌, (ബൌസറിന്റെ സ്വയം
പ്രേരിത ഘടനാരൂപീകരണ സ്വഭാവം <PRE> ടാഗുപയോഗിച്ച്‌ നമുക്ക്‌ പ്രവര്‍ത്തന രഹി
തമാക്കാനാകും. ഈ ടാഗ്‌, അതിലുള്‍പ്പെടുത്തിയിട്ടുള്ള വാകൃത്തിന്റെ ഘടന രൂപപ്പെടു
ത്തിക്കഴിഞ്ഞതാണ്‌ എന്ന്‌ ബ്രൌാസറിനോട്‌ പറയുകയും, ആയതിനാല്‍ വീണ്ടും ഘടന
പുനര്‍നിര്‍ണയിക്കേണ്ടതില്ല എന്ന്‌ ഓര്‍മിപ്പിക്കുകയും ചെയ്യുന്നു. അതായത്‌, വാക്യം
അതേപടി തന്നെ പ്രദര്‍ശിപ്പിക്കുവാന്‍ ര്രൌസറിനോട്‌ പറയുന്നു.

ഉദാഹരണം 4.10, allo 4.26 എന്നിവ ഈ ടാഗിനെക്കുറിച്ച്‌ ഒരു ധാരണ നമുക്ക്‌ നല്‍കു
ന്നു. ലോക പരിസ്ഥിതിദിനത്തോടനുബന്ധിച്ച്‌ കുറച്ച്‌ വാക്യങ്ങളുള്ള ഒരു വെബ്‌ പേജ്‌
നമുക്ക്‌ നിര്‍മിക്കാം.

4. വെബ്‌ സാങ്കേതികവിദ്യ

തിന്‌ വേണ്ടിയുള്ളത്‌

<HTML>
<HEAD>
<TITLE> Pre Formatting tags </TITLE>
</HEAD>
<BODY Bgcolor = "#eee8aa" Text = "#b22222">
<PRE>
Don't Pollute Water,
Don't Pollute Air,
Don't Pollute Environment,
And Don't Pollute Yourself,
Celebrate World Environment Day
</PRE>
</BODY>
</HTML>

<PRE>, </PRE> എന്നീ ടാഗുകള്‍ക്ക്‌ ഇടയിലുള്ളതെന്തും HTML ലിഖിതത്തിലുള്ളത്‌
പോലെ തന്നെ പ്രദര്‍ശിപ്പിക്കും എന്ന്‌ ചിത്രം 4.206-ല്‍ കാണിച്ചിട്ടുള്ള വെബ്‌ പേജില്‍

നിന്നും മനസിലാക്കാം.
0 2 ° Pre Formatting tags - Mozilla Firefo}x O X

File Edit View History Bookmarks Tools
൫] Pre Formatting tags ap

ചിതം 4.26: <PRE> ടാഗിനെക്കുവിച്ചുള്ള വിശദികരണം

4.10.8 <ADDRESS> - മേല്‍വിലാസം പ്രദര്‍ശിപ്പിക്കുന്നു (Displaying
the address)

ഒരു പപമാണത്തിന്റെ അല്ലെങ്കില്‍ പ്രബന്ധത്തിന്റെ രചയിതാവിനെ/ഉടമസ്ഥനെ ബന്ധ

പ്പെടാനുള്ള വിവരം പോലുള്ളവ നിര്‍വചിക്കുവാനുള്ള ടാഗാണ്‌ <ADDRESS> ടാഗ്‌.

പേര്‍, ടെലഫോണ്‍ നമ്പര്‍, പിന്‍ നമ്പര്‍, ഇ-മെയില്‍ മേല്‍വിലാസങ്ങള്‍ തുടങ്ങിയവ

യാണ്‌ ഈ ടാഗിന്റെ ഉള്ളൂടക്കമായി ഉള്‍ക്കൊള്ളിക്കുന്നത്‌. വാക്യങ്ങളെ ഇറ്റാലിക്സ്‌

രീതിയിലാണ്‌ മിക്കവാറും ര്രൌസറുകള്‍ പ്രദര്‍ശിപ്പിക്കുന്നത്‌.

ഉദാഹരണം 4.11-ല്‍ തന്നിട്ടുള്ള കോഡ്‌ <ADDRESS> ടാഗിനെക്കുറിച്ച്‌ വിശദീകരിക്കു
ന്നു. പേജിന്റെ രൂപം ചിത്രം 4.27-ല്‍ കാണിച്ചിരിക്കുന്നു.

ടാഗ്‌ വിശദീകരിക്കുന്നതിന്‌ വേണ്ടിയുള്ളത്‌

<HTML>
<HEAD>
<TITLE> Address tag </TITLE>
</HEAD>
<BODY Bgcolor= "#DDAODD">
The contact details of the "SCERT" is the following:
<ADDRESS>
State Council of Educational Research and Training
(SCERT) , <BR>
Poojappura, <BR>
Thiruvananthapuram, <BR>
PIN: 695012, KERALA.<BR>
Tel : 0471 - 2341883

</ADDRESS>
Address tag - Mozilla Firefox
</BODY>
File Edit View History Bookmarks Tools Help
</HTML>

Address tag

ബന്ധപ്പെടാനുള്ള വിവര
ത്തിന്റെ ഭാഗമെന്ന വരു
മ്പോള്‍, <ADDRESS>
ടാഗ്‌ സാധാരണ ഗതി
യില്‍ തപാല്‍ മേല്‍വി
ലാസം സൂചിപ്പിക്കാ
നാണ്‌ ഉപയോഗിക്കു
ന്നത്‌. എന്നിരുന്നാലും, തനത്‌ ശൈലിയില്‍ <EM>, <I> എന്നിവ പ്രദര്‍ശിപ്പിക്കുന്ന ശൈലിക്ക്‌
സമാനമായാണ്‌ <ADDRESS> ടാഗും വാക്യം പ്രദര്‍ശിപ്പിക്കുന്നത്‌. ആയതിനാല്‍, ബന്ധപ്പെ
ടാനുള്ള വിവരം കൈകാര്യം ചെയ്യാന്‍ അനുയോജ്യമായ രീതിയില്‍ അത്‌ ഉപയോഗിക്കാവു
ന്നതാണ്‌. എഴുത്തുകാരന്റെ പേര്‍, പകര്‍പ്പവകാശം തുടങ്ങിയ വിവരങ്ങള്‍ ഉള്‍ക്കൊള്ളുന്ന
അടിക്കുറിപ്പിനുള്ളിലാണ്‌ <ADDRESS> ടാഗ്‌ എലമെന്റ്‌ മാതൃകാപരമായി നല്‍കാറുള്ളത്‌.

aio 4.27 <ADDRESS> ടാഗ്‌ ഉശില്ലെടുത്തിയിട്ടുള്ള ഒരു വെബ്‌ പേജ്‌

4.10.9 <MARQUEE> - മാര്‍ക്യു വാക്യം പ്രദര്‍ശിപ്പിക്കുന്നു (Displaying
text in a scrolling Marquee)

നാം ഇതുവരെ ചര്‍ച്ച ചെയ്ത HTML ടാഗുകളെല്ലാഠം ഉള്ളടക്കങ്ങള്‍ ര്രാസറില്‍ പ്രദര്‍ശി

പ്പിക്കുക മാത്രമാണ്‌ ചെയ്യുന്നത്‌. എന്നാല്‍ ഒരു വാകൃശകലം അല്ലെങ്കില്‍ ചിത്രം വെബ്‌

പേജില്‍ തിരശ്ചീനമായോ ലംബമായോ ഒഴുകി നീങ്ങുന്നതായോ കാണിക്കുന്നതിന്‌,

<MARQUEE> ടാഗ്‌ ഉപയോഗിക്കുന്നു.

<MARQUEE> ടാഗിനൊപ്പം ഉപയോഗിക്കുന്ന പ്രധാനപ്പെട്ട ആഭ്രിബ്യയൂട്ടുകളുടെ നാമാവലി
താഴെ തന്നിട്ടുണ്ട്‌.

4. വെബ്‌ സാങ്കേതികവിദ്യ

* Height: പിക്സലായോ ്രൌ൦സര്‍ ജാലകത്തിലെ ഉയരത്തിന്റെ ശതമാനമായോ
മാര്‍ക്യൂവിന്റെ ഉയരം നിശ്ചയിക്കുന്നു.

° Width: പിക്സലായോ, ബ്രൌസര്‍ ജാലകത്തിലെ വീതിയുടെ ശതമാനമായോ വീതി
സൂചിപ്പിക്കുന്നു.

* Direction: ഏത്‌ ദിശയിലാണ്‌ ടെക്സ്റ്റ്‌ ചലിക്കേണ്ടതെന്ന്‌ സൂചിപ്പിക്കുന്നു. up,
down, left, right എന്നീ വിലകളാണ്‌ ഇതിനുള്ളത്‌.

ഭ Behaviour: മാര്‍ക്യൂവിന്റെ സ്ക്രോളിങ്‌ ഏത്‌ വിധത്തിലാകണമെന്ന്‌ സൂചിപ്പിക്കു
ന്നു. scroll, slide, alternate എന്നീ വിലകളാണ്‌ ഇതിനുള്ളത്‌.

ഭ  Scrolldelay: ഓരോ സ്‌ക്രോളിനും ഇടയ്ക്കുള്ള സമയദൈര്‍ഘ്യം സൂചിപ്പിക്കു
ന്നു. 10, 15 തുടങ്ങിയവ പോലെ സെക്കന്റിലുള്ള വിലകളാണ്‌ ഇതിനുള്ളത്‌.

€  Scrollamount: മാര്‍ക്യു ടെക്സ്റ്റിന്റെ വേഗത സൂചിപ്പിക്കുന്നതിന്‌ ഉപയോഗിക്കുന്നു.

© — Loop: മാര്‍ക്യു ടെക്സ്റ്റ്‌ എത്ര്രപാവശ്യം സ്ക്രീനില്‍ സ്‌ക്രോള്‍ ചെയ്യണമെന്ന്‌ സൂചി
പ്പിക്കുന്നു. ഇതിന്റെ തനത്‌ വില Infinte ആയിരിക്കും, അങ്ങനെ ആയാല്‍ മാര്‍ക്യൂ
അവസാനമില്ലാതെ സ്‌ക്രോള്‍ ആകും.

ഭ Bgcolor: നിറമോ, നിറത്തെ സൂചിപ്പിക്കുന്ന ഹെക്സാഡെസിമല്‍ സംഖ്യയോ
ഉപയോഗിച്ച്‌ പശ്ചാത്തലനിറം സൂചിപ്പിക്കുന്നു.

ഭ Hspace: ഇത്‌ മാര്‍ക്യൂവിന്‌ ചുറ്റുമുള്ള തിരശ്ചീനമായ സ്ഥലം സൂചിപ്പിക്കുന്നു.
ഇതിന്റെ വില പിക്സല്‍ ആയോ ശതമാനവില ആയോ നല്‍കുന്നു.

€ സുട്രാമഠട: മാര്‍ക്യൂവിനു ചുറ്റുമുള്ള ലംബമായ ശുനൃസ്ഥലത്തെ സൂചിപ്പിക്കുന്നു.
ഇതിന്റെ വിലയും പിക്സല്‍ ആയോ ശതമാനവില ആയോ ആണ്‌ നല്‍കുന്നത്‌.

ഉദാഹരണം 4.12-ല്‍ തന്നിട്ടുള്ള കോഡ്‌ <MARQUEE> ടാഗിന്റെ ഉപയോഗത്തേയും

ചിത്രം 4.28 അനുബന്ധ വെബ്‌ പേജിനേയും കാണിക്കുന്നു.

വിശദീകരിക്കുന്നതിന്‌ വേണ്ടിയുള്ളത്‌

<HTML>
<HEAD>
<TITLE> HTML marquee Tag </TITLE>
</HEAD>
<BODY>
<MARQUEE Width= "50%"> This will take only 50% width of
Browser Window</MARQUEE>
<MARQUEE Height= "100" Hspace= "100" Bgcolor= "#44BB22"
Direction= "up"> Scrolling up </MARQUEE>
<MARQUEE Height= "20" Vspace= "30" Bgcolor= "#FFBBOO"
Direction= "right"> This will scroll from left to right
</MARQUEE>
</BODY>
</HTML>

വീതി 50% ആയതിനാല്‍ ആദ്യത്തെ മാര്‍ക്യൂ മധ്യഭാഗത്ത്‌ നിന്നും തുടങ്ങി വിന്‍ഡോ
യുടെ ഇടത്‌ വശത്തേക്ക്‌ സ്‌ക്രോള്‍ ചെയ്യൂന്നു. രണ്ടാമത്തെ മാര്‍ക്യൂ പച്ചനിറത്തോടുകു
ടിയതും 100 പിക്സല്‍ ഉയരം സ്ക്രോള്‍ ചെയ്യാന്‍ ഉപയോഗിച്ചിട്ടുള്ളതുമാണ്‌.

ഇടത്‌ മാര്‍ജിനില്‍ നിന്നും തിരശ്ചീനമായി 100 പിക്സല്‍ അകലെയാണ്‌ സ്ക്രോള്‍ മേഖല
ഏരിയ സജ്ജീകരിച്ചിട്ടുള്ളത്‌. മുന്നാമത്തെ മാര്‍ക്യൂ “181300” നിറം കൊണ്ട്‌ പശ്ചാ
ത്തലം ഒരുക്കിയിട്ടുള്ളതും

HTML marquee Tag - Mozilla Firefox
മുന്നിലുള്ള മാര്‍ക്യൂവില്‍ നി [rile edit view History Bookmarks Tools Help
ന്നും ലംബമായി 30 പിക്സല്‍ | GHTMLmarquee Tag പ
താഴേക്ക്‌ സ്ഥാപിച്ചിട്ടുള്ളതുമാ This will tab
ണ്‌. സ്ക്രോള്‍ ചെയ്യുന്ന
ജാലകം 40 പിക്സല്‍ ഉയര
ത്തിലുള്ളതും ഇടത്ത്‌ നിന്ന്‌
വലത്തേക്ക്‌ നീങ്ങുന്നതുമാണ്‌.
വാക്കുകളോ, വാക്യങ്ങളോ
മാ്തമല്ല ചിത്രങ്ങളും DIB യൂ allmo 4.28 : Marquee ടാഗും അതിന്റെ്‌ ആട്ബ്യുട്ടുകളും
വിന്റെ ഉള്ളൂടക്കമായി നമുക്ക്‌ ഉപയോഗിക്കാം.

4.10.10 <DIV> - വാക്യങ്ങളുടെ ഒരു ഭാഗം ചിട്ടപ്പെടുത്തുന്നു
(Formatting a block of text)

ഡോക്യുമെന്റിന്റെ ഒരു ഭാഗം അല്ലെങ്കില്‍ ഒരു നിര ചിട്ടപ്പെടുത്താനാണ്‌ <DIV> ടാഗ്‌ ഉ
പയോഗിക്കുന്നത്‌. 11111. ലിഖിതത്തിലുള്ള വലിയ ഭാഗങ്ങള്‍ ഒരുമിച്ച്‌ ഒരു കൂട്ടമാക്കി
ചിട്ടപ്പെടുത്താനും <DIV> ടാഗ്‌ കൊണ്ട്‌ സാധിക്കുന്നു. ഖണ്ഡികകള്‍, പട്ടികകള്‍ തുട
ങ്ങിയവ ഈ ഭാഗത്തുണ്ടാകും. <DIV> ടാഗിന്‌ മുന്‍പും പിന്‍പും മിക്കവാറും ര്രൌസറു
കള്‍ ഒരു വരി (ശുന്യവരി) ചേര്‍ത്തിട്ടുണ്ടാകും. <DIV> ടാഗിന്റെ ആട്രിബ്യൂട്ടുകള്‍ താഴെ
തന്നിട്ടുള്ളവയാണ്‌.

Align: left,right, center, justify എന്നീ വിലകള്‍ കൊണ്ട്‌ തിരശ്ചീനമായ

വിന്യാസം നിജപ്പെടുത്തുന്നു.

Id : ടാഗിനെ തിരിച്ചറിയാനായി സവിശേഷമായ ഒരു സൂചകം നല്‍കുന്നു.
Style : ഉള്ളടക്കത്തിലെ അക്ഷരം, നിറം തുടങ്ങിയവ എങ്ങനെ ആവിഷ്കരിക്കണ

മെന്ന്‌ നിര്‍ദേശിക്കുന്നു.

<DIV> ടാഗിന്റെ Align, Style എന്നീ ആഭ്രിബ്യയുട്ടുകളുടെ ഉപയോഗം ഉദാഹരണം
4.13-ലും, തല്‍ഫലമായി ലഭിക്കുന്ന വെബ്പേജ്‌ ചിത്രം 4.29-ലും കാണാവുന്നതാണ്‌.

ഗ്‌ വിശദികരിക്കുന്നതിന്‌ വേണ്ടിയുള്ളത്‌

<HTML>
<HEAD>

<TITLE> DIV Tag </TITLE>
</HEAD >

4. വെബ്‌ സാങ്കേതികവിദ്യ

<BODY Bgcolor= "#ddffff">

<H2 Align= "center"> Success Story </H2>

<DIV Align= "Center" Style= "Color:#0000FF"> One day a

partially deaf four - year old child came home with a

note in his pocket from his teacher, "Your Tommy is too

stupid to learn, get him out of the school."

<P>His mother read the note and answered, "My Tommy is
not too stupid to learn, I will teach him myself." And
that Tommy grew up to be the great Thomas Alwa Edison.

</P> He had only three months of formal schooling.

</DIV>

All success stories are stories of great failures.

You learn from your failure and move forward.
</BODY>
</HTML>

DIV Tag - Mozilla Firefox
File Edit View History Bookmarks Tools Help
(ഭി DIV Tag op

Success Story

One day a partially deaf four - year old child came home with a note in
his pocket from his teacher, "Your Tommy is too stupid to learn, get him
out of the school."

His mother read the note and answered, "My Tommy is not too stupid to
learn, I will teach him myself." And that Tommy grew up to be the great
Thomas Alwa Edison.

He had only three months of formal schooling.
All success stories are stories of great failures. You learn from your
failure and move forward.

ചിത്രം 4.29: <DIV> ടാഗിന്റെ ഉപയോഗം

4.10.11 <FONT> - ലിപികളുടെ സ്വഭാവസവിശേഷതകള്‍ നിര്‍ദേശിക്കുന്നു
(Specifying font characteristics)

<FONT>, </FONT> എന്നീ ടാഗുകള്‍ക്ക്‌ ഇടയില്‍ ഉള്‍ക്കൊള്ളിച്ചിട്ടുള്ള വാക്യങ്ങളുടെ
ശൈലി, വലുപ്പം, നിറം എന്നിവ വ്ൃത്യാസപ്പെടുത്തുവാന്‍ <FONT> ടാഗ്‌ നമ്മെ സഹാ
യിക്കുന്നു. ഡോക്യുമെന്റിലെ ഒരു ചെറിയ ഭാഗത്തിന്റെ രൂപഘടന മാറ്റുന്നതിനാണ്‌ ഇത്‌
സാധാരണയായി ഉപയോഗിക്കുന്നത്‌. <FONT> ടാഗിന്റെ ആടദ്രിബ്യൂട്ടുകള്‍ താഴെ തന്നി
ട്ടുള്ളവയാണ്‌.

Color : നിറനാമമായോ, ഹെക്സാഡെസിമല്‍ വിലയായോ ടെക്സ്റ്റിന്‌ നിറം നല്‍കു
ന്നു.

Face : അക്ഷരങ്ങളുടെ ശൈലി സൂചിപ്പിക്കുന്ന ആഭദ്രിബ്യൂട്ടാണ്‌ ഇത്‌. വില സൂചിപ്പി
ച്ചിട്ടില്ല എങ്കില്‍ (ബ്രൌസര്‍ അനുകൂലിക്കുന്ന ശൈലികളില്‍ ആദൃത്തേത്‌ തനത്‌
(Default) ശൈലിയായി ഡോക്യുമെന്റിലെ വാക്യങ്ങള്‍ക്ക്‌ നല്‍കുന്നു.

Size : അക്ഷരങ്ങളുടെ വലുപ്പം 1 മുതല്‍ 7 വരെയുള്ള വിലകള്‍ കൊണ്ട്‌ സൂചിപ്പി
ക്കാന്‍ ഉപയോഗിക്കുന്ന ആഭ്രിബ്യൂട്ടാണ്‌ ഇത്‌. തനത്‌ വില 3 ആയിരിക്കും.

<FONT> ടാഗിന്റെ ഉപയോഗം ഉദാഹരണം 4.14-ല്‍ തന്നിട്ടുള്ള കോഡ്‌ വിശദീകരിക്കൂ
കയും അനുബന്ധ വെബ്‌ പേജ്‌ ചിത്രം 4.30 കാണിക്കുകയും ചെയ്യുന്നു.

ന്നതിന്‌ വേണ്ടിയുള്ളത്‌

<HTML>
<HEAD> <TITLE> Font tags </TITLE> </HEAD>
<BODY Bgcolor= "#eee8aa">

Every success story is also a story of great failure.

The only difference is that every time they failed,
they bounced back. <BR><BR>
<FONT Size="6" Face="Courier New" Color="#B22222">
Successful people donéapos;t do great things,
they only do small things in a great way.
</FONT>

</BODY>

</HTML>

Font tags - Mozilla Firefox

മുകളില്‍ തന്നിട്ടുള്ള കോഡില്‍ ഒരു [6൦ Edit view
ഭാഗം (&APOS;) നാം പച്ചനിറത്തില്‍ | © Fes
രേഖപ്പെടുത്തിയിട്ടുണ്ട്‌. ഇത്‌ അര്‍ഥമാ
ക്കുന്നത്‌ എന്താണ്‌? don't എന്ന വാ
ക്കിലെ ഏക ഉദ്ധരണി ചിഹ്നം കൊണ്ട്‌
വരുന്നതിന്‌ വേണ്ടിയാണിതെന്ന്‌ ലഭി
ക്കുന്ന വെബ്‌ പേജില്‍ നിന്നും നമുക്ക്‌
മനസിലാക്കാനാകും. ഇതുപോലെ മറ്റ്‌ ച്തം 4.30: വന ടാഗിമ്റി ഉപയോഗം
പല ചിഹനങ്ങളുമുണ്ട്‌. തുടര്‍ന്ന്‌ വരുന്ന ഭാഗങ്ങളില്‍ അവ ചര്‍ച്ച ചെയ്യാം.

4.11 സാര്‍ഥക ചിഹ്നങ്ങള്‍ക്ക്‌ വേണ്ടി HTML - 03 ഉപയോഗിക്കുന്ന

സവിശേഷ വസ്തുക്കള്‍ (HTML entities for reserved
characters)

<>, & തുടങ്ങിയ ചിഹ്നങ്ങള്‍ക്ക്‌ പ്രത്യേകമായ അര്‍ത്ഥമാണ്‌ HTML-« ഉള്ളത്‌. മാത്ര
മല്ല, HTML ഡോക്യുമെന്റിന്റെ ഉള്ളടക്കത്തിലെ വാക്യങ്ങളില്‍ ഇവ ഉള്‍പ്പെടുത്താനും
സാധിക്കില്ല. HTML ടാഗുകളോടും ആഭ്രിബ്യൂട്ടുകളോടും ഒപ്പം കാണപ്പെടുന്ന വിരാമ
ചിഹ്നങ്ങളെപ്പോലെ ഈ ചിഹ്നങ്ങളെ ര്രൌസര്‍ കണക്കാക്കും.

4. വെബ്‌ സാങ്കേതികവിദ്യ

ഉദാഹരണമായി, ആങ്കിള്‍ ബ്രാക്കറ്റുക
ളായ <, > എന്നിവ ഉപയോഗിക്കുന്നത്‌ Character 1൩0 Description
ടാഗുകളെ സൂചിപ്പിക്കാനാണ്‌. വെബ്‌ &nbsp: ബഖണ്ഡിക്കാനാവാത്ത സ്ഥലം
പേജിലെ വാക്യങ്ങളില്‍ ഈ അടയാ

ങ്ങളു 2 8 " &quot: Mes ഉദുരണി
ങ്ങള്‍ നമുക്ക്‌ എപ്പോഴെങ്കിലും പ്രദര്‍ശി
പ്പിക്കേണ്ടി വന്നാല്‍, 111101.-ലെ സവി ചാട; ഏക ഉദ്ദരണി
ശേഷ വസ്തുക്കള്‍ നമുക്ക്‌ ഉപയോഗിക്കേ & &amp; ആംപര്‍സെന്റ്‌
ണ്ടിവരും. പട്ടിക 4.7-ല്‍ സാര്‍ത്ഥക ailam

ര < lt: 6121030)

ങ്ങളുടെയും അനുബന്ധ 111141. വസ്തു
ക്കളുടെയും നാമാവലി നല്‍കിയിരിക്കു > &gt: വലുത്‌
ന്നു. © &copy; പകര്‍ഷവകാര അടയാളം
ഒരു വെബ്‌ പേജില്‍ ൧. 13:൧൭ 0. ™ Strade; വ്യാപാര മു അടയാളം
എന്ന വാക്യം പ്രദര്‍ശിപ്പിക്കുന്നതിന്‌, A
Glt; B & മ &gt; എന്ന്‌ ® &reg; ERIS ചെയ്തതിന്റെ അടയാളം
111171. കോഡില്‍ നല്‍കണം. പട്ടിക 4.7: എന്റിറ്റികളുടെ പട്ടികയും

അവയുടെ ANGATA@MALO

4.12 HTML ഡോകക്യുമെന്റില്‍ കമന്റുകള്‍ ഉള്‍പ്പെടുത്തുന്നു
(Adding comments in HTML document)

111141. ഡോക്യുമെന്റില്‍, പ്രതേകിച്ച്‌ സങ്കീര്‍ണമായ ഡോക്യുമെന്റില്‍ കമന്റ്‌ ഉള്‍പ്പെടു
ത്തുന്നത്‌ ഒരു നല്ല ശീലമാണ്‌. കോഡ്‌ മനസ്സിലാക്കാന്‍ കമന്റുകള്‍ നമ്മെ സഹായി
ക്കുന്നു. കൂടാതെ കോഡിന്റെ വായനക്ഷമതയും അത്‌ വര്‍ധിപ്പിക്കുന്നു. സോഴ്സ്‌ കോഡില്‍
വിവരണങ്ങള്‍ ഉള്‍പ്പെടുത്താന്‍ 111111.-ല്‍ കമന്റ്‌ ടാഗ്കളുണ്ട്‌. വിവരണങ്ങള്‍ (ബൌഈസര്‍
ജാലകത്തില്‍ കാണിക്കുകയില്ല. 111101. വിവരണങ്ങള്‍ <!-- , എന്നീ ടാഗു
കള്‍ക്ക്‌ ഇടയ്ക്കാണ്‌ നല്‍കാറുള്ളത്‌. അപ്രകാരം നല്‍കുന്ന ഏത്‌ ഉള്ളടക്കവും കമന്റായി
കണക്കാക്കുകയും (ബ്രൌസര്‍ അത്‌ പൂര്‍ണമായും അവഗണിക്കുകയും ചെയ്യുന്നു. ജിനി
എഡിറ്ററില്‍ കമന്റുകള്‍ ചുവപ്പ്‌ നിറത്തിലാണ്‌ പ്രദര്‍ശിപ്പിക്കാറുള്ളത്‌. ഉദാഹരണം 4.15-ലെ
കോഡ്‌ കമന്റുകളുടെ ഉപയോഗത്തെക്കുറിച്ച്‌ വിശദീകരിക്കുകയും ചിത്രം 4.31-ലെ വെബ്‌
പേജ്‌ അങ്ങനെ ലഭിക്കുന്ന സന്ദേശം കാണിക്കുകയും ചെയ്യുന്നു.

യാഗം വിശദികരിക്കുന്നതിന്‌ വേണ്ടിയുള്ളത്‌

<HTML>

<HEAD> <!-- Document Header Starts -->
<TITLE> Comment Tags </TITLE>

</HEAD>

<BODY Bgcolor= "#D8D8D8">

<!-- This is a comment -->

<p>The paragraph starts here. Comment statements are

not displayed in the browser window</p>

<!-- Comments are not displayed in the browser -->
</BODY>
</HTML> Comment Tags - Mozilla Firefox

File Edit View History Bookmarks Tools Help
(8) Comment Tags ap
The paragraph starts here. Comment statements are not

displayed in the browser window

athe@os 4.31: HTML aaa

നിങ്ങളുടെ പുരോഗതി അറിയുക
1. സാര്‍ത്ഥക ചിഹ്നങ്ങള്‍ എങ്ങനെയാണ്‌ 111171.-ല്‍ സൂചിപ്പിക്കുന്നത്‌?
2. ടാഗിനോട്‌ ഒപ്പമാണ്‌ Face ആട്രിബ്യൂട്ട്‌ ഉപയോഗിക്കു
ന്നത്‌.
3. <FONT> ടാഗിന്റെ ആദ്രിബ്യൂട്ടുകളുടെ നാമാവലി തയാറാക്കുക.
4. <PRE> ടാഗിന്റെ ഉപയോഗമെന്താണ്‌?

. ഒരു ടെക്സ്റ്റ്‌ സ്ക്രോള്‍ ചെയ്യാനായി SOD ഉപയോഗിക്കു
ന്നു.

. <MARQUEE> ടാഗിന്റെ പ്രധാനപ്പെട്ട ആദ്രിബ്യൂട്ടുകള്‍ ഏതെല്ലാമാണ്‌?
. <ADDRESS> ടാഗിന്റെ ഉപയോഗമെന്താണ്‌?

. <FONT> ടാഗിലെ അക്ഷരങ്ങളുടെ തനത്‌ വലുപ്പം എത്രയായിരിക്കും?

. <DIV>SoOMlaG പ്രധാനപ്പെട്ട ആഭ്രിബ്യൂട്ടുകളുടെ പേരെഴുതുക.

4.13 ചിത്രങ്ങള്‍ ഉള്‍ക്കൊള്ളിക്കുന്നു (Inserting images)

ഉള്ളടക്ക വിവരണം കൂടുതല്‍ ആകര്‍ഷകവും വിനിമയാത്മകവും ആക്കുന്നത്‌ ചിത്ര
ങ്ങളാണ്‌. ഇക്കാലത്ത്‌ വെബ്സൈറ്റുകള്‍ അധികവും ചിര്രങ്ങളാല്‍ സമ്പന്നമാണ്‌. വെബ്‌
വികസിപ്പിക്കുന്നതിന്‌ വേണ്ട ധാരാളം സവിശേഷതകളുള്ള പുതിയ HTML പതിപ്പുക
ളില്‍ പോലും ചിത്രങ്ങള്‍ ഉള്‍പ്പെടുത്തുന്നതിനുള്ള കോഡ്‌ വളരെ ലളിതമാണ്‌. 111101.
പേജുകളില്‍ ചിത്രങ്ങള്‍ ഉള്‍ക്കൊള്ളിക്കുന്നതിന്‌ <IMG> ടാഗ്‌ ഉപയോഗിക്കുന്നു. വളരെ
ലളിതമായി ഈ ടാഗ്‌ ഉപയോഗിക്കുന്ന വിധം താഴെ കൊടുത്തിരിക്കുന്നു.

4. വെബ്‌ സാങ്കേതികവിദ്യ

<IMG Sre = "picturel.jpg">

<IMG> ടാഗ്‌ ഒരു എംപ്റ്റി ടാഗാണ്‌. മാത്രമല്ല, അതിന്‌ ധാരാളം ആട്രിബ്യൂട്ടുകളും ഉണ്ട്‌.
പേജില്‍ ഉള്‍ക്കൊള്ളിക്കേണ്ട ചിത്രത്തിന്റെ ഫയല്‍നാമം സൂചിപ്പിക്കുന്ന ൭൧൦ ആഅട്രിബ്യൂ
ട്ടാണ്‌ ഏറ്റവും പ്രധാനപ്പെട്ടത്‌. നമ്മുടെ ആവശ്യത്തിന്‌ അനുസരിച്ച്‌ JPEG, PNG, GIF
എന്നീ ചിത്രഫയലുകള്‍ ഉപയോഗിക്കാനാകുമെങ്കിലും, ശരിയായ ഫയല്‍ നാമവും
അതോടൊപ്പമുള്ള എക്സ്റ്റന്‍ഷനും 5/൦ ആട്രിബ്യൂട്ട്‌ ഉപയോഗിച്ച്‌ സൂചിപ്പിച്ചിട്ടുണ്ടെന്ന്‌
ഉറപ്പ്‌ വരുത്തണം. ചി്തഫയല്‍ ഇപ്പോള്‍ ഉപയോഗത്തിലുള്ള ഫോള്‍ഡറില്‍ ഇല്ലെങ്കില്‍,
അത്‌ എവിടെയാണോ ലഭ്യമാകുന്നത്‌ അവിടേക്കുള്ള വഴി (പാത്ത്‌)/1.1ധ. നാം സൂചി
പ്പിക്കണം.

ചിത്രത്തിന്‌ വേണ്ടി സ്ഥലം ഒരുക്കുന്നു (Setting space for the image)

Width, Height എന്നീ ആട്രിബ്യൂട്ടുകള്‍ക്ക്‌ വിലകള്‍ നല്‍കിക്കൊണ്ട്‌ വെബ്‌ പേജില്‍
ചിത്രത്തിനുവേണ്ടിയുള്ള ഇടം നമുക്ക്‌ ഒരുക്കാം. പിക്സലിന്റെ എണ്ണമായോ അല്ലെങ്കില്‍
യഥാര്‍ഥ വലുപ്പത്തിന്റെ ശതമാനമായോ വിലകള്‍ നല്‍കാവുന്നതാണ്‌. ഈ ആട്രിബ്യയൂട്ടു
കള്‍ ഉപയോഗിച്ചിട്ടില്ലെങ്കില്‍ ചിത്രത്തിന്റെ യഥാര്‍ഥ വലുപ്പത്തില്‍ UNITAS അത്‌ പ്രദര്‍ശി
പ്പിക്കും.

ചിത്രങ്ങള്‍ക്ക്‌ ഇടയ്ക്കുള്ള ശൂന്യസ്ഥലങ്ങള്‍ എങ്ങനെ ക്രമപ്പെടുത്താമെന്ന്‌ നമുക്ക്‌ ചര്‍ച്ച
ചെയ്യാം. ഒരു ജാലകത്തില്‍ ചിത്രങ്ങള്‍ സ്ഥാപിക്കുമ്പോള്‍ രണ്ട്‌ രീതിയിലാണ്‌ ശൂന്യ
സ്ഥലങ്ങള്‍ അവയ്ക്കിടയില്‍ വരാറുള്ളത്‌-തിരശ്ചീനമായും, ലംബമായും. വെബ്‌ പേ
ജില്‍ തിരശ്ചീനമായും ലംബമായും ചിത്രങ്ങള്‍ക്കിടയ്ക്ക്‌ സ്ഥലം നല്‍കുന്നതിന്‌
HTML-@8 ലഭ്യമാകുന്ന രണ്ട്‌ ആട്രിബ്യൂട്ടുകളാണ്‌ Hspace, Vspace എന്നിവ.

രണ്ട്‌ രീതിയില്‍ ചിയ്രങ്ങള്‍ക്ക്‌ ഇടയ്ക്ക്‌ ശുന്യസ്ഥലം നല്‍കുന്നത്‌ ഉദാഹരണം 4.16-ല്‍
തന്നിട്ടുള്ള HTML കോഡ്‌ വിശദീകരിക്കുന്നു. അനുബന്ധ വെബ്‌ പേജ്‌ ചിത്രം 4.31-ല്‍
കാണിച്ചിരിക്കുന്നു.

പലതരത്തിലുള്ള ശുന്ൃസ്ഥലം നല്‍കുന്ന

ത്ത
<HTML>
<HEAD>
<TITLE> Inserting Images </TITLE>
</HEAD>

<BODY Bgcolor="#EOFFFE">
<H2 Align="center">Inserting vertical and horizontal
spacing between images</H2>

Here the images are placed with <B><I><U> Vspace and
Hspace </U></I></B> attributes <BR>
<IMG Src= "book3.jpg" Height= "50" Width= "70"

Vspace= "10" Hspace= "10">

<IMG Src= "book3.jpg" Height= "50" Width= "70"
Vspace= "10" Hspace= "10"> <BR>

<IMG Src= "book3.jpg" Height= "50" Width= "70"
Vspace= "10" Hspace= "10">

<IMG Src= "book3.jpg" Height= "50" Width= "70"
Vspace= "10" Hspace= "10"> <BR>

</BODY>
</HTML>

നിര്‍ദിഷ്ട വീതിയിലും ഉയരത്തി
ലുമാണ്‌ ചിത്രങ്ങള്‍ വിന്യസിച്ചി
ട്ടുള്ളതെന്നും തിരശ്ചീനമായും
ലംബമായും നല്‍കിയ ശൂന്യ
സ്ഥലം സൂചിപ്പിച്ചിട്ടുള്ളത്‌
പോലെയാണ്‌ ചിത്രങ്ങള്‍ക്കിടയി
ലെ അകമമെന്നും ചിത്രം 4.32-08
കാണാന്‍ സാധിക്കും.

വാക്യങ്ങള്‍ ആരംഭിക്കുന്ന വരി
അടിസ്ഥാനമാക്കി ചിത്രങ്ങള്‍
വിന്യസിക്കുന്നതിന്‌ ഉപയോഗി
ക്കുന്ന <IMG> ടാഗിന്റെ Align

Inserting Images - Mozilla Firefox

File Edit View History Bookmarks Tools Help

6 Inserting Images ca

Inserting vertical and horizontal spacing
between images

Here the images are placed with Vspace and Hspace attributes

Ss
Ss

alkmos 4.32: നിര്ദേശിച്ച വലുച്ഛങ്ങളിലുക്ളതും, ഇടയ്ക്ക്‌ തിര
ശ്രിനവും ലാങ്ചവുമായ! ശുന്യസ്ഥലങ്ങശി 909908312 f19)
BBO ച്തങ്ങശ്‌

ആട്രിബ്യയൂട്ടിനെക്കുറിച്ച്‌ നമുക്ക്‌ ചര്‍ച്ച ചെയ്യാം. ഈ ആടദ്രിബ്യയൂട്ടിന്‌ നൽകാനാകുന്ന വില

കള്‍ താഴെകൊടുത്തിരിക്കുന്നു.

Bottom : ചിത്രത്തിന്റെ കീഴ്ഭാഗം വാക്യങ്ങള്‍ ആരംഭിക്കുന്ന വരിയുമായി വിന്യസിക്കു

ന്നു.

Middle : ചിത്രത്തിന്റെ മധ്യഭാഗം (ലംബമായി) വാക്യങ്ങള്‍ ആരംഭിക്കുന്ന വരിയുമായി

വിന്യസിക്കുന്നു.

Top : വാക്യങ്ങളുടെ മുകള്‍ഭാഗവുമായി silo വിനൃസിക്കുന്നു.

Align ആഭ്രിബ്യയൂട്ടിന്‌ വിലകള്‍ നല്‍കുമ്പോള്‍ ഉണ്ടാകുന്ന പ്രതീതി നമുക്ക്‌ കാണാം. ഉദാ
ഹരണം 4.17, ചിത്രം 4.33 എന്നിവ ഇത്‌ വിശദീകരിക്കുന്നു.

<HTML>
<HEAD>

<TITLE> Alignment of Images </TITLE>
</HEAD>

വ്യത്യസ്ത വിന്യാസങ്ങള്‍ നല്‍കുന്നതിന്‌

4. വെബ്‌ സാങ്കേതികവിദ്യ

<BODY Bgcolor= "#EOFFFE">
<H2 Align= "“center">Alignment of Images</H2>
This Image is <I><U>aligned at the bottom </U></I>
<IMG Srce= "book3.jpg" Height= "40" Width= "50"
Align= "Bottom"> <BR> <BR>
This Image is <I><U>aligned at the Middle </U></I>
<IMG Srce= "book3.jpg" Height= "40" Width= "50"
Align= "Middle"> <BR> <BR>
This Image is <I><U>aligned at the Top </U></I>
<IMG Src= "book3.jpg" Height= "40" Width= "50" Align="Top">
</BODY>
</HTML>

Alignment of Images - Mozilla Firefox

<IMG> ടരാഗിന്റെ Align ആട്രിബ്യയൂ File Edit View History Bookmarks Tools Help
vy പ [6] Alignment of Images oP
ട്ടിന്‌ മറ്റ്‌ ചില വിലകള്‍ കൂടിയുണ്ട്‌. .

അവ ചിത്രത്തെ ബ്രൌസര്‍ ജാലക [നി നി

ത്തിന്റെ ഇടത്‌ ഭാഗത്തേക്കും വല
തുഭാഗത്തേക്കും യഥാക്രമം വിനയ

സിക്കുന്ന left, right ച എന്നിവയാണ്‌. This Image is aligned at the Middle Ss

This Image is aligned at the Top Ss

This Image is aligned at the bottom Ss

‘Alignment of Images - Mozilla Firefox ചിത്രം 4.33 2 വാക്യവ്ുമായുള്ള
File Edit View History Bookmarks Tools Help ahmonlad ofloflw ഫപൊരുത്മാപ്പെടലുകശി
B

തി Alignment of Images ഛം
Alignment of Images

hi
Ss This Image is aligned left ചിത്രം 4.34: ~nimavée allbcavowas so

AULID}DIOI വിന്്യന്ധിക്കാപ്പെടെ 2 Nosed

This Image is aligned right

രരൌഈസര്‍ ജാലകത്തില്‍ ചിത്രത്തിന്റെ ഇടത്തോട്ടും വലത്തോട്ടുമുള്ള
വിന്യാസം ചിത്രം 4.34 -ല്‍ കാണിച്ചിട്ടുളളത്‌ നിരീക്ഷിക്കുക. ഈ
നമുക്കു ചെയ്യാം പേജിന്‌ വേണ്ട 11111. ലിഖിതം തയാറാക്കുക.

ഒരു ചിത്രത്തിന്‌ ബോര്‍ഡര്‍ നല്‍കുന്നു (Setting border around an image)

ഒരു വെബ്‌ പേജില്‍ ഉള്‍പ്പെടുത്തിയിട്ടുള്ള ചിത്രത്തിന്‌ നമുക്ക്‌ ബോര്‍ഡര്‍ നല്‍കണ
മെന്ന്‌ വിചാരിക്കുക. <IMG> ടാഗിന്റെ Border ആട്രിബ്യൂട്ട്‌ ഉപയോഗിച്ച്‌ ഇത്‌ സാധ്യമാ
ക്കാം. ഈ ആടഭ്രിബ്യൂട്ടിന്‌ അനുയോജ്യമായ വില നല്‍കികൊണ്ട്‌ ബോര്‍ഡറിന്‌ കനം

നല്‍കാം. ഉദാഹരണം 4.18-ലെ 111141. കോഡും ചിത്രം 4.35-ലെ അനുബന്ധ വെബ്‌
പേജും Border ആഭ്രിബ്യൂട്ടിന്റെ ഉപയോഗം നമുക്ക്‌ കാണിച്ചു തരുന്നു.

8 നല്‍കുന്നതിന്‌ വേണ്ടിയുള്ളത്‌

<HTML>

<HEAD>
<TITLE> Inserting Images </TITLE>

</HEAD>

<BODY Bgcolor= "#EOPFEE">
<H2 Align= "center">Inserting Border to Images</H2>
Here is an image <B><I><U> with Border </U></I></B>
attribute
<IMG Src= "book3.jpg" Height= "50" Width= "70" Border="5">
<BR>Here is an image<B><I><U> without Border</U></I></B>

attribute
<IMG Src= "book3.jpg" Height= "50" Width= "70">
</BODY>
</HTML> Inserting Images - Mozilla Firefox
File Edit View History Bookmarks Tools Help
<IMG> ടാഗിന്റെ വി | inserting Images oF
വിധ ആട്രിബ്യയൂട്ടുക Inserting Border to Images

ളെക്കുറിച്ചും അവ ail
ത്തിലൂണ്ടാക്കുന്ന വൃതി
യാനങ്ങളെക്കുറിച്ചും
നാം പഠിച്ച്‌ കഴിഞ്ഞു.
൭൧൦ ആട്രിബ്യൂട്ടില്‍ നിര്‍
ദ്ദേശിച്ച ചിര്രഫയല്‍
കണ്ടെത്താനായില്ലെങ്കില്‍ വെബ്‌ പേജ്‌ കാഴ്ചയില്‍ എങ്ങനെയുണ്ടാകും? വെബ്‌ പേജില്‍
ചിത്രത്തിനായി നിര്‍ദ്ദേശിച്ച സ്ഥലം ശൂന്യമായിരിക്കും. മറ്റ്‌ ചില കാരണങ്ങളാലും ്രൌസ
റിന്‌ ചിത്രം പ്രദര്‍ശിപ്പിക്കാനാകാതെ വരാറുണ്ട്‌. അത്തരം സന്ദര്‍ഭങ്ങളില്‍, ചിര്രത്തിനു
പകരം ഒരു വാക്യം ര്രൌസറില്‍ നമുക്ക്‌ ദൃശ്യമാക്കാനാകും. ്രൌസറിന്‌ ചിത്രം പ്രദര്‍ശി
പ്പിക്കാനാകാതെ വന്നാല്‍ പകരം ഒരു വാക്യം സൂചിപ്പിക്കാന്‍ HTML നല്‍കുന്ന ആഭ്രി
ബ്യൂട്ടാണ്‌ Alt. ഉദാഹരണം 4.19-ലെ കോഡ്‌ Alt ആഭ്രിബ്യയൂട്ടിന്റെ ഉപയോഗം വിശദീ
കരിക്കുന്നു. അങ്ങനെ ലഭിക്കുന്ന വെബ്‌ പേജ്‌ ചിത്രം 4.36-ല്‍ കാണിച്ചിരിക്കുന്നു.

48 4. Web Technology Here is an image with Border attribute

Here is an image_without Border attribute S

alo 4.35 - CNIIGAL}AG DBBO}o ഇല്ലാത്മതുമായ ചിതങ്ങശി

Alt ആഭ്രിബ്യയൂട്ടിന്റെ ഉപയോഗം വിശദീക
ണ്ടിയുള്ളത്‌

<HTML>
<HEAD> <TITLE> Inserting Images </TITLE> </HEAD >
<BODY Bgcolor= "#EOFFFE">

<H2 Align= "center">Inserting Images</H2>

If the browser cannot display the image, then the text
entered in the <B>Al1t</B> attribute will be displayed.<BR>

4. വെബ്‌ സാങ്കേതികവിദ്യ

<IMG Src= "book5.jpg" Height= "20%" Width= "20%"

Alt= "Image of an opened book"> <BR>
</BODY> Inserting Images - Mozilla Firefox

File Edit View History Bookmarks Tools Help

</HTML>

ഭരി inserting images + ക
Inserting Images
If the browser cannot display the image, then the text
entered in the Alt attribute will be displayed.
Image
ofan

opened
book

ചിതം 4.36: <IMG> sowloer Alt ആമകിബ്ലയുടിന്റെ ഉപയോഗം

നിങ്ങളുടെ പുരോഗതി അറിയുക

1. ഒരു HTML ലിഖിതത്തില്‍ ചിത്രങ്ങള്‍ ഉള്‍ക്കൊള്ളിക്കുന്നതിനായി
SOD ഉപയോഗിക്കുന്നു.

2. <IMG> ടാഗിന്റെ പ്രധാനപ്പെട്ട ആദ്രിബ്യൂട്ടാണ്‌
3. <IMG> ടാഗില്‍ Alt ആട്രിബ്യയൂട്ടിന്റെ ഉപയോഗമെന്ത്‌?

4. ഒരു ചിത്രം ഒരു പ്രത്യേക വലുപ്പത്തില്‍ പ്രദര്‍ശിപ്പിക്കുന്നതിന്‌ ഉപ
യോഗിക്കുന്ന ആട്രിബ്യയൂട്ടുകളുടെ പേരെഴുതുക.

5. രണ്ട്‌ ചിത്രങ്ങള്‍ക്കിടയില്‍ തിരശ്ചീനവും ലംബവുമായ സ്ഥലങ്ങള്‍
ലഭ്യമാക്കുന്ന ആട്രിബ്യൂട്ടുകള്‍ ഏതൊക്കെയാണ്‌?

ക നമുക്കു സംഗ്രഹിക്കാം

ഇന്റര്‍നെറ്റിന്റെ സഫലത നിര്‍ണയിക്കുന്ന ഘടകമാണ്‌ സുരക്ഷിതമായ ആശയവിനിമ
യം. ഇന്റര്‍നെറ്റിലൂടെയുള്ള വ്യവഹാരങ്ങളുടെ സുരക്ഷിതത്വം നിര്‍വഹിക്കുന്നത്‌ HTTPS,
ഡിജിറ്റല്‍ സാക്ഷ്യപ്രതങ്ങള്‍ എന്നിവ ഉപയോഗിച്ചാണ്‌. ഡാറ്റ സംഭരിക്കുന്നതിനും കൈ
മാറ്റം (വിനിമയം) നടത്തുന്നതിനുമായി ഉപയോഗിക്കുന്ന വെബ്‌ സെര്‍വര്‍, സോഫ്റ്റ്വെയര്‍
പോര്‍ട്ടുകള്‍, 12145 സെര്‍വറുകള്‍ തുടങ്ങിയ അടിസ്ഥാന സൌകര്യങ്ങള്‍ ഇന്റര്‍നെറ്റിന്‌
ആവശ്യമാണ്‌. ഒന്നോ അതിലധികമോ വെബ്‌ പേജുകള്‍ ചേര്‍ന്നാണ്‌ വെബ്സ്റ്റ്റ്‌ ഉണ്ടാ
യിരിക്കുന്നത്‌. HTML കോഡ്‌ എഴുതിയോ അല്ലെങ്കില്‍ വെബ്‌ രൂപകല്‍പന ചെയ്യാനു
പയോഗിക്കുന്ന സോഫ്റ്റ്വെയറുകളുടെ സഹായത്താലോ നമുക്ക്‌ വെബ്‌ പേജുകള്‍
നിര്‍മിക്കാം. വെബ്‌ പേജുകള്‍ പരിവര്‍ത്തനാത്മകമെന്നും സ്ഥിരമായതെന്നും തരംതിരി
ച്ചിട്ടുണ്ട്‌. സ്ക്രിപ്റ്റുകള്‍ ഉപയോഗിച്ചുകൊണ്ട്‌ പരിവര്‍ത്തനാത്മക പേജുകള്‍ വികസി
പ്പിക്കാം. ക്ലയന്റ്‌ ഭാഗത്തെ സ്ക്രിപ്റ്റിങ്‌ ഭാഷകളായ ജാവ സ്ക്രിപ്റ്റ്‌, VB സ്ക്രിപ്റ്റ്‌ തുട
ങ്ങിയവ ഉപയോഗിച്ച്‌ ക്ലയന്റ്‌ ഭാഗത്ത്‌ ഡാറ്റയുടെ സാധുത ഉറപ്പിക്കാനാവും. പരിവര്‍ത്ത
നാത്മക വെബ്‌ പേജുകള്‍ സെര്‍വറില്‍ നിര്‍മിക്കുന്നതിനായി സെര്‍വര്‍ ഭാഗത്തെ സ്ക്രിപ്റ്റു

കളായ PHP, ASP തുടങ്ങിയവ ഉപയോഗിക്കുന്നു. വെബ്‌ സൈറ്റിന്‌ ആകമാനം ഏകീകൃ
ത ശൈലി ലഭ്യമാക്കാന്‍ കാസ്‌കേഡിങ്‌ സ്റ്റെല്‍ ഷീറ്റ്‌ (CSS) ഉപയോഗിക്കുന്നു. 111101.
ഭാഷയെയും വെബ്‌ പേജ്‌ രൂപപ്പെടുത്തലിനെയും കുറിച്ചുള്ള അടിസ്ഥാന ആശയങ്ങള്‍
നാം ചര്‍ച്ച ചെയ്തു. വൃത്യസ്തങ്ങളായ ടാഗുകളെയും അവയുടെ പ്രധാനപ്പെട്ട ആടഭ്രി
ബ്യൂട്ടുകളേയും നാം പരിചയപ്പെട്ടു. ചില ടാഗുകള്‍ ജോഡികളായും മറ്റ്‌ ചിലത്‌ ജോഡി
കളല്ലാതെയും ഉപയോഗിക്കുന്നു. വിവിധ ടാഗുകള്‍ കൊണ്ട്‌ വാക്യങ്ങള്‍ ഭംഗിയായി
വിന്യസിച്ച്‌ നമുക്കൊരു വെബ്‌ പേജ്‌ നിര്‍മിക്കാം. മാര്‍ക്യൂകള്‍, ചിത്രങ്ങള്‍, ശബ്ദങ്ങള്‍,
ചലിക്കുന്ന ചിത്രങ്ങള്‍ എന്നിവ ഉള്‍പ്പെടുത്തി വെബ്‌ പേജുകളുടെ ഭംഗി വര്‍ധിപ്പിക്കാം.
ഈ അധ്യായത്തില്‍ ചര്‍ച്ച ചെയ്ത ആശയങ്ങളെക്കുറിച്ച്‌ വ്യക്തമായ ധാരണയും 111141.
ഡോക്യുമെന്റുകള്‍ നിര്‍മിക്കുന്നതിന്‌ വേണ്ട പ്രായോഗിക പരിചയവും നമുക്കു
ള്ളതുകൊണ്ട്‌ തുടര്‍ന്ന്‌ വരുന്ന അധ്യായങ്ങളിലെ ആശയങ്ങള്‍ എളുപ്പത്തില്‍ ഗ്രഹിക്കാ
വുന്നതാണ്‌. കൂടാതെ, മനോഹരമായ വെബ്‌ സൈറ്റുകളുടെ മാതൃകയുണ്ടാക്കുന്നതി
നും, വെബ്‌ ആപ്ലിക്കേഷനുകള്‍ സ്വയം നിര്‍മിക്കുന്നതിനും നാം പ്രാപ്തരാവുകയും

ചെയ്യും.

നമുക്കു പരിശീലിക്കാം

1. താഴെ കൊടുത്തിരിക്കുന്ന സവിശേഷതകളോടുകൂടിയ കേരളത്തിന്റെ ഒരു വെബ്‌
പേജ്‌ നിര്‍മിക്കുന്നതിന്‌ വേണ്ട 111171. കോഡ്‌ എഴുതുക.

ഭ വാക്യങ്ങള്‍ക്ക്‌ രൂപഘടന നല്‍കുന്ന ടാഗുകളും ആട്രിബ്യൂട്ടുകളും ഉപയോഗിച്ച്‌
ഒരു തലക്കെട്ടും അഞ്ച്‌ വാചകങ്ങളുള്ള ഒരു ഖണ്ഡികയും തയാറാക്കുക.

€ വെബ്‌ പേജിന്റെ പശ്ചാത്തല ചിത്രമായി ഒരു പ്രകൃതി ദൃശ്യം വേണം.

2. ചുവടെ കൊടുത്തിരിക്കുന്ന വിശദാംശങ്ങളും സവിശേഷതകളുമുള്ള നിങ്ങളുടെ
സ്‌കൂള്‍ വെബ്‌ പേജിന്‌ ആവശ്യമായ HTML കോഡെഴുതുക.
€ പേജിന്റെ പശ്ചാത്തലത്തിന്‌ ഒരു നിറം നല്‍കുക.
€ സ്കൂളിന്റെ ഒരു ചിത്രം നല്‍കുക.

3. ചുവടെ കൊടുത്തിരിക്കുന്ന വിശദാംശങ്ങളും സവിശേഷതകളുമുള്ള നിങ്ങളുടെ
സ്‌കൂള്‍ വെബ്‌ പേജിനാവശ്യമായ 11171. കോഡെഴുതുക.

€ വാക്യങ്ങള്‍ രൂപപ്പെടുത്തുന്ന ടാഗുകളും ആട്രിബ്യയൂട്ടുകളും ഉപയോഗിച്ചുകൊണ്ട്‌
ഓരോ ജില്ലയ്ക്കും ഒരു തലക്കെട്ടും തുടര്‍ന്ന്‌ മൂന്ന്‌ വാചകങ്ങളുള്ള ഒരു ഖണ്ഡി
കയും തയാറാക്കുക.

€ സ്കൂളിന്റെ തപാല്‍ മേല്‍വിലാസം ഉള്‍പ്പെടുത്തുക.

€ “പൂതിയ അധ്യയന വര്‍ഷത്തേക്കുള്ള പ്രവേശനം മെയ്‌ മാസം 10-90 തീയതി
ആരംഭിക്കുന്നു” എന്ന മാര്‍ക്യൂ ഉള്‍പ്പെടുത്തുക.

4. വെബ്‌ സാങ്കേതികവിദ്യ

4. ചുവടെ കൊടുത്തിരിക്കുന്ന സവിശേഷതകള്‍ ഉള്‍പ്പെടുത്തി നമ്മുടെ ദേശീയ ഗാന
ത്തിന്റെ വരികള്‍ പ്രദര്‍ശിപ്പിക്കുന്ന ഒരു വെബ്‌ പേജിന്‌ ആവശ്യമായ 111141. കോഡ്‌
എഴുതുക.

വൃത്യസ്ത സവിശേഷതകള്‍ ഉള്ള ഫോണ്ട്‌ ഉപയോഗിച്ച്‌ ഒരു തലക്കെട്ട്‌
നിര്‍മിക്കണം.

നമ്മുടെ ദേശിയ പതാകയുടെ ഒരു allo ഉള്‍പ്പെടുത്തണം.

നമു വിലയിരുന്നാപി

1. തന്റിര്‍നെറ്റിലൂടെയുള്ള ഡാറ്റയുടെ സഞ്ചാരത്തില്‍ റുട്ടറുകളുടെ പജ്‌: എന്ത്‌?

2. സമുഹ മാധ്യമ വെബ്‌ സൈറ്റുകള്‍ ആശയവിനിമയത്തിന്‌ അവരുടെ സ്വന്തം പ്രോട്ടോ
കോളാണ്‌ വികസിപ്പിച്ചിരിക്കുന്നത്‌. ഇന്റര്‍നെറ്റില്‍ TCP/IP പ്രോട്ടോകോള്‍ ഉപയോ
ഗിക്കുന്നതു കൊണ്ട്‌ ഇതെങ്ങനെ സാധ്യമാക്കും?

3. ഇ-മെയില്‍ അക്കൌണ്ടിലേക്ക്‌ യൂസര്‍ നാമവും പാസ്വേഡും ഇന്റര്‍നെറ്റിലൂടെ സുര
ക്ഷിതമായാണ്‌ അയയ്ക്കേണ്ടത്‌.

a. സെര്‍വറിലേക്ക്‌ ഡാറ്റ അയക്കാന്‍ ഉപയോഗിക്കുന്ന സുരക്ഷിത സാങ്കേതികവിദ്യ
യുടെ പേരെഴുതുക.

12. സുരക്ഷിത ഡാറ്റാവിനിമയത്തിന്‌ ഈ സാങ്കേതികവിദ്യ എങ്ങനെ സഹായി
ക്കുന്നു?

4. ഓണ്‍-ലൈനിലൂടെയുള്ള വ്യവഹാരത്തില്‍ പേമെന്റ്‌ ഗേറ്റ്വേയുടെ ധര്‍മമെന്താണ്‌?

5. ABC എഞ്ചിനിയറിങ്‌ കോളേജിന്റെ കാമ്പസില്‍ ഏകദേശം 1000 കമ്പ്യൂട്ടറുകള്‍
ഇന്റര്‍നെറ്റുമായി ബന്ധിപ്പിച്ചിട്ടുണ്ട്‌. ഒരു പ്രാദേശിക സെര്‍വര്‍ ഈ സാകങ്കേതികവി
ദ്യാഭ്യാസ സ്ഥാപനത്തില്‍ ഉണ്ടാകുന്നതിന്റെ നേട്ടമെന്താണ്‌?

6. ഒരു വെബ്‌ സെര്‍വര്‍ ഓപ്പറേറ്റിങ്‌ സിസ്റ്റത്തിനും വെബ്‌ സെര്‍വര്‍ പാക്കേജിനും
ഉദാഹരണമെഴുതുക.

7. വെബ്‌ സെര്‍വറില്‍ സോഫ്റ്റ്വെയര്‍ പോര്‍ട്ടിന്റെ ഉപയോഗമെന്ത്‌?

8. HTTP -ക്ക്‌ ഉപയോഗിച്ചിട്ടുള്ള പോര്‍ട്ടാണ്‌

0. നിങ്ങള്‍ www prdkerala.org എന്ന വെബ്സ്റ്റ്‌ പരിശോധിക്കുകയാണെന്ന്‌ കരുതുക.
പട എങ്ങനെയാണ്‌ IP മേല്‍വിലാസം വേര്‍തിരിച്ചെടുക്കുന്നതെന്ന്‌ വിശദീകരിക്കുക.

10. സ്ക്രിപ്റ്റുകള്‍ എന്നാല്‍ എന്ത്‌? സ്ക്രിപ്റ്റ്‌ എഴുതാന്‍ ഉപയോഗിക്കുന്ന വിവിധ ഭാഷ
കള്‍ വിശദീകരിക്കുക.

11. നിങ്ങളുടെ സ്കൂള്‍ വെബ്‌ സൈറ്റിലെ ഹോം പേജും 11-0൦ ക്ലാസിലെ പരീക്ഷാഫ
ലങ്ങള്‍ കാണിക്കുന്ന വെബ്‌ പേജും പരിഗണിക്കുക.
A. ഈ രണ്ട്‌ പേജുകളും തമ്മില്‍ നിര്‍മാണത്തിലുള്ള വൃത്യാസങ്ങള്‍ താരതമ്യം

ചെയ്യുക.

10. ഈ വെബ്‌ പേജുകള്‍ വികസിപ്പിക്കുന്നതിന്‌ ഉപയോഗിക്കുന്ന സാങ്കേതികവിദ്യ
കളെക്കുറിച്ച്‌ എഴുതുക.

12.

13.
14.

15.

16.

17.
18.
19.

20.

a. ജാവ സ്ക്രിപ്റ്റ്‌ ഫയലിന്റെ ഫയല്‍ എക്സ്റ്റന്‍ഷന്‍ ആണ്‌.

b. ഒരു വെബ്‌ പേജില്‍ ജാവ സ്ക്രിപ്റ്റിന്റെ പ്രധാനപ്പെട്ട രണ്ട്‌ ഉപയോഗങ്ങളെഴു
തുക.

എന്താണ്‌ അജാക്സ്‌? അതിന്റെ ഉപയോഗമെന്ത്‌?

നിങ്ങളുടെ ക്ലാസിലെ കുട്ടികള്‍ക്ക്‌ ഓരോ പരീക്ഷയ്ക്കും ലഭിച്ച മാര്‍ക്ക്‌ പ്രദര്‍ശിപ്പിക്കു

ന്നതിനായി രവി ഒരു വെബ്‌ പേജ്‌ നിര്‍മിക്കാന്‍ ആഗ്രഹിക്കുന്നു.

A. അത്‌ നിര്‍വഹിക്കുന്നതിന്‌ ഒരു സാങ്കേതിക വിദ്യ നിര്‍ദേശിക്കുക.

1. നിങ്ങളുടെ നിര്‍ദേശം ന്യായീകരിക്കുക.

MYSQL-ae! ഡാറ്റബേസ്‌ ഉപയോഗിച്ചുകൊണ്ട്‌ 1110-യില്‍ മനോജ്‌ ഒരു വെബ്‌

സ്റ്റ്‌ വികസിപ്പിക്കാന്‍ ആലോചിക്കുന്നു. ലിനക്സ്‌ വെബ്‌ ഹോസ്റ്റിംഗ്‌ സംവിധാ

നമാണ്‌ അയാള്‍ ഉപയോഗിക്കുന്നത്‌ എങ്കില്‍, അതിന്റെ നിര്‍വ്വഹണത്തിന്‌ ആവശ്യ

മായവ എന്തെല്ലാമാണ്‌?

“മിക്കവാറും എല്ലാ വെബ്‌ സൈറ്റുകളും വികസിപ്പിക്കുമ്പോള്‍ CSS ഉപയോഗിക്കാ
റുണ്ട്‌. വെബ്‌ സൈറ്റുകളില്‍ CSS ഉപയോഗിക്കുന്നത്‌ കൊണ്ടുള്ള നേട്ടങ്ങള്‍ എന്തൊ
ക്കെയാണ്‌?

HTML വികസിപ്പിച്ചത്‌ ആരാണ്‌?

HTML -@8 പ്രധാനമായും രണ്ട്‌ ഭാഗങ്ങളാണുള്ളത്‌. അവയുടെ പേരുകള്‍ എഴുതുക.
നിങ്ങള്‍ വെബ്സൈറ്റുകള്‍ വിശകലനം ചെയ്യുകയാണെങ്കില്‍ ലിങ്കുകള്‍, സന്ദര്‍ശിച്ച

ലിങ്കുകള്‍, പശ്ചാത്തലം തുടങ്ങിയവയ്ക്ക്‌ വിവിധ നിറങ്ങള്‍ കാണാനാകും. 11112.-ല്‍
ഇത്‌ എങ്ങനെ ചെയ്യുന്നുവെന്ന്‌ ഉദാഹരണസഹിതം വിശദമാക്കുക.

111141.-ലെ ജോഡിയായ ടാഗുകളും ജോഡിയല്ലാത്ത ടാഗുകളും ഉദാഹരണസഹിതം
താരതമ്യം ചെയ്യുക.

. Alink ആഭ്രിബ്യൂട്ടിന്റെ തനതായ നിറം ഏതാണ്‌?

. Vlink ആദ്രിബ്യൂട്ടിന്റെ തനതായ നിറം ഏതാണ്‌?

താഴെ തന്നിട്ടുള്ള HTML വാക്കുകളെ തരംതിരിക്കുക.

BR, IMG, ALIGN, FONT, FACE

. Noshade ആട്രിബ്യൂട്ട്‌ ഉള്ള ടാഗിന്റെ പേരെഴുതുക.

ഒരു വെബ്‌ പേജില്‍ ചിര്തഫയലുകള്‍ ഉള്‍ക്കൊള്ളിക്കുന്നതിന്‌ ഉപയോഗിക്കുന്ന
<IMG> ടാഗിന്റെ പ്രധാനപ്പെട്ട ആദ്രിബ്യൂട്ട്‌ ഏത്‌?

. <IMG> ടാഗില്‍ 21 ആട്രിബ്യൂട്ടിന്റെ ആവശ്യകത പ്രസ്താവിക്കുക.

. <IMG> ടാഗ്‌ ഉപയോഗിക്കുമ്പോള്‍ ലഭിക്കുന്ന ഒരു ചിത്രത്തിന്റെ തനത്‌ വിന്യാസം
ആകുന്നു.
. <FONT> ടാഗിന്റെ പ്രധാനപ്പെട്ട ആദ്രിബ്യയൂട്ടുകളുടെ നാമാവലി തയാറാക്കുക.

പ്രനം ഫുരിത്തിമാകുനമ്സോടെ പറിതാവ്‌ ആര്‍മി
ക്കേ പഠനമേട്ട്്ങള്‍

വെബ്‌ പേജുകളിലെ വിദവങ്ങള്‍ ഫലപ്രദമായി
അവരരിരിക്കാന്‍ വിവിധ ഉനം ലിസ്റ്റുകള്‍ ഉപ
യോരിക്കുന്നു.

ഹൈര്‍ര്‍ ലിങ്കിന്റെ പ്രസക്തി തിരിച്ചറിഞ്ഞ്‌ വിവിധ
തരം ലിങ്കിങ്ങിനായി <A> ടാര്‍ ഉപയോഗിക്കുന്നു.
<EMBED> ടാന്‌ ഉപയോരിച്ച്‌ ഓഡിയോ, വിഡി
യോ എന്നിവ വെബ്‌ പേജില്‍ ഉള്‍കെടുത്തുന്നു.
വെബ്‌ പേജിനുള്ളില്‍ പത്ചാത്തലസംരീതവും
വീഡിയോയും ഉള്‍കെടുത്തുന്നു.

ടേബിള്‍ നിര്‍മിക്കാന്‍ ആവഭ്യമായ ടാരുകളു
ടെയും അവയുടെ ആഭ്രിബ്യൂട്ടുകളുടെയും പട്ടിക
തയാറാക്കി വിശദീകരിക്കുന്നു.

വിവിധ സവിശേഷതകളുള്ള 69ബിളിന്റെ രൂപ
കല്‍പനയ്ക്കായി <TABLE> 5903900! ബന്ധ
AAS ടാുകള്‍ ഉപയോരിക്കുന്നു.
വ്യത്യസ്തങ്ങളായ ടേബിര്‍ രൂപകല്‍പനക്കായി
വേണ്ട ടാനുകളും അവയുടെ ആഭ്രിബ്യൂട്ടുകളും
മനസിലാക്കുന്നു.

വെബ്‌ പേജിനുള്ളില്‍ ഫ്രെയിമുകളുടെ ആവര്യ
AO തിരിച്ചറിയുന്നു.

ഫ്രെയിം ഉപർയോരിച്ച്‌ ഒരേ ബ്രസ ജാലകത്തില്‍
തന്നെ ഒന്നിലധികം വെബ്‌ പേജുകള്‍ പ്രദര്‍ശി
ഷിക്കുന്നതിന്‌ വേണ ടാരുകള്‍ ഉപയോഗിക്കുന്നു.
വെബ്‌ പേജിനുള്ളില്‍ ഫോം എന്ന ആശയം തിരി
ച്ചറിയുന്നു.

ഒരു ഫോമിന്റെ വിവിധ ദാനങ്ങളും അവ നിര്‍മിക്കു
ന്നതിനാവര്യമായ ടാനുകളും അവയുടെ ആദരി
ബ്യൂട്ടുകളും പരിചയകെടുന്നു.

ടേബിളുകള്‍, ഫ്രെയിമുകള്‍, ഫോം എന്നിവ ഉപയോ
രിച്ച്‌ വെബ്‌ പേജുകള്‍ രൂപകല്‍പന ചെയ്യുന്നു.

111111, ഉപയോഗിച്ചുള്ള
വെബ്‌ രൂപകല്‍പന

11101. -ലെ അടിസ്ഥാന ടാഗുകള്‍ കഴിഞ്ഞ അധ്യാ
യത്തിലൂടെ നാം പഠിച്ചു. അത്തരം ടാഗുകളും അവ
യുടെ ആഭ്രിബ്യൂട്ടുകളും ഉപയോഗിച്ച്‌ ലളിതമായ
വെബ്‌ പേജുകള്‍ രൂപകല്‍പന ചെയ്യുന്നതും നാം
പഠിച്ചു. എന്നാല്‍ കൂടുതല്‍ സൌകര്യങ്ങളും അവശ്യ
സേവനങ്ങളും നല്‍കുന്ന മറ്റ്‌ ചില വെബ്‌ സ്റ്റ
കളും നമുക്ക്‌ പരിചിതമാണല്ലോ? വിവിധതരം ലിസ്റ്റു
കള്‍ അടങ്ങുന്ന വെബ്സ്റ്റുകളുണ്ട്‌. എങ്ങനെ
യാണ്‌ വിവരങ്ങള്‍ പട്ടികാരൂപത്തില്‍ രേഖപ്പെടുത്തു
ന്നത്‌? വെബ്‌ പേജുകളുടെ തമ്മിലുള്ള പരസ്പര
ബന്ധമാണ്‌ വേള്‍ഡ്‌ വൈഡ്‌ വെബിന്റെ നട്ടെല്ല്‌.
വിവിധതരം ലിങ്കിങ്ങിനെ (Linking) കുറിച്ച്‌ ഈ
അധ്യായത്തില്‍ നമ്മള്‍ ചര്‍ച്ച ചെയ്യുന്നുണ്ട്‌. ചില
വിവരങ്ങള്‍ പട്ടികാരുപത്തില്‍ കാണപ്പെടാറുണ്ട്‌.
ചില സമയത്ത്‌ ഒരേ ബ്രൌസര്‍ ജാലകത്തില്‍ ഒന്നി
ലധികം വെബ്പേജുകള്‍ നമ്മള്‍ കാണാറുണ്ട്‌. അതു
പോലെതന്നെ പരീക്ഷയുടെ മാര്‍ക്ക്‌ ലിസ്റ്റ്‌ ലഭിക്കു
വാനായി രജിസ്റ്റര്‍ നമ്പര്‍ നല്‍കുന്നതിനും സ്‌കൂള്‍,
കോളേജ്‌ പ്രവേശനം, സ്‌കോളര്‍ഷിപ്പ്‌ എന്നിവ
യ്ക്കുള്ള അപേക്ഷകള്‍ സമര്‍പ്പിക്കുന്നതിനും,
വൈദ്യുതി, വെള്ളം എന്നിവയ്ക്കുള്ള ബില്‍ അട
യ്ക്കുന്നതിനുമുള്ള വെബ്സൈറ്റുകള്‍ നമുക്ക്‌ പരി
ചിതങ്ങളാണ്‌. ഒരേ ്രൌസര്‍ ജാലകത്തില്‍ ഒന്നില
ധികം വെബ്‌ പേജുകള്‍ ഉള്‍ക്കൊള്ളിക്കാനാകുമോ?
ഉള്‍ക്കൊള്ളിക്കാന്‍ ആകുമെങ്കില്‍ അത്‌ എങ്ങനെ?
ഉപയോക്താവില്‍ നിന്നും ഡാറ്റ സ്വീകരിച്ച്‌ കൂടുതല്‍
വിവരങ്ങള്‍ നല്‍കുന്ന വെബ്‌ പേജുകള്‍ ഉണ്ടാക്കു
ന്നതെങ്ങനെ? വെബ്‌ പേജ്‌ നിര്‍മാതാക്കള്‍ക്ക്‌ ഇത്ത
രത്തിലുള്ള എല്ലാ സൌകര്യങ്ങളും 111141.-ല്‍ ലഭ്യ
മാണ്‌. ഈ ചോദ്യങ്ങള്‍ക്കുള്ള ഉത്തരങ്ങള്‍ ഈ
അധ്യായത്തിലൂടെ ചര്‍ച്ച ചെയ്യുന്നു.
| 57511750ആ ൮ ൮ഏളഏള >) |
5.1 HTML-9e1 ലിസ്സുകള്‍ (Lists in HTML)

വിവരങ്ങള്‍ അവതരിപ്പിക്കുമ്പോള്‍ ലിസ്റ്റുകള്‍ ആശയവിനിമയ സാധ്യത വര്‍ധിപ്പിക്കു
ന്നു. വിവിധതരം ലിസ്റ്റുകളുണ്ട്‌. അക്കമിട്ട ലിസ്റ്റുകളും ബുള്ളറ്റിട്ട ലിസ്റ്റുകളും നമുക്ക്‌ പരി
ചിതമാണല്ലോ. ഇത്തരം ലിസ്റ്റുകള്‍ വെബ്പേജില്‍ ഉള്‍പ്പെടുത്താന്‍ HTML സൌകര്യം
ചെയ്യുന്നു. എല്ലാ ലിസ്റ്റുകളിലും ഒന്നോ അതിലധികമോ ഘടകങ്ങള്‍ ഉണ്ടായിരിക്കണം.
111141. -ലെ ലിസ്റ്റുകളെ ക്രമരഹിത ലിസ്റ്റ്‌, ക്രമലിസ്റ്റ്‌, ഡെഫനിഷന്‍ ലിസ്റ്റ്‌ എന്നിങ്ങനെ
മൂന്നായി തരംതിരിച്ചിരിക്കുന്നു.

5.1.1 ക്രമരഹിത ലിസ്റ്റുകള്‍ (Unordered lists)

ക്രമരഹിത ലിസ്റ്റ്‌ അഥവാ ബുള്ളറ്റഡ്‌ ലിസ്റ്റുകളില്‍ ഓരോ ഇനത്തിന്റെയും മുന്നില്‍ ഒരു
ബുള്ളറ്റോ അല്ലെങ്കില്‍ മറ്റേതെങ്കിലും ഗ്രാഫിക്‌ ചിഹ്നങ്ങളോ പ്രദര്‍ശിപ്പിക്കുന്നു. <UL>,
</UL> എന്നീ ടാഗ്‌ ജോഡികള്‍ ഉപയോഗിച്ച്‌ ക്രമരഹിത ലിസ്റ്റുകള്‍ നിര്‍മിക്കുവാന്‍
നമുക്ക്‌ സാധിക്കും. ലിസ്റ്റിലെ ഒരോ ഇനവും <LI>, </LI> ടാഗ്‌ ജോഡികള്‍ ഉപയോ
ഗിച്ച്‌ ചേര്‍ക്കപ്പെടുന്നു. ലിസ്റ്റിലെ ഇനങ്ങള്‍ യാതൊരു ക്രമവും ഇല്ലാതെ പ്രദര്‍ശിപ്പിക്കു
ന്നതിനാണ്‌ ക്രമരഹിത (Unordered) ലിസ്റ്റുകള്‍ ഉപയോഗിക്കുന്നത്‌.

ഉദാഹരണം 5.1-@8 ഒരു കമ്പ്യൂട്ടറിന്റെ ഏതാനും ഹാര്‍ഡ്വെയര്‍ ഭാഗങ്ങള്‍ ബുള്ളറ്റഡ്‌
ലിസ്റ്റായി പ്രദര്‍ശിപ്പിക്കുന്നതിനുള്ള HTML കോഡ്‌ നല്‍കുന്നു. ഇതിനനുസൃതമായ
വെബ്പേജ്‌ ചിത്രം 5.1 ല്‍ കാണിച്ചിരിക്കുന്നു.

<HTML>
<HEAD>
<TITLE> Unordered Lists </TITLE>
</HEAD>
<BODY Bgcolor= "#DEB887">
<CENTER> <H2> Unordered List </H2> </CENTER>
While buying a computer, we have to consider many items.
Here are some important items
to consider. Unordered Lists - Mozilla Firefox - OX
<UL> ile Edit View History Bookmarks
<LI> RAM </LI> ൭ Unordered Lists
<LI> Hard Disk </LI>
<LI> Mother Board </LI>
<LI> Processor </LI>
</UL>
</BODY>
</HTML>

alo 5.1: ശ്രമരഹിത eis
ഉപയോഗി AUTH പേജ്‌

S.HTML ഉപയോദിച്ചു കൊണ്ങുള്ള വെബ്‌ രൂപകല്‍ക്ന

<UL> ടാഗിലെ Type ആട്രിബ്യൂട്ടിന്‌ Disc (തന Mozilla Firefox = O X

തുവില), Square, Circle എന്നീ മൂന്ന്‌ വിലകള്‍ ടു —s

നല്‍കാവുന്നതാണ്‌. ഇങ്ങനെ ചെയ്യുമ്പോള്‍ ലിസ്റ്റി
ലെ ഓരോ ഇനത്തിന്റെയും മുന്നില്‍ അതിനനുസ്യ,
തമായ ബുള്ളറ്റ്‌ ചിത്രീകരിക്കുന്നു. താഴെ നല്‍കി
യിട്ടുള്ള HTML കോഡ്‌ ചിത്രം 5.2 ല്‍ കാണിച്ചിരി
ക്കുന്ന ലിസ്റ്റ്‌ അടങ്ങിയ വെബ്‌ പേജ്‌ പ്രദര്‍ശിപ്പി

ക്കുന്നു.
<UL Type= "Square">
<LI> RAM </LI>
<LI> Hard Disk </LI>
<LI> Mother Board </LI>
<LI> Processor </LI>
</UL>

atmo 5.2: ബുളൂമ്റ്റേഡ്‌ ക്രമരഹിത ഥിസ്ക്റ്‌

<UL> ടാഗിന്റെ Type ആഭ്രിബ്യൂട്ടിന്‌ None എന്ന വില നല്‍കുകയാണെ
ങ്കില്‍ ക്രമരഹിത ലിസ്റ്റിലെ ഓരോ ഇനത്തിന്റെയും മുമ്പില്‍ ബുള്ളറ്റുകളൊന്നും
പ്രദര്‍ശിപ്പിക്കുകയില്ല. മുകളില്‍ കൊടുത്തിരിക്കുന്ന HTML കോഡില്‍ <UL

Type = "None™> എന്ന മാറ്റം വരുത്തി പരിശോധിക്കാം.

5.1.2 ക്രമലിസ്റ്റ്‌ (Ordered lists)

ലിസ്റ്റിലെ ഇനങ്ങളുടെ മുന്നില്‍ സംഖ്യകളോ അക്ഷരങ്ങളോ ചേര്‍ത്ത്‌ ക്രമമായി പ്രദര്‍ശി
പ്പിക്കുന്നതിന്‌ ക്രമലിസ്റ്റ്‌ ഉപയോഗിക്കുന്നു. <OL>, </OL> എന്നീ ടാഗ്‌ ജോഡികള്‍ ഉപ
യോഗിച്ചാണ്‌ ഇത്തരം ലിസ്റ്റ്‌ തയാറാക്കുന്നത്‌. ക്രമലിസ്റ്റിലെ ഓരോ ഇനവും പ്രദര്‍ശിപ്പി
ക്കുന്നതിന്‌ <LI>, </LI> എന്നീ ടാഗ്‌ ജോഡികള്‍ ഉപയോഗിക്കുന്നു. ഇതിനെ സാഖ്യാ
നുസൃത ലിസ്റ്റ്‌ എന്നും പറയാറുണ്ട്‌.

ഉദാഹരണം 5.2 ല്‍ ക്രമലിസ്റ്റ്‌ നിര്‍മിക്കാനാവശ്യമായ കോഡ്‌ കൊടുത്തിരിക്കുന്നു.
ഇതിനനുസൃതമായ വെബ്പേജ്‌ ചിത്രം 5.3 ല്‍ പ്രദര്‍ശിപ്പിക്കുന്നു.

യ HTML കോഡ്‌

<HTML>
<HEAD>
<TITLE> Ordered Lists </TITLE>
</HEAD>
<BODY Bgcolor= "#DDAODD">
<H2 Align= "center"> Ordered List </H2>
Consider the memory devices of a computer.

Then according to the speed of data processing,

കമ്പ്യൂട്ടര്‍ സയന്‍സ്‌ - XII

we can arrange the memory devices as follows.
<OL>
<LI> Registers </LI>
<LI> Cache </LI>
<LI> RAM </LI>
<LI> Hard Disk </LI>

</OL> Ordered Lists - Mozilla Firefox

</BODY> i ist kmarks Tk
x Ordered Lists

</HTML> Ordered Lists

ചിത്രം 5.3 ല്‍ 1 മുതല്‍ 4 വരെയുള്ള ക്രമനമ്പര്‍
ഉള്‍ക്കൊള്ളുന്ന ലിസ്റ്റ്‌ ,പദര്‍ശിപ്പിക്കുന്നു. നമുക്ക്‌
മറ്റ്‌ പല സംഖ്യാരീതികളും ഉപയോഗിച്ച്‌ ലിസ്റ്റി
ലെ ഇനങ്ങള്‍ പ്രദർശിപ്പിക്കാം. Type ആഭ്രിബ്യയു
ട്ടിന്‌ ചുവടെ കൊടുത്തിരിക്കുന്ന വിലകള്‍ നല്‍കി
അനുയോജ്യമായ വിധത്തില്‍ ലിസ്റ്റിലെ ഇനങ്ങ
ളൂടെ സംഖ്യാരീതിയില്‍ നമുക്ക്‌ മാറ്റം വരുത്താം. 2 5.3: കമലിസ്ററ്‌ അടങ്ങിയ വെബ്‌ പ്‌

1 തനതായ സം്യാരീതി (1, 2, 3, ...)

൧. ഇംഗ്ലീഷ്‌ ഭാഷയിലെ വലിയ അക്ഷരങ്ങള്‍ (A, B, C, ...)
2 ഇംഗ്ലീഷ്‌ ഭാഷയിലെ ചെറിയ അക്ഷരങ്ങള്‍ (a, b, c, ...)
I

റോമന്‍ ലിപിയിലെ വലിയ സംഖ്യകള്‍ (I, IT, 111, ...)

_

റോമന്‍ ലിപിയിലെ ചെറിയ സംഖ്യകള്‍ (1, 11, iti, ...)

ഒരു ക്രമലിസ്റ്റിലെ ഇനങ്ങളുടെ ക്രമനമ്പറിന്റെ തുടക്കം സ്വാഭാവികമായും ആ സംഖ്യാ
രീതിയിലെ ആദ്യ നമ്പറിലായിരിക്കും. അതായത്‌ ക്രമനമ്പര്‍ തുടങ്ങുന്നത്‌ 1, A, ഒ, 1. 1
എന്നിവയില്‍ ഏതെങ്കിലും ഒന്നിലായിരിക്കും. ഇത്‌ നമ്മുടെ ഇഷ്ടാനുസരണം ഏത്‌
സംഖ്യയിലോ അക്ഷരത്തിലോ ആരംഭിക്കാം. ഇതിനായി സ്റ്റാര്‍ട്ട്‌ (Start) ആട്രിബ്യട്ട്‌
ഉപയോഗിക്കാം. ഒരു ക്രമലിസ്റ്റിന്റെ ഇനങ്ങളുടെ ക്രമനമ്പര്‍ 5 ല്‍ തുടങ്ങണമെങ്കില്‍
<OL Start= "5"> എന്നതിലൂടെ സാധ്യ
മാകും. അതിനാല്‍ 5 ല്‍ തുടങ്ങിയ ക്രമമ്പര്‍
6, 7, 8, ... എന്നിങ്ങനെ തുടരുന്നതാണ്‌.

Ordered Lists - Mozilla Firefox
File Edit View History Bookmarks Toolg

ഏത്‌ സംഖ്യാരീതി ഉപയോഗിക്കുമ്പോഴും
Start ആട്രിബ്യൂട്ടിന്‌ നല്‍കുന്ന വില
പൂര്‍ണസംഖ്യ ആയിരിക്കും. ഉദാഹരണ
ത്തിന്‌ താഴെ കൊടുത്തിരിക്കുന്ന ക്രമലി
Tock തുടക്കനമ്പര്‍ V ആണ്‌, പിന്നീട്‌ VI,
VII, VIL, ... എന്നിങ്ങനെ തുടരുന്നു. ഇതി
ന്റെ ഓട്ട്പൂുട്ട്‌ ചിത്രം 5.4-ല്‍ കാണിച്ചിരിക്കു
ന്നു.

aha 5.4: സംമധ്യാതിതിയും തുടക്കവിലയും
വ്യത്യസ്തമായ (HALIGY

5,140. ഉപയോദിച്ചു കൊണ്ങുള്ള വെബ്‌ രൂപകല്‍ഷ്ന

<BODY Bgcolor ="#DDAODD">
<H4 Align="center"™>Ordered List with Type attribute</H4>
<OL Type= "I" Start= "5">
<LI> Registers </LI>
<LI> Cache </LI>
<LI> RAM </LI>
<LI> Hard Disk </LI>
</OL>
</BODY>
EEE
ഒരു ക്രമലിസ്റ്റിലെ ഇനങ്ങളുടെ ക്രമനമ്പര്‍ അവരോഹണ ക്രമത്തില്‍
പ്രദർശിപ്പിക്കാം. ഇതിനായി <OL> ടാഗിന്റെ ആഭ്രിബ്യൂട്ടായ Reversed
ഉപയോഗിക്കാം. ഉദാഹരണം 5.2 ല്‍ നല്‍കിയിരിക്കുന്ന HTML കോഡില്‍
<OL Reversed> എന്ന മാറ്റം വരുത്തി നമുക്ക്‌ പരിശോധിക്കാം.
Reversed ഒരു ബൂളിയന്‍ ആട്രിബ്യൂട്ട്‌ ആയതിനാല്‍ ഇതിന്‌ വില നല്‍കേ
ണ്ടതില്ല.
ഒരു ക്രമലിസ്റ്റിലെ ഇനങ്ങളുടെ ക്രമനമ്പര്‍ നമുക്ക്‌ അനുയോജ്യമായ വില
നല്‍കി പ്രദര്‍ശിപ്പിക്കുവാന്‍ <LI> ടാഗിന്റെ ആട്രിബ്യൂട്ടായ Value ഉപ
യോഗിക്കാം. മുകളില്‍ കൊടുത്തിരിക്കുന്ന HTML കോഡില്‍ <LI Value
= "10"> RAM </LI> എന്നാണ്‌ നല്‍കുന്നതെങ്കില്‍, 10 RAM എന്നാ
യിരിക്കും വെബ്‌ പേജില്‍ പ്രദര്‍ശിപ്പിക്കുക. ഇതേ രീതിയില്‍ <OL> ടാഗി
നുള്ളിലെ ഓരോ <LI> ഇനങ്ങള്‍ക്കും Value ആട്രിബ്യൂട്ട്‌ ഉപയോ

ഗിച്ച്‌ ഓരോരോ വിലകള്‍ നല്‍കാം.
SS

5.1.3 ഡെഫനിഷന്‍ ലിസ്റ്റ്‌ (Definition lists)

കുറച്ച്‌ പദങ്ങളും അവയുടെ നിര്‍വചനങ്ങളും നല്‍കുന്നതിന്‌ ഡെഫനിഷന്‍ ലിസ്റ്റ്‌ ഉപ
യോഗിക്കുന്നു. തൊട്ടടുത്ത വരിയില്‍ പദങ്ങളില്‍ നിന്നും തിരശ്ചീനമായി നിശ്ചിത അകലം
കഴിഞ്ഞതിന്‌ ശേഷമാണ്‌ നിര്‍വചനങ്ങള്‍ പ്രദര്‍ശിപ്പിക്കുന്നത്‌. <DL>, </DL> എന്നീ
ടാഗ്‌ ജോഡികള്‍ ഉപയോഗിച്ച്‌ ഡെഫനിഷന്‍ ലിസ്റ്റ്‌ നിര്‍മിക്കുവാന്‍ നമുക്ക്‌ സാധിക്കും.
ഇവിടെ ബുള്ളറ്റുകളോ സംഖ്യകളോ ഇനങ്ങള്‍ക്ക്‌ മുന്‍പില്‍ പ്രദര്‍ശിപ്പിക്കാറില്ല. <DT>
ടാഗ്‌ പദങ്ങള്‍ നിര്‍മിക്കുന്നതിനും <DD> ടാഗ്‌ അതിന്റെ നിര്‍വചനങ്ങള്‍ ചേര്‍ക്കുന്ന
തിനും ഉപയോഗിക്കുന്നു.

ഇന്റര്‍നെറ്റ്‌ സുരക്ഷയുമായി ബന്ധപ്പെട്ട പദങ്ങളും അവയുടെ നിര്‍വചനങ്ങളും പ്രദര്‍ശി
പ്പിക്കുന്നതിനുള്ള വെബ്‌ പേജിന്റെ HTML കോഡ്‌ ഉദാഹരണം 5.3-ല്‍ നല്‍കിയിരിക്കു
ന്നു. ഇതിന്റെ ഓട്ട്‌ പുട്ട്‌ ചിര്രം 5.5-ല്‍ കാണാം.

ഉദാഹരണം 5.3: ഡെഫനിഷന്‍ ലിസ്റ്റ്‌ നിര്‍മാണം

<HTML>
<HEAD> <TITLE> Definition List </TITLE> </HEAD >
<BODY Bgcolor= "#FFE4C4" Leftmargin= "100" Rightmargin= "150">

കമ്പ്യൂട്ടര്‍ സയന്‍സ്‌ - XII

<H2 Align= "center"> Definition List </H2>

Today cyber security has an immense role in the
field of Internet. The following are some of
the threats that affect a computer network.
<DL>
<DT>Spam :</DT>

<DD> Spam is the unsolicited e-mail sent in the

hope of increasing the sales of some product, or
just for annoying people.</DD>

<DT>Phishing :</DT>

<DD> Phishing is an attempt to acquire information

such as usernames, passwords and credit card details
by posting as the original website, mostly that
of banks and other financial institutions. </DD>
</DL>
</BODY>
</HTML>

Definition List - Mozilla Firefox
File Edit View History Bookmarks Tools Help
ഭി Definition List a

Definition List

Today cyber security has an immense role in the field
of Internet. The following are some of the threats that
affect a computer network.

Spam :

Spam is the unsolicited e-mail sent in the hope of
increasing the sales of some product, or just for
annoying people.

Phishing :
Phishing is an attempt to acquire information
such as usernames, passwords and credit card
details by posting as the original website, mostly
that of banks and other financial institutions.

5

alo 5.3: AdvanMlaud ലിസ്റ്റ്‌ ഇഉശിക്കെള്ളുന്ന വെബ്ബ്‌ പേജ്‌

ചിത്രം 5.5-ലെ നിര്‍വചനങ്ങളുടെ ഇന്‍ഡന്റേഷനും, ഇടതും വലതും ഭാഗങ്ങളിലുള്ള
മാര്‍ജിനുകളും ശ്രദ്ധിക്കുക.

5.1.4 നെസ്റ്റഡ്‌ ലിസ്റ്റുകള്‍ (Nested lists)

ഒരു ലിസ്റ്റിലെ ഏതെങ്കിലും ഇനത്തിന്റെ താഴെ മറ്റൊരു ലിസ്റ്റ്‌ നല്‍കുവാനാകും. ഇത്തരം
ലിസ്റ്റുകളെ നെസ്റ്റഡ്‌ ലിസ്റ്റ്‌ എന്നറിയപ്പെടുന്നു. ഇത്‌ വിവിധ തരത്തില്‍ തയാറാക്കാം.

S.HTML ഉപയോദിച്ചു കൊണ്ങുള്ള വെബ്‌ രൂപകല്‍ക്ന

ഉദാഹരണമായി ഒരു ക്രമലിസ്റ്റിനുള്ളില്‍ മറ്റൊരു (കമലിസ്റ്റോ, ക്രമരഹിതലിസ്റ്റോ നല്‍കു
വാനാകും. അതുപോലെ ഒരു ക്രമരഹിത ലിസ്റ്റിനുള്ളില്‍ മറ്റൊരു ക്രമലിസ്റ്റോ ക്രമരഹി
തലിസ്റ്റോ നല്‍കാനുമാകും. ഉദാഹരണം 5.4 ല്‍ നല്‍കുന്ന HTML കോഡ്‌ നെസ്റ്റഡ്‌ ലിസ്റ്റിന്റെ

ആശയം വിശദമാക്കുന്നു.

<HTML>
<HEAD>

<TITLE> Nested Lists </TITLE>

</HEAD>
<BODY Bgcolor= "#EOFFFE">

<H2 Align= "center"> Nested List </H2>
Consider the devices of a computer.
We can list some of them as follows.

<OL>
<LI> Input Devices </LI>
<UL>
<LI>Keyboard</LI>
<LI>Mouse</LI>
<LI>Scanner</LI>
<LI>MICR</LI>

Output Devices </LI>

<UL Type= "Square">
<LI>Printers</LI>
<LI>Monitors</LI>

<LI>Speakers</LI>

</UL>
<LI> Memory Devices </LI>
<UL Type= "Circle">

<LI>Hard Disc</LI>
<LI>CD Rom</LI>
<LI>Flash Drive</LI>
</UL>
</OL>
</BODY>
</HTML>

Nested Lists - Mozilla Firefox
File Edit View History Bookmarks Tools Help
(6) Nested Lists + =

Nested List

Consider the devices of a computer. We can
list some of them as follows.

1. Input Devices
൦ Keyboard
© Mouse
o Scanner
o MICR
2. Output Devices
ഭ Printers
= Monitors
= Speakers
3. Memory Devices
o Hard Disc
ഠ CD Rom
o Flash Drive

ചിത്രം 5.6: രെന്നുഡ്‌ ലിസ്റ്റ്‌ ഇപയോഗിച്ച്‌
ഉപകരണങ്ങളുടെ തരംതിരിവ്‌
പ്രദര്ശിച്പിക്കുന്നു

ഉദാഹരണം 5.4 ല്‍ മൂന്ന്‌ ക്രമരഹിത ലിസ്റ്റുകള്‍ ഒരു ക്രമലിസ്റ്റിലേക്ക്‌ നെസ്റ്റ്‌ ചെയ്തിരി

ക്കുന്നു.

കമ്പ്യൂട്ടര്‍ സയന്‍സ്‌ - XII

നിങ്ങളുടെ പുരോഗതി അറിയുക
1. HTML ലെ വിവിധതരം ലിസ്റ്റുകള്‍ ഏതൊക്കെയാണ്‌?

2. നിങ്ങളുടെ ക്ലാസിലെ കുട്ടികളുടെ ലിസ്റ്റ്‌ തയാറാക്കുവാന്‍ അധ്യാപ
കന്‍ ആവശ്യപ്പെട്ടു എന്നു കരുതുക. ഏതുതരം ലിസ്റ്റായിരിക്കും
നിങ്ങള്‍ തിരഞ്ഞെടുക്കുന്നത്‌? എന്തുകൊണ്ട്‌?

3. <UL>, <OL> എന്നീ ടാഗുകളുടെ പൊതുവായ അആട്രിബ്യൂട്ടുകള്‍
എന്തൊക്കെയാണ്‌?

4. <UL>, <OL> എന്നീ ടാഗുകള്‍ തമ്മിലുള്ള വ്യത്യാസങ്ങള്‍ എഴുതുക.

5൭. ഡെഫനിഷന്‍ ലിസ്റ്റില്‍ ഉപയോഗിക്കുന്ന ടാഗുകളുടെ പേര്‍ എഴുതുക.

5.2 ലിങ്കുകളുടെ നിര്‍മാണം (Creating links)

ഒരു വെബ്‌ പേജിനെ മറ്റൊരു വെബ്‌ പേജുമായോ ഒരു വെബ്‌ പേജിന്റെ ഏതെങ്കിലും
ഭാഗത്തെ അതേ പേജിലെ മറ്റൊരു ഭാഗവുമായോ ബന്ധിപ്പിക്കുന്നതിന്‌ സഹായിക്കുന്ന
ഘടകമാണ്‌ ഹൈപ്പര്‍ലിജകു. ഹൈപ്പര്‍ലിങ്കിനെ സാധാരണയായി ലിങ്കുകള്‍ എന്നാണ്‌
വിളിക്കുന്നത്‌. HTML-@ <A> ടാഗിനും </A> ടാഗിനും ഇടയില്‍ എന്ത്‌ നല്‍കിയാലും
അത്‌ ലിങ്കിന്റെ ഭാഗമാകും. ഉപയോക്താവിന്‌ അവിടെ ക്ലിക്ക്‌ ചെയ്തുകൊണ്ട്‌ ലിങ്ക
ചെയ്തിരിക്കുന്ന ഡോക്യുമെന്റിലേക്ക്‌ എത്താനാകും. <A> ടാഗിന്റെ മുഖ്യ ആഭ്രിബ്യൂ
ട്ടാണ്‌ ഹൈപ്പര്‍ റഫറന്‍സ്‌ എന്ന്‌ അറിയപ്പെടുന്ന Href. ഇതിന്റെ വിലയായി സാധാരണ
URL apes നല്‍കുന്നത്‌ (ഹൈപ്പര്‍ലിങ്ക: ബന്ധിപ്പിക്കേണ്ട വെബ്‌ പേജിന്റെ വിലാസം).
ഉദാഹരണത്തിന്‌ താഴെകൊടുത്തിരിക്കുന്ന കോഡ്‌ ഭാഗം ശ്രദ്ധിക്കുക.

<A Href= "http://www.dhsekerala.gov.in">Higher Secondary</A>
ഇത്‌ “http:// www.dhsekerala.gov.in.” എന്ന വെബ്്‌സ്്റിനെ ലക്ഷ്യം വയ്ക്കുന്ന
ഹൈപ്പര്‍ലി; സൃഷ്ടിക്കുന്നു. ഉപയോക്താവ്‌ ഈ ലിങ്കില്‍ ക്ലിക്ക്‌ ചെയ്യുമ്പോള്‍ ഈ
1൪1.-ന്റെ ഹോംപേജ്‌ ര്രൌസറില്‍ ലഭ്യമാകും. <A>, </A> എന്നിവയ്ക്കിടയില്‍ നല്‍കുന്ന
വാക്യങ്ങള്‍ വൃത്യസ്ത നിറത്തിലും അടിവരയോടുകൂടിയും കാണപ്പെടും.
ഹൈപ്പര്‍ലിങ്‌: സൃഷ്ടിക്കുന്ന HIML കോഡ്‌ ഉദാഹരണം 5.5ലും അതിന്റെ ചിത്രം
൭.7ലും കാണിച്ചിരിക്കുന്നു.

<HTML>
<HEAD>
<TITLE> Anchor Tag </TITLE>
</HEAD>
<BODY Bgcolor= "#FEFPEFEE">
<H2 Align= "center"> Hyperlinks </H2>
<P>Now this will create a hyperlink to the website of

Higher Secondary Department .<BR>

5,140. ഉപയോദിച്ചു കൊണ്ങുള്ള വെബ്‌ രൂപകല്‍ക്ന

Kindly click on the words

<A Href= "http://www.dhsekerala.gov.in">Higher Secondary
Education</A>.
</BODY>
</HTML>

Anchor Tag - Mozilla Firefox
all@o 5.7 ല്‍ കാണിച്ചിരിക്കുന്നതു File Edit View History Bookmarks Tools Help

പോലെ ഹൈപ്പര്‍ Cis ചെയ്ത വാക്യം | (6) Anchor Tag oP
(Higher Secondary Education) അടി Hyperlinks

വരയിട്ട രീതിയിലും വ്യത്യസ്തമായ നിറ

ത്തിലും ആയിരിക്കും. Now this will create a hyperlink to the website of Higher
Secondary Department.
ഹൈപ്പര്‍ ലിങ്കുകളുടെ ലക്ഷ്യസ്ഥാനത്തി | Kindly click on the words Higher Secondary Education.

നനുസരിച്ച്‌ അവയെ ഇന്റേണല്‍ അല്ലെ
ങ്കില്‍ എക്സ്റ്റേണല്‍ എന്ന്‌ തരംതിരിച്ചി 2M 5.7: ഹൈല്ലരീ ലിക്‌ ഉശിക്കൊള്ളുന്ന വെബ്‌ പെജ്‌
രിക്കുന്നു.

5.2.1 ഇന്റേണല്‍ ലിങ്കിങ്‌ (Internal linking)

ഒരു വെബ്‌ പേജിനെ അതിന്റെ തന്നെ മറ്റൊരു ഭാഗവുമായി ബന്ധിപ്പിക്കുന്നത്‌ ഇന്റേ
ണല്‍ ലിങ്കിങ്‌ എന്നറിയപ്പെടുന്നു. ഇതിനായി Name ആട്രിബ്യൂട്ട്‌ ഉപയോഗിച്ച്‌ ലിങ്ക;
ചെയ്യേണ്ട ഭാഗം തിരിച്ചറിയുവാന്‍ പ്രത്യേകം നാമകരണം ചെയ്യേണ്ടതുണ്ട്‌. ഈ പേര്‍
<A> ടാഗിന്റെ ആട്രിബ്യയൂട്ടായ Href-ad വിലയായി നല്‍കി ലിങ്കിങ്‌ സാധ്യമാകും.
ഉദാഹരണത്തിന്‌ “Environment Pollution” എന്ന വിഷയത്തെ സംബന്ധിക്കുന്ന ഒരു വെബ്‌
പേജ്‌ നിര്‍മിക്കണം എന്ന്‌ കരുതുക. ഇതില്‍ മൂന്ന്‌ ഖണ്ഡികകളിലായി “Introduction”, “Air
Pollution”, “Water Pollution” എന്നിവ നല്‍കിയിട്ടുണ്ട്‌. ഈ ഖണ്ഡികകളെ സൂചിപ്പിക്കുന്ന
തിനായി <A> ടാഗിന്റെ Name ആഭ്രിബ്യൂട്ടിന്റെ വിലകളായി Introduction, Air, Water
എന്നീ പേരുകള്‍ നല്‍കിയിരിക്കുന്നു.

<A Name= "“Introduction"> INTRODUCTION </A>

<A Name= "Air"> Air Pollution </A>

<A Name= "Water"> Water Pollution </A>

വെബ്‌ പേജിന്റെ ഈ ഭാഗങ്ങളിലേക്ക്‌ ബന്ധിപ്പിക്കുന്നതിനായി <A> ടാഗിന്റെ Href
ആദഭ്രിബ്യൂട്ടിന്‌ യഥാക്രമം #Introduction, #Air, #Water # ചിഹ്നം നിര്‍ബന്ധമാണ്‌)
എന്നീ വിലകള്‍ നല്‍കണം. ഇതിനുള്ള HTML കോഡ്‌ ഭാഗം താഴെക്കൊടുക്കുന്നു.

<A Href = "#Introduction"> Go to Introduction </A>
<A Href = "#Air"> Air pollution </A>
<A Href = "#Water"> Water pollution </A>

ഇന്റേണല്‍ ലിങ്കിന്റെ ആശയം ഉള്‍പ്പെടുന്ന വെബ്‌ പേജ്‌ നമുക്ക്‌ നിര്‍മിക്കാം. ഇതിനുള്ള
HTML കോഡ്‌ ഉദാഹരണം 5.6 ലും അതിനനുസൃതമായ വെബ്‌ പേജ്‌ ചിത്രം 5.8 ലും
നല്‍കിയിരിക്കുന്നു.

കമ്പ്യൂട്ടര്‍ സയന്‍സ്‌ - XII

പ്പടുന്ന വെബ്‌ പേജ്‌ നിര്‍മാണം

<HTML>

<HEAD> <TITLE> Internal Linking </TITLE> </HEAD>

<BODY Bgcolor= "f8f8f8">
<H2 Align= "center">ENVIRONMENTAL POLLUTION</H2>
<A Name= "Introduction"><B>INTRODUCTION</B></A>
<P><FONT Size= "15">E</FONT>nvironment pollution is a
wide-reaching problem and it is likely to affect the
health of human population.Here we discuss the environment
pollution in the perspective of <A HREF= "#Air">air
pollution </A>,
<A Href= "#Water"> water pollution </A>and land/soil
waste pollution. Studies find that these kinds of
pollutions are not only seriously affecting humans
but also animals and plants.
</P>
<A Name= "“Air"><B> Air Pollution</B></A>
<P>The air we breathe is an essential ingredient for our
health and wellbeing. Unfortunately polluted air is common
throughout the world, especially in developed countries.
</P>
<A Name= "Water"><B> Water pollution</B></A>
<P>The water we drink is an essential ingredient for our
health and wellbeing. Unfortunately polluted water and
air are common throughout the world.Water pollution is
caused by the discharge of industrial effluents, sewage
water and agricultural or household waste.

</P>
<A Href= "#Introduction">Go to Introduction </A>
</BODY>
</HTML> Internal Linking - Mozilla Firefox
File Edit View History Bookmarks Tools Help
ചിത്രം 5.8 ല്‍ ഈ വെബ്‌ (9) internal Linking *
പേജിന്റെ ഒരു ഭാഗം ENVIRONMENTAL POLLUTION

കാണിച്ചിരിക്കുന്നു. ഉദാ | INTRODUCTION
ഹരണം 5.8 ല്‍ കാണിച്ചി

E nvironment pollution is a wide-reaching problem and it is likely to affect

A 11 the health of human population.Here we discuss the environment pollution in
tion, water pollu- J the perspective of air pollution , water pollution and land/soil waste pollution.
filo എ ന്നീ ലി ക്കുക ളി 108 Studies find that these kinds of pollutions are not only seriously affecting

humans but also animals and plants.
ക്ലിക്ക്‌ ചെയ്യുമ്പോള്‍

രിക്കുന്ന 12 pollu-

ചരം. ഇന്റ്ണോര്മ്‌ ഹൈച്ഛര ലിങ്കുകശി ഉശീപ്ലെടുന്ന വെബ്ബ്‌ പേജ്‌

5,140. ഉപയോറിച്ചു കൊണ്ങുള്ള വെബ്‌ രൂപകല്‍ക്ന

ചിത്രം 5.9 ല്‍ കാണിച്ചിരിക്കുന്ന വെബ്‌ പേജിന്റെ അനുയോജ്യമായ ഭാഗം ദൃശ്യമാകും.
ഇതുപോലെ ചിത്രം 5.9 ലെ വെബ്‌ പേജിന്റെ താഴെ ഭാഗത്തുള്ള Go to Introduc—
tion എന്ന ലിങ്കില്‍ ക്ലിക്ക്‌ ചെയ്യുമ്പോള്‍ Indroduction എന്ന ഭാഗം ദൃശ്യമാകും.

5.2.2 എക്സ്റ്റേണല്‍ ലിങ്കിങ്‌ (External linking)

ഒരു വെബ്‌ പേജിനെ മറ്റൊരു Internal Linking - Mozilla Firefox
File Edit View History Bookmarks Tools Help
(6) Internal Linking op

വെബ്‌ പേജുമായി ബന്ധിപ്പി
ക്കുന്ന പ്രവര്‍ത്തനത്തെ എക്‌ | ലം

സ്ക്റേണല്‍ ലിങ്കിങ്‌ എന്ന്‌ പറയു | she air we breathe is an essential ingredient for our health and wellbeing,
ന്നു. നിലവില്‍ ലഭ മായ വെബ്‌ Unfortunately polluted air is common throughout the world, especially in

developed countries.
പേജിലെ <A> ടാഗിന്റെ Href

ആ is} ബ്യൂ gl ൭ ന്റ വിലയായി The water we drink is an essential ingredient for our health and wellbeing.
Unfortunately polluted water and air are common throughout the world.Water
ബാഹ്യ ഫയലിന്റെ URL pollution is caused by the discharge of industrial effluents, sewage water and

നല്‍കി ഇതു സാധ്യമാക്കാം. agricultural or household waste.

ഇതിന്റെ പ്രവര്‍ത്തനങ്ങള്‍ നാം LSEieinroduction

ഈ അധ്യായ ത്തിലെ ഭാഗം aio 5.9: aatni Caledon ഹൈല്ലരിലിങ്ക്‌ ചെയ്യപ്പെട്ട ഭാഗങ്ങശി
5.2-@ ചര്‍ച്ച ചെയ്തതാണ്‌.

Water pollution

5.2.3 URL എന്ന ആശയം (Concept of URL)

URL-o0§ പൂര്‍ണ്ണരൂപം Uniform Resource Locator (യൂണിഫോം റിസോഴ്‌സ്‌ ലൊക്കേ
റ്റർ) എന്നാണ്‌. വെബ്‌ അഡ്ഡസ്‌ എന്നാണിതിന്റെ അര്‍ഥം. റിലേറ്റീവ്‌, അബ്സല്യൂട്ട്‌ എന്നീ
രണ്ടു തരം URL കള്‍ നിലവിലുണ്ട്‌.

<A Href= "http://www.scertkerala.gov.in"> എന്നത്‌ ഒരു അബ്സല്യട്ട്‌
URL ആണ്‌. കാരണം ഇവിടെ വെബ്‌ അഡ്രസ്‌ പൂര്‍ണമായും നല്‍കിയിരിക്കുന്നു.
എന്നാല്‍ ലിങ്ക്‌; <A Href = "image.html"> എന്നാണ്‌ എഴുതിയതെങ്കില്‍ അത്‌
റിലേറ്റീവ്‌ ലിങ്‌: ആയി പരിഗണിക്കും. ഇവിടെ നമ്മള്‍ നല്‍കിയ “/2720.//22/" ഒരു റിലേ
റ്റിവ്‌ URL ആണ്‌. എന്തുകൊണ്ടെന്നാല്‍ //490./7%/7 ഉം വെബ്‌ പേജും ഒരേ ഡയറക്ടറി
യില്‍ ശേഖരിച്ചിരിക്കുന്നു. നിലവില്‍ ലഭ്യമായ വെബ്‌ പേജ്‌ /home/kite/ HTML/
Ayperlink. hin എന്നാണ്‌ ശേഖരിച്ചിരിക്കുന്നതെങ്കില്‍ <A Href = "image.html">
എന്ന ഹൈപ്പര്‍ eile സൂചിപ്പിക്കുന്നത്‌ /home/kite/ HTML എന്ന ഫോള്‍ഡറിലെ
mage.hinl എന്ന ഫയലിനെ ആയിരിക്കും.

5.2.4 ഗ്രാഫിക്കല്‍ ഹൈപ്പര്‍ ലിങ്ക നിര്‍മാണം
(Creating graphical hyperlinks)

ടെക്സ്റ്റുകളെ ഹൈപ്പര്‍ ലിങ്കായി ഉപയോഗിക്കുന്ന രീതി നാം മനസിലാക്കിക്കഴിഞ്ഞു.
അതുപോലെ ഇമേജുകളും ഹൈപ്പര്‍ ലിങ്കാക്കി ഉപയോഗിക്കാം. അതിനായി <A>, </
A> എന്നീ ടാഗുകളുടെ ഇടയില്‍ <IMG> ടാഗ്‌ നല്‍കിയാല്‍ മതിയാകും. അതിന്റെ 11171.
കോഡ്‌ ഉദാഹരണം 5.7ല്‍ കാണിച്ചിരിക്കുന്നു. ഇതു സംബന്ധിച്ച വിവരങ്ങള്‍ ചിത്രം
5.10 ലും നല്‍കിയിരിക്കുന്നു.

കമ്പ്യൂട്ടര്‍ സയന്‍സ്‌ - XII

ള്‍ക്കൊള്ളുന്ന വെബ്‌ പേജ്‌ നിര്‍മാണം

<HTML>
<HEAD> <TITLE> Graphical Hyperlink </TITLE> </HEAD>
<BODY Bgcolor = "#EOFFFEF">

<H2 Align= "center">Graphical Hyperlink</H2>
Here is the image with <I>Graphical hyperlink </I>
<A Href= "https://www.wikipedia.org"™>
<IMG Sre= "wiki.jpg" Alt= "Image of Wiki"
Height= "30" Width= "40" Border= "1"> </A>.
We can click over this image and the home page of
linked site, wikipedia.org will open.
</BODY>
</HTML>
നിങ്ങള്‍ മൌസ്‌ പോയിന്റര്‍ വിക്കീപീഡിയ ലോഗോയുടെ മുകളില്‍ കൊണ്ടുവരുമ്പോള്‍
അത്‌ ചൂണ്ടു വിരല്‍ ഉയര്‍ത്തിയ കൈ അടയാളമായി മാറുന്നു. ഇത്‌ സൂചിപ്പിക്കുന്നത്‌
ഈ ലോഗോ ഒരു ഗ്രാഫിക്കല്‍ ഹൈപ്പര്‍ ലിത്‌: ആണെന്നാണ്‌. അവിടെ ക്ലിക്ക്‌ ചെയ്യു
മ്പോള്‍ പ്രൌസറില്‍ www.wikipedia.org എന്ന വെബ്സ്റ്റ്‌ ലഭ്യമാകും.

5.2.5 ഇ-മെയില്‍ ലിങ്ക

നിര്‍മി ക്കുന്ന വിധം Graphical Hyperlink - Mozilla Firefox
File Edit View History Bookmarks Tools Help

(9) Graphical Hyperlink oF

(Creating e-mail linking)

ഹൈപ്പര്‍ലിങ്ക, പ്രോട്ടോക്കോളായ Graphical Hyperlink
mailto ഉപയോഗിച്ച്‌ നമുക്ക്‌ ഇ-

₹ റ
മെയില്‍ ഹൈപ്പര്‍ലിടം നിര്‍മിക്കു Here is the image with Graphical hyperlink QD We can

വാനാകും. ഇത്‌ വിശദമാക്കുന്ന | click over this image and the home page of linked site,
HTML കോഡ്‌ ഉദാഹരണം 5.8
ലും വെബ്‌ പേജിന്റെ ചിത്രം 5.11
ലും നല്‍കിയിട്ടുണ്ട്‌.

wikipedia.org will open.

alo 5.10: ഗാഫിക്കതീ ഹൈപ്ഛരീ CB, ഉശീക്കൊകള്ളുനനാ
AUN Caley

ള്ളുന്ന വെബ്‌ പേജ്‌ നിര്‍മാണം

<HTML>
<HEAD> <TITLE> e-mail Linking </TITLE> </HEAD >
<BODY Bgcolor= "#EOFFFE">
<H2 Align= "center">e-mail linking</H2>
Now we can create an <B><I>e-mail hyperlink </I></B> to
SCERT in the following way. Kindly click on the word
<A Href= mailto: “scertkerala@gmail.com"> SCERT</A> Kerala.
</BODY>
</HTML>

5,140. ഉപയോദിച്ചു കൊണ്ങുള്ള വെബ്‌ രൂപകല്‍ക്ന

ചിത്രം 5.11- ല്‍ കാണിച്ചിരിക്കുന്ന വെബ്‌ 6്ലപ്്സ്വ്്്്വ്)

പേജില്‍ SCERT എന്ന ലിങ്ക്‌ നല്‍കിയിട്ടുണ്ട്‌. File Edit View History Bookmarks Tools Help
ഇതില്‍ ക്ലിക്ക്‌ ചെയ്യുമ്പോള്‍ e-mail linking
scettkerala@gmail.com എന്ന്‌ അഡ്രസ്‌
ചെയ്യപ്പെട്ട ഒഴിഞ്ഞ മെസ്സേജ്‌ ബോക്സോടു
കൂടിയ ഇ-മെയില്‍ പ്രോഗ്രാം തുറക്കുന്നു. ചിത്രം 5.11: ഇ-മെയിരി ഹൈപ്ഛരി ിങ്്‌

ഉശിമക്കൊള്ളുന്ന OQ ചേജ്‌

(ഭി e-mail Linking ta

Now we can create an e-mail hyperlink to SCERT in the
following way. Kindly click on the word SCERT Kerala.

ഒരു വെബ്‌ പേജില്‍ നിന്ന്‌ ഇ-മെയില്‍ ലിങ്ക്‌ നല്‍കി ഇ-മെയില്‍ പ്രോഗ്രാം
തുറക്കുമ്പോള്‍, ഇ-മെയില്‍ പ്രോഠ്രഗാമിലെ എല്ലാ ഭാഗങ്ങള്‍ക്കും തനതു
വിലകള്‍ നല്‍കാവുന്നതാണ്‌. ഉദാഹരണമായി "Thank you sir"
എന്ന സന്ദേശം "Director SCERT" എന്ന സബ്ജക്ടോടുകൂടി
scertkerala@gmail.com എന്ന വിലാസത്തിലേക്കും, കാര്‍ബണ്‍ കോപ്പി
യായി (CC) scertkeralal@gmail.com എന്ന വിലാസത്തിലേക്കും, bec
ആയി scertkerala2@gmail.com എന്ന വിലാസത്തിലേക്കും ഒരു ഇ-മെ
യില്‍ Ae വഴി അയക്കണമെങ്കില്‍ മുകളില്‍ കൊടുത്തിരിക്കുന്ന HTML
കോഡിലെ <A> ടാഗ്‌ താഴെ പറയുന്ന വിധം മാറ്റി എഴുതിയാല്‍ മതിയാകും.
<A Href="mailto:scertkerala@gmail.com?
cc=scertkeralal@gmail.comé&
bec=scertkerala2@gmail.com

&ésamp; subject=Director%20SCERT
&samp;bodt=Thank®20Yous20Sir">

send E-mail with cc bcc subject and body </A>

<A> ടാഗിലെ ? ചിഹ്നം ആദ്യത്തെ വിഭാഗത്തെയും & മറ്റ്‌ വിഭാഗങ്ങളെയും

വേര്‍തിരിക്കാന്‍ ഉപയോഗിക്കുന്നു.

സത്ത്‌

5.3 സംഗീതം, വീഡിയോ എന്നിവ ഉള്‍പ്പെടുത്തല്‍
(Inserting music and video)

ഇപ്പോള്‍ ലഭ്യമാകുന്ന മിക്കവാറും വെബ്‌ പേജുകളിലും ടെക്സ്റ്റുകള്‍, ചിത്രങ്ങള്‍ എന്നിവ
യ്ക്ക്‌ പുറമെ സംഗീത, വീഡിയോ ശകലങ്ങളും ഉള്‍പ്പെടുത്തി സമ്പുഷ്ടമാക്കിയിരിക്കുന്നു.
എങ്ങനെയാണ്‌ ഒരു വെബ്‌ പേജില്‍ മ്യൂസിക്‌, വീഡിയോ തുടങ്ങിയവ ഉള്‍പ്പെടുത്തൂ
ന്നത്‌? മള്‍ട്ടിമീഡിയ വിഭവങ്ങള്‍ ഉള്‍പ്പെടുത്താന്‍ ഇന്‍ലൈന്‍, എക്സ്റ്റേണല്‍ എന്നീ രണ്ടു
തരം രീതികള്‍ ഉപയോഗിക്കുന്നു. ഇന്‍ലൈന്‍ രീതിയില്‍ ഫയലുകളും അതിനാവശ്യ
മായ വിവരങ്ങളും വെബ്‌ പേജിന്റെ ഭാഗമായാണ്‌ കൈകാര്യം ചെയ്യുന്നത്‌. ബ്രൌസര്‍
ജാലകം തുറക്കുമ്പോള്‍ത്തന്നെ ഇതിലെ സംഗീതവും വീഡിയോ ദൃശ്യവും ഉപയോ
ക്താവിന്‌ കേള്‍ക്കുവാനും കാണുവാനും സാധിക്കും. എന്നാല്‍ വെബ്‌ പേജില്‍ ലഭ്യമാ
കുന്ന മള്‍ട്ടിമീഡിയ വിഭവങ്ങള്‍ ആ കമ്പ്യൂട്ടറില്‍ ലഭ്യമായ സോഫ്‌റ്റ്വെയര്‍ ഉപയോഗിച്ച്‌
തുറക്കുന്ന രീതിയാണ്‌ എക്സ്റ്റേണല്‍ രൂപത്തില്‍ അവലംബിച്ചിരിക്കുന്നത്‌. നമുക്ക്‌ jpg,

കമ്പ്യൂട്ടര്‍ സയന്‍സ്‌ - XII

gif, ൦ ൧, tiff, .mp3, mp4, തുടങ്ങിയ എക്സ്റ്റന്‍ഷനില്‍ കാണപ്പെടുന്ന മള്‍ട്ടിമീ
ഡിയ ഫയലുകള്‍ ഒരു വെബ്‌ പേജിലേക്ക്‌ ലിങ്ക്‌: ചെയ്യുവാനാകും.

മള്‍ട്ടിമീഡിയ വിഭവങ്ങളായ സംഗീതവും വീഡിയോ ദൃശ്യങ്ങളും ഉള്‍പ്പെടുത്താന്‍ HTML
ലെ <EMBED> എന്ന ടാഗാണ്‌ ഉപയോഗിക്കുന്നത്‌. വെബ്‌ പേജില്‍ ഈ ടാഗ്‌ ഉള്‍പ്പെടു
ത്തുമ്പോള്‍ മള്‍ട്ടിമീഡിയ മാര്‍ഗങ്ങളുടെ നിയ്രന്തണത്തിനുവേണ്ട ഉപാധികളും ലഭ്യമാ
കുന്നു. എന്നാല്‍ ഈ ടാഗിന്റെ പ്രവര്‍ത്തനം പിന്തുണയ്ക്കാത്ത ്രൌസറുകളില്‍
<NOEMBED> എന്ന ടാഗ്‌ ഉപയോഗിച്ച്‌ ബദല്‍ സംവിധാനം സജ്ജമാക്കാവുന്നതാണ്‌.
<EMBED> ടാഗിന്റെ പ്രധാന ആഭ്രിബ്യയൂട്ട്‌ Sre ആണ്‌. ഇതിന്റെ വിലയായി വെബ്‌ പേജില്‍
ഉള്‍പ്പെടുത്തേണ്ട സംഗീതം /വീഡിയോയുടെ URL നല്‍കണം. മറ്റ്‌ ആട്രിബ്യൂട്ടുകള്‍
Height, Width, Align, Alt, തുടങ്ങിയവ ആണ്‌. ഇതിന്റെ വിലകള്‍ നമുക്ക്‌ പരിചി
തമാണല്ലോ? ഇതുകൂടാതെ Hidden എന്നൊരു ആഭ്രിബ്യൂട്ടും ഈ ടാഗിനുണ്ട്‌. നമ്മള്‍
വെബ്‌ പേജുകളില്‍ ഉള്‍പ്പെടുത്തുന്ന സംഗീത-വീഡിയോ ശകലങ്ങള്‍ ഉപയോക്താവിന്‌
കാണണമെങ്കില്‍ Hidden ആദഭ്രിബ്യയൂട്ടിന്‌ തനത്‌ വിലയായ False എന്നും കാണേണ്ട
എങ്കില്‍ TLUE എന്നും നല്‍കണം.

ഒരു വെബ്‌ പേജില്‍ ഒരു ഓഡിയോ ഉള്‍പ്പെടുത്തിയതെങ്ങനെയെന്ന്‌ ഉദാഹരണം 5.9
ലും വെബ്‌ പേജിന്റെ ചിത്രം 5.12 ലും നല്‍കുന്നു.

ക്കൊള്ളുന്ന വെബ്‌ പേജ്‌ നിര്‍മാണം

<HTML>
<HEAD>
<TITLE> Embed Tag </TITLE>
</HEAD>
<BODY Bgcolor = "#DDFFFE">

<H2 Align= "“center"> Adding Music and Videos </H2>
Here is a tag <B><I>EMBED </I></B> with the Multimedia
features .<BR>

<EMBED Src= "songl.mp3" Width= "300" Height= "60">

</EMBED>
</BODY>
</HTML> <)> file:///nome/meena/Deski| LE
ഉദാഹരണം 5.9 ല്‍ കൊടുത്തിരിക്കുന്ന Adding Music and Videos

TITML പേജ്‌ ബ്രൌസര്‍ വഴി തുറക്കുമ്പോള്‍ Here is a tag EMBED with the Multimedia features.
അതില്‍ ഉള്ളടക്കം ചെയ്യപ്പെട്ട സംഗീതം
കേള്‍ക്കാന്‍ സ്ഥധിക്കുന്നു. ഇതിന്റെ നിയ്ര്ര
ണങ്ങളായ പ്ലേ, പോസ്‌, ശബ്ദ വൃതിയാനം
എന്നിവയും വെബ്‌ പേജില്‍ ലഭ്യമാകും. ഇതു
പോലെ വീഡിയോ വെബ്‌ പേജില്‍ ലഭ്യമാ Olas
ക്കുന്നതിന്‌ <EMBED> ടാഗും അതിന്റെ ആദ്രി

ചിത്രം. 72. ഓഡിയോ elles ഉശീക്കൊള്ളുന്ന

ബൂട്ടായി Sra യും ഉപയോഗിക്കാം. വെബ്‌ പേജ്‌

5,140. ഉപയോദിച്ചു കൊണ്ങുള്ള വെബ്‌ രൂപകല്‍ക്ന

ഉദാഹരണം 5.10 ല്‍ കൊടുത്തിരിക്കുന്ന HTML കോഡിന്‌ അനുസൃതമായ വെബ്‌
പേജ്‌ (ചിരം 5.13) ഈ ലിങ്കിങ്‌ ചിര്രീകരിക്കുന്നു.

റിയോ ലഭ്യമാക്കുന്ന HTML കോഡ്‌

<HTML>
<HEAD>
<TITLE> Embed Tag </TITLE>
</HEAD >
<BODY Bgcolor = "#DDFFFE">

<H2 Align="center">Adding Music and Videos</H2>
Here is a tag <B><I>EMBED </I></B>with the Multimedia
features.
<EMBED Src= "alan.mp4" Width= "300" Height= "150">
</EMBED>
<NOEMBED><IMG Src= "book2.jpg"

Alt= "Alternative Media">

</NOEMBED> Embed Teg
</BODY> <i> file:///home/meena/Deskt| | ൫൭:
</HTML> Adding Music and Videos

നമ്മള്‍ ഉദാഹരണം 5.9 ല്‍ നല്‍കിയിരിക്കുന്ന HTML  Hereisatag EMBED with the Multimedia features.
പേജ്‌ തുറക്കുമ്പോള്‍ ഉള്ളടക്കം ചെയ്ത വീഡിയോ
പ്ലേ ചെയ്ത്‌ തുടങ്ങും. ഇവിടെയും ശബ്ദം,
വീഡിയോ എന്നിവ നിയ്യന്ത്രിക്കാനാവശ്യമായ
വോളിയം, പോസ്‌, ഫുള്‍ സ്ക്രീന്‍ മോഡ്‌ എന്നീ

കണ്‍ദ്രോളുകള്‍ ലഭ്യമാകും. മറ്റ്‌ വെബ്‌ പേജിലുള്ള

ഓഡിയോയും വീഡിയോയും നമ്മുടെ വെബ്‌ ചിതം. 3: വിഡിയോ ഉശിക്കൊള്ളുനാ
പേജിലേക്ക്‌ ENB ചെയ്ത്‌ ഉള്‍പ്പെടുത്താം. വെട്‌ പേ

വെബ്‌ പേജിന്റെ പശ്ചാത്തലത്തില്‍ ഓഡിയോ ഇന്‍ലൈന്‍ ആയി മ്യൂസിക്‌ പ്ലേ ചെയ്യു
ന്നതിന്‌ വേണ്ടി <BGSOUND> എന്ന ടാഗ്‌ ഉപയോഗിക്കുന്നു. ഇതിന്റെ ഉദാഹരണം 5.11
ല്‍ കൊടുത്തിരിക്കുന്നു.

യാഗം വ്യക്തമാക്കുന്ന HTML കോഡ്‌

<HTML>
<HEAD> <TITLE> Background Music </TITLE> </HEAD >
<BODY Bgcolor = "#DDFFFE">

<H2 Align= "center">Adding Background Music </H2>
Here is a tag <B><I> BGSOUND </I></B> which helps
us to play background music in our web page.
<BGSOUND Src= "Song2.mp3" Loop= "Infinite"™>
</BODY>
</HTML>

കമ്പ്യൂട്ടര്‍ സയന്‍സ്‌ - XII

ഓഡിയോയുടെ ശബ്ദനിയ്ര്രണത്തിനായി നമുക്ക്‌ <BGSOUND> ടാഗിന്റെ Volume
ആട്രിബ്യൂട്ട്‌ ഉപയോഗിക്കാം. HTML, പേജില്‍ എക്സ്റ്റേണല്‍ ഫയല്‍ ഉള്‍പ്പെടുത്തുന്നതി
നായി Src, Href ആട്രിബ്യുട്ടുകളില്‍ അവയുടെ കൃത്യമായ വഴി നല്‍കിയിരിക്കണം.
ഉദാഹരണം 5.10-ല്‍ ഈ ആട്രിബ്യൂട്ടുകളുടെ വിലകളില്‍ മാറ്റം വരുത്തി പരീക്ഷിച്ചു നോക്കാ

വുന്നതാണ്‌. Loop ആട്രിബ്യൂട്ട്‌ ഉപയോഗിച്ച്‌ മ്യൂസിക്‌ agi തവണ ആവര്‍ത്തിക്കണം
എന്നുളളത്‌ തീരുമാനിക്കാം. ഇതിന്റെ വിലയായി Infinite നല്‍കിയാല്‍ വെബ്‌ പേജ്‌
ബ്രൌസറില്‍ ലഭ്യമാകുന്നിടത്തോളം തുടര്‍ച്ചയായി മ്യൂസിക്‌ പ്ലേ ചെയ്യപ്പെടുന്നതാണ്‌.

5.4 വെബ്‌ പേജില്‍ പട്ടിക ഉള്‍പ്പെടുത്തുന്ന വിധം
(Creating tables in a web page)

ചിലസമയങ്ങളില്‍ ധാരാളം വിവരങ്ങള്‍ നമുക്ക്‌ ചിട്ടയായ രീതിയില്‍ പ്രദര്‍ശിപ്പിക്കേണ്ട
തായിവരും. ഉദാഹരണത്തിന്‌ ഒരു ആശുപ്രതിയില്‍ 2012-2014 കാലയളവില്‍ പുതിയ
തായി ക്യാന്‍സര്‍ കണ്ടെത്തിയ രോഗികളില്‍ പുകവലി, പാന്‍, മദ്യം, ഇതല്ലാതെ മറ്റുകാ
രണങ്ങളാല്‍ ക്യാന്‍സര്‍ ബാധിച്ചവരുടെ എണ്ണം എന്നിവ പട്ടിക രൂപത്തില്‍ പട്ടിക 5.1 ല്‍
നല്‍കുന്നു.

ന വി

Other cases

alghe 5.1; ഒരു ആശുപ്ത്രിയിതി &JIBIVE കക്കെത്മ?യ രോഗികശി

വരിയും നിരയുമായി സെല്ലുകള്‍ ചിട്ടയായി അടുക്കിവച്ചിരിക്കുന്നതാണ്‌ പട്ടിക എന്നത്‌
നമുക്കെല്ലാം അറിയാം. ഈ അറകളില്‍ (cells) ചിത്രങ്ങളോ വാക്യങ്ങളോ മറ്റൊരു
ടേബിളോ ഉള്‍ക്കൊള്ളിക്കാം. !11.-ല്‍ <TABLE> എന്ന ടാഗ്‌ ഉപയോഗിച്ചാണ്‌ പട്ടിക
നിര്‍മിക്കുന്നത്‌. ഈ ടാഗിനോടൊപ്പം <TR>, <TH>, <TD> എന്നീ ടാഗുകളും പട്ടിക നിര്‍മി
ക്കാന്‍ ഉപയോഗിക്കുന്നു. ഈ ടാഗുകളെക്കുറിച്ച്‌ തുടര്‍ന്നുള്ള ഭാഗങ്ങളില്‍ ചര്‍ച്ച ചെയ്യാം.

5.4.1 <TABLE> ടാഗ്‌

പട്ടിക ടാഗ്‌ ഒരു കണ്ടയിനര്‍ ടാഗാണ്‌. പട്ടിക നിര്‍മാണത്തിനാവശ്യമായ എല്ലാ ഉള്ളടക്ക
ങ്ങളും ടാഗ്‌ ജോഡികളായ <TABLE>, </TABLE> എന്നിവയുടെ ഇടയില്‍ നല്‍കണം.
പട്ടികയുടെ പൊതുവായ രൂപരേഖ തയാറാക്കുന്നതിന്‌ വിവിധ ആട്രിബ്യൂട്ടുകള്‍ ഉപ
യോഗിക്കുന്നു. ഇവയില്‍ മുഖ്യമായവ താഴെ കൊടുത്തിരിക്കുന്നു.

5,141. ഉപയോദിച്ചു കൊണ്ങുള്ള വെബ്‌ രൂപകല്‍ക്ന

1. Border: പട്ടികയ്ക്ക്‌ ചുറ്റുമുള്ള വരകളുടെ കനമാണ്‌ ഈ ആടഭ്രിബ്യൂട്ടിലൂടെ വ്യക്ത
മാക്കുന്നത്‌. ഈ ആഭ്രിബ്യൂട്ടിന്‌ പൂജ്യമല്ലാത്ത വില (പിക്സലായാണ്‌ നല്‍കേണ്ടത്‌)
നല്‍കിയാല്‍ പട്ടികയുടെ ബോര്‍ഡര്‍ നിര്‍മിക്കാം. ഇതിന്‌ പൂജ്യം എന്ന വില നല്‍കു
മ്പോള്‍ ടേബിളിന്‌ ചുറ്റുമുള്ള വരകള്‍ അപ്രത്യക്ഷമാകും.

2. Bordercolor: പട്ടികയുടെ അതിരുകള്‍ക്ക്‌ നിറം നല്‍കുന്നു.

3. Align: ബ്രൌസര്‍ ജാലകത്തില്‍ പട്ടികയുടെ സ്ഥാനം നിര്‍ണയിക്കുന്നു. ഇതിന്റെ
സാധ്യമായ വിലകള്‍ left (തനതുവില) right, center എന്നിവയാകുന്നു.

4. Bgcolor: പട്ടികക്ക്‌ പശ്ചാത്തലനിറം നല്‍കുന്നതിന്‌ ഈ ആട്രിബ്യൂട്ട്‌ ഉപയോഗി
ക്കുന്നു.

5. Background: പട്ടികയുടെ പശ്ചാത്തലത്തില്‍ ഒരു ചിത്രം പ്രദര്‍ശിപ്പിക്കുന്നതിന്‌
ഈ ആട്രിബ്യൂട്ട്‌ ഉപയോഗിക്കുന്നു. ഇതിനായി ചിത്രം സൂക്ഷിച്ചിരിക്കുന്ന സ്ഥലം
(path) Background ആട്രിബ്യൂട്ടിന്റെ വിലയായി നല്‍കണം. ഉദാഹരണത്തിന്‌
<TABLE Background = "images/flower.gif"> Mages എന്ന ഫോള്‍ഡ
റില്‍ സൂക്ഷിച്ചിരിക്കുന്ന 7224 എന്ന ചിത്രം ടേബിളിന്റെ ഉള്ളില്‍ പ്രദര്‍ശിപ്പി
ക്കുന്നു. <TABLE > ടാഗിന്റെ ആഭ്രിബ്യൂട്ടുകളായി Bgcolor, Background എന്നിവ
രണ്ടും നല്‍കിയാല്‍ Background ആദഭ്രിബ്യൂട്ടിന്റെ വിലയായ ചിയ്രമായിരിക്കും
പ്രദര്‍ശിപ്പിക്കുക.

6. Cellspacing: പട്ടികയിലെ അറകള്‍ക്ക്‌ (Cell) ഇടയില്‍ സ്ഥലം ഉണ്ട്‌. ഈ സ്ഥലം
കൂട്ടുവാനോ കുറയ്ക്കുവാനോ കഴിയും. Cellspacing എന്ന ആദഭ്രിബ്യൂട്ട്‌ അറ
കള്‍ക്ക്‌ ഇടയിലുള്ള സ്ഥലം നിര്‍ണയിക്കുന്നു. ഇതിന്റെ വിലയായി പിക്സലുകളുടെ
എണ്ണമാണ്‌ നല്‍കുന്നത്‌.

7. Cellpadding: പട്ടികക്കുള്ളിലെ അറകളില്‍ അടങ്ങിയിരിക്കുന്ന വസ്തുവും അറ
കളുടെ അതിര്‍ത്തിയും തമ്മിലുള്ള സ്ഥാനവ്യത്യാസം നിര്‍ണയിക്കുന്നതിനായി ഈ
ആട്രിബ്യൂട്ട്‌ ഉപയോഗിക്കുന്നു. പിക്സലിലാണ്‌ ഇതിന്റെ വിലയും നല്‍കേണ്ടത്‌.

8. Width and Height: പട്ടികയുടെ വീതിയും ഉയരവും ഈ അആദഭ്രിബ്യൂട്ടുകള്‍ ഉപ
യോഗിച്ച്‌ നല്‍കാം. ഇതിന്റെ വിലകള്‍ പിക്സലിലോ ്രൌസര്‍ ജാലകത്തിന്റെ
വീതിയുടെയും ഉയരത്തിന്റെയും ശതമാനമായോ നല്‍കാം.

69. Frame: പട്ടികയുടെ അതിരുകള്‍ (Border) ഏത്‌ രീതിയില്‍ പ്രദര്‍ശിപ്പിക്കണം എന്ന
തിനായി ഈ ആട്രിബ്യൂട്ട്‌ ഉപയോഗിക്കാം. ഈ ആട്രിബ്യൂട്ടിന്റെ വിലകള്‍ പട്ടികാ
രൂപത്തില്‍ പട്ടിക 5.2 ല്‍ നല്‍കുന്നു.

മുകള്‍ഭാഗത്തെ മാ്രതം അതിര്‍ പ്രദര്‍ശിപ്പിക്കുന്നതിന്‌.

പട്ടികയുടെ താഴ്ഭാഗത്ത്‌ മാത്രം അതിര്‍ പ്രദര്‍ശിപ്പിക്കുന്നതിന്‌.

കമ്പ്യൂട്ടര്‍ സയന്‍സ്‌ - XII

Hsides പട്ടികക്ക്‌ തിരശ്ചീനമായി (മുകളിലും താഴെയും) മാര്തം ബോര്‍ഡര്‍
പ്രദര്‍ശിപ്പിക്കുന്നതിന്‌.
പ്രദര്‍ശിപ്പിക്കുന്നതിന്‌.

Vsides പട്ടികക്ക്‌ ലംബമായി ഇടതും വലതും ഭാഗത്ത്‌ മാര്തം ബോര്‍ഡര്‍

പ്രദര്‍ശിപ്പിക്കുന്നതിന്‌.

box or border | പട്ടികയുടെ എല്ലാ ഭാഗത്തും ബോര്‍ഡര്‍ പ്രദര്‍ശിപ്പിക്കുന്നതിന്‌

(തനതു വില)

പടടിക്‌.2. Frame ആട്രിബ്യുടിന്റെ വിലകശ്‌

10. Rules: അറകളുടെ ചുറ്റുമുള്ള വരകള്‍ വരയ്ക്കുന്നതിനായി ഈ ആട്രിബ്യൂട്ട്‌ ഉപ
യോഗിക്കുന്നു. ഇതിന്റെ വിലകള്‍ പട്ടിക 2.3-ല്‍ കാണിച്ചിരിക്കുന്നു.

none അറകള്‍ക്ക്‌ (Cell) ചുറ്റും വരകള്‍ പ്രദര്‍ശിപ്പിക്കുന്നില്ല. (border)

cols നിരകള്‍ക്ക്‌ (Columns) മാത്രം വരകള്‍ പ്രദര്‍ശിപ്പിക്കുന്നതിന്‌
rows വരികള്‍ക്ക്‌ (TOWS) മാത്രം വരകള്‍ പ്രദര്‍ശിപ്പിക്കുന്നതിന്‌

LZLOUPS വരികളുടെ കൂട്ടങ്ങള്‍ക്കും നിരകളുടെ കൂട്ടങ്ങള്‍ക്കും വരകള്‍ പ്രദര്‍ശി
പ്പിക്കുന്നതിന്‌

all എല്ലാ വരികള്‍ക്കും നിരകള്‍ക്കും ഇടയില്‍ വരകള്‍ പ്രദര്‍ശിപ്പിക്കുന്ന
തിന്‌

പട്ടിക 5.3:Rules ആ്രിബ്യുട്ടിന്റെി വിലകശി

ഇനി <TABLE> ടാഗുമായി ബന്ധപ്പെട്ട മറ്റു ടാഗുകളെക്കുറിച്ച്‌ ചര്‍ച്ച ചെയ്യാം.
5.4.2 <TR> ടാഗ്‌

ഒരു പട്ടിക ടാഗിനുള്ളില്‍ വരികള്‍ (rows) നിര്‍മിക്കുന്നതിനായി <TR> ടാഗ്‌ ഉപയോഗി

ക്കുന്നു. ഇത്‌ ഒരു കണ്ടയ്നര്‍ ടാഗ്‌ ആണ്‌. ഓരോ വരിയും <TR> </TR> ടാഗ്‌
ജോഡികള്‍ക്കിടയില്‍ ഉള്‍പ്പെടുത്തുന്നു. <TR> ടാഗ്‌ എല്ലായ്പ്പോഴും <TABLE> ടാഗിനു
ള്ളില്‍ മാത്രമേ ഉപയോഗിക്കാന്‍ കഴിയു. ഓരോ വരിയിലും ഒരു കൂട്ടം അറകള്‍ (Cells)
അടങ്ങിയിരിക്കുന്നു. ഒരു പട്ടികയിലെ എറ്റവും ചെറിയഘടകമാണ്‌ ഒരു അറ (Cell).
പട്ടികക്കുള്ളിലെ അറകളെ (Cells) ഹെഡിങ്‌, ഡാറ്റ എന്നിങ്ങനെ രണ്ടായി തരം തിരി
ക്കാം. പട്ടിക 5.1 ല്‍ ചുവന്ന നിറത്തില്‍ കാണിച്ചിരിക്കുന്ന വിലകള്‍ ഹെഡിങ്‌ സെല്ലു
കളും, നീല നിറത്തില്‍ കാണിച്ചിരിക്കുന്നത്‌ ഡാറ്റാസെല്ലുകളും ആണ്‌.

5,140. ഉപയോദിച്ചു കൊണ്ങുള്ള വെബ്‌ രൂപകല്‍ക്ന

5.4.3 <TH> ടാഗ്‌

ഹെഡിങ്‌ സെല്ലുകളെ (Heading cells) നിര്‍വചിക്കുന്നതിനാണ്‌ <TH> ടാഗ്‌ ഉപയോഗി
ക്കുന്നത്‌. ഇതും ഒരു കണ്ടയ്നര്‍ ടാഗ്‌ ആണ്‌. <TH> </TH> എന്നി ടാഗുകള്‍ക്കിട
യിലാണ്‌ ഹെഡിങ്‌ നല്‍കുന്നത്‌. ഈ ഹെഡിങ്‌ കനം കൂട്ടി (Bold face) സെല്ലിന്റെ
മധ്യത്തില്‍ (Center) പ്രദര്‍ശിപ്പിക്കുന്നു. എല്ലായ്പ്പോഴും <TR> ടാഗിനുള്ളിലാണ്‌ <TH>
ടാഗ്‌ നല്‍കുന്നത്‌.

5.4.4 <TD> ടാഗ്‌

<TH> ടാഗിന്‌ ഏറെക്കുറെ സമാനമായ <TD> ടാഗ്‌ ഡാറ്റാസെല്ലുകള്‍ പ്രദര്‍ശിപ്പിക്കുന്ന
തിന്‌ ഉപയോഗിക്കുന്നു. ഇത്‌ ഒരു കണ്ടയ്നര്‍ ടാഗ്‌ ആണ്‌. <TD> </TD> ടാഗ്ജോഡി
കള്‍ക്ക്‌ ഇടയില്‍ (പ്രദര്‍ശിപ്പിക്കേണ്ട ഡാറ്റ നല്‍കുന്നു. ഈ ടാഗും <TH> ടാഗിനെപോലെ
<TR> ടാഗിന്‌ ഉള്ളിലായാണ്‌ നല്‍കുന്നത്‌.

ഉദാഹരണം 5.12 നല്‍കിയിരിക്കുന്ന HTML Code ഒരു പട്ടിക നിര്‍മിക്കാന്‍ ഉപയോഗി
ക്കുന്നു. ഇതിന്റെ വെബ്‌ പേജ്‌ ചിത്രം 5.14-ല്‍ കാണിച്ചിരിക്കുന്നു.

ഉള്‍ക്കൊള്ളുന്ന വെബ്‌ പേജ്‌ നിര്‍മാണം

<HTML>
<HEAD> <TITLE> Html Tables </TITLE>
< >
(SBD Html Tables - Mozilla Fi- O X
<BODY> Bs ളു ു
File Edit View History Book
<TABLE Border="1">
൫) Html Tables ലം
<TR> പി
<TH>Roll No</TH> Roll No |Name
<TH>Name</TH> 1
</TR> 2
<TR>
<TD>1</TD>
<TD>Aliya</TD> aloo 5.14: രണ്ട്‌ നിരകശി 99383 ഒരു
</TR> MIWIONM പട്ടിക ഉശീക്കൊളൂകുന്ന HAIN Gales
<TR>
<TD>2</TD> Year 2012 - 14
<TD>Arun</TD>
SRR Smokers 412
</TABLE> Pan users 159
</BODY> Alcohol users 219
</HTML> Other cases 280

മുകളില്‍ പ്രതിപാദിച്ച ഏതാനും ചില ആട്രിബ്യയൂട്ടുകള്‍ ഉപയോഗിച്ച്‌ നമുക്ക്‌ താഴെ പറ
യുന്ന പട്ടിക നിര്‍മിക്കാം.

കമ്പ്യൂട്ടര്‍ സയന്‍സ്‌ - XII

ഉദാഹരണം 5.13 - ല്‍ നല്‍കിയിരിക്കുന്ന HTML Code ഉപയോഗിച്ച്‌ ചിത്രം 5.15 കാണു
ന്നതുപോലുള്ള വെബ്‌ പേജ്‌ നിര്‍മിക്കാം.

ള്‍ നല്‍കിയതുമായ പട്ടിക

റാണാ
<HTML>
<HEAD> <TITLE> Hospital Table </TITLE> </HEAD>
<BODY>

<TABLE Border= "3" Bordercolor= "RED" Bgcolor= "#4EBOAF"
Align= "left" Cellspacing= "16" Cellpadding= "5"
Width= "നം
<TR>
<TH> Year </TH>
<TH> 2012-14 </TH>

<TH> Smokers </TH>
<TD> 412 </TD>

<TH> Pan users </TH>
<TD> 159 </TD>

<TH> Alcohol users </TH> Hospital Table - Mozilla Firefox. O X
<TD> 219 </TD>

File Edit View History Bookmarks
[6) Hospital Table

<TH> Other cases </TH>
<TD> 280 </TD>
</TR>
<TABLE>
<BODY>
<HTML>

ഉദാഹരണം 5.13-ല്‍ <TR>, </TR> ടാഗ്‌ ജോഡി
കള്‍ക്കിടയില്‍ <TH> ടാഗ്‌ ഉപയോഗിക്കുമ്പോള്‍
ചിത്രം 5.15 ല്‍ കാണിച്ചിരിക്കുന്നതുപോലെ പട്ടി
കയുടെ ആദ്യത്തെ നിര ഹെഡര്‍ കോളത്തിന്‌ തുല്യ
മായിരിക്കും.

athas 5.15: Cellspacing 90
Cellpadding ഉം ഉപയോഗിച്ചുള്ള പ്ടിക

<TR> ടാഗിന്റെ ആട്രിബ്യൂട്ടുകള്‍

ഒരു വരിയുടെ സ്വഭാവസവിശേഷതകള്‍ മാറ്റുന്നതിനായി <TR> ടാഗിന്റെ ആഭ്രിബ്യൂട്ടു
കള്‍ ഉപയോഗിക്കുന്നു.

5,141. ഉപയോദിച്ചു കൊണ്ങുള്ള വെബ്‌ രൂപകല്‍കന

1. Align: അതാത്‌ വരിയിലെ അറകളിലെ വാക്യങ്ങള്‍ തിരശ്ചീനമായി സ്ഥാപിക്കു
ന്നതിന്‌ ഈ ആട്രിബ്യൂട്ട്‌ ഉപയോഗിക്കുന്നു. Left, right or center എന്നീ വില
കള്‍ ഇതിന്‌ നല്‍കാം. ഈ ആട്രിബ്യൂട്ടിന്റെ തനത്‌ വില ഡാറ്റായെ സംബന്ധിച്ചിട

ത്തോളം Left ഉം ഹെഡിങ്ങിന്‌ center ഉം ആയിരിക്കും (ചിത്രം 5.15 കാണുക).

2. Valign: ഏതെങ്കിലും ഒരു വരിയിലെ (row) അറയിലെ ഉള്ളടക്കം ലംബമായി
സ്ഥാപിക്കുന്നതിന്‌ Valign ആട്രിബ്യൂട്ട്‌ ഉപയോഗിക്കാം. ഇതിന്റെ വിലയായി
top, middle, bottomor baseline എന്നിവ നല്‍കാം. Baseline ആട്രിബ്യൂട്ട്‌
ഉപയോഗിക്കുമ്പോള്‍ അറകളിലെ വാക്യങ്ങളെയും ഉള്ളടക്കത്തെയും അതിന്റെ
ബേസ്‌ ലൈനോടുകൂടി സ്ഥാപിക്കുന്നു.

3. 89൦012: ഒരു പ്രത്യേക വരിക്ക്‌ പശ്ചാത്തലനിറം നല്‍കുന്നതിനായി Bgcolor
ആട്രിബ്യൂട്ട്‌ ഉപയോഗിക്കുന്നു. ഒരു വരിയെ പ്രത്യേകമായി എടുത്ത്‌ കാണിക്കുന്ന
തിന്‌ ഇത്‌ സഹായിക്കുന്നു.

ഉദാഹരണം 5.13-ല്‍ നല്‍കിയ HTML കോഡിന്റെ പരിഷ്കരിച്ച കോഡ്‌ ഭാഗം ചുവടെ
ചേര്‍ക്കുന്നു. ഇത്‌ ചിത്രം 5.16 ല്‍ കാണുന്നതു പോലെ പട്ടികയിലെ മുന്നാമത്തെ വരി
യുടെ പശ്ചാത്തല നിറത്തിലും തിരശ്ചീനവും ലംബവുമായ വിന്യാസങ്ങളിലും ഭേദഗതി
വരുത്തിയിരിക്കുന്നു.

Hospital Table - Mozilla Firefox- O X

<TR Bgcolor= "yellow" Align= "right" File Edit View History Bookmarks

Valign= "middle"> (6) Hospital Table മ്മം ന
<TH> Pan users </TH>
<TD> 159 </TD>

</TR>

പരിഷ്കരിച്ച വെബ്‌ പേജ്‌ ailWWo 5.16 ല്‍ കാണിച്ചി
രിക്കുന്നു.

<TH>, <TD> ടഭാഗുകളുടെ ആട്രിബ്വ്യുട്ടുകള്‍

<TH>, <TD> ടാഗുകള്‍ പട്ടികയില്‍ അറകള്‍ നിര്‍
മിക്കുവാന്‍ ഉപയോഗിക്കുന്നതിനാല്‍ ഇതിന്റെ മിക്ക
വാറും ആട്രിബ്യൂട്ടുകള്‍ ഒരു പോലെയാണ്‌. ഇതില്‍

പ്രധാനപ്പെട്ട ചില ആട്രിബ്യൂട്ടുകള്‍ നമുക്ക്‌ ചര്‍ച്ച ഛം. /0- Bgcolor, Align, Valign
എനത്മിവ ഉപയോഗിച്ച്‌ പരിഷ്കതിച്ച! വരി
ചെയ്യാം.
ഉശീപ്പെടടുന്ന പട്ടിക.

1. Align: അറയിലെ ഉള്ളടക്കത്തിന്റെ തിരശ്ചീ
നമായ വിന്യാസം സൂചിപ്പിക്കുന്നതിന്‌ വേണ്ടിയാണ്‌ ഈ ആട്രിബ്യൂട്ട്‌ ഉപയോഗി
ക്കുന്നത്‌. ഈ ആട്രിബ്യൂട്ടിന്റെ വിലയായി left, right, center ഇവയില്‍ ഏതെ
ങ്കിലും നല്‍കാം.

2൧. Valign: അറകളിലെ ഉള്ളടക്കത്തിന്റെ ലംബമായ വിന്യാസം സൂചിപ്പിക്കുന്നതിന്‌
ഈ ആട്രിബ്യൂട്ട്‌ ഉപയോഗിക്കുന്നു. ഇതിന്റെ വിലയായി top, bottom, middle,
baseline എന്നിവ നല്‍കാം.

കമ്പ്യൂട്ടര്‍ സയന്‍സ്‌ - XII

3. Bgcolor: ഏത്‌ അറയ്ക്കും (cell) ഒരു പ്രത്യേക പശ്ചാത്തലനിറം നല്‍കുന്നതിനാണ്‌
ഈ ആട്രിബ്യൂട്ട്‌ ഉപയോഗിക്കുന്നത്‌. <TABLE>, <TR>, <TD>/<TH> എന്നി
വയ്ക്കെല്ലാം Bgcolor ആട്രിബ്യൂട്ടുകള്‍ നല്‍കിയാലും <TH>/<TD> ടാഗിന്റെ
Bgcolor ആദ്രിബ്യയൂട്ടിന്‌ നല്‍കുന്ന വിലയായിരിക്കും അറയുടെ പശ്ചാത്തലനിറ
മായി പ്രദര്‍ശിപ്പിക്കുക.

4. Colspan: സാധാരണയായി ഒരു അറ ഒരു നിരയില്‍ മാത്രം ഒതുങ്ങുന്നതായിരി
ക്കും. എന്നാല്‍ ചില അറകളെ ഒന്നില്‍ കൂടുതല്‍ നിരകളിലേക്ക്‌ ചിലപ്പോള്‍ വ്യാപി
പ്പിക്കേണ്ടതായി വന്നേക്കാം. ഒരു അറ എത്ര നിരകളിലായി വ്യാപിച്ചിരിക്കണം
എന്നതനുസരിച്ച്‌ Colspan അആട്രിബ്യൂട്ടിന്റെ വിലനല്‍കാം. ഉദാഹരണം <TH
Colspan="3"> എന്നത്‌ ഒരു അറയെ (Cell) മുന്ന്‌ നിരകളിലായി വ്യാപിപ്പിക്കുന്നു.

5. Rowspan: Colspan-aM പോലെ തന്നെ എത്ര വരികളിലായി (row) ഒരു അറ
(cell) വ്യാപിച്ചിരിക്കുന്നു എന്നതിനാണ്‌ ഈ ആട്രിബ്യൂട്ട്‌ ഉപയോഗിക്കുന്നത്‌. ഉദാ
ഹരഞത്തിന്‌ <TD Rowspan="4"> എന്ന്‌ നല്‍കുമ്പോള്‍ 4 വരികളിലായി ഒരു
അറ വ്യാപിക്കുന്നു.

മുകളില്‍ പറഞ്ഞ ആദഭ്രിബ്യൂട്ടുകള്‍ ഉപയോഗിച്ച്‌ ഒരു പട്ടിക നിര്‍മിക്കുന്നതിനുള്ള HTML
കോഡ്‌ ഉദാഹരണം 5.14 ല്‍ നല്‍കിയിരിക്കുന്നു. വെബ്‌ പേജിന്റെ ചിത്രം 5.17 ല്‍
നല്‍കുന്നു.

എന്നീ ആട്രിബ്ുട്ടുകള്‍ ഉപയോഗിച്ച്‌

<HTML>
<HEAD> <TITLE> Students Registration </TITLE>
</HEAD>
<BODY>
<TABLE Border= "1" Cellspacing= "3" Cellpadding= "5">
<TR>
<TH Colspan= "3"> No. of Registered Students </TH>
</TR>
<TR>
SUE] ROWSE "2"> Year </TH> Students Registration - Mozill- © X
<TD> 2014 </TD> <TD> 75 </TD> [ത്ഞ്ഞ്ഞ്ഞ്ത്ത
</TR> (ഭി Students Registration oP ae
Sue No. of Registered Students
<TD> 2015 </TD> <TD> 88 </TD>
ളം Year 2014 75
</TABLE> 2015 58
<BODY>

ചിതം. 77: Rowspan, colspan
<HTML> എന്നാ? BASINS }5}408 ഉപയോഗിച്ച്‌
പട്ടിക MIG21A0}M)}

5,140. ഉപയോദിച്ചു കൊണ്ങുള്ള വെബ്‌ രൂപകല്‍ക്ന

പട്ടിക 5.1-ല്‍ കാണിച്ചിരിക്കുന്നതുപോലെ ക്യാന്‍സര്‍ രോഗികളുടെ വിശദാംശങ്ങള്‍
ഉള്‍ക്കൊള്ളുന്ന വെബ്‌ പേജ്‌ നിര്‍മിക്കാം. ഇതിന്റെ HTML കോഡ്‌, ഉദാഹരണം 3.15
ലും ടേബിളിന്റെ ചിത്രം 5.18 ലും നല്‍കിയിരിക്കുന്നു.

രങ്ങള്‍ അടങ്ങുന്ന വെബ്‌ പേജ്‌

<HTML>
<HEAD> <TITLE> CompleteTable </TITLE> </HEAD>
<BODY Bgcolor= "silver">
<TABLE Border= "3" Bordercolor= "red" Bgcolor= "#4EBOAF"
Align= "left" Cellspacing= "2" Cellpadding= "2"
Width= "50%">

<TR>
<TH Colspan= "5"> Number of cancer patients reported
at the hospital </TH>
</TR>
<TR Align= "center">
<TH Colspan= "2"> Year </TH>
<TH> 2012 </TH>
<TH> 2013 </TH>
<TH> 2014 </TH>
</TR>
<TR Align= "center">
<TH Rowspan= "4"> Cancer Origin </TH>
<TH> Smokers </TH>
<TD> 129 </TD>
<TD> 140 </TD>
<TD> 143 </TD>
</TR>
<TR Align= "center">
<TH> Pan users </TH>
<TD> 54 </TD>
<TD> 56 </TD>
<TD> 59 </TD>
</TR>
<TR Align= "center">
<TH> Alcohol users </TH>
<TD> 74 </TD>
<TD> 68 </TD>
<TD> 77 </TD>
</TR>

<TR Align= "center">

കമ്പ്യൂട്ടര്‍ സയന്‍സ്‌ - XII

<TH> Other cases </TH>
<TD> 95 </TD>
<TD> 93 </TD>
<TD> 92 </TD>

</TR>
<TRA

lign= "center"™>

<TH Colspan= "2"> TOTAL Patients </TH>
<TD> 352 </TD>
<TD> 357 </TD>
<TD> 371 </TD>

</TR>

</TABLE>
</BODY>
</HTML>

നമുക്കു ചെയ്യാം

CompleteTable - Mozilla Firefox

File Edit View History Bookmarks Tools Help

[൫ CompleteTable

aime 5.18: Bgcolor, Rowspan, Colspan, Align, Valign aganlat ഉപയോഗിച്ച്‌
AJIBIVG രോഗികളുടെ MAU പട്ടികപ്പെടുത്മി!യ വെബ്ബ്‌ പേജ്‌

നിങ്ങളുടെ സ്‌കൂളിലെ വിവിധ രണ്ടാം ഭാഷകള്‍ പഠിക്കുന്ന കുട്ടിക
ളുടെ എണ്ണം പ്രദര്‍ശിപ്പിക്കുന്ന ടേബിള്‍ നിര്‍മിക്കുക. ഈ ടേബിളില്‍
ഹയര്‍ സെക്കന്ററി വിഭാഗത്തിലെ ഓരോ ക്ലാസിലെയും വിവരങ്ങള്‍
ഉണ്ടായിരിക്കണം.

5.4.5 <CAPTION> ടാഗ്‌ ഉപയോഗിച്ച്‌ ടേബിളിന്റെ ശീര്‍ഷകം

<CAPTION> ടാഗ്‌ ഉപയോഗിച്ച്‌ ഒരു പട്ടികയുടെ ശീര്‍ഷകം നല്‍കാം. ഈ ടാഗ്‌ ഉപയോ
ഗിച്ച്‌ ഒരു പട്ടികയെക്കുറിച്ചുള്ള വിവരണം അതിന്റെ ശീര്‍ഷകമായി എളുപ്പത്തില്‍ നല്‍കാം.
നമുക്ക്‌ ചിത്രം 5.18 ല്‍ കാണിച്ചിരിക്കുന്ന പട്ടികയ്ക്ക്‌ ഒരു ശീര്‍ഷകം നല്‍കി പരിഷ്കരി
ക്കണമെന്ന്‌ കരുതുക. ഉദാഹരണം 5.15 ലെ 111171. കോഡിലെ <TR> ടാഗിന്‌ മുന്‍പുള്ള
ഭാഗത്തിന്‌ താഴെ കൊടുക്കുന്നതുപോലെ മാറ്റം വരുത്താം.

5,141. ഉപയോദിച്ചു കൊണ്ങുള്ള വെബ്‌ രൂപകല്‍ക്ന

<TABLE Border= "3" Bordercolor= "red" Bgcolor= "skyblue"
Align= "left" Cellspacing= "2" Cellpadding= "2"
Width= "50%8">
<CAPTION> Number of new cancer patients reported at the
hospital during 2012-14

</CAPTION>
CompleteTable - Mozilla Firefox

File Edit View History Bookmarks Tools Help
[6] CompleteTable +
Number of new cancer patients reported at the hospital
during

ഇങ്ങനെ ഉണ്ടാക്കിയ പട്ടിക.
allo 5.19 ല്‍ കാണിച്ചിരി
ക്കുന്നു.

2MOo 5.19: ശിര്ഷകം MAA} പുതുക്കിയ പട്ടിക

നിങ്ങളുടെ പുരോഗതി അറിയാം
1. <TABLE> ടാഗുമായി ബന്ധപ്പെട്ട രണ്ട്‌ ടാഗുകളുടെ പേരെഴുതുക.

. താഴെകൊടുത്തിരിക്കുന്നവയില്‍ വ്യത്യസ്തമായത്‌ തിരഞ്ഞെടുക്കു
കു.

a. TABLE b. TR c. TH d. COLSPAN

. <TD>, <TH> എന്നീ ടാഗുകളുടെ വ്യത്യാസങ്ങള്‍ എഴുതുക.

. ഒരു empty ടാഗാണ്‌ <TABLE> ഈ പ്രസ്താവന ശരിയോ തെറ്റോ
എന്ന്‌ എഴുതുക.
൭. <TR> ടാഗിന്റെ ഏതെങ്കിലും രണ്ട്‌ ആട്രിബ്യയൂട്ടുകള്‍ എഴുതുക.

൭.5 ബ്രൌസര്‍ ജാലകത്തിന്റെ വിഭജനം
(Dividing the browser window)

നമുക്ക്‌ ചിലപ്പോള്‍ ഒരു വെബ്‌ (്രൌ൭സര്‍ ജാലകത്തില്‍ ഒന്നില്‍ കൂടുതല്‍ വെബ്‌ പേജു
കള്‍ ഉള്‍പ്പെടുത്തേണ്ടിവരും. ബ്രൌസര്‍ ജാലകത്തെ രണ്ടോ അതിലധികമോ ഭാഗങ്ങ
ളാക്കി തിരിച്ച്‌ ഒരേ സമയം ഓരോ ഭാഗത്തും വ്ൃത്യസ്തങ്ങളായ വെബ്‌ പേജുകള്‍
ഉള്‍ക്കൊള്ളിക്കാം. HTML ല്‍ ബ്രൌസര്‍ ജാലകത്തെ വിവിധ ഭാഗങ്ങളായി വിഭജിക്കു
വാന്‍ <FRAMESET> എന്ന ടാഗ്‌ സാകര്യം നല്‍കുന്നു. ഇങ്ങനെയുള്ള ഓരോ ഭാഗ
ത്തിലും ഓരോ വെബ്‌ പേജുകള്‍ ഉള്‍ക്കൊള്ളിക്കാനാവും. ഒരു <FRAMESET> ഉപയോ

കമ്പ്യൂട്ടര്‍ സയന്‍സ്‌ - XII

ഗിച്ച്‌ നിര്‍മിക്കുന്ന ഓരോ വിഭാഗത്തിനേ [81777

യും ഫ്രെയിം എന്നു വിളിക്കുന്നു. മൂന്ന്‌ File Edit View History Bookmarks Tools Help
6) Asimple Frameset oF bl

ഫ്രെയിമുകള്‍ ഉള്‍ക്കൊള്ളുന്ന ലളിതമായ
ഫ്രെയിം സെറ്റിന്റെ ചിത്രം 5.20-ല്‍ ചിത്രീ

കരിച്ചിരിക്കുന്നു. നമുക്ക്‌ <FRAMESET>, | SECOND FRAME HERE
<FRAME> എന്നീ ടാഗുകള്‍ ഉപയോഗിച്ച്‌
ഒരു ഫ്രെയിം സെറ്റ്‌ നിര്‍മിക്കാം.

5.5.1 <FRAMESET> ടാഗ്‌

ഒരു കണ്ടയ്നര്‍ ടാഗായ <FRAMESET> ചിത്രം 5.20: മുന്ന്‌ ്ഫഥെയിമുകശി
(MDDS ജാലകത്തെ വിവിധ ഫ്രെയിം അടങ്ങിയ ഒരു കെഫയിംസെറ്റ്‌
ഭാഗങ്ങളായി വിഭജിക്കുന്നു. <FRAMESET> </FRAMESET> എന്നീ ടാഗുകളുടെ ഇടയി
ലാണ്‌ ഫ്രെയിമുകള്‍ നിര്‍വചിക്കുന്നത്‌. ഈ ടാഗിന്റെ പ്രധാനപ്പെട്ട ആട്രിബ്യൂട്ടുകള്‍
ചുവടെ ചേര്‍ക്കുന്നു.

1. Cols: ഈ ആഭ്രിബ്യൂട്ട്‌ ഫ്രെയിംസെറ്റ്‌ പേജിലെ ലംബമായ ഫ്രെയിമുകളുടെ
എണ്ണവും അവയുടെ അളവുകളും നിര്‍ണയിക്കുന്നു. ഫ്രെയിമിന്റെ വീതി മൊത്തം
വീതിയുടെ ശതമാനത്തിലോ പിക്സലിന്റെ എണ്ണത്തിലോ നല്‍കാം. ഉദാഹരണ
മായി <FRAMESET Cols "30,500, *"> എന്നത്‌ മുന്ന്‌ ലംബമായ ഫ്രെയി
മുകള്‍ സൃഷ്ടിക്കുന്നു. ഇതില്‍ ആദ്യത്തെ ഫ്രെയിം വിന്‍ഡോയുടെ മൊത്തം വീതി
യുടെ 30 ശതമാനവും അടുത്തതിന്‌ 500 പിക്സല്‍ സ്ഥലവും മുന്നാമത്തെ ഫ്രെയി
മിന്റെ അളവ്‌ * ചിഹ്നത്തിനാല്‍ രേഖപ്പെടുത്തിയിരിക്കുന്നതിനാല്‍ ആകെ വീതി
യുടെ ബാക്കിവരുന്ന സ്ഥലവും ആയിരിക്കും.

2. Rows: ഈ ആട്രിബ്യൂട്ട്‌ ൨൦1൪ നെ പോലെ തിരശ്ചീനമായ ഫ്രെയിമുകളുടെ എണ്ണവും
അളവും നിര്‍വചിക്കുന്നു.

3. Border: ഈ ആട്രിബ്യൂട്ട്‌ ഫ്രെയിമുകളുടെ അതിരിന്റെ (Border) കനം വ്യക്തമാ
ക്കുന്നു. ഇതിന്റെ വില പിക്സലിന്റെ എണ്ണമായിട്ടാണ്‌ നല്‍കുന്നത്‌.

4. Bordercolor: ഈ ആട്രിബ്യൂട്ട്‌ ഫ്രെയിമുകളുടെ അതിരിന്റെ (border) നിറം

നല്‍കുവാന്‍ ഉപയോഗിക്കുന്നു.

5.5.2 <FRAME> ടാഗ്‌

<FRAMESET> ടാഗിനുള്ളില്‍ ഫ്രെയിമുകള്‍ നിര്‍വചിക്കുന്ന എംപ്റ്റി ടാഗാണിത്‌.
<FRAMESET> ടാഗിന്‌ ഉള്ളിലെ ഓരോ ഭാഗത്തിനും തുല്യമായി <FRAME> ടാഗ്‌ നല്‍ക
ണം. ഫ്രെയിമിനകത്ത്‌ 11171. പേജ്‌ പ്രദര്‍ശിപ്പിക്കുവാന്‍ ഉപയോഗിക്കുന്ന Sre ആദഭ്രി

ബ്യൂട്ട്‌ എപ്പോഴും <FRAME> ടാഗിനൊപ്പം ഉപയോഗിച്ചിരിക്കണം. <FRAME> ടാഗുമായി
ബന്ധപ്പെട്ട (പ്രധാന ആഭ്രിബ്യൂട്ടുകള്‍ ചുവടെ ചേര്‍ക്കുന്നു.

5,141. ഉപയോദിച്ചു കൊണ്ങുള്ള വെബ്‌ രൂപകല്‍ക്ന

1. Sre: നമ്മള്‍ മുമ്പ്‌ ചര്‍ച്ചചെയ്തതുപോലെ, ഫ്രെയിമില്‍ പ്രദര്‍ശിപ്പിക്കേണ്ട വെബ്‌
പേജിന്റെ URL സുചിപ്പിക്കുന്നതിനാണ്‌ Src ആട്രിബ്യൂട്ട്‌ ഉപയോഗിക്കുന്നത്‌. ഉദാ
ഹരണമായി <FRAME Src = "“"school.html"> എന്നത്‌ schoolhtal എന്ന
പേജിനെ ഫ്രെയിമില്‍ പ്രദര്‍ശിപ്പിക്കുന്നു.

2. Scrolling: ഈ ആട്രിബ്യൂട്ട്‌ ഫ്രെയിമിലെ HTML പേജില്‍ ലംബവും തിരശ്ചീന
വുമായ സ്‌ക്രോള്‍ബാറുകള്‍ പ്രദര്‍ശിപ്പിക്കണമോ വേണ്ടയോ എന്ന്‌ തീരുമാനിക്കു
ന്നു. Scrolling ആഭ്രിബ്യൂട്ടിന്‌ Yes,No, Auto എന്നീ വിലകള്‍ നല്‍കാം. Yes
എന്ന വില നല്‍കുമ്പോള്‍ സ്‌ക്രോള്‍ ബാറുകള്‍ സ്ഥിരമായി പ്രതൃക്ഷപ്പെടും. No
എന്ന വില നല്‍കുമ്പോള്‍ സ്‌ക്രോള്‍ ബാര്‍ ഒന്നും പ്രതൃക്ഷപ്പെടുന്നില്ല. ഇതിന്റെ
തനതുവിലയായ Auto നല്‍കിയാല്‍ ഫ്രെയിമിന്റെ ഉള്ളടക്കം അതിന്റെ വലുപ്പത്തെ
ക്കാള്‍ അധികമാകുമ്പോള്‍ സ്‌ക്രോള്‍ബാറുകള്‍ പ്രത്യക്ഷപ്പെടും.

3. Noresize: ഉപയോക്താവ്‌ ഒരു പ്രത്യേക ഫ്രെയിമിന്റെ ബോര്‍ഡറുകള്‍ വലിച്ച്‌
നീട്ടാതിരിക്കാന്‍ ഈ ആട്രിബ്യൂട്ട്‌ ഉപയോഗിക്കുന്നു. ഈ ആഭ്രിബ്യൂട്ടിന്‌ വിലകള്‍
ആവശ്യമില്ല. ഉദാഹരണമായി <FRAME Src= “school.html" Noresize>.

4. Marginwidth and Marginheight: ഒരു ഫ്രെയിമിലെ ലംബവും തിരശ്ചീനവു
മായ മാര്‍ജിനുകള്‍ (margins) പിക്സലിന്റെ (pixels) എണ്ണത്തില്‍ നല്‍കുന്നതിന്‌
യഥാക്രമം 149292൩൦ ൦൨, 142921൨൦ 91൨ എന്നീ ആഭ്രിബ്യൂട്ടുകള്‍ ഉപയോഗി
ക്കുന്നു.

5. Name: ഫ്രെയിമിന്‌ പേര്‍ നല്‍കുന്നതിന്‌ Name ആഭ്രിബ്യൂട്ട്‌ ഉപയോഗിക്കുന്നു.
തുടര്‍ന്ന്‌ വരുന്ന [1 111. കോഡില്‍ ഫ്രെയിമിനെ സൂചിപ്പിക്കുന്നതിനായി ഈ പേര്‍
ഉപയോഗിക്കാം.

ചിത്രം 5.20 ല്‍ കാണിച്ചിരിക്കുന്ന ഫ്രെയിം arg നിര്‍മിക്കാന്‍ ചുവടെ ചേര്‍ക്കുന്ന
HTML കോഡ്‌ ഉപയോഗിക്കാം. മൂന്ന്‌ HTML പേജുകളായ sampleframe!.btml,
sampleframe2. html, sampleframe3 bin എന്നിവ ഇതിന്‌ മുമ്പേ നിര്‍മിച്ചിട്ടുണ്ട്‌ എന്ന്‌ കരു
തുക.
<HTML>
<HEAD> <TITLE> A simple Frameset </TITLE> </HEAD>
<FRAMESET Rows= "20%, 30%, റോം
<FRAME Src= "sampleframel.html">
<FRAME Src= "sampleframe2.html">
<FRAME Src= "sampleframe3.html">
</FRAMESET>
</HTML>

5.5.3 ഫ്രെയിമിനെ ടാര്‍ഗറ്റ്‌ ചെയ്യുന്നു (Targeting frames)

ഒരു ഫ്രെയിംസെറ്റിലുള്ള ഏതെങ്കിലുമൊരു ഫ്രെയിമിലെ പേജില്‍ നല്‍കുന്ന ഹൈപ്പര്‍
ലിങ്കിലൂടെ ബന്ധിപ്പിക്കപ്പെട്ട മറ്റൊരു പേജ്‌ നാം ഉദ്ദേശിക്കുന്ന ഫ്രെയിമില്‍ ദൃശ്യമാ
ക്കാന്‍ സാധിക്കും. നമ്മള്‍ ഫ്രെയിമിലെ ലിങ്കില്‍ ക്ലിക്ക്‌ ചെയ്യുമ്പോള്‍ ബന്ധപ്പെട്ട പേജ്‌
മറ്റൊരു ഫ്രെയിമില്‍ തുറക്കും. ഇതിനുവേണ്ടി ആദ്യം നമ്മള്‍ ഉദ്ദിഷ്ട ഫ്രെയിമിന്‌ 11ദണട

കമ്പ്യൂട്ടര്‍ സയന്‍സ്‌ - XII

ആഭ്രിബ്യൂട്ട ഉപയോഗിച്ച്‌ പേര്‍ നല്‍കണം. അതിനുശേഷം ലിങ്കിന്റെ <A> ടാഗിന്റെ Target
ആട്രിബ്യൂട്ട്‌ ഉപയോഗിച്ച്‌ പേര്‍ നല്‍കിയ ഫ്രെയിമിനെ സൂചിപ്പിക്കാം.

മൂന്ന്‌ HTML ഫയലുകളായ biohimlpoem.bhiml fiction. biml എന്നിവ
നിര്‍മിച്ച്‌ അതില്‍ ആത്മകഥ, കവിത, നോവല്‍ എന്നീ ഗണത്തിലുള്ള പുസ്ത

നമുക്കു ചെയ്യാം റ മുടെ ലിസ്റ്റ്‌ തയാറാക്കുക.

ഇപ്പോള്‍ രണ്ട്‌ ഫ്രെയിമുകള്‍ ഉള്‍പ്പെടുന്ന ഒരു വെബ്‌ പേജ്‌ നിര്‍മിക്കാം. ഇതില്‍ ഒന്നാ
മത്തേത്‌ ഈ ഫയലുകളിലേക്കുള്ള ലിങ്കും രണ്ടാമത്തേത്‌ ലിങ്കുമായി ബന്ധപ്പെട്ട വെബ്‌
പേജ്‌ തുറക്കുന്നതിനും ഉപയോഗിക്കുന്നു. ഒരു ഉപയോക്താവ്‌ ഒന്നാമത്തെ ഫ്രെയിമില്‍
സൂചിപ്പിച്ച ഏതെങ്കിലും ഒരു ലിങ്കില്‍ ക്ലിക്കു ചെയ്യുമ്പോള്‍ അതിന്‌ അനുബന്ധമായ
ഫയല്‍ രണ്ടാമത്തെ ഫ്രെയിമില്‍ തുറക്കുന്നു.

മുകളില്‍ പ്രതിപാദിച്ചിരിക്കുന്ന മുന്ന്‌ ഫയലുകള്‍ നിര്‍മിച്ചതിനുശേഷം ഉദാഹരണം 5.16
ല്‍ കൊടുത്തിരിക്കുന്ന 111141. കോഡ്‌ ഉപയോഗിച്ചാല്‍ Target ആഭ്രിബ്യൂട്ടിന്റെ പ്രവര്‍ത്ത
നത്തെ കുറിച്ച്‌ മനസിലാക്കാം.

വയ്ക്കുന്നതിന്റെ ഉദാഹരണം

താഴെ കൊടുത്തിരിക്കുന്ന കോഡ്‌ മ്മക്ഥ.722/ എന്ന ഫയലില്‍ സേവ്‌ ചെയ്യുക.
<HTML>
<HEAD> <TITLE> Left Frame </TITLE> </HEAD>
<BODY Bgcolor= "#OOAFFE" Text= "#282D2F">
<H2> Select the option </H2>
<FONT Size= "5">
<A Href= "bio.html" Target="right_frame">Biography</A><BR>
<A Href= "poem.html" Target="right_frame">Poetry</A><BR>
<A Href= "fiction.html" Target="right_frame">Fiction</A>

< / FONT> Targeting Frames - Mozilla Firefox
</BODY> File Edit View History Bookmarks Tools Help
</HTML> ഭി Targeting Frames ലിം
ഇനി താഴെ കൊടുത്തിരിക്കുന്ന കോഡ്‌ List of Biographies
ഒരു ഫയലില്‍ സേവ്‌ ചെയ്യാം. 1. Mahatma Gandhi
<HTML> 2. Jawaharlal Nehru

3. Nelson Mandela
<HEAD> <TITLE> Targeting 4. Martin Luther King

5. Mother Ti
Frames </TITLE> </HEAD> omer weresa
<FRAMESET Cols= "200, *">
<FRAME Src= "main.html"

2a 5.21: debs ലകഷ്യം
N a m € = വയ്ക്കുന്ന HANNE പേജ്‌
"left_frame™>
<FRAME Name= "right _frame">
</FRAMESET>

</HTML>

5,140. ഉപയോദിച്ചു കൊണ്ങുള്ള വെബ്‌ രൂപകല്‍ക്ന

മുകളിലെ ഡോക്യുമെന്റ്‌ ്രൌസറിന്‌ നല്‍കിയാല്‍ രണ്ട്‌ ഫ്രെയിമുകള്‍ ഉള്‍ക്കൊള്ളുന്ന
വെബ്‌ പേജ്‌ തുറക്കും. ര്രൌ൭സര്‍ ജാലകത്തിലെ ആദ്യത്തെ നിരയില്‍ main.hinl eos
ക്കുകയും രണ്ടാമത്തെ നിര ഒഴിഞ്ഞുകിടക്കുകയും ചെയ്യും. ആ ഫ്രെയിമിന്‌ വേണ്ടി Sre
ആട്രിബ്യൂട്ട്‌ സുചിപ്പിച്ചിട്ടില്ല. എന്നാല്‍ 719൨൦ 7ദ൩ട എന്ന പേര്‍ നല്‍കിയിട്ടുണ്ട്‌ എന്ന
കാര്യം ശ്രദ്ധിക്കുക. ഇതില്‍ ആദ്യത്തെ ലിങ്കായ Biography തിരഞ്ഞെടുത്താല്‍ ചിത്രം
5.21 ല്‍ കാണുന്നതു പോലെ Liahinl എന്ന ഫയലിന്റെ ഉള്ളടക്കം രണ്ടാമത്തെ ഫ്രെയി
മില്‍ തുറന്നു വരും. വെബ്‌ പേജിലെ രണ്ടാമത്തെ ഫ്രെയിമില്‍ കാണുന്ന bahiml എന്ന

ഫയലിന്റെ ഉള്ളടക്കം ചി്രത്തില്‍ കാണിച്ചിരിക്കുന്നതുപോലെ ആണെന്ന്‌ കരുതുക.
ചിധ്രത്തിലെ ലിങ്കുകളുടെ നിറവ്യത്യാസവും (ശ്രദ്ധിക്കുക.

main.btiml എന്ന HTML, പേജില്‍ മൂന്ന്‌ ജോഡി <A> ടാഗുകള്‍ മുന്ന്‌ HTML ഫയലുകളി
ലേക്ക്‌ ലിങ്‌: ചെയ്യുവാന്‍ ഉള്‍പ്പെടുത്തിയിരിക്കുന്നു. ടാഗിന്റെ ആട്രിബ്യൂട്ടായ Target
ഉപയോഗിച്ച്‌ ലി; ചെയ്ത ഫയല്‍ തുറക്കേണ്ട ഫ്രെയിമിനെ സൂചിപ്പിക്കുന്നു. ഫ്രെയി
മിന്‌ പേര്‍ കൊടുക്കേണ്ടതിന്റെ ആവശ്യകത ഇവിടെ സ്പഷ്ടമാകുന്നു.

HTML ന്റെ 5-00 പതിപ്പ്‌ <FRAMESET> നെ പിന്തുണയ്ക്കുന്നില്ല.
ഫ്രെയിംസെറ്റിന്റെ ഉപയോഗത്തിന്‌ എതിരായി ധാരാളം വാദങ്ങള്‍ ഉയര്‍ന്നു
വരുന്നു. ഇതില്‍ ചിലത്‌ ചുവടെ ചേര്‍ക്കുന്നു.

൭ ഫ്രെയിംസെറ്റിനുള്ളില്‍ സാധാരണയായി ബ്രൌസറിന്റെ ബാക്ക്ബട്ടണ്‍ പ്രവര്‍ത്തനക്ഷ
മമല്ല.

൭ ഒരു ഫ്രെയിം സ്റ്റിനുള്ളില്‍ ഒരു പ്രതേയക ഡോക്യുമെന്റ്‌ തുറക്കുവാന്‍ ബുദ്ധിമുട്ടാണ്‌.

൭ ഒരു പ്രത്യേക ഫ്രെയിം റീലോഡ്‌ ചെയ്യാന്‍ ശ്രമിക്കുമ്പോള്‍ മൊത്തത്തിലുള്ള ഫ്രെയിം
സ്റ്റ്‌ റീലോഡ്‌ ചെയ്തേക്കാം. ഇതിന്റെ ഫലമായി ഫ്രെയിമിന്റെ ഉള്ളടക്കങ്ങളെ
അതിന്റെ തനതായ ഉറവിടത്തിലേക്ക്‌ റീലോഡ്‌ ചെയ്യും.

൪൭ ഫ്രെയിമിലെ ഡോകുൃുമെന്റുകളിലൂടെ നാവിഗേറ്റ്‌ ചെയ്യാന്‍ സര്‍ച്ച്‌ എന്‍ജിനുകള്‍ക്ക്‌
ബുദ്ധിമുട്ടാണ്‌.

൭ ഒരു ഫ്രെയിംസെറ്റിന്റെ ഉള്ളടക്കം പ്രിന്റ്‌ ചെയ്യുവാന്‍ ബുദ്ധിമുട്ടാണ്‌.

൭ ഒരു ഫ്രെയിം സെറ്റിന്റെ ഉള്ളടക്കം ബുക്ക്‌ മാര്‍ക്ക്‌ ചെയ്യുവാന്‍ ബുദ്ധിമുട്ടാണ്‌.

5.5.4 ഫ്രെയിംസെറ്റുകളുടെ നെസ്സ്റിങ്‌ (Nesting of framesets)

ചിത്രം 5.20 ലും 5.21 ലും ബ്രൌസര്‍ ജാലകത്തിലെ ഫ്രെയിമുകള്‍ നമുക്ക്‌ കാണാന്‍
സാധിക്കും. ആദ്യത്തെ ചിത്രത്തില്‍ ബ്രൌസര്‍ ജാലകം തിരശ്ചീനമായ മുന്ന്‌ ഫ്രെയിമുക
ളായി തിരിക്കുന്നു. ചിതം 5.22-ല്‍ കാണിച്ചിരി

ഫ്രയിം 1

ക്കുന്നതുപോലെ ര്രൌസര്‍ ജാലകത്തെ ലംബ

മായ രണ്ട്‌ ഫ്രെയിമുകളായി വിഭജിക്കണമെന്ന്‌
കരുതുക. ഇത്‌ കൂട്ടിയിണക്കിയ ഫ്രെയിംസെറ്റു ഫ്രയിം 3

കള്‍ ഉപയോഗിച്ച്‌ സാധ്യമാകും. ഒരു ഫ്രെയിം

aloo 5.22: xanowhaavglod amgylat

കമ്പ്യൂട്ടര്‍ സയന്‍സ്‌ - XII

AMIN BAG മറ്റൊരു ഫ്രെയിം സ്റ്റ്‌ കൂട്ടിച്ചേര്‍ക്കുന്ന പ്രവര്‍ത്തനത്തെ നെസ്റ്റിങ്‌ ഓഫ്‌
ഫ്രെയിംസ്റ്്റ്‌ എന്നു വിളിക്കുന്നു.

ചിര്രം 5.22-ല്‍ കാണിച്ചിരിക്കുന്നതുപോലെ ഫ്രെയിമുകള്‍ കിട്ടാനാവശ്യമായ ഫ്രെയിം
സെറ്റ്‌ നിര്‍മിക്കുന്നതിനുള്ള വിവിധ ഘട്ടങ്ങള്‍ ചുവടെ ചേര്‍ക്കുന്നു.
1. രണ്ട്‌ വരികളായി വിഭജിക്കുന്ന ആദ്യത്തെ ഫ്രെയിം സ്റ്റ്‌ നിര്‍മിക്കുക.
<FRAMESET Rows= "85, *">
<FRAME Src= "sampleframel.html">
</FRAMESET>

(ബ്രൌസര്‍ ജാലകത്തെ തിരശ്ചീനമായ രണ്ട്‌ ഫ്രെയിമുകളാക്കി വിഭജിക്കുകയും
ആദ്യത്തെ വരി sampleframe! html എന്നതിന്‌ മാറ്റി വയ്ക്കുകയും ചെയ്യുക.
2. ഉണ്ടാമത്തെ വരി സ്വതന്ത്രമായി ഇരിക്കുകയാണല്ലോ? ഇപ്പോള്‍ നമ്മള്‍ ഇതിനെ
ലംബമായ രണ്ട്‌ ഫ്രെയിമുകളാക്കി വിഭജിക്കുന്നു. അതിനായി രണ്ടാമത്തെ <FRAME>
ടാഗിന്‌ പകരം പുതിയൊരു <FRAMESET> ടാഗ്‌ തുറക്കുന്നു.
<FRAMESET Rows= "85, *">
<FRAME Src= "sampleframel.html">
<FRAMESET Cols= "220, *">
</FRAMESET>

</FRAMESET>

ഈ കോഡ്‌ രണ്ടാമത്തെ വരിയെ രണ്ട്‌ നിരയായി ഭാഗിക്കുന്നു. ഇപ്പോള്‍ അകത്തെ
ഫ്രെയിം സ്െെറ്റിനുള്ളില്‍ നമുക്ക്‌ രണ്ട്‌ <FRAME> ടാഗുകള്‍ കൂട്ടിച്ചേര്‍ത്ത്‌ HTML കോഡ്‌
പൂര്‍ത്തിയാക്കാം. ഇതിന്റെ ഉദാഹരണം 5.17 ല്‍ കാണിച്ചിരിക്കുന്നു. ഇതിന്റെ വെബ്‌
പേജിന്റെ ചിത്രം 5.23 ല്‍ കാണിക്കുന്നു. ഇതില്‍ ഉപയോഗിച്ചിരിക്കുന്ന മൂന്ന്‌ HTML
പേജുകള്‍ ചിത്രം 5.17 ല്‍ കാണിച്ചിരിക്കുന്നതുപോലെ നേരത്തേ തന്നെ നിര്‍മിച്ചിട്ടുണ്ട്‌
എന്ന്‌ കരുതുക.

നറ ആശയം വിശദമാക്കുന്നു

<HTML>
<HEAD>
<TITLE> nesting frames </TITLE>
</HEAD>
<FRAMESET Rows= "85, *">
<FRAME Src= "sampleframel.html">
<FRAMESET Cols= "200, *">
<FRAME Src= "sampleframe2.html">
<FRAME Src= "sampleframe3.html">
</FRAMESET>
</FRAMESET>
</HTML>

S.HTML ഉപയോദിച്ചു കൊണ്ങുള്ള വെബ്‌ രൂപകല്‍ക്ന

5.5.5 <NOFRAMES> ടാഗ്‌

പഴയ ചില ബ്രൌസറുകള്‍ ഫ്രെയിമുകളെ പിന്തു nesting frames - Mozilla Firefox

ണയ്ക്കുന്നില്ല. ഈ സാഹചര്യം ര്രൌസറിന്‌ le Edit View History Bookmarks Tools Help
ഉപയോക്താവിനെ അറിയിക്കേണ്ടതുണ്ട്‌. ഇതി
നായി <NOFRAMES> </NOFRAMES> ടാഗ്‌
ജോഡികള്‍ ഉപയോഗിച്ച്‌ ഫ്രെയിംസ്‌ പിന്തുണ
യ്ക്കാത്ത ര്രൌൂസര്‍ ജാലകത്തില്‍ ചില വിവര

nesting frames.

SECOND
FRAME HERE

ങ്ങള്‍ പ്രദര്‍ശിപ്പിക്കാനാവും. താഴെകൊടുത്തിരി
ക്കുന്ന കോഡ്‌ <NOFRAMES> ടാഗിന്റെ ഉപ
യോഗം വ്യക്തമാക്കുന്നു.

<HTML> aero 5.23: നെസ്‌ ഒഹ്രയിം സെറ്റ്‌
<HEAD> <TITLE> A simple

Frameset </TITLE>
</HEAD>
<FRAMESET Rows= "20%, 305, നം
<FRAME Src= "sampleframel.html">
<FRAME Src= "sampleframe2.html">
<FRAME Src= "sampleframe3.html">

</FRAMESET>
<NOFRAMES>
<P> Your browser doesnot support frames.<BR>
Click <A Href="index.htm">here... </A></P>
</NOFRAMES>
</HTML>

ബ്രൌസര്‍ <FRAMESET> ടാഗ്‌ പിന്തുണയ്ക്കുന്നില്ലെങ്കില്‍, പകരമായി "Click here..."
എന്ന സന്ദേശത്തോട്‌ കൂടി 7/൧ ലേക്കുള്ള ലിങ്ക: ലഭ്യമാകും.

നിങ്ങളുടെ പുരോഗതി അറിയുക

1. <FRAMESET Rows="100,*"> എന്നത്‌ ബ്രൌസര്‍ ജാലകത്തെ
കം ഭാഗങ്ങളാക്കി വിഭജിക്കുന്നു.

<FRAME> ടാഗിന്റെ ഏതെങ്കിലും മൂന്ന്‌ ആട്രിബ്യൂട്ടുകള്‍ എഴുതുക.
നെസ്റ്റഡ്‌ ഫ്രെയിംസെറ്റ്‌ എന്നാല്‍ എന്ത്‌?

<NOFRAME> ടാഗിന്റെ ഉപയോഗം എന്താണ്‌?

ar YN

ഫ്രെയിംസെറ്റ്‌ പേജിന്‌ <BODY> ഭാഗത്തിന്റെ ആവശ്യകത ഇല്ല.
ശരിയോ തെറ്റോ?

കമ്പ്യൂട്ടര്‍ സയന്‍സ്‌ - XII

5.6 വെബ്‌ പേജുകളിലെ ഫോമുകള്‍ (Forms in web pages)

ഉപയോക്താവില്‍ നിന്ന്‌ ഡാറ്റ ശേഖരിച്ച്‌ അവയില്‍ വിവിധ പ്രവര്‍ത്തനങ്ങള്‍ നടത്തു
വാന്‍ 11171. ഫോമുകള്‍ ആവശ്യമാണ്‌. ഉദാഹരണമായി, കേരളത്തില്‍ ഹയര്‍ സെക്കന്ററി
വിദ്യാഭ്യാസത്തിനായി XT-90 ക്ലാസിലെ പ്രവേശനത്തിന്‌ www.hscap.kerala.gov.in എന്ന
വെബ്സൈറ്റില്‍ നിങ്ങളുടെ Gold, SSLC രജിസ്റ്റര്‍ നമ്പര്‍, ഗ്രേഡുകള്‍, ആവശ്യമുള്ള
വിഷയങ്ങള്‍, സ്‌കൂള്‍ തുടങ്ങിയ വിവരങ്ങള്‍ നല്‍കേണ്ടതുണ്ട്‌. ഇതിനായി നമുക്ക്‌ HTML
ഫോം ഉപയോഗിക്കാം.

ഉപയോക്താവില്‍ നിന്ന്‌ വിവരങ്ങള്‍ ഒരു HTML ഫോമിലൂടെ സ്വീകരിച്ച്‌ ബാക്ക്‌ -എന്‍ഡ്‌
ആപ്ലിക്കേഷനുകളായ കോമണ്‍ഗേറ്റ്വേ ഇന്റര്‍ഫെസ്‌ (CGI) ആക്ടീവ്‌ സെര്‍വര്‍ പേജു
കള്‍ (ASP), PHP തുടങ്ങിയവയിലേക്ക്‌ ഡാറ്റാപ്രോസസിങ്‌ നടത്തുവാനായി അയയ്ക്കു
ന്നു. മാമത്തെ അധ്യായത്തില്‍ ഈ സാങ്കേതിക വിദ്യയെക്കുറിച്ച്‌ കൂടുതലായി പഠി
ക്കാം. ഒരു 11171. ഫോമിന്‌ രണ്ട്‌ ഘടകങ്ങള്‍ ഉണ്ട്‌: <FORM> കണ്ടെയ്നറും, അവ
യ്ക്കുള്ളില്‍ സ്ഥാപിക്കാവുന്ന വിവിധ കണ്‍ദ്രോളുകളും. ടെക്സ്റ്റ്‌ ബോക്സ്‌, ലിസ്റ്റ്‌, ടെക്സ്റ്റ്‌
ഏരിയ, ഡ്രോപ്‌-ഡൌണ്‍ മെനുകള്‍, റേഡിയോ ബട്ടണുകള്‍, ചെക്ക്‌ ബോക്സ്‌ തുടങ്ങിയവ
വിവിധ തരത്തിലുള്ള ഫോം കണ്‍ട്രോളുകളാണ്‌.

5.6.1 <FORM> ടാഗ്‌

ഫോം നിര്‍മിക്കുന്നതിനുള്ള കണ്ടയ്നര്‍ ആയി <FORM> ടാഗ്‌ പ്രവര്‍ത്തിക്കുന്നു. <FORM>
ല്‍ ആരംഭിക്കുന്നതും </FORM> ല്‍ അവസാനിക്കുന്നതുമായ ടാഗ്‌ ജോഡി ഉപയോഗി
ച്ചാണ്‌ ഫോം നിര്‍മിക്കുന്നത്‌. ഒരു വെബ്‌ ്രൌസറിന്‌ ഫോമില്‍ കൂടി മാത്രമേ വിവര
ങ്ങള്‍ ശേഖരിക്കുവാന്‍ കഴിയു. ശേഖരിച്ച ഡാറ്റ കൈകാര്യം ചെയ്യാന്‍ ചില ബാക്ക്‌--
എന്‍ഡ്‌ ആപ്ലിക്കേഷനുകള്‍ ഉപയോഗിക്കണം. ഇതിനായി ഫോം ഹാന്‍ഡ്ലറുകളായ
(Form handler) CGI, JavaScript, PHP എന്നിവ ഉപയോഗിക്കാം. ഒരു ഫോമില്‍ നിന്ന്‌
ശേഖരിച്ച എല്ലാ ഇന്‍പുട്ടുകളും ഒരേ ഫോം ഹാന്‍ഡ്ലറില്‍ കൂടി മാതമേ പ്രോസസ്‌
ചെയ്യാന്‍ കഴിയു. ഒരു ഫോമില്‍ക്കൂടി അയച്ച ഡാറ്റ നിയ്രനത്രിക്കുന്ന വെബ്‌ സര്‍വറിലെ
ഒരു പ്രോ്രഗാമാണ്‌ ഫോം ഹാന്‍ഡ്ലര്‍. <FORM> ടാഗിലെ Action ആഭ്രിബ്യയൂട്ടിന്റെ
വിലയായി ഫോം ഹാന്‍ഡ്ലെറിന്റെ പേര്‍ നല്‍കുന്നു. സര്‍വര്‍, അനുബന്ധസാങ്കേതിക
വിദ്യകള്‍ എന്നിവയുടെ ആശയം മഗാമത്തെ അധ്യായത്തില്‍ ചര്‍ച്ചചെയ്യാം.

<FORM> ടാഗില്‍ സാധാരണയായി ഉപയോഗിക്കുന്ന ആട്രിബ്യൂട്ടുകള്‍ ചുവടെ ചേര്‍ക്കുന്നു.

1. Action: ഈ ആട്രിബ്യയൂട്ടിന്റെ വിലയായി ഡാറ്റ സ്വീകരിക്കുവാനും പ്രോസസ്‌ ചെയ്യു
വാനും കഴിയുന്ന ഫോം ഹാന്‍ഡ്ലറിന്റെ URL നല്‍കുന്നു.

2. Method: ഈ ആട്രിബ്യയൂട്ടിന്റെ വിലയായി ഡാറ്റ അപ്ലോഡ്‌ (upload) ചെയ്യുന്ന
രീതി സൂചിപ്പിക്കുന്നു. സാധാരണയായി Get ഉം Post ഉം രീതികളാണ്‌ അവലം
ബിക്കുന്നത്‌.

3. Target: ഈ ആട്രിബ്യൂട്ട്‌ സ്ക്രിപ്റ്റിന്റെ ഫലം പ്രദര്‍ശിപ്പിക്കേണ്ട വിന്‍ഡോയോ
ഫ്രെയിമോ സൂചിപ്പിക്കുന്നു. ഇതിന്റെ വിലകള്‍ പട്ടിക 5.4-ല്‍ നല്‍കുന്നു _blank,
_self, parent.

S.HTML ഉപയോദിച്ചു കൊണ്ങുള്ള വെബ്‌ രൂപകല്‍ഷ്ന

ANB ചെയ്യപെട്ട ഡോക്യുമെന്റ്‌ പുതിയ ജാലകത്തില്‍ തുറക്കുന്നു.
ലിങ്കു ചെയ്യപെട്ട ഡോക്യുമെന്റ്‌ ലിങ്കുള്ള അതേ ഫ്രെയിമില്‍ തുറക്കുന്നു.

ലിങ്കു ചെയ്യകെട്ട ഡോക്യുമെന്റ്‌ പേരന്റ്‌ ഫ്രെയിംസെറ്റില്‍ തുറക്കുന്നു.

_top മുഖ്യ ബ്രസര്‍ ജാലകത്തില്‍ നിലവിലുള്ള ഫ്രെയിമിനെ മാറ്റി ലിങ്ക്‌ ചെയ്യകെട്ട ഡോക്യു
മെന്റ്‌ തുറക്കുന്നു.

name പേര്‌ ഉപയോഗിച്ച്‌ സുചിരിച്ചിരിക്കുന്ന ജാലകത്തില്‍ ലിങ്ക്‌ ചെയ്യചെട്ട ഡോക്യുമെന്റ്‌ തുറ

ക്കുന്നു.

പട്ടിക. Target ആദ്രിബ്യൂടിന്റെ റ്ലകശീ

ര്രൌസറില്‍ നിന്ന്‌ വെബ്സെര്‍വറിലെ ഫോം ഹാന്‍ഡ്ലറിലേക്ക്‌ ഫോം
സമര്‍പ്പിക്കുന്നതിന്‌ മുന്പ്‌ ഉപയോക്താവ്‌ ഫോമില്‍ എല്ലാ അവശ്യവിവരങ്ങളും
നല്‍കിയിട്ടുണ്ടോ എന്നും അല്ലെങ്കില്‍ സ്വീകരിച്ച വിവരങ്ങള്‍ നിലനില്‍ക്കുന്ന
താണോ അല്ലയോ എന്നും പരിശോധിക്കുന്നതിനാണ്‌ ജാവാ സ്ക്രിപ്റ്റ്‌ അല്ലെ
ങ്കില്‍ മറ്റേതെങ്കിലും ക്ലയന്റ്‌ സൈഡ്‌ സ്ക്രിപ്റ്റിങ്‌ ഭാഷ സാധാരണയായി ഉപയോഗിക്കുന്നത്‌.

ഫോം കണ്‍ട്രോളുകള്‍ (Form controls)

111141. ഫോമില്‍ നിന്ന്‌ ഡാറ്റ ശേഖരിക്കാന്‍ വിവിധതരം ഫോം കണ്‍ദ്രോളുകള്‍ ഉപ
യോഗിക്കാം. ഇവയില്‍ ടെക്സ്റ്റ്‌ ബോക്സ്‌, പാസ്വേര്‍ഡ്‌, ചെക്ക്‌ ബോക്സ്‌, റേഡിയോ
ബട്ടണ്‍, ടെക്സ്റ്റ്‌ ഏരിയ, സെലക്ട്‌ ബോക്സ്‌, സബ്മിറ്റ്‌, റീസെറ്റ്‌ ബട്ടണ്‍ തുടങ്ങിയവ
ഉള്‍പ്പെടുന്നു. ഇതിലെ മിക്ക കണ്‍ട്രോളുകളും <INPUT> ടാഗ്‌ വഴി ഫോമില്‍ ഉള്‍പ്പെടു
ത്താം.

5.6.2 <INPUT> ടാഗ്‌

ഉപയോക്താക്കളില്‍ നിന്ന്‌ ഡാറ്റ സ്വീകരിക്കാന്‍ ഫോമില്‍ വിവിധതരം കണ്‍ട്രോളുകള്‍
പ്രദര്‍ശിപ്പിക്കും. ഇന്‍പുൂട്ടിന്റെ തരം അനുസരിച്ച്‌ വിവിധതരത്തിലുള്ള കണ്‍ദ്രോളുകളായ
ടെക്സ്റ്റ്‌ ബോക്സ്‌, റേഡിയോ ബട്ടണ്‍, സബ്മിറ്റ്‌ ബട്ടണ്‍ തുടങ്ങിയവ <INPUT> ടാഗ്‌
ഉപയോഗിച്ച്‌ നിര്‍മിക്കാം. ഇതിന്റെ Type ആദഭ്രിബ്യൂട്ട്‌ കണ്‍ട്രോളിന്റെ തരം തീരുമാനി
ക്കുന്നു.

<INPUT> ടാഗിന്റെ ആഭ്രിബ്യൂടുകള്‍

1. Type: <INPUT> ടാഗ്‌ നിര്‍മിക്കുന്ന കണ്‍ട്രോളിന്റെ തരം നിര്‍ണയിക്കുന്നത്‌ ഈ
ആട്രിബ്യൂട്ടാണ്‌. ഇതിന്റെ പ്രധാനപ്പെട്ട വിലകള്‍ പട്ടിക 5.508 കൊടുത്തിരിക്കുന്നു.

കമ്പ്യൂട്ടര്‍ സയന്‍സ്‌ - XII

Text OSA ബോക്‌സ്‌ നിര്‍മിക്കുന്നു.

Password ടെക്സ്റ്റ്‌ ബോക്സ്‌ തന്നെയാണ്‌ ഉതും നിര്‍മിക്കുന്നത്‌ എന്നാല്‍ ഉതില്‍ നല്‍കുന്ന അക്ഷ
രങ്ങള്‍ എല്ലാം അസ്ത്റിസ്ക്‌ (*) പോലുള്ള ചിഹ്നങ്ങളാണ്‌ പ്രദര്‍ശിരിക്കുക.

Checkbox അത്രെ, അല്ല എന്നീ വിലകള്‍ നല്‍കുന്നതിന്‌ നിര്‍മിച്ചിരിക്കുന്നു. ഒരു കൂട്ടം വിലകളില്‍
ഒന്നോ അതിലധികമോ തിരഞ്ഞെടുക്കാന്‍ ഉപയോഗിക്കുന്നു.

Radio ഒരു കൂട്ടം വിലകളില്‍ നിന്ന്‌ ഒരു വില തിരഞ്ഞെടുക്കുവാന്‍ ഇത്‌ ഉപയോഗിക്കുന്നു.
Name ആട്രിബ്യൂട്ടിന്‌ ഒരേ വിലയുള്ള ഒന്നിലധികം റേഡിയോ ബട്ടണില്‍ നിന്ന്‌ ഒന്നുമാത്രമേ
ഒരുസമയത്ത്‌ തിരഞ്ഞെടുക്കുവാന്‍ കഴിയു. ഉപയോക്താവ്‌ സെലക്ഷന്‍ മാറ്റുമ്പോള്‍

നേരത്തേ തിരഞ്ഞെടുത്തത്‌ ഡിസെലക്ട്‌ ചെയ്യകെടും.

Reset ഒരു ഫോമിലെ രേഖക്വെടുത്തലുകളെല്ലാം ഒഴിവാക്കി ഫോമിനെ പ്രാരംദഘട്ടത്തിലേ
തുപോലെ ആക്കുന്നതിന്‌ ഉപയോരിക്കുന്ന പ്രത്യേക ബട്ടണ്‍ ആണിത്‌.

Submit ഫോമില്‍ നല്‍കിയ ഡാറ്റാ സെര്‍വറിലേക്ക്‌ സമര്‍കിക്കുന്നതിനായി ഉപയോമിക്കുന്ന
പ്രത്യേക ബട്ടണാണിത്‌.

Button ഫോമില്‍ ഒരു ദ്രാഫിക്കല്‍ ബട്ടണ്‍ നിര്‍മിക്കുവാന്‍ ഉപയോശിക്കുന്നു. ഈ ബട്ടണില്‍
ക്ലിക്ക്‌ ചെയ്ത്‌ ഫങ്ഷനുകളെ വിളിക്കാം.

പട്ടിക 5.5: Type agisinyj slog വിവിധ വിലകശീ

2. Name: ഇന്‍പുട്ട്‌ കണ്‍ട്രോളുകളുടെ പേര്‍ നല്‍കുന്നു. ഫോം സമര്‍പ്പിക്കുമ്പോള്‍
ഡാറ്റായും അത്‌ ഉള്‍ക്കൊള്ളുന്ന കണ്‍ട്രോളിന്റെ പേരും സര്‍വറിലേക്ക്‌ അയയ്ക്കു
ന്നു.

3. Value: ഒരു കണ്‍ട്രോളിന്‌ തനത്‌ വില നല്‍കുന്നതിന്‌ ഈ ആട്രിബ്യൂട്ട്‌ ഉപയോഗി
ക്കുന്നു.

4. Size: ഇന്‍പുട്ട്‌ ടൈപ്പായ ടെക്സ്റ്റ്‌ ബോക്സ്‌, പാസ്വേര്‍ഡ്‌ ടെക്സ്റ്റ്‌ എന്നിവയുടെ
വലുപ്പം നിശ്ചയിക്കുന്നതിന്‌ ഈ ആട്രിബ്യൂട്ട്‌ ഉപയോഗിക്കുന്നു ഇന്‍പുട്ടുകളായ
ടെക്സ്റ്റ്‌, പാസ്വേര്‍ഡ്‌ എന്നിവയ്ക്ക്‌ മാത്രം ഇത്‌ ബാധകമാകും.

൭. Maxlength: ടെക്സ്റ്റ്‌ ബോക്സ്‌, പാസ്വേര്‍ഡ്‌ എന്നിവയില്‍ ഉപയോക്താവിന്‌
ഇന്‍പുട്ട്‌ ചെയ്യുവാന്‍ സാധിക്കുന്ന പരമാവധി അക്ഷരങ്ങളുടെ എണ്ണം നിശ്ചയിക്കു
വാന്‍ ഈ ആട്രിബ്യൂട്ട്‌ ഉപയോഗിക്കുന്നു. ഈ ആട്രിബ്യൂട്ട്‌ ടെക്സ്റ്റ്‌ബോക്സ്‌, പാസ്‌
വേര്‍ഡ്‌ എന്നിവയുടെ കൂടെ മാത്രമേ ഉപയോഗിക്കു.

പാസ്വേര്‍ഡ്‌ ഫീല്‍ഡിലെ ഉള്ളടക്കങ്ങള്‍ ഉപയോക്താവിന്റെ കാട്ചയില്‍ നിന്ന്‌
മറയ്ക്കുന്നു. ഇതില്‍ നമ്മള്‍ നല്‍കുന്ന വിവരങ്ങള്‍ രഹസ്യകോഡ്‌ ആക്കിമാ
റ്ുുകയോ കൂട്ടിക്കലര്‍ത്തുകയോ ചെയുന്നില്ല.

5,140. ഉപയോദിച്ചു കൊണ്ങുള്ള വെബ്‌ രൂപകല്‍ക്ന

ഒരു 111741. ഫോമില്‍ക്കൂടി പേര്‌, പാസ്വേഡ്‌ എന്നിവ നല്‍കുന്നതിനുള്ള HTML കോഡ്‌
ഉദാഹരണം 5.18 ലും വെബ്‌ പേജിന്റെ ചിരം 5.24 ലും കാണിക്കുന്നു.

<HTML>
<HEAD> <TITLE> Login </TITLE> </HEAD>
<BODY Bgcolor= "Pink">
<FORM Action= "login.php" Method= "post">
<P> Name:énbsp; énbsp; énbsp;
<INPUT Type= "text" Name= "firstname" Size= "30"
Maxlength= "25"> </P>
<P>Password:
<INPUT Type= "password" Name= "Psswd" Size= "30"
Maxlength= "25"> </P> <BR>
énbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
énbsp;
<INPUT Type= "reset" Value= "Clear">
<INPUT Type= "submit" Value= "Send">
</FORM>
</BODY>
</HTML>

ഉദാഹരണം 5.18 ല്‍ <FORM> ടാഗിലെ ആഞ്ഞ്ഞ്ഞ്ത്ത്ഞ്തു

Action അആട്രിബ ്യൂട്ടിന്റെ വിലയായി File Edit View History Bookmarks Tools Help
Login. php നല്‍കുന്നു. ഇതിനര്‍ഥം ഫോമി [5109൨ പി
ല്‍ക്കൂടി നല്‍കപ്പെടുന്ന ഡാറ്റ /49/7.047 | Name:

എന്ന ഫയലില്‍ ശേഖരിച്ചിരിക്കുന്ന ആപ്ലി
ക്കേഷനിലൂടെ പ്രോസസ്‌ ചെയ്യപ്പെടുന്നു
എന്നാണ്‌. &nbsp; എന്ന HTML
അംഗത്തിന്റെ ഉപയോഗം (്രദ്ധിക്കുക.
ഇത്‌ അഭാജ്യമായ സ്ഥലം നല്‍കുവാ ഛ4൭ം.24: ടെക്സ്ററ്‌,പഫാസ്‌വേരീഡ്‌ എന്മിവ ഉശിപ്ലെടട
നാണ്‌ ഉപയോഗിക്കുന്നത്‌. HIME Gato

Password:

Clear | Send

ഒരു റേഡിയോ ബട്ടണ്‍ (ഓപ്ഷന്‍ ബട്ടണ്‍), ചെക്ക്‌ ബോക്സ്‌ എന്നിവയിലൂടെ ഡാറ്റ
ഇന്‍പുട്ട്‌ ചെയ്യുന്ന 1111. ഫോം രൂപകല്‍പന ചെയ്യാം. ഒന്നില്‍ കൂടുതല്‍ വിലകളില്‍
നിന്ന്‌ ഒരു വില മാത്രം തിരഞ്ഞെടുക്കാന്‍ റേഡിയോ ബട്ടണും. ഒന്നിലധികം വിലകള്‍
തിരഞ്ഞെടുക്കുവാന്‍ ചെക്ക്‌ ബോക്സും ഉപയോഗിക്കുന്നു. സാധാരണയായി ഒരു
ലിസ്റ്റിലെ ഒന്നോ അതിലധികമോ ഇനങ്ങളെ മാര്‍ക്ക്‌ ചെയ്യുന്ന രീതിയിലാണ്‌ ചെക്ക്‌
ബോക്സ്‌ ഉപയോഗിക്കുന്നത്‌.

കമ്പ്യൂട്ടര്‍ സയന്‍സ്‌ - XII

ഉദാഹരണം 5.19 ല്‍ നല്‍കിയിരിക്കുന്ന HTML കോഡ്‌ ഒരു വ്യക്തിയുടെ ലിംഗഭേദവും
വിനോദങ്ങളും യഥാക്രമം റേഡിയോ ബട്ടണ്‍, ചെക്ക്‌ ബോക്സ്‌ എന്നിവയിലൂടെ സൂചി
പ്പിക്കുന്നു. ഇതിനനുസൃതമായ വെബ്‌ പേജ്‌ ചിത്രം 5.25 ല്‍ കാണിക്കുന്നു.

) ബോക്സ്‌ എന്നിവ ഉള്‍പ്പെടുത്തിയ
ണം

<HTML>

<HEAD> <TITLE>Checkbox Radio Button Control</TITLE> </HEAD>
<BODY Bgcolor= "#E9BEE5">
<FORM> <BR>Sex: &nbsp; &nbsp; &nbsp; &énbsp; énbsp;
<INPUT Type= "radio" Name= "sex" Value= "male"> Male
<INPUT Type= "radio" Name= "sex" Value= "female"> Female
<BR> <BR>Hobbies:
<INPUT Type= "checkbox" Name= "Hobby" Value= "Games">
Playing Games
<INPUT Type= "checkbox" Name= "Hobby"
Value="WatchingTV"> Watching TV
<INPUT Type= "checkbox" Name= "Hobby" Value= "Reading">

Reading
</FORM>
</BODY> Checkbox Radio Button Control - Mozilla Firefox
</HTML> File Edit View History Bookmarks Tools Help

[ഭി Checkbox Radio Button Control | SP

Sex: Male Female

Hobbies: Playing Games Watching TV Reading

ചിത്രം 5.23: ചെക്ക്‌ CNIIAT}o റേഡിയേ sUgEM}o
ഉശീപ്പെടടുത്തിയ വെബ്‌ പേജ്‌.

5.6.3 <TEXTAREA> ടാഗ്‌

ഒരു ഫോമില്‍ <INPUT Type = "ലനം. എന്ന പ്രസ്താവന ഉപയോഗിച്ച്‌ ag വരി
വാക്യം നല്‍കുന്ന രീതി നാം കണ്ടു കഴിഞ്ഞു. (ഉദാഹരണം 5.18 ഉം ചിത്രം 5.24 ഉം)
നോക്കുക. എന്നാല്‍ ചില അവസരങ്ങളില്‍ ഒന്നിലധികം വരികളുള്ള വാചകങ്ങള്‍
ഫോമില്‍ നല്‍കേണ്ടത്‌ ആവശ്യമായി വരും. ഒരു വ്യക്തിയുടെ തപാല്‍ വിലാസം ഇതിന്‌
ഉദാഹരണമാണ്‌. ഇതിനായി <TEXTAREA> എന്ന കണ്ടെയ്നര്‍ ടാഗ്‌ ഉപയോഗിക്കാം.
ടാഗ്‌ ജോഡികള്‍ക്ക്‌ ഇടയിലുള്ള ഒന്നിലധികം വരികളുള്ള വാക്യങ്ങള്‍ പ്രദര്‍ശിപ്പിക്കാ

5,140. ഉപയോദിച്ചു കൊണ്ങുള്ള വെബ്‌ രൂപകല്‍ക്ന

നുള്ള ടെക്സ്റ്റ്‌ ഏരിയായുടെ വിസ്തൃതി നിര്‍ണയിക്കുന്നത്‌ ഈ ടാഗിന്റെ ആട്രിബ്യയൂട്ടു
കളുടെ വിലയെ ആശ്രയിച്ചിരിക്കും. <TEXTAREA> ടാഗിന്റെ പ്രധാന ആദ്രിബ്യൂട്ടുകള്‍

ചുവടെ ചേര്‍ക്കുന്നു.
1. Name: ഇത്‌ കണ്‍കട്രോളിന്‌ പേര്‍ നല്‍കുന്നു.
2. Rows: ഇത്‌ വരികളുടെ എണ്ണം നിര്‍ണയിക്കുന്നു.
3. Cols: ഇത്‌ നിരകളുടെ എണ്ണം നിര്‍ണയിക്കുന്നു. അതായത്‌ ഒരു വരിയിലെ അക്ഷ
രങ്ങളുടെ എണ്ണം.
താഴെ നല്‍കിയിരിക്കുന്ന കോഡ്‌ ഭാഗം പരിഗണിച്ച്‌ <TEXTAREA>SOMlAG ഉപയോഗം
തിരിച്ചറിയുക.
<FORM Action= "guestbook.php" Method= "post">
<TEXTAREA Rows= "10" Cols= "30" Name= "address">
Enter your address.
</TEXTAREA>
</FORM>

Text area Control-Mozill- ൧൨ X
File Edit View History Bookma

(6) Text area Control - +

ഈ കോഡിനെ ബ്രൌസറില്‍ തുറക്കുമ്പോള്‍ ലഭ്യ | Enter your address.
മാകുന്ന വെബ്‌ പേജ്‌ ചിത്രം 5.26 ല്‍ നല്‍കിയിരി
@0)0}.<TEXTAREA>, </TEXTAREA> എന്നീ ടാഗ്‌
ജോഡികള്‍ക്കിടയില്‍ നല്‍കുന്ന വാക്യങ്ങള്‍ കണ്‍
ട്രോളില്‍ പ്രദര്‍ശിപ്പിക്കുന്നു. ഉപയോക്താവ്‌ ഏതെ
ങ്കിലും ഡാറ്റ കണ്‍ട്രോളില്‍ നല്‍കുമ്പോള്‍ ഈ

വാകൃത്തിന്‌ പകരമായി അത്‌ പ്രദര്‍ശിപ്പിക്കുന്നു. ചിതം 5.26: ടെക്‌സ്റ്റ്‌
AGA ഉശിക്കൊള്ളുന്നു.

5.6.4 <SELECT> ടാഗ്‌

ഉപയോക്താവിന്‌ ഒന്നോ അതിലധികമോ ഓപ്ഷനുകള്‍ തിരഞ്ഞെടുക്കുവാന്‍ കഴിയുന്ന
കണ്‍ട്രോള്‍ ആണ്‌ സെലക്ട്‌ ബോക്സ്‌. ഇത്‌ വിവിധ ഓപ്ഷനുകള്‍ താഴേക്കു വീഴുന്ന
ഒരു ലിസ്റ്റ്‌ രൂപത്തില്‍ നല്‍കുന്നു. അതിനാല്‍ ഇത്‌ ഡ്രോപ്ഡൌണ്‍ ലിസ്റ്റ്‌ ബോക്സ്‌
എന്ന പേരിലും അറിയപ്പെടുന്നു. പരിമിതമായ സ്ഥലത്ത്‌ കൂടുതല്‍ ഓപ്ഷനുകള്‍ പ്രദര്‍ശി
പ്പിക്കുവാന്‍ സെലക്ട്‌ ബ്ലോക്സ്‌ സഹായിക്കുന്നു. <SELECT>, </SELECT> ടാഗിന
കത്ത്‌ നല്‍കുന്ന <OPTION> ടാഗ്‌ ഉപയോഗിച്ചാണ്‌ ലിസ്റ്റില്‍ പ്രദര്‍ശിപ്പിക്കേണ്ട ഇന
ങ്ങള്‍ നല്‍കുന്നത്‌.

കണ്ടെയ്നര്‍ ടാഗായ <SELECT> ടാഗിന്റെ പ്രധാനപ്പെട്ട ആ(ദ്രിബ്യൂട്ടുകള്‍ ചുവടെ ചേര്‍ക്കു
ന്നു.
1. Name: ഈ ആട്രിബ്യൂട്ട്‌ കണ്‍ട്രോളിന്‌ പേര്‍ നല്‍കുന്നു. ഈ പേര്‍ ഇതിലെ ഡാറ്റ

യോടൊപ്പം സെര്‍വറിലേക്ക്‌ അയയ്ക്കുന്നു. സെര്‍വര്‍ ഈ പേര്‍ ഉപയോഗിച്ച്‌
കണ്‍ട്രോളിന്റെ പേരിനൊപ്പമുള്ള വില തിരിച്ചറിയുകയും സ്വീകരിക്കുകയും ചെയ്യുന്നു.

കമ്പ്യൂട്ടര്‍ സയന്‍സ്‌ - XII

2. Size: ഒരു സ്‌ക്രോളിങ്‌ ലിസ്റ്റ്‌ അവതരിപ്പിക്കുന്നതിന്‌ ഉപയോഗിക്കാം. ഇതിന്റെ
വിലയുടെ അടിസ്ഥാനത്തില്‍ ഇത്‌ ഒരു ലിസ്റ്റ്‌ ബോക്‌സാണോ അല്ലങ്കില്‍ ഒരു
ഡ്രോപ്ഡൌണ്‍ ലിസ്റ്റ്ബോക്സാണോ എന്ന്‌ തീരുമാനിക്കുന്നു. ഇതിന്റെ വില 1
ആണെങ്കില്‍ ഡ്രോപ്ഡൌണ്‍ ലിസ്റ്റ്‌ ബോക്സായിരിക്കും.

3. Multiple: ഉപയോക്താവിന്‌ ഒന്നില്‍കൂടുതല്‍ ഇനങ്ങള്‍ തിരഞ്ഞെടുക്കുവാന്‍ ഈ
ആട്രിബ്യൂട്ട്‌ അനുവദിക്കുന്നു.

ഇനി നമുക്ക്‌ <OPTION> ടാഗിനെക്കുറിച്ച്‌ ചര്‍ച്ച ചെയ്യാം. <SELECT> </SELECT>

എന്നീ ടാഗ്‌ ജോഡികള്‍ക്കിടയില്‍ നല്‍കുന്ന എംപ്റ്റി ടാഗ്‌ ആണിത്‌. <OPTION> ടാഗ്‌

സെലക്ട്‌ ബോക്സിനകത്ത്‌ നല്‍കിയിരിക്കുന്ന ഓപ്ഷനുകള്‍ ലിസ്റ്റ്‌ ചെയ്യുന്നു. ഈ

ട്രാഗിന്റെ വിവിധ ആട്രിബ്യൂട്ടുകള്‍ ചുവടെ ചേര്‍ക്കുന്നു.

1. Selected: തനത്‌ സെലക്ഷനെ സൂചിപ്പിക്കാന്‍ ഉപയോഗിക്കുന്നു.

2. Value: <OPTION> ടാഗിന്‌ അകത്തുള്ള വിലകളില്‍ നിന്നും ഉള്ളടക്കത്തേക്കാള്‍
വിഭിന്നമായ വില നല്‍കുവാന്‍ ഇത്‌ ഉപയോഗിക്കുന്നു. ഈ വില ലഭ്യമല്ലെങ്കില്‍
ഇതിന്റെ ഉള്ളടക്കം വിലയായി സ്വീകരിക്കും.

ഉദാഹരണം 5.20 ല്‍ നല്‍കിയിരിക്കുന്ന HTML കോഡ്‌ ഉപയോഗിച്ച്‌ ഒരു ഡ്രോപ്ഡണ്‍

ലിസ്റ്റ്‌ ബോക്സ്‌ ഉള്‍പ്പെടുന്ന വെബ്‌ പേജ്‌ നിര്‍മിക്കാം. <SELECT> ടാഗിന്റെ Size

ആട്രിബ്യയൂട്ടിന്‌ ഒന്ന്‌ (1) എന്ന വില ആണെന്നും കുടാതെ സെലക്ട്‌ ബോക്സിന്‌ 4

ഓപ്ഷനുകള്‍ ഉണ്ടെന്നും പ്രത്യേകം ശ്രദ്ധിക്കുക.

1 ഉള്‍പ്പെട്ട HTML ഫോം നിര്‍മാണം

<HTML>
<HEAD> <TITLE> Drop down list </TITLE> </HEAD>
<BODY Bgcolor= "#E9BEE5">
<FORM Action= "guestbook.php"™ Method= "post"™>
<P> Nationality:
<SELECT Name= "Nationality" Size= "1">
<OPTION Value= "Indian" selected> Indian
<OPTION Value= "British"> British
<OPTION Value= "German"> German
<OPTION Value= "Srilankan"> Srilankan

</SELECT>
</FORM> Drop down list - Mozilla. ൧5%
</BODY> File Edit View History Book
</HTML> [S| Drop down list de ന
കോമ്പോ ബട്ടണില്‍ ക്ലിക്ക്‌ ചെയ്യുമ്പോള്‍ ലഭ്യമായ | Nationality:
ഡ്രോപ്ഡൌണ്‍ ലിസ്റ്റില്‍ ചിത്രം 2.27ല്‍ കാണിക്കുന്നു. ലട

German
Srilankan

ചിതം 5.27: സെലക്ട്‌ ജേക്‌സ്‌
99393 ഫോം

S.HTML ഉപയോദിച്ചു കൊണ്ങുള്ള വെബ്‌ രൂപകല്‍ഷന

ഉദാഹരണം 5.20 ലെ പ്രോഗ്രാം കോഡില്‍ Size ആഭ്രിബ്യയൂട്ടിനെ
വ്ൃത്യാസപ്പെടുത്തിക്കൊണ്ട്‌ സെലക്ട്‌ ബോക്സില്‍ ഉണ്ടാകുന്ന മാറ്റം
നമുക്കു ചെയ്യാം നിരീക്ഷിക്കുക.

5.6.5 <FIELDSET> ടാഗ്‌ ഉപയോഗിച്ച്‌ ഫോം ഡാറ്റയെ ഒന്നിപ്പിക്കുന്നു
(Grouping form data with <FIELDSET>tag)

ചിലപ്പോള്‍ പരസ്പരബന്ധമുള്ള ഡാറ്റ ഉള്‍ക്കൊള്ളുന്ന കണ്‍ട്രോളുകളെ ഒരുമിച്ച്‌ ചേര്‍ക്കേ
ണ്ടത്‌ ആവശ്യമായി വന്നേക്കാം. ഇതിനായി <FIELDSET> ടാഗ്‌ ഉപയോഗിക്കാം. ഈ
SOD ഉപയോഗിച്ച്‌ ഫോമിനകത്ത്‌ പരസ്പര ബന്ധമുള്ള കണ്‍ട്രോളുകള്‍ അടങ്ങിയ ഉപ
വിഭാഗങ്ങള്‍ ഉള്‍പ്പെടുത്തുവാന്‍ സാധിക്കും. ഓരോ ഉപവിഭാഗത്തെയും തിരിച്ചറിയുവാന്‍
<LEGEND> ടാഗ്‌ ഉപയോഗിക്കാം. <FIELDSET> ഇനങ്ങള്‍ക്ക്‌ ശീര്‍ഷകം നല്‍കുന്ന
തിന്‌ <LEGEND> ടാഗ്‌ ഉപയോഗിക്കാം. ഇത്‌ ഒരു കണ്ടെയ്നര്‍ ടാഗ്‌ ആണ്‌.

നമ്മള്‍ ഇതുവരെ ചര്‍ച്ച ചെയ്ത എല്ലാ കണ്‍ട്രോളുകളും ഉള്‍പ്പെടുത്തി പേര്‍, വയസ്‌,
അഡ്ധസ്‌, വിനോദങ്ങള്‍ എന്നീ വിവരങ്ങള്‍ സമര്‍പ്പിക്കുന്നതിനുള്ള HTML കോഡ്‌ ഉദാ
ഹരണം 5.21 ലും അതിനനുസൃതമായ വെബ്‌ പേജ്‌ ചിത്രം 5.28 ലും കാണിച്ചിരിക്കുന്നു.

രങ്ങള്‍ സമര്‍പ്പിക്കുന്ന HTML കോഡ്‌

<HTML>
<HEAD> <TITLE> FormResume </TITLE> </HEAD>
<BODY Bgcolor= "#E9BEE5">
<CENTER ><H3>Enter your details</H3></CENTER>
<FORM Action= "guestbook.php" Method= "get">
Name: &énbsp;
<INPUT Type= "text" Name= "first name" Size= "20"
Maxlength= "20" Value= "First Name Here"><BR><BR>
Age:
<INPUT Type="text" Name="age" Size="3" Maxlength="3"><BR>
Sex: é&nbsp; énbsp; &énbsp;
<INPUT Type="radio" Name="sex" Value="male"> Male
<INPUT Type="radio" Name="sex" Value="female"> Female
<FIELDSET>
<LEGEND>Nationality</LEGEND>
<SELECT Name= "Nationality" Size= "മുന
<OPTION Value= "Indian" Selected> Indian
<OPTION Value= "British"> British
<OPTION Value= "German"> German
<OPTION Value= "Srilankan"> Srilankan
</SELECT><BR><BR>

Nativity:
<INPUT Type= "text" Name="State" Size="15"><BR><BR>
District: énbsp;
<INPUT Type= "text" Name= "District" Size= "15">
</FIELDSET><BR>
Hobbies:
<INPUT Type= "checkbox" Name= "Hobby" Value= "games">
Playing Games
<INPUT Type= "checkbox" Name= "Hobby"
Value= "WatchingTV"> Watching TV
<INPUT Type= "checkbox" Name= "Hobby" Value= "Reading">
Reading<BR><BR>
<TEXTAREA Rows= "5" Cols= "25" Name= "address">Address
</TEXTAREA><BR><BR>
<INPUT Type= "submit" Value= "submit">
<INPUT Type= "Reset" Value= "reset">

</FORM>
</BODY> FormResume - Mozilla Firefox
File Edit View History Bookmarks Tools H
</HTML>

First Name Here |

alo 5.28: ഒരു വിദ്യാരര്‍ഥ?യുടെ വിവരങ്ങശി Tage flan;mmoln}98 HTML ഫോം

5,140. ഉപയോദിച്ചു കൊണ്ങുള്ള വെബ്‌ രൂപകല്‍ക്ന

5.6.6 ഫോം സമർപണം (Form submission)

നാം ഫോമിലെ submit ബട്ടണില്‍ ക്ലിക്ക്‌ ചെയ്യുമ്പോള്‍ ഫോമില്‍ നല്‍കിയ ഡാറ്റ സെര്‍വ
റിലേക്ക്‌ അയയ്ക്കപ്പെടുന്നു. ഉപയോക്താവിന്റെ (ക്ലയന്റ്‌ ) കമ്പ്യൂട്ടറില്‍ നിന്നും വരുന്ന
വിവരങ്ങള്‍ വെബ്സെര്‍വര്‍ സ്വീകരിച്ച്‌ അതില്‍ ലഭ്യമായ സെര്‍വര്‍സൈഡ്‌ പ്രോഗ്രാം ഉപ
യോഗിച്ച്‌ പ്രോസസ്‌ ചെയ്യുന്നു.

ഫോം സമര്‍പ്പിക്കുമ്പോള്‍ ചെയ്യേണ്ട പ്രവര്‍ത്തനങ്ങളെ നിര്‍വചിക്കുന്ന ആഭ്രിബ്യയൂട്ടാണ്‌
Action. സാധാരണയായി സെര്‍വര്‍സൈഡ്‌ പ്രോഗ്രാമിന്റെ URL ആണ്‌ ഇതിന്റെ വില
യായി നല്‍കുന്നത്‌. ഒരു ഫോം സര്‍വറിലേക്ക്‌ അയയ്ക്കുന്നതിനുള്ള പൊതുവായ മാര്‍ഗം
submit ബട്ടണില്‍കൂടി ആണ്‌. സമര്‍പ്പിക്കുന്ന ഫോമിലെ വിവരങ്ങള്‍ കൈകാര്യം ചെയ്യാന്‍
guestbook.php എന്ന സെര്‍വര്‍ സൈഡ്‌ സ്ക്രിപ്റ്റ്‌ ഉപയോഗിച്ചിരിക്കുന്നതായി ഉദാഹ
രണം 5.21 ല്‍ കാണാവുന്നതാണ്‌.

<FORM> ടാഗിലെ 149൨00 ആഭ്രിബ്യൂട്ട്‌ ഫോം സമര്‍പ്പിക്കുന്നതിനുള്ള HTTP മാര്‍ഗം
(get of post) സൂചിപ്പിക്കുന്നു.

നിങ്ങളുടെ പുരോഗതി അറിയുക

1. വെബ്‌ പേജിലൂടെ ഇന്‍പുട്ട്‌ ഡാറ്റ MGe 01008 HTML
ആണ്‌ ഉപയോഗിക്കുന്നത്‌.

2. ഫോമിനകത്ത്‌ ടെക്സ്റ്റ്‌ ഡാറ്റ ഇന്‍പുട്ട്‌ ചെയ്യുന്നതിന്‌ ഉപയോഗിക്കുന്ന
രണ്ട്‌ ടാഗുകളുടെ പേരെഴുതുക.

3. റേഡിയോ ബട്ടണ്‍, ചെക്ക്‌ബോക്സ്‌ എന്നിവ തമ്മിലുള്ള വൃത്യാസ
ങ്ങള്‍ എഴുതുക.

4. ഫോമിനുള്ളില്‍ ഡാറ്റ ഒരുമിപ്പിക്കുവാന്‍ ഉപയോഗിക്കുന്ന ടാഗ്‌ ഏതാ
ണ്‌?

5. <FORM> ടാഗിനുള്ളില്‍ ഡാറ്റ ഇന്‍പുട്ട്‌ ചെയ്യുന്നതിന്‌ ഉപയോഗിക്കു
ന്ന ടാഗിന്റെ പേര്‍ എഴുതുക.

5.7 HTML 5 ന്റെ പൊതു അവലോകനം (Overview of HTMLS)
HTML ന്റെ പുതുക്കിയ പതിപ്പാണ്‌ HTML 5. HTML 4.01 ന്‌ ശേഷം വേള്‍ഡ്‌ വൈഡ്‌
വെബ്‌ കണ്‍സോര്‍ഷ്ും (W3 C) വെബ്‌ ഹൈപ്പര്‍ ടെക്സ്റ്റ്‌ ആപ്ലിക്കേഷന്‍ ടെക്നോളജി
വര്‍ക്കിങ്‌ ഗ്രൂപ്പും (WHATWG) കൂട്ടായി വികസിപ്പിച്ചെടുത്തതാണ്‌ HTMLS. ഇതില്‍
വീഡിയോ പ്ലേ ബാക്ക്‌, ്രാഗ്‌ ആന്‍ഡ്‌ ഡ്രോപ്പ്‌ തുടങ്ങിയവ കൂട്ടിച്ചേര്‍ത്തിട്ടുണ്ട്‌.

പ്രമുഖ ബ്രൌസറുകളായ ഗൂഗിള്‍ ക്രോം, മോസില്ല ഫയര്‍ഫോക്സ്‌, ആപ്പിള്‍ HTML
MaNd] ഓപ്പേറ, ഇന്റര്‍നെറ്റ്‌ എക്‌സ്‌പ്ലോറര്‍ എന്നിവയുടെ ഏറ്റവും പുതിയ
പതിപ്പുകള്‍ HTMLS നെ പിന്തുണയ്ക്കുന്നു. ഐ ഫോണുകള്‍, ഐപാ
ഡുകള്‍, ആന്‍ഡ്രോയിഡ്‌ ഫോണുകള്‍ തുടങ്ങിയവയിലുള്ള മൊബൈല്‍
ര്ബൌസറുകളും 111141. 5 നെ പിന്തുണയ്ക്കുന്നു. ഇപ്പോഴുള്ള ര്രൌസറുക
ളില്‍ പഴയതിനെയും പ്രവര്‍ത്തിപ്പിക്കാവുന്ന രീതിയില്‍ ഉള്‍ക്കൊള്ളിച്ചാണ്‌
HTML 5 രൂപകല്‍പന ചെയ്തിരിക്കുന്നത്‌. 1111/1.5 ന്റെ ലോഗോ ചിത്രം തം 2.22

5.20-ല്‍ നല്‍കിയിരിക്കുന്നു. epee

കമ്പ്യൂട്ടര്‍ സയന്‍സ്‌ - XII

114415 ല്‍ പരിചയപ്പെടുത്തുന്ന ഏതാനും പുതിയ ടാഗുകള്‍ താഴെ നല്‍കുന്നു.

1. <VIDEO>, <AUDIO>: HTML ഡോക്കുമെന്റുകളില്‍ ദൃശ്യ ശ്രാവ്യ മാധ്യ
മങ്ങള്‍ വളരെ എളുപ്പം ഉള്‍ക്കൊള്ളിക്കുവാന്‍ ഈ ടാഗുകള്‍ സാകരൃമൊ
രുക്കുന്നു.

2. <CANVAS>: ചിത്രം ഗ്രാഫിക്സ്‌ എന്നിവ വരയ്ക്കുക. ചാര്‍ട്ടുകളും ഗ്രാഫു
കളും തയാറാക്കുക, നമുക്കാവശ്യമുള്ള രീതിയില്‍ ഗ്രാഫിക്സ്‌ മാറ്റിയെടു
ക്കുക തുടങ്ങിയവയ്ക്കുള്ള ലളിതവും ശക്തവുമായ മാര്‍ഗമാണ്‌ ഈ ടാഗ്‌
നല്‍കുന്നത്‌.

3. <HEADER>, <FOOTER>: ഒരു ഡോക്മെന്റിന്റെയോ സെക്ഷന്റെയോ ഹെഡര്‍ വൃക്ത
മാകുവാന്‍ <HEADER> ടാഗും, ഫൂട്ടര്‍ (അടിക്കുറുപ്പ) വ്യക്തമാക്കാന്‍ <FOOTER> ടാഗും
ഉപയോഗിക്കുന്നു. ഒരു ഫൂട്ടറിനുള്ളില്‍ ഡോക്കുമെന്റിന്റെ രചയിതാവ്‌ പകര്‍പ്പവകാ
ശത്തെക്കുറിച്ചുള്ള വിവരങ്ങള്‍, ബന്ധപ്പെടുവാനുള്ള വിലാസം തുടങ്ങിയവ സൂചിപ്പി
ക്കുന്നു. നമുക്ക്‌ ഒരേ ഡോക്കുമെന്റില്‍ തന്നെ ധാരാളം <HEADER>, <FOOTER> ഇന
ങ്ങള്‍ ഉള്‍ക്കൊള്ളിക്കാനാകും. ഒരു വെബ്‌ പേജിനുള്ളില്‍ ആര്‍ട്ടിക്കിളുകളും സെക്ഷ
നുകളും നിര്‍മിക്കുവാന്‍ ഈ ടാഗുകള്‍ ഉപയോഗിക്കുന്നു.

4. <ARTICLE>, <SECTION>: ആര്‍ട്ടിക്കിളുകള്‍ സ്വതന്ത്രവും വൃതൃസ്തവുമായ വാര്‍ത്താ
ക്കുറിപ്പ്‌ അല്ലെങ്കില്‍ ബ്ലോഗ്‌ പോസ്റ്റ്‌ ആണ്‌. ഒരു പേജിനകത്ത്‌ വൃത്ൃസ്തങ്ങളായ വിഷയ
മേഖലകളാക്കുകയോ ആര്‍ട്ടിക്കിളിനെ പലഭാഗങ്ങളാക്കുകയോ ചെയ്യുന്നതിന്‌ സെക്ഷന്‍
ഉപയോഗിക്കുന്നു. <ARTICLE>, <SECTION> എന്നീ ടാഗുകള്‍ ശരിയായ രീതിയില്‍
ഉപയോഗിച്ചാല്‍ അത്‌ സെര്‍ച്ച്‌ എന്‍ജിനില്‍ ഈ പേജ്‌ ലഭൃതയ്ക്കുള്ള സാധ്യത വർധി
ക്കും.

5. <OUTPUT>: ഒരു സ്ക്രിപ്റ്റ്‌ ഉപയോഗിച്ച്‌ നടത്തുന്ന കണക്കുകൂട്ടലുകളുടെ ഫലം ലഭ്യ
മാക്കുന്നതിന്‌ ഈ ടാഗ്‌ ഉപയോഗിക്കുന്നു.

6. <DETAILS>: ഹെഡറില്‍ ക്ലിക്ക്‌ ചെയ്യുമ്പോള്‍ എക്സ്പാന്‍ഡ്‌ ചെയ്യുന്നതിനും
കൊളാപ്സ്‌ ചെയ്യുന്നതിനും വേണ്ട വാക്യങ്ങളുടെ ഭാഗം നിര്‍ണയിക്കുവാന്‍ ഈ ടാഗ്‌
ഉപയോഗിക്കുന്നു.

7. <FIGURE> and <FIGCAPTION>: ചിത്രങ്ങള്‍ ഉള്‍ക്കൊള്ളിക്കുവാന്‍ <FIGURE> ടാഗും,
അതിന്റെ ശീര്‍ഷകം നല്‍കാന്‍ <FIGCAPTION> ടാഗും ഉപയോഗിക്കുന്നു.
<FIGCAPTION> ടാഗ്‌ <FIGURE> ടാഗിനുള്ളിലാണ്‌ നല്‍കുന്നത്‌.

8. <PROGRESS>, <METER>: <PROGRESS>, <METER> എന്നീ ടാഗുകള്‍ ഒരേ പോലെയാ
ണ്‌. ഒരു ജോലിയുടെ പുരോഗതിയെ സൂചിപ്പിക്കാന്‍ <PROGRESS> ടാഗ്‌ ഉപയോഗിക്കു
ന്നു. ഇത്‌ ഫയല്‍ അപ്ലോഡ്‌ പോലുള്ള പ്രവര്‍ത്തനങ്ങളുടെ പുരോഗതി കാണിക്കു
ന്നതിന്‌ ഉപയോഗിക്കുന്നു. എന്നാല്‍ <METER> ടാഗ്‌ ഒരു പരിധിയിലുള്ള അളവ്‌ മാത്രം
നല്‍കുന്നതിന്‌ ഉപയോഗിക്കുന്നു (ഉദാഹരണത്തിന്‌ ഹാര്‍ഡ്‌ ഡിസ്കിന്റെ ഉപയോഗം
നല്‍കുന്നതിന്‌).

നമുക്കു സംഗ്രഹിക്കാം

ഈ അധ്യായത്തിലൂടെ HTML ന്റെ ചില മികച്ച സവിശേഷതകള്‍ നാം കണ്ടു കഴിഞ്ഞു.
ഉള്ളൂടക്കവാകൃയങ്ങള്‍ ആകര്‍ഷകമാക്കുന്നതിനായി വിവിധയിനം ലിസ്റ്റുകള്‍ നാം ചര്‍ച്ച
ചെയ്തു. ഒരു വെബ്‌ പേജില്‍ ഓഡിയോ, വീഡിയോ, ചിത്രങ്ങള്‍ തുടങ്ങിയവ ഉള്‍പ്പെ

S.HTML ഉപയോറിച്ചു കൊണ്ങുള്ള വെബ്‌ രൂപകല്‍ക്ന

ടുത്തി അതിന്റെ മനോഹാരിത വര്‍ധിപ്പിക്കാം. കൂടാതെ ഒരു വെബ്‌ പേജില്‍ ഉള്‍പ്പെടു
ത്തുന്ന വിവിധതരം ഹൈപ്പര്‍ ലിങ്കുകളെയും അവയുടെ പ്രാധാന്യത്തെയും കുറിച്ച്‌ നാം
മനസിലാക്കി. പല വിവരങ്ങളും വ്ൃക്തമായും എളുപ്പത്തിലും മനസിലാക്കുവാന്‍ കഴി
യുന്ന വിധത്തില്‍ രേഖപ്പെടുത്തുവാന്‍ പട്ടിക ഉപയോഗിച്ചു. പട്ടിക നിര്‍മാണത്തിനാവ
ശ്യമായ <TABLE>, <TR>, <TH>, <TD> എന്നീ ടാഗുകളും അവയുടെ ആഭ്രിബ്യയുട്ടുകളും
നാം ചര്‍ച്ച ചെയ്തു. പട്ടികയിലെ വരികളും നിരകളും ആവശ്യാനുസരണം ഒന്നിച്ച്‌
ചേര്‍ക്കുന്ന Rowspan, Colspan എന്നീ ആഭ്രിബ്യൂട്ടുകളെയും നാം മനസിലാക്കി. ഒരേ
സമയം വിവിധ വെബ്‌ പേജുകളെ തുറന്നു കാണുവാന്‍ ബ്രൌസര്‍ ജാലകത്തെ പല ഭാഗ
ങ്ങളായി വിഭജിക്കാമെന്ന്‌ നാം കണ്ടു. നെസ്റ്റഡ്‌ ഫ്രെയിം സെറ്റ്‌ എന്ന ആശയമുപയോ
ഗിച്ച്‌ ബ്രൌസര്‍ ജാലകത്തെ വിവിധരീതികളില്‍ വിഭജിക്കാമെന്നും നാം മനസ്സിലാക്കി.
ര്ബൌസര്‍ ജാലകത്തിലെ വിവിധ ഫ്രെയിമുകളെ ബന്ധിപ്പിക്കാന്‍ Target ആട്രിബ്യൂട്ടും
നാം ചര്‍ച്ച ചെയ്തു. ഒരു വെബ്‌ ഡോക്യുമെന്റില്‍ ഉപയോക്താവില്‍ നിന്നും വിലകള്‍
സ്വീകരിച്ച്‌ സെര്‍വറിലേക്ക്‌ അയയ്ക്കുവാന്‍വേണ്ട ഫോം നിര്‍മാണം നാം പഠിച്ചു. വിവിധ
തരത്തില്‍ ഡാറ്റ സ്വീകരിക്കുവാന്‍ വേണ്ടി ടെക്സ്റ്റ്‌ ബോക്സ്‌, പാസ്വേര്‍ഡ്‌, റേഡിയോ
ബട്ടണ്‍, ടെക്സ്റ്റ്‌ ഏരിയ, സെലക്റ്റ്‌ ബോക്സ്‌ തുടങ്ങിയ വിവിധ കണ്‍ട്രോളുകള്‍ നാം
പരിചയപ്പെട്ടു. ക്ലയന്റ്‌ സൈഡ്‌ സ്ക്രിപ്റ്റ്‌, സര്‍വര്‍സൈഡ്‌ സ്ക്രിപ്റ്റ്‌ എന്നിവയെ കുറിച്ച്‌
ചില കാര്യങ്ങള്‍ സൂചിപ്പിച്ചു. ഈ വിഷയങ്ങള്‍ ചര്‍ച്ച ചെയ്യുന്ന അടുത്ത അധ്യായങ്ങളി
ലേക്കുള്ള ചവിട്ടുപടിയായി ഈ അധ്യായത്തെ കരുതാം.

G'

1. താഴെ കൊടുത്തിരിക്കുന്ന വിശദാംശങ്ങളും സവിശേഷതകളും ഉള്‍ക്കൊള്ളിച്ച്‌ കേര
ത്തിലെ ഏതെങ്കിലും ഒരു ജില്ലയുടെ വെബ്‌ പേജ്‌ തയാറാക്കാനുള്ള 11111. കോഡ്‌
എഴുതുക.
€ ടെക്സ്റ്റ്‌ ഫോര്‍മാറ്റിങ്‌ ടാഗുകളും അവയുടെ ആട്രിബ്യൂട്ടുകളും ഉപയോഗിച്ച്‌

ഒരു ശീര്‍ഷകവും അതിനു താഴെ മുന്ന്‌ വാചകത്തില്‍ കുറയാതെയുള്ള ഒരു
ഖണ്ഡികയില്‍ ജില്ലയെക്കുറിച്ചുള്ള വിവരണവും നല്‍കുക.

നമുക്കു പരിശീലിക്കാം

€ ജില്ലയിലെ പ്രധാനപ്പെട്ട വിനോദസഞ്ചാര ക്രേന്ദങ്ങളുടെ ലിസ്റ്റ്‌.

2. നിങ്ങളുടെ സ്‌കൂളിന്റെ വെബ്‌ പേജ്‌ രൂപകല്‍പന ചെയ്യാന്‍ ആവശ്യമായ HTML
കോഡ്‌ താഴെപ്പറയുന്ന വിവരങ്ങള്‍ /സവിശേഷതകള്‍ ഉള്‍പ്പെടുത്തി എഴുതുക.

€ ടെക്സ്റ്റ്‌ ഫോര്‍മാറ്റിങ്‌ ടാഗുകളും അവയുടെ ആട്രിബ്യൂട്ടുകളും ഉപയോഗിച്ച്‌

ഒരു ശീര്‍ഷകവും അതിനനുബന്ധമായി മുന്ന്‌ വാചകങ്ങളില്‍ കുറയാതെ നിങ്ങ
ളുടെ സ്‌കൂളിന്റെ പ്രത്യേകതകള്‍ എടുത്തുപറയുന്ന ഖണ്ഡികയും.

€ നിങ്ങളുടെ സ്കൂളിലെ ഏതെങ്കിലും പഠനത്തോടൊപ്പമുള്ള പ്രവര്‍ത്തനങ്ങ
ളുടെ ലിസ്റ്റ്‌. ഉദാഹരണം : സ്കൌട്ട്‌, ഗൈഡ്‌, എന്‍.എസ്‌.എസ്‌.

കമ്പ്യൂട്ടര്‍ സയന്‍സ്‌ - XII

3. താഴെപ്പറയുന്ന വിവരങ്ങള്‍ വ്യക്തമാക്കുന്ന വെബ്‌ പേജിന്റെ HTML കോഡ്‌ എഴുതുക.

4. കേരളത്തിന്റെ ദേശീയോത്സവമായ ഓണത്തിന്റെ എടുത്തുപറയത്തക്ക പ്രത്യേകത
കള്‍ വര്‍ണിക്കുന്ന വെബ്‌ പേജിനുവേണ്ടി താഴെപ്പറയുന്ന സവിശേഷതകള്‍ ഉള്‍പ്പെ
ടുത്താനുള്ള HTML കോഡ്‌ എഴുതുക.

ഭ ആകര്‍ഷകമായ ഫോണ്ടിലുള്ള ശീര്‍ഷകം.
€ വള്ളംകളിയുടെ allo പേജിന്റെ പശ്ചാത്തലമാക്കുക.

€ ഓണത്തോട്‌ അനുബന്ധിച്ച്‌ നടത്തപ്പെടുന്ന പരമ്പരാഗത ആചാരങ്ങളായ അത്ത
പ്പുക്കളം, തുമ്പിതുള്ളല്‍, വള്ളംകളി, കുമ്മാട്ടിക്കളി, പുലികളി എന്നിവ ഏതെ
ങ്കിലും രണ്ടിലേക്ക്‌ ഇന്റേണല്‍ eile നല്‍കുക.

൭. നിങ്ങളുടെ സ്കൂളിന്റെ ഹൈസ്‌കൂള്‍, ഹയര്‍സെക്കന്ററി വിഭാഗങ്ങളുടെ വിവരങ്ങള്‍
അടങ്ങുന്ന രണ്ട്‌ വെബ്‌ പേജുകള്‍ നിര്‍മിക്കുക. അടുത്ത വെബ്‌ പേജ്‌ നിര്‍മിച്ച്‌ തിര
ശ്ചീനമായ രണ്ട്‌ ഭാഗങ്ങളാക്കി തിരിക്കുന്നു. ഒന്നാമത്തെ ഫ്രെയിമില്‍ സ്കൂളിനെ
ക്കുറിച്ചുള്ള ആമുഖവും രണ്ട്‌ ലിങ്കുകളുമാണ്‌ (ഹൈസ്കൂള്‍, ഹയര്‍സെക്കന്ററി)
നല്‍കേണ്ടത്‌. ഉപയോക്താവ്‌ ലിങ്കില്‍ ക്ലിക്ക്‌ ചെയ്യുമ്പോള്‍ യഥാക്രമം അവയുടെ
വെബ്‌ പേജുകള്‍ രണ്ടാമത്തെ ഫ്രെയിമില്‍ ലഭ്യമാക്കുന്നതിന്‌ വേണ്ട 11141. കോഡ്‌
തയാറാക്കുക.

6. ചുവടെ ചേര്‍ക്കുന്ന ടേബിളും അതിന്‌ താഴെ കൊടുത്തിരിക്കുന്ന കേരള പോലീ
സിന്റെ വെബ്സെറ്റിലേക്കുള്ള എക്സ്റ്റേണല്‍ eile എന്നിവ പ്രദര്‍ശിപ്പിക്കുന്ന വെബ്‌
പേജിന്‌ ആവശ്യമായ HTML കോഡും തയാറാക്കുക.

Road Accidents in Kerala during 2012 - 2014

ലു Total Number of
ear
Persons Killed | Persons Injured

36174 4286 41915
35215 4258 40346
2014 36282 4049 41096

Data Source: www.keralapolice.org

5,141. ഉപയോദിച്ചു കൊണ്ങുള്ള വെബ്‌ രൂപകല്‍ക്ന

7.

നമെ വിലയിരുത്താം
1. ചുവടെ ചേര്‍ക്കുന്നവയില്‍ തെറ്റ്‌ കണ്ടുപിടിച്ച്‌ തിരുത്തി എഴുതുക.
a. <UL Type = "i" Start = 3>
b. <IMG Src = "Myschool.jpg" Size = "50" >
c. <HTML>
<HEAD><TITLE><HEAD></TITLE>
<BODY> this is the body of the HTML
document</BODY>
</HTML>

ചുവടെ ചേര്‍ക്കുന്ന രീതിയിലുള്ള ഒരു അപേക്ഷ ഫോം തയാറാക്കുന്നതിനാവശ്ൃ
മായ HTML കോഡ്‌ എഴുതുക.

APPLICATION FOR THE BEST STUDENT AWARD
Sex: Male O Female O

Nemes [—
Class & Division:

Total Grade Point in Class XI: 2 |
Average Grade Point in Termly Exams in Class XII: 1 |
Cocurricular Activities:

Ncc [] NSS [2] Sports 6) Arts [] Literary ൮

Other Achievements:

രോഹിത്‌ HTML ഉപയോഗിച്ച്‌ നിര്‍മിച്ച ടേബിളില്‍ ബോര്‍ഡര്‍ കാണുവാന്‍ സാധി
ക്കുന്നില്ല. ഇതിന്റെ കാരണം എന്തായിരിക്കും?

ANG ചെയ്ത പേജ്‌ ഒരു ഫ്രെയിമിനുള്ളില്‍ പ്രദര്‍ശിപ്പിക്കുവഠന്‍ <A> ടാഗിന്റെ
ആട്രിബ്യൂട്ട്‌ ഉപയോഗിക്കുന്നു.

നിങ്ങളുടെ ആത്മാര്‍ഥ സുഹൃത്തുക്കളുടെ ഒരു ലിസ്റ്റ്‌ തയാറാക്കുവാന്‍ നിങ്ങളുടെ
കമ്പ്യൂട്ടര്‍ അധ്യാപകന്‍/ അധ്യാപിക ആവശ്യപ്പെടുന്നു എന്ന്‌ കരുതുക. നിങ്ങള്‍ ഏത്‌
ടാഗിനാണ്‌ പരിഗണന നല്‍കുക. ഇതിനുവേണ്ട HTML കോഡ്‌ ഭാഗം തയാറാക്കുക.

<OL> ടാഗിലെ ൦ ആട്രിബ്യൂട്ടിന്‌ നല്‍കാവുന്ന വിലകളുടെ പേര്‍ എഴുതുക.

<UL> ടാഗിന്റെ ആഭ്രിബ്യൂട്ടുകള്‍ എഴുതുക.

കമ്പ്യൂട്ടര്‍ സയന്‍സ്‌ - XII

7.

11.

12.
13.

14.

15.

16.
17.
18.
19.

ഇംഗ്ലീഷ്‌ ഭാഷയിലെ വലിയ അക്ഷരങ്ങള്‍ ഉപയോഗിച്ച്‌ ക്രമനമ്പരോട്‌ കൂടിയ ലിസ്റ്റ്‌
നിങ്ങള്‍ എങ്ങനെ നിര്‍മിക്കും?

ഇംഗ്ലീഷ്‌ ഭാഷയിലെ ചെറിയ അക്ഷരങ്ങള്‍ ഒരു ലിസ്റ്റിലെ ഇനങ്ങളുടെ ക്രമനമ്പര്‍
ആയി പ്രദര്‍ശിപ്പിക്കണം എന്ന്‌ കരുതുക. എങ്ങനെ ഇത്‌ സാധ്യമാക്കാം?
ക്രമനമ്പര്‍ 6 മുതല്‍ ആരംഭിക്കുന്ന ഒരു ലിസ്റ്റ്‌ നമുക്ക്‌ എങ്ങനെ നിര്‍മിക്കാം?

താഴെ കൊടുത്തിരിക്കുന്ന വിവരങ്ങള്‍ ഉള്‍ക്കൊള്ളിച്ചു വെബ്‌ പേജിനു വേണ്ട
-11141--കോഡ്‌ എഴുതുക.

Kerala
Health Care
Baby Products

* Toys

« Dress
Ladies Wear
¢ Kautthas

€ Jeans

വരുണ്‍ ഒരു വെബ്‌ പേജ്‌ നിര്‍മിക്കുന്നു. അതില്‍ ‘sample’ എന്ന വാക്ക്‌ ഹൈപ്പര്‍
ലിങ്കായി പ്രദര്‍ശിപ്പിച്ച്‌ /home/scert/Desktop-@8 സംഭരിക്കുന്ന sample.biml എന്ന
ഫയലിലേക്ക്‌ ലിജ; നല്‍കുവാനുള്ള HTML കോഡ്‌ ഭാഗം എഴുതുക.

Noshade എന്ന ആഭ്രിബ്യയൂട്ടുള്ള ടാഗിന്റെ പേര്‍ എഴുതുക.

സുനിലിന്‌ അയാളുടെ സ്വന്തം ആവശ്യങ്ങള്‍ക്കായി ഒരു ഇ-മെയില്‍ ലിജ; ഉള്‍പ്പെ
ടുന്ന വെബ്‌ പേജ്‌ നിര്‍മിക്കണം. നിങ്ങള്‍ക്ക്‌ ഇ-മെയില്‍ ലിങ്കിനുവേണ്ട പ്രോട്ടോ
കോള്‍ നിര്‍ദ്ദേശിക്കാമോ?

സഹീറിന്‌ അയാളുടെ വെബ്‌ പേജില്‍ നിന്നും www.gmail.com എന്ന വെബ്്‌സൈ
റ്റിലേക്ക്‌ ബന്ധിപ്പിക്കണം. ഇതിനാവശ്യമായ ടാഗും അവയുടെ ആഭ്രിബ്യൂട്ടുകളും
എഴുതുക.

HTML ല്‍ ലഭ്യമായ രണ്ട്‌ തരം ഹൈപ്പര്‍ ലിങ്കുകളുടെ സ്വഭാവ സവിശേഷതകള്‍
പ്രതിപാദിക്കുക.

Cellspacing, Cellpadding എന്നിവയുടെ വ്യത്യാസങ്ങള്‍ എഴുതുക.
Text, Textarea എന്നീ കണ്‍ട്രോളുകളുടെ വ്യത്യാസങ്ങള്‍ എഴുതുക.

<FORM> ടാഗിന്റെ (പധാന ആഭ്രിബ്യൂട്ടുകള്‍ Action നും ഉം ആകുന്നു.

തെറ്റോ ശരിയോ എന്ന്‌ പറയുക.
a. <TABLE> ടാഗിലെ Align ആഭ്രിബ്യയൂട്ടിന്റെ തനത്‌ വില center ആകുന്നു.
b. <FRAME> ഒരു കണ്ടെയ്നര്‍ ടാഗ്‌ ആകുന്നു.

൦. ഉപയോക്താവ്‌ ഒരു നിശ്ചിത ഫ്രെയിമിലെ ബോര്‍ഡറിന്റെ വലുപ്പ വൃത്യാസം
വരുത്തുന്നത്‌ തടയുവാന്‍ സ്ക്രോളിങ്‌ ഉപയോഗിക്കുന്നു.

5,140. ഉപയോദിച്ചു കൊണ്ങുള്ള വെബ്‌ രൂപകല്‍ക്ന

20.
21.
22.

23,

24.

25.

26.

27,

ഏത്‌ ടാഗാണ്‌ ഒരു (ENIDALE ജാലകത്തെ വിവിധ ഭാഗങ്ങളാക്കി വിഭജിക്കുന്നത്‌?
<FRAME> ടാഗിന്റെ പ്രധാന ആഭ്രിബ്യൂട്ടുകള്‍ എഴുതുക.

ഒരു വെബ്‌ പേജിനെ ലംബമായ രണ്ട്‌ ഭാഗങ്ങളാക്കി തിരിക്കുന്ന ഫ്രെയിം amg
നിര്‍മ്മിക്കുക. നിങ്ങള്‍ക്ക്‌ ഇഷ്ടപ്പെട്ട ഫുട്‌ബോള്‍ കളിക്കാരുടെ പേര്‍ ഇടതുഭാഗ
ത്തും, സെലക്ട്‌ ചെയ്യുന്ന കളിക്കാരനെക്കുറിച്ചുള്ള ലഘു വിവരണം വലതുഭാ
ഗത്തും പ്രദര്‍ശിപ്പിക്കണം. ഇതിനാവശ്യമായ കോഡ്‌ എഴുതുക.

ചുവടെ ചേര്‍ക്കുന്ന HTML കോഡ്‌ പരിശോധിച്ചതിന്‌ ശേഷം അതിന്റെ ഓട്ട്പുട്ട്‌

എന്താകും എന്ന്‌ എഴുതുക.

<HTML>

<HEAD><TITLE>A simple table</TITLE></HEAD>

<BODY>

<TABLE border="1" Cellspacing= "1" Cellpadding= "10">
<TR><TD> 1 </TD><TD> 2 </TD><TD> 3 </TD></TR>
<TR><TD> 4 </TD><TD> 5 </TD><TD> 6 </TD></TR>
<TR><TD> 7 </TD><TD> 8 </TD><TD> 9 </TD></TR>

</TABLE> |

</BODY> 1 | 2 | 3
</HTML>

താഴെ കൊടുത്തിരിക്കുന്ന പട്ടിക (്രദര്‍ശിപ്പിക്കുവാന്‍ വേണ്ട | 4 | 5 | 6
11101. കോഡ്‌ എഴുതുക.

നിങ്ങളുടെ ഇമെയില്‍, വിലാസം, ഫോണ്‍ നമ്പര്‍, പാസ്വേഡ്‌
തുടങ്ങിയവ സ്വീകരിക്കുവാന്‍ വേണ്ട ഫോം നിര്‍മ്മിക്കുന്നതി
നാവശൃമായ HTML കോഡ്‌ എഴുതുക.

നിങ്ങള്‍ക്ക്‌ ഇഷ്ടപ്പെട്ട മുന്ന്‌ ബൈക്കുകളുടെ പേര്‍ അടങ്ങുന്ന ലിസ്റ്റ്‌ ഒരു ഫ്രെയി
മിലും, അതിന്റെ ചിധ്രവും, വിവരണവും അടുത്ത ഫ്രെയിമില്‍ ലിങ്‌: ചെയ്തും
പ്രദര്‍ശിപ്പിക്കുന്നതിനുള്ള HTML കോഡ്‌ എഴുതുക.

ചുവടെ ചേര്‍ക്കുന്ന HTML കോഡ്‌ ഉപയോഗിച്ച്‌ രാജ്‌ നിര്‍മിച്ച വെബ്‌ പേജിലെ
പട്ടിക ശരിയായ രൂപത്തില്‍ കാണുവാന്‍ സാധിക്കുന്നില്ല. ഇതിന്റെ കാരണം
കണ്ടെത്തി ശരിയായ രീതിയില്‍ എഴുതുക.

<HTML>

<HEAD><TITLE> My Page </TITLE></HEAD>

<BODY>

<TABLE><TR><TH>Roll No. </TH><TH> Name </TH></TR>
<TR><TD>1 </TD><TD> Huda </TD></TR>

<TR><TD>2 </TD><TD>Bincy</TD></TR>

</TABLE>

</BODY>

</HTML>

ജാവാസ്ക്രിപ്റ്റ്‌ ഉപയോഗിച്ചുള്ള

പ്രധാന പഠനനേട്ടങ്ങള്‍

DO അശ്യാതത്മാന്റെ പഠനം പുര്‍ത്തുയാകുത്ത
തോടെ ADMIN ആര്‍ജിക്കെങ പറനരേട്ടങ്ങള്‍

ക്ലൈന്റ്‌ വശത്തെയും സെര്‍വര്‍ വശത്തെയും
സ്ക്രിപ്റ്റിംന്‌ ദാഷകളുടെ ഉപയോഗം തിരിച്ചറി
യുന്നു.

HOSE സൈസ്‌ സ്ക്രിപ്റ്റിംര്‌ ഭാഷകളുടെ
ആവര്യക്ത വിശദീകരിക്കുന്നു.

ക്ലൈന്റ്‌ സൈസ്‌ സ്ക്രിപ്റ്റിംഭ്‌ ഭാഷയായ
ജാവാസ്‌(്രിപ്റ്റിന്റെ പ്രാധാന്യം തിരിച്ചറി
യുന്നു.

വെബ്പേജില്‍ ജാവാസ്ക്രിപ്റ്റ്‌ ഫംന്ഷന്‍
ഉപയോരിക്കുന്നു

ജാവാസ്ക്രിപ്റ്റിലെ വിവിധ ഡാറ്റ ഉനങ്ങള്‍
വിശദീകരിക്കുന്നു.

ജാവാസ്ക്രിപ്റ്റില്‍ ശരിയായ വേരിയബിളുകള്‍
ഉപയോഗിക്കുന്നു.

ജാവാസ്ക്രിപ്റ്റില്‍ അനുയോജ്യമായ കണ്‍
ട്രോള്‍ സ്ട്രക്ച്ചറുകള്‍ ഉപയോരിക്കുന്നു.
ജാവാസ്ക്രിപ്റ്റില്‍ അനുയോജ്യമായ അന്തര്‍
നിര്‍മിത ഫംദ്ഷനുകള്‍ ഉപയോശിക്കുന്നു.
ജാവാസ്ക്രിപ്റ്റിലെ ഡോക്യുമെന്റ്‌ ഘടകങ്ങള്‍
ഉപയോരിക്കുന്ന രീതി വിവരിക്കുന്നു.
ടെക്സ്റ്റ്‌ ബോക്‌സുകളിലേയും കോംബോ
ബോക്സുകളിലേയും വിലകള്‍ കൈകാര്യം
ചെയ്യുന്നതിനുള്ള ജാവാസ്ക്രിപ്റ്റ്‌ ഫങ്ഷനു
കര്‍ നിര്‍മിക്കുന്നു.

ക്കൈന്റ്‌ സൈഡ്‌ സ്ക്രിപ്റ്റിങ്‌

മുന്‍ അധ്യായങ്ങളില്‍ ടെക്സ്റ്റുകളും (്രാഫിക്സു
കളും ഉള്‍പ്പെടുന്ന വിവിധ തരം വെബ്‌ പേജുകള്‍
നിര്‍മിക്കുവാന്‍ നാം പഠിച്ചു. ഈ ഇന്റെര്‍നെറ്റ്‌
യുഗത്തില്‍ നമ്മളില്‍ പലരും വിവിധ ആവശ്യ
ങ്ങള്‍ക്കായി അനവധി വെബ്സ്റ്റുകള്‍ സന്ദര്‍
ശിക്കാറുണ്ട്‌. നമുക്ക്‌ പരിചിതമല്ലാത്ത അനേകം
സവിശേഷതകള്‍ ഇത്തരം വെബ്‌ പേജുകളില്‍
അടങ്ങിയിരിക്കുന്നു. അതുകൊണ്ടുതന്നെ ഇത്ത
രം വെബ്‌ പേജുകള്‍ നിര്‍മിക്കുന്നതിനായി സ്ക്രി
പ്റ്റിംഗ്‌ ഭാഷകളിലുള്ള അറിവ്‌ ആവശ്യമാണ്‌.
ക്ലൈന്റ്‌ സൈഡിലും സെര്‍വര്‍ സൈഡിലും വിവി
ധയിനം സ്ക്രിപ്റ്റിംഗ്‌ ഭാഷകള്‍ ഉപയോഗിക്കു
ന്നുണ്ട്‌. ക്ലൈന്റ്‌ സൈഡ്‌ സ്ക്രിപ്റ്റിംഗ്‌ ഭാഷക
ളായ ജാവാസ്ക്രിപ്റ്റ്‌, വിബി സ്ക്രിപ്റ്റ്‌ എന്നിവ
യില്‍ ജാവാസ്ക്രിപ്റ്റാണ്‌ കൂടുതലായി ഉപയോ
ഗിക്കുന്നത്‌. കാരണം വിബി സ്ക്രിപ്റ്റിനെ അപേ
ക്ഷിച്ച്‌ ജാവാസ്ക്രിപ്റ്റിനെയാണ്‌ കൂടുതല്‍ (ബൌ
സറുകളും പിന്തുണയ്ക്കുന്നത്‌. ഇന്റര്‍നെറ്റില്‍
അനേകം ആളുകള്‍ വ്യത്യസ്ത (്രൌ൭സറുകള്‍
ഉപയോഗിക്കുന്നതിനാല്‍ വെബ്‌ പേജുകള്‍
കഴിയുന്നത്ര എല്ലാ ര്രൌസറുകള്‍ക്കും അനുയോ
ജൃമായ രീതിയില്‍ നിര്‍മിക്കേണ്ടതുണ്ട്‌. ഒരു
വെബ്‌ പേജില്‍ ജാവാസ്ക്രിപ്റ്റ്‌ എങ്ങനെ ഉപ
യോഗിക്കാമെന്ന്‌ ഈ അധ്യായത്തില്‍ മനസ്സിലാ
ക്കാം. നമുക്ക്‌ C++ പരിചയമുളളതിനാല്‍ ജാവാ
സ്ക്രിപ്റ്റ്‌ മനസ്സിലാക്കുവാന്‍ വളരെ എളുപ്പമാണ്‌.
കാരണം C++ ന്റെ അതേ വാകൃഘടനയാണ്‌
ജാവാസ്ക്രിപ്റ്റ്‌ പിന്തുടരുന്നത്‌.

6, ROTI Hlla) ഉപയാിച്ചുള്ള ക്ലൈന്റ്‌ സെഡസ്കിഫ്റിങ്‌

നെറ്റ്സ്കേപ്പ്‌ ്രൌസറിനുവേണ്ടി “ബ്രന്‍ഡന്‍ Daj’ ആണ്‌

ജാവാസ്ക്രിപ്റ്റ്‌ വികസിപ്പിച്ചത്‌. ജാവാസ്ക്രിപ്റ്റിന്റെ ആദൃ

നാമം “മോച്ച' എന്നായിരുന്നു. 1995-ല്‍ നെറ്റ്‌ സ്കേപ്പ്‌ ്രസര്‍

പതിപ്പ്‌ 2.0 ത്തില്‍ ഉള്‍പ്പെടുത്തിയ പ്പോള്‍ ഇതിന്റെ പേര്‌
“ജാവാസ്ക്രിപ്റ്റ്‌” എന്നാക്കിമാറ്റി. ആദ്യകാലങ്ങളില്‍, നെറ്റ്സ്കേപ്പ്‌ ബ്രൌസര്‍
മാധ്രമേ ജാവാസ്ക്രിപ്റ്റിന്‌ പിന്തുണ നല്‍കിയിരുന്നുള്ളൂ. എന്നാല്‍ ജാവാ |
സ്ക്രിപ്റ്റിന്റെ വിപുലമായ പ്രചാരം കാരണം, ഇന്റര്‍നെറ്റ്‌ എക്സ്പ്ലോറര്‍
1996-ല്‍ BAM lo Hla പിന്തുണ നല്‍കി. ഇപ്പോള്‍, ലോകത്തിലെ മിക്ക
ര്രൌസറുകളും ജാവാസ്ക്രിപ്റ്റിനെ പിന്തുണയ്ക്കുന്നു.

ഒക്രൈനിഡതി ഇച്ച്‌

6.1 ജാവസ്ക്രിപ്റ്റ്‌ ആരംഭിക്കാം (Getting started with JavaSript)

നാലാമത്തെ അധ്യായമായ വെബ്‌ ടെക്നോളജിയില്‍ ക്ലൈന്റ്‌ സൈഡിലും സെര്‍വര്‍
സൈഡിലും ഉള്ള സ്ക്രിപ്റ്റിംഗ്‌ ഭാഷകളുടെ ഉപയോഗം നാം ചര്‍ച്ചചെയ്തു. ക്ലൈന്റ്‌
സൈഡിലെ ഡാറ്റയുടെ സാധുത ഉറപ്പുവരുത്തുന്നതിനായി ക്ലൈന്റ്‌ സൈഡ്‌ സ്ക്രിപ്റ്റിംഗ്‌
ഭാഷകള്‍ ഉപയോഗിക്കുന്നു. ഇത്‌ സെര്‍വറിലെ നെറ്റ്‌ വര്‍ക്ക്‌ ദ്രാഫിക്കും ജോലി ഭാരവും
കുറയ്ക്കുന്നു. സെര്‍വര്‍ സൈഡ്‌ സ്ക്രിപ്റ്റിംഗ്‌ ഭാഷകള്‍ സെര്‍വറില്‍ പ്രവര്‍ത്തിക്കുന്നു.
ഇതിലൂടെ നിര്‍മിക്കപ്പെട്ട വെബ്‌ പേജ്‌ ക്ലൈന്റ്‌ ശ്രൌസറിലേക്ക്‌ തിരിച്ചയക്കുന്നു. ഡാറ്റാ
ബേസിന്റെ രൂപത്തില്‍ വലിയ അളവ്‌ ഡാറ്റ സെര്‍വറില്‍ സംഭരിക്കുന്നു. അതിനാല്‍
സെര്‍വര്‍ സൈഡിലെ സ്ക്രിപ്റ്റിംഗ്‌ ഭാഷ വൃത്യസ്ത ആവശ്യങ്ങള്‍ക്ക്‌ വേണ്ടി ഈ
ഡാറ്റബേസുമായി സംവദിക്കേണ്ടതായി വരും. എന്നാല്‍ ഒരു HHS സൈഡ്‌ Wiel
പ്റ്റിംഗ്‌ ഭാഷ സെര്‍വര്‍ ഡാറ്റബേസുമായി നേരിട്ട്‌ ബന്ധപ്പെടുന്നില്ല. അതുകൊണ്ടുതന്നെ
ക്ലൈന്റ്‌ സൈഡിലും സെര്‍വര്‍ സൈഡിലും ഉപയോഗിക്കുന്ന ഭാഷകളും കമാന്‍ഡുകളും
വ്ൃത്യസ്തങ്ങളാണ്‌.

ഈ അധ്യായത്തില്‍ ക്ലൈന്റ്‌ വശം സ്ക്രിപ്റ്റിംഗ്‌ ഭാഷ എന്ന നിലയില്‍ നമുക്ക്‌ ജാവാ
സ്ക്രിപ്റ്റിന്റെ അടിസ്ഥാന വിവരങ്ങള്‍ മനസിലാക്കാം. ജാവാസ്ക്രിപ്റ്റ്‌ ഉപയോഗിച്ച്‌
HTML പേജിലെ വിവിധ ഭാഗങ്ങളില്‍ പ്രോഗ്രാമുകള്‍ ഉള്‍പ്പെടുത്താന്‍ കഴിയും. ഇതിനായി
<SCRIPT> ടാഗ്‌ ഉപയോഗിക്കുന്നു.

<SCRIPT> Tag

80} HTML പേജില്‍ സ്ക്രിപ്റ്റിംഗ്‌ കോഡ്‌ ഉള്‍പ്പെടുത്താന്‍ <SCRIPT> ടാഗ്‌ ഉപയോഗി
ക്കുന്നു. <SCRIPT> ടാഗിലെ ‘language’ ആട്രിബ്യൂട്ട്‌ ഉപയോഗിക്കുന്നത്‌ സ്ക്രിപ്റ്റിംഗ്‌
ഭാഷയുടെ പേര്‍ വൃക്തമാക്കുന്നതിനാണ്‌. ഇവിടെ ക്ലൈന്റ്‌ സൈഡ്‌ സ്ക്രിപ്റ്റിംഗ്‌ ഭാഷ
യായി ജാവാസ്ക്രിപ്റ്റ്‌ ഉപയോഗിക്കുന്നതിനുവേണ്ടി <SCRIPT> ടാഗിലെ ‘language’ ആഭ്രി
ബ്യൂട്ടിന്റെ വില ‘JavaScript! എന്ന്‌ നല്‍കണം.

ഒരു HTML പേജില്‍ <SCRIPT> ടാഗ്‌ ഉപയോഗിക്കുന്നത്‌ താഴെ കാണുന്നത്‌ പോലെ
യാണ്‌.

‘The <SCRIPT> tag can be used in an HTML page as follows.

<SCRIPT Language= “JavaScript”>

ad

ഇനി നമുക്ക്‌ താഴെകൊടുത്തിരിക്കുന്ന HTML, ഫയല്‍ പരിഗണിക്കാം

പേജ്‌ നിര്‍മ്മാണം

<HTML>
<HEAD> <TITLE>Javascript - Welcome</TITLE> </HEAD>
<BODY>

<SCRIPT Language= "JavaScript">

document.write ("Welcome to JavaScript.");

</SCRIPT>
</BODY> Javascript - Welcome - Mozilla Firefox
| / savascript -Welcome
</HTML>

©  @file:///home/lap6/Chapter 6 JS/Code 6.1.ht v G

മുകളിലുള്ള കോഡ്‌ ഏതെങ്കിലും
ടെക്സ്റ്റ്‌ എഡിറ്ററില്‍ ടൈപ്പ്‌ ചെയ്യാം.
മൂന്‍ അധ്യായങ്ങളില്‍ HI'ML പേജു ചിത്രം 6.1: ജലഥര[കിപ്റ്‌ ഉപയോഗിക്കു വെബ്‌ പേജ്‌
കള്‍ സൃഷ്ടിക്കുന്നതിന്‌ നിങ്ങള്‍ ഉപ

യോഗിച്ചിരിക്കുന്ന ജീനി എഡിറ്ററിലും ഇത്‌ ടൈപ്പ്‌ ചെയ്യാവുന്നതാണ്‌. code6.html എന്ന
പേരില്‍ ഫയല്‍ സൂക്ഷിക്കുക. HTML പേജില്‍ ജാവാസ്ക്രിപ്റ്റ്‌ ഉപയോഗിച്ചിട്ടുണ്ടെ
ങ്കിലും അത്‌ സേവ്‌ ചെയ്തിരിക്കുന്നത്‌. html എക്സ്റ്റന്‍ഷനിലാണ്‌ എന്നത്‌ പ്രത്യേകം

Welcome to JavaScript.

ശ്രദ്ധിക്കേണ്ടതാണ്‌. ഇനി ഏതെങ്കിലും ഒരു ്രൌസറില്‍ നമ്മള്‍ സേവ്‌ ചെയ്ത 1141.
ഫയല്‍ തുറക്കുക. ചിത്രം 6.1 ല്‍ കാണിച്ചിരിക്കുന്നതുപോലെ ഒരു വെബ്‌ പേജ്‌ ലഭിക്കും.
‘document.write’ എന്ന പ്രസ്താവന ചെറിയ അക്ഷരങ്ങളിലാണ്‌ എഴുതിയിരിക്കുന്നത്‌
എന്നതും ശ്രദ്ധിക്കുക, കാരണം ജാവാസ്ക്രിപ്റ്റ്‌ കേസ്‌ സെന്‍സിറ്റീവ്‌ സ്ക്രിപ്റ്റിംഗ്‌ ഭാഷ
യാണ്‌. സ്ക്രിപ്റ്റിലെ കീവേഡുകള്‍ എല്ലാം ചെറിയ അക്ഷരത്തിലാണ്‌ എഴുതേണ്ടത്‌.

മുകളില്‍ കൊടുത്തിരിക്കുന്ന HTML കോഡില്‍, documentawrite() എന്നത്‌ ഒരു ജാവാ
സ്ക്രിപ്റ്റ്‌ നിര്‍ദേശം ആണ്‌. അത്‌ HTML പേജിന്റെ ബോഡിക്കകത്ത്‌ ഒരു ടെക്സ്റ്റ്‌ ഉള്‍

6, ജവാസ്്രിഫ്റ്‌ ഉപയാിച്ചുള്ള ക്ലൈന്റ്‌ സെഡസ്കിഫ്റിങ്‌

ക്കൊള്ളിക്കുവാന്‍ ഉപയോഗിക്കുന്നു. അതായത്‌, മുകളില്‍ നല്‍കിയിരിക്കുന്ന HTML
കേഡ്‌ നിര്‍മിക്കുന്ന അതേ വെബ്പേജ്‌ താഴെ നല്‍കിയിരിക്കുന്ന ജാവാ സ്ക്രിപ്റ്റ്‌ ഇല്ലാത്ത
HTML കോഡും നിര്‍മ്മിക്കുന്നു.

ച്ച്‌ ഒരു വെബ്‌ പേജ്‌ നിര്‍മാണം

<HTML>
<HEAD> <TITLE>Javascript - Welcome</TITLE> </HEAD>
<BODY>

Welcome to JavaScript.
</BODY>
</HTML>

മേല്‍ വിവരിച്ച ഉദാഹരണങ്ങള്‍ 6.1 ഉം 6.2 ഉം താരതമ്യം ചെയ്യാം. രണ്ടാമത്തെ HTML
കോഡില്‍, "Welcome to JavaScript" എന്നത്‌ ബോഡി ഭാഗത്തില്‍ നേരിട്ട്‌ എഴുതിയിരി
ക്കുന്നു. ആദ്യത്തെ കോഡില്‍ "Welcome to JavaScript" എന്നത്‌ ജാവാസ്ക്രിപ്റ്റ്‌ രീതി
യായ documentavrite() ഉപയോഗിച്ച്‌ ബോഡി ഭാഗത്ത്‌ ഉള്‍പ്പെടുത്തിയിരിക്കുന്നു.

യഥാര്‍ഥത്തില്‍ ‘document’ എന്നത്‌ വെബ്‌ പേജിന്റെ ബോഡി വിഭാഗത്തെ പ്രതിനിധാനം
ചെയ്യുന്നു. അതിനാല്‍ document.write() എന്ന ജാവാസ്ക്രിപ്റ്റ്‌ ഫങ്ഷന്‍ വെബ്‌ പേജിലെ
ബോഡി ഭാഗത്തില്‍ ഒരു ടെക്സ്റ്റ്‌ ഉള്‍പ്പെടുത്തും. C++ പോലെ സ്ക്രിപ്റ്റിലെ ഓരോ
പ്രസ്താവനയും ഒരു അര്‍ദ്ധവിരാമത്തില്‍ (;) അവസാനിക്കുന്നു എന്നത്‌ ശ്രദ്ധിക്കുക.

<SCRIPT Language= "JavaScript"> എന്ന 1111. നിര്‍ദേശം സുചിപ്പിക്കുന്നത്‌
തുടര്‍ന്നുവരുന്നത്‌ ജാവാസ്ക്രിപ്റ്റ്‌ കോഡ്‌ ആണെന്നുള്ളതാണ്‌. ഇനി നമുക്ക്‌ ജാവാ
സ്ക്രിപ്റ്റിനെ ബ്രൌസര്‍ എങ്ങനെ കൈകാര്യം ചെയ്യുന്നുവെന്ന്‌ കാണാം. എല്ലാ ്രൌസ
റിലും ജാവാസ്ക്രിപ്റ്റ്‌ എന്‍ജിന്‍ ഉണ്ട്‌. പ്രവര്‍ത്തിപ്പിക്കുന്ന സമയത്ത്‌ സ്ക്രിപ്റ്റ്‌ കോഡിനെ
ജാവാസ്ക്രിപ്റ്റ്‌ എന്‍ജിന്‍ വ്യാഖ്യാനിക്കും. ജാവാസ്ക്രിപ്റ്റ്‌ കോഡ്‌ നിര്‍വഹണത്തിനുള്ള
വിര്‍ച്യുല്‍ മെഷിനാണ്‌ (virtual machine) ജാവാസ്ക്രിപ്റ്റ്‌ എഞ്ചിന്‍. (ബൌസര്‍,
ജാവാസ്ക്രിപ്റ്റ്‌ കോഡ്‌ കാണുമ്പോള്‍ അതിനെ സ്ക്രിപ്റ്റ്‌ എന്‍ജിനിലൂടെ കടത്തിവിടുന്നു.
ജാവാസ്ക്രിപ്റ്റ്‌ എഞ്ചിന്‍ കോഡിനെ പ്രവര്‍ത്തിപ്പിക്കുന്നു. ഒരു HTML പേജില്‍ ജാവാ
സ്ക്രിപ്റ്റ്‌ കോഡ്‌ ഇല്ലെങ്കില്‍ ബൌസറിന്‌ ഒറ്റയ്ക്ക്‌ തന്നെ HTML പേജ്‌ പ്രദര്‍ശിപ്പിക്കാന്‍
കഴിയും. ജാവാസ്ക്രിപ്റ്റ്‌ കോഡ്‌ ഉണ്ടെങ്കില്‍ ജാവാസ്ക്രിപ്റ്റ്‌ എഞ്ചിന്റെ സഹായത്തോടു
കൂടി മാത്രമേ 111. പേജ്‌ പ്രദര്‍ശിപ്പിക്കുവാന്‍ കഴിയു. ഇപ്രകാരം ജാവാസ്ക്രിപ്റ്റ്‌
ഇല്ലാത്ത HTML ഫയലുകള്‍ എപ്പോഴും ജാവാസ്ക്രിപ്റ്റ്‌ ഉള്ളവയെക്കാള്‍ വേഗത്തില്‍
പ്രദര്‍ശിപ്പിക്കാന്‍ കഴിയും.

ഉദാഹരണം 6.3 ല്‍ ജാവാസ്ക്രിപ്റ്റ്‌ കോഡും 11111. ടാഗുകളും ഇടകലര്‍ത്തി നല്‍കിയി
രിക്കുന്നു. ഇതിന്റെ ഓട്ട്പുട്ട്‌ വെബ്പേജ്‌ ചിരം 6.2 ല്‍ നല്‍കിയിരിക്കുന്നു.

കമ്പ്യൂട്ടര്‍ സയന്‍സ്‌ - XII

ഉദാഹരണം 6.3: ഹെഡ്ഡിങ്‌ ടാഗുകള്‍ ഉള്‍ക്കൊള്ളുന്ന ഒരു വെബ്‌ പേജ്‌ നിര്‍മ്മാണം
<HTML>

<HEAD> <TITLE>Javascript - Welcome</TITLE> </HEAD>
<BODY>

<H1>

<SCRIPT Language= "JavaScript">

document.write ( ) 8

</SCRIPT>

</H1>

<BR>

<H2>

<SCRIPT Language= "JavaScript">

document.write (

</SCRIPT> ). Javascript - Welcome - Mozilla Firefox
Javascript- Welcome ഷ്ടം
</H2> ൽ
file:///home/lap6/Chapter 6 JS/Code 6.3.html » മു
</BODY> ട്ട
This is in H1 Head
</HTML>

മുകളില്‍ നല്‍കിയിരിക്കുന്ന HIML ടാഗുകള്‍ | This is in H2 Head

ക്കിടയില്‍ ഒന്നിലധികം തവണ സ്ക്രിപ്റ്റിംഗ്‌ ചിത്രം 0.2: ഫെഗ്ലിംമ്‌ ഒമുകള്‍ അടങ്ങു വെബ്‌ പേജ്‌
കോഡുകള്‍ ഉപയോഗിച്ചിട്ടുണ്ട്‌. അതുപോലെ

നിങ്ങള്‍ക്ക്‌ HTML ടാഗുകള്‍ ക്കിടയില്‍ എത്ര തവണ വേണമെങ്കിലും സ്ക്രിപ്റ്റ്‌ കോ
ഡുകള്‍ ഉപയോഗിക്കാം. സ്ക്രിപ്റ്റ്‌ കോഡുകള്‍ ഉപയോഗിക്കുന്നത്‌ എവിടെയായി
രൂന്നാലും <SCRIPT>, </SCRIPT> ടാഗുകള്‍ക്കിടയില്‍ അവ എഴുതിയിരിക്കണം.

ഒരു വെബ്‌ പേജില്‍ ജാവാസ്ക്രിപ്റ്റിന്റെ പ്രവര്‍ത്തനം അനുവദിക്കുന്നതിനോ നിരാ
കരിക്കുന്നതിനോ ഉള്ള സൌകര്യം എല്ലാ വെബ്‌ ബ്രൌസറുകളും ഉപയോക്താക്കള്‍ക്ക്‌
നല്‍കുന്നുണ്ട്‌. ജാവാസ്ക്രിപ്റ്റ്‌ നിരാകരിക്കുന്നതിലൂടെ, ആ പ്രൌസറിലെ ജാവാ
സ്ക്രിപ്റ്റ്‌ എഞ്ചിന്റെ പ്രവര്‍ത്തനമാണ്‌ നിരാകരിക്കുന്നത്‌. മോസില്ലയില്‍, Tools ->
Options -> Content -> Enabled Java Script തിരഞ്ഞെടുത്ത്‌ ജാവാസ്ക്രിപ്റ്റ്‌ പ്രവര്‍ത്തന
ക്ഷമമാക്കുകയോ പ്രവര്‍ത്തനക്ഷമ്മല്ലാതാക്കുകയോ ചെയ്യാം. Google Chrome A, Tools ->
Settings -> Show Advanced Settings -> Content Settings -> Do not allow any site to run
JavaScript രീതി ഉപയോഗിക്കാം. ഒരു വെബ്‌ ്രൌസറില്‍ ജാവാസ്ക്രിപ്റ്റ്‌ പ്രവര്‍ത്തനക്ഷമ
മല്ലാതാക്കിയിട്ടുണ്ടെങ്കില്‍ ആ (ബൌസറില്‍ സ്ക്രിപ്റ്റ്‌ പ്രവര്‍ത്തിക്കുകയില്ല അതായത്‌, ര്രൌ൭സര്‍
<SCRIPT> ... </ SCRIPT> ടാഗുകള്‍ക്കിടയിലുള്ള ഉള്ളടക്കം അവഗണിക്കും. ഒരു ്രൌസറിന്റെ
പ്രവര്‍ത്തനം പ്രധാനമായും അതിന്റെ സ്ക്രിപ്റ്റ്‌ എഞ്ചിന്റെ പ്രകടനത്തെ ആശ്രയിച്ചിരിക്കുന്നു.
ജാവാസ്ക്രിപ്റ്റ്‌ ഉപയോഗിക്കാത്ത ഒരു ഡൈനാമിക്‌ വെബ്‌ പേജ്‌ കാണാന്‍ പ്രയാസമാണ്‌.
മികച്ചതും, വേഗതയേറിയതും ശക്തവുമായ ജാവാസ്ക്രിപ്റ്റ്‌ എഞ്ചിനുകളുടെ നിര്‍മാണത്തി
നായി എല്ലാ ബ്രൌസര്‍ നിര്‍മ്മാതാക്കളും പരസ്പരം മത്സരിക്കുന്നു.
ത്ത്‌

6, ജവാസ്്രിഫ്റ്‌ ഉപയാിച്ചുള്ള ക്ലൈന്റ്‌ സെഡസ്കഫ്റിങ്‌

നിങ്ങളുടെ പുരോഗതി അറിയാം
1. <SCRIPT> ടാഗിന്റെ ഒരു ആട്രിബ്യൂട്ടിന്റെ പേര്‍ എഴുതുക.

2, ജാവാസ്ക്രിപ്റ്റില്‍ ഒരു 111141. പേജിന്റെ ബോഡി ഭാഗത്തില്‍ ഒരു
ടെക്സ്റ്റ്‌ പ്രിന്റ്‌ ചെയ്യാന്‍ ഉപയോഗിക്കുന്ന ഫങ്ഷന്‍ ആണ്‌
3. ജാവാസ്ക്രിപ്റ്റ്‌ കോഡ്‌ ആണ്‌ എഴുതിയിരിക്കുന്നത്‌ എന്ന്‌ വ്യക്തമാ
ക്കുന്നത്‌ <SCRIPT> ടാഗിന്റെ language ആട്രിബ്യയൂട്ടിന്‌ നല്‍കിയ
എന്ന മൂല്യമാണ്‌.
4. ജാവാസ്ക്രിപ്റ്റ്‌ എഞ്ചിന്റെ ഉപയോഗം എന്താണ്‌?

5. താഴെ പറയുന്ന പ്രസ്താവനകള്‍ ശരിയോ തെറ്റോ എന്ന്‌ എഴുതുക.
a. ജാവ സ്ക്രിപ്റ്റ്‌ Aone ക്ലൈന്റ്‌ വശം സ്ക്രിപ്റ്റിംഗ്‌ ഭാഷ.
ഒരു HTML പേജില്‍ ക്ലയന്റ്‌ വശം സ്ക്രിപ്റ്റിംഗ്‌ ഭാഷ ഉള്‍പ്പെടുത്താന്‍ <SCRIPT>
ടാഗാണ്‌ ഉപയോഗിക്കുന്നത്‌.
c. ഒരു HTML ഫയലില്‍ ഒരു <SCRIPT> ടാഗ്‌ മാത്രമേ അടങ്ങിയിരിക്കാവു.
നമുക്ക്‌ HTML കോഡില്‍ ജാവാസ്ക്രിപ്റ്റ്‌ കോഡ്‌ ഇടകലര്‍ ത്തുവാൻ കഴിയും.
€. ജാവാസ്ക്രിപ്റ്റ്‌ കോഡ്‌ എല്ലായ്പ്പോഴും <SCRIPT>, </ SCRIPT> എന്നതിന്‌
അകത്തതായിരിക്കണം.

f. ഓരോ ജാവാസ്ക്രിപ്റ്റ്‌ പ്രസ്താവനകളും അര്‍ദ്ധവിരാമം() കൊണ്ട്‌ അവസാ
നിക്കുന്നു.

പേജിന്റെ ബോഡി വിഭാഗത്തിനുള്ളില്‍ മാത്രം ജാവാസ്ക്രിപ്റ്റ്‌ ഉപയോഗിച്ച്‌

താഴെ പറയുന്ന വെബ്‌ പേജ്‌ സൃഷ്ടിക്കാന്‍ ഒരു 111171. കോഡ്‌ എഴുതുക.

അതായത്‌, ബോഡി വിഭാഗം താഴെ കാണിച്ചിരിക്കുന്നത്‌ പോലെ
നമുക്കു ചെയ്യാം ആയിരിക്കണം.

<BODY>

<SCRIPT Language= “JavaScript”’>

ടട ) Javascript - Mozilla Firefox

J savascript ക

</SCRIPT> file:///home/lapé/Chapter 6 Js/exti.html ഠ്‌) മ

</BODY> THE SIMPLE RECIPE TO HAPPINESS

Most of us blame outward factors as the reason for our
sorrow. Little do we realise that the source of happiness is
within us. If we approach life with a positive attitude, all
stumbling blocks can be turned to stepping stones.

6.2 ജാവാസ്ക്രിപ്റ്റിലെ ഫങ്ഷനുകളുടെ നിര്‍മാണം

(Creating functions in JavaScript)
C++ ലെ ഫങ്ഷനുകളെക്കുറിച്ച്‌ നാം നേരത്തെ മനസ്സിലാക്കിയിട്ടുണ്ട്‌. ജാവാസ്ക്രിപ്റ്റിലും
പ്രവര്‍ത്തനങ്ങള്‍ നിര്‍വചിക്കപ്പെട്ടിട്ടുള്ളതും വിളിക്കപ്പെടുന്നതും C++ ലെ അതേ രീതി
യില്‍ തന്നെയാണ്‌. ഒരു പേരുള്ള നിര്‍ദ്ദേശങ്ങളുടെ കൂട്ടമാണ്‌ ഫങ്ഷന്‍. വൃത്ൃസ്ത

കമ്പ്യൂട്ടര്‍ സയന്‍സ്‌ - XII

ആവശ്യങ്ങള്‍ക്ക്‌ ഉപയോഗിക്കാന്‍ കഴിയുന്ന ധാരാളം അന്തര്‍നിര്‍മിത ഫങ്ഷനുകള്‍
ജാവാസ്ക്രിപ്റ്റില്‍ ഉണ്ട്‌. ഇവയില്‍ ചില ഫങ്ഷനുകള്‍ ഈ അധ്യായത്തില്‍ പിന്നീട്‌
ചര്‍ച്ചചെയ്യും. ഈ അന്തര്‍നിര്‍മിത ഫങ്ഷനുകള്‍ക്ക്‌ പുറമെ നമുക്കും ഫങ്ഷനുകള്‍

നിര്‍വ്വചിക്കാം. വെബ്‌ പ്രോഗ്രാമിന്റെ ഒരു ഭാഗം ഒന്നില്‍ കൂടുതല്‍ തവണ പ്രവര്‍ത്തി
പ്പിക്കാം എന്നതാണ്‌ ഒരു ഫങ്ഷന്‍ ഉപയോഗിക്കുന്നതുകൊണ്ടുള്ള ഏറ്റവും വലിയ മെച്ചം.
ഈ ഭാഗം ഒരു പ്രാവശ്യം ഫങ്ഷനായി എഴുതിയാല്‍ മതി. താഴെ പറയുന്ന കോഡ്‌
നോക്കുക.

function 1222൩140)
{
document.write (“Welcome to JavaScript.”);

}
ഇവിടെ, ഒരു ഫങ്ഷന്‍ നിര്‍വചിക്കുവാനുള്ള കീവേഡ്‌ ‘function’ ഉം ഫങ്ഷന്റെ പേര്‍
0110൩0 ഉം ആണ്‌. ഫങ്ഷന്റെ പേര്‍ സാധുതയുള്ള ഏതൊരു ഐഡന്റിഫയറും ആകാം.
C++ ല്‍ ഐഡന്റിഫയറുകൾ നാമകരണം ചെയ്യുന്ന അതേ നിയമങ്ങള്‍ ജാവാസ്ക്രിപ്‌
റ്റിലും ഉപയോഗിക്കുന്നു. ഇവിടെ print() ഫങ്ഷനില്‍ ഒരു പ്രസ്താവന മാത്രമേ ഉള്ളൂ,
ആവശ്യമെങ്കില്‍ ഒന്നിലധികം പ്രസ്താവനകള്‍ ഒരു ഫങ്ഷനില്‍ ഉള്‍പ്പെടുത്താവുന്ന
താണ്‌. ഒരു ഫങ്ഷന്‍ നിര്‍വചിക്കുന്നത്‌ കൊണ്ട്‌ അത്‌ സ്വയം പ്രവര്‍ത്തിക്കണം എന്നില്ല,
അതിനെ വിളിക്കുമ്പോള്‍ മാത്രമേ അത്‌ പ്രവര്‍ത്തിക്കു. ഇതിനര്‍ത്ഥം ഒരു വെബ്‌ പേജിലെ
ഒരു ഫങ്ഷന്‍ വിളിക്കാതിരിക്കുകയാണെങ്കില്‍ ആ ഫങ്ഷന്‍ ഒരിക്കലും പ്രവര്‍ത്തിക്കു
കയില്ല. ഫങ്ഷന്റെ പേര്‍ ഉപയോഗിച്ച്‌ താഴെ പറയുന്ന ഫങ്ഷനെ വിളിക്കാം.

print();
ഫങ്ഷന്റെ പേരിന്‌ ശേഷമുള്ള അര്‍ധവിരാമം ശ്രദ്ധിക്കുക. നമുക്ക്‌ മുകളിലെ print( )
ഫങ്ഷന്‍ ഒരു HTML പേജില്‍ ഉപയോഗിക്കുന്നത്‌ എങ്ങനെ എന്ന്‌ നോക്കാം.

ന്‍ അടങ്ങിയ വെബ്‌ പേജ്‌ നിര്‍മാണം

<HTML>
<HEAD> <TITLE>Javascript - Functions</TITLE>

<SCRIPT Language= "JavaScript">
function print ()
|

ഠഠഠ്ബ൦൩ . ൦ (സ്്ല1ഠഠ൩൦ to JavaScript.");

}
</SCRIPT>
</HEAD>
<BODY>
</BODY>
</HTML>

6, ROTI Hlla) ഉപയാിച്ചുള്ള ക്ലൈന്റ്‌ സെഡസ്കഫ്റിങ്‌

HTML പേജിന്റെ ബോഡി ഭാഗത്തില്‍ ഒന്നും എഴുതിയിട്ടില്ലെന്നത്‌ ശ്രദ്ധിക്കുക. ഈ

കോഡ്‌ ബ്രൌസര്‍ വിന്‍ഡോയിലെ 'Welcome to JavaScript! പ്രദര്‍ശിപ്പിക്കില്ല. കാരണം
ഫങ്ഷന്‍ നിര്‍വചിച്ചിട്ടുണ്ടെങ്കിലും, അത്‌ പേജിലെ ഏതെങ്കിലും സ്ഥലത്തുനിന്ന്‌ വിളി
ച്ചിട്ടില്ല. അതിനാല്‍, ഫങ്ഷന്‍ ഒരിക്കലും പ്രവര്‍ത്തിക്കുകയില്ല, സ്ക്രീനില്‍ ഒന്നും പ്രദര്‍
ശിപ്പിക്കുകയുമില്ല. ബ്രൌസര്‍

) Javascript - Functions - Mozilla Firefox
ജാലകത്തില്‍ "Welcome to

| Javascript - Functions x |

JavaScript" എന്ന്‌ ഓട്ട്പൂട്ട ലഭി
ക്കുന്നതിന്‌ HIML പേജി ന്റെ
ബോഡി ഭാഗം താഴെ കാണുന്ന
രീതിയില്‍ പരിഷ്കരിക്കേണ്ട

@ file:///home/lap6/Chapter 6 JS/Code 6.6.html » C| »

Welcome to JavaScript.

1 ചിത്രം 0.3. DBA ഉപോഗിച്ചിരിക്കുന്ന വെബ്‌ പേജ്‌.
തുണ്ട്‌.

<BODY>
<SCRIPT Language= "JavaScript">
print();
</SCRIPT>
</BODY>
ഇനി നമുക്ക്‌ ജാവാ സ്ക്രിപ്റ്റ്‌ ഫങ്ഷന്റെ വാകൃഘടന പരിചയപ്പെടാം

function function_name()
{
statements;

}
ഇവിടെ function_name () എന്ന വരിയില്‍ ഫങ്ഷന്‍ ഹെഡറും, ബ്രാക്കറ്റിലുള്ള കോഡ്‌
ഫങ്ഷന്‍ ബോഡി എന്നു വിളിക്കുന്നു. C++ ല്‍ ഫങ്ഷന്‍ റിട്ടേണ്‍ ടൈപ്പ്‌ ഉണ്ടെങ്കിലും
ജാവാസ്ക്രിപ്റ്റില്‍ ഫങ്ഷന്‍ റിട്ടേണ്‍ ടൈപ്പില്ല. ജാവാസ്ക്രിപ്റ്റിലും C++ ലേതുപോലെ
നിങ്ങള്‍ക്ക്‌ ഫങ്ഷനില്‍ നിന്ന്‌ ചില മൂല്യങ്ങള്‍ തിരികെ നല്‍കാം. ഈ അധ്യായത്തില്‍
ജാവാസ്ക്രിപ്റ്റ്‌ ഉപയോഗത്തെക്കുറിച്ചുള്ള അടിസ്ഥാന ആശയങ്ങള്‍ മാത്രം നല്‍കാന്‍
ഉദ്ദേശിച്ചിട്ടുള്ളതിനാല്‍, ഇത്തരം കാര്യങ്ങള്‍ ഇവിടെ ചര്‍ച്ച ചെയ്യുന്നില്ല. മറ്റൊരു
വൃത്യാസം C++ ഒരു ഫങ്ഷന്‍ നിര്‍വചിക്കാന്‍ function എന്ന കീവേഡ്‌ ഉപയോ
ഗിക്കില്ല, എന്നാല്‍ ജാവാസ്ക്രിപ്റ്റില്‍ function എന്ന കീവേഡ്‌ ഉപയോഗിക്കുന്നു. 111141.
പേജിന്റെ ഹെഡ്‌ ഭാഗത്തിനുള്ളില്‍ ഫങ്ഷന്‍ നിര്‍വചിക്കപ്പെട്ടിരിക്കുന്നതായി നിങ്ങള്‍
ശ്രദ്ധിച്ചിരിക്കാം. ഹെഡ്‌ ഭാഗത്തിനുള്ളില്‍ തന്നെ ഫങ്ഷന്‍ നിര്‍വചിക്കണം എന്ന്‌
നിര്‍ബന്ധമില്ല, ബോഡി ഭാഗത്തും ഫങ്ഷന്‍ നിര്‍വചിക്കാഠ.

<BODY>
<SCRIPT Language= "JavaScript">

function print ()

കമ്പ്യൂട്ടര്‍ സയന്‍സ്‌ - XII

{

document.write (“Welcome to JavaScript.”);
}
print ();
</SCRIPT>
</BODY>

മുകളില്‍ പറഞ്ഞിരിക്കുന്ന കോഡ്‌ ഇതേ ജട്ട്പുട്ട്‌ നല്‍കുന്നത്‌ ചിത്രം 6.3 ല്‍
കൊടുത്തിരിക്കുന്നു.

ഫങ്ഷന്‍ ബോഡി ഭാഗത്തിനകത്താണ്‌ നിര്‍വചിക്കപ്പെട്ടിരിക്കുന്നതെങ്കില്‍പ്പോലും
അതിന്റെ പ്രവര്‍ത്തിപ്പിക്കുന്നതിനുവേണ്ടി അതിനെ വിളിക്കണം എന്നത്‌ ശദ്ധിക്കുക.
ഉദാഹരണത്തിന്‌ താഴെ കൊടുത്തിരിക്കുന്ന കോഡ്‌ സ്ക്രീനില്‍ ഒന്നും പ്രദര്‍ശിപ്പിക്കു
ന്നില്ല.

<BODY>

<SCRIPT Language= "JavaScript">

function print ()

{
document.write (“Welcome to JavaScript.”);

} ) Javascript - Functions - Mozilla Firefox

</SCRIPT> [ savascript-Functions x \ dh
- @ file:///nome/lap6/Chapter 6 JS/Code 6.12.htm » GC) മമ

</BODY>

Welcome to JavaScript.Welcome to JavaScript.

ഒരു HI'ML പേജില്‍ എവിടെയും ഒരു
ഫങ്ഷന്‍ നിര്‍വചിക്കപ്പെടാമെങ്കിലും, ഹെഡ്‌

ഭാഗത്തില്‍ ഫങ്ഷന്‍ നിര്‍വചനം ഉള്‍പ്പെടു ചരം. ദുബക്ക്‌കദ്ാതെ അ പ്രിന്റ്‌ ഫര്ഷനുകള്‍
ത്തുന്നതാണ്‌ നല്ലത്‌. ഉപമോഗിക്കുന്ന വെബ്‌ പേജ്‌
a

print () ഫങ്ഷന്‍ രണ്ടു തവണ വിളിച്ചിരി
ക്കുന്ന താഴെ കൊടുത്തിരിക്കുന്ന കോഡ്‌ പരിഗണിക്കുക, ഇത്‌ ചിത്രം 6.408 കാണുന്ന
രീതിയിലുള്ള ഓട്ട്പുട്ട്‌ നല്‍കുന്നു.
<BODY>
<SCRIPT Language= "JavaScript">
print ();
print ();
</SCRIPT>
</BODY>

ജട്ട്പുട്ട്‌ ചിര്രം 6.4 ല്‍ കാണിച്ചിരിക്കുന്നതുപോലെ ആയിരിക്കും. എന്തുകൊണ്ട്‌?

6, RIOT Hlla) ഉപയാിച്ചുള്ള ക്ലൈന്റ്‌ സെഡസ്കിഫ്റിങ്‌

വാസ്തവത്തില്‍, നമ്മള്‍ രണ്ടുതവണ ഫങ്ഷനെ വിളിക്കുമ്പോള്‍, അത്‌ ‘Welcome
to JavaScript’ എന്ന്‌ രണ്ടുതവണ ബോഡി ഭാഗത്ത്‌ എഴുതും. അതിനാല്‍ മുകളി
ലുള്ള കോഡിന്റെ ബോഡി ഭാഗം താഴെ എഴുതിയിരിക്കുന്നതിനു തുല്യമായിരിക്കും.

<BODY>
Welcome to JavaScript.Welcome to JavaScript.
</BODY>
സന്ദേശം രണ്ട്‌ വൃത്ൃയസ്ത വരികളില്‍ പ്രദര്‍ശിപ്പിക്കുന്നതിന്‌ നിര്‍ബന്ധമായും <BR>
SOW ഉപയോഗിക്കണം.

<BODY>

Welcome to JavaScript.<BR>Welcome to JavaScript.
</BODY>
ജാവാസ്ക്രിപ്റ്റ്‌ ഉപയോഗിച്ച്‌ ഇതേ റിസള്‍ട്ട്‌ ലഭിക്കുന്നതിന്‌ താഴെ കാണിച്ചിരിക്കുന്നത്‌
പോലെ മാറ്റം വരുത്താം.

<SCRIPT Language= "JavaScript">
function print ()

{

document.write ("Welcome to JavaScript.<BR>");

}
</SCRIPT>

മുകളില്‍ പറഞ്ഞിരിക്കുന്ന 111141. കോ

ഡിന്റെ BOSONS ചിത്രം 6.5 ല്‍ കൊടുത്തി Welcome to JavaScript.
രിക്കുന്നു. Welcome to JavaScript.

) Javascript - Functions - Mozilla Firefox

Javascript - Functions x |g

file:///home/lap6/Chapter 6 JS/Code 6.15.htm + GC] >

ചിത്രം. CB പ്രിന്റ്‌ ഫങ്ഷനുകള്‍
ഉപയോമിക്കുന വെബ്‌ പേജ്‌

നിങ്ങളുടെ പുരോഗതി അറിയാം

1. താഴെ കൊടുത്തിരിക്കുന്ന പ്രന്താവന ശരിയോ തെറ്റോ എന്ന്‌ പറയുക.

A. ഒരു വെബ്‌ പേജ്‌ ബ്രൌസറില്‍ തുറക്കുമ്പോള്‍ ഫങ്ഷന്‍ സ്വമേധയാ
പ്രവര്‍ത്തിക്കും.

b. ഒരു ഫംഗ്ഷന്‍ സാധാരണയായി HTML പേജിന്റെ aang} ഭാഗത്തില്‍
ഉള്‍പ്പെടുത്തുന്നു.
C. ഒരു ഫംഗ്ഷന്‍ എത്ര തവണ വേണമെങ്കിലും വിളിക്കാം.

d. ബോഡി ഭാഗത്തിനകത്ത്‌ ഒരു ഫങ്ഷന്‍ നിര്‍വചിച്ചിട്ടുണ്ടെങ്കിലും
അത്‌ വിളിച്ചിട്ടില്ലെങ്കില്‍ പ്രവര്‍ത്തിക്കില്ല.

2. ജാവാസ്ക്രിപ്റ്റില്‍ ഫങ്ഷനുകള്‍ ഉപയോഗിക്കുന്നതിന്റെ ഗുണദോഷങ്ങള്‍
എഴുതുക.

q
നമുക്കു ചെയ്യാം

1 താഴെക്കൊടുത്തിരിക്കുന്ന രണ്ട്‌ HTML കോഡുകള്‍ (കോഡ്‌ A ഉം
കോഡ്‌ 13 ഉം) പരിഗണിച്ച്‌ ഓട്ട്പൂട്ട്‌ എഴുതുക.
കോഡ്‌ A

<HTML>

<HEAD>

<SCRIPT Language= “JavaScript”’>
function print()
{

document.write (“Welcome to JavaScript”);

}

</SCRIPT>

</HEAD>

<BODY>

<SCRIPT Language= “JavaScript”’>
print();

document.write (“<BR>”);

print();

</SCRIPT>

</BODY>

</HTML>

കോഡ്‌ B

<HTML>

<HEAD>

<SCRIPT Language= “JavaScript”’>

function print ()

{

document.write (“Welcome to JavaScript’);

}

</SCRIPT>

</HEAD>

<BODY>

<SCRIPT Language= “JavaScript’>
print();

</SCRIPT>

<BR>

<SCRIPT Language= “JavaScript”’>
document.write (“<BR>”);
print();

</SCRIPT>

</BODY>

</HTML>

ചിത്രം 6.6 ല്‍ കാണിച്ചിരിക്കുന്നതുപോലെ ഓട്ട്പൂട്ട്‌ ലഭിക്കുന്നതിന്‌ ഒരു
HTML കോഡ്‌ താഴെ കൊടുക്കുന്നു. കോഡില്‍ startGreen(), stop
Green(),startRed() and stopRed () എന്നിങ്ങനെ നാലു ഫങ്ഷനുകള്‍
ഉണ്ട്‌. ഈ ഫങ്ഷനുകള്‍ 11114. പേജിന്റെ ബോഡി ഭാഗത്തില്‍ വൃത്ൃയസ്ത
സ്ഥലങ്ങളില്‍ നിന്നും വിളിക്കുന്നു. stopGreen () എന്ന ഫങ്ഷന്‍ ഒഴികെ
യുള്ള എല്ലാ ഫങ്ഷന്‍ നിര്‍വചനങ്ങളുടെയും ബോഡി ശൂന്യമാണ്‌.
നിങ്ങള്‍ക്ക്‌ ചിത്രത്തില്‍ കാണിച്ചിരിക്കുന്നതുപോലെ ഓട്ട്പുട്ട്‌ ലഭിക്കുന്നതിന്‌
മറ്റു ഫങ്ഷനുകളുടെ നിര്‍വചനം പൂര്‍ത്തിയാക്കുക.

<HTML>
<HEAD>
<SCRIPT Language= “JavaScript”’>

function startGreen()

function stopGreen()
document.write (“</FONT>”);

function startRed()

© @file:///home/lap6/Chapter 6 Js/ti » [5 Search ക്ത

This text is in green colour with font size 5.
This text is in red colour with font size 3.

</SCRIPT> This text is in green colour with font size 5.
</HEAD>

<BODY>

<SCRIPT Language= “JavaScript”’>

startGreen();

കമ്പ്യൂട്ടര്‍ സയന്‍സ്‌ - XII

</SCRIPT>

This is in Green colour with size 5

<SCRIPT Language= “JavaScript”’>
stopGreen ();

</SCRIPT>

<SCRIPT Language= “JavaScript’>
startRed();

</SCRIPT>

This is in Red colour with size 3

<SCRIPT Language= “JavaScript”’>
stopRed();

</SCRIPT>

<SCRIPT Language= “JavaScript”>
startGreen();

</SCRIPT>

This is in Green colour with size 5

<SCRIPT Language= “JavaScript”>
stopGreen ();

</SCRIPT>

</BODY>

</HTML>

6.3 ജാവാസ്ക്രിപ്റ്റിലെ ഡാറ്റ ഇനങ്ങള്‍ (Data types in JavaScript)

മെമ്മറി ഫലപ്രദമായി ഉപയോഗപ്പെടുത്തുന്നതിന്‌ പ്രോ്രഗാമിങ്‌ ഭാഷകള്‍ ഡാറ്റയെ
വൃത്യസ്ത വിഭാഗങ്ങളായി തരം തിരിച്ചിരിക്കുന്നു. C++ ലെ അടിസ്ഥാന ഡാറ്റ ഇനങ്ങള്‍
int, char, float, double, void തുടങ്ങിയവയാണെന്ന്‌ നമ്മള്‍ മനസ്സിലാക്കിയിട്ടുണ്ട്‌.
ഈ ഡാറ്റ ഇനങ്ങളൊടൊപ്പം, ടൈപ്പ്‌ മോഡിഫയറുകളും C++ ല്‍ ഉണ്ടായിരുന്നു. അടി
സ്ഥാന ഡാറ്റ ഇനങ്ങളുടെ എണ്ണം 3 ആയി പരിമിതപ്പെടുത്തിയിരിക്കുന്നതിലൂടെ ജാവാ
സ്ക്രിപ്റ്റ്‌ ഇതിന്റെ സങ്കീര്‍ണത കുറയ്ക്കുന്നു. താഴെ പറയുന്നവയാണ്‌ ജാവാസ്ക്രിപ്റ്റില്‍
ഉപയോഗിക്കുന്ന മുന്ന്‌ അടിസ്ഥാന ഡാറ്റ ഇനങ്ങള്‍.

നമ്പര്‍ (Number)

എല്ലാ നമ്പറുകളും ഈ വിഭാഗത്തില്‍ വരുന്നു. പോസിറ്റിവ്‌ സംഖ്യകളും, നെഗറ്റീവ്‌ സംഖ്യ

കളും, എല്ലാ ഫ്ളോട്ട്‌ വിലകളും (ഭിന്നസംഖ്യകള്‍?, പൂര്‍ണ സംഖ്യകളും നമ്പര്‍ (number)
ഡാറ്റ ഇനം ആയി പരിഗണിക്കപ്പെടും. അതിനാല്‍, 27, -300, 1.89, -0.0082 എന്നിവ ജാവാ
സ്ക്രിപ്റ്റിലെ നമ്പര്‍ ഡാറ്റ ഇനത്തിനുള്ള ഉദാഹരണങ്ങളാണ്‌.

6, ജവാസ്്രിഫ്റ്‌ ഉപയാിച്ചുള്ള ക്ലൈന്റ്‌ സെഡസ്കിഫ്റിങ്‌

സ്ര്രിംഗ്‌ (String)

ഇരട്ട ഉദ്ധരണികള്‍ക്കുള്ളില്‍ ഉള്ള പ്രതീകങ്ങള്‍, അക്കങ്ങള്‍ അല്ലെങ്കില്‍ മറ്റേതെങ്കിലും
ചിഹ്നങ്ങളുടെ കൂട്ടത്തെ ജാവാസ്ക്രിപ്റ്റില്‍ ഒരു സ്്രിംഗായി പരിഗണിക്കും. ഉദാഹരണം
“Kerala”, “Welcome”, “SCHOOL”, “1234”, “Mark20”, “abc$” and “sanil@123”.

ബുളിയന്‍ (Boolean)

ഈ വിഭാഗത്തില്‍ രണ്ട്‌ മൂല്യങ്ങള്‍ മാത്രമേ ഉള്ളൂ, അവ true, false എന്നിവയാണ്‌. ഈ
മൂല്യങ്ങള്‍ ഇരട്ട ഉദ്ധരണികളിലല്ല. ഇരട്ട ഉദ്ധരണികള്‍ക്കുള്ളില്‍ ആണെങ്കില്‍ അവ
സ്ര്രിംഗ്‌ ആയിരിക്കും. ജാവാസ്ക്രിപ്റ്റ്‌ കേസ്‌ സെന്‍സിറ്റീവ്‌ ആയതുകൊണ്ട്‌ ബൂളിയന്‍

വിലകളെ പ്രതിനിധാനം ചെയ്യുന്നതിന്‌ TRUE, FALSE എന്നിങ്ങനെ ഉപയോഗിക്കുവാന്‍
പാടില്ല.

6.4. ജാവാ സ്ക്രിപ്റ്റിലെ വേരിയബിളുകള്‍ (Variables in JavaSript)

വിലകള്‍ സംഭരിക്കുന്നതിന്‌ വേരിയബിളുകള്‍ ഉപയോഗിക്കാമെന്ന്‌ നമുക്കറിയാം. ജാവാ
സ്ക്രിപ്റ്റില്‍ var എന്ന കീവേഡ്‌ ഉപയോഗിച്ചാണ്‌ എല്ലാത്തരം വേരിയബിളുകളും പ്രഖ്യാ
പിക്കുന്നത്‌.

var xr

ഇവിടെ 'x' എന്നത്‌ വേരിയബിളിന്റെ പേരാണ്‌, ഒരു വേരിയബിളിന്‌ C++ ലേതുപോലെ
ഏതു പേരും ഉപയോഗിക്കാം. അത്‌ ഒരു സാധുതയുള്ള ഐഡന്റിഫയര്‍ ആയിരിക്കണമെ
ന്നുമാത്രം. C++ ല്‍ വൃത്യസ്ത തരം വേരിയബിളുകള്‍ പ്രഖ്യാപിക്കാന്‍ കീവേഡുകള്‍
int, float, char തുടങ്ങിയവ ഉപയോഗിച്ചു. പക്ഷേ, ജാവാസ്ക്രിപ്റ്റില്‍ var എന്ന
കീവേഡ്‌' മാര്രമാണ്‌ എല്ലാത്തരം വേരിയബിളുകള്‍ പ്രഖ്യാപിക്കുന്നതിനും ഉപയോ
ഗിക്കുന്നത്‌. ജാവാസ്ക്രിപ്റ്റില്‍ വേരിയബിളിന്‌ വില നല്‍കുമ്പോള്‍ മാര്തം നിര്‍വചനം
പൂര്‍ത്തിയാകുന്നു. ഒരു വേരിയബിളിന്‌ മൂല്യം നല്‍കുമ്പോള്‍ മാത്രമാണ്‌ വേരിയബിളിന്റെ
തരം ജാവാസ്ക്രിപ്റ്റ്‌ മനസ്സിലാക്കുന്നത്‌.

താഴെകൊടുത്തിരിക്കുന്ന പ്രസ്താവന പരിഗണിക്കുക.

var xX, Vi
xX = 25;
y = “INDIA”;
മുകളില്‍ പറഞ്ഞിരിക്കുന്ന ഉദാഹരണത്തില്‍, X എന്നത്‌ നമ്പര്‍ തരത്തിലും y സ്ട്രിംഗ്‌
തരത്തിലുംപെട്ട വേരിയബിളുകള്‍ ആണ്‌. എന്നാല്‍ കീവേഡ്‌ number, string എന്നൊ

ന്നും ഇവിടെ ഉപയോഗിച്ചിട്ടില്ല. താഴെ കൊടുത്തിരിക്കുന്ന ഉദാഹരണത്തില്‍ ജാവാ

സ്ക്രിപ്റ്റ്‌ എങ്ങനെയാണ്‌ വേരിയബിളുകള്‍ നിര്‍വചിക്കുന്നത്‌ എന്ന്‌ വിവരിക്കുന്നു.

കമ്പ്യൂട്ടര്‍ സയന്‍സ്‌ - XII

ഉപയോഗം വിവരിക്കുന്നു.

<HTML>

<HEAD> <TITLE>Javascript - Variables</TITLE> </HEAD>

<BODY>

<SCRIPT Language= "JavaScript">
var a, b, c, d, e, 7?
a= 25;
b = 18.5;
c = "INDIA";
d = true;
e = "true";
document.write("a is of type മു
document.write (ഇടഠ്‌ (a));
document.write("<BR>b is of type ലു
document.write (typeof (12) )
document.write("<BR>c is of type M) pg
document.write (typeof (c));
document.write ("<BR>d is of type ലു
document.write (typeof (9) )
document.write("<BR>e is of type നു?
document.write (typeof(e));
document.write("<BR>f is of type M) pg
document.write (typeof (f));

</SCRIPT>

</BODY>

</HTML>

ഇവിടെ, typeof () എന്നൊരു
ഫങ്ഷന്‍ പുതുതായി ഉപയോഗി
ച്ചിരിക്കുന്നു. പേര്‍ സൂചിപ്പിക്കുന്ന

) Javascript -

y) Javascript - Variables

@ file:///home/lap6/Chapter 6 JS/Code 6.18.html v C

Variables - Mozilla Firefox

x

»

തുപോലെ ഒരു വേരിയബിളിന്റെ
തരം കണ്ടുപിടിക്കുവാന്‍ ഈ anes
ഷന്‍ ഉപയോഗിക്കുന്നു. ഈ anes
ഷനെ പിന്നീട്‌ വിശദമായി പഠി
ക്കാം. മുകളിലുള്ള ഉദാഹരണ
ത്തിന്റെ ഓട്ട്പുട്ട്‌ ചിരം 6.6 ല്‍
കൊടുത്തിരിക്കുന്നു.

a is of type:
bis of type:
c is of type:
dis of type :
eis of type:
fis of type:

number
number
string
boolean
string
undefined

aiOo6.6: വേരിയബിളുകളുടെതെരം ഉപോഥം

പ്രീശികിക്കുമ) വെബ്‌ പേജ്‌.

വേരിയബിള്‍  പ്രഖ്യാപിച്ചിട്ടുണ്ടെങ്കിലും അതിന്‌ ഒരു വില നല്‍കിയിട്ടില്ല. അതുകൊണ്ട്‌
സ്ക്രിപ്റ്റ്‌ എഞ്ചിന്‌ അതിന്റെ തരം മനസ്സിലാക്കുവാനോ പ്രദര്‍ശിപ്പിക്കുവാനോ സാധിക്കു

6, ROTI Hlla) ഉപയാിച്ചുള്ള ക്ലൈന്റ്‌ സെഡസ്കിഫ്റിങ്‌

ന്നില്ല. നിര്‍വചിക്കാത്ത വേരിയബിളിനെ പ്രതിനിധാനം ചെയ്യുന്നതിനായി സ്ക്രിപ്റ്റില്‍
ഉപയോഗിക്കുന്ന ഒരു പ്രത്യേക ഡാറ്റ ഇനമാണ്‌ undefined. ഒരൊറ്റ var കീവേഡ്‌ ഉപ
യോഗിച്ച്‌ എത്ര വേരിയബിളുകള്‍ വേണെമെങ്കിലും പ്രഖ്യാപിക്കാനാവും (ഡിക്ലയര്‍ ചെയ്യാ
നാവും). വേരിയബിളുകള്‍ കോമ (,) ഉപയോഗിച്ച്‌ വേര്‍തിരിക്കേണ്ടതാണ്‌. വേരിയബിളു
കള്‍ ഉപയോഗിക്കുന്ന ഒരു ജാവാസ്ക്രിപ്റ്റിന്റെ പവര്‍ത്തനം നമുക്ക്‌ പരിഗണിക്കാം.

JH കണ്ടു പിടിക്കുന്നതിനുള്ള വെബ്‌

<HTML>

<HEAD><TITLE>Javascript - Variables</TITLE>
<SCRIPT Language= "JavaScript">

function add()

{

var m, nN, sum;

sum = m+n;
document.write ("Sum = ");
document.write (sum);

}

</SCRIPT>

</HEAD>

<BODY>

<SCRIPT Language= "“JavaScript">
add();

</SCRIPT>

</BODY>

</HTML>

) Javascript - Variables - Mozilla Firefox
മുകളില്‍ പറഞ്ഞ ഉദാഹരണ —————————

ത്തില്‍, ബോഡി ഭാഗത്തില്‍

J) Javascript - Variables * 1

7 we 7 @ file:///home/lap6/Chapter 6 JS/Code 6.19.html + മമ.
ഒരു ജാവാസ്ക്രിപ്റ്റ്‌ പ്രസ്താ

Sum = 30

വന മാത്രമേ അടങ്ങിയിട്ടുള്ളു,
അത്‌ add () എന്ന ഫങ്ഷനെ ചിത്രം 6.7: രഞ്ജു സംഖ്യെകളുടെ തുക
വിളിക്കുന്നു. ഫങ്ഷന്‍ പ്രവര്‍ കങ്ടുചിടിക്കുന്നതിനുള്ള വെ്ധ്പേജ്‌

ത്തനത്തിന്റെ ഫലം ചിത്രം 6.7 ല്‍ കാണിച്ചിരിയ്ക്കുന്നു.

6.5 ജാവാസ്ക്രിപ്റ്റിലെ ഓപ്പറേറ്ററുകള്‍ (Operatiors in JavaScript)

ജാവാ സ്ക്രിപ്റ്റിലെ മിക്കവാറും എല്ലാ ഓപ്പറേറ്ററുകളും C++ ലേതിന്‌ സമാനമാണ്‌.
അവ ഏതെല്ലാമാണെന്ന്‌ നോക്കാം

കമ്പ്യൂട്ടര്‍ സയന്‍സ്‌ - XII

6.5.1 അരിത്തമാറ്റിക ഓപ്പറേറ്ററുകള്‍ (Arithmetic Operatiors)

ജാവാസ്ക്രിപ്റ്റില്‍ ഉപയോഗിക്കുന്ന അരിത്തമാറ്റിക്‌ ഓപ്പറേറ്ററുകള്‍ പട്ടിക 6.1 കാണി
ക്കുന്നു.

പി
ഹരണത്തിലെ ശിഷ്ടം
വര്‍ദ്ധനവ്‌
Increment
കുറവ്‌ x
Decrement x= y--

പട്ടിക 6.1: Gamer’ 82480903208

മുകളിലുള്ള പട്ടികയിലെ എല്ലാ അരിത്തമാറ്റിക്‌ ഓപ്പറേററുകളും C++ ല്‍ പ്രവര്‍ത്തിക്കു
ന്നപോലെതന്നെ പ്രവര്‍ത്തിക്കുന്നുവെന്ന്‌ കാണാം.

6.5.2 വിലനല്‍കല്‍ ഓപ്പറേറ്ററുകള്‍ (Assignment Operators)

ജാവാസ്ക്രിപ്റ്റിലെ വിവിധ വിലനല്‍കല്‍ ഓപ്പറേറ്ററുകളുടെ ഉപയോഗരീതി പട്ടിക 6.208
കാണിച്ചിരിക്കുന്നു.

പ കു ചം
2 അത്യ നേടു
കെ [arse [a [3 |

! ഹരഞത്തിനുരേഷം വില നല്‍കുന്നു വില നല്‍കുന്നു ല്ലി b | 3 | | 3.33 | 33

—— മോഡുലസ്‌ | a eee es =
വില നല്‍കുന്നു

പട്ടിക 6.2: ജാവഥസ്(കിപ്റിലെ വിവിധ വിലനത്കല്‍ ഓഷ്റേദുകള്‍

മുകളിലുള്ള പട്ടികയില്‍ നിന്ന്‌ ഓരോ ഓപ്പറേറ്ററുകളുടെയും പ്രവര്‍ത്തനം മനസ്സിലാക്കുക
വളരെ എളുപ്പമാണ്‌. മ യുടെയും 0 യുടെയും വിലകളുപയോഗിച്ച്‌ “ഉദാഹരണം ” എന്ന

6, ജവാസ്്രിഫ്റ്‌ ഉപയാിച്ചുള്ള ക്ലൈന്റ്‌ സെഡസ്കിഫ്റിങ്‌

കോളത്തിലെ പ്രസ്താവന പ്രവര്‍ത്തിപ്പിച്ച ശേഷമുള്ള ഫലം ഉത്തരം” എന്ന കോളത്തില്‍
കാണിച്ചിരിക്കുന്നു.

6.5.3 റിലേഷണല്‍ ഓപ്പറേററര്‍ (താരതമ്യ ഓപ്പറേറ്റര്‍)
(Relational /Comparison operator)

ജാവാസ്ക്രിപ്റ്റില്‍ ഉപയോഗിക്കുന്ന വിവിധ തരം താരതമ്യ ഓപ്പറേറ്ററുകള്‍ പട്ടിക 6.3 ല്‍
കാണിച്ചിരിക്കുന്നു.

തുല്യം

അജ
ങ്ങേ
കുറവോ അല്ലെങ്കില്‍ തുല്യമോ

ച

= കൂടുതലോ അല്ലെങ്കില്‍ തുല്യമോ a>=b 10 3 true

പട്ടിക 6.3: റിലേഷണത്‌ arcie0008

ഒരു താരതമ്യ/റിലേഷണല്‍ ഓപ്പറേഷന്റെ ഫലം ശരിയോ തെറ്റോ എന്ന്‌ പട്ടികയില്‍
നിന്ന്‌ വൃക്തമാണ്‌. ഈ ഓപ്പറേറ്ററുകള്‍ രണ്ട്‌ വശത്തും ഉള്ള മൂല്യങ്ങള്‍ താരതമ്യം
ചെയ്യുകയും അതിനനുസരിച്ച്‌ ഫലം നല്‍കുകയും ചെയ്യുന്നു.

6.5.4 ലോജിക്കല്‍ ഓപ്പറേറ്റര്‍ (Logical Operators)

ജാവാസ്ക്രിപ്റ്റിലെ വിവിധ ലോജിക്കല്‍ ഓപ്പറേറ്ററുകളുടെ പട്ടിക 6.4 ല്‍ ഉദാഹരണ
ത്തോടൊപ്പം കാണിച്ചിരിക്കുന്നു.

പട്ടിക 6.4: കോജിക്കത്‌ ഓഷ്റമുകള്‍

മുകളില്‍ കൊടുത്തിരിക്കുന്ന പട്ടികയില്‍ നിന്ന്‌, ഈ ഓപ്പറേറ്ററുകള്‍ എല്ലാം തന്നെ
C++ ലേതിന്‌ സമാനമാണെന്നത്‌ വളരെ വൃക്തമാണ്‌. വിവിധ ആവശ്യങ്ങള്‍ക്കായി മറ്റ്‌
ധാരാളം ഓപ്പറേറ്ററുകള്‍ ജാവാസ്ക്രിപ്റ്റ്‌ നല്‍കുന്നു. ജാവാസ്ക്രിച്റ്റിനെക്കുറിച്ചുള്ള
നമ്മുടെ ചര്‍ച്ച ഈ അധ്യായത്തില്‍ മാ്രതം ഒതുങ്ങിയിരിക്കുന്നതിനാല്‍ അത്തരം

കമ്പ്യൂട്ടര്‍ സയന്‍സ്‌ - XII

ഓപ്പറേറ്ററുകളെക്കുറിച്ചുള്ള ചര്‍ച്ച ഈ പുസ്തകത്തിന്റെ പരിധിക്കു പുറത്താണ്‌. കൂടാതെ,
മുകളില്‍ വിവരിച്ച ഓപ്പറേറ്ററുകള്‍ ഒരു തുടക്കക്കാരനു വേണ്ട എല്ലാ പ്രവര്‍ത്തനങ്ങളും

നടത്തുന്നതിന്‌ പര്യാപ്തമാണ്‌. എന്നിരുന്നാലും, താഴെ പറയുന്ന സ്ട്രിംഗ്‌ ഓപ്പറേറ്റര്‍
വിവിധ സാഹചര്യങ്ങളില്‍ നിങ്ങള്‍ക്ക്‌ ഉപയോഗപ്രദമാകും. ഈ ഓപ്പറേറ്റര്‍ ല്‍
ലഭ്യമല്ല.

6.5.5 സ്ര്രിംഗ്‌ അഡിഷന്‍ ഓപ്പറേറ്റര്‍ (+) (String addition operator (+))

രണ്ട്‌ സംഖ്യകള്‍ കൂട്ടുന്നതിന്‌ + ഓപ്പറേറ്റര്‍ ഉപയോഗിക്കാമെന്ന്‌ നമുക്ക്‌ അറിയാം. അതേ
ഓപ്പറേറ്ററായ '+' രണ്ട്‌ സ്ര്രിംഗുകള്‍ കൂട്ടിച്ചേര്‍ക്കുന്നതിനും ഉപയോഗിക്കാം. കണ്‍കാറ്റ്‌
നേഷന്‍ (concatenation) എന്നതിനര്‍ഥം രണ്ട്‌ സ്ര്രിംഗുകള്‍ കൂട്ടിചേര്‍ക്കുക എന്നാണ്‌.

ഉദാഹരണം
var xX, yi
xX = “A good beginning "7
y = “makes a good ending.”;
Z=xt+y;

+ ഓപ്പറേറ്റര്‍ രണ്ട്‌ സ്ര്രിംഗുകള്‍ കൂട്ടിച്ചേര്‍ക്കും, അങ്ങനെ വേരിയബിള്‍ z ന്റെ മൂല്യം 'A
good beginning makes a good ending! എന്നാകും. ഒരേ ഓപ്പറേറ്റര്‍ വൃത്യസ്ത
ഓപ്പറന്റുകളുടെ തരം മനസ്സിലാക്കിയാണ്‌ പ്രവര്‍ത്തിക്കുന്നത്‌. ഓപ്പറന്റുകള്‍ സാംഖ്യ
ആണെങ്കില്‍, അവയുടെ തുക കണ്ടുപിടിക്കും. മറിച്ച്‌ സ്്രിംഗുകള്‍ ആണെങ്കില്‍ അവ
കൂട്ടിച്ചേര്‍ക്കും. ഇനി, താഴെ പറഞ്ഞിരിക്കുന്ന കോഡില്‍ 2 ന്റെ മുല്യം പ്രവചിക്കുക?

var xX, yi

x = 23";
yo
Z=xt+y;

ഇതിന്റെ ഉത്തരം 235 ആണ്‌. ഓപ്പറന്റുകളില്‍ ഏതെങ്കിലും ഒരെണ്ണം സ്ട്രിങ്ങാണെങ്കില്‍
+ ഓപ്പറേറ്റര്‍ എല്ലാ ഓപ്പറന്റുകളെയും സ്്രിങ്ങായി കരുതി കൂട്ടിച്ചേര്‍ക്കുന്നു. അങ്ങനെ
Z ന്റെ വിലയായി 235 ലഭിക്കുന്നു. xX ന്റെയും y യുടെയും തുക സംഖ്യാരുപത്തില്‍
കാണണമെന്നുകരുതുക. ഇതിനായി താഴെ കൊടുത്തിരിക്കുന്ന രീതിയില്‍ പ്രസ്താവന
മാറ്റിയെഴുതാം.

2 = Number(x) + y;
മുകളില്‍ പറഞ്ഞിരിക്കുന്ന പ്രസ്താവന പ്രവര്‍ത്തിച്ച ശേഷം വേരിയബിള്‍ 2 ന്റെ വില

28 ആയിരിക്കും. 1"ധ്ബാദ () എന്നത്‌ ജാവാ സ്ക്രിപ്റ്റിലെ ഒരു ഫംഗ്ഷന്‍ ആണ്‌, അത്‌
സ്ട്രിംഗ്‌ തരം ഡാറ്റയെ നമ്പറായി മാറ്റുന്നു. ഈ അധ്യായത്തിലെ ചില ഉദാഹരണങ്ങളില്‍

ഈ ഫംഗ്ഷന്‍ ഉപയോഗിക്കുന്നുണ്ട്‌.

6, ജവാസ്്രിഫ്റ്‌ ഉപയാിച്ചുള്ള ക്ലൈന്റ്‌ സെഡസ്കിഫ്റിങ്‌

നിങ്ങളുടെ പുരോഗതി അറിയാം

1. നമ്പര്‍, സ്ട്രിംഗ്‌, എന്നിവയാണ്‌ ജാവാസ്ക്രിപ്റ്റിലെ അടി
സ്ഥാന ഡാറ്റ ഇനങ്ങള്‍.

2. ‘true’ ഒരു ഇനം ഡാറ്റയാണ്‌.

3. ‘false’ ഒരു ഇനം ഡാറ്റയാണ്‌.

4. ജാവാസ്ക്രിപ്റ്റില്‍ ഒരു വേരിയബിള്‍ പ്രഖ്യാപിക്കാന്‍ വേണ്ട കീവേഡ്‌
ആണ്‌.
5. ജാവാസ്ക്രിപ്റ്റില്‍ ഡാറ്റ ഇനം അറിയാന്‍ ഉപയോഗിക്കുന്നതിനുള്ള
ഫങ്ഷന്‍ ആണ്‌.
6. % ഓപ്പറേറ്റര്‍ ഉപയോഗിക്കുന്നത്‌ എന്തിനാണ്‌?

27. ലോജിക്കല്‍ ഓപ്പറേറ്ററുകള്‍ ഏവ?

6.6 ജാവാസ്ക്രിപ്റ്റിലെ കണ്‍ട്രോള്‍ സ്ര്രക്ചറുകള്‍
(Control structures in JavaScript)

ഒരു പ്രോഗ്രാമിന്റെ പ്രവര്‍ത്തനത്തിന്റെ നിയ്രന്തണത്തിന്‌ കണ്‍ട്രോള്‍ സ്ട്രക്ചറുകള്‍
ഉപയോഗിക്കുന്നു. C++ ല്‍ പഠിച്ചിട്ടുള്ള എല്ലാ കണ്‍ദ്രോള്‍ സ്ദ്രക്ചറുകളും ജാവാസ്ക്രി
പ്റ്റിലും വ്യത്യാസമില്ലാതെ ഉപയോഗിക്കാവുന്നതാണ്‌. ജാവാ സ്ക്രിപ്റ്റില്‍ ഉപയോ
ഗിക്കുന്ന വിവിധ കണ്‍ട്രോള്‍ സ്്രക്ചറുകള്‍ ഉദാഹരണസഹിതം നമുക്ക്‌ പരിശോധിക്കാം.
6.6.1 if

എല്ലാ പ്രോ്രഗാമിങ്‌ ഭാഷയിലും ഏറ്റവുമധികം ഉപയോഗിക്കപ്പെടുന്ന കണ്‍ട്രോള്‍
സ്ദ്രക്ചറാണിത്‌. ചില വ്യവസ്ഥകള്‍ അടിസ്ഥാനമാക്കി ഒരു പ്രസ്താവന അല്ലെങ്കില്‍
ഒരു കൂട്ടം പ്രസ്താവനകള്‍ പ്രവര്‍ത്തിപ്പിക്കാന്‍ ഇത്‌ ഉപയോഗിക്കുന്നു. പട്ടിക 6.5 ല്‍
നല്‍കിയിരിക്കുന്നതുപോലെ രണ്ട്‌ രീതിയില്‍ ഇത്‌ ഉപയോഗിക്കാം

(test_expression) i (test_expression)

statements; statements;

}

else

{

statements;

പട്ടിക 6.5: if, else 895389510 if പ്രധ്മാവനമുടെ WIA/LISD
if, if .... else പ്രസ്താവനയുടെ ഉപയോഗം കാണിക്കുന്ന ഒരു ഉദാഹരണം നോക്കാം.

ഉദാഹരണം 6.12: ഒരു വിദ്യാര്‍ഥി ജയിച്ചോ ഇല്ലയോ എന്നു പരിശോധിക്കുന്നതിനുള്ള
ഒരു വെബ്‌ പേജ്‌ നിര്‍മാണം.

കമ്പ്യൂട്ടര്‍ സയന്‍സ്‌ - XII

ക കണ്ടു പിടിക്കുന്നതിനുള്ള വെബ്‌ പേജ്‌

<HTML>
<HEAD> <TITLE>Javascript - if</TITLE> </HEAD>
<BODY>
<SCRIPT Language= "JavaScript">
Var score;
score = 35;
if (score < 30)

{

document.write("The student is failed.");
}
else
{
document.write ("1൩൦ student is passed.");
} ) Javascript - if - Mozilla Firefox
</SCRIPT> J Javascript -if
</BODY> 7 = ടട
</HTML> _@ file:///home/lap6/Chapter 6 JS/Code 6.20.html ൦൪ e| >

The student is passed.

മുകളില്‍ കൊടുത്തിരിക്കുന്ന
പ്രോഗ്രാം കോഡ്‌ if - else പ്രസ്‌
താവന ഉപയോഗിക്കുന്ന വിധം
കാണിക്കുന്നു. പ്രോഗ്രാമിന്റെ ഓട്ട്പുട്ട്‌ ചിര്രം 6.8 ല്‍ നല്‍കിയിരിക്കുന്നു. നിങ്ങള്‍ 30 ല്‍
താഴെയുള്ള സംഖ്യ score ന്റെ വിലയായി നല്‍കി ഫലത്തില്‍ വരുന്ന മാറ്റം ശ്രദ്ധിക്കുക.

6.6.2 സ്വിച്ച്‌ (switch)

Mila] ഒരു “മള്‍ട്ടി (്രാഞ്ചിങ്‌' പ്രസ്താവനയാണ്‌. ഇതുപയോഗിച്ച്‌ ഒരു എക്സ്പ്രഷന്റെ
വില അടിസ്ഥാനമാക്കി വൃത്യസ്ത പ്രോഗ്രാം കോഡുകള്‍ പ്രവര്‍ത്തിപ്പിക്കുന്നതിനായി
തിരഞ്ഞെടുക്കാം. സ്വിച്ചിന്റെ വാകൃഘടന

switch (പരിശോധന പ്രയോഗങ്ങള്‍)
{

ചിത്രം 0.൫. if (MOI വൃക്ത്ഥാക്കുന്ന വെബ്‌ പേജ്‌

case valuel:
പ്രസ്താവനകള്‍?
break;

case value2:
പ്രസ്താവനകള്‍?
break;

പ്രസ്താവനകള്‍?

6, ജവാസ്്രിഫ്റ്‌ ഉപയാിച്ചുള്ള ക്ലൈന്റ്‌ സെഡസ്കിഫ്റിങ്‌

എക്സ്പ്രഷന്റെ വില അടിസ്ഥാനമാക്കി ഉചിതമായ കേസ്‌ ഭാഗം പ്രവര്‍ത്തിക്കുന്നു.
ഇവിടെ എക്‌സ്പ്രഷന്‍ ഒരു വേരിയബിളിന്റെ പേര്‍ ആവാം. നല്‍കുന്ന നമ്പറിന്‌ അനു
യോജ്യമായ ദിവസം (പ്രിന്റ്‌ ചെയ്യുന്ന 80} HTML കോഡ്‌ താഴെ കൊടുത്തിരിക്കുന്നു.

ാജ്യമായ ദിവസം പ്രിന്റ്‌ ചെയ്യുന്ന
നുള്ള HTML കോഡ്‌

<HTML>
<HEAD> <TITLE>Javascript - switch</TITLE> </HEAD>
<BODY>
<SCRIPT Language= "JavaScript">
var d;
d = 3;
switch (d)
{
case 1:
document .write ("Sunday") ;
break;
case 2:
document.write ("Monday");
break;
case 3:
document.write ("Tuesday");
break;
case 4:
document .write ("Wednesday");
break;
case 5:
document.write ("Thursday");
break;
case 6:
document.write ("Friday");
break;
case 7:
document.write ("Saturday");
break;
default:
document.write ("Invalid Day");

}
</SCRIPT>

</BODY>
</HTML>

കമ്പ്യൂട്ടര്‍ സയന്‍സ്‌ - XII

ഈ കോഡിന്റെ ഓട്ട്പുട്ട്‌ ചിത്രം 6.9 ല്‍ 817,

നല്‍കിയിരിക്കുന്നു. J savascript-switch
@ file:///home/lap6/Chapter 6 JS/Code 6.21.htr »¥ C| »

6.6.3 for ലുപ്പ്‌ (for loop)

Tuesday

ഒരു കൂട്ടം നിര്‍ദ്ദേശങ്ങള്‍ ആവര്‍ത്തിച്ച്‌ നട 206.9: Mflaf പ്രര്തവനമുടപമോഗം

പ്പാക്കാന്‍ for ലൂപ്പ്‌ ഉപയോഗിക്കുന്നു. for വൃഭത്ഥാക്കുന വെബ്‌ പേജ്‌
ലൂപ്പിന്റെ ആവര്‍ത്തനം നിയ്യ്ത്രിക്കുന്നതിനായി ഒരു ലൂപ്പ്‌ വേരിയബിള്‍ ഉപയോ
ഗിയ്ക്കുന്നു.

for ലൂപ്പിന്റെ വാകൃഘടന

for (1൩൭115൭൭൦൩: test_expression; update_statement)

{

പ്രസ്താവനകള്‍:

}

initialisation ലൂപ്പ്‌ വേരിയബിളിന്‌ ആദ്യ വില നല്‍കുവാന്‍ ഉപയോഗിക്കുന്നു.
test_expFression ലൂപ്പ്‌ തുടരണോ വേണ്ടയോ എന്ന്‌ പരിശോധിക്കാനുള്ള വ്യവസ്ഥയും
update_statement ലൂപ്പ്‌ വേരിയബിളിന്റെ വില വര്‍ധിപ്പിക്കുകയോ കുറയ്ക്കുകയോ
ചെയ്യുന്നതിനുമുള്ള പ്രസ്താവനയുമാണ്‌. താഴെ പറയുന്ന ഉദാഹരണം ലൂപ്പിന്റെ (asad
ത്തനങ്ങള്‍ വിശദീകരിക്കുന്നു.

കളുടെ വര്‍ഗങ്ങള്‍ പ്രദര്‍ശിപ്പിക്കുന്നതിനുള്ള

<HTML>
<HEAD> <TITLE>Javascript - for</TITLE> </HEAD>
<BODY>
<SCRIPT Language= "JavaScript">

var i, Sf

for (i=1; i<=10; i++)

{

Javascript - for - Mozilla Firefox

J Javascript - For

s = i*i;
document.write(s);
document.write ("<BR>");

}

</SCRIPT>
</BODY> alo 6.10: വേദിയബിളുക്ളുടെ തം DaleWI00
</HTML> പ്രിശിഷിക്കുന വെബ്‌ പേജ്‌.

ഇതിന്റെ ഓട്ട്പൂട്ട്‌ ചിര്രം 6.10 ല്‍ കൊടുത്തിരിക്കുന്നു.

ചിത്രം 6.11: ഓട്ട്പൂട്ട്‌ ‘Square of Lis 1' എന്ന്‌ ലഭിക്കുന്നതിന്‌ മുകളിലുള്ള കോഡ്‌ നമുക്ക്‌
പരിഷ്കരിക്കാം.

6, ROTI Hlla) ഉപയോിച്ചുള്ള ക്ലൈന്റ്‌ സെഡ്‌ സ്കിഫ്റിങ്‌

for (1-1: i<=10; i++) )_ Javascript - for - Mozilla Firefox
{ J Javascript-for ള്ള;
s = iti: @ file:///home/lap6/Chapter 6 JS/Code 6.23.html v G
= : :

. ടട ടി
document.write ("Square | square of2is4
1 [ ം Square of 3 is 9
of "+it "is "+ s)F Square of 4 is 16
. ട £5 is 25
document.write ("<BR>"); | sduareof 6is 36

Square of 7 is 49
} Square of 8 is 64

ഓട്ട്പുട്ട്‌ നിര്‍മ്മിക്കുന്നതിന്‌ സ്ദ്രിംഗ്‌ കൂട്ടി | ലാവാ

ച്ചേര്‍ക്കുന്നതിനുള്ള (സ്ര്രിംഗ്‌ അഡീഷന്‍)
ഓപ്പറേറ്റര്‍ ആയി ഉപയോഗിക്കുന്നു. വെബ്‌ പേജ്‌.

ചിത്രം. 11: നമ്ധറുകളുടൈൈര്‍റ്റം പ്രര്‍ശികിക്കുനാതിനുള്ള

6.6.4 while ലുപ്പ്‌

ഒരു വ്യവസ്ഥയുടെ അടിസ്ഥാനത്തില്‍ ഒരു കൂട്ടം പ്രസ്താവനകള്‍ ആവര്‍ത്തിച്ച്‌ പ്രവര്‍
ത്തിപ്പിക്കുന്നതിനാണ്‌ ലൂപ്പ്‌ എന്ന്പറയുന്നത്‌.

while (test_expression)
{
statements;
}
ഇവിടെ test_expression എന്നത്‌ ഒരു വ്യവസ്ഥയാണ്‌. വ്യവസ്ഥ ശരിയായിരി
ക്കുന്നിടത്തോളം ലൂപ്പിനുള്ളിലെ പ്രസ്താവനകള്‍ തുടര്‍ച്ചയായി പ്രവര്‍ത്തിച്ചുകൊ
ണ്ടിരിക്കും. താഴെക്കാണുന്ന ഉദാഹരണം 10 വരെയുള്ള ഇരട്ട സംഖ്യകള്‍ പ്രദര്‍ശിപ്പി

ക്കുന്നു.

സംഖൃകള്‍ പ്രദര്‍ശിപ്പിക്കുന്നത്തിനുള്ള

<HTML>
<HEAD> <TITLE>Javascript - while</TITLE> </HEAD>
<BODY>
<SCRIPT Language= "JavaScript">
var i;
1 = 2;
while (i<=10)
{
document.write (2);
document.write ("<BR>");
i v= 25 ) Javascript - while - Mozilla Firefox
} ff Javascript - while x 1
</SCRIPT> @ file:///home/lap6/Chapter 6 JS/Code 6.24.html ന) മ
</BODY>
</HTML>

206.12: while ഷുഷിമ്റ്‌ പെമോഗത്തെ ലൃക്ത്ഥാക്കുനന
വെബ്‌പേജ്‌

കമ്പ്യൂട്ടര്‍ സയന്‍സ്‌ - XII

തന്നിരിക്കുന്ന കോഡിന്റെ ഓട്ട്പൂട്ട്‌ ചിത്രം 6.12 ല്‍ നല്‍കിയിരിക്കുന്നു.

ജാവാസ്ക്രിപ്റ്റില്‍ C++ ലേതിന്‌ സമാനമായ do while ലൂപ്പ്‌ ലഭ്യമാണ്‌. മിക്കവാറും
എല്ലാ ജോലികളും For ലൂപ്പിലും while ലൂപ്പിലും ചെയ്യാമെന്നതിനാല്‍ ഈ അധ്യായ
ത്തില്‍ നമ്മള്‍ മറ്റ്‌ ലൂപ്പുകള്‍ ചര്‍ച്ച ചെയ്യുന്നില്ല.

ഉദാഹരണം 6.10 ല്‍ document.write (൬); എന്ന പ്രസ്താവന
4 ഒഴിവാക്കുകയാണെങ്കില്‍ എന്ത്‌ ഓട്ട്പൂട്ട്‌ ലഭിക്കും;

നമുക്കു ചെയ്യാം
നിങ്ങളുടെ പുരോഗതി അറിയാം

1. ഒരു കൂട്ടം പ്രസ്താവനകള്‍ തിരഞ്ഞെടുത്ത്‌ പ്രവര്‍ത്തിപ്പിക്കുന്ന
തിന്‌ _ Bo ഉം കണ്‍ട്രോള്‍ പസ്ട്രക്ചറുകള്‍
ഉപയോഗിക്കുന്നു.

2. ജാവാസ്ക്രിപ്റ്റിലെ ലൂപ്പിങ്‌ പ്രസ്താവനകള്‍ക്ക്‌ ഉദാഹരണങ്ങള്‍
എഴുതുക.

3. ഒരു മള്‍ട്ടി പബ്രാഞ്ചിങ്‌ പ്രസ്താവനയാണ്‌.

4. ശരിയോ തെറ്റോ എന്നെഴുതുക.
a. break പ്രസ്താവന switch ബ്ലോക്കിനുള്ളില്‍ ഉപയോഗിക്കുന്നു.

SWitch, പ്രസ്താവന ഉപയോഗിക്കുകയാണെങ്കില്‍, ചുരുങ്ങിയത്‌ ഒരു
തവണയെങ്കിലും അതില്‍ break പ്രസ്താവന ഉപയോഗിച്ചിരിക്കണം.
c. if-else ഉപയോഗിച്ച്‌ എഴുതിയ പ്രോഗ്രാമുകള്‍ എല്ലാം സ്വിച്ച്‌
പ്രസ്താവന ഉപയോഗിച്ച്‌ മാറ്റി എഴുതാം.
d. switch പ്രസ്താവന ഉപയോഗിച്ച്‌ എഴുതിയ പ്രോ്രഗാമുകള്‍ എല്ലാം
if-else ഉപയോഗിച്ച്‌ മാറ്റി എഴുതാം.

5. for ലൂപ്പും while ലൂപ്പും തമ്മിലുള്ള വൃത്യാസം എന്താണ്‌?

6.7 അന്തര്‍ നിര്‍മിത ഫങ്ഷനുകള്‍ (Built-in function)
ജാവാസ്ക്രിപ്റ്റില്‍ ധാരാളം അന്തര്‍നിര്‍മിത ഫങ്ഷനുകള്‍ ലഭ്യമാണ്‌. ഫങ്ഷനുകളെ
മെത്തേഡ്‌ എന്നും വിളിക്കുന്നു. സാധാരണയായി ഉപയോഗിക്കുന്ന ഏതാനും ഫങ്ഷ
നുകളെക്കുറിച്ച്‌ ചര്‍ച്ച ചെയ്യാം.

a. alert ()

സ്ക്രീനില്‍ ഒരു സന്ദേശം പ്രദര്‍ശിപ്പിക്കാന്‍ ഈ ഫങ്ഷന്‍ ഉപയോഗിക്കുന്നു.

ഉദാഹരണത്തിന്‌ :

alert (“Welcome to JavaScript”);

6, RIOT Hlla 9 ഉപയാിച്ചുള്ള ക്ലൈന്റ്‌ സെഡസ്കിഫ്റിങ്‌

എന്ന പ്രസ്താവന ഉപയോഗിച്ച്‌ ചിത്രം 6.13 ല്‍
കാണിച്ചിരിക്കുന്ന സന്ദേശ ജാലകം ബ്രൌസറില്‍

Welcome to JavaScript

കാണിക്കാം. ഡാറ്റയുടെ സാധുത ഉറപ്പുവരു
ത്തുന്ന സമയത്ത്‌ ഉപയോക്താവിന്‌ സന്ദേശം
നല്‍കുന്നതിന്‌ ഈ ഫങ്ഷന്‍ ഉപയോഗിക്കുന്നു.
2. isNaN ()

തന്നിരിക്കുന്ന വില ഒരു സംഖ്യയാണോ അല്ല ചിത്രം. 73. രരേശമ്ാലകം

യോ എന്നു പരിശോധിക്കുന്നതിന്‌ ഈ

ഫങ്ഷന്‍ ഉപയോഗിക്കുന്നു. ഈ ഫങ്ഷനില്‍, NaN എന്നത്‌ നോട്ട്‌ എ നമ്പര്‍ എന്ന്‌
സൂചിപ്പിക്കുന്നു. നല്‍കിയിരിക്കുന്ന വില ഒരു സംഖ്യയല്ലെങ്കില്‍ ഫങ്ഷന്‍ true എന്ന്‌
തിരികെ നല്‍കുന്നു. ഉദാഹരണത്തിന്‌,

1. isNaN (“welcome”);
2. isNaN (“A123”);

3. isNaN(“Score50”);
4. isNaN (“A”);

താഴെ പറയുന്ന പ്രസ്താവനകള്‍ false എന്ന വില തിരികെ നല്‍കുന്നു.

1. isNaN(%13”);

2. ടിടി (13);

3. 3ടിഴച്ഴ (൩3.5൩)
4. isNaN (“0.123”);

താഴെ പറയുന്ന പ്രസ്താവന ചിത്രം 6.14 ല്‍ കാണിച്ചിരിക്കുന്ന സന്ദേശ ജാലകം ബ്രൌസ
റില്‍ പ്രദര്‍ശിപ്പിക്കുന്നു.
alert (isNaN(‘A”’));

ഡാറ്റയുടെ സാധുകരണത്തിനായി ഈ ane
ഷന്‍ വളരെ ഉപയോഗ്രപ്രദമാണ്‌. ഉദാഹരണ
ത്തിന്‌, ഒരു വിദ്യാര്‍ഥിയുടെ പ്രായം നല്‍കുന്ന
തിന്‌ വെബ്‌ പേജില്‍ ഒരു ടെക്സ്റ്റ്‌ ബോക്സ്‌
ഉണ്ട്‌ എന്ന്‌ കരുതുക, അബദ്ധത്തില്‍ അതില്‍
സംഖ്യക്ക്‌ പകരം ഒരു ക്യാരക്ടര്‍ നല്‍കിയേ
ക്കാം. അപ്പോള്‍ ഈ ഫങ്ഷന്‍, ഇന്‍പുട്ട്‌ നല്‍
കിയത്‌ ഒരു നമ്പര്‍ ആണോയെന്ന്‌ പരിശോധി

ക്കുകയും ഇത്‌ ഒരു സംഖ്യയല്ലെങ്കില്‍, ചിത്രം 6.74: isNaN () മറെ മെട്ട്പുട്ട്‌

alert () ഫങ്ഷന്‍ ഉപയോഗിച്ച്‌ ഒരു സന്ദേശം പ്രദര്‍ശിപ്പിക്കുകയും ചെയ്യുന്നു.

കമ്പ്യൂട്ടര്‍ സയന്‍സ്‌ - XII

c. toUpperCase ()

ഈ ഫങ്ഷന്‍ തന്നിരിക്കുന്ന സ്ട്രിംഗിനെ അപ്പര്‍ കേസാക്കി മാറ്റുന്നു. താഴെ തന്നിരിക്കുന്ന
ഉദാഹരണം നോക്കുക.

var xX, Yi

xX = “JavaScript”;

y = x. toUpperCase();

alert (൧) JAVASCRIPT
ഈ കോഡിന്റെ ഓട്ട്പൂട്ട്‌ ചിത്രം 6.15 ല്‍ കാണി
ച്ചിരിക്കുന്നു. toUpperCase () എന്ന ഫങ്ഷന്‍
ME Sls വേരിയബിള്‍ x ന്റെ പേരിനോട്‌ ചേര്‍
ത്ത്‌ വിളിക്കുന്നു. അതായത്‌ toUpperCase ()
എന്നത്‌ സ്ര്രിംഗിനെ വലിയ അക്ഷരമാക്കി തിരി
കെ നല്‍കുന്നു. ജാവസ്ക്രിപ്റ്റ്‌ കേസ്‌ സെന്‍സി
റ്റീവ്‌ ഭാഷയാണ്‌. അതിനാല്‍ കോഡില്‍ ഫങ്‌
ഷന്‍ ഏതു തരം അക്ഷരത്തിലാണോ അതേ രീതിയില്‍ തന്നെ ഉപയോഗിക്കണം.

2@06.13: LowerCase() ന്റെ ഒെട്ട്പു്ട്‌

ദ. toLowerCase ()

ഈ ഫങ്ഷന്‍ തന്നിരിക്കുന്ന സ്ര്രിംഗിനെ ചെറിയ അക്ഷരമാക്കി തിരികെ നല്‍കുന്നു.
താഴെ നല്‍കിയിരിക്കുന്ന ഉദാഹരണം ശ്രദ്ധിക്കുക

var Xx, y;

x = “JavaScript”;
y = x.toLowerCase();
alert (y); javascript

മുകളിലെ കോഡിന്റെ ഓട്ട്പൂട്ട്‌ ചിത്രം 6.1603
കാണിച്ചിരിക്കുന്നു. സ്ര്രിംഗില്‍ എല്ലാ ക്യാര
കുറുകളും ഇപ്പോള്‍ ചെറിയ അക്ഷരത്തിലാണ്‌
അതിനാല്‍ toLowerCase() അതേ
സ്ട്രിംഗ്‌ തിരികെ നല്‍കുന്നു.

€. charAt ()

ഈ ഫങ്ഷന്‍ ഒരു പ്രത്യേക സ്ഥാനത്തുള്ള
ക്യാരക്ടര്‍ തിരികെ നല്‍കുന്നു. charAt (0)
എന്നത്‌ സ്ര്രിംഗിലെ ആദ്യത്തെ അക്ഷരം
തിരികെ നല്‍കുന്നു. charAt (1) സ്്രിംഗിലെ
രണ്ടാമത്തെ അക്ഷരം തിരികെ നല്‍കുന്നു.
ഉദാഹരണം നോക്കുക.

ചിത്രം 6.76: toLowerCase () of െട്ട്പു്ട്‌

var Xj;

x = “JavaScript”;
y = x.charAt (4);
alert(y); ചിത്രം. 77: charAt () ong davis”

6, RTI Hlla) ഉപയാിച്ചുള്ള ക്ലൈന്റ്‌ സെഡസ്കിഫ്റിങ്‌

ഇതിന്റെ ഓട്ട്പൂട്ട്‌ ചിത്രം 6.17 ല്‍ നല്‍കിയിരിക്കുന്നു. വേരിയബിള്‍ x ലെ സ്രടിംഗിന്റെ
അഞ്ചാമത്തെ അക്ഷരം 'S' ആയതിനാല്‍ ്ബധൌഈസര്‍ ജാലകത്തില്‍ B അക്ഷരം
കാണിക്കുന്നു.

. Length പ്രോപ്പര്‍ട്ടി

ഫങ്ഷനുകള്‍ കൂടാതെ, പ്രോഗാമര്‍ക്ക്‌ ഉപയോഗപ്രദമായ ചില പ്രോപ്പര്‍ട്ടികളും സ്ദ്രിംഗ്‌
വേരിയബിളിനോടൊലപ്പം ഉപയോഗി ക്കാം. length പ്രോപ്പര്‍ട്ടി സ്ര്രിംഗിന്റെ നീളം
തിരികെ നല്‍കുന്നു. സ്ര്രിംഗിലെ ക്യാരക്ടറുകളുടെ എണ്ണമാണ്‌ നീളം എന്നതു കൊണ്ട്‌
ഉദ്ദേശിക്കുന്നത്‌. ഉദാഹരണത്തിന്‌

var xX, ൩

x = “JavaScript”;

n = x.length;

alert(n);
ഇവിടെ length പ്രോപ്പര്‍ട്ടി എങ്ങനെ വിളിക്കുന്നു
എന്ന്‌ നോക്കാം. Xlength എന്ന രൂപത്തില്‍ x
എന്ന വേരിയബിളിന്റെ പേര്‍ ചേര്‍ത്തതാണ്‌ ഈ

പ്രോപ്പര്‍ട്ടി വിളിക്കുന്നത്‌. മുകളിലെ കോഡിന്റെ ok

ഓട്ട്പൂട്ട്‌ ചിത്രം 6.18 ല്‍ കാണിച്ചിരിക്കുന്നു. ഫങ്‌
ഷനും പ്രോപ്പര്‍ട്ടിയും തമ്മിലുള്ള പ്രധാന വൃത്യാ
Mo, ഫങ്ഷനോടൊപ്പം () ബ്രാക്കറ്റ്‌ ഉപയോഗിക്കുന്നു (ചില സന്ദര്‍ഭങ്ങളില്‍ ബ്രാക്കറ്റില്‍
പരാമീറ്ററുകളും) എന്നാല്‍ പ്രോപ്പര്‍ട്ടിയോടൊപ്പം () (ബാാക്കറ്റിന്റെ ആവശ്യം ഇല്ല
എന്നതാണ്‌.

ചിത്രം. 8. Length ്പ്രോകഥീടിയുടെ das

നിങ്ങളുടെ പദുരോഗതി അറിയാം

താഴെപ്പറയുന്നവയില്‍ വേരിയബിള്‍ y യുടെ വില എഴുതുക.

1. x = “welcome”;
= x.length;
2. = “WELCOME”;

= x.toLowerCase();

= “Welcome”;

= x.toUpperCase();
“welcome”;

= x.toLowerCase();

&
Lc a SO)
॥

5. = “welcome”;
= isNaN (x);

6. = “welcome”;
= charAt (3);

കമ്പ്യൂട്ടര്‍ സയന്‍സ്‌ - XII

6.8 ജാവാസ്ക്രിപ്റ്റിലൂടെ ടെക്സ്റ്റ്‌ ബോക്സിലെ വിലകള്‍ സ്വീക
രിക്കുന്നവിധം (Accessing values in a textbox using JavaScript)

മുന്‍ അധ്യായത്തില്‍ ഒരു വെബ്‌ പേജില്‍ ടെക്സ്റ്റ്‌ ബോക്സ്‌, ചെക്ക്‌ബോക്സ്‌, റേഡിയോ
ബട്ടണ്‍, സബ്മിറ്റ്‌ ബട്ടണ്‍ തുടങ്ങിയ വിവിധ കണ്‍ദ്രോളുകള്‍ (controls) എങ്ങനെ ഉപ
യോഗിക്കാം എന്ന്‌ പഠിച്ചു. ഇത്തരം കണ്‍ദ്രോളുകളെ ജാവാസ്ക്രിപ്റ്റിന്റെ സഹായത്താല്‍
എങ്ങിനെ ഉപയോഗിക്കാം എന്നാണ്‌ ഇവിടെ ചര്‍ച്ചചെയ്യുന്നത്‌. ഈ അധ്യായത്തില്‍
നമ്മള്‍ ചര്‍ച്ച ചെയ്ത ഒരു പ്രോഗ്രാമിലും ഉപയോക്താവില്‍ നിന്ന്‌ യാതൊരുവിധ ഇന്‍
പൂട്ടും സ്വീകരിച്ചിട്ടില്ല. പ്രോസസ്സിംഗിന്‌ ആവശ്യമായ ഡാറ്റ നേരിട്ട്‌ പ്രോഗാം കോഡില്‍
തന്നെ നല്‍കുകയാണ്‌ ചെയ്തത്‌. ജാവാസ്ക്രിപ്റ്റ്‌ ഉപയോഗിച്ച്‌ ഒരു വെബ്‌ പേജ്‌ ഘടക
ങ്ങളെ എങ്ങനെ സ്വീകരിക്കുന്നു എന്ന്‌ നോക്കാം. ഈ പാഠഭാഗത്തിനുശേഷം നമുക്ക്‌
ശരിയായ ഒരു ഇന്ററാക്ടീവ്‌ വെബ്‌ പേജ്‌ രൂപപ്പെടുത്തുവാന്‍ കഴിയും. അതായത്‌, ഉപയോ
ക്താവ്‌ ടെക്സ്റ്റ്‌ ബോക്സില്‍ വില നല്‍കാനും അതിന്മേല്‍ ചില പ്രോസസിംങ്‌ നടത്തി
ഫലം മറ്റൊരു ടെക്സ്റ്റ്‌ ബോക്സില്‍ പ്രദര്‍ശിപ്പിക്കാനും കഴിയും. ഈ കാര്യങ്ങള്‍ an
സ്സിലാക്കുന്നതിന്‌ താഴെ കൊടുത്തിരിക്കുന്ന HTML കോഡ്‌ ശ്രദ്ധാപൂര്‍വം വായിക്കുക.

b form) പ്രദര്‍ശിപ്പിക്കുന്ന ഒരു വെബ്‌ പേജ്‌

<HTML>
<HEAD> <TITLE>Javascript - Text box</TITLE> </HEAD>
<BODY>
<FORM Name= "frmSquare">
<CENTER>
Enter a Number
<INPUT Type= “text" Name= "txtNum">
<BR><BR>
Square is
<INPUT Type= "text" Name= "txtSqr">
<BR><BR>
<INPUT Type= "button" Value= "Show">
</CENTER>
</FORM>
</BODY> ) Javascript - Text box - Mozilla Firefox
</HTML> |_/ Javascript -Text box ക

@ file:///nome/lapo/Chapter 6 JS/Code 6.25.html_v മ

ഈ കോഡിന്റെ പ്രവര്‍ത്തന ഫലം ചിത്രം Enter a Number
6.19 ല്‍ കൊടുത്തിരിക്കുന്നു. ഇവിടെ ഫോ Square is

മിന്‌ FrmSquare എന്നും, ടെക്സ്റ്റ്‌ ബോക്‌
സുകള്‍ക്ക്‌ txtNum, txtSquare എന്നും

ചിത്രം. 70- വെബ്‌ ഫേം പ്രമ്ശിഷിക്കുന്ന ഒരു വെബ്‌ പേജ്‌

6, ജവാസ്്രിഫ്റ്‌ ഉപയാിച്ചുള്ള ക്ലൈന്റ്‌ സെഡസ്കിഫ്റിങ്‌

പേരുകള്‍ നല്‍കിയിരിക്കുന്നു. ജാവസ്ക്രിപ്റ്റില്‍ ഇത്തരം ഘടകങ്ങള്‍ക്ക്‌ ഉപയോഗിക്കു
ന്നതിന്‌ അവയ്ക്ക്‌ പേര്‍ നല്‍കേണ്ടത്‌ വളരെ പ്രധാനമാണ്‌. ഒരു വെബ്‌ പേജ്‌ ഘടകത്തിന്‌
നമ്മള്‍ പേര്‍ നല്‍കുന്നില്ലെങ്കില്‍, ജാവസ്ക്രിപ്റ്റിന്‌ അവയെ ഉപയോഗിക്കാന്‍ കഴിയില്ല.
Show എന്ന്‌ എഴുതിയിരിക്കുന്ന സബ്മിറ്റ്‌ ബട്ടന്‌ പേര്‍ നല്‍കിയിട്ടില്ലെന്നത്‌ ശ്രദ്ധിക്കുക.
കാരണം, ഈ ബട്ടണ്‍ ജാവസ്ക്രിപ്റ്റില്‍ നിന്ന്‌ പരാമര്‍ശിക്കാന്‍ കഴിയില്ല.

ഇനി നമുക്ക്‌ ഈ പ്രോഗ്രാം കോഡില്‍ കുറച്ചു മാറ്റം വരുത്തി നോക്കാം.

ട വര്‍ഗം (സ്ക്വയര്‍) പ്രദര്‍ശിപ്പിക്കുന്ന

<HTML>
<HEAD> <TITLE>Javascript - Text box</TITLE>

<SCRIPT Language= "JavaScript">
function showSquare()

{

var num, ans;

num = document.frmSquare.txtNum.value;
ans = num * num;
document.frmSquare.txtSqr.value = ans;
}
</SCRIPT>
</HEAD>
<BODY>
<FORM Name= "frmSquare">
<CENTER>

Enter a Number

<INPUT Type= "text" Name= "txtNum">
<BR><BR>

Square is

<INPUT Type= "text" Name= "txtSqr">
<BR><BR>

<INPUT Type= "button" Value= "Show"

onClick= "showSquare() ">

</CENTER>
</FORM>
</BODY>

</HTML>

കമ്പ്യൂട്ടര്‍ സയന്‍സ്‌ - XII

മുകളിലുള്ള കോഡ്‌ ശ്രദ്ധാപൂര്‍വം പരിശോധിച്ച്‌ Javascript - Text box - Mozilla Firefox

J savascript-Text box x (aE

കൂട്ടിച്ചെര്‍ത്തിട്ടുള്ളവ ശ്രദ്ധിക്കുക (ഉദാഹരണം
6.17). വെബ്‌ പേജിന്റെ ഹെഡ്‌ ഭാഗത്ത്‌ show
Square () എന്ന ഫങ്ഷന്‍ നിര്‍വചിച്ചിരിക്കുന്നു.
താഴെ കൊടുത്തിരിക്കുന്ന രീതിയില്‍ ഈ anes
ഷനെ വിളിക്കുന്നു.

_ @ file:///nome/lapo/Chapter 6 15/Code 6.26.html_» G] മ:

Enter a Number 12

Square is |144

ചിത്രം 6.20. ഒരു MoAjOJOS വര്‍ഗം പ്രദര്‍ശിഷിക്കുന്ന

<INPUT Type= "button" Value= തിനുള്ള വെബ്‌ പേജ്‌
"Show" onClick= "showSquare() ">
onclick= നന

എന്നത്‌ ഇന്‍പുട്ട്‌ ടാഗിന്റെ ഉള്ളിലാണ്‌ എഴുതിയിട്ടുള്ളത്‌. ഉപയോക്താവ്‌ ഈ ബട്ടണ്‍
ക്ലിക്കുചെയ്യുമ്പോള്‍, showSquare() എന്ന ഫങ്ഷന്‍ പ്രവര്‍ത്തിക്കുന്ന. ബട്ടനില്‍
ക്ലിക്കുചെയ്തുകൊണ്ട്‌ ഒരു ഫങ്ഷന്‍ എങ്ങനെ വിളിക്കാം എന്ന്‌ മനസ്സിലായായല്ലോ.

ഫങ്ഷന്‍ നിര്‍വചനത്തിലെ താഴെപ്പറയുന്ന വരി ശ്രദ്ധിക്കുക

num = document.frmSquare.txtNum.value;

document. frmSquare. txtNum. value നോക്കുക. ഇവിടെ ‘document’ എന്നത്‌
വെബ്‌ പേജിന്റെ ബോഡി ഭാഗത്തെ സൂചിപ്പിക്കുന്നു. ErmSquare എന്നത്‌ body ഭാഗത്ത്‌
നല്‍കിയിട്ടുള്ള ഫോമിന്റെ പേരാണ്‌. ‘txtNum!’ എന്നത്‌ 'frmSquare'- ല്‍ ഉള്ള
ടെക്സ്റ്റ്‌ ബോക്സിന്റെ പേരാണ്‌, Value എന്നത്‌ ടെക്സ്റ്റ്‌ ബോക്സിലെ ഉള്ളടക്കത്തെ
പരാമര്‍ശിക്കുന്നു. അതായത്‌ document.frmSquare.txtNum.value എന്നത്‌
ഡോക്യുമെന്റിലെ frmSquare എന്ന ഫോമിലെ txtNum ന്റെ വിലയാണ്‌. മുകളില്‍
പറഞ്ഞ വരി ടെക്സ്റ്റ്‌ ബോക്സിലെ വില വേരിയബിള്‍ num-68 ലഭ്യമാക്കും.

ഇനി പറയുന്ന വരിയുടെ അര്‍ഥം മനസ്സിലാക്കാന്‍ ശ്രമിക്കുക.

document.frmSquare.txtSqr.value = ans;

മുകളിലുള്ള വരി രണ്ടാമത്തെ ടെക്സ്റ്റ്‌ ബോക്സില്‍ ans എന്ന വേരിയബിളിന്റെ വില
കാണിക്കുന്നു. ബട്ടനില്‍ ക്ലിക്കുചെയ്യുമ്പോള്‍ വെബ്പേജിലെ ആദ്യത്തെ ടെക്സ്റ്റ്‌ ബോക
സില്‍ നല്‍കിയിരിക്കുന്ന സംഖ്യയുടെ വര്‍ഗം രണ്ടാമത്തെ ടെക്സ്റ്റ്‌ ബോക്സില്‍ കാണി
ക്കുന്നു. ഉപയോക്താവിന്‌ ആദ്യത്തെ ടെക്സ്റ്റ്‌ ബോക്സില്‍ ഏത്‌ സംഖ്യയും ടൈപ്പു
ചെയ്യാം, അതിന്റെ വര്‍ഗ്ഗം കാണുന്നതിന്‌ show ബട്ടണ്‍ ക്ലിക്കുചെയ്യുക. പ്രവര്‍ത്തന
സമയത്തുള്ള വെബ്‌ പേജിന്റെ സ്ക്രീന്‍ ഷോട്ട്‌ ചിത്രം 6.20 ല്‍ കൊടുത്തിരിക്കുന്നു

<INPUT Type= "button" Value= "Show" onClick= "showSquare ()">
എന്നത്‌
<INPUT Type= "button" Value= "Show"

onMouseEnter= "showSquare()">

എന്നാക്കിയാല്‍ എന്ത്‌ സംഭവിക്കുമെന്ന്‌ നോക്കാം. ബട്ടനു മുകളിലൂടെ മൌസ്‌ പോയിന്റര്‍
നീക്കുമ്പോള്‍ ഫങ്ഷന്‍ പ്രവര്‍ത്തിപ്പിക്കുന്നതിനായി വിളിക്കുന്നു. ഫങ്ഷന്‍ പ്രവര്‍ത്തന
ത്തിനുവേണ്ടി നിങ്ങള്‍ ബട്ടണില്‍ ക്ലിക്ക്‌ ചെയ്യേണ്ടതില്ല. ഒരു വെബ്‌ പേജിലെ ചില

6, ജവാസ്്രിഫ്റ്‌ ഉപയാിച്ചുള്ള ക്ലൈന്റ്‌ സെഡസ്കിഫ്റിങ്‌

ബട്ടനു മുകളിലൂടെ മൌസ്‌ പോയിന്റര്‍ നീക്കുമ്പോള്‍, ബട്ടന്റെ നിറം മാറുന്നത്‌ നിങ്ങള്‍
ശ്രദ്ധിച്ചിരിക്കാം. ബട്ടന്റെ നിറം മാറുന്നതിനുള്ള ഒരു ജാവാസ്ക്രിപ്റ്റ്‌ ഫങ്ഷന്‍ എഴുതി
അത്‌ onMouseEnter എന്ന ഇവന്റിലൂടെ വിളിച്ച്‌ ഇത്‌ സാധ്യമാക്കാം.

<INPUT Type= "button" Value= "Show" onClick= "showSquare()">

onMouseEnter, onClick, onMouseEnter, onMouseLeave, onKeyDown,
onKeyUp തുടങ്ങിയവ സാധാരണയായി ഉപയോഗിക്കുന്ന ചില ഇവന്റുകളാണ്‌.

സാധാരണ ഉപയോഗിക്കുന്ന ചില ജാവ സ്ക്രിപ്റ്റ്‌ ഇവന്റുകളും അവയുടെ വിവരണങ്ങളും
പട്ടിക 6.6 ല്‍ ചേര്‍ത്തിരിക്കുന്നു.

onClick ഉപയോക്താവ്‌ ഒരു ഒബ്ജക്റ്റില്‍ ക്ലിക്കുചെയ്യുമ്പോള്‍ സംഭവിക്കുന്നു

മസ്‌ പോയിന്റര്‍ ഒരു ഒബ്മക്റ്റിലേക്ക്‌ നീങ്ങുമ്പോള്‍ സംഭവിക്കുന്നു

onMouseLeave മസ്‌ പോയിന്റര്‍ ഒരു ഒബ്ജക്റ്റില്‍ നിന്നും മാറുകയാണെങ്കില്‍
സംഭവിക്കുന്നു

ഉപയോക്താവ്‌ കീബോര്‍ഡിലെ ഒരു കീ അമര്‍ത്തുമ്പോള്‍ സംഭവിക്കുന്നു

onkeyUp ഉപയോക്താവ്‌ കീബോര്‍ഡിലെ ഒരു കീയില്‍ നിന്ന്‌ വിടുമ്പോള്‍
സംഭവിക്കുന്നു

പട്ടിക 6.6. മ്ധാഥാണഉപമോശിക്കുന്ന ജവാന(കരിപ്റു ഇവശ്സുകര്‌

ഒരു വെബ്പേജില്‍ രണ്ട്‌ വൃത്യസ്ത ടെക്സ്റ്റ്‌ ബോക്സുകളില്‍ ഉപയോക്താവിന്‌ രണ്ട്‌
സംഖ്യ നല്‍കാനും, ഒരു ബട്ടണില്‍ അമര്‍ത്തുമ്പോള്‍ ഈ സാഖ്യകളുടെ തുക മുന്നാമത്തെ
ടെക്സ്റ്റ്‌ ബോക്സില്‍ കാണിക്കുന്നതിനുമുള്ള ഒരു വെബ്പേജ്‌ നിര്‍മ്മിക്കാം. കോഡ്‌,
ജഈട്ട്പുട്ട്‌ എന്നിവ ചിത്രം 6.21 ല്‍ കൊടുത്തിരിക്കുന്നു.

ട തുക കാണിക്കുന്ന വെബ്‌ പേജ്‌ നിര്‍മാണം

<HTML>
<HEAD> <TITLE>Javascript - Sum</TITLE>
<SCRIPT Language= "JavaScript">
function showSum()
{

var numl, num2, ans;

numl = document.frmSum.txtNuml.value;
num2 = document.frmSum.txtNum2.value;
ans = numl + num2;
document.frmSum.txtSum.value = ans;

}
</SCRIPT>

കമ്പ്യൂട്ടര്‍ സയന്‍സ്‌ - XII

</HEAD>
<BODY>
<FORM Name= "frmSum">
<CENTER>
nter a Number 1
PUT Type= "text" Name= "txtNuml">
R><BR>
ter a Number 2
NPUT Type= "text" Name= "txtNum2">
R><BR>
he sum is
PUT Type= "text" Name= "txtSum">
R><BR>
<INPUT Type= "button" Value= "Show" onClick= "showSum() ">
</CENTER>
</FORM>
</BODY>
</HTML>

Dow

w

A AAA A wWAA

Ww

ഈ പ്രോ്രഗാമിന്‌ ഇന്‍പൂട്ടായി 10, 20 എന്നീ സംഖ്യകള്‍ നല്‍കിയപ്പോള്‍ റിസള്‍ട്ടായി
1020 എന്നാണ്‌ കിട്ടിയത്‌ (ചിത്രം 6.21 ല്‍ കാണിച്ചിരിക്കുന്നു). സ്ര്രിങുകള്‍ കൂട്ടിച്ചേര്‍
ക്കുന്നതിന്‌ + ഓപ്പറേറ്റര്‍ ഉപയോഗിക്കുന്നു എന്നതിനാലാണിത്‌. നമ്മള്‍ രണ്ട്‌ സ്ര്രിങു
കള്‍ 10720 ചേര്‍ക്കുമ്പോള്‍ ഉത്തരം “1020”

Javascript - Sum - Mozilla Firefox

ആണല്ലോ. ഒരു, ടെക്സ്റ്റ്‌ ബോക്സിന്റെ തനതുവില | നം പി

v ry file:///home/lap6/Chapter 6 JS/Code 6.27.html_» C) >
ADLIOD പ്പോഴും സ്ര്രിങായിരിക്കും അതിനാല്‍
ടെക്സ്റ്റ്‌ ബോക്സിലെ ഉള്ളടക്കം ഒരു നമ്പര്‍ ആയി

Enter a Number 1 10

Enter a Number 2 [20

രുന്നാലും ഒരു വേരിയബിളിലേക്ക്‌ നല്‍കുമ്പോള്‍ ‘The sum is (1020

അതിനെ സ്ട്രിംഗ്‌ ആയി മാത്രമേ പരിഗണിക്കു. രണ്ട്‌ show.

സംഖ്യകളുടെ തുക കിട്ടുന്നതിന്‌ ഫങ്ഷന്‍ Show ചുതം6.27: ഓര്‍ daleOI0HTD aifinie
SUM () താഴെ കൊടുത്തിരിക്കുന്ന രീതിയില്‍ പരിഷ്ക രിക്കുതതിന്‌ വെബ്‌ പേജ്‌
രിക്കാം.

function showSum()

{

var numl, num2, ans;

numl = Number (document.frmSum.txtNuml1.value) ;
num2 = Number (document.frmSum.txtNum2.value) ;
ans = numl + num2;

document.frmSum.txtSum.value = ans;

}

6, RIOT Hlla) ഉപയാിച്ചുള്ള ക്ലൈന്റ്‌ സെഡസ്കിഫ്റിങ്‌

ഇവിടെ Number () എന്ന ഫങ്ഷന്‍, ഡാറ്റയെ സാഖ്യ നന ലം
J Javascript-sum x\
യായി മാറ്റി ആ സാഖ്യ numi എന്ന വേരിയബിളി _@ file:///home/lap6/Chapter 6 JS/Code 6.27.html_+ C
ലേക്ക്‌ നല്‍കുന്നു. ഇവിടെ num1, num2 എന്നിവയെ Enter a Number 0
നമ്പര്‍ തരം ഡാറ്റയായി കണക്കാക്കുകയും അതുവഴി Enter a Number 2 20

ശരിയായ തുക കിട്ടുകയും ചെയ്യും. ഉദാഹരണം 6.13 The sum 80
ലെ showSum() എന്ന ഫങ്ഷനില്‍ മാറ്റം വരു

ത്തിയാല്‍ ചിത്രം 6.22 ല്‍ കാണിച്ചിരിക്കുന്ന വെബ്‌ ചിതം6.22: ഒ Moayagjos തക
കാണിക്കുന്ന വെബ്‌ പേജ്‌

പേജ്‌ ഓട്പൂട്ടായി ലഭിക്കും. തന്നിരിക്കുന്ന പരിധി
വരെയുള്ള സംഖ്യകളുടെ തുക പ്രദര്‍ശിപ്പിക്കുന്നതിനുള്ള ഒരു വെബ്‌ പേജ്‌ നിര്‍മിക്കാം.
ഇതില്‍ പരിധി ഉപയോക്താവിന്‌ ടെക്സ്റ്റ്‌ ബോക്സിലൂടെ നല്‍കാന്‍ കഴിയണം.

രെയുള്ള സംഖ്യകളുടെ തുക കാണിക്കു

<HTML>
<HEAD> <TITLE>Javascript - Sum</TITLE>
<SCRIPT Language= "JavaScript">
function sumLimit()

{

var sum = 0, i, limit;
limit = Number (document.frmSum.txtLimit.value) ;
for(i = 1; a <= limit; i++)
sum += i;
document.frmSum.txtSum.value = sum;
}
</SCRIPT>
</HEAD>
<BODY>
<FORM Name= "frmSum">
<CENTER>
Enter the limit
<INPUT Type= "text" Name= "txtLimit">
<BR><BR>
Sum of Numbers
<INPUT Type= "text" Name= "txtSum">
<BR><BR>
<INPUT Type= "button" Value= "Show"
onClick= "sumLimit() ">
</CENTER>
</FORM>
</BODY>

</HTML>

കമ്പ്യൂട്ടര്‍ സയന്‍സ്‌ - XII

മുകളിലെ കോഡിന്റെ ജട്ട്പുട്ട്‌ ചിത്രം 6.23 ല്‍ 11.7.

നല്‍കിയിരിക്കുന്നു. ഈ വെബ്‌ പേജില്‍ ആദ്യ | —

@ file:///home/lap6/Chapter 6 JS/Code 6.28.html ൦] »

ത്തെ ടെക്സ്റ്റ്‌ ബോക്സില്‍ ഉപയോക്താവ്‌
പരിധി നല്‍കണം. അതിനു ശേഷം ടിവാഡ cng
ണില്‍ ക്ലിക്കുചെയ്യുബോള്‍ നല്‍കിയ പരിധി
വരെയുള്ള സംഖ്യകളുടെ തുക രണ്ടാമത്തെ
ടെ omy ബോക്സില്‍ കാണി ക്കുന്നു. ആദ്യത്തെ ചി(്തം0.23. നല്‍കിയ പരിധിവുള്ള രംമ്ൃക്ളുടെ
[രിച്ച [0 . തുക കാണിക്കുന്ന വെബ്‌ പേ്‌

ടെക്സ്റ്റ്‌ ബോക്സില്‍ ഉപയോക്താവ്‌ പരിധി

നല്‍കാതെ SHOW ബട്ടണ്‍ ക്ലിക്കുചെയ്താല്‍ അത്‌ ഒരു സന്ദേശവും പ്രദര്‍ശിപ്പിക്കുന്നില്ല.
പരിധി ഇല്ലെങ്കില്‍ തുക പൂജ്യമായിരിക്കും കാരണം ആദ്യത്തെ ടെക്സ്റ്റ്‌ ബോക്സ്‌ ശൂന്യ
മാകുമ്പോൾ Number () ഫങ്ഷന്‍ ശുന്യ വിലയെ പൂജ്യമായി മാറ്റുന്നു. അതായത്‌
document. frmSum.txtLimit.value ന്റെ വില പൂജ്യമായിരിക്കും. അങ്ങനെ ലൂപ്പ്‌
പ്രവര്‍ത്തിക്കാതിരിക്കുകയും 5൧൩ എന്ന വേരിയബിളിന്റെ ആദ്യ വിലയായ പുജ്യം രണ്ടാ
മത്തെ ടെക്സ്റ്റ്‌ ബോക്സില്‍ പ്രദര്‍ശിപ്പിക്കുകയും ചെയ്യുന്നു. ജാവാസ്ക്രിപ്റ്റ്‌ ഒരിക്കലും
ഒരു തെറ്റ്‌ ഉണ്ടെന്ന്‌ കാണിച്ച്‌ തരില്ല. സ്ക്രിപ്റ്റ്‌ എഞ്ചിന്‌ എന്തെങ്കിലും നിര്‍ദേശം പ്രാവര്‍
ത്തികമാക്കാന്‍ കഴിയാത്തപ്പോള്‍, അത്‌ ഫങ്ഷനിലെ ആ വരിയും ബാക്കി ഭാഗങ്ങളും
അവഗണിക്കും.

Enter the limit |5

Sum of Numbers |15

Show

താഴെ കൊടുത്തിരിക്കുന്ന sumLimit () ഫങ്ഷന്‍ പരിശോധിക്കാം.

function sumLimit ()
{
var sum = 0, i, limit;
if (document.frmSum.txtLimit.value == നു
{
alert(“Please enter the limit!”);
return;
}
limit = Number (document.frmSum.txtLimit.value) ;
for(i=1; i<=limit; i++)
sum += i;
document.frmSum.txtSum.value = sum;
}
പരിധി നല്‍കാതെ നിങ്ങള്‍ show ബട്ടണില്‍ ക്ലിക്കുചെയ്താല്‍, ഈ കോഡ്‌ പരിധി
നല്‍കാന്‍ ഓര്‍മ്മപ്പെടുത്തുന്ന ഒരു സന്ദേശം കാണിക്കും. ബാക്കി നിര്‍ദേശങ്ങള്‍ ഒഴിവാ
ക്കിക്കൊണ്ട്‌ ഫങ്ഷനില്‍ നിന്ന്‌ പുറത്തുകടക്കുവാന്‍ return പ്രസ്താവന ഉപയോ
ഗിക്കുന്നു. ഇത്‌ C++ ല്‍ ഉപയോഗിക്കുന്ന റിട്ടേണ്‍ പ്രസ്താവനയ്ക്ക്‌ സമാനമാണ്‌. ഇനി
നമുക്ക്‌ ടെക്സ്റ്റ്‌ ബോക്സില്‍ നല്‍കിയ പരിധി അക്ഷരമാണോ സംഖ്യയാണോ എന്ന്‌
പരിശോധിക്കുന്നതിനായി isNaN() എന്ന ഫങ്ഷന്‍ ഉപയോഗിക്കാം. ഉപയോക്താവ്‌
ശരിയായ ഡാറ്റ നല്‍കിയിട്ടുണ്ടോ എന്ന്‌ പരിശോധിക്കുന്നതിന്‌ ഇത്‌ സഹായിക്കുന്നു.

6, ജവാസ്്രിഫ്റ്‌ ഉപയാിച്ചുള്ള ക്ലൈന്റ്‌ സെഡസ്കിഫ്റിങ്‌

function sumLimit ()

{

var sum = 0, i, limit;
if (document.frmSum.txtLimit.value == നറു

alert(“Please enter the limit!”);
return;

if (isNaN(document.frmSum.txtLimit.value) )

alert("Please enter a number as the limit!");

return;
limit = Number (document.frmSum.txtLimit.value) ;
for(i = 17 i <= limit; i++)

sum += i;
document.frmSum.txtSum.value = sum;

}

DORA ഭാഗത്തെ ഡാറ്റയുടെ സാധുത വിലയിരുത്തുന്നതിനായി ജാവ സ്ക്രിപ്റ്റ്‌ ഉപയോ
ഗിക്കുന്നു. ആവശ്യമുള്ള എല്ലാ ഡാറ്റയും നല്‍കിയിട്ടുണ്ടോ, നല്‍കിയ ഡാറ്റ ശരിയായ
ഘടനയിലാണോ തുടങ്ങിയവ പരിശോധിക്കാനായി ജാവാസ്ക്രിപ്റ്റ്‌ ഉപയോഗിക്കാം.
ഏതെങ്കിലും പോരായ്മ ഉണ്ടെങ്കില്‍ അത്‌ ഓര്‍മ്മിപ്പിക്കുന്ന ഒരു സന്ദേശം കാണിക്കുവാന്‍
കഴിയും. താഴെക്കൊടുത്തിരിക്കുന്ന ഉദാഹരണത്തില്‍ ജാവാസ്ക്രിപ്റ്റിലെ ഒരു ഡ്രോപ്പ്‌
ഡൌണ്‍ ലിസ്റ്റ്‌ ഉപയോഗിക്കുന്നു ഈ ഡ്രോപ്പ്‌ ഡൌണ്‍ ലിസ്റ്റ്‌ ഉപയോഗിച്ച്‌ ഒരു സംസ്ഥാ
നം തെരഞ്ഞെടുക്കാനും Show ബട്ടണില്‍ ക്ലിക്കുചെയ്യുബോള്‍, തെരഞ്ഞെടുത്ത സംസ്ഥാ
നത്തിന്റെ തലസ്ഥാനം ഒരു ടെക്സ്റ്റ്‌ ബോക്സില്‍ പ്രദര്‍ശിപ്പിക്കാനുമുള്ള ഒരു വെബ്പേജ്‌
നല്‍കിയിരിക്കുന്നു. ഇതിന്റെ ഓട്ട്പുട്ട്‌ ചിത്രം 6.24 ല്‍ കൊടുത്തിരിക്കുന്നു.

ന്റ തലസ്ഥാനം പ്രദര്‍ശിപ്പിക്കുന്നതിനുള്ള

<HTML>

<HEAD> <TITLE>Javascript - switch</TITLE>
<SCRIPT Language= "JavaScript">

function capital ()

{

var n, answer;

n = document.frmCapital.cboState.selectedIndex;
switch (n)

{

AMSG സയന്‍സ്‌ - XII

case 0:

answer "Thiruvananthapuram";
break;

case 1:
answer = "Bengaluru";
break;

case 2:
answer = "Chennai";
break;

case 3:

answer = "Mumbai";

break;
}
document.frmCapital.txtCapital.value = answer;
}
</SCRIPT>
</HEAD>
<BODY>
<FORM Name= "frmCapital">
<CENTER> State
<SELECT Size= 1 Name= "cbhoState">
<OPTION>Kerala</OPTION>
<OPTION>Karnataka</OPTION>
<OPTION>Tamilnadu</OPTION>
<OPTION>Maharashtra</OPTION>
</SELECT>
<BR><BR>
Capital
<INPUT Type= "text" Name= "txtCapital">
<BR><BR>
<INPUT Type= "button" Value= "Show" onClick= "capital() ">
</CENTER> > savascript - switch - Mozilla Firefox
</FORM> J Javascript - switch ക്‌
</BODY> @ file:///home/lap6/Chapter 6 JS/Code 6.29.html + C

</HTML>

State | Kerala
Capital Thiruvananthapuram

Show

ചിത്രം 6.24: സംഹാരത്തിന്റെ തലമ്ഥാനം
പ്രമരീശിഷിക്കുമനാതിുള്ള വെബ്‌ പേജ്‌

6, ജവാസ്്രിഫ്റ്‌ ഉപയാിച്ചുള്ള ക്ലൈന്റ്‌ സെഡസ്കിഫ്റിങ്‌

ഈ പ്രോ്രഗാമിലെ താഴെ കൊടുത്തിരിക്കുന്ന പ്രസ്താവന പരിഗണിക്കുക.

document. frmCapital.cboState.selectedindex;

ഇവിടെ ‘choState’ എന്നത്‌ ഡ്രോപ്ഡൌണ്‍ ലിസ്റ്റിന്റെ പേരാണ്‌. ‘se lectedIndex’
എന്നത്‌ ഡ്രോപ്‌ ഡൌണ്‍ ലിസ്റ്റിന്റെ സൂചിക കാണിക്കുന്നു. ഒന്നാമത്തെ ഇനം തി
രഞ്ഞെടുത്താല്‍ സൂചിക 0-ഉം രണ്ടാമത്തെ ഇനം തിരഞ്ഞെടുത്താല്‍, സൂചിക 1 ഉം
ആയി കണക്കാക്കുന്നു. മുകളിലെ വരി തിരഞ്ഞെടുത്ത വേരിയബിളിന്റെ ഇന്‍ഡക്സ്‌
വേരിയബിള്‍ ൨ ല്‍ നല്‍കുന്നു. വിദ്യാര്‍ഥിയുടെ പേരും പ്രായവും നല്‍കാന്‍ ഉപയോ
ക്താവിനെ അനുവദിക്കുന്ന വെബ്‌ പേജാണ്‌ താഴെ കൊടുത്തിരിക്കുന്നത്‌. പേരില്‍
കുറഞ്ഞത്‌ 5 അക്ഷരങ്ങള്‍ ഉണ്ടായിരിക്കണം. പ്രായം 15 മുതല്‍ 20 വരെ ഉള്ള ഒരു
സംഖ്യയായിരിക്കണം.

തിന്റെയും സാധുത പരിശോധിക്കുന്ന വെബ്‌

<HTML>
<HEAD> <TITLE>Javascript - Validation</TITLE>
<SCRIPT Language= "JavaScript">

function checkData()

{

var T name, T age, N age;
T name = document.frmValid.txtName.value;
if (T name == "")

{

alert("Please enter name!");
return;

if (T_name.length < 5)

alert ("Name must contain at least 5 characters!");
return;

}

T age = document.frmValid.txtAge.value;

if (T_age == "")

alert ("Please enter age!");
return;
}
if (isNaN(T_age) )
{
alert ("Please enter a number as the age!");
return;

}
N age = Number (1 age);

കമ്പ്യൂട്ടര്‍ സയന്‍സ്‌ - XII

if (N_age < 15 || N age > 20)
{

alert("The age must be between 15 and 20!");
return;

}

</SCRIPT>

</HEAD>

<BODY>

<FORM Name= "frmValid"™>
<CENTER>Name
<INPUT Type= "text" Name= "txtName">
<BR><BR>
Age
<INPUT Type= "text" Name= "txtAge">
<BR><BR>
<INPUT Type= "button" Value= "Save"
onClick= "checkData()">

</CENTER>
</FORM> ) Javascript - Validation - Mozilla Firefox
</BODY> { savascript-Validation ക്ട്‌
</HTML> 7 @file:///nome/lap6/Chapter 6 Js/Code 6.31.html » C|

Name |sidharth

Age (9

11111. കോഡിന്റെ ഓട്ട്പുട്ട്‌ ailmo 6.25 ല്‍
കൊടുത്തിരിക്കുന്നു. ഡാറ്റയുടെ എല്ലാ സാധു
തകളും ഇത്‌ പരിശോധിക്കുന്നു. ആദ്യം, iyo. 25: ലുഭിമ്റ്‌ ഉപയോഗം വിശദീകരിക്കുന്ന വെബ്‌
പേരിന്റെ ഫീല്‍ഡില്‍ ഒരു വില ഉണ്ടോ എന്ന്‌ പേജ്‌
പരിശോധിക്കുന്നു. പിന്നീട്‌ പേരിന്റെ ദൈര്‍ഘ്യം കുറഞ്ഞത്‌ 5 അക്ഷരങ്ങള്‍ ഉണ്ടോ
എന്ന്‌ പരിശോധിക്കുന്നു. ശേഷം വയസ്സ്‌ നല്‍കിയിട്ടുണ്ടോ എന്ന്‌ പരിശോധിക്കുന്നു.
പിന്നീട്‌ നല്‍കിയ ഡാറ്റ സംഖ്യ ആണോ അല്ലയോ എന്ന്‌ പരിശോധിക്കുന്നു. അന്തിമമായി
പ്രായപരിധി 15 മുതല്‍ 20 വരെ ആണോ എന്ന്‌ പരിശോധിക്കുന്നു.

6.9 സ്രകിപ്റ്റുകള്‍ വെബ്പേജില്‍ ചേര്‍ക്കുന്നതിനുള്ള വഴികള്‍
(Ways to add scripts to a webpage)

പല രീതിയില്‍ HTML കോഡുകള്‍ക്കുള്ളില്‍ സ്ക്രിപ്റ്റുകള്‍ ഉള്‍പ്പെടുത്താവുന്നതാണ്‌.
മൂന്‍ ഉദാഹരണങ്ങളില്‍ നമ്മള്‍ ജാവാസ്ക്രിപ്റ്റ്‌ വെബ്‌ പേജിന്റെ ഹെഡ്‌ ഭാഗത്താണ്‌
ഉള്‍പ്പെടുത്തിയിരുന്നത്‌. ഇതിന്‌ പുറമേ, സ്ക്രിപ്റ്റുകള്‍ <BODY> ടാഗിലോ അല്ലങ്കില്‍
ഒരു ബാഹൃ ഫയലിലോ നല്‍കാവുന്നതാണ്‌.

ഇനി വെബ്പേജുകളില്‍ സ്ക്രിപ്റ്റുകള്‍ കൂട്ടിച്ചേര്‍ക്കുന്നതിനുള്ള വൃത്യസ്ത രീതികള്‍
പരിചയപ്പെടാം.

6, ജവാസ്്രിഫ്റ്‌ ഉപയാിച്ചുള്ള ക്ലൈന്റ്‌ സെഡസ്കിഫ്റിങ്‌

6.9.1 <BODY> ടാഗിന്‌ ഉള്ളില്‍ (Inside <BODY>)

ഈ അധ്യായത്തിന്റെ തുടക്കത്തില്‍ <BODY> ടാഗിന്‌ ഉള്ളില്‍ സ്ക്രിപ്റ്റുകള്‍ സ്ഥാപി
ക്കുന്നത്‌ നാം ചര്‍ച്ചചെയ്തു. വെബ്പജിന്റെ ഉള്ളടക്കം ബ്രൌസറില്‍ പ്രദര്‍ശിപ്പിക്കുമ്പോള്‍
സ്ക്രിപ്റ്റുകളും പ്രവര്‍ത്തിക്കും. വെബ്‌ പേജ്‌ ഡോക്യുമെന്റിന്റെ ആരംഭം മുതല്‍ക്കാണ്‌
പ്രദര്‍ശിപ്പിക്കുക. ഒരു സ്ക്രിപ്റ്റ്‌ കോഡ്‌ കാണുമ്പോള്‍ അത്‌ പ്രവര്‍ത്തിക്കുകയും തുടര്‍ന്ന്‌
വെബ്‌ പേജിന്റെ ബാക്കി ഭാഗം പ്രവര്‍ത്തിക്കുകയും ചെയ്യുന്നു.

ഒരു ഉദാഹരണം ഉപയോഗിച്ച്‌ ഈ രീതി മനസ്സിലാക്കാം. ഒരു വിദ്യാര്‍ഥിയുടെ റിസള്‍ട്ട്‌
ലഭിക്കുന്നതിനുള്ള ഒരു വെബ്‌ പേജാണ്‌ താഴെ കൊടുത്തിരിക്കുന്നത്‌. ടെക്സ്റ്റ്‌ ബോക്‌
സില്‍ ഉപയോക്താവ്‌ ഒരു രജിസ്റ്റര്‍ നമ്പര്‍ നല്‍കണം. Get Result ബട്ടനില്‍ ക്ലിക്കു ചെയ്യു
മ്പോള്‍ രജിസ്റ്റര്‍ നമ്പര്‍ ബോക്സില്‍ ഏതെങ്കിലും ഡാറ്റ ഉണ്ടോ എന്ന്‌ പരിശോധി
ക്കാനുള്ള ജാവാസ്ക്രിപ്റ്റ്‌ ഫങ്ഷന്‍ പ്രവര്‍ത്തിക്കണം. ടെക്സ്റ്റ്‌ ബോക്സില്‍ വില ഉണ്ടെ
ങ്കില്‍ അത്‌ ഏഴ്‌ അക്കമുള്ള ഒരു സംഖ്യ തന്നെ ആയിരിക്കണം. ഈ കാര്യങ്ങള്‍ ഫങ്ഷന്‍
പരിശോധിക്കണം. വെബ്‌ പേജിന്റെ ഓട്ട്പുട്ട്‌ allo 6.26 ല്‍ നല്‍കിയിരിക്കുന്നു.

നയ്ക്കു ശേഷം രജിസ്റ്റര്‍ നമ്പര്‍ സ്വീകരി
നിര്‍മാണം

<HTML>
<HEAD> <TITLE>Javascript - Validation</TITLE> </HEAD>
<BODY>
<FORM Name= "frmValid">
<SCRIPT Language= "JavaScript">
function checkData()

{

var rno;
rno = document.frmValid.txtRegno.value;
if (rno == "")

alert("Please enter Register No.");
return;

if (isNaN(rno))

alert ("Invalid Register No.");

return;

if (rno.length < 7)

കമ്പ്യൂട്ടര്‍ സയന്‍സ്‌ - XII

alert ("The Register No. must have 7 digits");
return;

}
</SCRIPT>
<CENTER>

<BR>Enter Register Number

<INPUT Type= "text" Name= "txtRegno"™>

<BR><BR>

<INPUT Type= "button" Value= "Get Result"

onClick= "checkData() ">
</CENTER>
</FORM>
</BODY>
</HTML>

) Javascript - Validation - Mozilla Firefox

Javascript-Validation x \db

file:///home/lap6/Chapter 6 JS/Code 6.30.html ൦0൦ >

Enter Register Number 7340124

സ്ക്രിപ്റ്റ്‌ <BODY> ടാഗിനുള്ളില്‍ അവസാ
നഭാഗത്തും ആകാം. “802൦ ടാഗില്‍
അല്ലെങ്കില്‍ <HEAD> ടാഗില്‍ സ്ക്രിപ്റ്റു
കള്‍ എഴുതിയിട്ടുണ്ടെങ്കില്‍ Gear HTML
കോഡിനൊപ്പം ര്രൌസറിലെത്തുകയും ചെയ്യും. വെബ്പേജ്‌ പ്രദര്‍ശിപ്പിക്കുന്നത്‌ വൈകു
വാന്‍ ഇത്‌ കാരണമാകുന്നു. സ്ക്രിപ്റ്റുകള്‍ </BODY> ടാഗിന്‌ മുമ്പായി കൊടുക്കുകയാ
ണെങ്കില്‍ വെബ്പേജിലെ ഉള്ളടക്കങ്ങള്‍ അക്ഷരങ്ങള്‍, ചിത്രങ്ങള്‍ പോലുള്ളവ സ്ക്രീ
നില്‍ വേഗത്തില്‍ ദൃശ്യമാകും. എന്നാല്‍ വെബ്‌ പേജ്‌ ലഭ്യമാക്കുന്നതിനിടയില്‍ സ്ക്രിപ്‌
റ്റുകള്‍ പ്രവര്‍ത്തിക്കണമെന്നില്ല.

Get Result

206.26: asGYE DOUG ദ്യികരിക്കാരുള്ള ഫോം
പ്ര്ശിഷിക്കുന) വെബ്‌ പേജ്‌

6.9.2 <HEAD> ടാഗിന്‌ ഉള്ളില്‍ (Inside <HEAD>)

സാധാരണ രീതിയില്‍ വെബ്‌ പേജിന്റെ ഹെഡ്‌ ഭാഗത്താണ്‌ സ്ക്രിപ്റ്റുകള്‍ ഉള്‍പ്പെടു
ത്തുന്നത്‌. നാം ചര്‍ച്ച ചെയ്ത എല്ലാ ഉദാഹരണങ്ങളിലും അങ്ങനെ തന്നെയാണ്‌ ചെയ്‌
തിരിക്കുന്നത്‌. ഇതിന്‌ പ്രധാന കാരണം മിക്ക HTML പേജുകളുടെയും ബോഡി ഭാഗ
ത്തിനുള്ളില്‍ ഉള്ളടക്കത്തെ സൂചിപ്പിക്കുന്ന ഒരു വലിയ അളവ്‌ ടെക്സ്റ്റ്‌ ദൃശ്യമാക്കേണ്ട
തായിട്ടുണ്ട്‌. ഫങ്ഷന്‍ നിര്‍വചനം കൂടി ഇവിടെ ചേര്‍ക്കുകയാണെങ്കില്‍ വെബ്പേജില്‍
മാറ്റം വരുത്തുമ്പോള്‍ ഇത്‌ രുപകല്പനചെയ്യുന്നയാള്‍ക്ക്‌ ആശയക്കുഴപ്പം സൃഷ്ടിക്കും.
ബോഡി ഭാഗത്തിന്‌ മുന്‍പായി ഒരു വെബ്‌ പേജിന്റെ ഹെഡ്‌ ഭാഗം ലോഡ്‌ ചെയ്യുന്നു
എന്നത്‌ ഇതിന്റെ നേട്ടമാണ്‌. അതിനാല്‍, ബോഡി ഭാഗത്ത്‌ വിളിക്കപ്പെടുന്ന ഫങ്ഷ
നുകളുടെ നിര്‍വചനം നേരത്തെ തന്നെ മെമ്മറിയില്‍ ലഭ്യമാക്കിയിരിക്കും. ഉദാഹരണം
6.17 ല്‍ <SCRIPT> നും </SCRIPT> നും ഇടയിലുള്ള കോഡ്‌ HTML കോഡിന്റെ
ഹെഡ്‌ ഭാഗത്തേക്ക്‌ മാറ്റി ഉപയോഗിക്കാവുന്നതാണ്‌.

6, ജവാസ്്രിഫ്റ്‌ ഉപയാിച്ചുള്ള ക്ലൈന്റ്‌ സെഡസ്കിഫ്റിങ്‌

6.9.3 ബാഹ്യ ജാവാസ്ക്രിപ്റ്റ്‌ ഫയല്‍ (External JavaSript file)

HTML ഡോക്യുമെന്റിലെ എല്ലാ സ്ക്രിപ്റ്റുകളും ഒരു ബാഹ്യ ഫയലിലേക്ക്‌ ശേഖരി
ക്കുകയും ഡോക്യുമെന്റില്‍ നിന്ന്‌ ആ ഫയലിലേക്ക്‌ ഒരു Giles സ്ഥാപിക്കുകയും ചെയ്യാം.
ഈ ഫയല്‍ “js? എന്ന എക്സ്റ്റന്‍ഷനോടുകൂടി സുക്ഷിക്കുക. ബാഹ്യ ഫയലുകളില്‍
ജാവാസ്ക്രിപ്റ്റ്‌ സ്ഥാപിക്കുന്നത്‌ കൊണ്ട്‌ ചില ഗുണങ്ങളുണ്ട്‌. ഒരേ സ്ക്രിപ്റ്റ്‌ ഒന്നിലധികം
1111. പേജുകളിലോ ഒരു മുഴുവന്‍ വെബ്‌ സൈറ്റിലോ ആവര്‍ത്തിക്കപ്പെടുമ്പോള്‍ ഇത്‌
ഉപയോഗപ്രദമാണ്‌. 90) HTML ഉം ജാവാസ്ക്രിപ്റ്റും വേര്‍തിരിച്ച്‌ കാണാന്‍ സഹായി
ക്കുന്നു. ഇത്‌ 111141. കോഡിനെയും ജാവാസ്ക്രിപ്റ്റിനെയും വേര്‍തിരിക്കുവാനും ഇവ
രണ്ടിനെയും എളുപ്പത്തില്‍ വായിക്കാനും നിലനിര്‍ത്താനും സഹായിക്കുകയും ചെയ്യു
ന്നു. ജാവാസ്ക്രിപ്റ്റ്‌ ബാഹ്യ ഫയലുകളില്‍ സംഭരിക്കുന്നത്‌ പേജ്‌ വേഗത്തില്‍ ലഭ്യമാക്കാന്‍
സഹായിക്കും.

wy 66

മുകളില്‍ പറഞ്ഞിരിക്കുന്ന ഉദാഹരണം 6.17 ല്‍ ജാവാസ്ക്രിപ്റ്റ്‌ കോഡ്‌ “check.js” എന്ന
പേരില്‍ ഒരു പ്രത്യേക ഫയല്‍ ആയി സൂക്ഷിക്കുന്നു. ഈ ഫയലിന്റെ ഉള്ളടക്കം താഴെ
കാണിച്ച രീതിയിലാണ്‌.

function checkData()

{

var rno;
rno = document.frmValid.txtRegno.value;
if (rno == "")
alert("Please enter Register No.");
return;

if (isNaN(rno))

alert("Invalid Register No.");
return;

if (rno.length < 7)

alert("The Register No. must have 7 digits");
return;

}
ഈ ഫയലില്‍ ജാവാസ്ക്രിപ്റ്റ്‌ കോഡ്‌ മാത്രമേ ഉള്ളൂ എന്നും <SCRIPT> ടാഗ്‌ ഉപയോഗി
ച്ചിട്ടില്ല എന്നും (്രദ്ധിക്കുക. HTML ഫയലിനുള്ളില്‍ മാത്രമാണ്‌ <SCRIPT> ടാഗ്‌
ഉപയോഗിക്കുന്നത്‌. <SCRIPT> ടാഗ്‌ ഉപയോഗിച്ച്‌ ജാവാസ്ക്രിപ്റ്റ്‌ ഫയലിനെ HTML
ഫയലുമായി ലിജ: ചെയ്യാവുന്നതാണ്‌. Type ആഭ്രിബ്യൂട്ട്‌ സൂചിപ്പിക്കുന്നത്‌ ലിങ്കു

കമ്പ്യൂട്ടര്‍ സയന്‍സ്‌ - XII

ചെയ്തിരിക്കുന്ന ഫയല്‍ ഒരു ജാവാസ്ക്രിപ്റ്റ്‌ ഫയല്‍ ആണെന്നതാണ്‌. Src ആട്രിബ്യൂട്ട്‌
ബാഹ്യ ജാവാസ്ക്രിപ്റ്റ്‌ ഫയലിന്റെ സ്ഥാനവും ഫയലിന്റെ പേരും വ്യക്തമാക്കുന്നു.
പരിഷ്കരിച്ച 1111. കോഡ്‌ താഴെ കൊടുത്തിരിക്കുന്നു.

<HTML>
<HEAD><TITLE>Javascript - Validation</TITLE>
<SCRIPT Type= "text/JavaScript" Srce= "checkdata.js">
</SCRIPT>
</HEAD>
<BODY>
<FORM Name= "frmValid">
<CENTER>
<BR>Enter Register Number
<INPUT Type= "text" Name= "txtRegno"™>
<BR><BR>
<INPUT Type= "button" Value= "Get Result"
onClick= "checkData()">
</CENTER>
</FORM>
</BODY>
</HTML>
<SCRIPT> ടാഗില്‍ Src ആട്രിബ്യൂട്ട്‌ ഉണ്ടെങ്കില്‍ അതിലെ ഉള്ളടക്കം അവഗണിക്കപ്പെടും.
അതായത്‌, നിങ്ങള്‍ക്ക്‌ ഒറ്റ <SCRIPT> ടാഗുപയോഗിച്ച്‌ ബാഹ്യ ഫയല്‍ ചേര്‍ക്കാനും
ഒരു കോഡ്‌ നടപ്പാക്കാനും ഒരുമിച്ച്‌ സാധ്യമല്ല. ഇതിനായി രണ്ട്‌ വൃത്യസ്ത <SCRIPT>
ടാഗുകള്‍ ആവശ്യമാണ്‌. ഇവയില്‍ ഒന്ന്‌ Src ഉപയോഗിച്ച്‌ ഒരു ബാഹൃയ ഫയല്‍ ചേര്‍
ക്കാനും മറ്റൊന്ന്‌ കോഡ്‌ ചേര്‍ക്കാനും ഉപയോഗിക്കാം

നിങ്ങളുടെ പുരോഗതി അറിയാം

1. ജാവാസ്ക്രിപ്റ്റില്‍ onMouseEnter ഇവന്റ്‌ എപ്പോഴാണ്‌
പ്രവര്‍ത്തിക്കുക?

2. ഡ്രോപ്ഡാണ്‍ ലിസ്റ്റില്‍ <SELECT> നിന്നും തിരഞ്ഞെടുത്ത
ഇനത്തിന്റെ സൂചിക ലഭിക്കാനുള്ള പ്രോപ്പര്‍ട്ടി
ആണ്‌.

3. ജാവാസ്ക്രിപ്റ്റിലെ onKeyDown, onKeyUp എന്നിവ താരതമ്യം
ചെയ്യുക.

4. Number () ഫങ്ഷന്‍ ഉപയോഗിക്കുന്നത്‌ എന്തിനാണ്‌?

5. ജാവാസ്ക്രിപ്റ്റ്‌ കോഡ്‌ </BODY> ടാഗിന്‌ മുന്‍പായി ഉപയോഗി
ക്കുന്നതിന്റെ ഗുണം എന്ത്‌?

6, ROTI Hlla 9 ഉപയാിച്ചുള്ള ക്ലൈന്റ്‌ സെഡസ്കിഫ്റിങ്‌

¢ നമുക്ക സംഗ്രഹിക്കാം

ഡാറ്റയുടെ സാധൂകരണത്തിനായി ഉപയോഗിക്കുന്ന ഒരു ക്ലൈന്റ്‌ ഭാഗം സ്ക്രിപ്റ്റിംഗ്‌
ഭാഷയായിട്ടാണ്‌ ജാവാസ്ക്രിപ്റ്റിനെ ഈ അധ്യായത്തില്‍ അവതരിപ്പിക്കുന്നത്‌. ജാവാ
സ്ക്രിപ്റ്റ്‌ കോഡ്‌ 111141. ല്‍ ഉള്‍പ്പെടുത്തുന്നതിന്‌ ഉപയോഗിക്കുന്ന ടാഗുകളും ജാവാ
സ്ക്രിപ്റ്റിലെ പ്രധാന ഫങ്ഷനുകളും ഇവിടെ വിശദീകരിച്ചിരിക്കുന്നു. ജാവാസ്ക്രിപ്റ്റിലെ
ഡാറ്റാതരങ്ങളും വേരിയബിളിന്റെ ഉപയോഗവും വിശദമായി ചര്‍ച്ചചെയ്യുന്നു. ഓപ്പറേറ്റ
റുകളുടെയും കണ്‍ട്രോള്‍ സ്ട്രക്ചറുകളുടെയും ഉപയോഗം €“--ലേതിന്‌ സമാനമാണ്‌.
വിവിധ അന്തര്‍ നിര്‍മ്മിത ഫങ്ഷനുകളും ജാവാസ്ക്രിപ്റ്റിലെ ഇവന്റുകളും ഉദാഹരണ
സഹിതം വിശദീകരിച്ചിരിക്കുന്നു. ! HTML പേജില്‍ ജാവാസ്ക്രിപ്റ്റ്‌ കോഡ്‌ ഉള്‍പ്പെടുത്തുന്ന
വൃത്യസ്ത രീതികള്‍ വിശദമായി പ്രതിപാദിച്ചിരിക്കുന്നു.

(a

ത

നമുക്ക പരിശീലിക്കാം

1. താഴെ കാണുന്ന സ്ക്രീന്‍ പ്രദര്‍ശിപ്പിക്കുന്ന
തിന്‌ ഒരു വെബ്‌ പേജ്‌ നിര്‍മിക്കുക. ഉപ ആഞ്ഞ
യോക്താവിന്‌ ആദ്യത്തെ ടെക്സ്റ്റ്‌ ബോക്‌ |. “ea

File:///home/lap6/Chapter 6 JS/Ex.2.1.html

സില്‍ ഒരു നമ്പര്‍ നല്‍കാം. Show ബട്ടണ്‍
ക്ലിക്കുചെയ്യുമ്പോള്‍ രണ്ടാമത്തെ ടെക്സ്റ്റ്‌
ബോക്സില്‍ 1 മുതല്‍ നല്‍കിയിട്ടുള്ള പരിധി
വരെയുള്ള എല്ലാ സംഖ്യകളുടെയും ഗുണ
നഫലം പ്രദര്‍ശിപ്പിക്കണം.

Enter the limit (5
Product upto the limit 120

show

2. താഴെ കാണുന്ന സ്ക്രീന്‍ പ്രദര്‍ശിപ്പിക്കുന്നതിന്‌ ഒരു വെബ്‌ പേജ്‌ നിര്‍മിക്കുക.
ഉപയോക്താവിന്‌ ആദ്യത്തെ ടെക്സ്റ്റ്‌ ബോക്‌
സില്‍ ഒരു നമ്പര്‍ നല്‍കാം. Show ബട്ടണില്‍ |
voy Javascript x |
ക്ലിക്കുചെയ്യുമ്പോള്‍ രണ്ടാമത്തെ ടെക്സ്റ്റ്‌

file:///home/lap6/Chapter 6 JS/Ex.2.2.html + G] >

ബോക്സില്‍ ഒറ്റ സംഖ്യയോ ഇരട്ട സംഖ്യ Enter a number (4
യോ എന്നതിന്‌ അനുസൃതമായി Odd അല്ലെ The number is {Even
ങ്കില്‍ Even എന്ന്‌ പ്രദര്‍ശിപ്പിക്കണം.

show

3. താഴെക്കൊടുത്തിരിക്കുന്ന സ്ക്രീന്‍ പ്രദര്‍ശി
പ്പിക്കുന്നതിന്‌ ഒരു വെബ്‌ പേജ്‌ തയാറാക്കുക.
ഉപയോക്താവിന്‌ ടെക്സ്റ്റ്‌ ബോക്സില്‍ ഒരു [607

voy v J Javascript ക്സ്‌:
പ്രായം നല്‍കാം. ടെക്സ്റ്റ്‌ ബോക്സില്‍ ഒരു ST
file:///home/lap6/Chapter 6 JS/Ex.2.3.htmly | മ =
സംഖ്യക്ക്‌ പകരം ഉപയോക്താവ്‌ അക്ഷരമാ
ണ്‌ നല്‍കുന്നതെങ്കില്‍, Show ബട്ടണില്‍

ക്ലിക്കുചെയ്യുമ്പോള്‍ "Invalid Age" എന്ന ഒരു

Enter age

കമ്പ്യൂട്ടര്‍ സയന്‍സ്‌ - XII

സന്ദേശം പ്രദര്‍ശിപ്പിക്കണം അല്ലെങ്കില്‍ ‘Correct Data" എന്ന സന്ദേശം പ്രദര്‍ശിപ്പി
ക്കണം.

4. ചിത്രത്തില്‍ കാണിച്ചിരിക്കുന്നതുപോലെ
ഒരു ലോഗിന്‍ പേജ്‌ നിര്‍മിക്കുക. പാസ്‌ wm
വേഡ്‌ നല്‍കുന്നതിനായി പാസ്‌ വേഡ്‌ OS | /savescriot

കസ്റ്‌ ബോക്സും യൂസര്‍നെയിം നല്‍കാ | പടട
നായി ഒരു ടെക്സ്റ്റ്‌ ബോക്സും ഉണ്ടായി User Name [ടി

രിക്കണം. യുസര്‍നെയിമില്‍ കുറഞ്ഞത്‌ 4 Password [sv

ഉം പാസ്‌ വേഡില്‍ കുറഞ്ഞത്‌ 6 Do ക്യാര ത്‌

കൂറുകള്‍ ഉണ്ടായിരിക്കണം. പാസ്വേഡി
ലെ ആദ്യത്തെ രണ്ട്‌ ക്യാരക്ടറുകള്‍ അക്കങ്ങള്‍ ആയിരിക്കണം. show ബട്ടണില്‍
ക്ലിക്കു ചെയ്യുമ്പോള്‍ സാധുവായ ഡാറ്റയാണ്‌ ബോക്സുകളില്‍ നല്‍കിയിട്ടുള്ളതെ
ങ്കില്‍ ‘Correct Data" എന്നും അല്ലെങ്കില്‍ Wrong Data" എന്നുമുള്ള സന്ദേശം
പ്രദര്‍ശിപ്പിക്കണം.

5. താഴെ കാണുന്ന ചിത്രത്തിലെ പോലെ ലളിതമായ ഒരു കാല്‍ക്കുലേറ്റര്‍ അടങ്ങിയ
ഒരു വെബ്‌ പേജ്‌ നിര്‍മിക്കുക. രണ്ട്‌ സം |
ഖൃകള്‍ നല്‍കാന്‍ രണ്ടു ടെക്സ്റ്റ്‌ ബോക്‌ |.
സുകള്‍ ഉണ്ടായിരിക്കണം. സങ്കലനം,
വ്യവകലനം, ഗുണനം, ഹരണം എന്നിവ

Javascript
file:///home/lap6/Chapter 6 JS/Ex.2.5.html v

Number 15

Number 2 3

യ്ക്കായി 4 ബട്ടണുകള്‍ ഉണ്ടായിരിക്കണം.
ബട്ടനില്‍ ക്ലിക്കുചെയ്യുമ്പോള്‍ മൂന്നാമത്തെ Answer [8
ടെക്സ്റ്റ്‌ ബോക്സില്‍ ഉത്തരം കാണി

ക്കണം.

eo ao TT TT

1. താഴെപ്പറയുന്നവയില്‍ വേരിയബിള്‍ z എന്ന വേരിയബിളിന്റെ വില എഴുതുക

a. var X, VY, മ?
x

yu 3:

Z = ++X% - yor
b. var x, y, Zz

x = “12”

y= 137

z=xty

a

x = 5;
y 6 7
z= (> y) Il (y % 2 == 0);
2. താഴെകൊടുത്തിരിക്കുന്നവയുടെ ഓട്ട്പുട്ട്‌ കണ്ടെത്തുക.
<HTML>
<BODY>

<SCRIPT Language= "JavaScript">

var i;

for (i = 10; 1 >= 1; i--)
document.write(i + "<BR>");

</SCRIPT>

</BODY>

</HTML>

<HTML>

<BODY>

<SCRIPT Language= "JavaScript">
var i, s = 07

for (i = 1; i <= 100; 1 += 2)

s += 1;
document.write("Sum = " + s);
</SCRIPT>
</BODY>
</HTML>
<HTML>
<BODY>
<SCRIPT Language= "JavaScript">
var ൩, Ss = 0;

n= 0;

കമ്പ്യൂട്ടര്‍ സയന്‍സ്‌ - XII

while (൩ <= 50)
{

s=s +n;
n=n + 5;
}
document.write("Sum = " + s);
</SCRIPT>
</BODY>
</HTML>

d. <HTML>
<BODY>
<SCRIPT Language= "JavaScript">
var n, £ = 17

while (n> 0)

document.write ("Product = + £);
</SCRIPT>

</BODY>

</HTML>

3. താഴെ കൊടുത്തിരിക്കുന്ന html കോഡ്‌ ശ്രദ്ധിക്കുക
<FORM Name= “frmStud’>
<INPUT Type= “text” Name= “studentName”>
</FORM>
ടെക്സ്റ്റ്‌ ബോക്സിന്‍റെ വില n എന്ന വേരിയബിളില്‍ സംഭരിക്കുന്നതിനായി
വിട്ടഭാഗം പൂരിപ്പിക്കുക.

var ന

4. നിങ്ങള്‍ checkData () എന്ന്‌ പേരില്‍ ഒരു ജാവാസ്ക്രിപ്റ്റ്‌ ഫങ്ഷന്‍
എഴുതിയിട്ടുണ്ടെന്ന്‌ കരുതുക. മൌസ്‌ പോയിന്റര്‍ ബട്ടനുമുകളിലൂടെ നീക്കുമ്പോള്‍
മാര്തമേ ഫങ്ഷന്‍ പപവര്‍ത്തിക്കേണ്ടതുള്ളൂു. അതിനുവേണ്ടി താഴെക്കൊടു
ത്തിരിക്കുന്ന കോഡ്‌ എങ്ങനെ പൂര്‍ത്തീകരിക്കാം.

<INPUT Type= “button” .......... = “checkData()”>

6, ജവാസ്്രിഫ്റ്‌ ഉപയാിച്ചുള്ള ക്ലൈന്റ്‌ സെഡസ്കിഫ്റിങ്‌

5.
6.

10.

11.

12.

13.

14.

<SCRIPT> ടാഗും അതിന്റെ ആദ്രിബ്യയുട്ടുകളും വിശദമാക്കുക.
ജാവാസ്ക്രിപ്റ്റില്‍ ഒരു അന്തര്‍നിര്‍മിത ഫങ്ഷന്‍ നിര്‍വചിക്കുന്നതിനുള്ള വാകൃ
ഘടന എഴുതുക.
താഴെക്കൊടുത്തിരിക്കുന്ന വിലകള്‍ ജാവാസ്ക്രിപ്റ്റിലെ അനുയോജ്യമായ ഡാറ്റാ
ഇനങ്ങള്‍ ഉപയോഗിച്ച്‌ വേര്‍തിരിക്കുക.
“Welcome”, “123”, “ബല്‌, 67.4, .98, false, “hello”
ജാവാസ്ക്രിപ്റ്റില്‍ undefined ഡാറ്റ ഇനം എന്നതുകൊണ്ട്‌ എന്താണ്‌ അര്‍ഥമാ
ക്കുന്നത്‌?
ജാവാസ്ക്രിപ്റ്റിലെ ഓപ്പറേറ്ററുകള്‍ വിശദീകരിക്കുക.
താഴെപ്പറയുന്നവ ചെയ്യുന്നതിനുള്ള ജാവാസ്ക്രിപ്റ്റ്‌ ഫങ്ഷനുകളുടെ പേര്‍ എഴുതുക
N എന്ന വേരിയബിളില്‍ സംഖ്യ ആണോ എന്ന്‌ പരിശോധിക്കാന്‍.
"ടേ എന്ന സ്ര്രിംഗ്‌ വലിയ അക്ഷരങ്ങളായി മാറ്റാന്‍.

a.
b

c. "HTML" എന്ന സ്ര്രിംഗ്‌ ചെറിയ അക്ഷരങ്ങളായി മാറ്റാന്‍.
d. "Welcome to functions” എന്ന സന്ദേശം പ്രദര്‍ശിപ്പിക്കാന്‍.
e

"Computer" എന്ന AD SloMael AMIAOGM ക്യാരക്ടര്‍ പ്രദര്‍ശിപ്പിക്കാന്‍.
‘Computer" എന്ന സ്ട്രിങിന്റെ നീളം പ്രദര്‍ശിപ്പിക്കുന്നതിനുള്ള ജാവാസ്ക്രിപ്റ്റ്‌
കോഡ്‌ എഴുതുക.
ഒരു വെബ്‌ പേജില്‍ ഒരു ബട്ടണ്‍ ഉണ്ട്‌. താഴെപ്പറയുന്ന ഇവന്റുകള്‍ക്കനുസരിച്ച്‌
Message() എന്ന ഫങ്ഷന്‍ പ്രവര്‍ത്തിപ്പിക്കാനുള്ള HTML കോഡ്‌ എഴുതുക.

ഒ. ഉപയോക്താവ്‌ ബട്ടണില്‍ മൌസ്‌ ക്ലിക്ക്‌ ചെയ്യുമ്പോള്‍.

1. ഉപയോക്താവ്‌ ബട്ടണിനുമേല്‍ മൌസ്‌ പോയിന്റര്‍ നീക്കുമ്പോള്‍.

ഒരു HTML പേജില്‍ ഹെഡ്‌ ഭാഗത്ത്‌ ജാവാസ്ക്രിപ്റ്റ്‌ കോഡ്‌ എഴുതുന്നതിന്റെ
ഗുണങ്ങള്‍ ഏവ?

ഒരു വിഷയത്തിന്റെ മാര്‍ക്ക്‌ നല്‍കുവാന്‍ ഒരു ടെക്സ്റ്റ്‌ ബോക്സ്‌ അടങ്ങിയിരിക്കുന്ന
ഒരു വെബ്‌ പേജ്‌ രൂപകല്‍പന ചെയ്യുക.

a. ഈ വെബ്‌ പേജിനുവേണ്ടിയുള്ള HTML കോഡ്‌ എഴുതുക.

b. ഈ ടെക്സ്റ്റ്‌ ബോക്സിലെ വിലയുടെ സാധുകരണത്തിന്‌ ഒരു ബാഹൃ ജാവാ
സ്ക്രിപ്റ്റ്‌ ഫയല്‍ നിര്‍മിച്ച്‌ അത്‌ 1111. ഡോക്യുമെന്റുമായി ബന്ധിപ്പിക്കുക.
വിലയിരുത്തുന്നതിനുള്ള സൂചകങ്ങള്‍

൫) അത്‌ ശുന്യമായിരിക്കരുത്
(1) അത്‌ ഒരു സംഖ്യയായിരിക്കണം

(iii) 0-നും 60-നും ഇടയിലായിരിക്കണം മാര്‍ക്ക്‌.

൦. സ്ക്രിപ്റ്റ്‌ ഒരു ബാഹ്യ ഫയല്‍ ആയി എഴുതുന്നതിന്റെ ഗുണഫലങ്ങള്‍ എഴുതുക.

(Ele)
പ്രധാന പഠനനേട്ടങ്ങള്‍

DO അധ്യായത്മാന്റെ പഠനം പുരര്‍ത്ത?യാകുനു
60205 പഠിതാവ്‌ ആര്‍ജിക്കേങ പറനമേട്ടങ്ങശി

വെബ്സെര്‍വറിന്റെ ഉപയോറം വെബ്ഹോ
(Myla ആശയം എന്നിവ വിവരിക്കുന്നു.
QMO തരത്തിലുളള ഹോസ്റ്റിങ്‌ രിതി
മനസിലാക്കുന്നു.

ഹോസ്റ്റിങ്‌ സ്ഥലം വാങ്ങുന്നതിനുളള
മാര്‍ദ്ഗം വിശദമാക്കുന്നു.

ഡൊമൈന്‍ നെയിം രജിസ്റര്‍ ചെയ്യും എഫ്‌.
Poll. ക്ലയന്റ്‌ സോഫ്റ്റ്വെയര്‍ ഉപയോരിച്ച്‌
ഹോസ്റ്റ്‌ ചെയ്യുന്നു.

സൌജന്യ ഹോസ്റ്റിംനി ong സവിശേഷതകള്‍
നസ്സിലാക്കുന്നു.

Howdy മാനേജ്മെന്റ്‌ സംവിധാനത്തിന്റെ
ഉപയോം തിരിച്ചറിയുന്നു.

റെസ്പോണ്‍സിീവ്‌ വെബ്‌ രൂപകല്‍പന
യുടെ ആവശ്യക്ത തിരിച്ചറിയുന്നു.

വെബ്‌ ഹോസ്റ്റിങ്‌

വെബ്‌ പേജുകള്‍ എങ്ങനെ നിര്‍മ്മിക്കാമെന്ന്‌ മുന്‍
അധ്യായങ്ങളില്‍ നാം പഠിച്ചുവല്ലോ? ഒട്ടേറെ
വെബ്പേജുകള്‍ ചേര്‍ത്തു നിര്‍മിക്കപ്പെടുന്ന
വെബ്സൈറ്റ്‌ ഒരു സ്ഥാപനത്തിന്റെയോ ഉല്പ
ന്നത്തിന്റേയോ സേവനത്തിന്റേയോ വിവരങ്ങള്‍
നല്‍കുന്നവയായിരിക്കും. നമ്മുടെ സ്‌കൂളിന്റെ ഒരു
വെബ്സ്്റ്‌ HTML ഉപയോഗിച്ച്‌ നിര്‍മിച്ചു എന്നി
രിക്കട്ടെ. ഈ വെബ്സ്റ്റ്റ്‌ ഇന്റര്‍നെറ്റില്‍ എങ്ങ
നെ ലഭ്യമാക്കാം? അങ്ങനെ ലഭ്യമാക്കണമെങ്കില്‍
ഈ വെബ്പേജുകളെ ഇന്റര്‍നെറ്റുമായി ബന്ധമു
ളള ഒരു വെബ്സെര്‍വറില്‍ സൂക്ഷിക്കണം. വെബ്‌
ഹോസ്റ്റിംഗിനെപ്പറ്റിയുളളു അവലോകനം, വിവി
ധതരം വെബ്ഹോസ്റ്റിങ്ങുകള്‍ അതിന്റെ പ്രത്യേ
കതകള്‍ തുടങ്ങിയവ ഈ അധ്യായത്തില്‍ പ്രതി
പാദിക്കുന്നു. കൂടാതെ ഒരു വെബ്സൈറ്റിനെ തിരി
ച്ുറിയാനുള്ള ഡൊമൈന്‍നാമം (ഡൊമൈന്‍
നെയിം) എങ്ങനെ തെരഞ്ഞെടുക്കാം എന്നും
അത്‌ എങ്ങനെ രജിസ്റ്റര്‍ ചെയ്യാം എന്നും ഇവിടെ
ചര്‍ച്ചചെയ്യുന്നു. വിവിധ FTP ക്ലയന്റ്‌ സോഫ്റ്റ്‌
വെയര്‍ ഉപയോഗിച്ച്‌ നമ്മുടെ കമ്പ്യൂട്ടറില്‍ നിന്ന്‌
സെര്‍വറിലേയ്ക്ക്‌ ഫയലുകള്‍ (വെബ്പേജുകള്‍,
ചിത്രങ്ങള്‍ മുതലായവ) എങ്ങനെ മാറ്റാമെന്നും
ഇതില്‍ വിശദമാക്കുന്നു. ഈ അധ്യായം പഠിച്ചു
കഴിയുമ്പോള്‍ ഒരു ഡൊമൈന്‍ നാമം രജിസ്റ്റര്‍
ചെയ്യാനും വെബ്സൈറ്റ്‌ ഹോസ്റ്റ്‌ ചെയ്യാനും പഠി
താവിന്‌ കഴിയും.
7. വെബ്‌ ഹോസ്റ്റിംഗ്‌

7.2 വെബ്‌ ഹോസ്റ്റിംഗ്‌ (Web hosting)

നമ്മുടെ സ്കൂളിനായി ഒട്ടേറെ പേജുകളുള്ള ഒരു വെബ്സ്റ്റ്‌ എങ്ങനെ നിര്‍മിക്കുമെന്ന്‌
മുന്‍ അധ്യായങ്ങളില്‍ നാം പഠിച്ചിട്ടുണ്ട്‌. ഏതെങ്കിലും ഒരു ടെക്സ്റ്റ്‌ എഡിറ്റര്‍ അല്ലെങ്കില്‍
ഒരു വെബ്ഡിസൈന്‍ ടൂള്‍ ഉപയോഗിച്ച്‌ നമ്മുടെ വെബ്സൈറ്റ്‌ നിര്‍മിക്കാം. ഹോം പേജില്‍
സ്‌കൂളിലെ സാകര്യങ്ങള്‍, കോഴ്‌സുകള്‍ മേല്‍വിലാസം മറ്റ്‌ വെബ്‌ പേജുകളിലേയ്ക്കു
ളള ലിങ്കുകള്‍ എന്നിവ ഉള്‍പ്പെടുത്തി ആകര്‍ഷണീയമാക്കാം.

നമ്മുടെ കമ്പ്യൂട്ടറില്‍ സ്‌കൂളിന്റെ വെബ്സ്്റ്‌ നിര്‍മാണം പൂര്‍ത്തിയാക്കിയ ശേഷം
അത്‌ ഇന്റര്‍നെറ്റില്‍ ലഭ്യമാക്കണം. അതിനായി നമ്മുടെ കൈവശമുള്ള വെബ്സ്റ്്റ്‌
ഏതെങ്കിലും വെബ്സെര്‍വറിലേയ്ക്ക്‌ അപ്ലോഡ്‌ ചെയ്തെങ്കില്‍ മാത്രമേ ലോകത്തു
BB എല്ലാവര്‍ക്കും അത്‌ വീക്ഷിക്കാനാവു. വെബ്സൈറ്റ്‌ സൂക്ഷിക്കുവാനായി വെബ്സെര്‍വ
റിലെ കുറച്ച്‌ സ്ഥലം വാടകയ്ക്ക്‌ എടുക്കുകയോ അല്ലെങ്കില്‍ നമ്മുടേതായ ഒരു വെബ്‌
സെര്‍വര്‍ ക്രമീകരിക്കുകയോ ചെയ്യാം. ഒരു വെബ്സെര്‍വര്‍ ക്രമീകരിക്കുക എന്നത്‌ വളരെ
ചെലവേറിയ ഒരു പ്രക്രിയയാണ്‌. ആയതിനാല്‍ നിലവിലുള്ള ഒരു വെബ്സെര്‍വറിന്റെ
സ്ഥലം വാടകയ്ക്കെടുക്കുന്നതായിരിക്കും ഉചിതം.

വെബ്ഹോസ്റ്റിംഗ്‌ എന്നാല്‍ ഇന്റര്‍നെറ്റില്‍ ലഭ്യമാക്കേണ്ട വെബ്സൈറ്റിലെ ഫയലുകളെ
വെബ്സെര്‍വറില്‍ സൂക്ഷിക്കുകയും അതിനാവശ്യമായ സേവനം നല്‍കുകയും ചെയ്യുന്ന
പ്രക്രിയയാണ്‌. വെബ്ഹോസ്റ്റിങ്‌ സേവനങ്ങള്‍ നല്‍കുന്ന കമ്പനികളെ വെബ്ഹോസ്റ്റ്‌
എന്നുവിളിക്കും. വെബ്‌ സെര്‍വറുകള്‍ വെബ്ഹോസ്റ്റുകളുടെ ഉടമസ്ഥതയിലും നിയന്ത്ര
ണത്തിലും ഉള്ളതായിരിക്കും. തടസമില്ലാതെ ഇന്റര്‍നെറ്റ്‌ ബന്ധം നല്‍കുവാനും PHP,
JAVA, ASP.NET തുടങ്ങിയ പ്രോഗ്രാമിങ്‌ ഭാഷകള്‍ക്ക്‌ ഡാറ്റ ബേസ്‌ പിന്‍ബലം ആവ
ശ്യമുള്ളപ്പോള്‍ നല്‍കാനും ഇത്തരം സെര്‍വറുകള്‍ക്ക്‌ കഴിയും.

7.1.1 വിവിധ തരം വെബ്‌ ഹോസ്റ്റിംഗുകള്‍ (Types of web hosting)

HTML, ചിര്രങ്ങള്‍ എന്നിവ അടങ്ങിയ നമ്മുടെ സ്കൂള്‍ വെബ്സൈറ്റിന്‌ 4 എം.ബി.
സ്ഥലമാണ്‌ വെബ്സെര്‍വറില്‍ വേണ്ടത്‌ എന്ന്‌ കരുതുക. എന്നാല്‍ വെബ്ഹോസ്റ്റുകള്‍ 10
എം.ബി., 20 എം.ബി തുടങ്ങിയ പാക്കേജുകളായാണ്‌ ഇന്ന്‌ സാധാരണയായി ലഭുമാക്കു
ന്നത്‌. അപ്പോള്‍ നമ്മുടെ ആവശ്യത്തിനനുസരിച്ച്‌ ഏറ്റവും അനുയോജ്യമായ ഒരു പാക്കേജ്‌
തിരഞ്ഞെടുക്കേണ്ടതുണ്ട്‌. നമ്മുടെ വെബ്സൈറ്റില്‍ എത്ര ആളുകള്‍ സന്ദര്‍ശിക്കുമെന്നത്‌
ഈ തിരഞ്ഞെടുപ്പിന്‌ ഒരു മാനദണ്ഡമാണ്‌. നമ്മുടെ വെബ്സൈറ്റില്‍ ഡാറ്റബേസും
സ്ക്രിപ്റ്റുകളും ഉണ്ടെങ്കില്‍ അതിനാവശ്യമായ സേവനം ലഭ്യമാകുന്ന വെബ്ഹോസ്റ്റുക
ളെയാണ്‌ തിരഞ്ഞെടുക്കേണ്ടത്‌. വെബ്ഹോസ്റ്റുകള്‍ വിവിധതരത്തിലുള്ള ഹോസ്റ്റിങ്‌
പാക്കേജുകള്‍ ലഭ്യമാക്കുന്നു. ഷെയേര്‍ഡ്‌ ഹോസ്റ്റിങ്‌, വെര്‍ച്ചചല്‍ പ്രൈവറ്റ്‌ ഹോസ്റ്റിങ്‌,
ഡെഡിക്കേറ്റഡ്‌ ഹോസ്റ്റിങ്‌ എന്നിങ്ങനെയാണ്‌ അവയെ തരം തിരിച്ചിരിക്കുന്നത്‌.

a. ഷെയേര്‍ഡ്‌ ഹോസ്റ്റിങ്‌ (Shared hosting): വെബ്‌ ഹോസ്റ്റിങിലെ സര്‍വസാധാ
രണമായ ഹോസ്റ്റിങ്‌ രീതിയാണ്‌ ഷെയേര്‍ഡ്‌ വെബ്ഹോസ്റ്റിങ്‌. പല വെബ്സൈറ്റുകള്‍
ഒരു വെബ്സെര്‍വറില്‍ സൂക്ഷിക്കുകയും സെര്‍വറിന്റെ RAM, CPU എന്നിവ പങ്കിടു
കയും ചെയ്യുന്നതുകൊണ്ടാണ്‌ ഇതിനെ ഷെയേര്‍ഡ്‌ ഹോസ്റ്റിങ്‌ എന്നു വിളിക്കുന്നത്‌.
ഇത്‌ ഉയര്‍ന്ന ബാന്‍ഡ്‌ വിഡ്ത്തും ഉയര്‍ന്ന സംഭരണ സ്ഥലവും ആവശ്യമുളള വെബ്സൈ

കമ്പ്യൂട്ടര്‍ സയന്‍സ്‌ - XII

റ്റുകള്‍ക്ക്‌ അനുയോജ്യമല്ല. സന്ദര്‍ശകര്‍ കുറവുള്ള വെബ്സ്റ്റുകള്‍ക്കാണ്‌ ഷെയേര്‍ഡ്‌
ഹോസ്റ്റിംഗ്‌ കൂടുതല്‍ ഇണങ്ങുന്നത്‌. ഇത്‌ വളരെ ചെലവ്‌ കുറഞ്ഞതും എളുപ്പത്തില്‍ ഉപ
യോഗിക്കാവുന്നതുമാണ്‌. അതുകൊണ്ട്‌ തന്നെ ഇതുവളരെ വ്യാപകമായി ഉപയോഗി
ക്കുന്നു. സെര്‍വര്‍ നവീകരണവും സോഫ്‌റ്റ്വെയര്‍ ഇന്‍സ്റ്റാള്‍ ചെയ്യുമ്പോള്‍ ഉണ്ടാകുന്ന
സുരക്ഷാപ്രള്‍നങ്ങളും ഹോസ്റ്റിങ്‌ കമ്പനി തന്നെ പരിഹരിക്കും. നിരവധി വെബ്്‌സൈ
Qo ഇതിന്റെ ബാന്‍ഡ്‌ വിഡ്ത്ത്‌ പങ്കിടുന്നതുകൊണ്ട്‌ ഏതെങ്കിലും ഒരു വെബ്്‌സൈ
റ്റിന്‌ വലിയ അളവിലുള്ള (്രാഫിക്ക്‌ ഉണ്ടാവുകയാണെങ്കില്‍ ഈ വെബ്സെര്‍വറിലെ
എല്ലാ വെബ്സൈറ്റുകളുടെയും പ്രവര്‍ത്തനം മന്ദഗതിയിലാകും എന്നതാണ്‌ ഇതിന്റെ
പ്രധാനപ്പെട്ട ന്യൂനത.

b. ഡെഡിക്കേറ്റഡ്‌ ഹോസ്റ്റിങ്‌ (Dedicated hosting): ഉപഭോക്താവ്‌ ഒരു
വെബ്സെര്‍വറും അനുബന്ധ സാകര്യങ്ങളും പൂര്‍ണ്ണമായും വാടകയ്ക്ക്‌ എടുക്കുന്നതിനെ
ഡെഡിക്കേറ്റഡ്‌ ഹോസ്റ്റിങ്‌ എന്ന്‌ വിളിക്കുന്നു. ഈ വെബ്‌ സെര്‍വര്‍ മറ്റ്‌ വെബ്സൈറ്റുക
ളുമായി വിഭവങ്ങള്‍ പങ്കിടുന്നില്ല. വലിയ സ്ഥാപനങ്ങളും സര്‍ക്കാര്‍ വകുപ്പുകളും ധാരാളം
സന്ദര്‍ശകര്‍ ഉള്ളതുകൊണ്ട്‌ ഡെഡിക്കേറ്റഡ്‌ വെബ്ഹോസ്റ്റിങാണ്‍ തിരഞ്ഞെടുക്കുന്നത്‌.
ഇവിടെ ഹാര്‍ഡ്വെയറും സോഫ്റ്റ്വെയറും തിരഞ്ഞെടുക്കുന്നതിനുളള സ്വാതന്ത്ര്യവും
വെബ്സെര്‍വറിന്റെ പൂര്‍ണ്ണ നിയ്രന്തണവും ഉപയോക്താവിനാണ്‌. ഡെഡിക്കേറ്റഡ്‌ സെര്‍വ
റിന്റെ കാരൃക്ഷമത എപ്പോഴും ഉയര്‍ന്ന നിലവാരത്തിലുള്ളതും, എന്നാല്‍ വളരെ ചെല
വേറിയതുമാണ്‌. ഡെഡിക്കേറ്റഡ്‌ സെര്‍വറുകള്‍ സാധാരണ ഗതിയില്‍ ഡാറ്റ സെന്ററുക
ളില്‍ സ്ഥാപിച്ചിരിക്കുന്നതിനാല്‍ ഇന്റര്‍നെറ്റ്‌ കണക്ഷനും വൈദ്യുതിയും വിദഗ്ധ സേവ
നവും എപ്പോഴും ലഭ്യമാകും. ഇതുമൂലം ഇന്റര്‍നെറ്റ്‌ കണക്ഷനും വൈദ്യുതി സംബന്ധ
മായുള്ള സൌകര്യങ്ങളും ക്രമീകരിക്കുന്നതിനേക്കാള്‍ കുറവായിരിക്കും. ബാന്റ്‌ വിഡ്ത്ത്‌
പങ്കുവയ്ക്കപ്പെടാത്തതിനാല്‍ വളരെ വേഗത്തില്‍ വെബ്സ്റ്റുകള്‍ ഉപയോഗിക്കുവാന്‍
ഉപയോക്താവിന്‌ സാധ്യമാകും. സേവനദാതാവിന്റെ ഭാതിക സൌകരൃത്തിനുളളില്‍ ഉപ
യോക്താവ്‌ സ്വന്തമായി വാങ്ങിയ വെബ്‌ സെര്‍വര്‍ പ്രവര്‍ത്തിക്കുവാന്‍ ക്രമീകരണം ഒരു
ക്കുകയാണെങ്കില്‍ അതിനെ കോ ലോക്കേഷന്‍ എന്നുവിളിക്കും.

C. വെര്‍ച്വല്‍ പ്രൈവറ്റ്‌ സെര്‍വര്‍ (Virtual Private Server): വെര്‍ചല്‍ പ്രൈവറ്റ്‌
സെര്‍വര്‍ എന്നാല്‍ വെര്‍ചചല്‍ ടെക്നോളജി ഉപയോഗിച്ച്‌ പലതായി വിഭജിക്കപ്പെട്ട ഒരു
വെബ്സെര്‍വറാണ്‌. ഓരോ VPS ഉം ഡെഡിക്കേറ്റഡ്‌ സെര്‍വര്‍ പോലെ പ്രവര്‍ത്തിക്കും.
അതിനായി പ്രത്യേക ഓപ്പറേറ്റിങ്‌ സിസ്റ്റം വെബ്സെര്‍വര്‍ സോഫ്റ്റ്‌ വെയര്‍ പാക്കേജു
കളായ ഇ-മെയില്‍, ഡാറ്റാബേസ്‌ തുടങ്ങിയവയും അതില്‍ സ്ഥാപിച്ചിരിക്കും. ഷെയേര്‍ഡ്‌
ഹോസ്റ്റിങ്‌ പോലെ ഇവയെ കരുതേണ്ടതില്ല. കാരണം "൪൫5൭-ല്‍ ഒരു നിശ്ചിതശതമാനം
RAM ഓരോ വെര്‍ച്ചല്‍ വെബ്സെര്‍വറിനുമായി മാറ്റിവച്ചിരിക്കുന്നു. ഓരോ "78-ഉം
പൂര്‍ണ്ണ സ്വാതന്ത്ര്യമുളള വെബ്സെര്‍വറായി പ്രവര്‍ത്തിക്കും. അതായത്‌ ഒരു പ്രത്യേക
ഭാതിക സെര്‍വറില്‍ പ്രവര്‍ത്തിക്കുന്നതുപോലെ VPS-a ഉപഭോക്താവിന്‌ സോഫ്റ്റ്‌
വെയര്‍ ഇന്‍സ്റ്റാള്‍ ചെയ്യാനും അവ ക്രമീകരിക്കാനും പൂര്‍ണ്ണ അവകാശം ഉണ്ടായിരി
ക്കും. മറ്റ്‌ വെര്‍ച്ചല്‍ സെര്‍വറുകളെ ബാധിക്കാതെ പുനരാരംഭിക്കാന്‍ ഓരോ VPS-Myo
അവകാശമുണ്ട്‌. "൪5-ഹോസ്റ്റിങ്‌ സെര്‍വറിലെ ഓരോ വെബ്സൈറ്റിനും തനതായ ബാന്റ്‌
വിഡ്ത്ത്‌ ലഭ്യമാക്കും. ഇതുമൂലം സെര്‍വര്‍ ഷെയര്‍ ചെയ്യപ്പെട്ടാലും ഡെഡിക്കേറ്റഡ്‌

7. വെബ്‌ ഹോസ്റ്റിംഗ്‌

ഹോസ്റ്റിങിന്റെ നേട്ടം കൈവരിക്കാനാകും. ഷെയേര്‍ഡ്‌ ഹോസ്റ്റിങിനെക്കാളും സവിശേ
ഷതകള്‍ ആവശ്യമുള്ള വെബ്സൈറ്റുകള്‍ക്കാണ്‌ ഇത്തരം ഹോസ്റ്റിങ്‌ യോജിക്കുന്നത്‌.
പക്ഷേ ഡെഡിക്കേറ്റഡ്‌ ഹോസ്റ്റിങിന്റെ എല്ലാ പ്രത്യേകതകളും ഇവിടെ ലഭ്യമല്ല. ഡെഡി
ക്കേറ്റഡ്‌ ഹോസ്റ്റിങിന്റെ ഒട്ടുമിക്ക സര്‍വ്വീ — anuemdad ഹാസ്സിള്‍ ഷെഡിക്കേററഡി ഫോസ്റ്റില്‍ VPS ഫോസ്സില്‍

സുകളും മിതമായ നിരക്കില്‍ നല്‍കുവാന്‍
/25-ഹോസ്റ്റിങിന്‌ കഴിയും. അറിയപ്പെ ഒറ്റ വെബ്സ്റ്റ്‌ aid

KM ചില സെര്‍വര്‍ വെര്‍ച്ചലൈസേഷന്‍
വെര്‍ച്ചല്‍ബോക്സ്‌, ഫ്രീ VPS, യൂസര്‍

॥ി ഫിസിക്കല്‍ ഫിസിക്കല്‍ ഫിസിക്കല്‍
മോഡ്‌ ലിനക്സ്‌, മൈക്രോസോഫ്റ്റ്‌ വെബ്‌ സെര്‍വര്‍ വെബ്‌ സെര്‍വര്‍ വെബ്‌ സെര്‍വര്‍
ഹൈപ്പര്‍ വി തുടങ്ങിയവ.

ലു ഛത്രം 7.1: റെഞ്ച്‌ ഡിസൈനിംഗ്‌ തരങ്ങശി
വിവിധതരത്തിലുള്ള ഹോസ്റ്റിംഗ്‌ പാക്കേ

ജുകളെപ്പറ്റിയുള്ള പ്രതീകാത്മക വിവരണം ചിത്രം 7.1 ല്‍ നല്‍കിയിരിക്കുന്നു.

7.1.2 ഹോസ്റ്റിങിന്‌ സ്ഥലം വാങ്ങുക (Buying റി et)
സെര്‍വര്‍

സ്‌കൂളിന്‌ വേണ്ടി നിര്‍മ്മിച്ച വെബ്‌
സെറ്റ്‌ ഇപ്പോള്‍ നമ്മുടെ കമ്പ്യൂട്ടറിലെ
ഒരു ഫോള്‍ഡറില്‍ സൂക്ഷിച്ചിരിക്കുക
യാണ്‌. ഇത്‌ ഇന്റര്‍നെറ്റില്‍ ലഭ്യമാകാന്‍ ജ്‌
ഈ ഫയലുകളെ വെബ്സെര്‍വറി

ലേയ്ക്ക്‌ പകര്‍ത്തണം. ചിത്രം 7.2 ല്‍
ഇത്‌ കാണിച്ചിരിക്കുന്നു.

ഇതിനായി അനുയോജ്യമായ ഒരു വെബ്സൈറ്റ്‌ വികസിരിച്ച PC ബ്രാസ്‌ ചെയ്യുന്ന PC

വെബ്ഹോസ്റ്റിങ്‌ രീതി നാം തിരഞ്ഞെ ചിതം 7.2 : ഇര്മീരീവെറ്റിരി ഒരു വെബ്സൈറ്റ്‌ ലഭ്യമാക്കുത്മു
ടുക്കേണ്ടതുണ്ട്‌. ഷെ
യേര്‍ഡ്‌ ഹോസ്റ്റിങ്‌
നമ്മുടെ വെബ്സൈറ്റിന്‌

1)

CHOOSE BETWEEN

അനുയോജ്യമായതിനാ
ലും, ചെലവ്‌ കുറവായ LINUX ADVANCED PLAN t “i ) winows Premium PLAN
ള്‌ ‘STARTS FROM, ക ല്‍ STARTS FROMG
തിനാലും അത്‌ തിര 2159 229...
ഞ്ഞെടുക്കുന്നതാവും
ഹ Single Domain ഫ Single Domain
കൂടുതല്‍ ഉത്തമം. ഏതു വിടോ ധി
ച ഹ Unlimited Bandwidth Unlimited Bandwidth

തരം ഹോസ്റ്റിങ്‌ ame ഹ Unlimited Emails Unlimited Emails
വറാണെന്ന്‌ തരം തീരു

Select Duration. |3 Years atRs.219/month ൯ Select Duration. 3 Years at Rs. 339/month +

മാനിച്ചു കഴിഞ്ഞാല്‍

നമ്മൂടെ വെബ്‌ സൈ

റ്റിലെ ഫയലൂകള്‍ സൂ ee
ക്ഷിക്കാനാവശ്യമായ ചിത്രം 7.3 : ഹോസ്റ്റിംഗ്‌ ഓപ്ഷനുകശീ

കമ്പ്യൂട്ടര്‍ സയന്‍സ്‌ - XII

സെര്‍വര്‍ സ്ഥലം സേവന ദാതാവില്‍ നിന്ന്‌ വാങ്ങണം. ഹോസ്റ്റിങ്‌ സ്ഥലം വാങ്ങു
മ്പോള്‍ നിരവധി കാര്യങ്ങള്‍ പരിഗണിക്കേണ്ടതായുണ്ട്‌. ഒന്നാമതായി നമ്മുടെ
വെബ്സ്റ്റിന്‌ എത്രസ്ഥലം ആവശ്യമുണ്ടെന്ന്‌ കണ്ടെത്തണം. വെബ്പേജില്‍ പ്രോഗ്രാ
മിങ്‌ ഉള്ളടക്കം ഉണ്ടെങ്കില്‍ വെബ്സെര്‍വറില്‍ ഈ സേവനം നല്‍കുന്ന സാങ്കേതിക
വിദ്യ ഉണ്ടായിരിക്കണം. വെബ്പേജ്‌ നിര്‍മ്മാണത്തിനായി ഉപയോഗിച്ചിരിക്കുന്ന
പ്രോഗ്രാം, വിന്റോസ്‌ ഹോസ്റ്റിങിനാണോ ലിനെക്സ്‌ ഹോസ്റ്റിങിനാണോ അനുയോജ്യ
മെന്ന്‌ കണ്ടെത്തണം. അതിനുശേഷം വിന്‍ഡോസ്‌ സെര്‍വറോ ലിനെക്സ്‌ സെര്‍വറോ
തിരഞ്ഞെടുക്കണം. ചിത്രം 7.3 ഇത്‌ വ്യക്തമാക്കുന്നു. വെബ്സൈറ്റില്‍ 11101. കോഡ്‌
മാത്രമാണ്‌ ഉപയോഗിച്ചിരിക്കുന്നതെങ്കില്‍ ഏത്‌ തരം സെർവറും ഉപയോഗിക്കാം. എന്നാല്‍
ഡാറ്റാ ബേസ്‌, ഇ-മെയില്‍ എന്നിവയ്ക്ക്‌ ആവശ്യമായ സാങ്കേതിക സൌകര്യം ആവശ്യ
മുണ്ടെങ്കില്‍ അത്‌ കൂടി പരിഗണിച്ച്‌ വേണം വെബ്ഹോസ്റ്റ്‌ തിരഞ്ഞെടുക്കാന്‍.

7.1.3 ഡൊമൈന്‍ നെയിം രജിസ്റ്റര്‍ ചെയ്യുക (Domain name registration)

സ്കൂള്‍ വെബ്സൈറ്റിന്‌ ആവശ്യമായ ഹോസ്റ്റിങ്‌ സ്ഥലം നാം വാങ്ങിക്കഴിഞ്ഞു.
ഇന്റെര്‍നെറ്റില്‍ ഓരോ വെബ്സൈറ്റും തിരിച്ചറിയുന്നതിനായി പ്രത്യേകം URL ആവശ്യ
മാണ്‌. ഇതിനായി അനുയോജ്യമായ ഒരു ഡൊമൈന്‍ നാമം സ്‌കൂള്‍ വെബ്സൈറ്റിനായി
നാം തിരഞ്ഞെടുക്കണം. ഇന്റെര്‍നെറ്റില്‍ ഒരു വെബ്സൈറ്റ്‌ തിരിച്ചറിയാന്‍ ഡൊമൈന്‍
സഹായിക്കുന്നതാണ്‌. മിക്ക വെബ്ഹോസ്റ്റിങ്‌ കമ്പനികളും ഡൊമൈന്‍ നാമം രജിസ്റ്റര്‍
ചെയ്യുവാനുളള സേവനം നല്‍കുന്നുണ്ട്‌. നമ്മുടെ വെബ്സൈറ്റിന്‌ അനുയോജ്യമായ ഒരു
ഡൊമൈന്‍ നാമം തിരഞ്ഞെ

ടുത്തശേഷം ഇവ ലഭ്യമാ Domain Search Result | + search Again |

ണോ എന്നും മറ്റാരെങ്കിലും
ഇതേ പേരില്‍ രജിസ്റ്റര്‍ ചെ പ stjosephsbhss. org

യ്തിട്ടു ണ്ടോ എന്നും പരിശോ is available for 1 year(s) at Rs. 359.00 /yr_ ൦

ധിക്കണം. www.whois.net ചിത്രം 7.4: ഡൊമൈരി നാമ exlWesonodg lowes ഫ്ലം

പോലെയുളള സൈറ്റുകളും [

വെബ്ഹോസ്റ്റിങ്‌ കമ്പനികളുടെ Manage Domain ഒ

വെബ്സൈറ്റുകളും ഇത്തരം പരി അവ്ടെ:
റ്ുക്ളും ഇ stiosephsbhss.org [save Changes}

ശോധനയ്ക്ക്‌ നമ്മെ സഹായി

പി

ക്കുന്നു. രജിസ്റ്റര്‍ ചെയ്യപ്പെട്ട എല്ലാ അന...”

ഡൊമൈന്‍ നാമങ്ങളുടെയും സം
ഡാറ്റാബേസായ ICANN ഡാറ്റാ LastName

| Email

ബേസ്‌ പരിശോധിച്ച്‌ മറുപടി

‘Company Name

നല്‍കുന്നു. ചി്രം 7.4 ഇത്‌ സൂചി
പ്പിക്കുന്നു. ഈ ഡൊമൈന്‍ നാമം
ലഭ്യമാണെങ്കില്‍ ICANN ന്റെ രം നി

whois.net ഡാറ്റാബേസില്‍ പേര്‍, ചൂതം 7.5 : WHOIS ചിവരങ്ങശി

| Address:

വാസം പോ

നമ്പര്‍, ഇ-മെയില്‍ ടട TYesr > Toa mount
എന്നിവ ചിത്രം 7.5-ല്‍ ക്ഷ x0 മം | Total Savings: ₹ 395.00
orn 000
കാണിചി പ Service Tax 400 യവം
രി oe

ലെ രേഖപ്പെടുത്തണം. ae

ഈ വിവരങ്ങള്‍ രജി
സ്റ്റര്‍ ചെയ്യുന്ന ആളിന്റെ
ഇഷ്ടാനുസരണം പൊ

പേത ത്തു

ഹം ISAC

ചിതം 7.6 - ഡധൊമൈര വ്ഥങ്ങത്‌
തുവായോ വൃക്തിപര

മായോ സൂക്ഷിക്കുന്നതാണ്‌. വാര്‍ഷിക വരിസംഖ്യ ഓണ്‍ലൈനായി അടച്ച്‌ നമ്മുടെ
പേരില്‍ ഡൊമൈന്‍നാമം രജിസ്റ്റര്‍ ചെയ്യാവുന്നതാണ്‌. വാങ്ങുന്നതിന്റെ ഷോപ്പിങ്‌ കാര്‍ട്ട്‌
ചിത്രം 27.6 ല്‍ പ്രദര്‍ശിപ്പിച്ചിരിക്കുന്നു.

ഇപ്പോള്‍ നമ്മള്‍ വെബ്സെര്‍വറില്‍ സ്‌കൂള്‍ വെബ്സൈറ്റിനായുളള സ്ഥലം വാങ്ങി
ഡൊമൈന്‍ നാമം രജിസ്റ്റര്‍ ചെയ്തു. ഏതെങ്കിലും ഉപയോക്താവ്‌ നമ്മുടെ ഡൊമൈന്‍
നാമം (stjosephhss.org) (ബ്രൌസര്‍ വിന്‍ഡോയില്‍ രേഖപ്പെടുത്തിയാല്‍ നാം വെബ്സെര്‍
വറില്‍ സൂക്ഷിച്ചിരിക്കുന്ന വെബ്പേജ്‌ ദൃശ്യമാകും. 115 നമ്മുടെ സെര്‍വറിന്റെ IP മേല്‍വി
ലാസം ധ്രൌസറില്‍ ലഭ്യമാക്കുകയും ആ IP മേല്‍വിലാസം ഉപയോഗിച്ച്‌ നമ്മുടെ
വെബ്പേജ്‌ സൂുക്ഷിച്ചിരിക്കുന്ന വെബ്‌ സെര്‍വറുമായി ബന്ധമുണ്ടാക്കുകയും ചെയ്യുന്നതുമു
ലമാണ്‌ ഇത്‌ സാധ്യമാകുന്നത്‌. വെബ്‌ സെര്‍വറുമായി ബന്ധിപ്പിച്ചിട്ടുളള ഡൊമൈന്‍
നാമത്തിന്റെ IP മേല്‍വിലാസം സൂക്ഷിച്ചുവയ്ക്കുന്നതിനാണ്‌ ൧.റിക്കോര്‍ഡ്‌ ഉപയോഗി
ക്കുന്നത്‌. ഡൊമൈനിന്റെ കണ്‍ട്രോള്‍ പാനലില്‍ ലോഗ്‌ ഇന്‍ ചെയ്തതിനുശേഷം A.
റിക്കേോാര്‍ഡ്‌

പുതുക്കാവുന്ന

താണ്‌. i WE CONTENT PRORTY Save Changes
വെബ്സെര്‍വ ലിന A 7) Sue Canes
റിന്റെ IP

മേല്‍വിലാസം ദ്വി തലാ

സൂചിപ്പിക്കുന്ന

തിനായി ചി

ത്രം 7.7ല്‍ കാ ചിത്രം 7.7 : aavoaaamladg A വിക്കോരീഡ്‌ മാറ്റുന്ന ജാലകം
ണിച്ചിരിക്കുന്ന

തുപോലെ A റിക്കോര്‍ഡ്‌ ക്രമീകരിക്കാം. ഇതിന്‌ ശേഷം DNS, സെര്‍വറുകള്‍ക്ക്‌ നാം
നല്‍കിയ വെബ്സ്റ്്റ്‌ സൂക്ഷിച്ചിരിക്കുന്ന വെബ്സെര്‍വറിലേയ്ക്ക്‌ [NDA വഴി ബന്ധ
പ്പെടാനുള്ള IP മേല്‍വിലാസം ലഭ്യമാകും. അതു വഴി നമ്മുടെ വെബ്സെര്‍വറിലേയ്ക്ക്‌

വളരെ വേഗം ബന്ധപ്പെടാനാവും.

Domain 1D:D8944-AFIN
Domain Name:KERALA.GOWV._IN
Created On:31-Dec-2003 05:00:00 UTC

Last Updated On:16-Jul-2014 11:37:59 UTC

Expiration Date:31-Dec-2016 05:00:00 UTC

Sponsoring Registrar:National Informatics Centre (R12-A4FIN)
Status:OK

Registrant ID:R-R03120114034

Registrant Name:Government of Kerala

Registrant Organization:

Registrant Street1:Chief Minister's Office

Registrant Street2:

Registrant Street3:

Registrant City:Government Secretariate, Trivandrum, 69500
Registrant State/Province:Kerala

Registrant Postal Code:695001

Registrant Country:IN

ജന്ര്പീതിയാര്‍ജ്ജിച്ച വെബ്ഹോസ്റ്റുകളുടെയും അവയുടെ ഏറ്റവും കുറഞ്ഞ
അളവിലുള്ള ഹോസ്റ്റിംഗ്‌ സ്ഥലത്തിന്‌ ഒരു വര്‍ഷത്തേക്ക്‌ നല്‍കേണ്ട വില
കളും താരതമ്യം ചെയ്യുന്ന ടേബിള്‍ തയ്യാറാക്കുക. വിന്‍ഡോസിനും, ലിനക്സ്‌
വെബ്ഹോസ്റ്റിങിനും ഉള്ള വിലകള്‍ പ്രത്യേകമായി തയ്യാറാക്കുക.
പ്രശസ്തരായ വെബ്ഹോസ്റ്റ്‌ സേവനദാതാക്കളുടെ -org, .com ഡൊമൈന്‍
രജിസ്ട്രേഷനുകള്‍ക്ക്‌ ഒരു വര്‍ഷത്തെ വിലവിവരപ്പട്ടിക താരതമ്യം ചെയ്യുന്ന
ടേബിള്‍ തയ്യാറാക്കുക.

wwwscert.kerala.gov.in, www.dhsekerala.gov.in എന്നീ വെബ്സൈറ്റുകളുടെ
WHOIS വിവരങ്ങള്‍ www.whois.net ല്‍ തിരഞ്ഞശേഷം അവയുടെ ചാര്‍ട്ട്‌
തയ്യാറാക്കുക.

നമുക്കു ചെയ്യാം

നിങ്ങളുടെ പുരോഗതി അറിയാം
1. വെബ്ഹോസ്റ്റിങ്‌ സേവനം നല്‍കുന്ന കമ്പനികളെ
എന്നു പറയുന്നു.
2. വെബ്ഹോസ്റ്റിങ്‌ തരം നിശ്ചയിക്കുന്ന ഘടകങ്ങള്‍ തയ്യാറാക്കുക.

3. വി.പി.എസ്‌. എന്നത്‌
a. Virtual Premium ഡൈ ൧. Virtual Private Service

c. Virtual Premium Server e. Virtual Private Server
4. കോ-ലൊക്കേഷന്‍ എന്നാലെന്ത്‌?
5. WHOIS വിവരങ്ങള്‍ ഉള്‍ക്കൊളളുന്നതെന്തൊക്കെ?

6. ഒരു ഡൊമൈന്‍ നെയിമിന്‌ A റിക്കോര്‍ഡ്‌ പ്രാധാന്യമുളളതാകുന്ന
തെന്തുകൊണ്ട്‌?

7. വെബ്‌ ഹോസ്റ്റിംഗ്‌

7.14 എഫ്‌.റ്റി.പി. ക്ലയന്റ്‌ സോഫ്‌റ്റ്വെയര്‍ (FTP client software)

ഹോസ്റ്റിങിനായി സെര്‍വര്‍ സ്ഥലവും | St Marg

Select Entry:
ae Transfer Settings | Charset

ഡൊമൈന്‍ നാമവും വാങ്ങിയശേഷം
നമ്മുടെ കമ്പ്യൂട്ടറില്‍ സൂക്ഷിച്ചിരിക്കുന്ന റ fers
me saa i ക്കു a

AANIOOMY ഫയലുകളെ വെബ്സെര്‍
വറിലേയ്ക്ക്‌ പകര്‍ത്തേണ്ടതായുണ്ട്‌.
ഇതിനായി എഫ്‌.്റി.പി. ക്ലയന്റ്‌ സോ
ഫ്റ്റ്വെയര്‍ ഉപയോഗിക്കുന്നു.

FTP യെ കുറിച്ച്‌ കമ്പ്യൂട്ടര്‍ ശൃംഖലകള്‍
എന്ന അധ്യായത്തില്‍ 11-00 ക്ലാസില്‍
നാം ചര്‍ച്ച ചെയ്തു. ഇന്റെര്‍നെറ്റുമായി
ബന്ധിപ്പിച്ചിരിക്കുന്ന ഒരു കമ്പ്യൂട്ടറില്‍
നിന്ന്‌ മറ്റൊരു കമ്പ്യൂട്ടറിലേയ്ക്ക്‌ ഫയല്‍ $$$
നീക്കുന്നതിന്‌ FTP ഉപയോഗിക്കുന്നു. atmo 7.8: FTP സോഫ്റ്റ്‌ വെയറിമത്ററ്‌ cero Cole
FTP ക്ലയന്റ്‌ സോഫ്റ്റ്വെയര്‍ വിദൂര

സെര്‍വറുമായി ബന്ധപ്പെടുകയും അതിനുശേഷം കമ്പ്യൂട്ടറിലെ ഫയലുകള്‍ സെര്‍വര്‍
കമ്പ്യൂട്ടറിലേയ്ക്ക്‌ മാറ്റുകയും ചെയ്യുന്നു. FTP സെര്‍വറുമായി ബന്ധം ഉണ്ടാക്കുവാന്‍
FTP ച്ലയന്റ്‌ സോഫ്റ്റ്‌വെയറിന്‌ യൂസര്‍നെയിം, പാസ്വേര്‍ഡ്‌, ഡൊമൈന്‍ നാമം എന്നിവ

File Edit View Transfer Server Bookmarks Help New version available!

117 ev ewes een =

Respone (266 |GIF [TIFF [PNG max_idth max_height pathname ‘Quiskconnect
resent (പ്രി |
ി 257 "frimi"is current drectary. =
ന്നി: Pasy
_ 227 Entering Passve Mode (118,67,244,8,195,88)
ണ്ണന്‌: miso
2: 1180 Openng BINARY mode data connection for MLED.
ecponse: 226 Transfer complete. $1 bytes transferred. 0.06 KB/sec. GB
tats: Directory isting >
Local site: | C:\netpub wnroot\SMSs\SMS 7-11-14 lous Server ~ [Remote site: >
Tf) SMS7-11-14 Cloud Server A ip htt A
J Work J) images
be jb test bis
J Intel 1 adh beg ദ
ch.) Kpems Samples
ai- J) LotFolder ~ jh sms a
Filename Filesize Filetype Lest modified * | Filename Filesize Filetype നാലി
Empty directory leting

4 Ada tiles to queve

Open
Edit

Mm *

Selected 7 files. Total size: 915,113 bytes
Create directory

ServeriLocal file Direction Re Create directory and enter it
Refresh

Delete

A/F at Queue: empty ee

aloo 7.9: FTP ക്ലൈര്ള്‌ eavoatigaimoladg IDE

കമ്പ്യൂട്ടര്‍ സയന്‍സ്‌ - XII

ആവശ്യമാണ്‌. ചിത്രം 7.8 ല്‍ കാണിച്ചിരിക്കുന്നതുപോലെ സ്റ്റ്‌ മാനേജര്‍ ഡയലോഗ്‌
ബോക്സില്‍ ഇവ ലഭ്യമാക്കണം. സുരക്ഷിതമല്ലാത്ത ഒരു ലളിതമായ ടെക്സ്റ്റിന്റെ രൂപ
ത്തില്‍ ഈ യൂുസര്‍നാമവും പാസ്‌വേര്‍ഡും സെര്‍വറിലേയ്ക്ക്‌ FTP അയയ്ക്കും. എന്നാല്‍
ഇപ്പോള്‍ SSH FTP പ്രോട്ടോക്കോള്‍ ഈ വിവരങ്ങള്‍ മറ്റൊരു രൂപത്തിലാക്കി വിവര്‍ത്തനം
ചെയ്ത്‌ (ENCRYPT) വെബ്സെര്‍വറിലേയ്ക്ക്‌ FTP യുടെ സഹായത്തോടെ അയയ്ക്കുന്നു.
സെക്യൂര്‍ഷെല്‍ പ്രോട്ടോക്കോള്‍ (ട1)ഉപയോഗിച്ച്‌ സുരക്ഷിതമായ ഫയല്‍നീക്കത്തിന്‌
SFTP (SSH FTP) സഹായിക്കുകയും ചെയ്യും.

FTP ച്ലയന്റ്‌ സോഫ്റ്റ്‌ വെയറിന്റെ ആധികാരികത ഉറപ്പിച്ച്‌ കഴിഞ്ഞാല്‍ അതിന്റെ
1212:-ചിത്രം 7.9 -ലേതുപോലെ പ്രത്ൃക്ഷമാകും. ഈ ചിത്രത്തില്‍ ഇടതുവശത്ത്‌ പ്രദര്‍ശി
പ്പിച്ചിരിക്കുന്ന ഫോള്‍ഡര്‍ നമ്മുടെ കമ്പ്യൂട്ടറിലേതും വലതുവശത്തേത്‌ വെബ്സെര്‍വര്‍
കമ്പ്യൂട്ടറിലേതും ആകുന്നു. മെനു ഉപയോഗിച്ചോ (ഡ്രാഗ്‌ ചെയ്തോ ഇടതുവശത്തുള്ള
ഫയലിനെ വലതുവശത്തുള്ള ജാലകത്തിലേക്കാക്കി വെബ്സെര്‍വറിലേയ്ക്ക്‌ അപ്ലോഡ്‌
ചെയ്യാം. ഇങ്ങനെ നമ്മുടെ കമ്പ്യൂട്ടറിലെ ഫയലുകള്‍ വെബ്സെര്‍വറിലേക്ക്‌ പകര്‍ത്താം.
പ്രമുഖമായ ചില 1110 സോഫ്‌റ്റ്‌ വെയറുകളാണ്‌ ഫയല്‍സില്ല, ക്യൂട്ട്‌ FTP., സ്മാര്‍ട്ട്‌ FTP.
തുടങ്ങിയവ.

ചില വെബ്ഹോ ല്ല Manager

സ്റ്റിങ്‌ കമ്പനികള്‍ ദം ഭൂധംഭലം @New~ | ൫ = aove Remove | more chang
© ES plesk eda is
ഫയ EY HB ലക
7 v Cee ങ്ക Nodified
അപലോഡ ചെ സി ro
. E
യുന്നതിന്‌ അവരു SNH Saas
ടേതായ കണ്‍ Loe oll comes
= Bing ഇതളും
ട്രോള്‍ പാനലു ത Fl ഇ
കള്‍ സജ്ജീകരിച്ച © GH httpsdocs 11 തട library
© Blogs
if 1 Gres
x x ടം
ട്ടുണ്ട. ഇവ പുറത്ത്‌ ടെ
\ ന pA FTP FG heaters
തത്തി

ക്ലൈന്റ്‌ സോഫ്റ്റ്‌
വെയര്‍ വഴി ഫ
യല്‍ അപ്ലോഡ്‌
ചെയ്യുവാന്‍ അനു
വദിക്കുകയില്ല. ചിത്രം 7.10 ഇത്തരത്തിലുള്ള ഒരു കണ്‍ട്രോള്‍ പാനല്‍ പ്രദര്‍ശിപ്പിച്ചിരി
ക്കുന്നു.

ചിത്രം 7.10: ഹോഗസ്്റിംഗ്‌ സ്ഥാപനങ്ങശി ലഭ്യമാക്കുന്ന FTP കണമ്ുട്രാശി പന

7.2 സൌജന്യ ഹോസ്റ്റിങ്‌ (Free hosting)

വെബ്‌ ഹോസ്റ്റിങ്‌ സൌകര്യം സൌജന്യമായി നല്‍കുന്നതാണ്‌ സൌജന്യ ഹോസ്റ്റിംഗ്‌.
ഇവിടെ സേവന ദാതാവ്‌ ഈ വെബ്സൈറ്റില്‍ ചില പരസ്യങ്ങള്‍ നല്‍കി ഇതിന്റെ
ചെലവ്‌ കണ്ടെത്തുന്നു. സയജന്യവെബ്ഹോസ്റ്റിംഗ്‌ സൈറ്റുകള്‍ നമ്മുടെ വെബ്സൈ
റ്റിലെ ഫയലുകളെ സെര്‍വറില്‍ സൂക്ഷിക്കുന്നു. എന്നാലിതിന്‌ ചില നിയ്രന്ത്രണങ്ങളുണ്ട്‌.
ഫയലിന്റെ വലുപ്പം നിയ്രന്തണവിധേയമായിരിക്കും. (5 MBalao) ശബ്ദവും വീഡി
യോയും ചിലതില്‍ അനുവദനീയമല്ല. ചില വെബ്സൈറ്റുകള്‍ അതിന്റെ ഒരു ടെംപ്ലേറ്റ്‌

7. വെബ്‌ ഹോസ്റ്റിംഗ്‌

അടിസ്ഥാനമാക്കി വെബ്സൈറ്റ്‌ രൂപകല്‍പന ചെയ്യുവാന്‍ ALMA അനുവദിക്കുകയുള്ളൂ.
മറ്റ്‌ ഫയലുകള്‍ വെബ്സെര്‍വറില്‍ അപ്ലോഡ്‌ ചെയ്യുവാനും അനുവദിക്കില്ല. ചില
സൌജന്യ വെബ്ഹോസ്റ്റിങ്‌ കമ്പനികള്‍ ഡൊമൈന്‍ നെയിം രജിസ്ട്രേഷനും അനുവദി
ക്കുന്നു. ഈ വെബ്സൈറ്റുകള്‍ ഫയലുകളെ അപ്ലോഡ്‌ ചെയ്യുന്നതിനുളള കണ്‍ട്രോള്‍
പാനലുകള്‍ ചിത്രം 7.10 -ലേതുപോലെ നല്‍കുന്നു. ചില വെബ്സൈറ്റുകള്‍ മുന്‍ നിശ്ച
യിച്ച ഘടനയില്‍ മാത്രമേ വെബ്സ്റ്റ്റ്‌ നിര്‍മിക്കുവാന്‍ അനുവദിക്കുകയുള്ളൂ. സൌജന്യ
വെബ്ഹോസ്റ്റിംഗ്‌ സൌകര്യം അവരുടേതായ ഒരു സബ്‌ ഡൊമൈനോ അല്ലങ്കില്‍ ഒരു
ഡയറക്ടറി സര്‍വ്വീസോ ഉപയോഗിച്ചാണ്‌ നമ്മുടെ വെബ്സൈറ്റിനെ ലഭ്യമാക്കുവാന്‍
സഹായിക്കുന്നത്‌. ഒരേ ആശയങ്ങളുള്ളവരുമായി വിവരങ്ങള്‍ പങ്കിടാനും, ലാഭേച്ഛയി
ല്ലാത്ത പ്രസ്ഥാനങ്ങള്‍ക്കും അധിക ചെലവ്‌ വഹിക്കാനാകാത്തവര്‍ക്കും സൌജന്യ
വെബ്ഹോസ്റ്റിങ്‌ സഹായകരമാണ്‌. വളരെ ചെലവ്‌ കുറഞ്ഞ രീതിയില്‍ വെബ്ഹോ
സ്റ്റിങ്‌ സൌകര്യം നിലവില്‍ വന്നതോടുകൂടി സൌജന്യ വെബ്ഹോസ്റ്റിങ്‌ കുറഞ്ഞുവരു
ന്നു. sites.google.com, yola.com എന്നിവ സൌജന്യ വെബ്ഹോസ്റ്റിങ്‌ സര്‍വ്വീസുകളാണ്‌.
ഹയര്‍സെക്കന്ററി അധ്യാപകര്‍ക്കും വിദ്യാര്‍ഥികള്‍ക്കും ഏറെ പ്രയോജനകരമായ വിവര
ങ്ങള്‍ നല്‍കുന്ന hsslive.in എന്ന വെബ്സൈറ്റിന്‌ സൌജന്യ ഹോസ്റ്റിങ്‌ ആണ്‌ ഉപയോഗി
ച്ചിരിക്കുന്നത്‌. ചിത്രം 7.11 ല്‍ ഇവ പ്രദര്‍ശിപ്പിച്ചിരിക്കുന്നു.

hese blogspetin [2 ടയ roetab =

Kerala Higher Secondary School News.

Glreular സൈന്‍ Manual Software Forms Academic Font School Mela Exam Result Scholarship.

<p For news uedates Visit ané tke Our racebock Page Now 1 Click hee.

20 Computer Application Previous Questions
(2007-14)

Posted by HSSLivein at 12:48 0M (= © 0 comments

Chapter wise previous questions of Plus
‘Two Computer Application, prepared by w
Bejoy.k , HST, Myannad HSS

published.

Old exam papers are a great way to
revise and prepare 10 Higher
second:

find out what you already know and
what you don't know. They also help

SUBMIT YOUR ARTICLE NOW !

ചിത്രം 7.11: DBMS വെബ്മ്ഹോസ്റ്റിംഗ്‌

7.3 കണ്ടന്റ്‌ മാനേജമെന്റ്‌ സിസ്റ്റം (Content Management System)
വെബ്സ്്റുകള്‍ നിര്‍മ്മിക്കുന്നതിനും നിയ്യ്ത്രിക്കുന്നതിനും അവയിലേയ്ക്ക്‌ പുതിയ
വിവരങ്ങള്‍ ഉള്‍പ്പെടുത്തുന്നതിനും സാധ്യമായ ഒരു ഇന്റര്‍നെറ്റ്‌ അധിഷ്ഠിതമായ സോഫ്റ്റ്‌
വെയര്‍ സംവിധാനമാണ്‌ കണ്ടന്റ്‌ മാനേജ്മെന്റ്‌ സിസ്റ്റം. മിക്ക CMS കളും അവയുടെ
ഓദ്യോഗിക വെബ്സൈറ്റില്‍ നിന്ന്‌ സൌജന്യമായി ഡൌണ്‍ലോഡ്‌ ചെയ്യാം. ഈ ഫയ
ലൂകളെ നമ്മുടെ വെബ്സൈറ്റിലെ ഹോസ്റ്റിങ്‌ സ്ഥലത്തേക്ക്‌ കോപ്പി ചെയ്യാം. അതിനു
ശേഷം ചിത്രം 7.12 ലെപോലെ അതിനെ പ്രവര്‍ത്തനസജ്ജമാക്കുകയും ചെയ്യാം.

കമ്പ്യൂട്ടര്‍ സയന്‍സ്‌ - XII

‘You have post-nstallation messages
നിയ important pat instalation meager tht requre your ജില To view thase

please cick on the Review Masso

‘ousanreveuihe messages tenn len
appear when you have ണെ

ponents, Postinsalation messages menuitem of your site's administrator section. This
1 arise Manager

Be Category Manager

1 Wweoia Manager

STRUCTUR LOGGED IN USERS

sna Manager

Super User sammsuetcn

‘Mequle Manager

PoP

RARTICLES
കല user anager ആഡം Module
ത്രം
തട
രതം

൭

ചരം 7.12: ജുംല ഉപയോഗിച്ച്‌ വെബ്സൈറ്റ്‌ (പവരീതമന സ്വജ്ജമാക്കുന്നു

വെബ്സ്റ്റുകളില്‍ CMS കളായി
വേണ്ടി മുന്‍പ്‌ രൂപകല്പന ചെ
യ്ത്‌ വച്ചിട്ടുള്ള ചില ടൊം്പേറ്റുകള്‍
ലഭ്യമാകും. ചിത്രം 7.13-08 ഇവ
യുടെ ഉദാഹരണം നല്‍കിയിരി
ക്കുന്നു. ഉപയോക്താവിന്‌ ഈ
ടൊംപ്പേറ്റുകളില്‍ ഒന്ന്‌ തെരഞ്ഞെ
ടുത്ത്‌ നമ്മുടെ വെബ്സൈറ്റില്‍
അപ്ലോഡ്‌ ചെയ്യാം. അതിനു
ശേഷം അതിന്റെ ശീര്‍ഷകങ്ങളും
ചിത്രങ്ങളും മറ്റ്‌ വിവരങ്ങളും നമ്മുടെ ഇഷ്ട്രപകാരം മാറ്റുകയും ചെയ്യാം.

ബി നി . sites

പ [|

ചിതം 7.73: ജുംയ്മിര്‌ ലഭിക്കുന്ന ടൊപ്ലേറ്റുകശി

ഇത്‌ വേഡ്‌ പ്രോസസ്സററില്‍ ഒരു ഫയല്‍ നിര്‍മിക്കുന്ന്രത ലളിതമാണ്‌. ലീദ്ട-കളില്‍ അടി
സ്ഥാന നിയ്യരന്രണ സംവിധാനങ്ങള്‍ അതിന്റെ ഡിസൈന്‍ സമയത്ത്‌ ഉള്‍പ്പെടുത്തിയിട്ടു
ണ്ട്‌, ഇത്‌ സാങ്കേതിക അറിവ്‌ ഇല്ലാത്തവര്‍ക്ക്‌ പോലും ഒരു വെബ്സൈറ്റ്‌ നിര്‍മിക്കാന്‍
സഹായകമാകും. CMS -ലെ ,,....

ടംപ്പേറ്റുകള്‍ കോഡുകളുടെ “൦

ആവര്‍ത്തനം ഒഴിവാക്കുകയും

‘ കയു ച്ച ലര്‍ നി ളി
ശീര്‍ഷകം രൂപകല്പന ചെയ്യുന്ന
തിനും എല്ലാപേജിലും മെനു യാ.
ദൃശ്യ മാക്കുന്നതിനും ചില seweeonwe Lats Howe 5
പ്രത്യേക സംവിധാനങ്ങള്‍ ഒരു TNL യ ന്‌ ന്‌
ക്കിയിട്ടുണ്ട. ്രമുഖമായ ചില “nen cn aye ya a c
CMS വെബ്സൈറ്റുകളില്‍ ഇവ ൦-൦. ഡയ
യുടെ ടൊംപ്പേറ്റുകള്‍ സൌജന്യമാ Siow" പാ

Akshaya Login
യാളി

=

യോ മിതമായ തുകയ്ക്കോ ലഭ്യ

മാണ്‌. CMS-an നമ്മുടെ വെ
ബ്സ്ൈറ്റിന്‌ അനുയോജ്യമാം

ഛത്രം 7.14: ജുംലഘയില്‍ CMS ഉപയോഗിച്ച്‌ aieoavh flog
ഒരു DANICA 1
7. വെബ്‌ ഹോസ്റ്റിംഗ്‌

വിധം ക്രമപ്പെടുത്തി നല്‍കുന്ന വ്യക്തികളും സ്ഥാപനങ്ങളും ഇന്നുണ്ട്‌. ഒരു ഷെയേര്‍ഡ്‌
വെബ്സെര്‍വറിലാണ്‌ വെബ്സൈറ്റ്‌ ഹോസ്റ്റ്‌ ചെയ്യുന്നതെങ്കില്‍ അതില്‍ CMS anwen
കള്‍ ഉള്‍പ്പെടുത്താനാകുമോ എന്ന്‌ ശ്രദ്ധിക്കണം.

സാമ്പത്തികലാഭം ഉള്ളതുകൊണ്ട്‌ ധാരാളം സംഘടനകളും ബ്ലോഗറുകളും അവരുടെ
വെബ്സ്ൈറ്റിനായി സി.എം.എസ്‌. ഉപയോഗിക്കുന്നു. പ്രമുഖമായ ചില (1/5 സോഫ്റ്റു
വെയറുകളാണ്‌ വേഡ്പ്രസ്‌, ദ്രുപാല്‍, ജുംല എന്നിവ ചിത്രം 1.4-ല്‍ ജുംല ഉപയോഗിച്ച്‌
നിര്‍മ്മിച്ച മോട്ടോര്‍ വാഹന വകുപ്പിന്റെ വെബ്സൈറ്റ്‌ കാണാനാകും.

7.4 റെസ്പോണ്‍സീവ്‌ വെബ്രൂപകല്‍പന (Responsive webdesign)

ഇന്ന്‌ ഇന്റര്‍നെറ്റുമായി ബന്ധപ്പെടുവാന്‍ കമ്പ്യൂട്ടര്‍, ലാപ്ടോപ്പ്‌, ടാബ്ലെറ്റ്‌, മൊബൈല്‍
ഫോണ്‍ തുടങ്ങിയ ധാരാളം ഉപകരണങ്ങള്‍ ഉണ്ട്‌. പല ഉപകരണങ്ങള്‍ക്കും വൃത്യസ്ത
സ്ക്രീന്‍വലുപ്പമാണുളളത്‌. പണ്ട്‌ നിര്‍മിച്ചിട്ടുളള വെബ്പേജുകള്‍ ഡെസ്ക്‌ ടോപ്പിനും
ലാപ്ടോപ്പിനും അനുയോജ്യമാംവിധം ഉള്ളതാണ്‌. ഈ വെബ്സ്റ്റുകള്‍ ടാബ്ലെറ്റും,
മൊബൈല്‍ഫോണും വഴി കാണുവാന്‍ പ്രയാസമാണ്‌. അല്ലെങ്കില്‍ ഉപഭോക്താവ്‌ ഈ
വെബ്പേജിന്റെ ഓരോ ഭാഗവും കാണുവാന്‍ സ്‌ക്രോള്‍ബാര്‍ വശങ്ങളിലേയ്ക്ക്‌ നീക്കി
നോക്കണം. മുന്‍കാലത്ത്‌ മൊബൈല്‍വഴി വെബ്സൈറ്റ്‌ കാണുവാന്‍ പ്രത്യേക വെബ്‌
സ്റ്റുകള്‍ നിര്‍മിച്ചിരുന്നു. ഇവ മൊബൈലിന്റെ സ്ക്രീന്‍ വലുപ്പത്തിന്‌ അനുയോജ്യ
മാഠവിധമാണ്‌ നിര്‍മിച്ചിരുന്നത്‌. എന്നാല്‍ ഒരു സ്ഥാപനത്തിന്‌ രണ്ട്‌ വെബ്സ്റ്റുകള്‍
കൈകാര്യം ചെയ്യേണ്ടിവരുന്നത്‌ പ്രയാസമാണ്‌. അതുകൊണ്ട്‌ വെബ്പേജിന്റെ വലുപ്പം
സ്ക്രീനിന്റെ വലുപ്പത്തിന്‌ അനുസരിച്ച്‌ മാറുന്ന രീതിയില്‍ രൂപപ്പെടുത്തിയാല്‍ അത്‌
കൂടുതല്‍ പ്രയോജനകരമാകും. ഇത്തരത്തിലുളള വെബ്പേജ്‌ രൂപകല്‍പനയെ റെസ്‌
പോന്‍സീവ്‌ വെബ്രുൂപകല്‍പന എന്നു പറയും. വിവിധ ഉപകരണങ്ങളില്‍ ഒരു റെസ്‌
പോണ്‍സീവ്‌ വെബ്സൈറ്റ്‌ എങ്ങനെ ദൃശ്യമാകുമെന്ന്‌ ചിത്രം 7.15 ല്‍ കാണിച്ചിരിക്കുന്നു.

എല്ലാ ഉപകരണങ്ങളിലും പ്രവര്‍ത്തിക്കത്തക്ക വിധമാണ്‌ റെസ്പോണ്‍സീവ്‌ വെബ്ഡി
സൈനിംഗില്‍ വെബ്സൈറ്റ്‌ രൂപപ്പെടുത്തുന്നത്‌. അതുകൊണ്ടുതന്നെ സ്ക്രീന്‍ വലുപ്പമോ
ഉപകരണമേതെന്നോ ഇവിടെ പരിഗണിക്കപ്പെടുന്നില്ല. റെസ്പോണ്‍സീവ്‌ വെബ്ഡിസൈ
നിങ്‌ എന്ന ആശയം ഒരു സ്വത്ര്ത ഡിസൈനറായ ഈഥാന്‍ മര്‍ക്കോട്ടിന്റേതാണ്‌.
സ്ഥിരമായി മാറിക്കൊണ്ടിരിക്കുന്ന ഒരു വെബ്രൂപകല്‍പന രീതിയെപ്പറ്റി അദ്ദേഹം വിവ
രിക്കുന്നു. ഈ വെബ്രുൂപകല്‍പന രീതി ഫ്ളക്സിബിള്‍ ഗ്രിഡ്‌ ലോഈട്ടും ഫ്ളക്സി
MIG ഇമേജും മീഡിയകൊറിയും ഉപയോഗിച്ച്‌ പ്രാവര്‍ത്തികമാക്കിയിരിക്കുന്നു. ഫ്ളക്സി
ബിൾ ഗ്രിഡ്‌ ലേഓട്ട്‌ സൌകര്യം ഉപയോഗിച്ച്‌
ഉപകരണത്തിന്റെ (്രദര്‍ശനതലത്തിന്റെ
വലുപ്പം പരിഗണിച്ച്‌ വെബ്പേജിനെ അതിന്‌
അനുസൃതമായി സജ്ജീകരിക്കുകയും ചെയ്യും.
മീഡിയകൊറി ഓരോ ഉപകരണത്തിനും
അനുസരിച്ചുളള വൃത്യസ്ത ശൈലിയില്‍ ലഭ്യ,
മാക്കും. ഒരു വെബ്‌ പേജിലെ തിരശ്ചീന മെനു
മൊബൈലില്‍ ഡ്രോപ്ഡൌണ്‍ മെനു ആയി
പരിവര്‍ത്തനം ചെയ്യപ്പെടും. CSS ഫയ

ചിത്രം 7.5 - റെസ്‌ഖോണീസ്സിവ്‌ വെങ്മ്രുച

കമ്പ്യൂട്ടര്‍ സയന്‍സ്‌ - XII

ലിനുള്ളിലെ മീഡിയകൊറിയാണ്‌ ഇതിന്‌ സഹായിക്കുന്നത്‌. ഇവിടെ പ്രദര്‍ശനതലത്തിന്റെ
വലുപ്പം മാറുന്നതിന്‌ അനുസരിച്ച്‌ വെബ്സൈറ്റിന്റെ വലുപ്പവും ഭാവവും മാറിക്കൊണ്ടിരി
ക്കും.

ഇന്ത്യന്‍ ക്രിക്കറ്റ്‌ ടീം അംഗങ്ങളുടെ പേര്‍, വയസ്സ്‌, നേടിയ റണ്ണുക
ളുടെ എണ്ണം, എടുത്ത വിക്കറ്റുകളുടെ എണ്ണം എന്നിവ ഉള്‍ക്കൊള
BM ഒരു വെബ്സൈറ്റ്‌ രൂപകല്‍പന ചെയ്ത്‌ ഫ്രീ ഹോസ്റ്റിങ്‌ സേവ
a നങ്ങള്‍ ഉപയോഗിച്ച്‌ ഇതിനെ ഹോസ്റ്റ്‌ ചെയ്യുക.
ജനകീയമായ CMS ദാതാക്കളുടെ ഒരു ലിസ്റ്റ്‌ തയ്യാറാക്കുന്നതിനോ
ടൊപ്പം അവരുടെ സവിശേഷതകളും തയ്യാറാക്കുക.
നിങ്ങള്‍ തയാറാക്കിയ സ്‌കൂള്‍ വെബ്സൈറ്റുകളുടെ ഫയലുകള്‍
ഏതെങ്കിലും FTP സോഫ്റ്റ്വെയര്‍ ഉപയോഗിച്ച്‌ ലഭ്യമായ വെബ്‌
ഹോസ്റ്റിങ്‌ സ്ഥലത്ത്‌ അപ്ലോഡ്‌ ചെയ്യുക.

ക്ട നമുക്കു സംഗ്രഹിക്കാം

ഒരു വെബ്സ്റ്റ്റ്‌ നിര്‍മ്മിച്ചതിനുശേഷം അനുയോജ്യമായ ഒരു ഹോസ്റ്റിങ്‌ രീതി ഉപ
യോഗിച്ച്‌ ഇന്റര്‍നെറ്റില്‍ ലഭ്യമാക്കാം. ചെറിയ സ്ഥാപനങ്ങള്‍ തങ്ങളുടെ വെബ്സൈറ്റിന്‌
ഷെയേര്‍ഡ്‌ ഹോസ്റ്റിങ്‌ ഉപയോഗിക്കും. ഉയര്‍ന്ന ദ്രാഫിക്കുള്ളതും ഉയര്‍ന്ന സുരക്ഷ

നമുക്കു ചെയ്യാം

വേണ്ടതുമായ വെബ്സൈറ്റുകള്‍ക്ക്‌ വി.പി.എസ്‌. ഹോസ്റ്റിങ്‌ ഉപയോഗിക്കും. എന്നാല്‍
വലിയ സ്ഥാപനങ്ങളുടെ വെബ്സ്റ്റുകളില്‍ നിരന്തരം ഉയര്‍ന്ന (ര്രാഫിക്കുകള്‍ ഉണ്ടാ
കുന്നതുകൊണ്ട്‌ ഡെഡിക്കേറ്റഡ്‌ ഹോസ്റ്റിങ്‌ ഉപയോഗിക്കും. വെബ്ഹോസ്റ്റിങിന്‌ ആവ
ശ്യമായ സ്ഥലം വാങ്ങിയതിനുശേഷം FTP സോഫ്റ്റ്വെയര്‍ ഉപയോഗിച്ച്‌ നമ്മുടെ
വെബ്സ്റ്റ്‌ ഫയലുകളെ വെബ്സെര്‍വറിലേയ്ക്ക്‌ മാറ്റാം. അതിനുമുമ്പ്‌ ഡൊമൈന്‍
നാമം സേവന ദാതാവ്‌ വഴി രജിസ്റ്റര്‍ ചെയ്യണം. വെബ്സെര്‍വറിലെ നമ്മുടെ ഡൊമൈന്‍
സൂചിപ്പിക്കുവാന്‍ A റിക്കോര്‍ഡ്‌ സജ്ജമാക്കണം. സൌജന്യനിരക്കില്‍ വെബ്സൈറ്റിന്‌
ലഭ്യമാക്കുന്ന വെബ്സെര്‍വറുകള്‍ ലഭ്യമാണ്‌. കണ്ടന്റ്‌ മാനേജ്മെന്റ്‌ സംവിധാനം ചില
ഉപകരണങ്ങളും ചില അടിസ്ഥാന സുരക്ഷിത സൌകര്യങ്ങളും ഒരുക്കി സാങ്കേതികവി
ദൃയകളില്‍ അറിവ്‌ കുറഞ്ഞ ആളുകള്‍ക്കുപോലും വെബ്സൈറ്റുകള്‍ നിര്‍മ്മിക്കുവാനുള്ള
സാധ്യത നല്‍കുന്നു. വ്യത്യസ്ത ഉപകരണങ്ങള്‍ ഉപയോഗിച്ച്‌ ബ്രൌസ്‌ ചെയ്യുന്നതുകൊണ്ട്‌
സ്ക്രീനിന്റെ വലുപ്പമനുസരിച്ച്‌ വെബ്സൈറ്റുകള്‍ ലഭ്യമാക്കുക എന്നത്‌ പ്രാധാന്യത്തോടെ

കാണേണ്ടിയിരിക്കുന്നു. ഇതിനായി റസ്പോണ്‍സീവ്‌ വെബ്രൂപകല്‍പന ഉപയോഗിക്കു
ന്നു.

നമു വിലയിരുത്താം ന്തി

വെബ്ഹോസ്റ്റിങ്‌ എന്നതുകൊണ്ട്‌ എന്താണ്‌ അര്‍ഥമാക്കുന്നത്‌? പലതരത്തിലുള്ള
വെബ്ഹോസ്റ്റിംഗിനെ കുറിച്ച്‌ വിശദീകരിക്കുക.

2. നഗരത്തിലുള്ള ഒരു സൂപ്പര്‍മാര്‍ക്കറ്റ്‌ സ്ഥാപനം അവരുടെ വ്യാപാരം ഓണ്‍ ലൈന്‍
ആക്കുവാന്‍ ഉദ്ദേശിക്കുന്നു. വെബ്സൈറ്റ്‌ വഴി സാധനങ്ങള്‍ വില്‍ക്കാനും പണമിട
പാടുകള്‍ ഓണ്‍ലൈന്‍ വഴി നടത്തുവാനും അവര്‍ ആസൂധതണം ചെയ്യുന്നുവെങ്കില്‍

A. ഏത്‌ തരത്തിലുള്ള ഹോസ്റ്റിങ്‌ ആണ്‌ ഈ വെബ്പേജിന്‌ അനുയോജ്യമാകുക?
1. അത്‌ തിരഞ്ഞെടുക്കുവാനുള്ള കാരണവും വിശദമാക്കുക.

3. എമില്‍ സ്വന്തം മരുന്നു കടയുടെ വെബ്സെര്‍വറില്‍ വെബ്‌ ഹോസ്റ്റിംഗ്‌ സ്ഥലം
വാങ്ങുവാന്‍ ആഗ്രഹിക്കുന്നു. വെബ്സെര്‍വറില്‍ ഹോസ്റ്റിംഗിനായി സ്ഥലം വാങ്ങു
മ്പോള്‍ പരിഗണിക്കേണ്ട പ്രത്യേകതകള്‍ പട്ടികപ്പെടുത്തുക.

4. ഒരു ഡൊമൈന്‍ നാമവും വെബ്സര്‍വറില്‍ സംഭരിച്ചിട്ടുളള വെബ്സൈറ്റും തമ്മില്‍
എങ്ങനെയാണ്‌ പരസ്പരം ബന്ധിപ്പിക്കുന്നത്‌?
5. 1117 സോഫ്റ്റ്വെയറില്‍ SFTP (പ്രോട്ടോകോള്‍) ഉപയോഗിക്കുന്നത്‌ കൊണ്ടുള്ള

മേന്മയെന്താണ്‌?

6. സ്വന്തം കുടുംബത്തിനായി ഒരു വെബ്സൈറ്റ്‌ ഹോസ്റ്റ്‌ ചെയ്യുവാന്‍ രാജു ആഗ്രഹി
ക്കുന്നു. സൌജന്യ വെബ്സൈറ്റ്‌ ഹോസ്റ്റിംഗ്‌ കമ്പനികള്‍ നല്‍കുന്ന സംവിധാന
ങ്ങള്‍ എന്തൊക്കെയാണ്‌?

7. CMS എന്നാല്‍ എന്താണ്‌? CMS -ന്റെ പ്രത്യേകതകള്‍ എന്തൊക്കെ? ഉദാഹരണ
ങ്ങള്‍ നല്‍കുക.

൫. ഇന്നത്തെ കാലത്ത്‌ വെബ്സൈറ്റിന്റെ നിര്‍മ്മാണത്തില്‍ റെസ്പോണ്‍സീവ്‌ വെബ്‌
സ്റ്റ്‌ രൂപകല്‍പനയുടെ ആവശ്യകത വിശദീകരിക്കുക.

9. എങ്ങനെയാണ്‌ റെസ്പോണ്‍സീവ്‌ വെബ്പേജ്‌ രൂപകല്‍പന നടപ്പിലാക്കുന്നത്‌?

കമ്പ്യുട്ടര്‍ സയന്‍സ്‌ - XII

അംനങ്ങള്‍

അടിസ്ഥാന ക്ലാസ്‌
അടിസ്ഥാന ഡാറ്റ ഉനം
അടിസ്ഥാന വിലാസം
അടിസ്ഥാനപരമായ
അന്തര്‍നിര്‍മിത
അബ്‌സ്ട്രാക്ട്‌ ഡാറ്റകള്‍
അര്‍ദ്ധവിരാമം
അസ്ഥിര ദരാംര സംഖ
അറേ

ആധാരസംഖ്യ
ആധികാരികത
ആര്‍ധ്വയുമെന്‍റ്‌

Megs ഉദ്ധരണി
ഉപയോരിക്കുക
ഉപവാക്യ ടാര്‌
ഉള്‍കെടുത്തുക
ഒന്നിരിക്കുക

ഒബ്ജക്ട്‌

ഒബ്ജക്ട്‌ ഓറിയന്‍റഡ്‌
ഓകറ്റേര്‍ ഓവര്‍ലോഡിങ്‌
IP മേല്‍വിലാസം
കമ്പ്യൂട്ടിങ്‌ യന്ത്രം
കമ്പ്യൂട്ടിങ്‌ വിജ്ഞാനശാഖ
കമ്പ്യൂട്ടിങ്‌ സിദ്ധാന്തം
കുറവ്‌ 89416096
കുറുകെ വെട്ടിയ

ക്യു

ക്യു അങര്‍ഫ്‌ളോ

ക്യൂ ഓവര്‍ഫ്‌ളോ

ക്രമ ലിസ്റ്റ്‌
ക്രമകെടുത്തല്‍
ക്രമപ്രകാരമുള്ള വര്‍നീകരണം
ക്രമീകരിക്കുക

MICHOl® ചദാവ്ഥ്‌

elements

base class
fundamental data type
base address
fundamental

buitl-in

abstract data types
semicolon (:)
floating point number
array

base number
authentication
argument

double quotes (?)
access

phrase tag

inster

grouping

objetc

02൮6൦ oriented
operator overloading
IP addrsse
computing machine
computing discipline
theory of computing
decremetn operator()
strikethrough

queue

queue underflow
queue overflow
ordered list

sorting

hierarchial classification

set up

അ. 1അഅഅഅഅഅ്അ്ഞ്‌ അ

ഖണ്ഡം

ഘടന

ചലനാത്മക ചിത്രങ്ങള്‍
ചിഹ്നം

ചൂണ്ടുന്ന

R വില

ടൈക്‌ മോഡിഫയര്‍
ടോപ്‌ ഡണ്‍
ഡബിര്‍ eles’ ലിസ്റ്റ്‌
ഡാറ്റ അംഗങ്ങള്‍
ഡാറ്റ അബ്സ്ട്രാക്ഷന്‍
ഡാറ്റ ഉനം

ഡാറു സ്ദ്രക്ചര്‍
ഡൊമൈന്‍ നാലം
ഡൊമൈന്‍ നാമകരണ സമ്പ്രദായം
തനതുവില
തലക്കെട്ട്‌

തിരയല്‍
ത്രികോണമിതി
ദ്വിതീയ മെമ്മറി

നള്‍ പോയിന്‍റര്‍
നിര്‍മാണം//വികസനം
നിര്‍മിത ബുദ്ധി
നിര്‍വചനം

നീക്കം ചെയ്യല്‍
നീക്കി വയ്ക്കുക
amquay

നോഡ്‌

പകര്‍ത്തുക
പദപ്രയോഗം

പരിധി

പരിപാലനം
പരിവര്‍ത്തനാത്മകം
പ്ര്വാത്തലം
പുനരാരംഭിക്കാന്‍
പുനരുപയോനം

പുഷ്‌

module

template
animation
symbol

pointing

R value

type modifier
top down
double linked list
data elemetns
data abrstaction
data type

data strucutre
domain name
domain naming dysetm
default value
heading

search
trigonomtery
secondary memory
null pointer
develope
artificial intelligence
definition
deletion

allocate

nested

node

copy

expression
scope
maintainabiltiy
dynamic
background
resttar

reusabiltiy
push

കമ്പ്യുട്ടര്‍ സയന്‍സ്‌ - XII

പൊതു അവലോകനം
പൊരുത്തക്വടല്‍

പോപ്‌

പോയിന്‍റര്‍

പോസ്റ്റ്ഫിക്സ്‌

പ്രഖ്യാപനം

പ്രഖ്യാപന പ്രസ്താവന
പ്രദര്‍രികിക്കുകഷഷൃര്യമാക്കുക
പ്രവര്‍ത്തനം

പ്രവര്‍ത്തനം
പ്രവര്‍ത്തിഷിക്കല്‍,/നടകഷിലാക്കല്‍
പ്രശ്നങ്ങള്‍ നിര്‍ധാരണം ചെയ്യുക
പ്രസ്താവന

പ്രാഥമിക മെമ്മറി
പ്രാഥമികമായ ഡാറ്റാ സ്ത്ക്ച്ചര്‍
പ്രാദേശിക DNS

പ്രാരം വില നല്‍കല്‍
പ്രാവര്‍ത്തിക്ഷാക്കല്‍
പ്രീഫിക്സ്‌

പ്രോഗ്രാമിങ്‌ മാതൃക
ഫങ്ഷന്‍

ബാഹ്യ ഇനം മാറ്റല്‍
ബാഹ്യഫയല്‍

മെമറി വലുഷം
മെജറിസ്ഥാനം

രൂപകല്പന

ദൂപഘടന

രൂപഘടന നല്‍കല്‍
രൂപമാറ്റം വരുത്തുക
രൂപീകുത ക്ലാസ്‌

രൂപീകൃത ഡാറ്റ ഇനം
രൂപീകൃത ഡാറ്റ ഉനം
രേഖീയം

രേഖീയലല്ലാത്തത്‌

ലയിക്കുക

ലിഖിതം

വര്‍ദ്ധനവ്‌ ഓഷറ്റേര്‍

overview

alignment

pop

pointer

postfix

declaration
declaration statemetn
dipslay

activity

operation

execution
problemsolving
statement

primary memory
simple datarustcurte
local DNS
initialization
implementation
prefix

programming paradigm
function

explicity type conversion
external file
memory size
memory location
design

architecture
formatting

encrytp

derived class
derived data type
derived data type
linear

non liner

merging

document
incremetn operator

അ. 1അഅഅഅഅഅ്അ്ഞ്‌ അ

വഹനീയത

വാക്യ ഘടന

വിദൂര സെര്‍വര്‍

വില നല്‍കല്‍ പ്രസ്താവന
വിലാസ സുമ്രദായം
വൃത്താകൃത ക്യു

രകലം

ശീര്‍ഷകം

സന്ദേശ ജാലകം

M20

സമര്‍ഷണം

സമ്പര്‍ക്കമുഖം
സംയോചിതം/ഏകോപിതം
സംയോജിത,/ഏഎകോപിത ഡാറ്റ സ്ര്രക്ചര്‍
സവിശേഷ വസ്തുക്കള്‍
സാര്‍ഥക ചിഹ്നങ്ങള്‍
സിംനിര്‍ ഇന്‍ഹെറിറ്റന്‍സ്‌
സിംഗിള്‍ ലിങ്ക്ട്‌ ലിസ്റ്‌
സുരക്ഷിതം

സുരക്ഷിതത്വം
സൂക്ഷിക്കുക/സം രിക്കുക
സെര്‍വര്‍ നവീകരണം
സ്ക്രീന്‍ വലുഷം

സ്ര്രക്ച്ചര്‍

സ്ഥാനീയ സുംഖ്യാന സ്യപ്രദായം
സ്ഥാപിക്കുക

സ്ഥിര ഡാറ്റ സ്6്രക്ച്ചര്‍
സ്ഥിരവില

സ്വയം സൂചിത

portabiltiy

syntax

remote server
assignment statement
Addressing scheme
circular queue
segment

caption

message window
integrtiy

submission

interface

grouped

compound data structure
entitise

reserved character
single inheritance
singly linked list
secure

saftey

sorte

server update

screen size

structure

positional value number system
load

static data strucurte
constant

self referential

210926000/0} 219 (References) ൽ

m Stroustrup, B. (2013). The C++ Programming Language. New Delhi: Addison-
Wesley Professional

m Lafore, R. (2009). Object-Oriented Programming in C++. Chennai : Sams
Publishing

m  Balagurusamy, E. (2008). Object Oriented Programming with C++. New Delhi:
Tata McGraw-Hill Education

m Sharma, A. K. (2011). Data structure using C. New Delhi: Pearson Education
India

m Srivastava, S. K. & Srivastava, D. (2011). Data Stractures Through C in Depth.
New Delhi: BPB Publications

m Powel, 1. A. (2010). The Complete Reference: HTML ¢ XHTML. New Delhi:
OSborne/‘Tata MC Graw-Hill

m Lloyd, I. (2008). The Udimate HTML Reference. Melbourne : Sitepomt
m  Holzner, ൭. (2000). HTML Black Book. New Delhi: DreamTech Press

m Frain, B. (2012). Responsive Web Design with HTMLS and CSS3. Mumbai :
Packt Publishing

m Powel, 1. A. & Schenider, F. (2008). The Complete Reference JavaScript. New
Delhi: Tata McGraw-Hill

m Zakas, N. C. (2012). Professional JavaScript for Web Developers. Birmingham :
Wrox

ഹയര്‍ സെക്കന്ററി കോഴ്‌സ്‌

രര

പൊതുവിദ്യാദ്യാസ വകുല്‌

സംസ്ഥാന വിദ്യാദ്യാസ ഗവേഷണ പരിശീലന സമിതി (ട്വ); കേരളം
2019

ദേശീയഗാനം

ജനഗണമന അധിനായക ജയഹേ

ഭാരത ഭാഗ്യവിധാതാ,
പഞ്ചാബസിന്ധു ഗുജറാത്ത മറാഠാ
ശ്രാവിഡ ഉത്ക്കല ബംഗാ,
വിന്ധ്യഹിമാചല യമുനാഗംഗാ,
ഉച്ഛല ജലധിതരംഗാ,
തവശുഭനാമേ ജാഗേ,
തവശുഭ ആശിഷ മാഗേ,
ഗാഹേ തവ ജയ ഗാഥാ
ജനഗണമംഗലദായക ജയഹേ
ഭാരത ഭാഗ്യവിധാതാ
ജയഹേ, ജയഹേ, ജയഹേ,
ജയ ജയ ജയ ജയഹേ!

പ്രതിജ്ഞ
ഇന്ത്യ എന്റെ രാജ്യമാണ്‌. എല്ലാ ഇന്ത്യക്കാരും എന്റെ
സഹോദരീ സഹോദരന്മാരാണ്‌.
ഞാന്‍ എന്റെ രാജ്യത്തെ സ്‌നേഹിക്കുന്നു;
സമ്പൂര്‍ണവും വൈവിധ്യ പൂര്‍ണവുമായ അതിന്റെ
പാരമ്പര്യത്തില്‍ ഞാന്‍ അഭിമാനം കൊള്ളുന്നു.
ഞാന്‍ എന്റെ മാതാപിതാക്കളെയും ഗുരുക്കന്മാരെയും
മുതിര്‍ന്നവരെയും ബഹുമാനിക്കും.

ഞാന്‍ എന്റെ രാജ്യത്തിന്റെയും എന്റെ നാട്ടുകാരു
ടെയും ക്ഷേമത്തിനും ഐശ്വര്യത്തിനും വേണ്ടി
പ്രയത്നിക്കും.

CGO Asoo

ഏതു വിജ്ഞാനവറും മാതൃഭാഘയില്‍ പഠിക്കാനും പ്രകാശനം ചെയ്യാനുദും സാധി

ക്കും. അതിനുള്ള അവസരം ചഠിതാക്കള്‍ക്ക്‌ ഒരുക്കേണ്ടത്‌; ഏതൊരു ചഠന സന്പ്ര
ദധായത്തിന്റെയുും അധിവാര്ൃയതയാണ്‌. അതിന്റെ തുടക്കമെന്ന നിലയ്ക്കാണ്‌
ഹയര്‍സെക്കന്ററി തലത്തില്‍ ഭാഘേതര വിഘയങ്ങളിലെ പാഠപുസ്തകങ്ങള്‍ മലയാള
ത്തില്‍ പ്രസിദ്ധീകരിക്കടുന്നത്‌.

കാതൃഭാഘയിലദുടെയുള്ള വിദ്യാഭ്യാസം, ജ്ഞാനസമ്പാദനത്തിനുമുള്ള സുഗമമ്ഥാര്‍ഗം
എന്നതി ഗോടഭൊഷം സാംസ്‌കാരികത്തനിദയറുടെ തിരിച്ചറിയല്‍ 3S] moan’. അതു
കൊണ്ടാണ്‌ വികസിതര്ാാജ്യങ്ങള്‍ മാതൃഭാഘയെ മുഖ്യഭബാധന മാധ്യമമായി സ്വിക
രിച്ചിരിക്കടുന്നത്‌. ഇന്ത്യയിലാകട്ടെ, ഭദശിയതലത്തിലദറുള്ള പ്രധാന പരീക്ഷകളെല്ലാം
പ്രാദേശിക ഭാഘകളില്‍ക്കുമുടി നടത്തുന്നതിനുള്ള സംവിധാനവും ഉണ്ടായി വരിക
യാണ്‌. ഈയൊരു സാഹചര്യത്തില്‍ നമ്മുടെ കൂൂട്ടികളും മാത്ൃഭാഘയദുടെ ശക്തി.
സയന്ദര്യങ്ങള്‍ തിരിച്ചറിഞ്ഞ്‌ വിവിധ വിഘയങ്ങളില്‍ ജ്ഞാധനിര്‍മിതിയില്‍ ഏര്‍കവെടേ
ണ്ടതുണ്ട്‌. അതിന്‌ അവരെ സജ്ജരാക്കറുകയാണ്‌ ഈ പഠഠചറുസ്തകങ്ങളുടെ മുഖ്യ ലകഷ്യ.
പ്രിഭാഘകെടുത്തിയ ചറുസ്മകങ്ങളില്‍ അതത്‌ വിഘയങ്ങളിലെ സാങ്കേതിക പദങ്ങള്‍
പരമാവധി മലയാളത്തിലാക്കിയിട്ടുണ്ട്‌. നമ്മുടെ ഭാഘയില്‍ ചിരപരിചിതമായ ഇംഗ്ലിഷ്‌”
പ്രങ്ങളെ അതേപടി സ്വികരിച്ചിട്ടുമുണ്ട്‌. വിവര്‍ത്തധത്തിന്‌ തീര്‍ത്തും വഴങ്ങാത്ത പദ
ങ്ങളെ അതേരീതിയില്‍ തന്നെ ഉപയാഗിച്ചിരിക്കടുന്നറു. ഫാതൃഭാഘയില്‍ ചഠിക്കറുന്ന
വര്‍ക്ക്‌ ആശയസഗ്രഹണം സുഗമമാക്കുന്ന വിധത്തിലാണ്‌ പഠഠചറുസ്തകരചന നടത്തി
യിരിക്കുന്നത്‌. അതോടൊഷം മലയാളഭാഷയറുടെ വളര്‍ച്ചയ്ക്കും ഈ പ്രവര്‍ത്തനം
സഹായകമാകുമെന്ന്‌ കരുതുന്നു.

ചാഠാഠചറുസ്തകവിവര്‍ത്തന രംഗത്ത്‌” നമ്മുടെ രാജ്യത്ത്‌ നടന്ന വലിയൊരു കാല്‍വെ
MOM’ ഇത്‌. പ്രഥമ സംരംഭമെന്നനിലയില്‍ ചല ചരിമിതികളും പരിഭാഷയില്‍
വന്നിട്ടുണ്ടാകാം. ക്ലാസ്മുറിയില്‍ പ്രയോഗത്തില്‍ വരറുഭമ്പാഴാണ്‌ അവയെല്ലാം കൂടു
തല്‍ ബോധ്യകെടുക. MASSA വരുന്ന ഘട്ടങ്ങളില്‍ അവയൊക്കെ ചരിഹരിക്കുന്നതി
നന്‌ എല്ലാ അഭ്യുദയകാംക്ഷികളില്‍ നിന്നും വിശിഷ്യ അധ്യാപകര്‍, വിദ്യാര്‍ത്ഥികള്‍
എന്നിവരില്‍ നിന്നും അഭിപ്രായങ്ങളും നിര്‍ദേശങ്ങളും പ്രതികജഷിക്കുറുന്നദു.

ഡോ.ജെ. പ്രസാദ്‌

ഡയറക്ടര്‍,

എസ്‌.സിഇ.ആര്‍.ടി. കേരളം

പാഠപുസ്തക നിര്‍മാണ സമിതി

ശ്രീ. ജോയ്‌ ജോണ്‍
എച്ച്‌.എസ്‌.എസ്‌.ടി,,
സെന്റ്‌ ജോസഫ്‌ എച്ച്‌.എസ്‌.എസ്‌. തിരുവനന്തപുരം
ശ്രീ. വിനോദ്‌ വി.
എച്ച്‌.എസ്‌.എസ്‌ .ടി.,, എന്‍.എസ്‌.എസ്‌
എച്ച്‌.എസ്‌.എസ്‌.,പ്രാകുളം, കൊല്ലം.

ശ്രീ. എ. എസ്‌. ഇസ്മൈല്‍
എച്ച്‌.എസ്‌.എസ്‌.ടി., പി.ജെ.എം.എസ്‌
ജി.എച്ച്‌.എസ്‌.എസ്‌, കണ്ടദ്മാന്‍കടവ്‌, രുദ്ലൂര്‍
ശ്രീ. പ്രശാന്ത്‌ പി.എം
എച്ച്‌.എസ്‌.എസ്‌.ടി.,
സെന്റ്‌ ജോസഫ്‌ ബോയ്സ്‌ എച്ച്‌.എസ്‌.എസ്‌.
കോഴിക്കോട്‌

ശ്രീ. മുസ്ഫ ഷംസുല്‍ ഹക്ക്‌ കെ.കെ.
എച്ച്‌.എസ്ററ്‌.എസ്ററ്‌.ടി,

ജി.എച്ച്‌.എസ്‌.എസ്‌. കുത്തുപറമ്പ്‌, കണ്ണുര്‍
ശ്രീ. രാജ്മോഹന്‍ സി.

aah. of yon yd,

നവമുകുന്ദ എച്ച്‌.എസ്‌.എസ്‌.,
തിരുനാവായ, മലഷുറം

ശ്രീ. നെജീവ്‌ പി. പി.

എച്ച്‌.എസ്‌.എസ്‌.ടി,

ഹിമായത്തുല്‍ ഉസ്സാം എച്ച്‌.എസ്‌.എസ്‌.
കോഴിക്കോട്‌

ശ്രീ. അബൂബക്കര്‍ പി.
എച്ച്‌.എസ്‌.എസ്‌.ടി., OA. ജി.എസ്‌.എസ്‌.ടി.,
ചാലഷുറം, കോഴിക്കോട്‌

ഡോ. ലജീഷ്‌ വി.എല്‍
അസ്സി. പ്രൊഫ. ഡിഷാര്‍ട്ട്മെന്റ്‌ ഓഫ്‌
കമ്പ്യൂട്ടര്‍ സയന്‍സ്‌ , കോഴിക്കോട്‌ സര്‍വകലാരാല

മധു വി.ടി.

ഡയറക്ടര്‍, കമ്പ്യുട്ടര്‍ സെന്റര്‍, സര്‍വകലാശാല
കോഴിക്കോട്‌.

ഡോ. സുഷീല്‍ കുമാര്‍

അസ്സി. പ്രൊഫ. ഡിഷാര്‍ട്ട്മെന്റ്‌ ഓഫ്‌ ഉംഗ്ലീഷ്‌,
ഡി.ബി.കോളജ്‌, രാസ്താംകോട്ട

ഡോ. വിനയകുമാരന്‍ നായര്‍ എന്‍.

അസ്സി. കമാന്‍ഡന്റ്‌, ഹൈ - ടെക്‌ സെല്‍,
പോലീസ്‌ ഹെഡ്‌ ക്വാര്‍ട്ടേര്‍സ്‌, തിരുവനന്തപുരം

ആര്‍ട്ടിസ്റ്റ്‌

സുധിര്‍ വൈ

ഡോ. മധു Mg നായര്‍

അസ്സി. പ്രൊഫ. ഡിഷാര്‍ട്ട്മെന്റ്‌ ഓഫ്‌

കമ്പ്യുട്ടര്‍ സയന്‍സ്‌ , കേരള സര്‍വകലാശാല
ഡോ. ബിനു. പി.ചാക്കോ

അസ്സി. പ്രൊഫ. ഡിഷാര്‍ട്ട്മെന്റ്‌ ഓഫ്‌

കമ്പ്യൂട്ടര്‍ സയന്‍സ്‌ , പ്രജ്യോതി നികേതന്‍ കോളജ്‌,
പുതുക്കാട്‌, തൃദ്ശൂര്‍

ഡോ. ദീപ എല്‍. സി.

അസ്സി. പ്രൊഫ. ഡിഷാര്‍ട്ട്മെന്റ്‌ ഓഫ്‌ ഉംഗ്ലീഷ്‌,
൭൮൨. വിലന്‍സ്‌ കോളജ്‌, തിരുവനന്തപുരം

ഡോ. കബീര്‍. വി

അസ്സി. പ്രൊഫ. & ഹെഡ്‌, ഡിഷാര്‍ട്ട്മെന്റ്‌ ഓഫ്‌
കമ്പ്യുട്ടര്‍ സയന്‍സ്‌, ഫറുക്ക്‌ കോളേജ്‌, കോഴിക്കോട്‌

വിനിത്‌ വി

അക്കാദമിക്‌ കോര്‍ഡിനേറ്റര്‍

ഡോ. മീന എസ്‌.
അസ്സി. പ്രൊഫ... എസ്‌.സി.ഇ.ആര്‍.ടി

പാഠപുസ്തക പരിഭാഷ സമിതി
(മലയാളം)

ഡോ. ബിനു പി ചാക്കോ
അസോസിയേറ്റ്‌ പ്രൊഫസര്‍, ഡിഷാര്‍ട്ട്മെന്റ്‌ ഓഫ്‌ കമ്പ്യുട്ടര്‍ സയന്‍സ്‌
പ്രജോതി നികേതന്‍ കോളേജ്‌, പുതുക്കാട്‌
ഡോ. ദ്ലാഡ്സ്റൂണ്‍ എസ്‌. രാജ്‌
അസിസ്ത്റന്റ്‌ പ്രൊഫസര്‍ & ഹെഡ്‌ ഡിഷാര്‍ട്ട്മെന്റ്‌ ഓഫ്‌ കമ്പ്യുട്ടര്‍ സയന്‍സ്‌
Onl. കോളേജ്‌, നെടുമങ്ങാട്‌

ശ്രീ. എ. എസ്‌. ഇസ്മൈല്‍ ശ്രീ. സായ്‌ പ്രകാശ്‌

എച്ച്‌.എസ്‌.എസ്‌ .ടി., ജി.എച്ച്‌.എസ്ററ്‌ എസ്സ്‌, എച്ച്‌.എസ്‌.എസ്‌.ടി,

മുല്ലശ്ദേരി, തുദ്ദൂര്‍ സെന്റ്മേരീസ്‌ എച്ച്‌.എസ്‌.എസ്‌. വെട്ടുകാട്‌
രീ. ഹരികെ ശ്രീ. സുധീര്‍ പി.എസ്‌.

എച്ച്‌ എസ്‌.എസ്‌ .ടി, ൭൨. വി. എച്ച്‌.എസ്‌.എസ്‌. എച്ച്‌.എസ്‌.എസ്‌.ടി,, കാട്ടുകുളം,

കദഷുറം, ചാവക്കാട്‌, തുരൂര്‍ ഹയര്‍ സെക്കണ്ടറി

രീ. ശ്രീജിത്ത്‌ പി ശ്രീ. ഷിജു ആര്‍.

എച്ച്‌ എസ്‌.എസ്‌ ടി, സി.ജെ. എച്ച്‌.എസ്‌ എസ്‌, എച്ച്‌.എസ്‌.എസ്‌.ടി.,

ചെമനാട്‌, കാസര്‍കോട്‌ ജി.എച്ച്‌.എസ്‌.എസ്‌. വടകര, പുത്തൂര്‍

അക്കാദമിക്‌ കോര്‍ഡിനേറ്റര്‍

ശ്രീമതി റിയാന അന്‍സാരി
റിസര്‍ച്ച്‌ ഓഫിസര്‍, എസ്‌.സി.ഇ.ആര്‍.ടി

2 & S&8lo ൽ

8. ഡാറ്റാബേസ്‌ നിര്‍വഹണ സംവിധാനം 281
9. സ്്‌ദ്രക്ചേര്‍ഡ്ക്വറി ലാംഗ്വേജ്‌ (SQL) 309
10. PHP ഉപയോഗിച്ചുള്ള സെര്‍വര്‍ സൈഡ്‌ സ്ക്രിപ്റ്റിംഗ്‌ 360
11. കമ്പൂട്ടിങ്ങിലെ മുന്നേറ്റങ്ങള്‍ 408
12. വിവര ആശയവിനിമയ സാങ്കേതികവിദ്യയും സമൂഹവും 437

ച പം;
Z6A3F8
പാഠപുസ്തകത്തില്‍ ഉപയോഗിച്ചിരിക്കുന്ന സൂചനകള്‍

നമുക്ക്‌ ചെയ്യാം

നിങ്ങളുടെ പുരോഗതി അറിയുക

ഇന്‍ഫര്‍മേഷന്‍ ബോക്സ്‌

നമുക്ക്‌ പരിശീലിക്കാം

നമുക്ക്‌ സംഗ്രഹിക്കാം

D2 അധ്യാമത്തിമ്നി പഠനം പുര്‍്ത്തിയാകുനതോടെ

പഠിതാവ്‌ OB E#IELOER പഠ൪മേട്ട്ങശ്‌

ഫയലുകളുടെ ആവര്യം മനസ്സിലാക്കുന്നു.

പരമ്പരാരത ഫയല്‍ നിര്‍വഹണ സംവിധാന
ത്തിന്റെ പ്രധാന പരിമിതികള്‍ തിരിച്ചറിയുന്നു.

ഡാറ്റാബേസ്‌ നിര്‍വഹണ സംവിധാനത്തിന്റെ
(DBMS) വിവിധ ഗുണങ്ങള്‍ വിരദീകരിക്കാന
റിയുന്നു.

DBMS ന്റെ വിവിധ ഘടകങ്ങളും അവയുടെ
ഉദ്ദേഭ്യവും വിശദീകരിക്കുന്നു.

DBMS ലെ വിവിധതരം ഉപയോക്താക്കളെയും
അവരുടെ കടമകളും തിരിച്ചറിയുന്നു.

DBMS ലെ ഡാറ്റ സംരഹത്തിന്റെയും
(Abstraction) ഡാറ്റ സ്വാത്ര്്യത്തിന്റെയും (In-
dependence) വിവിധ തലങ്ങള്‍ വിര
ദീകരിക്കുന്നു.

ഉദാഹരണങ്ങള്‍ ഉധ്ധരിച്ചുകൊണ്ട്‌ റിലേഷണല്‍
ഡാറ്റ മോഡല്‍ വിശദീകരിക്കുന്നു.

RDBMS ലെ വൃത്യസ്ത പദങ്ങള്‍ അനുയോജ്യ
മായി ഉപയോശിക്കുന്നു.

റിലേഷണല്‍ ബീജഥണിതത്തിലെ വിവിധ
പ്രവര്‍ത്തനങ്ങള്‍ പ്രയോഗിക്കുകയും വിലയി
രുത്തുകയും ചെയ്യുന്നു.

ഡാറ്റാബേസ്‌
നിര്‍വഹണ സംവിധാനം

ഇത്‌ അറിവിന്റെയും വിവര സാങ്കേതിക വിദ്യയു
ടെയും കാലമാണ്‌. മത്സരയോട്ടങ്ങളുടെ ഈ
ലോകത്തില്‍ സ്ഥാപനങ്ങളുടെ നിലനില്‍പ്പ്‌
ഉയര്‍ന്ന കൃതൃതയോടും വേഗതയോടും
ആവശ്യമുള്ള വിവരങ്ങള്‍ ലഭിക്കുന്നതിനെ
ആശ്രയിച്ചിരിക്കും. വിവരങ്ങള്‍ ലഭ്യമാകുന്നത്‌
ഡാറ്റ സംസ്ക്കരണത്തിലൂടെയാണെന്ന്‌ നമുക്ക്‌
അറിയാം. വിവരങ്ങള്‍ രൂപപ്പെടുത്തുന്ന
തിനായി വളരെ അധികം ഡാറ്റ സ്വീകരിക്കുക
യും സംഭരിക്കുകയും പ്രക്രിയകള്‍ നടത്തുകയും
ചെയ്യുന്നു.

ബാങ്കുകള്‍, ബിസിനസ്സ്‌ സ്ഥാപനങ്ങള്‍, സ്‌കൂ
ളുകള്‍ മുതലായവയ്ക്ക്‌ വിവരങ്ങള്‍ ആവശ്യ
മാണെന്ന്‌ നിങ്ങള്‍ക്ക്‌ അറിയാമല്ലോ. പര
മ്പരാഗതമായി ഈ സ്ഥാപനങ്ങള്‍ വളരെയധി
കം ഡാറ്റ കൈകാര്യം ചെയ്തത്‌ എങ്ങനെയാ
ണെന്ന്‌ നിങ്ങള്‍ക്ക്‌ ഈഹിക്കാനാകുമോ? മുന്‍
കാലങ്ങളില്‍ ബുക്ക്‌ കീപ്പിംഗ്‌ മാതൃകയില്‍,
അതായത്‌ വിവരങ്ങള്‍ പുസ്‌തകങ്ങളില്‍
കരകൃതമായി (manual processing) എഴുതി
കൈകാര്യം ചെയ്യുന്ന രീതി അവലംബി
ച്ചിരുന്നു. ഈ രീതിയില്‍ എഴുതിയ പുസ്തക
ങ്ങള്‍ സൂക്ഷിക്കുന്നതിന്‌ ധാരാളം സ്ഥലം ആവ
ശ്യമാണെന്നും ഡാറ്റ സംസ്കരണം വളരെ
പ്രയാസകരമാണെന്നതും വൃക്തമാണ്‌. കമ്പ്യൂട്ട
റുകളുടെ ആവിര്‍ഭാവത്തോടെ ഡാറ്റ ഫലപ്രദ
മായി സംഭരിക്കുവാന്‍ സാധിക്കുന്നു, എന്നാല്‍
പകര്‍പ്പ്‌, പൊരുത്തക്കേട്‌, അസാധാരണത്വം
മുതലായവയ്ക്കുള്ള സാധ്യത നിലനില്‍ക്കുന്നു.
ഈ പരിമിതികള്‍ മറികടക്കാനുള്ള ഫലപ്രദ
കമ്പ്യുട്ടര്‍ സയന്‍സ്‌ - XII

മായ റെക്കോര്‍ഡ്‌ കീപ്പിങ്‌ സംവിധാനമെന്ന നിലയില്‍ “ഡാറ്റാബേസ്‌ മാനേജ്‌മെന്റ്‌ സിസ്റ്റം"
(DBMS) എന്ന ആശയം ഈ അധ്യായത്തില്‍ അവതരിപ്പിച്ചിരിക്കുന്നു. ഡാറ്റാബേസില്‍
നിന്ന്‌ ആവശ്യമുള്ളതും പ്രസക്തവുമായ വിവരങ്ങള്‍ വീണ്ടെടുക്കാനുള്ള വിവിധ
പ്രവര്‍ത്തനങ്ങള്‍ ചര്‍ച്ച ചെയ്യുന്നുമുണ്ട്‌.

8.1 ഡാറ്റാബേസ്‌ എന്ന ആശയം (Concept of database)

ഹയര്‍ സെക്കന്‍ഡറി വകുപ്പിന്റെ സ്കൂള്‍ പ്രവേശന ഏകജാലക സംവിധാനം പരിഗണി
ക്കുക. പതിനൊന്നാം ക്ലാസ്സ്‌ (പ്രവേശനത്തിനായി ഓരോ വര്‍ഷവും വിദ്യാര്‍ഥികള്‍,
കോഴ്‌സുകള്‍, സ്‌കൂളുകള്‍, ഗ്രേഡുകള്‍ എന്നീ ഡാറ്റയുടെ ഒരു വലിയ ശേഖരം (ഏകദേശം
5,00,000 അപേക്ഷകള്‍ അല്ലെങ്കില്‍ 19 GB ഡാറ്റ) പരിപാലിക്കുന്നു. ഈ ഡാറ്റ നിരവധി
വിദ്യാലയങ്ങളും വിദ്യാര്‍ഥികളും ഒരേ സമയം ഉപയോഗിക്കുന്നു. വിദ്യാര്‍ഥികളുടെയും
സ്‌കുളുകളുടെയും അലോട്ട്മെന്റിനെക്കുറിച്ചുള്ള ചോദ്യങ്ങള്‍ക്ക്‌ വേഗത്തില്‍ ഉത്തരം
നല്‍കണം. വൃതൃസ്ത സ്‌കൂളുകളുടെ ഡാറ്റയില്‍ വരുത്തുന്ന മാറ്റങ്ങള്‍ സ്ഥിരമായി ഉപ
യോഗിക്കണം. കൂടാതെ ഡാറ്റയുടെ ചില ഭാഗങ്ങള്‍ (ഉദാ. ഗ്രേഡുകള്‍ അല്ലെങ്കില്‍ WGPA)
ഉപയോഗിക്കുന്നത്‌ നിയ്ന്ത്രിക്കേണ്ടതുമുണ്ട്‌. പരമ്പരാഗത ഫയല്‍ നിര്‍വഹണ സംവിധാന
ത്തില്‍ ഡാറ്റ സൂക്ഷിച്ചുകൊണ്ട്‌ നമുക്ക്‌ അതിനെ നിയ്യ്ത്രിക്കാനാവും. എന്നാല്‍ ഈ
രീതിക്ക്‌ പല ന്യൂനതകളുണ്ട്‌.

€ വ്യത്യസ്ത ആപ്ലിക്കേഷനുകള്‍ക്കായി ഒരേ ഡാറ്റയുടെ കൂടുതല്‍ പകര്‍പ്പുകള്‍ സൂ
ക്ഷിക്കേണ്ടതുണ്ട്‌. ഇത്തരം സംഭരണം ഡാറ്റ ആവര്‍ത്തിക്കപ്പെടുന്നതിന്‌ ഇടയാക്കുന്നു.

© വൃത്ൃസ്ത ഉപയോക്താക്കള്‍ ഒരേ സമയം ഉണ്ടാക്കുന്ന മാറ്റങ്ങളില്‍ നിന്ന്‌ ഡാറ്റയെ
പരിരക്ഷിക്കുന്നതിനുള്ള ഒരു സംവിധാനവും ഇല്ല.

© മാറ്റങ്ങള്‍ വരുത്തുമ്പോള്‍ സിസ്റ്റം തകരാറിലായാല്‍ സ്ഥിരമായ ഒരു അവസ്ഥയിലേക്ക്‌
ഡാറ്റ പുനസ്ഥാപിക്കുമെന്ന്‌ ഉറപ്പുവരുത്താന്‍ ഒരു വഴിയും ഇല്ല.

€ സുരക്ഷയ്ക്കായി ഓപ്പറേറ്റിംഗ്‌ സംവിധാനങ്ങള്‍ ഒരു രഹസ്യകോഡ്‌ സംവിധാനം മാ
(ODI നല്‍കുന്നത്‌. ഡാറ്റയില്‍ സുരക്ഷാ നയങ്ങള്‍ നടപ്പിലാക്കാന്‍ ഇത്‌ പര്യാപ്തമല്ല.

* ഡാറ്റയില്‍ നിലവാരമൊന്നും ഇല്ല.

8.1.1 ഡാറ്റാബേസിന്റെ ആവശ്യകത (Need of database)

മുകളില്‍ പറഞ്ഞിരിക്കുന്ന പിഴവുകള്‍ ഡാറ്റാബേസ്‌ ഉപയോഗിച്ച്‌ തരണം ചെയ്യാവുന്ന
താണ്‌. വലിയ അളവില്‍ ഡാറ്റ കൈകാര്യം ചെയ്യാന്‍ പരമ്പരാഗത ഫയല്‍ നിര്‍വഹണ
സംവിധാനം മതിയാകില്ല. ഇത്തരം സന്ദര്‍ഭങ്ങളില്‍ ഡാറ്റാബേസ്‌ ഉപയോഗിക്കുന്നു. ഒന്നി
ലധികം ആപ്ലിക്കേഷനുകള്‍ക്ക്‌ ഉപയോഗിക്കാന്‍ കഴിയുന്നവിധത്തില്‍ ആവര്‍ത്തനം അധി
കമില്ലാതെ സംഭരിച്ച പരസ്പരബന്ധിതമായ വിവരങ്ങളുടെ ഒരു സംഘടിത ശേഖരമാണ്‌
ഡാറ്റാബേസ്‌. ഹയര്‍ സെക്കണ്ടറി സ്കൂള്‍ പ്രവേശനത്തിന്‌ ഉപയോഗിക്കുനന്ന ഏകജാല
സംവിധാനം ഡാറ്റയെ ഒരു ഡാറ്റാബേസ്‌ നിര്‍വഹണ സംവിധാനത്തില്‍ സൂക്ഷിച്ചു കൊണ്ട്‌
കൈകാര്യ ചെയ്യുന്നതിന്‌ ഒരു ഉദാഹരണമാണ്‌. അടിസ്ഥാനപരമായി ഒരു ഡാറ്റാബേസ്‌
നിര്‍വഹണ സംവിധാനം എന്നത്‌ ഡാറ്റാബേസിന്റെ സംഭരണം, വീണ്ടെടുക്കല്‍, നിര്‍വ
ഹണം മുതലായവയ്ക്ക്‌ സാകര്യമൊരുക്കുന്ന ഒരു കൂട്ടം പ്രോഗ്രാമുകളാണ്‌. ഡാറ്റാബേസ്‌
സംഭരിക്കുന്നതിനും വീണ്ടെടുക്കുന്നതിനും സാകര്യപ്രദവും കാര്യക്ഷമവുമായ ഒരു അന്ത
രീക്ഷം പ്രദാനം ചെയ്യുക എന്നതാണ്‌ DBMS ന്റെ പ്രാഥമിക ലക്ഷ്യം.

8. ഡാറ്റാബേസ്‌ നിര്‍വഹണ സംവിധാനം

8.1.2 DBMS ന്റെ നേട്ടങ്ങള്‍ (Advantages of database)

ഡാറ്റാബേസ്‌ സംവിധാനങ്ങള്‍ വലിയ അളവിലുള്ള ഡാറ്റ കൈകാര്യം ചെയ്യാന്‍ രൂപകല്‍പന
ചെയ്തിരിയ്ക്കുന്നു. ഡാറ്റ സംഭരണത്തിനായുള്ള ഡാറ്റാബേസ്‌ ഘടനകളുടെ നിര്‍വ
ചനവും, ഡാറ്റ കൈകാര്യം ചെയ്യുന്നതിനുള്ള സംവിധാനങ്ങളും DBMS ഉള്‍പ്പെട്ടിരി
ക്കുന്നു. കൂടാതെ, സംഭരിച്ച ഡാറ്റയുടെ അനധികൃത ഉപയോഗം, സിസ്റ്റം പരാജയം
മൂലം ഡാറ്റ നഷ്ടമാവുന്ന അവസ്ഥ തുടങ്ങിയ പ്രശ്നങ്ങളില്‍ നിന്നുള്ള സുരക്ഷ DBMS
ഉറപ്പുവരുത്തുന്നു. പല ഉപയോക്താക്കള്‍ക്കിടയില്‍ ഡാറ്റ പങ്കുവയ്ക്കേണ്ടതുണ്ടെങ്കില്‍
അതുമൂലമുള്ള അപാകതയുള്ള ഫലങ്ങള്‍ സിസ്റ്റം ഒഴിവാക്കണം. പരമ്പരാഗത ഫയല്‍
നിര്‍വഹണ സംവിധാനത്തെക്കാളും ഡാറ്റാബേസ്‌ നിര്‍വഹണ സംവിധാനത്തിന്‌ അനേ
കം ഗുണങ്ങളുണ്ട്‌, അവ താഴെ ചര്‍ച്ചചെയ്യാം.

€ ഡാറ്റ റിഡന്‍ഡന്‍സി നിയ്യു്തിക്കുന്നു: പരമ്പരാഗത ഫയല്‍ നിര്‍വഹണ സംവിധാ
നത്തില്‍, ഡാറ്റ നിരവധി ഫയലുകളിലായി സംഭരിക്കപ്പെടാം. ഒന്നിലധികം സ്ഥാന
ങ്ങളില്‍ ഒരേ ഡാറ്റ സംഭരിക്കുക (ഒരേ ഫയലില്‍ അല്ലെങ്കില്‍ വൃത്യസ്ത ഫയലുകളില്‍
ആയിരിക്കാം) അല്ലെങ്കില്‍ ഡാറ്റയുടെ തനിപ്പകര്‍പ്പിന്‌ ഡാറ്റ റിഡന്‍ഡന്‍സി എന്ന്‌ പറ
യുന്നു. റിഡന്‍ഡന്‍സി മൂലം ഡാറ്റ സംഭരണത്തിനും ഡാറ്റ ഉപയോഗത്തിനും ഉയര്‍ന്ന
ചെലവ്‌ വരുന്നു. ഡാറ്റാബേസ്‌ സംവിധാനത്തില്‍ ഡാറ്റകളുടെ പകര്‍പ്പ്‌ സുക്ഷിക്കുന്നില്ല,
പകരം എല്ലാ ഡാറ്റയും ക്രേന്ദീകൃത രീതിയില്‍ ഒരിടത്ത്‌ സൂക്ഷിച്ചിരിക്കുന്നു. ഡാറ്റ
ആവശ്യമുള്ള എല്ലാ ആപ്ലിക്കേഷനുകളും ഉപയോക്താക്കളും ക്രേന്ദീകൃതമായി പരിപാ
ലിക്കപ്പെട്ട ഡാറ്റാബേസ്‌ ഉപയോഗിക്കുന്നു. സാങ്കേതികമോ ബിസിനസ്‌ പരമോ ആയ
കാരണങ്ങള്‍കൊണ്ട്‌ ചില സന്ദര്‍ഭങ്ങളില്‍ ഒരേ ഡാറ്റയുടെ നിരവധി പകര്‍പ്പുകള്‍
സൂക്ഷിക്കാറുണ്ട്‌. എന്നിരുന്നാലും, ഏത്‌ സാഹചര്യത്തിലും ഡാറ്റയുടെ ആവര്‍ത്ത
നത്തെ ശ്രദ്ധാപൂര്‍വം നിയന്ത്തിക്കുന്നു.

€ ഡാറ്റയുടെ പൊരുത്തം: ഡാറ്റ റിഡന്‍ഡന്‍സി ഡാറ്റയുടെ പൊരുത്തമില്ലായ്മയിലേക്ക്‌
നയിച്ചേക്കാം. അതായത്‌, ഒരേ ഡാറ്റയുടെ വിവിധ കോപ്പികളില്‍ വ്യത്യസ്ത വിലകള്‍
കാണിക്കാം. നിങ്ങളുടെ ക്ലാസ്സിലെ വിദ്യാര്‍ഥികളുടെ വിലാസം നിങ്ങളുടെ ക്ലാസ്‌
അധ്യാപകനും പ്രിന്‍സിപ്പാളും പ്രത്യേകമായി പരിപാലിക്കുന്നുവെന്ന്‌ കരുതുക. വിലാ
സത്തില്‍ മാറ്റങ്ങള്‍ വരുത്തുന്നതിന്‌ ചില വിദ്യാര്‍ഥികള്‍ ക്ലാസ്‌ അധ്യാപകനെയും
മറ്റു ചിലര്‍ പ്രിന്‍സിപ്പാളിനെയും സമീപിക്കുന്നു. ഒരു നിശ്ചിത കാലയളവിനു ശേഷം,
രണ്ടു പട്ടികകളും അപ്രസക്തവും പൊരുത്തപ്പെടാത്തതുമാകും. ഡാറ്റ റിഡന്‍ഡന്‍സി
നിയന്ത്രക്കുന്നതിലൂടെ ഡാറ്റയുടെ പൊരുത്തം ഉറപ്പാക്കാം. ഡാറ്റ ഒരിടത്ത്‌ മാത്രം
സൂക്ഷിക്കുകയാണെങ്കില്‍, അതിന്റെ വിലകളിലേക്കുള്ള ഏത്‌ മാറ്റവും ആ സ്ഥലത്ത്‌
മാത്രമെ ചെയ്യാനാകൂ, ഒപ്പം മാറ്റം വരുത്തിയ വിലകള്‍ എല്ലാ ഉപയോക്താക്കള്‍ക്കും
ഉടന്‍ ലഭ്യമാകുകയും ചെയ്യും.

© കാരൃക്ഷമമായ ഡാറ്റ ഉപയോഗം: ഡാറ്റ കാര്യക്ഷമമായി സംഭരിക്കാനും വീണ്ടെടു
ക്കാനും നിരവധി സാങ്കേതികവിദ്യകള്‍ DBMS ഉപയോഗപ്പെടുത്തുന്നു.

* ഡാറ്റസമഗ്രത: ഡാറ്റസമഗ്രത ഡാറ്റാബേസിലെ ഡാറ്റയുടെ പൂര്‍ണത, കൃത്യത, സ്ഥിരത
എന്നിവയെ സൂചിപ്പിക്കുന്നു. ഒരു ഡാറ്റ റെക്കോര്‍ഡിന്റെ രണ്ട്‌ മാറ്റങ്ങള്‍ക്കിടയിലുള്ള
ഡാറ്റയില്‍ എന്തെങ്കിലും വൃതിയാനമുണ്ടെങ്കില്‍ അത്‌ സൂചിപ്പിക്കാന്‍ ഇതിന്‌ കഴിയും.
ഡാറ്റാബേസ്‌ രൂപകല്പന ചെയ്യുന്ന ഘട്ടത്തില്‍ ശരിയായ നിയമങ്ങളും നടപടി

കമ്പ്യുട്ടര്‍ സയന്‍സ്‌ - XI!

ശ്രമങ്ങളും ഉപയോഗിച്ച്‌ ഡാറ്റസമഗ്രത നടപ്പില്‍ വരുത്തുന്നു. തെറ്റുകളുടെ പരിശോ
ധനയും സാധുകരണ പരിപാടികളും ഉപയോഗിച്ച്‌ ഡാറ്റസമഗ്രത നിലനിര്‍ത്താന്‍
കഴിയും.

* ഡാറ്റ സുരക്ഷ: ഡാറ്റാബേസിലുള്ള വിവരങ്ങള്‍ ഏതൊരു കമ്പനിക്കും സ്ഥാപനത്തി
നും മൂല്യമേറിയതാണ്‌. അതിനാല്‍ ഇത്‌ സുരക്ഷിതമായും സ്വകാര്യവുമായും സൂക്ഷി
ക്കണം. അംഗീകൃതമല്ലാത്ത വ്യക്തികള്‍ നടത്തുന്ന അവിചാരിതമോ കരുതിക്കൂട്ടിയു
ള്ളതോ ആയ വെളിപ്പെടുത്തലുകള്‍, അനധികൃത പരിഷ്കരണം, നശീകരണം എന്നീ
പ്രശ്നങ്ങളില്‍ നിന്നുള്ള സംരക്ഷണമാണ്‌ ഡാറ്റ സുരക്ഷ കൊണ്ട്‌ ഉദ്ദേശിക്കുന്നത്‌.
വിവിധ പ്രോഗ്രാമുകളും ഉപയോക്താക്കളും പൊതുവായി ഡാറ്റ പങ്കുവയ്ക്കാം.
എന്നാല്‍ ഉപയോഗിക്കുവാനുള്ള അവകാശങ്ങള്‍ ക്രമീകരിച്ചുകൊണ്ട്‌ തിരഞ്ഞെടുത്ത
ഉപയോക്താക്കള്‍ക്ക്‌ നിര്‍ദിഷ്ട വിവരങ്ങള്‍ മാര്രം ഉപയോഗിക്കുവാന്‍ കഴിയുന്ന
രീതിയില്‍ പരിമിതപ്പെടുത്താവുന്നതാണ്‌. പാസ്സ്വേഡിന്റെ സഹായത്താല്‍, ഒരു ഡാറ്റാ
ബേസിലെ വിവരങ്ങള്‍ അംഗീകൃത വ്യക്തികള്‍ക്ക്‌ മാത്രമായി ലഭ്യമാക്കാം.

€ ഡാറ്റ പങ്കുവയ്ക്കല്‍: ഡാറ്റാബേസില്‍ സംഭരിച്ചിരിക്കുന്ന ഡാറ്റ നിരവധി ഉപയോ
ക്താക്കള്‍ക്കും പ്രോഗ്രാമുകള്‍ക്കും ഒരേസമയം പങ്കിടാന്‍ കഴിയും. കൂടാതെ ഓരോ
രുത്തര്‍ക്കും വൃത്യസ്ത ഉദ്ദേശ്യങ്ങള്‍ക്കായും ഉപയോഗിക്കാം.

* മാനദണ്ഡങ്ങളുടെ നടപ്പാക്കല്‍: ഡാറ്റാബേസിന്റെ ക്കേന്ദ്ര നിയന്ത്രണം ഉപയോഗിച്ച്‌,
ഒരു ഡാറ്റാബേസ്‌ അഡ്മിനിസ്ട്രേറ്റര്‍ (DBA) ആവശ്യമായ മാനദണ്ഡങ്ങള്‍ നിര്‍വചി
ക്കുകയും നടപ്പിലാക്കുകയും ചെയ്യുന്നു. കംപ്യൂട്ടറുകള്‍ തമ്മില്‍ ഡാറ്റ വിനിമയം
നടത്തുന്നതിനുള്ള ഡാറ്റ ഫോര്‍മാറ്റുകള്‍ക്ക്‌ മാനദണ്ഡങ്ങള്‍ നിര്‍വചിക്കാം. നാമകരണ
സ്ര്രദായങ്ങള്‍, പ്രദര്‍ശന ഫോര്‍മാറ്റുകള്‍, റിപ്പോര്‍ട്ട്‌ ഘടനകള്‍, പദാവലി, ഡോക്യു
മെന്റേഷന്‍ നിലവാരങ്ങള്‍, അപ്ഡേറ്റ്‌ നടപടികള്‍, വിനിയോഗ നിയമങ്ങള്‍ തുടങ്ങിയവ
പ്രായോഗികമായ മാനദണ്ഡങ്ങളില്‍ ഉള്‍പ്പെടുന്നു. വിവിധ വകുപ്പുകളുടെയും പ്രൌൊജ
ക്റ്റുകളുടെയും ഉപയോക്താക്കളുടെയും ഇടയില്‍ ആശയവിനിമയവും സഹകരണവും
ഉണ്ടാക്കുന്നതിന്‌ ഇത്‌ സഹായിക്കുന്നു.

© തകര്‍ച്ചയില്‍ നിന്ന്‌ വീണ്ടെടുക്കല്‍: ഒരു സിസ്റ്റം തകരുമ്പോള്‍, മുഴുവന്‍ ഡാറ്റയും
അല്ലെങ്കില്‍ ഡാറ്റയുടെ ഒരു ഭാഗം ഉപയോഗമശുന്യമാകും. തകര്‍ച്ചയില്‍ നിന്നും ഡാറ്റ
വീണ്ടെടുക്കുന്നതിന്‌ 213145 ചില സംവിധാനങ്ങള്‍ നല്‍കുന്നു.

നിങ്ങളുടെ പഠനപുരോഗതി അറിയറുക

1. ഒരേ ഡാറ്റ വിവിധ സ്ഥലങ്ങളില്‍ സുക്ഷിക്കുന്നതിനെ __ എന്നു പറയുന്നു.

2. ഒരു വിദ്യാര്‍ഥിയുടെ വിലാസം സ്‌കൂള്‍ റെക്കോര്‍ഡില്‍ രണ്ടു രീതിയില്‍ സുക്ഷിച്ചിരിക്കുന്നു;
ഈ സാഹചര്യം എന്നറിയകെടുന്നു.

3. ഡാറ്റയുടെ അംഗീകൃതമല്ലാത്ത ഉപയോഴം ഉപയോരിച്ചു കൊണ്ട്‌ തടയുന്നു.

4. ഡാറ്റ പങ്കുവയ്ക്കുന്നതു ഡാറ്റ കൊണ്ട്‌ റിഡന്‍ഡന്‍സി കുറയ്ക്കും. ഈ പ്രസ്താവന
രരിയോ തെറ്റോ എന്ന്‌ എഴുതുക.

5. ഡാറ്റ റിഡന്‍ഡന്‍സി ഡാറ്റയുടെ സ്ഥിരത കുറയ്ക്കും. ശരിയോ തെറ്റോ എന്ന്‌ എഴുതുക.

8. ഡാറ്റാബേസ്‌ നിര്‍വഹണ സംവിധാനം

8.2 DBMS ഘടകങ്ങള്‍ (Components of the DBMS environment)

DBMS ന്‌ ചുവടെ കൊടുത്തിരിക്കുന്ന വിധത്തില്‍ നിരവധി ഘടകങ്ങള്‍ ഉണ്ട്‌. ഓരോന്നും
അതിന്റെ പരിതസ്ഥിതിയില്‍ വളരെ പ്രധാനമായ ചുമതലകള്‍ നിര്‍വഹിക്കുന്നു.

© ഹാര്‍ഡ്വെയര്‍

€ സോഫ്റ്റ്വെയര്‍

ഭ ഡാറ്റ

© ഉപയോക്താക്കള്‍

© നടപടിക്രമങ്ങള്‍

ഹാര്‍ഡ്വെയര്‍: ഡാറ്റാബേസിന്റെ സംഭരണത്തിനും വീണ്ടെടുക്കലിനും ഉപയോഗിക്കുന്ന
കമ്പ്യൂട്ടര്‍ സിസ്റ്റം ആണ്‌ ഹാര്‍ഡ്‌ വെയര്‍. കമ്പ്യൂട്ടറുകള്‍ (പിസികള്‍, വര്‍ക്ക്‌സ്‌റ്റേഷനു
കള്‍, സര്‍വറുകള്‍, സൂപ്പര്‍കമ്പ്യൂട്ടറുകള്‍), സംഭരണ ഉപകരണങ്ങള്‍ (ഹാര്‍ഡ്‌ ഡിസ്കുകള്‍,
മാഗ്നെറ്റിക്‌ ടേപ്പുകള്‍), നെറ്റ്വര്‍ക്ക്‌ ഉപകരണങ്ങള്‍ (ഹബ്‌. സ്വിച്ച്‌, റട്ടറുകള്‍, ഫൈബര്‍
ഓപ്റ്റിക്‌സ്‌), ഡാറ്റ സൂക്ഷിക്കുവാനുള്ള മറ്റു അനുബന്ധ ഉപകരണങ്ങള്‍ എന്നിവ ഇതില്‍
ഉള്‍പ്പെടുന്നു.

സോഫ്റ്റ്വെയര്‍: DBMS, ആപ്ലിക്കേഷന്‍ പ്രോഗ്രാമുകള്‍, യൂട്ടിലിറ്റികള്‍ എന്നിവ ഇതില്‍
പെടും. ഉപയോക്താവിനും ഡാറ്റാബേസിനും ഇടയിലുള്ള ഒരു പാലമായി DBMS
പ്രവര്‍ത്തിക്കുന്നു. മറ്റൊരുവിധ

ത്തില്‍ പറഞ്ഞാല്‍, ഉപയോക്താ നടപടിക്രമങ്ങളും ഹാര്‍ഡ്വെയര്‍ ൫
ക്കളുമായും ആപ്ലിക്കേഷന്‍ പ്രോ ങ്ങും
ഡാറ്റാബേസ്‌

ഗ്രാമുകളുമായും ഡാറ്റാബേസു ~ അധ്മിനിസ്ട്രുര്‍
കളുമായും സംവദിക്കുന്ന സോ NN ഡിസൈനര്‍ Joo
ഫ്റ്റ്വെയര്‍ ആണ്‌ 121315. ഡാ ര

റ്റാബേസ്‌ ഉപയോഗിക്കുന്ന സമ സാധാരണ ഉപയോക്താക്കര്‍ പ്രോഗ്രാമര്‍ \ i]
യത്ത്‌ ഉപയോക്താക്കളില്‍ നി ച്‌ DBMS യുട്ടിലററിസ്‌
ന്നുള്ള എല്ലാ അഭ്യര്‍ഥനകളും പിന്‍ DBMS
DBMS കൈകാര്യം ചെയ്യുന്നു.

ഡാറ്റാനിര്‍വചനം (data definition), തം

ഡാറ്റ കൈകാര്യം ചെയ്യല്‍ (data
manipulation), ഡാറ്റാ സുരക്ഷിത
ത്വം (data securtiy), ഡാറ്റ വിശ്വാസൃത (data integrtiy), ഡാറ്റ വീണ്ടെടുക്കല്‍ (data recov-
ഒ), പ്രകടനം മെച്ചപ്പെടുത്തല്‍ (performance optimization) തുടങ്ങിയ നിരവധി ചുമതല
കള്‍ കൈകാര്യം ചെയ്യുന്ന നിരവധി സോഫ്റ്റ്വെയര്‍ ഘടകങ്ങള്‍ DBMS സോഫ്റ്റ്‌വെ
യറില്‍ ഉള്‍പ്പെടുന്നു. സങ്കീര്‍ണമായ ഹാര്‍ഡ്വെയര്‍ വിശദാംശങ്ങളില്‍ നിന്ന്‌ ഡാറ്റാ
ബേസിന്‌ കവചം തീര്‍ക്കുന്ന ഒരു പൊതു സംവിധാനമാണ്‌ DBMS. ഇത്‌ ഡാറ്റയുടെ
ഉപയോഗം നിയന്ത്രിക്കുകയും ഡാറ്റയുടെ സ്ഥിരത നിലനിര്‍ത്താന്‍ സഹായിക്കുകയും
ചെയ്യുന്നു. റിപ്പോര്‍ട്ടുകള്‍ തയാറാക്കുക, തീരുമാനങ്ങള്‍ എടുക്കാന്‍ ആവശ്യമായ
വിവരങ്ങള്‍ നല്‍കുക, ഡാറ്റാസമാഹരണം നടത്തുക എന്നിവയ്ക്കായി ഡാറ്റാബേസില്‍

ചിത്രം 8.4: ്ഡാബവ്‌തിമ്മും

കമ്പ്യൂട്ടര്‍ സയന്‍സ്‌ - XII

ലഭ്യമായ ആപ്ലിക്കേഷന്‍ പ്രോഗ്രാമുകള്‍ ഉപയോഗിക്കുന്നു. ഡാറ്റാബേസ്‌ സംവിധാനം
കൈകാര്യം ചെയ്യുവാന്‍ സഹായിക്കുന്ന സോഫ്റ്റ്വെയറുകളാണ്‌ യൂട്ടിലിറ്റികള്‍. ഉദാഹ
രണത്തിന്‌, ഡാറ്റാബേസ്‌ ഘടനകള്‍ നിര്‍മ്മിക്കുക, ഡാറ്റാബേസ്‌ ഉപയോഗം നിയന്ത്രിക്കുക,
ഡാറ്റാബേസ്‌ പ്രവര്‍ത്തനങ്ങള്‍ നിരീക്ഷിക്കുക തുടങ്ങിയവയ്ക്കായി എല്ലാ പ്രധാന
DBMS കളും ഗ്രാഫിക്കല്‍ യൂസര്‍ ഇന്റര്‍ഫേസുകള്‍ (GUIs) ഉപയോഗിക്കുന്നു.

ഡാറ്റ: അവസാനഘട്ട ഉപയോക്താക്കളുടെ കാഴ്ചപ്പാടില്‍ DBMS പരിസ്ഥിതിയിലെ/
ചട്ടക്കുടിലെ ഏറ്റവും പ്രധാനപ്പെട്ട ഘടകം ഡാറ്റ തന്നെയാണ്‌. ഡാറ്റാബേസില്‍ പ്രവര്‍
ത്തനഡാറ്റയും മെറ്റാഡാറ്റയും (ഡാറ്റയെക്കുറിച്ചുള്ള ഡാറ്റ) അടങ്ങിയിരിക്കുന്നു. ഒരു
സ്ഥാപനത്തിന്‌ ആവശ്യമായ എല്ലാ ഡാറ്റയും ഡാറ്റാബേസില്‍ ഉണ്ടായിരിക്കണം.
യഥാര്‍ഥ ഡാറ്റയും ഡാറ്റ ഉപയോഗിക്കുന്ന പ്രോഗ്രാമുകളും പരസ്പരം വേര്‍തിരിക്കപ്പെ
ടുന്നു എന്നത്‌ ഡേറ്റാബേസുകളുടെ പ്രധാന സവിശേഷതയാണ്‌. വിവരങ്ങള്‍ ഫല
പ്രദമായി സംഭരിക്കുന്നതിനും വീണ്ടെടുക്കുന്നതിനും ഡാറ്റയെ ഫീല്‍ഡുകള്‍,
റെക്കോര്‍ഡുകള്‍, ഫയലുകള്‍ എന്നിങ്ങനെ ക്രമീകരിച്ചിരിക്കുന്നു.

ഒരു ക്ലാസിലെ വിദ്യാര്‍ഥികളുടെ അഡ്മിഷന്‍ നമ്പര്‍, പേര്‌, ബാച്ച്‌, പരീക്ഷാഫലം,
മാര്‍ക്കുകള്‍ എന്നിവ ശേഖരിക്കുന്നതിനുള്ള കാര്‍ഡുകളുടെ ഒരു ശേഖരം സങ്കല്‍പ്പിക്കുക.
ഓരോ കാര്‍ഡിനും സമാനഘടന ഉണ്ടായിരിക്കും, എന്നാല്‍ അവയില്‍ രേഖപ്പെടുത്തി
യിരിക്കുന്ന ഡാറ്റ ചിത്രം 8.2 ലെ പോലെ വൃത്യസ്തമായിരിക്കും.

101
: Megha

: Commerce
: Pass

2425

Record

Adm. No.

ര Name Mohanan
File. Batch Science
_ Result Pass

Marks 520

ചിത്രം 8.2: WIP WoMDIaIM ആമയം

ADIOB ADAG: ശേഖരിച്ച ഡാറ്റയുടെ ഏറ്റവും ചെറിയ ഘടകമാണ്‌ ഒരു ഫീല്‍ഡ്‌. ഓരോ
ഫീല്‍ഡിലും ഒരു പ്രത്യേക തരം ഡാറ്റ അടങ്ങിയിരിക്കുന്നു. ചിത്രം 8.2 AdmNo, Name,
Batch, Result, Marks എന്നിവ ഫീല്‍ഡുകളാണ്‌.

DACAAIBGAH: അനുബന്ധ ഫില്‍ഡുകളുടെ ശേഖരമാണ്‌ ഒരു റെക്കോര്‍ഡ്‌. മുകളിലുള്ള
ചിത്രത്തില്‍ ബോക്സിലെ ഓരോ കാര്‍ഡിലും ബന്ധപ്പെട്ട എല്ലാ ഫീല്‍ഡുകളും ഉള്‍
ക്കൊള്ളുന്നു. ഉദാഹരണത്തിന്‌, 103, മോഹനന്‍, സയന്‍സ്‌, പാസ്‌, 520 എന്നീ ഫീല്‍ഡുകള്‍
ഉള്‍ക്കൊള്ളുന്നതാണ്‌ ഒരു റെക്കോര്‍ഡ്‌.

8. ഡാറ്റാബേസ്‌ നിര്‍വഹണ സംവിധാനം

AND: ഒരു ഫയല്‍ എന്നത്‌ ഒരേ തരത്തിലുള്ള റെക്കോര്‍ഡുകളുടെ ഒരു ശേഖരമാണ്‌.
ചിത്രം 8.2ല്‍ കാണിച്ചിരിക്കുന്ന ബോക്സ്‌ ഒരു ഫയല്‍ ആയി കണക്കാക്കാം.

ഉപയോക്താക്കള്‍: ഡാറ്റാബേസിലെ ഡാറ്റ ഉപയോഗിക്കുന്ന നിരവധി ഉപയോക്താക്കള്‍
ഉണ്ട്‌. DBMS ഉപയോഗിക്കുന്നവരുടെ ആശയവിനിമയത്തിന്റെ രീതി അനുസരിച്ച്‌ ഒരു
ഡാറ്റാബേസ്‌ സംവിധാനത്തിന്റെ ഉപയോക്താക്കളെ തരം തിരിക്കാം. ഡാറ്റാബേസ്‌ അഡ്‌
മിനിസ്ട്രേറ്റര്‍ (DBA), ആപ്ലിക്കേഷന്‍ പ്രോഗ്രാമര്‍മാര്‍, സാങ്കേതിക പരിജ്ഞാനമുള്ള
ഉപയോക്താക്കള്‍ (Sophisticated users), സാധാരണ ഉപയോക്താക്കള്‍ (Naive Users)
എന്നിവയാണ്‌ വിവിധ വിഭാഗങ്ങളിലെ ഉപയോക്താക്കള്‍.

നടപടിക്രമങ്ങള്‍: ഡാറ്റാബേസിന്റെ രൂപകല്പനയും ഉപയോഗവും നിയ്യ്ത്രിക്കുന്ന നിര്‍
ദേശങ്ങളും ചട്ടങ്ങളുമാണ്‌ നടപടിക്രമങ്ങള്‍. സംവിധാനത്തിന്റെ ഉപയോക്താക്കള്‍ക്കും
ഡാറ്റാബേസ്‌ കൈകാര്യം ചെയ്യുന്ന വ്യക്തികള്‍ക്കും സിസ്റ്റം എങ്ങനെ ഉപയോഗിക്കണം
അല്ലെങ്കില്‍ പ്രവര്‍ത്തിപ്പിക്കണമെന്ന്‌ രേഖപ്പെടുത്തിയ പ്രമാണങ്ങള്‍ ആവശ്യമാണ്‌.
ചുവടെ കൊടുത്തിരിക്കുന്ന പ്രവര്‍ത്തനങ്ങള്‍ക്കാവശ്യമായ നിര്‍ദേശങ്ങള്‍ ഇത്തരം രേഖ
കളില്‍ ഉണ്ടായിരിക്കും.

i) DBMS ലേക്ക്‌ ലോഗിന്‍ ചെയ്യുക.

ii) ഒരു നിശ്ചിത DBMS സംവിധാനം അല്ലെങ്കില്‍ ആപ്ലിക്കേഷന്‍ പ്രോഗ്രാം ഉപയോ
ഗിക്കുക.

iti) DBMS പ്രവര്‍ത്തനം ആരംഭിക്കുകയും അവസാനിപ്പിക്കുകയും ചെയ്യുക.

IV) ഡാറ്റാബേസിന്റെ പകര്‍പ്പ്‌ എടുക്കുകയും ഹാര്‍ഡ്വെയറിന്റെയോ സോഫ്റ്റ്വെയറി
ന്റെയോ തകരാറുകള്‍ പരിഹരിക്കുകയും ചെയ്യുക.

൮) വിവിധ ഡിസ്‌കുകളിലായി വ്യാപിച്ചിരിക്കുന്ന ഡാറ്റാബേസ്‌ തിരിച്ചറിയുകയും പ്രവര്‍
ത്തനം മെച്ചപ്പെടുത്തുകയും ദ്വിതീയ സംഭരണിയിലേക്ക്‌ ചരിത്രരേഖയായി ഡാറ്റ
സൂക്ഷിക്കുകയും ചെയ്യുക.

രണ്ടാം സംഭരണിയിലേക്ക്‌ ആര്‍ക്കൈവ്‌ ഡാറ്റയായി (Archive Daa) സൂക്ഷിക്കുകയും
ചെയ്യുക.

നിങ്ങളുടെ പഠനപുരോഗതി അറിയറുക
1. ഡാറ്റയെ കുറിച്ചുള്ള ഡാറ്റ എന്നറിയകെടുന്നു.
2. ഡാറ്റാബേസ്‌ സംവിധാനത്തിന്റെ പ്രധാന ഘടകങ്ങളുടെ പേര്‌ എഴുതുക?

3. താഴെ പറയുന്ന DBMS ന്റെ ഘടകങ്ങളെ തരം തിരിക്കുക:

ഹാര്‍ഡ്‌ ഡിസ്ക്ക്‌, സ്വിച്ച്‌, ഡിബിഎ, പേറോള്‍ സംവിധാനം, സാധാരണ ഉപയോക്താവ്‌,
റെയില്‍വേ റിസര്‍വേഷന്‍ സംവിധാനം.

കമ്പ്യൂട്ടര്‍ സയന്‍സ്‌ - XII

8.3 ഡാറ്റ സംഗ്രഹവും ഡാറ്റ സ്വാതന്ത്യവും
(Data abstraction and data independence)

ഒരു സിസ്റ്റം ഉപയോഗയോഗ്യമാക്കുവാന്‍ ഡാറ്റ കാര്യക്ഷമമായി വീണ്ടെടുക്കണം. കാര്യ
ക്ഷമതയോടെ ഡാറ്റയെ ഡാറ്റാബേസില്‍ പ്രതിനിധാനം ചെയ്യുന്നതിനായി ഡിസൈനര്‍
(designer) സങ്കീര്‍ണമായ ഡാറ്റഘടനകള്‍ ഉപയോഗപ്പെടുത്തുന്നു. ഡാറ്റാബേസ്‌ ഉപയോ
ക്താക്കളിലധികവും കമ്പ്യൂട്ടര്‍ പരിജ്ഞാ
നം ഇല്ലാത്തവരായതിനാല്‍, കമ്പ്യൂട്ടര്‍
പ്രോഗ്രാമുകള്‍ വികസിപ്പിക്കുന്നവര്‍ ഡാറ്റാ
ബേസ്‌ സങ്കീര്‍ണത പലത ലത്തിലുള്ള
ഡാറ്റ സംഗ്രഹം വഴി ഉപയോക്താക്കളില്‍
നിന്ന്‌ മറയ്ക്കുന്നു. ലോജിക്കല്‍ തലം

ചിത്രം 8.3 ല്‍ വിവരിച്ചിരിക്കുന്നതുപോലെ,
ഒരു DBMS ലെ ഡാറ്റസംഗ്രഹം മുന്നുതല
ങ്ങളിലായി വിവരിച്ചിരിക്കുന്നു ഭാതിക ദരതിക തലം
തലം, ലോജിക്കല്‍ തലം, വ്യൂ തലം.

ഒ. ഭാതിക തലം (Physical level)

ഡിസ്കുകള്‍, ടേപ്പുകള്‍ മുതലായ രണ്ടാംതര സംഭരണ ഉപകരണങ്ങളില്‍ എങ്ങനെയാണ്‌
ഡാറ്റ സുക്ഷിച്ചിരിക്കുന്നത്‌ എന്ന്‌ ഏറ്റവും താഴ്ന്ന തലത്തിലുള്ള ഡാറ്റ സംഗ്രഹം സൂചി
പ്പിക്കുന്നു. ഫിസിക്കല്‍ തലം താഴ്‌ന്ന തലത്തിലുള്ള സങ്കീര്‍ണ ഡാറ്റാഘടന വിശദീകരി
ക്കുന്നു. റിലേഷനുകള്‍ (പട്ടിക രൂപത്തിലുള്ള ഡാറ്റ) സുക്ഷിക്കുന്നതിനും വേഗത്തില്‍
ഡാറ്റ വീണ്ടെടുക്കുന്നതിനായി ഇന്‍ഡക്സുകള്‍ എന്നറിയപ്പെടുന്ന സഹായക ഡാറ്റ ഘടന
നിര്‍മ്മിക്കുന്നതിനും ഏത്‌ ഫയല്‍ വ്യവസ്ഥ ഉപയോഗിക്കണമെന്ന്‌ നാം തീരുമാനിക്കേ
ണ്ടതുണ്ട്‌. SWS (ഏകജാലക സംവിധാനം) ഡാറ്റാബേസിലെ ഭാതിക ഡാറ്റ ഘടനയുടെ
ഒരു മാതൃക താഴെക്കൊടുക്കുന്നു.
€ എല്ലാ റിലേഷനുകളും (ക്രമമല്ലാത്ത റെക്കോര്‍ഡുകള്‍ ഉള്ള ഫയലുകളായി സംഭരി
ക്കുക. (1213145ലെ ഒരു ഫയല്‍ ഡാറ്റയുടെയോ റെക്കോര്‍ഡുകളുടെയോ ശേഖരമാണ്‌;

ചിത്രം 8.3: DUN) സംഗ്രഹഫത്തി്റെ ത്ഥങ്ങശ്‌

€ സ്റ്റുഡന്റ്‌, സ്കൂള്‍, കോഴ്‌സ്‌ എന്നീ ഫയലുകളില്‍ ആദ്യ കോളത്തിനെ അടിസ്ഥാന
മാക്കി ഇന്‍ഡക്സുകള്‍ സൃഷ്ടിക്കുക.
1. ലോജിക്കല്‍ തലം (Logical level)
ഡാറ്റ സംഗ്രഹത്തിന്റെ അടുത്ത ഉയര്‍ന്ന തലമായ ലോജിക്കല്‍ തലം ഡാറ്റാബേസില്‍
എന്ത്‌ ഡാറ്റയാണ്‌ സംഭരിക്കുന്നതെന്നും, ഡാറ്റകള്‍ തമ്മില്‍ എന്ത്‌ ബന്ധമാണ്‌ നില
നില്‍ക്കുന്നതെന്നും വിശദമാക്കുന്നു. താരതമ്യേന വളരെ ലളിതമായ ഘടനകളെ അടി
സ്ഥാനമാക്കിയാണ്‌ ഡാറ്റാബേസിലെ ലോജിക്കല്‍ തലം വിശദീകരിക്കുന്നത്‌. ലോജിക്കല്‍
തലത്തില്‍ ലളിതമായ ഘടനകള്‍ നടപ്പിലാക്കുന്നതിന്‌, ഭാതിക തലത്തില്‍ സങ്കീര്‍ണമായ
ഘടനകള്‍ ഉപയോഗിക്കുന്നു. ലോജിക്കല്‍തലത്തിലുള്ള ഉപയോക്താവിന്‌ ഈ സങ്കീര്‍
ണത അറിഞ്ഞിരിക്കേണ്ട ആവശ്യമില്ല. ഡാറ്റാബേസില്‍ എന്ത്‌ വിവരമാണ്‌ സൂക്ഷിക്കേ
ണ്ടത്‌ എന്ന്‌ തീരുമാനിക്കുന്ന ഡാറ്റാബേസ്‌ അഡ്മിനിസ്ട്രേറ്റര്‍മാര്‍ ഡാറ്റ സംധ്രഹത്തിന്റെ
ലോജിക്കല്‍ തലമാണ്‌ ഉപയോഗിക്കുന്നത്‌. ലോജിക്കല്‍ ഡാറ്റാതലത്തെ കണ്‍സെപ്ച്ചല്‍

ഡാറ്റാതലം എന്നും പറയുന്നു.

8. ഡാറ്റാബേസ്‌ നിര്‍വഹണ സംവിധാനം

€. വ്യു തലം (View level)

ഡാറ്റാബേസ്‌ സംഗ്രഹത്തിന്റെ ഏറ്റവും ഉയര്‍ന്ന തലമായ വ്യൂ തലം, ഉപയോക്താക്കളോട്‌
ഏറ്റവും അടുത്ത്‌ നില്‍ക്കുന്നു. ഓരോ ഉപയോക്താക്കളും ഡാറ്റ കാണുന്ന രീതിയാണ്‌
വ്യുതലം. ഈ തലത്തില്‍ ഡാറ്റാബേസിന്റെ ഒരു ഭാഗം മാത്രമേ വിവരിക്കുന്നുള്ളു. ഡാറ്റാ
ബേസിലെ മിക്ക ഉപയോക്താക്കള്‍ക്കും ഡാറ്റാബേസില്‍ അടങ്ങിയിരിക്കുന്ന എല്ലാ
വിവരങ്ങളും ആവശ്യമില്ല. പകരം അവര്‍ക്ക്‌ ഡാറ്റാബേസിന്റെ അവശ്യമായ ഭാഗം മാത്രമേ
ഉപയോഗിക്കേണ്ടതുള്ളൂ. ഇത്‌ 121315 മായുള്ള അവരുടെ ഇടപെടല്‍ ലളിതമാക്കുന്നു.
ഒരു ഡാറ്റാബേസിനായി നിരവധി വ്യൂ തലങ്ങള്‍ ഉണ്ടായേക്കാം. ചിത്രം 8.4ല്‍, AdmNo,
Name, Batch, Result, Marks എന്നീ ഫീല്‍ഡുകളുള്ള STUDENT ഫയലിന്റെ ഡാറ്റാബേസ്‌
സംഗ്രഹത്തിന്റെ മുന്നു തലങ്ങള്‍ കാണിക്കുന്നു.

വ്യ
ഠിം, Name

ony 2
AdmNo, Result, Marks

(611) ൮
AdmNo, Batch, Result

ലോജിക്കല്‍ തലം
AdmNo Integer
Character(50)
Character(20)
Characte

ഭാതിക തലം
Stored-Item Length=77
AdmNo Type=Bytes(2), Offset=0
Name Type=Bytes(50), Offset=2
Type=Bytes(20), Offset=52
om ടു, (4), OF വ്‌

ചിത്രം 8.4: QWIQ ശംഗഗഹത്തി്റെ്‌ തലങ്ങളുടെ DIANE

8.3.1 ഡാറ്റാസ്വാത്ത്ത്യം (Data independence)

ഒരു ഡാറ്റാബേസിനെ അതിന്റെ മുന്ന്തലത്തിലുള്ള ഡാറ്റാസം്രഹം വഴി വീക്ഷിക്കു
മ്പോള്‍, ഒരു നിശ്ചിത തലത്തിലെ ഡാറ്റാബേസ്‌ ഘടനയില്‍ എന്തെങ്കിലും മാറ്റമുണ്ടാ
കുന്നത്‌ മറ്റ്‌ തലങ്ങളുടെ ഘടനയെ ബാധിച്ചേക്കാം. ഡാറ്റാബേസില്‍ നടത്തുന്ന നിരന്ത
രമായ മാറ്റങ്ങള്‍ ഡാറ്റാബേസിന്റെ പുന്ര്രമീകരണത്തിന്‌ കാരണമാകരുത്‌. തൊട്ടടുത്ത
തലത്തിലെ ഡാറ്റാഘടനയുടെ നിര്‍വചനത്തെ ബാധിക്കാതെ ഒരു തലത്തിലെ ഡാറ്റാഘ
ടനയില്‍ മാറ്റം വരുത്തുവാനുള്ള കഴിവിനെ ഡാറ്റാസ്വാതന്ത്ര്യം എന്ന്‌ പറയുന്നു. ഡാറ്റാസ്വാ
ത്ര്ത്രൃത്തിന്‌ രണ്ടു തലങ്ങളുണ്ട്‌ - ഭാതിക ഡാറ്റാസ്വാതന്ത്രയവും (physical data indepen-
dence) ലോജിക്കല്‍ ഡാഠറ്റാസ്വാതന്ത്ര്യവും (logical data independence).

a. ഭാതിക ഡാറ്റാസ്വാതന്ത്രം (Physical data independence)

ലോജിക്കല്‍ തലത്തിലെ ഡാറ്റാഘടനയെ ബാധിക്കാതെ ഭാതികതലത്തിലെ ഡാറ്റാഘടന
യില്‍ മാറ്റം വരുത്തുവാനുള്ള കഴിവിനെ ഭാതിക ഡാറ്റാസ്വാതന്ത്രയം എന്നു പറയുന്നു.
അതായത്‌ ഭാതിക തലത്തിലെ ഡാറ്റാഘടനയില്‍ മാറ്റം വരുത്തിയാലും ആപ്ലിക്കേഷന്‍
പ്രോഗ്രാമുകള്‍ മാറ്റമില്ലാതെ ഒരേപോലെ തന്നെ തുടരും.

കമ്പ്യുട്ടര്‍ സയന്‍സ്‌ - XII

b. ലോജിക്കല്‍ ഡാറ്റാസ്വാതന്ത്ര്യം (Logical data independence)

ബാഹൃതലത്തിലെ (വ്യൂ തലം) ഡാറ്റാഘടനയെ ബാധിക്കാതെ ലോജിക്കല്‍ തലത്തിലെ
ഡാറ്റാഘടനയില്‍ മാറ്റം വരുത്താനുള്ള കഴിവിനെ ലോജിക്കല്‍ ഡാറ്റ സ്വാതന്ത്ര്യം എന്നു
പറയുന്നു. ആപ്ലിക്കേഷന്‍ പ്രോഗ്രാമുകളുടെ തല്‍സ്ഥിതി ഉറപ്പാക്കുന്നത്‌ ലോജിക്കല്‍
ഡാറ്റാസ്വാതന്ത്ര്യമാണ്‌. ആപ്ളിക്കേഷന്‍ പ്രോഗ്രാമുകള്‍ ഡാറ്റാബേസിന്റെ ലോജിക്കല്‍
ഘടനയെ കൂടുതല്‍ ആശ്രയിച്ചിരിക്കുന്നതു കൊണ്ട്‌, SOO A ഡാറ്റാസ്വാത്ന്ത്രയത്തെക്കാള്‍
ലോജിക്കല്‍ ഡാറ്റാസ്വാത്ന്ത്രയം കൈവരിക്കാന്‍ വളരെ പ്രയാസമാണ്‌.

8.4 ഡാറ്റാബേസിന്റെ ഉപയോക്താക്കള്‍ (Users of database)

വൈദഗ്ധ്യത്തിന്റെ തോതനുസരിച്ച്‌ അല്ലെങ്കില്‍ DBMS കൈകാര്യം ചെയ്യുന്ന രീതി
യുടെ അടിസ്ഥാനത്തില്‍ ഒരു ഡാറ്റാബേസ്‌ സംവിധാനത്തിന്റെ ഉപയോക്താക്കളെ ചുവടെ
പ്പറയുന്ന ഗ്രൂപ്പുകളില്‍ ഉള്‍പ്പെടുത്താം:

€ ഡാറ്റാബേസ്‌ അഡ്മിനിസ്ട്രേറ്റര്‍ (DBA)

. ആപ്ലിക്കേഷന്‍ പ്രോഗ്രാമര്‍മാര്‍

© സാങ്കേതിക പരിജ്ഞാനമുള്ള ഉപയോക്താക്കള്‍

* സാധാരണ ഉപയോക്താക്കള്‍

8.4.1 ഡാറ്റാബേസ്‌ അഡ്മിനിസ്ട്രേറ്റര്‍ (DBA)

ക്രേന്ദീകൃതവും പങ്കുവയ്ക്കപ്പെട്ടതുമായ ഡാറ്റാബേസിന്റെ നിയന്ത്രണച്ചുമതലയുള്ള
വ്ൃക്തിയാണ്‌ ഡാറ്റാബേസ്‌ അഡ്മിനിസ്ട്രേറ്റര്‍ (12132). 1013. പല സുപ്രധാന ജോലികളും
നിര്‍വഹിക്കേണ്ടതാണ്‌.

AGA Wal oH, ഫിസിക്കല്‍ സ്്‌കീമകളുടെ രൂപകല്പന: 121315 ല്‍ സംഭരിക്കേണ്ട
ഡാറ്റ എന്താണെന്നും അത്‌ എങ്ങനെ ഉപയോഗപ്പെടുത്താം എന്നും മനസ്സിലാക്കാന്‍
സംവിധാനത്തിന്റെ ഉപയോക്താക്കളുമായി ആശയവിനിമയം നടത്തുന്നത്‌ DBA യാണ്‌.
ഈ അറിവ്‌ അടിസ്ഥാനമാക്കി, 10134 കണ്‍സെപ്ചല്‍ സ്‌കീമയും ഫിസിക്കല്‍ സ്‌കീമയും
രൂപപ്പെടുത്തണം.

സുരക്ഷയും അംഗീകാരവും: ഡാറ്റയുടെ ശരിയായ ഉപയോഗം ഉറപ്പാക്കുന്നതിനുള്ള
ഉത്തരവാദിത്വം 113൧ല്‍ നിക്ഷിപ്തമാണ്‌. ഉദാഹരണമായി, ഒരു സ്കൂളില്‍, അധ്യാപകര്‍
വിദ്യാര്‍ഥികള്‍ക്ക്‌ പഠന മേഖലകള്‍ പരിചയപ്പെടാനും, വിദ്യാര്‍ഥിയുടെ പരീക്ഷാ ഫലങ്ങള്‍
അറിയാനും, ഒരു വിഷയം പഠിപ്പിക്കുന്ന അധ്യാപകരുടെ വിശദാംശങ്ങള്‍ കണ്ടെത്തുവാ
നും അനുവാദം നല്‍കുന്നു. അതേസമയം വിദ്യാര്‍ഥികള്‍ക്ക്‌ അധ്യാപകരുടെ ശമ്പളവിവര
ങ്ങളോ അല്ലെങ്കില്‍ മറ്റ്‌ വിദ്യാര്‍ഥികളുടെ ഗ്രേഡ്‌ വിവരങ്ങളോ കാണാന്‍ അനുവാദമില്ല.
പഠനമേഖലകളെ കുറിച്ചുള്ള ഒരു വ്യൂ മാര്രം ഉപയോഗിക്കാന്‍ വിദ്യാര്‍ഥികള്‍ക്ക്‌ അനുമതി
നല്‍കിക്കൊണ്ട്‌ DBA യ്ക്ക്‌ ഈ നയം നടപ്പിലാക്കാന്‍ കഴിയും.

ഡാറ്റാലഭൃതയും നഷ്ടത്തില്‍ നിന്നുള്ള വീണ്ടെടുക്കലും: ഒരു ഇടപാട്‌ പൂര്‍ത്തിയാക്കു
ന്നതിനോ തകരാര്‍ പരിഹരിക്കുന്നതിനോ സംവിധാനം പരാജയപ്പെടുമ്പോള്‍ ഡാറ്റ ഒരു
സ്ഥിരാവസ്ഥയിലേക്ക്‌ പുനഃസ്ഥാപിക്കുന്നതിനായി DBA നടപടികള്‍ എടുക്കേണ്ടതാണ്‌.
ഈ പ്രവര്‍ത്തനങ്ങള്‍ക്കുള്ള സോഫ്റ്റ്വെയര്‍ പിന്തുണ DBMS നല്‍കുന്നുണ്ട്‌, പക്ഷേം
അതാതു സമയം ഡാറ്റ ബാക്കപ്പ്‌ ചെയ്യുവാനും സിസ്റ്റം പ്രവര്‍ത്തനത്തിന്റെ ലോഗുകള്‍

8. ഡാറ്റാബേസ്‌ നിര്‍വഹണ സംവിധാനം

(ഡാറ്റാബേസിലെ പ്രവര്‍ത്തനങ്ങളായ ഡാറ്റ കൂട്ടിച്ചേര്‍ക്കല്‍, ഒഴിവാക്കല്‍, പരിഷ്കരി
ക്കല്‍, തുടങ്ങിയ പ്രരകിയകള്‍ സൂക്ഷിക്കുന്ന ഫയലുകള്‍?) പരിപാലിക്കാനും ആവശ്യമായ
നടപടിക്രമങ്ങള്‍ സ്വീകരിക്കേണ്ടത്‌ DBA ആണ്‌.

8.4.2 ആപ്പിക്കേഷന്‍ പ്രോഗ്രാമര്‍മാര്‍ (Application programmers)

ആപ്ലിക്കേഷന്‍ പ്രോരഗാമുകള്‍ AG] DBMS മായി സംവദിക്കുന്ന കമ്പ്യൂട്ടര്‍ പ്രൊഫഷണലു
കളാണ്‌ ആപ്ലിക്കേഷന്‍ പ്രോഗ്രഗാമര്‍മാര്‍. വിഷ്വല്‍ ബേസിക്‌, സി, സി... ജാവാ പോലുള്ള
കമ്പ്യൂട്ടര്‍ ഭാഷകള്‍ ഉപയോഗിച്ച്‌ എഴുതുകയും ഡാറ്റ കൈകാര്യം ചെയ്യുന്ന ഭാഷ (DML)
യിലൂടെ DBMS മായി സംവദിക്കുകയും ചെയ്യുന്ന പ്രോഗ്രാമുകളാണ്‌ ആപ്ലിക്കേഷന്‍
പ്രോഗ്രാമുകള്‍. ബാഹ്യസ്കീമയിലൂടെ ഡാറ്റയെ മികച്ച രീതിയില്‍ ആപ്ലിക്കേഷന്‍ പ്രോ
ഗ്രാമുകള്‍ ഉപയോഗിക്കുന്നു

8.4.3 സാങ്കേതിക പരിങ്കാനമുള്ള ഉപയോക്താക്കള്‍ (ടഠ്വ്ടമേഎ users)

എന്‍ജിനീയര്‍മാര്‍, ശാസ്ത്രജ്ഞര്‍, ബിസിനസ്സ്‌ വിശകലന വിദഗ്ധര്‍, 121315 സാകര്യങ്ങള്‍
നന്നായി പരിചയമുള്ളവര്‍ എന്നിവരാണ്‌ ഈ വിഭാഗത്തില്‍പ്പെടുന്നത്‌. അവരുടെ സങ്കീര്‍
ണമായ ആവശ്യകതകള്‍ നിറവേറ്റുന്നതിനായി സ്വന്തം ക്വറികളിലൂടെ (ഡാറ്റാബേസ്‌
അഭ്യര്‍ഥന) അവര്‍ 1213145-മായി സംവദിക്കുന്നു.

8.4.4 സാധാരണ ഉപയോക്താക്കള്‍ (Naive users)

മുമ്പേ എഴുതി തയാറാക്കിയ പ്രോഗ്രാമുകളില്‍ &yS1 DBMS സംവിധാനവുമായി സംവ
ദിക്കുന്നവരാണ്‌ സാധാരണ ഉപയോക്താക്കള്‍. 1213145നറെ വിശദാംശങ്ങള്‍ അവര്‍ അറി
യുകയോ ശ്രദ്ധിക്കുകയോ ഇല്ല. സാധാരണ ഉപയോക്താക്കള്‍ ഉയര്‍ന്നതലത്തിലുള്ള
ഡാറ്റ സംഗ്രഹം മാത്രം കൈകാര്യം ചെയ്യുന്നു. വെബിലൂടെ ഡാറ്റ ഉപയോഗിക്കുന്ന ആളുകള്‍,
ഒരു കാര്യാലയത്തിലെ ക്ളറിക്കല്‍ ജീവനക്കാര്‍, ഒരു സൂപ്പര്‍മാര്‍ക്കറ്റിലെ അല്ലെങ്കില്‍
ഹോട്ടലുകളിലെ ബില്ലിങ്‌ ക്ലര്‍ക്ക്‌, ബാങ്ക്‌; ക്ലാര്‍ക്ക്‌ മുതലായവര്‍ സാധാരണ ഉപയോക്താ
ക്കളാണ്‌.

നിങ്ങളുടെ പഠനപുരോഗതി അറിയറുക

1. ചോദ്യോത്തര രൂപത്തില്‍ ഡാറ്റാബേസുമായി സംവദിക്കുന്ന ഉപയോക്താവ്‌
എന്നറിയകെടുന്നു.

2. രു സുഷര്‍ലാര്‍ക്കറ്റിലെ Miele ക്ലാര്‍ക്ക്‌ ഏതുതരം ഉപയോക്താവാണ്‌?
3. ഒരു ഡാറ്റാബേസിന്‌ ഡാറ്റാസുരക്ഷ നല്‍കുന്ന ഉപയോക്താവാരാണ്‌?
4. ഒരു ഡാറ്റാബേസിന്റെ ഘടനയെ മാറ്റുന്ന ഉപയോക്താവാരാണ്‌ ?

5. ആപ്ളിക്കേന്‍ പ്രോ്രോം വഴി ഡാറ്റാബേസുമായി സംവദിക്കുന്ന ഉപയോക്താവ്‌
എന്നറിയക്െടുന്നു.

8.5 റിലേഷണല്‍ വാറ്റാമോഡല്‍ (Relational data model)

വൃതൃസ്ത പേരുകളാല്‍ തിരിച്ചറിയാവുന്നതും റിലേഷനുകളള്‍ എന്നറിയപ്പെടുന്നതു
മായ ഒരു കൂട്ടം പട്ടികകളുടെ ശേഖരമായി ഡാറ്റാ ബേസിനെ പ്രതിനിധാനം ചെയ്യുന്ന

കമ്പ്യുട്ടര്‍ സയന്‍സ്‌ - XI!

മാതൃകയാണ്‌ റിലേഷണല്‍ ഡാഠറ്റാമോഡല്‍ റിലേഷണല്‍ ഡാഠറ്റാമോഡലില്‍ ഡാറ്റയും
അവ തമ്മിലുള്ള ബന്ധങ്ങളും പട്ടിക രൂപത്തില്‍ അവതരിപ്പിക്കുവാന്‍ സാധിക്കും. ഈ
അവതരണരീതി ഒരു ഡാറ്റാബേസിന്റെ ആശയങ്ങള്‍ എളുപ്പത്തില്‍ മനസ്സിലാക്കാന്‍ സഹാ
യിക്കുന്നു.

ഇന്ന്‌, ഡാറ്റാബേസ്‌ ഉല്‍പ്പന്നങ്ങളില്‍ ഭൂരിഭാഗവും റിലേഷണല്‍ മോഡല്‍ അടിസ്ഥാന
മാക്കിയുള്ളതാണ്‌. അവ റിലേഷണല്‍ ഡാറ്റാബേസ്‌ നിര്‍വഹണ സംവിധാനം (RDBMS)
എന്നാണ്‌ അറിയപ്പെടുന്നത്‌. ഡാറ്റാപ്രാതിനിധ്യവും സങ്കീര്‍ണമായ അന്വേഷണങ്ങളും
ലളിതമായി അവതരിപ്പിക്കാന്‍ കഴിയുന്നു എന്നതാണ്‌ മറ്റ്‌ ഡാറ്റാമോഡലുകളില്‍ നിന്ന്‌
റിലേഷണല്‍ മോഡലിനെ വൃത്യസ്തമാക്കുന്നത്‌. ഒറാക്കിള്‍, മൈക്രോസോഫ്റ്റ്‌ SQL
സെര്‍വര്‍, MySQL, 12132, ഇന്‍ഫോമിക്സ്‌, ഇന്‍ഗ്രസ്‌ എന്നിവയാണ്‌ ജന്ര്പിയ RDBMS
പാക്കേജുകള്‍.

വാണിജ്യപരമായി ഏറ്റവുമധികം ഉപയോഗിക്കുന്ന റിലേഷണല്‍ മോഡല്‍ ഡാറ്റാബേസ്‌
സംവിധാനങ്ങളില്‍ സ്ര്രക്ചേര്‍ഡ്‌ ക്വറി ലാംഗ്വേജ്‌ (SQL), ക്വി ബൈ എക്സാംബിള്‍
(QBE) അല്ലെങ്കില്‍ ഡാറ്റലോഗ്‌ എന്നിവ ഉള്‍പ്പെടുന്ന ഒരു ചോദ്യഭാഷ അടങ്ങിയിരിക്കുന്നു.
വളരെ വ്യാപകമായി ഉപയോഗിക്കുന്ന SQL അടുത്ത അധ്യായത്തില്‍ നമ്മള്‍ പഠിക്കും.

8.6 RDBMS ലെ പദാവലികള്‍ (Terminologies in RDBMS)
റിലേഷണല്‍ ഡാറ്റാബേസുകളിലെ പ്രവര്‍ത്തനങ്ങള്‍ ചര്‍ച്ച ചെയ്യുന്നതിനു 204 RDBMS

മായി ബന്ധപ്പെട്ട ചില പദാവലികള്‍ പരിചയപ്പെടാം.
a). എന്റിറ്റി

മറ്റുള്ളവയില്‍ നിന്ന്‌ വേര്‍തിരിച്ചറിയാവുന്ന ഒരു വ്യക്തിയെ അല്ലെങ്കില്‍ ഒരു വസ്തുവിനെ
ADB) എന്ന്‌ പറയുന്നു. ഉദാഹരണത്തിന്‌, ഓരോ സ്‌കൂളും ഓരോ വിദ്യാര്‍ഥിയും ഓരോ
വൃത്യസ്ത എന്തിറ്റിയാണ്‌.

b) റിലേഷന്‍

ഡാറ്റാശേഖരത്തെ വരികളും നിരകളുമായി ക്രമീകരിക്കുന്നതാണ്‌ റിലേഷന്‍. പട്ടിക എന്നും
ഇത്‌ അറിയപ്പെടുന്നു. STUDENT എന്ന്‌ പേരുള്ള ഒരു റിലേഷന്‍, പട്ടിക 8.1 ല്‍ കാണിച്ചി
രിക്കുന്നു.

8. ഡാറ്റാബേസ്‌ നിര്‍വഹണ സംവിധാനം

STUDENT relation

S
§
§
Mahesh Commerce S
S
S
S

Joseph Commerce

Shaji Humanities
Bincy Science S

പട്ടിക 8.1 STUDENT desi200

൦) ടൂപിള്‍

ഒരു റിലേഷനിലെ വരികളെ (റെക്കോര്‍ഡുകള്‍) സാധാരണയായി ടൂപിള്‍ എന്ന്‌ പറയുന്നു.
ഒരു പ്രത്യേക എന്റിറ്റിയെ പ്രതിനിധീകരിക്കാന്‍ ഉപയോഗിക്കുന്ന മൂല്യങ്ങളുടെ ഒരു
പൂര്‍ണഗണം ഒരു വരി ഉള്‍ക്കൊള്ളുന്നു. പട്ടിക 8.1 ല്‍, STUDENT റിലേഷനിലെ ഓരോ
വരിയും ഓരോ വിദ്യാര്‍ഥിയുടെ പരീക്ഷാഫലത്തെ പ്രതിനിധീകരിക്കുന്നു.

0) ആട്രിബ്യൂട്ട്‌

ഒരു റിലേഷനിലെ നിരകളെ ആദഭ്രിബ്യയൂട്ടുകള്‍ എന്ന്‌ വിളിക്കുന്നു. AdmNo, Roll, Name,
Batch, Marks, Result എന്നിവ STUDENT റിലേഷന്റെ ആഭ്രിബ്യയൂട്ടുകളാണ്‌. ഓരോ
ആട്രിബ്യയൂട്ടിന്റെയും മൂല്യങ്ങള്‍ ഡൊമെയിന്‍ എന്ന മൂല്യങ്ങളുടെ സാധുത പട്ടികയില്‍
നിന്ന്‌ എടുക്കുന്നു.

൦ ഡിഗ്രി

ഒരു റിലേഷനിലെ നിരകളുടെ എണ്ണം ആ റിലേഷന്റെ ഡിഗ്രി നിര്‍ണയിക്കുന്നു. STU-
DENT എന്ന റിലേഷന്‌ ആറ്‌ നിരകള്‍ അല്ലെങ്കില്‍ ആഭ്രിബ്യയൂട്ടുകള്‍ ഉണ്ട്‌, അതിനാല്‍
STUDENT റിലേഷന്റെ ഡിഗ്രി ആറ്‌ ആകുന്നു.

0) കാര്‍ഡിനാലിറ്റി

ഒരു റിലേഷനിലെ വരികളുടെ അല്ലെങ്കില്‍ ടുപിളുകളുടെ എണ്ണം കാര്‍ഡിനാലിറ്റി എന്നറി
യപ്പെടുന്നു. STUDENT റിലേഷനില്‍ എട്ടു വരികള്‍ ഉണ്ട്‌, അതിനാല്‍ STUDENT
റിലേഷന്റെ കാര്‍ഡിനാലിറ്റി ഭ ആണ്‌.

കമ്പ്യുട്ടര്‍ സയന്‍സ്‌ - XI!

ഇ ഡൊമെയ്‌ന്‍

ഒരു നിരയെ പ്രതിനിധാനം ചെയ്യുന്ന മൂല്യങ്ങളുടെ ഗണമാണ്‌ ഒരു ഡൊമെയ്‌ൻ.
ഉദാഹരണത്തിന്‌, പട്ടിക 8.1 ല്‍ കാണിച്ചിരിക്കുന്ന STUDENT ബന്ധത്തില്‍ Batch എന്ന
നിരയുടെ ഡൊമെയിന്‍ {Science, Humanities, Commerce} എന്ന മൂല്യങ്ങളുടെ ഗണമാണ്‌.
അതായത്‌, ഈ ഗണത്തില്‍ നിന്നുള്ള ഏതെങ്കിലുമൊരു മൂല്യം Batch നിരയില്‍
ദൃശ്യമാകാം. അതുപോലെ തന്നെ, Result എന്ന നിരയുടെ ഡൊമെയ്‌ൻ ആണ്‌ {EHS,
NHS}.
h) സ്കീമ
ഒരു ഡാറ്റാബേസ്‌ രൂപകല്പന ചെയ്യുന്ന സന്ദര്‍ഭത്തില്‍ വ്ൃക്തമാക്കപ്പെടുന്ന ഡാറ്റാബേ
സിന്റെ ഘടനയെയോ വിവരണത്തെയോ ഡാറ്റാബേസ്‌ സ്‌കീമ എന്നുവിളിക്കുന്നു.
റിലേഷണല്‍ മോഡലില്‍, ഒരു റിലേഷന്റെ സ്കീമ അതിന്റെ പേര്‌, ഓരോ നിരയുടെയും
പേര്‌, ഓരോ നിരയുടെയും ഡാറ്റ തരം എന്നിവ വ്യക്തമാക്കുന്നു. ഉദാഹരണമായി, ഒരു
സ്കൂള്‍ ഡാറ്റാബേസിലെ വിദ്യാര്‍ഥികളുടെ വിവരങ്ങള്‍ ഇനിപ്പറയുന്ന ഘടനയുമായി
ബന്ധപ്പെടുത്തി സൂക്ഷിക്കാം:
STUDENT (Admno : integer,

Roll : integer,

Name : character(50),

Batch : character(20),

Marks — : decimal,

Result : character(4))
i) ഇന്‍സ്ററന്‍സ്‌
റിലേഷണല്‍ സ്‌കീമയില്‍ നിര്‍വചിച്ചിരിക്കും പ്രകാരം തുല്യയെണ്ണം നിരകളുള്ള ടുപിളു
കളുടെ ഒരു കൂട്ടത്തെയാണ്‌ റിലേഷന്റെ ഇന്‍സ്റ്റന്‍സ്‌ എന്നു പറയുന്നത്‌. നിരകളുടെ
പേരും ഡാറ്റ തരവും സൂചിപ്പിക്കുന്ന 6 നിരകള്‍ STUDENT റിലേഷനിലെ ഓരോ വരിക്കും
ഉണ്ടെന്ന്‌ മേല്‍ക്കാണുന്ന സ്‌കീമ വ്യക്തമാക്കുന്നു. STUDENT ബന്ധത്തിന്റെ
ഉദാഹരണമാണ്‌ പട്ടിക 8.1 ല്‍ കാണിച്ചിരിക്കുന്നത്‌.

നിങ്ങളുടെ പഠനപുരോഗതി അറിയദുക
1. വരികളും നിരകളുമായി ഡാറ്റയെ ക്രമീകരിച്ചിരിക്കുന്നതിനെ എന്ന്‌ പറയുന്നു.
2. ഒരു പട്ടികയിലെ ഒരു പ്രത്യേക എന്റിറ്റിയുടെ പൂര്‍ണമായ ഡാറ്റ നല്‍കുന്നു.
3. ഒരു റിലേഷനിലെ വരികളുടെ എണ്ണം ആണ്‌.

4. ഒരു റിലേഷനിലെ എണ്ണം റിലേഷന്റെ ഡിഗ്രി എന്നറിയകെടുന്നു

5. റിലേഷണല്‍ മോഡലുകളില്‍ ഡാറ്റ ക്രമീകരിച്ചിരിക്കുന്നത്‌ രീതിയിലാണ്‌.

8. ഡാറ്റാബേസ്‌ നിര്‍വഹണ സംവിധാനം

8.6.1 കീകള്‍ (Keys)

ഒരു റിലേഷനെ ടുപ്പിളുകളുടെ ഒരു ഗണമായി നിര്‍വചിക്കുന്നു. അതായത്‌ എല്ലാ നിരക
ളുടെയും മൂല്യങ്ങളുടെ സംയോജനം ഒന്നു തന്നെയാകുന്ന രണ്ടു ടൂപ്പിളുകള്‍ പാടില്ല.
അതിനാല്‍, ഒരു റിലേഷനിലെ ഓരോ ടുൂപ്പിളും തിരിച്ചറിയുവാന്‍ ഒരു മാര്‍ഗം ഉണ്ടായി
രിക്കണം. ഇത്തരം വ്ൃത്യാസങ്ങള്‍ സൃഷ്ടിക്കാന്‍ ഒരു കീയുടെ ആശയം നമ്മെ അനുവദി
ക്കുന്നു. ഒരു റിലേഷനിലെ ഓരോ ടുപ്പിളും മറ്റ്‌ ടൂപ്പിളുകളില്‍ നിന്ന്‌ അനന്യമായി വേര്‍തിരി
ക്കുന്നതിനുള്ള ഒരു ആദഭ്രിബ്യയൂട്ടിന്റെയോ അല്ലെങ്കില്‍ ഒരു കൂട്ടം ആഭ്രിബ്യൂട്ടുകളുടെയോ
ശേഖരമാണ്‌ കീ. ഒന്നിലധികം ആഭ്രിബ്യയൂട്ടുകള്‍ ചേര്‍ന്നാണ്‌ ഒരു കീ ഉണ്ടാകുന്നതെങ്കില്‍
അതിനെ കോംപോസിറ്റ്‌ (സംയുക്ത) കീ എന്നു പറയുന്നു. ഒരു റിലേഷനിലെ ഓരോ
ടൂപ്പിളും വൃത്യസ്തമായതിനാല്‍ അതിന്റെ മുഴുവന്‍ ആട്രിബ്യയൂട്ടുകളും പരിഗണിച്ചാല്‍
അത്‌ ഒരു കീ ആയിരിക്കും. എന്നിരുന്നാലും ചെറിയ കീകള്‍ ഉണ്ടെങ്കില്‍, പ്രായോഗിക
കാരണങ്ങളാല്‍, അവയെയാണ്‌ പരിഗണിക്കുന്നത്‌.

ഒ. കാന്‍ഡിഡേറ്റ്‌ കീ

ഒരു റിലേഷനിലെ ഒരു ട്യൂപ്പിളുകളെ അനന്യമായി തിരിച്ചറിയുന്ന ആദഭ്രിബ്യയൂട്ടുകളുടെ
ചുരുങ്ങിയ ഗണമാണ്‌ ഒരു കാന്‍ഡിഡേറ്റ്‌ കീ. പട്ടിക 8.1 ലെ STUDENT റിലേഷനില്‍,
AdmNo ന്‌ ഓരോ ട്യൂപ്പിളുകളും തിരിച്ചറിയുവാന്‍ കഴിയും. അതിനാല്‍ ഇത്‌ ഒരു കാന്‍ഡി
ഡേറ്റ്‌ കീയായി കണക്കാക്കാം. ഒരു റിലേഷനില്‍ ഒന്നിലധികം കാന്‍ഡിഡേറ്റ്‌ കീകള്‍
ഉണ്ടായിരിക്കാം. കൂടാതെ, ഒരു കാന്‍ഡിഡേറ്റ്‌ കീ ഒരു ആട്രിബ്യൂട്ട്‌ മാത്രം ആകണമെന്നില്ല.
അത്‌ ഒരു സംയുക്ത കീയും ആകാം. ഉദാഹരണമായി, Roll, Batch, Year എന്നിവയുടെ
സംയോജനവും ഒരു പ്രത്യേക വിദ്യാര്‍ഥിയെ തിരിച്ചറിയുവാന്‍ ഉപയോഗിക്കാം. അതി
നാല്‍, Roll + Batch + Year എന്നത്‌ STUDENT റിലേഷന്റെ മറ്റൊരു കാന്‍ഡിഡേറ്റ്‌ കീയായി
പരിഗണിക്കപ്പെടാം.

1. പ്രൈമറി കീ

ഡാറ്റാബേസ്‌ സൃഷ്ടാവ്‌ പട്ടികയിലെ ഒരു ട്യൂപ്പിള്‍ തിരിച്ചറിയാനായി തിരഞ്ഞെടു
ത്തിരിക്കുന്ന കാന്‍ഡിഡേറ്റ്‌ കീകളില്‍ ഒന്നാണ്‌ പ്രൈമറി കീ. ഒരു റിലേഷനിലെ വരികളെ
തനതായി തിരിച്ചറിയാന്‍ കഴിയുന്ന ഒന്നോ അതിലധികമോ നിരകളുടെ ഒരു കൂട്ടമാണ്‌
പ്രൈമറി കീ. ഓരോ എന്‍റിറ്റിയേയും തനതായി തിരിച്ചറിയുന്നതിനാല്‍ അത്‌ ശുന്യമോ,
പകര്‍പ്പോ ആകാന്‍ പാടില്ല.

പ്രൈമറി കീ സ്ഥാനത്തേക്കുള്ള സ്ഥാനാര്‍ഥികളായി കാന്‍ഡിഡേറ്റ്‌ കീകളെ കണക്കാ
ക്കുന്നു. കാന്‍ഡിഡേറ്റ്‌ കീകളില്‍ നിന്ന്‌ ആഭ്രിബ്യയൂട്ടുകളുടെ എണ്ണം ഏറ്റവും കുറവുള്ള
സംയുക്തത്തെ പ്രൈമറി കീയായി തിരഞ്ഞെടുക്കാം. പട്ടിക 8.1 ല്‍ (STUDENT റിലേഷ
നില്‍) AdmNo പ്രൈമറി കീയായി ഉപയോഗിക്കാം. അതായത്‌, STUDENT റിലേഷനിലെ
രണ്ട്‌ വിദ്യാര്‍ഥികള്‍ക്ക്‌ ഒരേ AdmNo ഉണ്ടായിരിക്കില്ല. പട്ടിക 8.1 ല്‍, Name ആഭ്രിബ്യയൂട്ടില്‍
തനതായ മൂല്യങ്ങള്‍ നമുക്ക്‌ കാണാന്‍ സാധിക്കും. എന്നാല്‍ യഥാര്‍ഥ സാഹചര്യത്തില്‍
വിദ്യാര്‍ഥികളില്‍ കൂടുതല്‍ പേര്‍ക്ക്‌ ഒരേ പേര്‌ ഉണ്ടാകും.

൦. ആള്‍ട്ടര്‍നേറ്റ്‌ കീ

പ്രൈമറി കീ അല്ലാത്ത ഒരു കാന്‍ഡിഡേറ്റ്‌ കീയെ ആള്‍ട്ടര്‍നേറ്റ്‌ കീ എന്നു വിളിക്കുന്നു.
രണ്ടോ അതിലധികമോ കാന്‍ഡിഡേറ്റ്‌ കീകള്‍ ഉണ്ടെങ്കില്‍, അവയിലൊന്നിനു മാത്രമേ
പ്രൈമറി കീയായി സങ്ജമാകാന്‍ കഴിയൂ. അവശേഷിക്കുന്ന ബാക്കി കീകളാണ്‌
ആള്‍ട്ടര്‍നേറ്റ്‌ കീ. തന്നിരിക്കുന്ന ഉദാഹരണത്തില്‍ AdmNo പ്രൈമറി കീ ആയി
എടുത്തിരിക്കുന്നതിനാല്‍ Roll + Batch + Year എന്ന സംയോജനമാണ്‌ ആള്‍ട്ടര്‍നേറ്റ്‌ കീ.

കമ്പ്യുട്ടര്‍ സയന്‍സ്‌ - XI!

0. ഫോറിന്‍ കീ

ഒരു റിലേഷനില്‍ മറ്റൊരു റിലേഷനിലെ പ്രൈമറി കീയുണ്ടെങ്കില്‍ ആ കീയെ ഫോറിന്‍
കീ എന്നു വിളിക്കാം. രണ്ടോ അതിലധികമോ ടേബിളുകളുമായി ബന്ധപ്പെടുത്തുന്ന
തിനായി ഒരു ഫോറിന്‍ കീ ഉപയോഗിക്കുമ്പോള്‍ ഇത്‌ റഫറന്‍സ്‌ കീ എന്നും അറിയ
പ്പെടുന്നു. പട്ടിക 8.2 ല്‍ കാണിച്ചിരിക്കുന്നതുപോലെ Batch name നു പകരം Batch code
ഉപയോഗിച്ചിട്ടുണ്ടെന്ന്‌ കരുതുക. പട്ടിക 8.308 കാണിച്ചിരിക്കുന്നതുപോലെ നമുക്ക്‌ BATCH
എന്ന ഒരു റിലേഷനുമുണ്ട്‌. BatchCode എന്നത്‌ BATCH റിലേഷനിലെ പ്രൈമറി കീ
ആയിരിക്കുമെന്നത്‌ വ്യക്തമാണ്‌. എന്നാല്‍ ഇത്‌ STUDENT പട്ടികയില്‍ കീ അല്ലാത്ത
നിരയായി ഉപയോഗിക്കുന്നു. അങ്ങനെ, BatchCode എന്നത്‌ STUDENT റിലേഷന്റെ
കാര്യത്തില്‍ ഒരു ഫോറിന്‍ കീ ആയി പരാമര്‍ശിക്കപ്പെടുന്നു.

STUDENT relation

‘AdmiNo Roll Name BashCods Masks Result
ടട കജ
ഇലി
നി്‌

ഭി ഠോ | 350 | EHS
“ioe [2 | icy | 82 | 300 | BHS

പട്ടിക 8.2: പരിഷ്കരിച്ച. റിലേഷത്‌

BATCH relation

നി യ്യ
1. ഒരു റിലേഷനില്‍ ഒരു വരി അല്വി

തീയമായി തിരിച്ചറിയാന്‍ കഴിയുന്ന Science 50
കെടുന്നു.
2. ഒരു റിലേഷനില്‍ എത്ര പ്രൈമറി Commerce
കീകള്‍ സാധ്യമാണ്‌ 2 Canmmexae
* oa Ep sos Pan no കല eo
ളാണ്‌ Emp_code, Pan_no. Emp_code @M 06{pJ
മറി കീയായി നിര്ചയിച്ചാല്‍, Pan_no Humanities 00

ആയിരിക്കും പട്ടിക 8.3 BATCH clean

4. ഒരു കീയില്‍ ഒന്നില്‍ കുടുതല്‍ ആട്രിബുട്ടുകളുണ്ടെങ്കില്‍ അതിനെ
കീയെന്നുപറയുന്നു.

5. രണ്ട്‌ റിലേഷനുകളെ ബന്ധിരിക്കുന്നതിന്‌ കി ഉപയോരിക്കുന്നു.

8. ഡാറ്റാബേസ്‌ നിര്‍വഹണ സംവിധാനം

8.7 റിലേഷണല്‍ ബീജഗണിതം (Relational algebra)

ഒരു ഡാറ്റാബേസിന്റെ ഘടനയും രൂപകല്പനയും നിര്‍ണയിക്കുന്നതിന്‌ റിലേഷണല്‍
മോഡല്‍ പ്രദാനം ചെയ്യുന്ന ആശയങ്ങളെകുറിച്ച്‌ നമ്മള്‍ ചര്‍ച്ചചെയ്തു. ഡാറ്റാബേസ്‌
രൂപകല്പന ചെയ്ത്‌ ഡാറ്റ സൂക്ഷിച്ചു കഴിഞ്ഞാല്‍, ആവശ്ൃത്തിനനുസരിച്ച്‌ വിവരം തിരി
ച്ചെടുക്കേണ്ടതാണ്‌. ഇതിനായി RDBMS വൈവിധ്യമാര്‍ന്ന പ്രവര്‍ത്തനങ്ങള്‍ കാഴ്ച വയ്‌
ക്കുന്നു. ഒരു ഡാറ്റാബേസിലെ മുഴുവന്‍ റിലേഷനുകളെയും കൈകാര്യം ചെയ്യുന്ന പ്രവര്‍
ത്തനങ്ങളുടെ ശേഖരം റിലേഷണല്‍ ബീജഗണിതം എന്നറിയപ്പെടുന്നു. ഈ പ്രവര്‍ത്ത
നങ്ങള്‍ റിലേഷണല്‍ മോഡലുമായി ബന്ധപ്പെട്ട ഒരു പ്രത്യേകതരം ഭാഷയായ അന്വേ
ഷണ ഭാഷയുടെ (query language) സഹായത്തോടെ നടത്തപ്പെടുന്നു. ഈ പ്രവര്‍ത്തന
ങ്ങള്‍ നടത്തുന്നതിനുവേണ്ടി അടുത്ത അധ്യായത്തില്‍ ആ ഭാഷ നമ്മള്‍ പഠിക്കും. റിലേഷ
ണല്‍ ബീജഗണിതത്തിലെ വിവിധ പ്രവര്‍ത്തനങ്ങളില്‍ ഒന്നോ രണ്ടോ റിലേഷനുകള്‍
ഇന്‍പുട്ട്‌ ആയി സ്വീകരിച്ച്‌ പുതിയ ഒരു റിലേഷന്‍ ഉണ്ടാക്കുന്നു. സെലക്ട്‌ (SELECT),
പ്രൊജക്റ്റ്‌ (PROJECT), യൂണിയന്‍ (UNION), ഇന്റര്‍സെക്ഷന്‍ (INTERSECTION), സെറ്റ്‌
ഡിഫറന്‍സ്‌ (SET DIFFERENCE), കാര്‍ട്ടീഷ്യന്‍ പ്രൊഡക്റ്റ്‌ (CARTESIAN PRODUCT)
തുടങ്ങിയവയാണ്‌ റിലേഷണല്‍ ബീജഗണിതത്തിലെ അടിസ്ഥാനപരമായ പ്രവര്‍ത്തന
ങ്ങള്‍. SELECT, PROJECT എന്നിവ ഒരു റിലേഷനില്‍ മാത്രം പ്രവര്‍ത്തിക്കുന്നതിനാല്‍
അത്‌ യൂനറി പ്രവര്‍ത്തനമാണ്‌. ബാക്കിയുള്ള പ്രവര്‍ത്തനങ്ങള്‍ രണ്ട്‌ റിലേഷനുകളില്‍
പ്രവര്‍ത്തിക്കുന്നതിനാല്‍ ബൈനറി പ്രവര്‍ത്തനങ്ങളാണ്‌.

8.7.1 സെലക്ട്‌ പ്രവര്‍ത്തനം (51.1൨ operation)

നല്‍കിയിരിക്കുന്ന ഒരു ഉപാധി അനുസരിക്കുന്ന വരികള്‍ ഒരു റിലേഷനില്‍ നിന്ന്‌ തിര
ഞ്ഞെടുക്കുന്നതിന്‌ സെലക്ട്‌ പ്രവര്‍ത്തനം ഉപയോഗിക്കുന്നു. ഉപയോക്താവിന്റെ ഇഷ്ടാ
നുസരണം നിശ്ചിത വരികള്‍ തിരഞ്ഞെടുക്കാനുള്ള ഒരു ഉപയോക്തൃ നിര്‍ദിഷ്ട വ്യവസ്ഥ
യാണ്‌ ഉപാധി (predicate). സിഗ്മ (൭) എന്ന അക്ഷരം ഉപയോഗിച്ച്‌ ഈ പ്രവര്‍ത്തനം
സൂചിപ്പിക്കുന്നു. സെലക്ടിന്റെ പൊതുവായ മാതൃക താഴെ കൊടുക്കുന്നു.

൭ condition Relation)

SELECT പ്രവര്‍ത്തനത്തിന്‍റെ ഫലമായുണ്ടാകുന്ന റിലേഷനില്‍ തന്നിട്ടുള്ള വ്യവസ്ഥകള്‍
പാലിക്കപ്പെടുന്ന എല്ലാ വരികളും അടങ്ങിയിരിക്കുന്നു. റിലേഷണല്‍ ബീജഗണിതത്തില്‍
താഴെപ്പറയുന്ന താരതമ്യ ഓപ്പറേറ്ററുകള്‍ ഉപയോഗിക്കുന്നു. < (കുറവ്‌), <= (കുറവോ
അല്ലെങ്കില്‍ തുല്യമോ, > (കൂടുതല്‍), >= (കൂടുതലോ അല്ലെങ്കില്‍ തുല്യമോ, = (തുല്യ
മാണ്‌), <> (തുല്യമല്ല) എന്നീ താരതമ്യ ഓപ്പറേറ്ററുകള്‍ ലളിതമായ വ്യവസ്ഥകള്‍ സജ്ജ
മാക്കുന്നതിന്‌ ഉപയോഗിക്കുന്നു. അതുപോലെ ലോജിക്കല്‍ ഓപ്പറേറ്ററുകളായ v (OR), ”

(AND), ! (NOT) എന്നിവ സമ്മിശ്ര വ്യവസ്ഥകള്‍ നിര്‍മ്മിക്കാനും ഉപയോഗിക്കുന്നു,

കമ്പ്യുട്ടര്‍ സയന്‍സ്‌ - XII

SELECT പ്രവര്‍ത്തനം വിശദീകരിക്കുന്നതിന്‌, പട്ടിക 8.1 ല്‍ നല്‍കിയിട്ടുള്ള STUDENT
റിലേഷന്‍ പരിഗണിക്കുക. എങ്ങനെയാണ്‌ SELECT പ്രവര്‍ത്തനം റിലേഷണല്‍
ബീജഗണിതത്തില്‍ ഉപയോഗിക്കുന്നതെന്നും അത്‌ എന്ത്‌ ഫലമാണ്‌ ഉണ്ടാക്കുന്നതെന്നും
താഴെ കൊടുത്തിരിക്കുന്ന ഉദാഹരണങ്ങള്‍ വ്യക്തമാക്കുന്നു

ഉദാഹരണം 8.1: ഉന്നതവിദ്യാഭ്യാസത്തിന്‌ യോഗ്യതയുള്ള എല്ലാ വിദ്യാര്‍ഥികളെയും
തിരഞ്ഞെടുക്കുക.

o , STUDENT)

Result="EHS'

പട്ടിക 8.4 ല്‍ കാണിച്ചി
രിക്കുന്ന തുപോലെ
യുള്ള ഒരു റിലേഷനാ
ണ്‌ ഈ പ്രവര്‍ത്തന
ത്തിന്റെ ഫലം.

ഉദാഹരണം 8.2: കോ
മേഴ്‌സ്‌ ബാച്ചിലെ പരാ

ജയപ്പെട്ട വിദ്യാര്‍ഥികളെ
തിരഞ്ഞെടുക്കുക പട്ടിക 8.4: ഉദാഹരണം 8.1 Of ഒെട്ട്ചു്ട്‌
© Result="NHS" /\ Batch="Commerce" (STUDENT)

രിക്കുന്നതു പോലെ Mahesh | Commerce
യുള്ള ഒരു റിലേഷനാണ്‌

ഈ പ്രവര്‍ത്തനത്തിന്റെ
ഫലം.

soma aN a RB BH WHA

പട്ടിക 8.5: ഉമാഫണം 8.2 Of BIS 04S”

ഉദാഹരണം 8.3: സയന്‍സ്‌ അല്ലെങ്കില്‍ കൊമേഴ്‌സിലുള്ള എല്ലാ വിദ്യാര്‍ഥികളെയും
തിരഞ്ഞെടുക്കുക.

(STUDENT)

© Batch="Science" പ Batch="Commerce"

പട്ടിക 8.6 ലെ ജട്ട്പുട്ട്‌ ഈ ഓപ്പറേഷന്‍ കാണിക്കുന്നു

വ | Sachin | Seiece | 480) EHS
നി്‌ 410) EHS

ite [| fp വി
നി Bins | Scenes | 300 | 1

പട്ടിക 8.6.
DBINCHM 8.3 OF BIS AS
8. ഡാറ്റാബേസ്‌ നിര്‍വഹണ സംവിധാനം

8.7.2 പ്രൊജക്റ്റ്‌ പ്രവര്‍ത്തനം (PROJECT operation)

PROJECT പ്രവര്‍ത്തനം റിലേഷനില്‍ നിന്ന്‌ ചില നിരകള്‍ തിരഞ്ഞെടുക്കുകയും ഒരു
പുതിയ റിലേഷന്‍ രൂപപ്പെടുത്തുകയും ചെയ്യുന്നു. ഏതെങ്കിലും പ്രവര്‍ത്തനത്തിന്‌ ഒരു
റിലേഷനിലെ ഏതാനും നിരകള്‍ മാത്രം തിരഞ്ഞെടുക്കണമെങ്കില്‍ PROJECT പ്രവര്‍
ത്തനം ഉപയോഗിക്കാം. പൈ (൬) എന്ന അക്ഷരം ഉപയോഗിച്ച്‌ ഈ പ്രവര്‍ത്തനം സൂചി
പ്പിക്കുന്നു. PROJECT പ്രവര്‍ത്തനത്തിന്‍റെ പൊതുവായ മാതൃക താഴെ പറയുന്നു.

മ An (Relation)

Al, A2,
ഇവിടെ Al, A2,...., എന്നത്‌ തന്നിരിക്കുന്ന റിലേഷനുകളിലെ നിരകളാകുന്നു.

ഉദാഹരണം 8.4: STUDENT റിലേഷനിലെ | Name Marks Result
പേര്‌, റിസല്‍ട്ട്‌, മാര്‍ക്ക്‌ എന്നീ നിരകള്‍ തിര

അത്‌
“Rabel ച അഭ
ഈ പ്രക്രിയയുടെ ഫലം പട്ടിക 8.7 ല്‍ നല്‍കി
യിഭിക്കുനനു

h 350

SELECT, PROJECT apan' juaséemanere (Meee a 2
ളെ ഒരൊറ്റ പ്രസ്താവനയില്‍ സംയോജിപ്പി ടിച് 25 | NHS
ക്കുവാന്‍ സാധിക്കും. ഇതിന്റെ വിശദികരണം

ഉദാഹരണം 8.5 ലും 8.6 ലും കൊടുത്തിട്ടുണ്ട്‌ പട്ടിക 8.7: ഉമാഹരണം 8.4 റെ ഒ്ട്പുട്ട്‌

Nelson

ഞ്ഞെടുക്കുക.

i

| Zz
B| ALB HD BAH

est

Z

n

ഉദാഹരണം 8.5: ഉന്നത പഠനത്തിനു യോഗ്യരായ വിദ്യാര്‍
ഥികളുടെ അഡ്മിഷന്‍ നമ്പരും പേരും തിരഞ്ഞെടുക്കുക.

ന (STUDENT))

AdmNo, Name (൦ result="—EHS"

ഈ പ്ര്രകിയയുടെ ഫലമായുണ്ടായ റിലേഷന്‍ പട്ടിക 8.8 ല്‍
കൊടുത്തിട്ടുണ്ട്‌. ഫലത്തിന്റെ കൃത്യത പരിശോധിച്ചുറപ്പി
ക്കുന്നതിനു പട്ടിക 8.4 ഉപയോഗിച്ച്‌ താരതമ്യം ചെയ്യുക.

Joseph

. പട്ടിക 8.8: DBIWNEHM 8.5 OF
ഉദാഹരണം 8.6: ഉന്നതവിദ്യാഭ്യാസത്തിന്‌ യോഗ്യരല്ലാത്ത 850.5"

ഹ്യുമാനിറ്റീസ്‌ ബാച്ചിലെ വിദ്യാര്‍ഥികളുടെ പേരും മാര്‍ക്കു

തെ തി

ചന (© sates" /\ Batch="Humanities" (STUDENT)) Fathima 200
കൂട്ടിയിണക്കിയ ഈ പ്രവര്‍ത്തനങ്ങളുടെ ഫലം പട്ടിക 8.9 Shaji 205
ല്‍ കാണിച്ചിരിക്കുന്നു. പട്ടിക 8.9: കൂമാഹരണം 8.6 OF

BISONS

കമ്പ്യുട്ടര്‍ സയന്‍സ്‌ - XI!

8.7.3 യൂണിയന്‍ പ്രവര്‍ത്തനം (UNION operation)

UNION പ്രവര്‍ത്തനം ഒരു ബൈനറി ഓപ്പറേഷനാണ്‌. അത്‌ രണ്ട്‌ നിര്‍ദിഷ്ട റിലേഷനുക
ളിലെ എല്ലാ വരികളും അടങ്ങുന്ന ഒരു പുതിയ റിലേഷന്‍ തരുന്നു. 'U' എന്ന ചിഹ്നം
കൊണ്ട്‌ UNION പ്രവര്‍ത്തനം സൂചിപ്പിക്കുന്നു. രണ്ടു റിലേഷനുകളും യൂണിയന്‍ അനു
രൂപമായിരിക്കുകയും ഫലത്തിന്റെ സ്കീമ ആദ്യ റിലേഷന്റെ സ്‌കീമയ്ക്ക്‌ സമാനമായി
രിക്കുകയും ചെയ്യും. രണ്ട്‌ റിലേഷനുകള്‍ യൂണിയന്‍ അനുരൂപമാണെങ്കില്‍, അവയ്ക്ക്‌
ഒരേ എണ്ണം നിരകളും, സമാനമായ നിരകള്‍ക്ക്‌ സമാന ഡൊമെയ്നുമായിരിക്കണം.
യൂണിയന്‍ അനുരൂപത നിര്‍വചിക്കുന്നതിന്‌ നിരകളുടെ പേരുകള്‍ പരിഗണിക്കാറില്ല
എന്നത്‌ ശ്രദ്ധിക്കുക.

പട്ടിക 8.10 ലും 8.11 ലും നല്‍കിയിരിക്കുന്ന ARTS, SPORTS എന്നീ രണ്ട്‌ റിലേഷനുകള്‍
പരിഗണിക്കുക. ഇവയില്‍ യഥാക്രമം കലാമേളയില്‍ പങ്കെടുക്കുന്ന വിദ്യാര്‍ഥികളുടെ
വിശദാംശങ്ങളും കായികമേളയില്‍ പങ്കെടുക്കുന്ന വിദ്യാര്‍ഥികളുടെ വിശദാംശങ്ങളും
അടങ്ങിയിരിക്കുന്നു. AdmNo, Name, BatchCode എന്നിവ ARTS, SPORTS എന്നീ റിലേഷ
നുകളിലെ നിരകളാണ്‌. ഈ രണ്ട്‌ റിലേഷനുകളും യൂണിയന്‍ അനുരൂപമാണെന്നത്‌
വൃക്തമാണ്‌. അതായത്‌, ഈ രണ്ട്‌ റിലേഷനുകളിലും ഒരേ എണ്ണം നിരകള്‍ ഉണ്ട്‌, സദൃശ
മായ നിരകളുടെ തരവും ഒരുപോലെയാണ്‌.

SPORTS relation

ARTS relation

BatchCode
പം || Name ഖെ ഥാ സച്‌ C2
Stor ടം ൧ | Fathima | HO
പ | Fathima യേ | | 105 | Neon | HO
10s | അനന |
വ രം si) «| 108 | Biney ടമ |
130 ന്നി

“154 [Nevin | cr) 164 | Rachana | st

പട്ടിക 8.10: ARTS പട്ടിക 8.11: SPORTS
ARIS U SPORTS agen loaned ens [Paseo റയ
ലോ, സ്പോര്‍ട്സിലോ അല്ലെങ്കില്‍ രണ്ടി
ANCA പങ്കെടുക്കുന്ന വിദ്യാര്‍ഥികളുടെ വിശ _ 103 സ്വത H2
ദാംശങ്ങള്‍ നല്‍കുന്നു. അതായത്‌, ARTS U C2
SPORTS പട്ടിക 8.12 ല്‍ കാണിച്ചിരിക്കുന്നതു റി
പോലെയുള്ള ഒരു റിലേഷന്‍ നല്‍കുന്നു. wek
ഈ ടേബിളില്‍ ARTS അല്ലെങ്കില്‍ SPORTS Cl
അല്ലെങ്കില്‍ രണ്ടിലുമുള്ള റെക്കോര്‍ഡുകള്‍ 154 Nevin C1
ഉള്‍പ്പെടുന്നു. അതേ സമയം തനിപ്പകര്‍പ്പ്‌ ഒഴി 102 Rahul C2
വാക്കുകയും ചെയ്യുന്നു. പട്ടിക 8.12 ല്‍ 103, H2
വിദയ ികളുടെ കള്‍ രിക മോ 2
വിദ്യാര്‍ഥികളുടെ രേഖകള്‍ ഒരിക്കല്‍ മാത്രമേ

S1

പട്ടിക 8.12: ARTS SPORTS

ലഭ്യമാകൂ.

8. ഡാറ്റാബേസ്‌ നിര്‍വഹണ സംവിധാനം

8.7.4 ഇന്റര്‍സെക്ഷന്‍ പ്രവര്‍ത്തനം (111171451൩ operation)

INTERSECTION പ്രവര്‍ത്തനവും ഒരു ബൈനറി പ്രവര്‍ത്തനമാണ്‌. അത്‌, രണ്ട്‌ നിര്‍ദിഷ്ട
റിലേഷനുകളിലെ പൊതുവായ എല്ലാ വരികളും അടങ്ങുന്ന ഒരു പുതിയ റിലേഷന്‍
തരുന്നു. [1] എന്നചിഹ്നം കൊണ്ട്‌ INTERSECTION പ്രവര്‍ത്തനം സൂചിപ്പിക്കുന്നു. രണ്ടു
റിലേഷനുകളും യൂണിയന്‍ അനുരൂപമായിരിക്കുകയും ഫലത്തിന്റെ സ്കീമ ആദൃ
റിലേഷന്റെ സ്‌കീമയ്ക്ക്‌ സമാനമായിരിക്കുകയും ചെയ്യും. രണ്ട്‌ റിലേഷനുകള്‍ യൂണിയന്‍
അനുരൂപമാണെങ്കില്‍, അവയ്ക്ക്‌ ഒരേ എണ്ണം നിരകളും, സമാനമായ നിരകള്‍ക്ക്‌ സമാന
ഡൊമെയ്നുമായിരിക്കണം. യൂണിയന്‍ അനുരൂപത നിര്‍വചിക്കുന്നതിന്‌ നിരകളുടെ
പേരുകള്‍ പരിഗണിക്കാറില്ല എന്നത്‌ ശ്രദ്ധിക്കുക.

നാം 8.10, 8.11 എന്നീ റിലേഷനുകളില്‍
INTERSECT പ്രവര്‍ത്തനം നടത്തുകയാ
ണെങ്കില്‍, ആര്‍ട്സിലും സ്പോര്‍ട്സിലും
പൊതുവായി പങ്കെടുക്കുന്ന വിദ്യാര്‍ഥിക
ളുടെ വിശദാംശങ്ങള്‍ ലഭിക്കും. അതായത്‌
ARTS 0 SPORTS റിലേഷനില്‍ ARTS,
SPORTS എന്നിവ രണ്ടിലുമുള്ള വരികള്‍ മാ
ത്രമേ ഉണ്ടാകു (പട്ടിക 8.13)

പട്ടിക 2. 424076൨൦ SPORTS

8.7.5 സെറ്റ്‌ ഡിഫറന്‍സ്‌ പ്രവര്‍ത്തനം (SET DIFFERENCE operation)

SET DIFFERENCE പ്രവര്‍ത്തനവും ഒരു
ബൈനറി പ്രവര്‍ത്തനമാണ്‌. അത്‌, ആദ്യ
റിലേഷനില്‍ ഉള്ളതും രണ്ടാമത്തെ റിലേഷ
നില്‍ ഇല്ലാത്തതുമായ എല്ലാ വരികളും അട
ങ്ങുന്ന ഒരു പുതിയ റിലേഷന്‍ തരുന്നു.
എന്നചിഹ്നം കൊണ്ട്‌ SET DIFFERENCE,
പ്രവര്‍ത്തനം സൂചിപ്പിക്കുന്നു. ഇവിടെയും
രണ്ടു റിലേഷനുകളും യൂണിയന്‍ അനുരൂപ
മായിരിക്കണം.

ARTS — SPORTS റിലേഷനില്‍, ആര്‍ട്സില്‍
പങ്കെടുക്കുകയും എന്നാല്‍ സ്പോര്‍ട്സില്‍
പങ്കെടുക്കാത്തതുമായ വിദ്യാര്‍ഥികളുടെ
വിശദാംശങ്ങള്‍ ലഭിക്കും. അതായത്‌ ARTS
— SPORTS റിലേഷനില്‍ പട്ടിക 8.14ല്‍ കാ
ണിച്ചിരിക്കുന്നതുപോലെ ARTS ല്‍ ഉള്ള

ണം Name BatchCode
ol9)@ 8.14: ARTS - SPORTS
| AdmNo സം BatchCode

108 Bincy $2
164 Rachana S1

പട്ടിക 8.15: SPORTS - ARTS

തും, എന്നാല്‍ SPORTS ല്‍ ഇല്ലാത്തതുമായ വരികള്‍ ഉണ്ടാകും. അതുപോലെ 51൨15
- ARTS റിലേഷനില്‍ പട്ടിക 8.15 ല്‍ കാണിച്ചിരിക്കുന്നതു പോലെ SPORTS ല്‍ ഉള്ളതും,
എന്നാല്‍ ARTS ല്‍ ഇല്ലാത്തതുമായ വരികളും ഉണ്ടാകും.

8.7.6 കാര്‍ട്ടിഷ്യന്‍ പ്രൊയക്ട്‌ പ്രവര്‍ത്തനം (CARTESIAN PRODUCT operation)

രണ്ട്‌ റിലേഷനുകളില്‍ നിന്നുള്ള വരികളുടെ സാധ്യമായ എല്ലാ കൂടിച്ചേരലുകളും ഉള്‍ക്കൊ
ള്ളുന്ന ഒരു റിലേഷന്‍ കാര്‍ട്ടീഷ്യന്‍ പ്രൊഡക്ട്‌ നല്‍കുന്നു. പുതിയ റിലേഷന്റെ ഡിഗ്രി

കമ്പ്യുട്ടര്‍ സയന്‍സ്‌ - XI!

(ആഭ്രിബ്യൂട്ടുകളുടെ എണ്ണം) രണ്ട്‌ റിലേഷനുകളുടെയും ആകെ ഡിഗ്രിക്ക്‌ തുല്യമാണ്‌.
ഇതിന്റെ കാര്‍ഡിനാലിറ്റി (വരികളുടെ എണ്ണം) രണ്ട്‌ റിലേഷനിലുമുള്ള വരികളുടെ എണ്ണ
ത്തിന്റെ ഗുണനഫലമാണ്‌. കാര്‍ട്ടീഷ്യന്‍ പ്രൊ

WAY സൂചിപ്പിക്കുന്നതിന്‌ 'x' (ക്രോസ്‌) ചി TEACHER relation

LZ എന്നും അറിയപ്പെടുന്നു. ആദ്യത്തെ റിലേ

ഷനിലെ എല്ലാ വരികളും രണ്ടാമത്തെ റിലേ 1001 English
ഷന്റെ വരികളുമായി കൂടിച്ചേര്‍ന്ന്‌ പുതിയ 1002

ബന്ധത്തിന്റെ വരികള്‍ രൂപപ്പെടുത്തുന്നു. പിക TEACHER റിജഷര്‍

പട്ടിക 8.16ല്‍ കാണിച്ചിരിക്കുന്ന TEACHER
റിലേഷന്‍ നമുക്ക്‌ പരിഗണിക്കാം. പട്ടിക 8.2 ലെ

STUDENT റിലേഷനുമായുള്ള ഈ റിലേഷന്റെ കാര്‍ട്ടീഷ്യന്‍ പ്രൊഡക്ട്‌ പ്രവര്‍ത്തന
ത്തിന്റെ ഫലം പട്ടിക 8.19 ല്‍ കാണിച്ചിരിക്കുന്നു. STUDENT റിലേഷനിലെ ഓരോ വരിയും
TEACHER റിലേഷനിലെ വരികളുമായി കൂടിച്ചേര്‍ന്നതായി ഈ പട്ടിക കാണിക്കുന്നു.

ത
വജ കക ടെ മ eos | rear

നി
102 Rahul Co r
pmo | ws | ot ! Eng
1

| Fatima |

106 Joseph
107 24 Shaji

107 07 24 Shai Sha

പട്ക 8.19: STUDENT X TEACHER

ക നമുക്ക്‌ സംഗ്രഹിക്കാം

1213145ലെ അടിസ്ഥാന ആശയങ്ങളെക്കുറിച്ചും അതിന്റെ ഘടകങ്ങളെക്കുറിച്ചും നമ്മള്‍
ചര്‍ച്ച ചെയ്തു. പരമ്പരാഗത ഫയല്‍ സംവിധാനത്തെ അപേക്ഷിച്ച്‌ DBMSMa8 മേന്മക
ളും മനസ്സിലാക്കി. റിലേഷണല്‍ ഡാറ്റാ മോഡലിന്റെ പശ്ചാത്തലത്തില്‍ ഡാറ്റാബേസുമായി
ബന്ധപ്പെട്ട വിവിധ പദാവലികളെ കുറിച്ചുള്ള ഒരു സംക്ഷിപ്ത രൂപം പ്രതിപാദിച്ചു. ഡാ
റ്റാബേസില്‍ ഒരിക്കല്‍ ഡാറ്റ വ്യവസ്ഥാപിതമായി ക്രമീകരിച്ചു കഴിഞ്ഞാല്‍, ആവശ്യമുള്ള
വിവരങ്ങള്‍ നിര്‍മ്മിക്കുന്നതിനായി റിലേഷണല്‍ ബീജഗണിതത്തിലെ പ്രവര്‍ത്തനങ്ങള്‍
എങ്ങനെ ഉപയോഗിക്കാമെന്ന്‌ ഉദാഹരണത്തിന്റെ സഹായത്തോടെ നമ്മള്‍ പഠിച്ചു.

ഈ അധ്യായത്തില്‍ അവതരിപ്പിച്ച ആശയങ്ങളെക്കുറിച്ചുള്ള നല്ല ഒരു ധാരണ അടുത്ത
അധ്യായം ഫലപ്രദമായി പഠിക്കുന്നതിന്‌ അത്യാവശ്യമാണ്‌. AIO] ഭാഷ ഉപയോഗിച്ച്‌
ഡാറ്റാബേസുകള്‍ നിര്‍മ്മിക്കുന്നതും ശേഖരിച്ച വിവരങ്ങള്‍ കൈകാര്യം ചെയ്യുന്ന രീതിയും
അടുത്ത അധ്യായത്തില്‍ നമ്മള്‍ ചര്‍ച്ച ചെയ്യും.

ാനന്തിന്നുഅ്്്ങ്്്ങി

ഡാറ്റാബേസുമായി ബന്ധപ്പെട്ട പ്രവര്‍ത്തനങ്ങള്‍ കൈകാര്യം ചെയ്യുന്നതും നിയന്ത്രി
ക്കുന്നതും ആരാണ്‌?

a. ഡാറ്റാബേസ്‌ അഡ്മിനിസ്ട്രേറ്റര്‍ 1. പ്രോഗ്രാമര്‍
൦. സാങ്കേതിക പരിജ്ഞാനമുള്ള ഉപയോക്താവ്‌ d. സാധാരണ ഉപയോക്താവ്‌
2. റിലേഷണല്‍ മോഡലില്‍, കാര്‍ഡിനാലിറ്റി എന്നു കൊണ്ട്‌ ഉദ്ദേശിക്കുന്നത്‌ എന്താണ്‌?

a. ടൂപിളുകളുടെ എണ്ണം 1. ആഭ്രിബ്യൂട്ടുകളുടെ എണ്ണം

൦. ടേബിളുകളുടെ എണ്ണം 0. കണ്‍സ്ട്രയ്ന്നുകളുടെ എണ്ണം

കമ്പ്യുട്ടര്‍ സയന്‍സ്‌ - XII

3. റിലേഷണല്‍ ബീജഗണിതത്തിലെ കാര്‍ട്ടീഷ്യന്‍ പ്രൊഡക്ട്‌ എന്നത്‌,

ഒ. ഒരു യൂനറി ഓപ്പറേറ്റര്‍ b. ഒരു ബൈനറി ഓപ്പറേറ്റര്‍
൦. ഒരു ടര്‍ണറി ഓപ്പറേറ്റര്‍ d. നിര്‍വചിക്കപ്പെട്ടിട്ടില്ല
4. ഡാറ്റാബേസ്‌ സംഗ്രഹം എത്ര തലങ്ങളാണ്‌?
a. ഒരു തലം 0. രണ്ട്‌ തലങ്ങള്‍
b. മൂന്നു തലങ്ങള്‍ 9. നാലു തലങ്ങള്‍

5. ഒരു റിലേഷണല്‍ മോഡലില്‍, റിലേഷന്‍ എന്ന്‌ പറയുന്നത്‌
2. ടൂപിളുകള്‍ b. ആട്രിബ്യൂട്ടുകള്‍
൦. ടേബിളുകള്‍ d. വരികള്‍
6. ഒരു ഡാറ്റാബേസ്‌ സംഗ്രഹത്തിന്റെ ബാഹൃതലം എന്നത്‌
a. ഭാതിക തലം 0. ലോജിക്കല്‍ തലം
൦. കണ്‍സെപ്ചല്‍ തലം d. വ്യൂ തലം
2. ഒരു ഡാറ്റാബേസിലെ ബന്ധപ്പെട്ട ഫീല്‍ഡുകളുടെ കൂട്ടം അറിയപ്പെടുന്നത്‌.
a. ഡാറ്റ ഫയല്‍ 0. ഡാറ്റ റെക്കോര്‍ഡ്‌
൦. മെനു d. ബാങ്ക്‌,
8. ഒരു ഡാറ്റാബേസ്‌ ഡെവലപ്പര്‍ ഒരു റെക്കോര്‍ഡ്‌ എന്നത്‌ കൊണ്ട്‌ ഉദ്ദേശിക്കുന്നത്‌.
a. മാനദണ്ഡം 0. റിലേഷന്‍
9. ടൂപിള്‍ d. ആട്രിബ്യൂട്ട്‌
98. ഡാറ്റാബേസ്‌ മാനേജ്മെന്റ്‌ സമീപനത്തിന്റെ ഒരു ഗുണം
A, ഡാറ്റ പ്രോഗ്രാമുകളെ ആശ്രയിച്ചിരിക്കുന്നു
0. ഡാറ്റാ റിഡന്‍ഡന്‍സി വര്‍ധിക്കുന്നു
൦. ഡാറ്റ സംയോജിപ്പിച്ച്‌ ഒന്നിലധികം പ്രോഗ്രാമുകള്‍ക്ക്‌ ഉപയോഗിക്കുവാന്‍ കഴിയും
9. ഇവ ഒന്നുമല്ല
10. ഡാറ്റ സ്വാതന്ത്രം എന്നാല്‍ എന്താണ്‌ ?

ഒ. ഡാറ്റ വെവ്വേറെ നിര്‍വചിക്കുകയും പ്രോഗ്രാമുകളില്‍ ഉള്‍പ്പെടുത്താതിരിക്കുകയും
ചെയ്യുക.

0. പ്രോരഗാമുകള്‍ ഡാറ്റയുടെ ഭാതിക ആദഭ്രിബ്യൂട്ടുകളെ ആശ്രയിക്കുന്നില്ല.

൦. പ്രോഗ്രാമുകള്‍ ഡാറ്റയുടെ ലോജിക്കല്‍ ആഭ്രിബ്യൂട്ടുകളെ ആശ്രയിക്കുന്നില്ല.

d. (ബിയും (സി) യും

8. ഡാറ്റാബേസ്‌ നിര്‍വഹണ സംവിധാനം

11.

റിലേഷനുകള്‍ തമ്മിലുള്ള ബന്ധം പ്രതിനിധാനം ചെയ്യുന്ന കീയെ എന്ത്‌ വിളിക്കുന്നു?
a. പ്രൈമറി കീ b. കാന്‍ഡിഡേറ്റ്‌ കീ
C. ഫോറിന്‍ കീ 0. ആള്‍ട്ടര്‍നേറ്റ്‌ കീ

ടേബിളുകളിലെ ചില നിരകളില്‍ മാത്രം മതിയെങ്കില്‍ താഴെ പറയുന്ന ഏത്‌ പ്രവര്‍
ത്തനമാണ്‌ ഉപയോഗിക്കുന്നത്‌?

a. PROJECTION b. SELECTION

c. UNION d. SELECT

താഴെ പറയുന്ന ഏത്‌ പ്രവര്‍ത്തനത്തിനാണ്‌ റിലേഷനുകള്‍ യൂണിയന്‍ അനുരൂപ
മാകേണ്ടത്‌.

a. UNION b. INTERSECTION

c. SET DIFFERENCE 0. മുകളില്‍ പറഞ്ഞവജെല്ലാം

ഏത്‌ ഡാറ്റാബേസ്‌ തലമാണ്‌ ഉപയോക്താക്കള്‍ക്ക്‌ ഏറ്റവും അടുത്തുള്ളത്‌?
a. ബാഹൃതലം 0. ആന്തരികതലം

൦. ഭാതികതലം d. ലോജിക്കല്‍തലം

RI, 12 എന്നീ റിലേഷനുകളുടെ UNION ഓപ്പറേഷന്‍ നടത്തിയാല്‍, അതില്‍
a. R1 ന്റെ എല്ലാ ടൂപിളുകളും ഉള്‍പ്പെടും.

0. 12 ന്റെ എല്ലാ ടുപിളുകളും ഉള്‍പ്പെടും.

൦. 11, 12 എന്നിവയിലുള്ള എല്ലാ ടൂപിളുകളും ഉള്‍പ്പെടും.

9. 11, 12 എന്നിവയിലെ പൊതുവായ എല്ലാ ടൂപിളുകളും ഉള്‍പ്പെടും.

ഒരു ഫയലില്‍ നിന്ന്‌ ചില റെക്കോര്‍ഡുകള്‍ ശേഖരിക്കുന്നതിനുള്ള ഒരു ഫയല്‍
മാനിപ്പുലേഷന്‍ പ്രവര്‍ത്തനം.

a. SELECT b. PROJECT
c. JOIN d. PRODUCT

R (൧. 13, C) എന്ന റിലേഷണല്‍ ഘടനയില്‍ A യുടെ മൂല്യത്തില്‍ NULL മൂല്യവും
ഉള്‍പ്പെടുന്നു. താഴെ പറയുന്ന പ്രസ്താവനയില്‍ ശരിയായിട്ടുളളത്‌ ഏത്‌?

a. A ഒരു കാന്‍ഡിഡേറ്റ്‌ കീയാണ്‌ 0. A ഒരു കാന്‍ഡിഡേറ്റ്‌ കീ അല്ല

൦. A ഒരു പ്രൈമറി കീയാണ്‌ ഠ9.ര്യും(യും

കമ്പ്യുട്ടര്‍ സയന്‍സ്‌ - XII

18. കാര്‍ഡിനാലിറ്റി 22 ഉള്ള ഒരു റിലേഷനില്‍ എത്ര ടൂപിളുകള്‍ ഉണ്ട്‌?
a. 22 0. 11
9. 1 0. ഇവയൊന്നുമല്ല
19. ഒരു റിലേഷനിലെ നിരയുടെ സാധ്യമായ മൂല്യങ്ങളെ എന്ത്‌ വിളിക്കുന്നു?
a. ആട്രിബ്യൂട്ട്‌ 0. ഡിഗ്രി
൦. ടൂപിള്‍ d. ഡൊമെയ്‌ൻ

20. പരമ്പരാഗത ഫയലുകളില്‍ ഡാറ്റ സംഭരിക്കുന്നതിനുപകരം ഒരു ഡാറ്റാബേസ്‌
സംവിധാനം നിങ്ങള്‍ തിരഞ്ഞെടുക്കുന്നത്‌ എന്തുകൊണ്ട്‌?

21. DBMS ലെ വിവിധ തലത്തിലുള്ള ഡാറ്റാസംഗ്രഹങ്ങള്‍ വിശദീകരിക്കുക?

22. ലോജിക്കല്‍, ഭാതികം എന്നീ ഡാറ്റാസ്വാതന്ത്ര്യത്തിന്റെ ആശയങ്ങളുമായി സ്‌കീമ
യുടെ വിവിധ തലങ്ങള്‍ എങ്ങനെ ബന്ധപ്പെട്ടിരിക്കുന്നു?

23. താഴെ തന്നിരിക്കുന്ന EMPLOYEE റിലേഷന്റെ ആഭ്രിബ്യൂട്ടുകള്‍, ഡിഗ്രി, കാര്‍ഡി
നാലിറ്റി, Name ന്റെ ഡൊമെയിന്‍, Emp_Code OB ഡൊമെയിന്‍ എന്നിവ എഴുതുക.

ചോദ്യം 23ല്‍ തന്നിരിക്കുന്ന EMPLOYEE റിലേഷന്റെ പ്രൈമറി കീ, കാന്‍ഡിഡേറ്റ്‌
കീകള്‍, ആള്‍ട്ടര്‍നേറ്റ്‌ കീകള്‍ എന്നിവ എഴുതുക.

25. താഴെ ക്കൊടുത്തിരിക്കുന്ന STUDENT റിലേഷന്റെ പ്രൈമറി കീ ളേ no ആയാല്‍.
a. STUDENT റിലേഷന്റെ കാന്‍ഡിഡേറ്റ്‌ കീകളും ആള്‍ട്ടര്‍നേറ്റ്‌ കീകളും കണ്ടെത്തുക.

0. പ്രൈമറി കീയും കാന്‍ഡിഡേറ്റ്‌ കീയും തമ്മിലുള്ള ബന്ധം എന്താണ്‌?

പ [Fathima | Fiumanises [Fa | മാ
നയ

8. ഡാറ്റാബേസ്‌ നിര്‍വഹണ സംവിധാനം

26.

27.

28.

29.

30.

31.

32.

ഒരു ഡാറ്റാബേസ്‌ എന്നാല്‍ എന്ത്‌? 113145 ഉപയോഗിക്കുന്നതിന്റെ ഗുണങ്ങളും
ദോഷങ്ങളും വിവരിക്കുക.

ഡാറ്റാസ്വാതന്ത്ര്യരം എന്നാല്‍ എന്താണ്‌? ഭാതിക ഡാറ്റാസ്വാതന്ത്രരവും ലോജിക്കല്‍
ഡാറ്റാസ്വാതന്ത്ര്യവും തമ്മിലുള്ള വ്യത്യാസം എഴുതുക.

ഡാറ്റാസ്റ്റാന്‍ഡേര്‍ഡ്‌ നിര്‍വചിക്കുക എന്നത്‌ ഒരു 101315 ന്റെ പ്രധാന സവിശേഷ
തയാണ്‌. ഒരു ഡാറ്റാബേസില്‍ ഈ മാനദണ്ഡങ്ങള്‍ എങ്ങനെയാണ്‌ ബാധകമാകു
ന്നത്‌?

യൂണിയന്‍ അനുരൂപമായ 11, 12 എന്നീ റിലേഷനുകളില്‍ 11 ന്റെ കാര്‍ഡിനാലിറ്റി
10 ഉം 12 ന്റെ കാര്‍ഡിനാലിറ്റി 8 ഉം ആണ്‌. 11 12 ന്റെ കാര്‍ഡിനാലിറ്റി 13 ആണെ
ങ്കില്‍, 11 0112 ന്റെ കാര്‍ഡിനാലിറ്റി എന്തായിരിക്കും? നിങ്ങളുടെ ഉത്തരം സമര്‍ഥി
ക്കുക.

യൂണിയന്‍ അനുരൂപമായ 11, 12 എന്നീ റിലേഷനുകളില്‍ 11 ന്റെ കാര്‍ഡിനാലിറ്റി
10 ഉം 12 ന്റെ കാര്‍ഡിനാലിറ്റി 8 ഉം ആണ്‌.

a. 1112 ന്റെ സാധ്യമായ കാര്‍ഡിനാലിറ്റി എന്തായിരിക്കും?

b. 11൮12 ന്റെ ഏറ്റവും കുറഞ്ഞ കാര്‍ഡിനാലിറ്റി എന്തായിരിക്കും?

Ctiy (ctiy_name, state), Hotel (name, address, ctiy_name) എന്നീ റിലേഷനുകള്‍
പരിഗണിച്ച്‌ താഴെപ്പറയുന്നവയ്ക്കുള്ള റിലേഷണല്‍ ബീജഗണിത പ്രസ്താവനകള്‍
എഴുതുക.

2. കൊച്ചി നഗരത്തിലെ ഹോട്ടലുകളുടെ പേരും വിലാസവും കണ്ടെത്തുക.

1. കേരളത്തിലെ നഗരങ്ങളുടെ വിശദാംശങ്ങള്‍.

൦. തൃശൂരിലെ ഹോട്ടലുകളുടെ പേരുകള്‍ കണ്ടെത്തുക.

0. വിവിധ ഹോട്ടലുകളുടെ പേരുകള്‍ കണ്ടെത്തുക.

©. കോഴിക്കോട്‌ അല്ലെങ്കില്‍ മുന്നാറിലെ ഹോട്ടലുകളുടെ പേരുകള്‍ കണ്ടെത്തുക.

ചോദ്യം 23 ല്‍ കാണിച്ചിരിക്കുന്ന EMPLOYEE ബന്ധം ഉപയോഗിച്ചുകൊണ്ട്‌, താഴെ
പറയുന്ന റിലേഷണല്‍ ബീജഗണിത എക്സ്പ്രഷനുകളുടെ ഫലം എഴുതുക.
Department="Sales" (EMPLOYEE).

. (EMPLOYEE).
. (EMPLOYEE).

salary>20000 , Department="'Sales'
salary>20000 \/ Department="'Sales'

EMPLOYEE).

name, slay

name salary (7 Designation="Managex’ EMPLOYEE).
(EMPLOYEE).

= 9

oO
oO
oO
vis

via

9

7 ame, Department (൦ Designation="Cleck" * salary > 20000

കമ്പ്യുട്ടര്‍ സയന്‍സ്‌ - XII

33. ഒരു ബാങ്കിലെ ഉപഭോക്താക്കളുടെ വിവരങ്ങള്‍ സൂക്ഷിച്ചിരിക്കുന്ന BORROWER,
DEPOSITOR എന്നീ റിലേഷനുകള്‍ ഉപയോഗിച്ചുകൊണ്ട്‌, താഴെ പറയുന്ന റിലേഷ
ണല്‍ ബീജഗണിത പ്രസ്താവനകള്‍ എഴുതുക.

A, നിക്ഷേപകരുടെയും വായ്പ എടുത്തവരുടെയും വിശദാംശങ്ങള്‍ പ്രദര്‍ശിപ്പിക്കുക.

0. നിക്ഷേപകരും വായ്പ എടുത്തവരുമായ ഉപഭോക്താക്കളുടെ പേര്‌ പ്രദര്‍ശിപ്പി
ക്കുക.

൦. വായ്പ എടുത്തിട്ടില്ലാത്ത നിക്ഷേപകരുടെ പേര്‌ വിവരം പ്രദര്‍ശിപ്പിക്കുക.

9. നിക്ഷേപമില്ലാതെ വായ്പ എടുത്തവരുടെ പേരും വായ്പാ തുകയും പ്രദര്‍ശിപ്പി
ക്കുക.

പടെ [തി

34. താഴെകൊടുത്തിരിക്കുന്ന CUSTOMER, BRANCH എന്നീ റിലേഷനുകളുടെ കാര്‍ട്ടീ
ഷ്യന്‍ പ്രൊഡക്ട്‌ എഴുതുക.

Vishnu B1001 25000
Aiswarya 11077 30000 B1077 Idukki

നം
പ്രധാന പഠനനേട്ടങ്ങള്‍

D2 CHUM IOOOIAG പഠനം പുരിത്തിമാകുനാതോടെ

പഠിതാവ്‌ OB d#IELNER പഠ൪മേട്ട്ങശ്‌

© MSH solduy ക്വറി ലാംധ്വേജ്‌ (SQL) എന്ന പ്രോ
LOI ES ഭാഷയുടെ പ്രാധാന്യവും വിരേഷമുണ
ങ്ങളും തിരിച്ചറിയുന്നു.

© SQL ന്റെ ഘടകങ്ങളെക്കുറിച്ച്‌ വിശദമാക്കുന്നു.

e DDL, DML, DCL കമാന്‍ഡുകളുടെ വൃത്യാസം
കണ്ടെത്തുന്നു.

© MYSQL ന്റെ പ്രത്യേകതകള്‍ തിരിച്ചറിയുന്നു.

൫ വിവിധ ഡാറ്റ ഉനങ്ങളും അവയുടെ സവിശേഷത
കളും പട്ടികകെടുത്തുന്നു.

൫ SQL ലെ വിവിധ കണ്‍സ്ട്രയിന്റുകളുടെ സ്വാധീനം
വിശദമാക്കുന്നു.

e DDL കമാന്‍ഡുകളായ CREATE, ALTER, DROP
എന്നിവ PCM gf വിവിധ പ്രവര്‍ത്തനങ്ങള്‍ ചെയ്യു
ന്നു.

© ഡാറ്റ കൈകാര്യം ചെയ്യുന്നതിനായി SELECT,
INSERT, UPDATE, DELETE എന്നിവ
പോലെയുള്ള DML കമാന്‍ഡുകള്‍ ഉപയോഥി
ക്കുന്നു.

e SQL കമാന്‍ഡുകളുടെ വിവിധ ഉപവാക്യങ്ങളും
അവയുടെ ഉപയോഗവും മനസ്സിലാക്കുന്നു.

൫ വിവിധ നിബന്ധനകള്‍ ഉണ്ടാക്കുന്നതിന്‌ ഓഷറേ
റുറുകള്‍ ഉപയോഗിക്കുന്നു.

© സ൯൦(൫ഹ ഫങ്ഷനുകള്‍ (Aggregate Functions)
പട്ടികകഷെടുത്തുകയും അവയുടെ ഉപയോരം വിവ
രിക്കുകയും ചെയ്യുന്നു.

൫ വിവരം ലദ്യമാക്കുന്നതിന്‌ നെസ്തഡ്‌ ക്വറി നിര്‍മി
ക്കുന്നു.

സ്ഭ്രക്ചേര്‍ഡ്‌ ക്വറി
ലാംഗ്വേജ്‌ (SQL)

കഴിഞ്ഞ അധ്യായത്തില്‍ നാം റിലേഷണല്‍
ഡാറ്റാബേസ്‌ മാനേജ്മെന്റ്‌ സിസ്റ്റത്തെക്കുറിച്ച്‌
(RDBMS) ചര്‍ച്ച ചെയ്തിരുന്നു. റിലേഷണല്‍
ഡാറ്റാബേസ്‌ എന്നത്‌ പട്ടികകളില്‍ (Tables) ശേ
ഖരിച്ചുവച്ചിരിക്കുന്ന അനുബന്ധ വിവരങ്ങളു
ടെ ശേഖരണമാണെന്ന്‌ നമുക്കറിയാം. ഇവ
യെ നമുക്ക്‌ റിലേഷന്‍ (Relation) എന്നുവിളി
ക്കാം. വിവിധതരം പ്രവര്‍ത്തനങ്ങള്‍ റിലേഷ
MABE ചെയ്യുന്നതിന്‌ വേണ്ട റിലേഷണല്‍
ആള്‍ജിബ്രയെക്കുറിച്ച്‌ അടിസ്ഥാനാശയം നമു
ക്കുണ്ട്‌. പട്ടിക നിര്‍മ്മിക്കുക, അതിലേക്ക്‌ ഡാറ്റ
ചേര്‍ക്കുക, അതിലെ ഡാറ്റ കൈകാര്യം ചെ
QP, ഡാറ്റ പുതുക്കുക, ഡാറ്റ നീക്കം ചെയ്യുക
എന്നിവയെക്കുറിച്ച്‌ ഇനി നമുക്ക്‌ ഒരു വ്യക്തത
വരേണ്ടത്‌ ആവശ്യമാണ്‌. ഈ അധ്യായത്തില്‍
സ്ര്രക്ചേര്‍ഡ്‌ AIO ലാംഗ്വേജിനെക്കുറിച്ചും
(SQL) അതിന്റെ പ്രവര്‍ത്തനങ്ങളെക്കുറിച്ചും
വിവരിക്കുന്നു. റിലേഷണല്‍ ഡാറ്റാബേസ്‌
മാനേജ്‌മെന്റ്‌ സിസ്റ്റം (RDBMS) പ്രോഗ്രാമുക
ളായ MySQL, ഒറാക്കിള്‍, സൈബേസ്‌, ഇന്‍
ഫോമിക്സ്‌, പോസ്റ്റ്ഗ്രെസ്സ്‌, SQL സെര്‍വര്‍,
MS ആക്സസ്‌ തുടങ്ങിയവയുടെ അടിസ്ഥാന
ഡാറ്റാബേസ്‌ SQL ആണ്‌. SQL (ald
വര്‍ത്തികമാക്കുന്നതിന്‌ ജന്രപിയ സ്വത്ര്ര
RDBMS ആയ MySQL നാം ഉപയോഗിക്കു
ന്നു.
9.1 സ്്രകചേര്‍ഡ്‌ 2/01 ലാംഗ്വേജ്‌ (Structured Query Language (SQL))

റിലേഷണല്‍ ഡാറ്റാബേസ്‌ മാനേജ്മെന്റ്‌ സിസ്റ്റത്തിലെ ഡാറ്റ കൈകാര്യം ചെയ്യാന്‍ SQL
ഉപയോഗിക്കുന്നു. റിലേഷണല്‍ ഡാറ്റാബേസുമായി എളുപ്പത്തിലും കാര്യക്ഷമമായും
സമ്പര്‍ക്കം പുലര്‍ത്താനുള്ള ഒരു വഴിയാണ്‌ SQL. 5൮.ന്‌ ധാരാളം പതിപ്പുകള്‍ ഉണ്ട്‌.
IBMog സാന്‍ജോസ്‌ ലബോറട്ടറിയിലെ (ഇപ്പോള്‍ അല്‍മാന്‍ഡന്‍ റിസര്‍ച്ച്‌ സെന്റര്‍)
ഡൊണാള്‍ഡ്‌ ഡി ചാംബെര്‍ളിനും, റെയ്മണ്ട്‌.എഫ്‌.ബോയ്സും ചേര്‍ന്ന്‌ 1970 ലാണ്‌
ഇതിന്റെ ആദ്യ പതിപ്പ്‌ വികസിപ്പിച്ചത്‌. ഈ ഭാഷയെ യഥാര്‍ഥത്തില്‍ സ്ര്രക്ചര്‍ഡ്‌ ഇംഗ്ലീഷ്‌
AIO] ലാംഗ്വേജ്‌ (sequel) എന്നാണ്‌ വിളിച്ചിരുന്നത്‌. പിന്നീട്‌ SQL എന്ന പേരിലേക്ക്‌ മാറ്റി.
1986ല്‍ അമേരിക്കന്‍ നാഷണല്‍ സ്റ്റാന്‍ഡേര്‍ഡ്‌ ഇന്‍സ്റ്റിറ്റൂട്ട്‌ (ANSI) SQL സ്റ്റാന്‍ഡേര്‍ഡ്‌
പ്രസിദ്ധീകരിച്ചു.

റിലേഷണല്‍ ഡാറ്റാബേസ്‌ സിസ്റ്റം എന്നത്‌ പട്ടികകളുടെ (റിലേഷന്‍) ഘടനാപരമായ
ശേഖരമാണ്‌. ഡാറ്റ ഈ പട്ടികകളിലാണ്‌ ശേഖരിക്കുന്നത്‌. ടേബിളുകള്‍ സവിശേഷമായി
തിരിച്ചറിയുന്നത്‌ പേരുകള്‍ ഉപയോഗിച്ചാണ്‌. അത്‌ വരികളും നിരകളും ഉള്‍കൊള്ളുന്നു.
ഒരു പട്ടികയില്‍ ഒരു വരി പ്രതിനിധീകരിക്കുന്നത്‌ ബന്ധപ്പെട്ട ഡാറ്റകളുടെ ശേഖരമാണ്‌.
വരിയെ ടൂപ്ിള്‍ (101൦) എന്നും നിരയെ ആദഭ്രിബ്യയട്ട്‌ (Attribute) എന്നും വിളിക്കുന്നുവെന്ന്‌
നമുക്കറിയാം.

student എന്ന പട്ടിക പരിശോധിക്കുക (പട്ടിക 9.1) തുടര്‍ന്ന്‌ താഴെ കൊ
ടുത്തിരിക്കുന്ന ചോദ്യങ്ങള്‍ക്ക്‌ ഡാറ്റാബേസുമായി ബന്ധപ്പെട്ട പദാവ

ലിയുടെ അടിസ്ഥാനത്തില്‍ ഉത്തരമെഴുതുക.
നമുക്ക്‌ ചെയ്യാം

ക്ക 11

005 Meera F 15/08/1998 Science
006 Divakar M 21/02/1998 Humanities

പട്ടിക 9.4: QUI a1S1

1) ഈ പട്ടികയുടെ കാര്‍ഡിനാലിറ്റി __ ആണ്‌.
i) ഈ പട്ടികയുടെ ഡിഗ്രി ആണ്‌.

ii) പട്ടികയിലെ വിവിധ വരികള്‍ (ടൂപിള്‍) എഴുതുക.

320
ആഞ്ഞ്‌

20) പട്ടികയിലെ വിവിധ ആട്രിബ്രയയുട്ടുകള്‍ എഴുതുക.
v) ‘Course! എന്ന ആട്രിബ്രയുട്ടിന്റെ ഡൊമൈനിലെ വിലകള്‍ ഏതെല്ലാം?

RDBMS പ്രാവര്‍ത്തികമാക്കാനുള്ള ശക്തമായ ഒരു ഉപകരണമാണ്‌ SQL. അത്‌ പട്ടിക
നിര്‍മ്മിക്കുക, ഡാറ്റ ചേര്‍ക്കുക, ഡാറ്റ കൈകാര്യം ചെയ്യുക, ഡാറ്റ നീക്കം ചെയ്യുക,
പട്ടികയുടെ ഘടന മാറ്റുക, പട്ടിക നീക്കം ചെയ്യുക തുടങ്ങിയവയ്ക്കുള്ള സാകര്യങ്ങള്‍
നല്‍കുന്നു.

9.11 SQL ന്റെ സവിശേഷതകള്‍ (Features of SQL)

സ്ട്രക്ചേര്‍ഡ്‌ AIO ലാംഗ്വേജ്‌ എന്നത്‌ ANSI/ISO സ്റ്റാന്‍ഡേര്‍ഡ്‌ പ്രകാരമുള്ള, ഡാറ്റാ
ബേസ്‌ നിര്‍മ്മിക്കുന്നതിനുള്ള ഒരു ഭാഷയാണ്‌. ക്വറി എന്നത്‌ ഡാറ്റാബേസിനോടുള്ള
അഭ്യര്‍ഥനയാണ്‌. മുന്‍പ്‌ പറഞ്ഞിട്ടുള്ള എല്ലാ റിലേഷണല്‍ പ്രവൃത്തികളും അതിലൂടെ
നമുക്ക്‌ ചെയ്യാന്‍ സാധിക്കും. താഴെ പറയുന്ന സവിശേഷതകള്‍ കാരണം ക്വറികള്‍ നിര്‍മ്മി
ക്കുന്നതിന്‌ SQL ഫലപ്രദമാണ്‌.

© SQL എന്നത്‌ ഒരു റിലേഷണല്‍ ഡാറ്റാബേസ്‌ ഭാഷയാണ്‌. C, C++ എന്നിവ പോലെ
യുള്ള പ്രോഗ്രാമിങ്‌ ഭാഷ അല്ല.

© അത്‌ ലളിതവും, വഴക്കമുള്ളതും, സുശക്തവുമാണ്‌.

© അതില്‍ പട്ടിക നിര്‍മ്മിക്കുന്നതിനും, മാറ്റം വരുത്തുന്നതിനും, പട്ടികയില്‍ ഡാറ്റ ചേര്‍

ക്കുന്നതിനും, ഡാറ്റ കൈകാര്യം ചെയ്യുന്നതിനും ഉള്ള കമാന്‍ഡുകള്‍ ഉണ്ട്‌.

ഭ അത്‌ ജനപ്രിയ RDBMS സോഫ്റ്റ്‌ വെയറുകളായ Oracle, SQLServer, MySQL, MS
Access, Sybase, Infomix തുടങ്ങിയവയ്ക്ക്‌ മാര്‍ഗനിദേശങ്ങള്‍ നല്‍കുന്നു.

© SQL ഒരു നോണ്‍പ്രോസിഡറല്‍ ഭാഷയാണ്‌. ഏത്‌ ഡാറ്റ തിരിച്ചെടുക്കണം, നീക്കം
ചെയ്യണം, കൂട്ടിച്ചേര്‍ക്കണം അതിനുപരിയായി എങ്ങനെ ഈ പ്രവര്‍ത്തനങ്ങള്‍ ചെയ്യ
ണം എന്ന്‌ അത്‌ വിവരിക്കുന്നു.

൭ ഡാറ്റയുടെ സുരക്ഷ ഉറപ്പാക്കുന്നതിന്റെ ഭാഗമായി ഡാറ്റാബേസില്‍ നിന്നോ അല്ലെങ്കില്‍
പട്ടികകളിലോ മാറ്റം വരുത്തുന്നതിന്‌ വിവിധ ഉപയോക്താക്കള്‍ക്ക്‌ (Users) അനുമതി
നല്‍കുന്നതിനും അത്‌ OF ചെയ്യുന്നതിനും ഉള്ള സാകര്യം SQL നല്‍കുന്നു.

© വ്യൂ എന്ന ആശയം ലഭ്യമാക്കുന്നു (ആശയം പിന്നീട്‌ ഈ അധ്യായത്തില്‍ ചര്‍ച്ച
ചെയ്യും).

9.12 SQL ന്റെ ഘടകങ്ങള്‍ (൦ ബ്ചഗബ്ടട of SQL)

SQL ന്‌ മൂന്ന്‌ ഘടകങ്ങളാണ്‌ ഉള്ളത്‌. ഇത്‌ ഡാറ്റ നിര്‍വചന ഭാഷ (DDL), ഡാറ്റ കൈകാര്യം

ചെയ്യുന്ന ഭാഷ (DML), ഡാറ്റ നിയന്ത്രണ ഭാഷ (DCL) എന്നിവയാണ്‌. ഇനി നമുക്ക്‌

മൂന്ന്‌ ഘടകങ്ങളെക്കുറിച്ചും RDBMS വികസിപ്പിക്കുന്നതില്‍ ഇവയ്ക്കുള്ള പട്‌: എന്താ
ണെന്നും ചര്‍ച്ച ചെയ്യാം.

ഡാറ്റ നിര്‍വചന ദാഷ (DDL) (Data Definition Language)

പട്ടിക 9.1 പരിഗണിക്കുക (student പട്ടിക). ഇതുപോലെ ഒരു പട്ടിക നമുക്ക്‌ എങ്ങനെ
നിര്‍മ്മിക്കാം? ഈ പട്ടികയില്‍ പുതിയ നിര എങ്ങനെ കൂട്ടിച്ചേര്‍ക്കും? ഒരു ഡാറ്റാബേസില്‍
നിന്ന്‌ ഒരു പട്ടിക എങ്ങനെ ഒഴിവാക്കും? ഈ ചോദ്യങ്ങള്‍ക്കെല്ലാം DDL പരിഹാരം
നല്‍കും.

DDL എന്നത്‌ RDBMS og സ്കീമാ (ഘടന) നിര്‍വഹണം കൈകാര്യം ചെയ്യുന്നതിനുള്ള
കമാന്‍ഡുകള്‍ നല്‍കുന്ന SQL ന്റെ ഘടകമാണ്‌. 1101, കമാന്‍ഡുകള്‍ ഉപയോഗിക്കുന്നത്‌
ഡാറ്റാബേസ്‌ ഒബ്ജകടുകളായ പട്ടികകള്‍, വ്യൂകള്‍, കീകള്‍ എന്നിവ നിര്‍മ്മിക്കാനും,
പുതുക്കുവാനും, ഒഴിവാക്കുവാനും വേണ്ടിയാണ്‌. സാധാരണ 1121. കമാന്‍ഡുകള്‍ ആണ്‌
CREATE, ALTER, DROP എന്നിവ.

ഡാറ്റ കൈകാര്യം ചെയ്യുന്ന ദാഷ (DML) (Data Manipulation Language)

പട്ടിക 9.1 ല്‍ നമുക്ക്‌ വിവിധതരം ടൂപ്പിളുകള്‍ (വരികള്‍ അല്ലെങ്കില്‍ റെക്കോര്‍ഡുകള്‍?)
കാണാന്‍ കഴിയും. ഈ ടുപ്പിളുകള്‍ എങ്ങനെയാണ്‌ ഒരു പട്ടികയില്‍ ചേര്‍ക്കുന്നത്‌? ഒരു
വിദ്യാര്‍ഥിയുടെ കുടുംബമാസവരുമാനം പുതുക്കണമെന്ന്‌ വിചാരിക്കുക. ഇത്‌ സാധ്യ
മാണോ? പട്ടികയില്‍നിന്ന്‌ ഒരു കുട്ടിയുടെ റെക്കോര്‍ഡ്‌ എങ്ങിനെ നീക്കം ചെയ്യും? ഡാറ്റ
കൈകാര്യം ചെയ്യുന്ന ഭാഷ (DML) ഇത്തരം പ്രവര്‍ത്തനങ്ങള്‍ക്കുള്ള കമാന്‍ഡുകള്‍
നല്‍കുന്നു.

ഒരു കൂട്ടം കമാന്‍ഡുകള്‍ നല്‍കുന്നതിലൂടെ ഡാറ്റാബേസ്‌ സിസ്റ്റവുമായി കാര്യക്ഷമമായ
ഉപയോക്തൃ ഇടപെടല്‍ നടത്തുന്നതിനുള്ള SQLodg ceiseacens DML. പട്ടികകളിലേക്ക്‌
ഡാറ്റ ചേര്‍ക്കാനും നിലവിലുള്ള ഡാറ്റ വീണ്ടെടുക്കാനും, പട്ടികകളില്‍ നിന്നുള്ള ഡാറ്റ
ഒഴിവാക്കുവാനും ശേഖരിച്ച ഡാറ്റ പരിഷ്ക്കരിക്കാനും ഉപയോക്താക്കളെ DML അനുവ
ദിക്കുന്നു. സാധാരണമായി ഉപയോഗിക്കുന്ന DML കമാന്‍ഡുകളാണ്‌ SELECT, INSERT,
UPDATE, DELETE എന്നിവ.

ഡാറ്റ നിയ്ര്ത്രണ ദാഷ (DCL) (Data Control Language)

ഡാറ്റ നിയ്ര്തരണഭാഷ ഉപയോഗിക്കുന്നത്‌ ഡാറ്റാബേസ്‌ വിനിയോഗം നിയ്യ്ത്രിക്കുന്നതി
നാണ്‌. കാരണം ഡാറ്റാബേസിന്റെ സുരക്ഷിതത്വം വളരെ പ്രധാനപ്പെട്ടതാണ്‌. ഡാറ്റാകമ്മി
റ്റിങ്ങും അഡ്മിനിസ്ട്രേറ്റിങ്ങ്‌ പ്രിവിലേജും അടക്കമുള്ള ഡാറ്റ നിയ്ര്തണ കമാന്‍ഡുകള്‍
അടങ്ങുന്നതാണ്‌ DCL. GRANT, REVOKE എന്നിവ DCL ന്റെ ഭാഗമായി ഉപയോഗി

ക്കുന്നു.

GRANT : ഒരു ഡാറ്റാബേസില്‍ ഉപയോക്താവിന്‌ (User) പ്രത്യേക അവകാശങ്ങള്‍
നല്‍കുന്നു.

REVOKE : ഉപയോക്താവിന്‌ വീറ്‌ ഉപയോഗിച്ചു നല്‍കിയ പ്രത്യേക അവകാശ

ങ്ങള്‍ പിന്‍വലിക്കുന്നു.

oT
മ്മ ള്ളു

നിങ്ങളുടെ പുരോഗതി അറിയറുക

1. 5൮1.നറെ പൂര്‍ണരുപം ആണ്‌

. ൭൮.നറെ മുന്നു ഘടകങ്ങള്‍ ഏരെല്ലാം?
. SQL ഉപയോഗിക്കുന്നത്‌
a. ഡാറ്റാബേസിന്റെ ഘടന ഉണ്ടാക്കാന്‍.

0. ഡാറ്റാബേസ്‌ ക്വറി മാത്രം നിര്‍മിക്കാന്‍.

൦. ഡാറ്റാബേസിലെ ഡാറ്റയില്‍ മാറ്റം വരുത്താന്‍.
0. മുകളില്‍ പറഞ്ഞവയെല്ലാം
4. SQL എന്നത്‌
A, ഒരു പ്രോര്രാമിംഗ്‌ ഭാഷയാണ്‌ 2. ഒരു ഓഭറേറ്റിംറ്‌ സിസ്റ്റമാണ്‌
൦. ഡാറ്റ കൈകാര്യം ചെയ്യാനുള്ള ഭാഷയാണ്‌ d. ഒരു DBMS ആണ്‌

5. താഴെഷറയുന്നവയില്‍ RDBMS പാഭക്കജ്‌ അല്ലാത്തത്‌ ഏത്‌ ?
a. ORACLE 0. SQL SERVER c. MySQL d. HTML

92 Working on MySQL

അമേരിക്കന്‍ നാഷണല്‍ സ്റ്റാന്‍ഡേര്‍ഡ്‌ ഇന്‍സ്റ്റിറ്റൂട്ട്‌ (ANSI) 1986 ലും ഇന്റര്‍നാഷണല്‍
ഓര്‍ഗനൈസേഷന്‍ ഫോര്‍ സ്റ്റാന്‍ഡേര്‍ഡൈസേഷന്‍ (ISO) 1987 ലും SQL ന്റെ നിലവാരം
നിശ്ചയിച്ചു. 1986 മുതല്‍ ഘടനയില്‍ കുറച്ചു മാറ്റങ്ങള്‍ വരുത്തി SQL സ്റ്റാന്‍ഡേര്‍ഡ്‌
പരിഷ്ക്കരിച്ചു. പിന്നീട്‌ ഈ സ്റ്റാന്‍ഡേര്‍ഡ്‌ പല പ്രാവശ്യമായി പരിഷ്ക്കരിക്കുകയും
പുതിയ പതിപ്പുകള്‍ ഇറക്കുകയും ചെയ്തു. SQL ഡാറ്റാബേസ്‌ ക്വറി ഭാഷയുടെ ISO
ANSI സ്റ്റാന്‍ഡേര്‍ഡിന്റെ ഏഴാമത്തെ പതിപ്പാണ്‌ SQL:2011. ഡിസംബര്‍ 2011 ലാണ്‌
ഇത്‌ ഓങദ്യോഗികമായി അംഗീകരിക്കപ്പെട്ടത്‌. ഇത്തരം മാനദണ്ഡങ്ങള്‍ നിലനില്‍ക്കുന്നു
ണ്ടെങ്കിലും വൃത്യസ്ത ഡാറ്റാബേസ്‌ സോഫ്റ്റ്വെയര്‍ പാക്കേജുകള്‍ ANSI SQL സ്റ്റാന്‍
ഡേര്‍ഡ്‌ അനുസരിച്ചു അവരുടേതായ പതിപ്പുകള്‍ ഇറക്കുന്നുണ്ട്‌. അതിനാല്‍ മിക്ക SQL
കോഡുകളും വൃത്യസ്ത ഡാറ്റാബേസ്‌ സോഫ്റ്റ്വെയറുകളില്‍ ചെറിയ മാറ്റങ്ങളോടെ
യല്ലാതെ പ്രവര്‍ത്തിക്കുകയില്ല. ഈ അധ്യായത്തില്‍ SQL പ്രവര്‍ത്തിക്കുന്നത്‌ ഓപ്പണ്‍
സോഴ്‌സ്‌ സോഫ്റ്റ്വെയറായ MySQL ഉപയോഗിച്ചാണ്‌.

MYSQL സൌജന്യവും, വളരെ വേഗം പ്രവര്‍ത്തിക്കുന്നതും, എളുപ്പത്തില്‍ ഉപയോഗിക്കാന്‍
സാധിക്കുന്നതുമായ ഒരു RDBMS ആണ്‌

e അത്‌ ഡാറ്റാബേസിന്‌ ശക്തമായ സുരക്ഷ നല്‍കുന്നു.

e ഇത്‌ എളുപ്പത്തില്‍ ഉപയോഗിക്കാവുന്നതും പല ഓപ്പറേറ്റിംഗ്‌ സിസ്റ്റങ്ങളിലും PHP,
PERL, C, C++, JAVA തുടങ്ങിയ ഭാഷകളില്‍ പ്രവര്‍ത്തിക്കുന്നതുമാണ്‌.

e MySQL alee അളവിലുള്ള ഡാറ്റകളില്‍ വേഗത്തിലും ഫലപ്രദമായും പ്രവര്‍ത്തി
ക്കുന്നു.

e ഇത്‌ വെബ്‌ ഡെവലപ്മെന്റിന്‌ ഉപയോഗിക്കുന്ന ജനപ്രിയ പ്രോഗ്രാമിംഗ്‌ ഭാഷകളില്‍
ഒന്നായ PHP ക്ക്‌ ഏറ്റവും അനുയോജ്യമാണ്‌.

1995 ല്‍ Michael "Monty" Widenius and David Axmark ചേര്‍ന്നാണ്‌ MySQL

വികസിരിച്ചത്‌. യഥാര്‍ഥത്തില്‍ Moy MySQL AB എന്ന സ്വീഡിഷ്‌ കമ്പനിയുടെ ഉടമസ്ഥതയി

ലുള്ളതാണ്‌. പിന്നീട്‌ 2008 ല്‍ സണ്‍ മൈമഭ്രോ MIM ഉത്‌ ഏറ്റെടുത്തു. സണ്‍ മൈക്രോ

സിസ്തത്തെ 2010 ല്‍ ഓാക്കിര്‍ കോര്‍ഷറേഷന്‍ ഏറ്റെടുത്തു. 1൫൮. സാധാരണയായി Linux-

Apache-MySQL-PHP, (LAMP), Windows-Apache-MySQL-PHP (WAMP), Mac-Apache-MySQL-

PHP (MAMP) എന്ന രീതിയിലാണ്‌ വിന്യസിച്ചിരിക്കുന്നത്‌. ഓഷറേറ്റിംന്‌ സിസ്റ്റം avdacias LAMP ലെ എല്ലാ
ഘടകങ്ങളും സാജന്യവും ഓണ്‍ സോഴ്‌സുമാണ്‌. !൫റ1.നറെ ഓദ്യോരിക വെബ്‌ സൈറ്റാണ്‌ www.mysql.
com. റഫറന്‍സിനു MySQL ന്റെ സഹായ ഗ്രന്ഥം (Refence Manual) http://dev.mysq.co/doc ല്‍ ലഭ്യമാണ്‌.

ee

92.1 MySQL തുറക്കുന്നു (Opening MySQL)

mysql> പ്രോംപ്റ്റില്‍ കമാന്‍ഡ്‌ നല്‍കി നമുക്ക്‌ MySQL പ്രവര്‍ത്തിപ്പിക്കാന്‍ സാധിക്കും.
ഉബുണ്ടു ലിനക്സില്‍, ഈ പ്രോംപ്റ്റ്‌ ലഭിക്കുന്നതിന്‌ താഴെപറയുന്ന കമാന്‍ഡ്‌
ഉപയോഗിച്ചു; ടെര്‍മിനല്‍ ജാലകം തുറക്കണം.

Applications -> Accessories -> Terminal
MySQL തുടങ്ങുന്നതിന്‌ ടെര്‍മിനല്‍ ജാലകത്തില്‍ താഴെപറയുന്ന കമാന്‍ഡ്‌ നല്‍കണം

mysql -u root —-p

വിന്‍ഡോസ്‌ ഓഷറ്റ്റിംര്‌ സിസ്തത്തില്‍ MySQLaZosagmMoy താഴെഷറയുന്ന രീതിയിലാണ്‌

Start -> Programs - MySQL -> MySQL Server(Version Number) -> MySQL
Commandline client.

File Edit View Search Terminal Help
meenag@meena-laptop:~$ mysql -u root -p
Enter password:
© the MySQL monitor. Commands end with ; or \g-
ection id ts 42
5.5.41-Oubuntu®.14.04.1 (Ubuntu)

yright (c) 2000, 2014, Oracle and/or its affiliates. All rights reserved.

@ registered trademark of Oracle Corporation and/or its
Other names may be trademarks of their respective

പ്പ for help. Type '\c' to clear the current input statement.

5] 314

MYSQL തുറക്കുമ്പോള്‍ അത്‌ പരിശോധനയ്ക്കായി പാസ്വേര്‍ഡ്‌ ആവശ്യപ്പെടും. ഇന്‍സ്റ്റ
ലേഷന്റെ സമയത്ത്‌ ഉപയോഗിച്ച അതേ പാസ്വേര്‍ഡ്‌ തന്നെ ആയിരിക്കണം ഇവിടെ
നാം ഉപയോഗിക്കേണ്ടത്‌. പാസ്‌വേര്‍ഡ്‌ പരിശോധനയ്ക്ക്‌ ശേഷം 191. ന്റെ പ്രോംപ്റ്റ്‌
ചിത്രം 9.1 ല്‍ കാണുന്ന രീതിയില്‍ ലഭിക്കുന്നു.

SQL കേസ്‌ സെന്‍സിറ്റീവ്‌ അല്ല. അതായത്‌ ഉംഗ്ലീഷിലെ വലിയ അക്ഷരങ്ങള്‍ ഉപയോമിച്ചോ,

ചെറിയ അക്ഷരങ്ങള്‍ ഉപയോഗിച്ചോ, രണ്ടും കുടിച്ചേര്‍ന്നോ കമാന്‍ഡുകള്‍ നല്‍കാന്‍ സാധി

ക്കും. എന്നാല്‍ ഉതിനു ശേഷം റ്റ്‌ ടെക്സ്റ്റുകളില്‍ നിന്ന്‌ SQL കഥാന്‍ഡുകളെയും, കീ വേര്‍

ഡുകളെയും വേര്‍തിരിച്ചറിയുന്നതിനായി നാം ചില രീതികള്‍ ഉപയോഗിക്കും. കമാന്‍ഡുകള്‍
ക്കും കീവേര്‍ഡുകള്‍ക്കും വലിയ അക്ഷരങ്ങള്‍ (Upper Case Letters) ഉപയോശിക്കുന്നു. എന്നാല്‍ ഉപയോ
EOI നിഷ്കര്‍ഷിച്ച വാക്കുകളായ (User defined) ടേബിളിന്റെ പേര്‌, നിരകളുടെ പേര്‌ തുടങ്ങിയവ ചെറിയ
അക്ഷരത്തില്‍ (Lower Case Letters) സുചിരിക്കുന്നു. കമാന്‍ഡുകളും ഒെട്ട്പുട്ടുകളും (പ്രതികരണങ്ങളും)
ഒരു ദെക്സ്്‌ ഫയലിനകത്ത്‌ tee എന്ന കമാന്‍ഡ്‌ നല്‍കി സുക്ഷിക്കാവുന്നതാണ്‌. ഉദാഹരണത്തിന്‌, tee
6ഡാഥ്റാധ്നറ്‌ എന്ന നിര്‍ദേരത്തിന്റെ പ്രവര്‍ത്തനത്തിന്‌ ശേഷം സ്‌ക്രീനില്‍ പ്ര്യക്ഷഷ്വെടുന്നതെല്ലാം output.txt
എന്ന ഫയല്‍ നിര്‍മിച്ച്‌ (: ഡ്രൈവില്‍ സംഭരിക്കുന്നു. ഈ അധ്യായത്തില്‍ ഈ ഫയലില്‍ സുക്ഷിച്ചിട്ടുള്ള
ഒട്ട്പുട്ടുകള്‍ ചിത്രരുപേണ കൊടുത്തിരിക്കുന്നു.

ഉപയോക്താവില്‍ നിന്ന്‌ ഏതു തരം ക്വറിയും സ്വീകരിക്കാന്‍ MySQL തയാറാണ്‌ എന്ന
സന്ദേശമാണ്‌ പ്രോംപ്റ്റ്‌ നമുക്ക്‌ നല്‍കുന്നത്‌. ഈ പ്രോംപ്റ്റില്‍ നമുക്ക്‌ ക്വറികള്‍ നല്‍കാ
വുന്നതാണ്‌.

MySQL@® നിന്ന്‌ പുറത്തുകടക്കാന്‍ QUIT അല്ലെങ്കില്‍ EXIT എന്ന്‌ കമാന്‍ഡ്‌ പ്രോം
പറ്റില്‍ നല്‍കണം.

mysql> EXIT;
922 MySQL ല്‍ ഒരു ഡാറ്റാബേസ്‌ നിര്‍മ്മിക്കുന്നു (Creating a database)

ഡാറ്റയില്‍ പ്രവര്‍ത്തിക്കുന്നതിന്‌ മുന്‍പ്‌ നാം ഒരു ഡാറ്റാബേസ്‌ സൃഷ്ടിക്കേണ്ടതുണ്ട്‌.
ഡാറ്റാബേസ്‌ എന്നത്‌ പട്ടിക (Table) സംഭരിക്കുന്നതിനുള്ള ഒരു പെട്ടി പോലെയാണ്‌.
MySQL ല്‍ ഡാറ്റാബേസ്‌ ഉണ്ടാക്കുന്നതിന്‌ CREATE DATABASE എന്ന കമാന്‍ഡ്‌
ഉപയോഗിക്കുന്നു. അതിന്റെ ഘടന താഴെപറയുന്ന രീതിയിലാണ്‌:

CREATE DATABASE <database_name>;
ഡാറ്റാബേസ്‌ ഉണ്ടാക്കുമ്പോള്‍ താഴെ പറയുന്ന വസ്തുതകള്‍ ശ്രദ്ധിക്കേണ്ടതാണ്‌

. വാകൃഘടനയില്‍ കൊടുത്ത <database name> എന്നത്‌ നിര്‍മ്മിക്കേണ്ട
ഡാറ്റാബേസിന്റെ പേരാണ്‌.

. ഡാറ്റാബേസിന്റെ പേര്‌ സാധിക്കുന്നിടത്തോളം അര്‍ഥപൂര്‍ണവും വിവരണാ
ത്മകവും ആയിരിക്കണം.

. <database name> അനന്യമായിരിക്കണം. ഒരേ പേരിലുള്ള രണ്ട്‌ ഡാറ്റാബേ
സുകള്‍ 2,9൮1. സെര്‍വറില്‍ ഉണ്ടാക്കാന്‍ സാധിക്കില്ല.

ഇ
ആജ്‌
school എന്ന പുതിയ ഡാറ്റാബേസ്‌
ഉണ്ടാക്കി നമ്മളുടെ ഡാറ്റാബേസ്‌ പ്രവര്‍ | File Edit View Search Terminal Help
ത്തനങ്ങള്‍ ആരംഭിക്കാം. ചിത്രം 92ല്‍ mySGl> CREATE DATABASE school;
കാണിച്ചിരിക്കുന്നത്‌ ഈ കമാന്‍ഡിന്റെ Query OK, 1 row affected (0.00 sec)
പ്രവര്‍ത്തനത്തിനു ശേഷമുള്ള സ്ക്രീ
moans. MySQL കമാന്‍ഡ്‌ പ്രോംപ്റ്റും, ചിത്രം 9.2: ഒരു ക്ഥാരീഡിന്റെ

കമാന്‍ഡും ആദ്യത്തെ വരിയില്‍ കാ പ്രവരിത്തമത്തിനുമേഷം/൧607. ഓലകം

ണാന്‍ കഴിയും. ഈ കമാന്‍ഡിനെ പ്രവര്‍ത്തിപ്പിച്ചശേഷം നല്‍കുന്ന സന്ദേശമാണ്‌ ro
9.208 കാണമുനാത്‌. (ഇനി മുതതീ മുകളിതീ കാണുനാ രിതിയിലുള്ള സ്‌കിന്‍ ഷോട്ടുകള്‍
ഒഴിവാക്കു? പകരം നാരര്‍്ദിഷ്ഠ ഓപ്ഛ'റേഷനായുക്ളൂ NIGEBW0 പ്രത്യേക അകഃശങ്ങളിത്‌
(Seperate fonts) അവതതിച്ചക്കുന്നതാണ്‌?

923 ഡാറ്റാബേസ്‌ തുറക്കുന്നു (Opening database)
ഒരു ഡാറ്റാബേസില്‍ പ്രവര്‍ത്തനം നടത്തുന്നതിന്‌ നാം അത്‌ തുറക്കേണ്ടതുണ്ട്‌. നാം
ഒരു ഡാറ്റാബേസ്‌ തുറക്കുമ്പോള്‍ അത്‌ MySQL സെര്‍വറിലെ സജീവ ഡാറ്റാബേസ്‌
(Active database) ആക്കി മാറ്റണം. ഇങ്ങനെ ഒരു ഡാറ്റാബേസ്‌ തുറക്കുന്നതിന്‌ USE
എന്ന കമാന്‍ഡാണ്‌ MySQL ല്‍ നല്‍കേണ്ടത്‌. അതിന്റെ വാകൃഘടന താഴെ കൊടുത്തി
രിക്കുന്ന രീതിയിലാണ്‌:

USE <database_ നണട?
ഇനി നമുക്ക്‌ school എന്ന ഡാറ്റാബേസ്‌ തുറക്കുന്നതിന്‌ ചുവടെ കൊടുത്തിരിക്കുന്ന
കമാന്‍ഡ്‌ നല്‍കാം.

USE school;
ഈ കമാന്‍ഡിന്റെ പ്രവര്‍ത്തനത്തിന്‌ ശേഷമുള്ള പ്രതികരണം താഴെ കൊടുത്തിരിക്കുന്നു:

Database changed
ഇപ്പോള്‍ school എന്ന ഡാറ്റാബേസാണ്‌ സജീവ ഡാറ്റാബേസ്‌. ഇത്‌ അര്‍ഥമാക്കുന്നത്‌
വിവിധ DDL, DML, DCL കമാന്‍ഡുകള്‍ ഇനി മുതല്‍ പ്രവര്‍ത്തിപ്പിക്കുന്നത്‌ school ഡാറ്റാ
ബേസിനെ അടിസ്ഥാനമാക്കിയാണ്‌. ഡാറ്റാബേസിന്റെ നിലനില്‍പ്പ്‌ ഇനി നമുക്ക്‌ പരിശോ
ധിക്കാം. ഒരു ഡാറ്റാബേസ്‌ ഉണ്ടോ ഇല്ലയോ എന്നറിയാന്‍ SHOW DATA BASES എന്ന
കമാന്‍ഡ്‌ ഉപയോഗിക്കാം. അത്‌ കംപ്യൂട്ടറിലെ എല്ലാ ഡാറ്റാബേസുകളും പട്ടികപ്പെടു
ത്തുന്നു.

mysql> SHOW DATABASES;
SHOW DATABASES; 4-------------------- +

ന്തി | Database |
ഈ കമാന്‍ഡിന്റെ ഓട്ട്പുട്ട്‌ ചിത്രം 9.3 ല്‍ കൊടുത്തിരി 4-------------------- +
ക്കുന്ന information_schema |
ന | Bee |
sc
92.4 nm oe! won eon | test
ata types in 4-27-27 2--2 =" 57-577 = +
( typ Q ) 4 rows in set (0.00 sec)
ഒരു പട്ടികയിലെ നിരയില്‍ നല്‍കുന്ന വിലയുടെ ഇന ചിത്രം 9.3: SHOW DATABASES
ADMUOTG BFF

ത്തെ ഡാറ്റ ഇനം നിര്‍വചിക്കുന്നു. ഡാറ്റ ഇനം ഒരു ഡാറ്റ
യുടെ കൃത്യത ഉറപ്പുവരുത്തുന്ന. ഡാറ്റാബേസ്‌ ഡിസൈനിങ്‌ സമയത്ത്‌ നിരകള്‍ക്ക്‌

) pee
316 | ള്ള

കൃത്യമായ ഡാറ്റ ഇനങ്ങള്‍ നല്‍കുവാന്‍ ശ്രദ്ധിക്കേണ്ടതാണ്‌. ഉദാഹരണത്തിന്‌ 2 എന്ന
സംഖ്യയെ ടെക്സ്റ്റ്‌ ഡാറ്റ ഇനമായി (സ്ട്രിംഗ്‌) നല്‍കിയാല്‍ അതിനെ ഗണിത പ്രക്രിയയില്‍
ഉപയോഗിക്കാന്‍ കഴിയില്ല. നേരെമറിച്ച്‌ അതേ സംഖ്യ പൂര്‍ണസഖ്യ, നിരയില്‍ നല്‍കിയാല്‍
അതിനെ ഗണിതത്തിന്‌ ഉപയോഗിക്കാം. അതുകൊണ്ട്‌ SQL ഡാറ്റ ഇനങ്ങള്‍ എന്ന ആശ
യത്തെ അവ പ്രതിനിധാനം ചെയ്യുന്ന ഡാറ്റ ഇനങ്ങള്‍, അവ ഓരോന്നും ഉള്‍ക്കൊള്ളുന്ന
വിലകളുടെ പരിധി മുതലായ ഘടകങ്ങളുടെ അടിസ്ഥാനത്തില്‍ നമുക്ക്‌ മനസ്സിലാക്കാം.
SQL ന്റെ വ്യത്യസ്ത പതിപ്പുകളില്‍ ഡാറ്റ ഇനങ്ങള്‍ വൃത്യസ്തമായിരിക്കും. ഡാറ്റ ഇനം
SQL ന്റെ വ്യത്യസ്ത പതിപ്പുകളില്‍ വൃത്യാസമുണ്ട്‌.

ഡാറ്റ ഇനത്തെ മൂന്നായി തരംതിരിക്കാം. സംഖ്യാഡാറ്റ ഇനം, സ്ട്രിംഗ്ഡാറ്റ ഇനം, തീയതി
സമയം എന്നിവ സൂചിപ്പിക്കുന്ന ഡാറ്റ ഇനം എന്നിവയാണവ. സംഖ്യാപരമായ മൂല്യ
ങ്ങളായ 7,100,234,-456,0 തുടങ്ങിയ സംഖ്യകളെ സംഖ്യാ ഡാറ്റ ഇനം ഉപയോഗിച്ച്‌ പ്രതി
നിധാനം ചെയ്യാം. "Aleena" (ഒരു വിദ്യാര്‍ഥിയുടെ Gald), "Kerala" (ഒരു സംസ്ഥാനത്തിന്റെ
പേര്‌), "F" (ലിംഗഭേദത്തെ സൂചിപ്പിക്കാന്‍) എന്നിവ സ്ട്രിംഗ്‌ ഡാറ്റ ഇനം ആണ്‌. '01-01-
2020, '23:34:3' തുടങ്ങിയവ തീയതിയും സമയവും സൂചിപ്പിക്കാനുള്ള ഡാറ്റ ഇനം ഉപയോ
ഗിച്ച്‌ പ്രതിനിധാനം ചെയ്യാം.

ഒ. സംഖ്യാവാറ്റ ഇനങ്ങള്‍

സംഖ്യാഡാറ്റ ഇനത്തിന്റെ മൂല്യങ്ങളെ ഏതെങ്കിലും സാധാരണ സാംഖ്യ പോലെ ഉപയോ
ഗിക്കാം. അവയില്‍ ഗണിത്രക്രിയകളായ സങ്കലനം, വ്യവകലനം, ഗുണനം, ഹരണം
എന്നിവ ചെയ്യാം. MySQL ല്‍ സാധാരണയായി ഉപയോഗിക്കുന്ന സംഖ്യാഡാറ്റ ഇനങ്ങ
ളാണ്‌ INT അല്ലെങ്കില്‍ INTEGER ഉം, DEC അല്ലെങ്കില്‍ DECIMAL ഉം.

(i) INT അല്ലെങ്കില്‍ INTEGER

നമുക്കറിയാവുന്നതുപോലെ പൂര്‍ണസംഖ്യകള്‍ എന്നാല്‍ ദശാംശ ഭാഗം ഇല്ലാത്ത സംഖ്യ
കളാണ്‌. അവ അധിസംഖ്യയോ, പൂജ്യമോ, ന്യൂനസംഖ്യയോ ആവാം. MySQL@ ഒരു
പൂര്‍ണസംഖ്യയെ പ്രതിനിധാനം ചെയ്യാന്‍ INT അല്ലെങ്കില്‍ INTEGER എന്ന ഡാറ്റ ഇനം
ഉപയോഗിക്കാം. ഉദാഹരണത്തിന്‌ 69,0, 112 തുടങ്ങിയ ഡാറ്റകള്‍ INT ഡാറ്റ ഇനങ്ങളാണ്‌.
(ii) DEC അല്ലെങ്കില്‍ DECIMAL

ദശാംശ ഭാഗത്തോടുകൂടിയ സംഖ്യകളെ DEC അല്ലെങ്കില്‍ DECIMAL എന്ന ഡാറ്റ ഇനം
കൊണ്ട്‌ പ്രതിനിധീകരിക്കാം. ഈ ഡാറ്റ ഇനത്തിന്റെ മാതൃകാ രൂപം 128112, (size,D)
അല്ലെങ്കില്‍ DEC (size,D) എന്നാണ്‌. ഇവിടെ size എന്ന ഘടകം, ദശാംശ ഭാഗം
ഉള്‍പ്പെടുന്ന മൂല്യത്തിന്റെ മൊത്തം എണ്ണം സൂചിപ്പിക്കുന്നു. D എന്നത്‌ സൂചിപ്പിക്കുന്നത്‌
പൂര്‍ണ സംഖ്ൃയകള്‍ക്കു ശേഷമുള്ള അക്കങ്ങളുടെ എണ്ണമാണ്‌. ഉദാഹരണത്തിന്‌ DEC
(5,2) അല്ലെങ്കില്‍ DECIMAL (5,2) എന്നതില്‍ 5 സാഖ്യയുടെ കൃത്യതയും (precision),
2 അതിന്റെ അളവും (Scale) സൂചിപ്പിക്കുന്നു. DY സവിശേഷതയോടുകൂടി ഒരു നിരയില്‍
ഏറ്റവും കൂടിയത്‌ അഞ്ച്‌ അക്കം സൂക്ഷിക്കാം അതില്‍ 2 അക്കങ്ങള്‍ ദശാംശ ബിന്ദുവിന്‌
ശേഷമായിരിക്കും. ഈ ഡാറ്റ ഇനം ഉപയോഗിച്ച്‌ ഒരു നിരയില്‍ നല്‍കാന്‍ സാധിക്കുന്ന
അക്കങ്ങളുടെ പരിധി -999.99 മുതല്‍ 999.99 വരെയാണ്‌. MySQL ലിലെ സംഖ്യാഡാഠറ്റ
ഇനങ്ങളുടെ ഒരു അവലോകനമാണ്‌ പട്ടിക 9.2 ല്‍ നല്‍കിയിരിക്കുന്നത്‌. ഇതില്‍ നല്‍കി
യിരിക്കുന്ന മൂല്യങ്ങള്‍ ഓരോ SQL പതിപ്പിനെയും ആശ്രയിച്ചിരിക്കും എന്ന്‌ ഓര്‍മിക്കുക.

വളരെ ചെറിയ - 128 മുതല്‍ 127 0 മുതല്‍ 255 1
_ 32768 9300832767 0 29008 65535 2
Mo)

MEDIUM INT - 8388608 മുതല്‍ 0 മുതല്‍
വലുഷമുള്ള 8388607 1677215
പൂര്‍ണസംഖ്യ

INT സാധാരണ പൂര്‍ണ - 2147483648 മുതല്‍ 0 മുതല്‍ 4
സംഖ്യാമൂല്യം 2147483647 4294967295

BIG INT വലിയ പൂര്‍ണ 19 അക്കങ്ങള്‍ 264 അക്കങ്ങള്‍
സംഖ്യാമൂല്യം വരെയുള്ള മൂല്യം വരെയുള്ള മൂല്യം 8
FLOAT (14, 2) ദശാംശ സംഖ്യ പൂര്‍ണസംഖ്യ ദാഗം 24 4
ആകുന്നതുവരെ
DOUBLE (14, 2) ഉരട്ട കൃത്യത പൂര്‍ണസംഖ്യ ദാഗം 53
യുള്ള ദശാംശ ആകുന്നതുവരെ
സംഖ്യാമൂല്യം

DECIMAL (M, D) സൂക്ഷ്മമായ സംഖ്യാഡാറ്റ ഉനത്തിനു
കൃത്യതയുള്ള ഏറ്റവും കൂടിയത്‌ 65
ദരാംര അക്കങ്ങള്‍ വരെ,
സംഖ്യാമൂല്യം അതില്‍ 30 അക്കങ്ങള്‍
ദരാംര ബിന്ദുവിന്‌
ശേഷം

പട്ടിക 9.2: MySQL O21 Mol WIN ഇനങ്ങളും അവയുടെ ്രരുകതകളും

b) സ്ട്രിംഗ്‌ ഡാറ്റ ഇനങ്ങള്‍

സ്ട്രിംഗ്‌ എന്നാല്‍ അക്ഷരങ്ങളുടെ കൂട്ടമാണ്‌ MySQLeNe ഏറ്റവും സാധാരണയായി
ഉപയോഗിക്കുന്ന സ്ര്രിംഗ്ഡാറ്റ ഇനങ്ങളാണ്‌ CHARACTER അല്ലെങ്കില്‍ CHAR ഉം,
VARCHAR ഉം.

(i) CHARACTER അല്ലെങ്കില്‍ CHAR

അക്ഷരങ്ങള്‍, ലിപികള്‍, സംഖ്യകള്‍, പ്രത്യേക ചിഹ്നങ്ങള്‍ മുതലായവ ഇതില്‍ ഉള്‍പ്പെടു
ന്നു. CHAR ന്‌ ഒരു നിശ്ചിത വലുപ്പമാണ്‌ ഉണ്ടായിരിക്കുക. ഈ ഡാറ്റ ഇനത്തിന്റെ ഘടന
CHAR (X) എന്നാണ്‌. X എന്നത്‌ ഡാറ്റ നിര്‍മ്മിക്കാന്‍ ഉപയോഗിക്കുന്ന അക്ഷരങ്ങളുടെ

318 F ള്ള

പരമാവധി എണ്ണം സൂചിപ്പിക്കുന്നു X ന്റെ വില 0 നും 255 നും ഇടയിലായിരിക്കും. ഒരു
നിരയിലെ നിശ്ചിത വലുപ്പമുള്ളതും, ചെറുതുമായ ഡാറ്റകള്‍ക്കാണ്‌ CHAR പ്രധാനമായും
ഉപയോഗിക്കുന്നത്‌. ഉദാഹരണത്തിന്‌ ഒരു പട്ടികയിലെ Gender എന്ന നിരയില്‍
പുരുഷനെ സൂചിപ്പിക്കുന്നതിന്‌ "14" എന്നും സ്ത്രീയെ സൂചിപ്പിക്കുന്നതിന്‌ 'F' എന്നും
നമുക്ക്‌ സംഭരിക്കണമെങ്കില്‍ ഈ നിരയെ CHAR ഡാറ്റ ഇനമായി പ്രഖ്യാപിക്കുന്നതാണ്‌
നല്ലത്‌. സംഭരിക്കേണ്ട ഡാറ്റയ്ക്ക്‌ ആവശ്യമില്ലെങ്കിലും നിര്‍ദേശിക്കപ്പെട്ട അത്രയും സ്ഥലം
എപ്പോഴും ഉപയോഗിക്കുന്നു. ഡാറ്റയിലുള്ള അക്ഷരങ്ങള്‍ നിരയുടെ പ്രഖ്യാപിത വലുപ്പ
ത്തെക്കാള്‍ കുറവാണെങ്കില്‍ ബാക്കിയുള്ള ഭാഗം ശൂന്യസ്ഥലം (spacebar character) ഉപ
യോഗിച്ചു പൂര്‍ണമാക്കുന്നതാണ്‌. എന്നാല്‍ പട്ടികയില്‍ നിന്ന്‌ ഈ മൂല്യം വീണ്ടെ
ടുക്കുമ്പോള്‍, ബാക്കിയുള്ള എല്ലാസ്ഥലങ്ങളും ഒഴിവാക്കപ്പെടുന്നു. CHAR തരത്തിലുള്ള
നിരയുടെ വലുപ്പം 1 ആണെങ്കില്‍, വലുപ്പം സൂചിപ്പിക്കേണ്ടതില്ല, കാരണം CHAR ന്റെ
തനത്‌ വലുപ്പം 1 ആണ്‌.

(ii) VARCHAR (size)

VARCHAR എന്നത്‌ വിവിധ നീളത്തിലുള്ള സ്ര്രിങ്ങുകളെ സൂചിപ്പിക്കുന്നു. അത്‌ CHARA
സമാനമാണ്‌. എന്നാല്‍ ഡാറ്റയ്ക്ക്‌ അനുവദിച്ച സ്ഥലം അതിന്റെ യഥാര്‍ഥ വലുപ്പത്തെ
ആശ്രയിച്ചിരിക്കും അല്ലാതെ പ്രഖ്യാപിക്കപ്പെട്ട വലുപ്പം അനുസരിച്ചല്ല. ഉദാഹരണമായി
ഒരു പട്ടികയിലെ Name എന്ന നിരയില്‍ ഡാറ്റ സംഭരിക്കണമെങ്കില്‍ ആ നിരയെ VARCHAR
തരമായി പ്രഖ്യാപിക്കുന്നതാണ്‌ നല്ലത്‌. കാരണം ആ നിരയിലെ ഡാറ്റയില്‍ വ്യത്യസ്ത
എണ്ണം അക്ഷരങ്ങള്‍ അടങ്ങിയിരിക്കാം. ഒരു സ്ര്രിങ്ങിന്റെ നീളം 0 മുതല്‍ 65535 വരെ
ആകാം. VARCHAR, മെമ്മറി സ്ഥലം മിതമായി ഉപയോഗിക്കുന്നു. എന്തുകൊണ്ടെന്നാല്‍,
വിലകള്‍ സംഭരിക്കുമ്പോള്‍ അതിനോടുകൂടി ശുന്യസ്ഥലങ്ങള്‍ ചേര്‍ക്കുന്നില്ല. മേല്‍
വിലാസം, പേരുകള്‍ തുടങ്ങിയവ ഇത്തരം ഡാറ്റകള്‍ക്ക്‌ ഉദാഹരണകളാണ്‌

൦. തീയതി, സമയം എന്നി ഡാറ്റ ഇനങ്ങള്‍

MySQL ലില്‍ തീയതിയും, സമയവും ശേഖരിക്കുന്നതിന്‌ ഡാറ്റ ഇനങ്ങളുണ്ട്‌. തീയതി
സംഭരിക്കുന്നതിന്‌ MySQL ല്‍ ഉപയോഗിക്കുന്ന ഡാറ്റ ഇനമാണ്‌ DATE. അതുപോലെ
സമയം സംഭരിക്കുന്നതിന്‌ TIME ഡാറ്റാ ഇനം ഉപയോഗിക്കുന്നു.

i) DATE

DATE ഡാറ്റ ഇനം ഉപയോഗിക്കുന്നത്‌ തീയതികള്‍ സംഭരിക്കുന്നതിനാണ്‌. YYYY-MM-
DD എന്ന @aliamlenens MySQL തീയതിയെ സംഭരിക്കുന്നത്‌. ഇതുപയോഗിച്ച്‌ 1000-01-01
മുതല്‍ 9999-12-31 വരെ രേഖപ്പെടുത്താവുന്നതാണ്‌. 73൮1. ല്‍ ഒരു രീതിയില്‍ തീയതി
കള്‍ പ്രദര്‍ശിക്കപ്പെടുന്നു എന്നാല്‍ SQL പ്രസ്താവനകളില്‍ നമുക്ക്‌ വിവിധ തരം DATE
രൂപഘടനകള്‍ ഉപയോഗിക്കാം. YYYY-MM-DD എന്നതാണ്‌ അടിസ്ഥാന മാതൃക.
എന്നാല്‍ നമുക്ക്‌ ഏതെങ്കിലും വിരാമചിഹ്നം (Punctuation) തീയതികള്‍ക്കിടയില്‍ ഉപയോ
ഗിക്കാന്‍ സാധിക്കും. ഉദാഹരണത്തിന്‌ '2011-01-24, '2011/01/25', 20111026 തുടങ്ങിയവ
സാധുവായ തീയതികളാണ്‌. മുകളിലുള്ള ഏതെങ്കിലും മാതൃകയില്‍ DATE ഡാറ്റ
തരത്തിലുള്ള നിരയിലേക്ക്‌ വിലകള്‍ നമുക്ക്‌ ചേര്‍ക്കാവുന്നതാണ്‌. MySQL ല്‍ DATE

എല്ലായ്പ്പോഴും year-month-day എന്ന ക്രമത്തില്‍ തന്നെ കൊടുത്തിരിക്കണം (ഉദാഹരണ
ത്തിന്‌ “98-0904)

ii) TIME

ഒരു നിരയില്‍ സമയ ഡാറ്റ സംഭരിക്കുന്നതിനാണ്‌ MySQL ല്‍ TIME ഡാറ്റ ഇനം ഉപയോ
ഗിക്കുന്നത്‌. 1111:7,7:55 അംഗീകൃത മാതൃകയിലാണ്‌ അത്‌ വിലകള്‍ പ്രദര്‍ശിപ്പിക്കുന്നത്‌.
TIME ഡാറ്റ ഇനം ഉപയോഗിച്ച്‌ ഒരു പ്രത്യേക സമയം (10 മണിക്കൂര്‍ 5 മിനിറ്റ്‌ 2 സെക്കന്റ്‌

എന്ന പോലെ) സംഭരിക്കുന്നതിനോടൊപ്പം, രണ്ടു സമയത്തിനിടയിലുള്ള ഇടവേള (23
മണിക്കൂറിനെക്കാള്‍ അധികമുള്ളതും) സംഭരിക്കുന്നതിനും അത്‌ ഉപയോഗിക്കാം.

325.678

' '
പട്ടിക 9.3 ലെ ഡാറ്റ ഇനം എന്ന [ des [
നിര അനുയോജ്യമായ ഡാറ്റ ഇനം Computer
ഉപയോഗിച്ച്‌ പൂരിപ്പിക്കുക. '2016-01-01'

450

22:32:45

നമുക്ക്‌ ചെയ്യാം

456787

പട്ടിക 9.3: വിലകളുടെ ഡ്രം

നിങ്ങളുടെ പുരോഗതി അറിയുക

1. കമാന്‍ഡാണ്‌ ഒരു ഡാറ്റാബസിനെ സജീവമാക്കാന്‍
ഉപയോഗിക്കുന്നത്‌

2. കമ്പ്യൂട്ടറില്‍ ഉള്ള ഡാറ്റാബേസിന്റെ പേര്‌ എങ്ങനെ കാണാന്‍ കഴിയും?
3. CHAR, VARCHAR എന്നീ ഡാറ്റ amend തമിലുള്ള വൃത്യാസം എന്ത്‌?
4. DATE ഡാറ്റ ഉനം എങ്ങനെയാണ്‌ മൂല്യങ്ങള്‍ സംഭരിക്കുന്നത്‌?

5. CHAR (5) എന്ന ഡാറ്റ ഉനത്തില്‍ പ്രഖ്യാപിച്ചിട്ടുള്ള ഒരു നിരയില്‍ 234 എന്ന
സംഖ്യ നമുക്ക്‌ സംഭരിക്കാന്‍ സാധിക്കുമോ?

9.3 SQL കമാന്‍ഡുകള്‍ (SQL commands)

ഡാറ്റാബേസില്‍ വിവിധ തരം പ്രവര്‍ത്തങ്ങള്‍ ചെയ്യുന്നതിനുള്ള കമാന്‍ഡുകള്‍ SQL
ലഭ്യമാക്കിയിരിക്കുന്നു. നാം മുന്‍പ്‌ സൂചിപ്പിച്ചതു പോലെ കമാന്‍ഡുകളെ DDL, DML,
DCL കമാന്‍ഡുകളെന്നും തരംതിരിച്ചിട്ടുണ്ട്‌ ഏറ്റവും സാധാരണയായി ഉപയോഗിക്കുന്ന

ഈ] 320

DDL, DML കമാന്‍ഡുകളെക്കുറിച്ച്‌ നമുക്ക്‌ ചര്‍ച്ച ചെയ്യാം. ഡാറ്റാബേസിന്റെ ഘടനാപര
മായ കാര്യങ്ങള്‍ ചെയ്യുന്നതിനാണ്‌ DDL കമാന്‍ഡുകള്‍ ഉപയോഗിക്കുന്നത്‌. ഒരു പട്ടിക
നിര്‍മ്മിക്കുക, അത്‌ പുതുക്കുക, പട്ടിക നീക്കം ചെയ്യുക തുടങ്ങിയ പ്രവര്‍ത്തനങ്ങള്‍
ഇതില്‍ ഉള്‍പ്പെടുന്നു.

ഒരു പട്ടികയുടെ ഉള്ളടക്കവുമായി ബന്ധപ്പെട്ട പ്രവര്‍ത്തനങ്ങള്‍ക്കാണ്‌ DML കമാന്‍ഡുകള്‍
ഉപയോഗിക്കുന്നത്‌. ഒരു പട്ടികയില്‍ റെക്കോര്‍ഡുകള്‍ ചേര്‍ക്കുക, വീണ്ടെടുക്കുക, പരിഷ്‌
ക്കരിക്കുക, ഒഴിവാക്കുക എന്നീ പ്രവര്‍ത്തനങ്ങള്‍ ഇതില്‍ ഉള്‍പ്പെടുന്നു. ഒരു പ്രത്യേക
വസ്തുവിനെ സംബന്ധിച്ച ഡാറ്റ സംഭരിക്കുന്നതിന്‌ പട്ടിക നിര്‍മ്മിക്കുക, ആവശ്യമായ
വിവരം വീണ്ടെടുക്കുക, ആവശ്യമില്ലാത്തവ ഒഴിവാക്കുക എന്നീ പ്രവര്‍ത്തനങ്ങള്‍ ചെയ്യു
ന്നതിന്‌ ഈ കമാന്‍ഡുകള്‍ പരിചയപ്പെടുത്തുന്നു.

9.4 പട്ടികയുടെ നിര്‍മ്മാണം (Creating tables)

ഒരു റിലേഷണല്‍ ഡാഠറ്റാബേസിന്റെ ഏറ്റവും പ്രധാനപ്പെട്ട ഘടകമാണ്‌ പട്ടികകള്‍. ഏതൊരു
ഡാറ്റാബേസിന്റെയും പ്രാഥമികമായ ആവശ്യം പട്ടികകളില്‍ സംഭരിച്ചിരിക്കുന്ന ഡാറ്റ
പരിപാലിക്കുക എന്നതാണ്‌. ഇപ്പോള്‍ നമുക്ക്‌ പട്ടിക 9.1 ലുള്ള student എന്ന പട്ടിക പരി
ഗണിക്കാം. ഒരു കൂട്ടം നിരകളുള്ള ഒരു പട്ടിക നാം എങ്ങനെയാണ്‌ നിര്‍മ്മിക്കുന്നത്‌?
CREATE TABLE എന്ന DDL കമാന്‍ഡ്‌ ഉപയോഗിച്ചാണ്‌ പട്ടിക നിര്‍വചിക്കുന്നത്‌.
ഇതിന്‌ പട്ടികയുടെ പേര്‍, നിരയുടെ പേര്‌, ഡാറ്റ ഇനം, അവയുടെ വലുപ്പം മറ്റെന്തെങ്കിലും
നിബന്ധനകള്‍ ഉണ്ടെങ്കില്‍ അവയും ഉള്‍പ്പെടുത്തി പട്ടിക നിര്‍വചിക്കേണ്ടതുണ്ട്‌. ഒരു
പട്ടികയില്‍ കുറഞ്ഞത്‌ ഒരു നിരയെങ്കിലും ഉണ്ടായിരിക്കണം. CREATE TABLE
കമാന്‍ഡിന്റെ വാകൃഘടന താഴെക്കൊടുക്കുന്നു.

CREATE TABLE <table നണട
(<column_name> <data_type> [<constraint>]
[, <column_name> <data_type> [<constraint>, ]

ഇവിടെ <table name> എന്നത്‌ പട്ടികയുടെ പേര്‌ സൂചിപ്പിക്കുന്നു. <column_name>
എന്നത്‌ പട്ടികയിലെ ഒരു നിരയുടെ പേര്‌ സൂചിപ്പിക്കുന്നു. <constraint> എന്നത്‌
ഒരു നിരയിലെ വിലകളില്‍ ഉപയോഗിക്കാവുന്ന നിയമങ്ങള്‍ ഏതെന്ന്‌ വ്യക്തമാക്കുന്നു.
എല്ലാ നിരകളും ഒരു ജോഡി ആവരണചിഹനങ്ങള്‍ക്ക്‌ (Parenthesis) അകത്താണ്‌ എഴുതേ
ണ്ടത്‌. ഓരോന്നും കോമ ഉപയോഗിച്ച്‌ വേര്‍തിരിക്കണം. നമുക്ക്‌ എല്ലാ നിരകളും ഒരു
വരിയില്‍ എഴുതുവാന്‍ കഴിയും.

9.4.1 പട്ടികകളുടെയും, നിരകളുടെയും പേര്‌ നല്‍കുന്നതിനുള്ള നിയമങ്ങള്‍
(Rules for naming tables and columns)

പട്ടികകയ്ക്കും, നിരയ്ക്കും പേരു നല്‍കുമ്പോള്‍ താഴെ പറയുന്ന കാര്യങ്ങള്‍ ശ്രദ്ധിക്കേ
ണ്ടതാണ്‌

_ 7321

e പേരില്‍ അക്ഷരങ്ങള്‍ (A-Z, a-Z), സംഖ്യകള്‍ (0-9), അണ്ടര്‍ സ്‌കോര്‍ (_), ഡോളര്‍($)
തുടങ്ങിയ ചിഹ്നങ്ങള്‍ ഉപയോഗിക്കാവുന്നതാണ്‌.

. പേരിനകത്ത്‌ ഒരു അക്ഷരമെങ്കിലും ഉണ്ടായിരിക്കണം.

. പേരില്‍ ശൂന്യസ്ഥലം, പ്രത്യേക ചിഹ്നങ്ങള്‍ എന്നിവ ഉപയോഗിക്കാന്‍ പാടില്ല.
° SQL ലിനകത്തെ കീവേര്‍ഡുകള്‍ ഉപയോഗിക്കാന്‍ പാടില്ല.

ഒരു പട്ടികയുടെ പേര്‌ മറ്റൊരു പട്ടികയ്ക്ക്‌ നല്‍കാന്‍ പാടില്ല.

allel MYSQL പതിഷുകളില്‍ പട്ടികയുടെ പേര്‌ വിരാമ ചിഹ്നങ്ങള്‍ ("' ") ഉപയോമിച്ച്‌
എഴുതാറുണ്ട്‌. പട്ടികയുടെ പേര്‌ ഉദ്ധരണികള്‍ക്കുള്ളില്‍ ഉപയോിക്കാം. ഏത്‌ പ്രത്യേക
ചിഹ്നവും പട്ടികയുടെ പേരില്‍ ഉള്‍കെടുത്താം.

Admission number പൂര്‍ണ സംഖ്യ

അന്ത
ee
ളള ജേ
പ പച

പരിക 9.4:student പടികയുടെ COUSIMIISIAG

പട്ടിക 9.4 ല്‍ കൊടുത്തിരിക്കുന്ന വിശദാംശങ്ങള്‍ക്ക്‌ അനുസരിച്ച്‌ ഒരു പട്ടിക നിര്‍മ്മി
ക്കാനാവശ്യമായ പ്രസ്താവന താഴെ കൊടുക്കുന്നു.

CREATE TABLE student

(adm_no INT,

name VARCHAR (20),

gender CHAR,

dob DATE,

course VARCHAR(15),

£ income INT);
ഇവിടെ CREATE TABLE എന്ന കമാന്‍ഡ്‌ adm no, name, gender, dob, course,
£_income എന്നീ ആറു നിരകളോടു കൂടിയ ഒരു പട്ടിക നിര്‍മ്മിക്കുന്നു. adm _no എന്ന
നിരയില്‍ പൂര്‍ണ സംഖ്യകളും name എന്ന നിരയില്‍ പരമാവധി 20 അക്ഷരങ്ങളും
വിദ്യാര്‍ഥി ആണ്‍കുട്ടിയാണോ പെണ്‍കുട്ടിയാണോ എന്ന്‌ സൂചിപ്പിക്കുന്നതിനുള്ള ഒരു
അക്ഷരം Gender ലും സൂചിപ്പിക്കുന്നു. course എന്ന നിരയില്‍ വിദ്യാര്‍ഥിയുടെ

കോഴ്‌സും, 7 2൩൧൦൬൭ എന്നത്‌ കുടുംബത്തിന്റെ വരുമാനം സംഭരിക്കുന്നതിനുള്ള നിരയും
ആണ്‌. name, ഠഠഡ്ഥടട എന്നീ നിരകള്‍ സ്ട്രിംഗ്‌ സംഭരിക്കുന്നതിനുള്ള സ്ഥലം കരുതി
വയ്ക്കും. ഒരു പട്ടിക നിര്‍മ്മിച്ച്‌ അതിലേക്ക്‌ റെക്കോര്‍ഡുകള്‍ ചേര്‍ക്കുമ്പോള്‍ ചില നിര
കളില്‍ പ്രത്യേക നിബന്ധനകള്‍ പാലിക്കേണ്ടത്‌ ആവശ്യമാണ്‌. ചില നിരകളില്‍ ശൂന്യ,
മാകാതിരിക്കുക, മറ്റു ചില നിരകളില്‍ ആവര്‍ത്തനങ്ങള്‍ ഒഴിവാക്കുക തുടങ്ങിയവയാകാം
ഈ നിബന്ധനകള്‍. പട്ടികയുടെ നിര്‍മ്മാണ വേളയില്‍ത്തന്നെ അത്‌ സംബന്ധിച്ച അറിവു
ണ്ടായിരിക്കണം. Constraint എന്നു വിളിക്കുന്ന ചില കീവേര്‍ഡുകള്‍ ഈ ആവശ്യത്തിനായി
MySQL ല്‍ ലഭ്യമാക്കിയിട്ടുണ്ട്‌.

9.4.2 കണ്‍സ്ട്രെയിര്റുകള്‍ (Constraints)

ഒരു പട്ടികയിലെ നിരകളില്‍ ചേര്‍ക്കേണ്ട ഡാറ്റകളില്‍ നടപ്പില്‍ വരുത്തുന്ന നിയമങ്ങളാണ്‌
കണ്‍സ്‌ട്രെയിന്നുകള്‍. ഒരു പട്ടിക നിര്‍മ്മിക്കുമ്പോള്‍ ഫീല്‍ഡുകളിലേക്ക്‌ നാം നല്‍കുന്ന
വിലകളിന്മേല്‍ കണ്‍സ്ട്രയിന്റുകള്‍ നമുക്ക്‌ പ്രയോഗിക്കാം. ഇത്‌ ഒരു നിരയുടെ നിര്‍വ
ചനത്തില്‍ നല്‍കിയാല്‍ ഈ നിബന്ധന ലംഘിക്കുന്ന ഒരു വിലയും 1൮. സ്വീകരിക്കില്ല.
ഇത്‌ ഡാറ്റാബേസിലെ ഡാറ്റയുടെ കൃത്യതയും, വിശ്വാസൃതയും ഉറപ്പുവരുത്തുന്നു. ഈ
നിബന്ധനകള്‍ ഡാറ്റാബേസിന്റെ സമ്പൂര്‍ണത ഉറപ്പുവരുത്തുന്നതിനാല്‍ അവയെ ഡാറ്റാ
ബേസ്‌ സമ്പൂര്‍ണതാ കണ്‍സ്ട്രെയിന്റുകള്‍ (Integrity Constraints) എന്നു വിളിക്കുന്നു.
കണ്‍സ്‌ട്രെയിന്റുകള്‍ നിരയുടെ തലത്തിലോ പട്ടികയുടെ തലത്തിലോ ഉണ്ടാക്കാവുന്ന
താണ്‌.

a. നിരകളിന്‍മേലുള്ള കണ്‍സ്‌ട്രെയിന്റുകള്‍

നിരകളിന്‍മേലുള്ള കണ്‍സ്‌ട്രെയിന്റുകള്‍ ഓരോ നിരയിലും പ്രത്യേകമായി ഉപയോഗിക്കു
ന്നു. അവ ഒരു നിരയുടെ ഡാറ്റ ഇനം നല്‍കിയതിനുശേഷമാണ്‌ എഴുതുക. താഴെ
പറയുന്നവയാണ്‌ നിരകളുടെ തലത്തിലുള്ള കണ്‍സ്‌ട്രെയിന്റുകള്‍.

i) NOT NULL

ഒരു നിരയില്‍ മൂല്യം ശൂന്യമാക്കരുത്‌ എന്നാണ്‌ ഇത്‌ പ്രസ്താവിക്കുന്നത്‌. NULL എന്നത്‌
SOL ലെ ശുന്യ സ്ഥലത്തെ സൂചിപ്പിക്കുന്ന കീവേര്‍ഡാണ്‌. അത്‌ വിട്ടഭാഗമോ, പൂജ്യമോ
അല്ല എന്ന്‌ പ്രധാനമായും ഓര്‍മ്മിക്കേണ്ടതാണ്‌. അത്‌ തികച്ചും വ്ൃത്യസ്തമായ ഒന്നാ
ണ്‌. വിട്ടഭാഗം മറ്റൊരു വിട്ടഭാഗത്തിനും, പൂജ്യം മറ്റൊരു പൂജ്യത്തിനും തുല്യമാണെങ്കില്‍
NULL ഒരിക്കലും മറ്റൊരു NULL ന്‌ തുല്യമല്ല. രണ്ടു NULL മൂല്യങ്ങളെ കൂട്ടാനോ,
കുറയ്ക്കാനോ, താരതമ്യം ചെയ്യാനോ സാധ്യമല്ല.

ii) AUTO_INCREMENT

MySOL ലെ കീവേഡായ AUTO_INCREMENT ഉപയോഗിക്കുന്നത്‌ സ്വയം വര്‍ധന നടപ്പില്‍
വരുത്തുന്നതിനാണ്‌. ചറ INCREMENT എന്ന കണ്‍സ്ട്രയിന്റ്‌ ഉള്ള ഒരു നിരയില്‍
മൂല്യം നല്‍കിയിട്ടില്ലെങ്കില്‍ MySQL സീരിയല്‍ നമ്പറുകള്‍ സ്വയമായി ക്രമീകരിക്കുകയും
പുതിയ നിരയുടെ അനുബന്ധ റെക്കോര്‍ഡില്‍ പുതുതായി നിശ്ചയിച്ചിട്ടുള്ള മൂല്യങ്ങള്‍
ചേര്‍ക്കുകയും ചെയ്യുന്നു. AUTO_INCREMENT ന്റെ തനത്‌ മൂല്യം 1 ആണ്‌. അതിനാല്‍

തഞ്ജന്നന്നന്നന്ന 1000000000

ഓരോ റെക്കോര്‍ഡിനും 1 വച്ച്‌ മൂല്യം വര്‍ധിച്ചുകൊണ്ടേയിരിക്കും. ഓരോ നിരയിലേക്കും
NULL മൂല്യം കൊടുക്കുകയാണെങ്കില്‍ ഈ സവിശേഷ സ്വഭാവം അത്‌ കാണിക്കും.
AUTO INCREMENT സവിശേഷത ഓരോ പുതിയ വരിക്കും ഒരു അനനൃമായ ID
(Unique ID) നിശ്ചയിക്കുന്നത്‌ എളുപ്പമാക്കുന്നു. കാരണം 13, നമുക്കായി മൂല്യങ്ങള്‍
ഉണ്ടാക്കുന്നു. AUTO INCREMENT നല്‍കിയിട്ടുള്ള നിര പട്ടികയുടെ പ്രാഥമിക കീ ആയി
നിര്‍വചിക്കേണ്ടതുണ്ട്‌. ഒരു പട്ടികയിലെ ഒരു നിരയില്‍ മാത്രമേ AUTO INCREMENT
അനുവദിക്കൂ.

iii) UNIQUE
ഈ AMWA (SOY ഉപയോഗിക്കുന്ന നിരയിലെ രണ്ടു വരികളില്‍ ഒരേ മൂല്യം ഉണ്ടായി
രിക്കുകയില്ല.

iv) PRIMARY KEY

ഈ കണ്‍സ്ര്രയിന്റ്‌ പട്ടികയുടെ പ്രൈമറി കീയായി ഒരു നിരയെ മാറ്റുന്നു. ഈ കണ്‍സ്‌
ഭ്രയിന്റ്‌ UNIQUE ന്‌ സമാനമാണ്‌. ഒരു നിരയില്‍ അല്ലെങ്കില്‍ നിരകളുടെ സംയോജന
ത്തില്‍ കണ്‍സ്ട്രയിന്റ്‌ ഉപയോഗിക്കാന്‍ സാധിക്കും. പ്രൈമറി കീയില്‍ NULL മൂല്യങ്ങള്‍
ഉണ്ടായിരിക്കരുത്‌. മറ്റൊരു തരത്തില്‍ പറഞ്ഞാല്‍ ഇത്‌ UNIQUE, NOT NULL എന്നീ കണ്‍
സ്‌ട്രെയിന്നുകളുടെ സംയോജനമായി കണക്കാക്കാം. പ്രൈമറി കീ നടപ്പില്‍ വരുത്തുന്ന
തിന്‌ ആ നിര അനന്യമായതും, ശുന്യമല്ലാത്തതും ആയിരിക്കണം.

v) DEFAULT

DO AMM (SOly” ഉപയോഗിച്ച്‌ ഒരു നിരയ്ക്ക്‌ തനത്‌ മൂല്യം നല്‍കാവുന്നതാണ്‌.
ഉപയോക്താവ്‌ ഒരു നിരയ്ക്ക്‌ മൂല്യം നല്‍കുന്നില്ലെങ്കില്‍ ഈ കണ്‍സ്ട്രയിന്റ്‌ ഉപയോഗിച്ച്‌
തനതു മൂല്യം കൊടുക്കുന്നതാണ്‌.

ഇനി നമുക്ക്‌ ബിബ പട്ടികയ്ക്ക്‌ ചില കണ്‍സ്ട്രയിന്റുകള്‍ നല്‍കാം. ഇതിന്‌ താഴെ പറയുന്ന
രീതിയില്‍ ക്വറി 9.1 പരിഷ്കരിക്കാം (ക്വറി 9.2 കാണുക).

CREATE TABLE student

(adm_no INT PRIMARY KEY AUTO INCREMENT,

name VARCHAR (20) NOT NULL,

gender CHAR DEFAULT 'M',

dob DATE,

course VARCHAR (15)

£ income INT);
ക്വറി 9.2 ല്‍ PRIMARY KEY, AUTO_INCREMENT എന്നി കണ്‍സ്ട്രയിന്റുകള്‍ adm_no
എന്ന നിരയില്‍ കൊടുത്തിട്ടുണ്ട്‌. അതിനാല്‍ ഈ നിരയില്‍ ആവര്‍ത്തിച്ചുവരുന്ന ഡാറ്റകള്‍

ത്തം

സ്വീകരിക്കപ്പെടുകയില്ല. ഈ നിരയിലേക്ക്‌ നാം മൂല്യങ്ങളൊന്നും നല്‍കിയില്ലെങ്കില്‍ MySQL
തന്നെ ഡാറ്റ യാന്ത്രികമായി സൃഷ്ടിക്കും. NOT NULL കണ്‍സ്ട്രയിന്റ്‌ NAME എന്ന നിരയില്‍

നല്‍കിയിരിക്കുന്നതിനാല്‍ ആ നിര ശൂന്യമായിരിക്കാന്‍ അനുവദിക്കുന്നതല്ല. അതായത്‌
ആ നിരയില്‍ ഒരു ഡാറ്റ നിര്‍ബന്ധമാണ്‌ GemjGalooe! gender എന്ന നിരയില്‍ 'M'
എന്ന്‌ നാം നല്‍കിയില്ലെങ്കില്‍ തനതു വിലയായി 'M' സംഭരിക്കപ്പെടും

b. പട്ടികയുടെ തലത്തിലുള്ള കണ്‍സ്ട്രയിന്റുകള്‍ (Table Constraints)

പട്ടികയുടെ തലത്തിലുള്ള കണ്‍സ്ര്രയിന്റുകള്‍ നിരയുടെ തലത്തിലുള്ള കണ്‍സ്ട്രയിന്റു
കള്‍ക്ക്‌ സമാനമാണ്‌. പട്ടികയുടെ തലത്തിലുള്ള കണ്‍സ്ട്രയിന്റുകള്‍ ഒന്നിലധികം നിരക
ളില്‍ ഉപയോഗിക്കാന്‍ സാധിക്കും എന്നതാണ്‌ പ്രധാന വ്യത്യാസം. ഒരു കണ്‍സ്ട്രയിന്റ്‌
ഏതാനും നിരകളില്‍ പ്രയോഗിച്ചാല്‍ അതിനെ പട്ടികയുടെ തലത്തിലുള്ള കണ്‍സ്ര്ര
യിന്റ്‌ എന്നു പറയുന്നു. പട്ടികയുടെ തലത്തിലുള്ള കണ്‍സ്ട്രയിന്റ്‌ ഒരു പട്ടികയുടെ
നിര്‍വചനത്തില്‍ അവസാനമാണ്‌ കൊടുക്കേണ്ടത്‌. ഉദാഹരണത്തിന്‌ ക്വറി 9.3, stock
എന്ന പട്ടിക നിര്‍മിക്കുന്നു. icode, iname എന്നീ നിരകള്‍ക്ക്‌ UNIQUE എന്ന്‌ സംയുക്ത
മായി നല്‍കിയിരിക്കുന്നു.

കരി CREATE TABLE stock

(icode CHAR(2) PRIMARY KEY AUTO_INCREMENT,

iname VARCHAR (30) NOT NULL,

dt_purchase DATE,

rate DECIMAL(10,2),

qty INT,

UNIQUE (icode, iname));
ക്വറി 9.3 icode, iname എന്നീ നിരകളില്‍ ഒരേ ഡാറ്റ വന്നിട്ടില്ല എന്ന്‌ ഉറപ്പു
വരുത്തുന്നു.

9.43 ഒരു പട്ടികയുടെ ഘടന മനസ്സിലാക്കുന്നു (Viewing the structure of a table)

student, stock എന്നീ രണ്ടു പട്ടികകള്‍ നാം നിര്‍മ്മിച്ചല്ലോ. ഒരു പട്ടിക നിര്‍മ്മിച്ച
ശേഷം അതിന്റെ ഘടന എങ്ങനെയാണ്‌ കാണുന്നത്‌? DESCRIBE കമാന്‍ഡ്‌ ഉപയോഗിച്ച്‌
ഒരു പട്ടികയുടെ ഘടന മനസ്സിലാക്കാന്‍ സാധിക്കും. ഇതിന്റെ വാകൃഘടന താഴെ കൊടു
ത്തിരിക്കുന്നു.

DESCRIBE <table name>;
OR
DESC <table name>;

student എന്ന പട്ടികയുടെ ഘടന കാണുന്നതിനുള്ള കമാന്‍ഡാണ്‌

DESC student;

ചിത്രം 9.4 ഈ കമാന്‍ഡിന്റെ ഓട്ട്പുട്ട്‌ കാണിച്ചു തരുന്നു.

4-------------- -------. + Santen ----------. to +
| Type | Null | Key | Default | Extra |
4-------------- 4-------. ------ on +o - +
| ant (11) | NO | PRI | NULL | auto_increment |
| varchar(20) | NO | | NULL I I
| char{1) | YES | 1M | ]
| date | YES i} | NULL | I
| varchar({15) | YES i} | NULL I I
| ant (11) | YES | | NULL I I

+------ 4+----- +--------- 4+---------------- +

G6 rows in set (0.02 sec)

ചിത്രം 9.4: student പട്ടികയുടെ LSM

ക്വറി 9.2 ല്‍ adm no, f income എന്നീ രണ്ടു +------------------ +

നിരകളുടെ വലുപ്പം പറഞ്ഞിട്ടില്ല എന്നത്‌ ശ്രദ്ധിക്കുക. | Tables_in_school |

എന്നാല്‍ MySQL ഈ രണ്ടു നിരകളുടെ വലുപ്പം 11 | stud OO റ

student

ആയി സ്വീകരിക്കും adm no എന്ന നിര PRIMARY +

KEY, AUTO_INCREMENT ആയി പ്രസ്താവിച്ചിട്ടു 1 row in set (0.00 sec)
ണ്ട്‌. അതിനാല്‍ ഈ നിരകളില്‍ ശൂന്യമോ ആവര്‍ ചരം 9.5: SHOW TABLES of 99995"
ത്തിച്ചുള്ള മൂല്യങ്ങളോ വരുവാന്‍ അനുവദിക്കില്ല. ഈ

നിരയിലേക്ക്‌ മൂല്യങ്ങള്‍ നല്‍കാതിരുന്നാല്‍ ബന്ധപ്പെട്ട നിരയുടെ മൂല്യം 1 വര്‍ധിപ്പിച്ചു
കൊണ്ട്‌ പുതിയ മൂല്യം നിര്‍മ്മിക്കും. ആദ്യ റെക്കോര്‍ഡില്‍ ഈ നിരയുടെ മൂല്യം ഇല്ലാതി
രുന്നാല്‍ MySQL തനതുമൂല്യമായി 1 നല്‍കുന്നു. Gender എന്ന നിരയിലേക്ക്‌ ഒരു
സ്ഥിര മൂല്യം '14' എന്ന്‌ നല്‍കിയിരിക്കുന്നതായി നമുക്ക്‌ കാണാന്‍ സാധിക്കും. ചിത്രം
9.4 ഈ സവിശേഷത വിവരിക്കുന്നു. നിലവിലുള്ള ഡാറ്റാബേസിലെ പട്ടികകള്‍ കാണു
ന്നതിന്‌ SHOW TABLES എന്ന കമാന്‍ഡ്‌ ഉപയോഗിക്കാം (ചിത്രം 9.5).

ചിത്രം 9.4 ഉപയോഗിച്ച്‌ stock എന്ന പട്ടികയുടെ ഘടന എഴുതുക.
നിങ്ങളുടെ ഉത്തരം DESC stock; എന്ന കമാന്‍ഡ്‌ ഉപയോഗിച്ച്‌
നമുക്ക്‌ ചെയ്യാം പരിശോധിക്കുക.

നിങ്ങളുടെ പുരോഗതി അറിയറുക

1. ഒരു പട്ടികയുടെ ഘടന കാണുന്നതിനു വേണടി താഴെ പറയുന്ന ഏതു കമാന്‍ഡാണ്‌
ഉപയോിക്കേണത്‌ ?

a. LIST b. SHOW c. DESCRIBE d. STRUCT
2. CREATE TABLE കമാന്‍ഡിന്റെ വാക്ൃഘടന എഴുതുക.

3. നിരകളില്‍ ഉപയോഥിക്കുന്ന കണ്‍സ്ട്രയിന്റുകളുടെ പേരെഴുതുക.

4. PRIMARY KEY, UNIQUE എന്നി കണ്‍സ്ട്രയിന്റുകള്‍ തമിലുള്ള വ്യത്യാസം
എഴുതുക.

5. ഷഫഠ INCREMENT എന്ന കണ്‍സ്ട്രയിന്റിന്റെ സവിശേഷതകള്‍ എനൊക്കെ?
6. ഒരു പട്ടികയ്ക്ക്‌ പേര്‌ നല്‍കുന്നതിനുള്ള നിയമങ്ങള്‍ എഴുതുക.

7. ഒരു പട്ടികയുടെ PRIMARY KEY യായി എത്ര നിരകള്‍ പ്രസ്താവിക്കാം?

95 ഒരൂ പട്ടികയില്‍ ഡാറ്റ ചേര്‍ക്കുന്ന രീതി
(Inserting data into tables)

ഒരു ഡാറ്റാബേസും അതിന്റെ പട്ടികകളും നാം നിര്‍മ്മിച്ചു കഴിഞ്ഞു. ഈ പട്ടികയില്‍
ഏതാനും റെക്കോര്‍ഡുകള്‍ ചേര്‍ക്കുന്നത്‌ എങ്ങനെയെന്ന്‌ നമുക്ക്‌ ചര്‍ച്ച ചെയ്യാം. പട്ടിക
യില്‍ ഡാറ്റ ചേര്‍ക്കുന്നതിന്‌ INSERT INTO എന്ന DML കമാന്‍ഡ്‌ ഉപയോഗിക്കുന്നു.
അതിന്റെ വാകൃഘടന താഴെ കൊടുക്കുന്നു.

INSERT INTO <table name> [<columnl>,<column2>,...,<columnN>]
VALUES (<valuel>,<value2>,...,<valueN>) ;

ഇവിടെ <table name> എന്നത്‌ വരികള്‍ ഉള്‍പ്പെടുത്തേണ്ട പട്ടികയുടെ പേരാണ്‌.
<column1>,<column2>,...... 7<column N> എന്നത്‌ മൂല്യങ്ങള്‍ ചേര്‍ക്കേണ്ട നിര
കളാണ്‌. <valuel>,<value2>,...<value N> എന്നത്‌ നിര്‍ദേശിച്ചിട്ടുള്ള നിരകളില്‍
ചേര്‍ക്കേണ്ട വിലകളാണ്‌.

ഉദാഹരണത്തിന്‌ student എന്ന പട്ടികയുടെ ഡാറ്റകളായ 1001, 'Alok', 2൧, 1998/10/2,
‘Science’, 24000 എന്നിവ പുതിയ റെക്കോര്‍ഡായി 8൦൩ no, name, gender, dob,
course, f_ income എന്നീ നിരകളിലേക്ക്‌ യഥാക്രമം ചേര്‍ക്കാം. (ക്വറി 9.4 ഉപയോഗിക്കുക)

കവറില്‍ INSERT INTO student

VALUES (1001, 'Alok','M','1998/10/2', 'Science',
24000);
കമ്പ്യൂട്ടറിന്റെ പ്രതികരണം ഇതായിരിക്കും.
Query OK, 1 row affected (0.05 sec)

ഓരോ നിരയിലും ഓരോ മൂല്യങ്ങള്‍ നല്‍കി INSERT INTO കമാന്‍ഡ്‌ student എന്ന
പട്ടികയില്‍ ഒരു പുതിയ വരി ചേര്‍ക്കുന്നു. പട്ടികയില്‍ ഒരു വരി ചേര്‍ക്കുമ്പോള്‍ എല്ലാ
നിരയിലും മൂല്യങ്ങള്‍ ഉണ്ടെങ്കില്‍ ക്വറിയില്‍ നിരയുടെ പേര്‌ പരാമര്‍ശിക്കേണ്ട ആവ
DIME]. പക്ഷേ, മൂല്യങ്ങളുടെ ക്രമം പട്ടികയിലെ നിരകളുടെ (ക്രമത്തിനനുസരിച്ചാണ്‌
എന്ന്‌ ഉറപ്പ്‌ വരുത്തേണ്ടതാണ്‌. ഇനി ക്വറി 9.5ല്‍ കാണിച്ചിരിക്കുന്നതുപോലെ ചില
മാറ്റങ്ങള്‍ വരുത്തി മറ്റൊരു വരി ചേര്‍ക്കാം.

കറി INSERT INTO student (name, dob, course, 2 income)

VALUES ('Nike','1998/11/26', 'Science', 35000);
ഈ പ്രസ്താവനയുടെ പ്രതികരണം ഇതായിരിക്കും.

Query OK, 1 row affected (0.01 sec)

[9 | 3277
=

തഞ്ജന്നന്നന്നന്ന 1000000000

HIN 9.508 adm_no, gender എന്നീ നിരകള്‍ക്ക്‌ വില നല്‍കിയിട്ടില്ല. ആദൃത്തെ

കുട്ടിയുടെ അഡ്മിഷന്‍ നമ്പര്‍ 1001 ആയിരിക്കെ അടുത്ത കുട്ടിയുടെ അഡ്മിഷന്‍ നമ്പര്‍

1002 ആയിരിക്കും. gender ന്‌ തനതു മൂല്യം 'M' എന്ന്‌ നിശ്ചയിച്ചിട്ടുണ്ട്‌.

പട്ടികയില്‍ ഡാറ്റ ചേര്‍ക്കുമ്പോള്‍ താഴെ പറയുന്ന കാര്യങ്ങള്‍ ഓര്‍മ്മിക്കണം:

. ഒരു പുതിയ വരി ചേര്‍ക്കുമ്പോള്‍ ആ നിരയുടെ ഡാറ്റ ഇനം, ആ നിരയിലെ ഡാറ്റ
യുമായി യോജിക്കുന്നുണ്ടോ എന്ന്‌ ഉറപ്പ്‌ വരുത്തുക.

ഒരു പട്ടികയ്ക്ക്‌ നിശ്ചയിച്ച സമ്പൂര്‍ണതാ കണ്‍സ്ട്രയിന്റ്‌ ആ പട്ടിക പിന്തുടരുന്നു
ന്നുണ്ടോ എന്ന്‌ ഉറപ്പ്‌ വരുത്തുക.

e CHAR അല്ലെങ്കില്‍ VARCHAR എന്നീ തരത്തിലുള്ള ഡാറ്റകള്‍ ഒറ്റ ഉദ്ധരണികള്‍

ക്കുള്ളിലോ ഇരട്ട ഉദ്ധരണികള്‍ക്കുള്ളിലോ എഴുതണം.

° DATE തരത്തിലുള്ള നിരകള്‍ക്ക്‌ വില നല്‍കേണ്ടത്‌ ഒറ്റ ഉദ്ധരണികള്‍ക്കുള്ളിലാണ്‌.
ഈ സ്ദ്രിംഗ്‌ ആന്തരികമായി DATE എന്ന ഡാറ്റ ഇനത്തിലേക്ക്‌ മാറ്റം ചെയ്യപ്പെടുന്നു.

. NULL മൂല്യങ്ങളെ NULL ആയി പ്രസ്താവിക്കണം (ഉദ്ധരണികള്‍ ഇല്ലാതെ).

. എല്ലാ നിരകള്‍ക്കും ഡാറ്റ ലഭ്യമല്ലെങ്കില്‍ പട്ടികയുടെ പേരിന്‌ ശേഷം നിരകളുടെ
ലിസ്റ്റ്‌ ഉള്‍പ്പെടുത്തണം.

ഒരൊറ്റ INSERT INTO കമാന്‍ഡ്‌ ഉപയോഗിച്ച്‌ പല വരികള്‍ ഒരു പട്ടികയില്‍ ചേര്‍

ക്കാന്‍ MySQL അനുവദിക്കുന്നു. പൊതുവായ വാകൃഘടന താഴെ കൊടുക്കുന്നു.

INSERT INTO <table-name> VALUES(...), (..-), «2+ 7
പട്ടിക 9.1 ല്‍ രണ്ട്‌ റെക്കോര്‍ഡുകള്‍ കൂടി ക്വറി 9.6 ഉപയോഗിച്ച്‌ നമുക്ക്‌ ചേര്‍ക്കാം

ക്വി. INSERT INTO student (name, dob, course, 2 income)

VALUES ('Bharath','1999/01/01', 'Commerce', 45000),
('Virat','1998/12/05', 'Science',22000);
കമ്പ്യൂട്ടറിന്റെ പ്രതികരണം ഇതായിരിക്കും.

Query OK, 2 rows affected (0.02 sec)
Records: 2 Duplicates: 0 Warnings: 0

ഇവിടെ രണ്ട്‌ റെക്കോര്‍ഡുകള്‍ ആവരണചിഹത്തിനകത്തായി വെവ്വേറെ നല്‍കിയി
ട്ടുണ്ടെന്ന്‌ നമുക്ക്‌ കാണാം. രണ്ടു റെക്കോര്‍ഡുകള്‍ വിജയകരമായി ചേര്‍ത്തിട്ടുണ്ടെന്ന്‌
പ്രതികരണം സൂചിപ്പിക്കുന്നു. ഒരു വിദ്യാര്‍ഥിയുടെ മാസവരുമാനത്തിന്റെ ഡാറ്റ നമുക്ക്‌
ഇല്ല എന്ന്‌ കരുതുക. ഈ റെക്കോര്‍ഡ്‌ എങ്ങനെ ചേര്‍ക്കും? ക്വറി 9.7 ഇത്‌ വിവരിക്കുന്നു.

കവി. INSERT INTO student (൩൭൩൭, dob, gender, course)

VALUES ('Meera','1998/08/15','F','Science');

ഈ ക്വറിക്ക്‌ മറുപടിയായി adm_no ന്റെ മൂല്യം കമ്പ്യൂട്ടര്‍ തന്നെ ചേര്‍ക്കുന്നു. എന്നാല്‍
£ income എന്ന നിരയുടെ വില NULL ആയിരിക്കും. നിരയുടെ ക്രമവും ഈ ക്വറിയില്‍

കി ധൈ ലി
328 | ത്തം

മാറിയിട്ടുണ്ട്‌. ഒരു വരിയിലെ മൂല്യങ്ങളുടെ അഭാവത്തെ ക്വറി 9.8 ല്‍ കാണിച്ചിരിക്കുന്നതു
പോലെ മറ്റൊരു തരത്തില്‍ കൈകാര്യം ചെയ്യാം.

ക്വി. INSERT INTO student (name, dob, gender, course, 2 income)
VALUES ('Divakar','1998/02/21',’M' Science',NULL) ;

VALUES ഉപവാകൃത്തില്‍ £ income GMay NULL കൊടുത്തിരിക്കുന്നത്‌ ശ്രദ്ധിക്കുക.

student എന്ന പട്ടികയില്‍ ഏതാനും റെക്കോര്‍ഡുകള്‍ കൂടി നമുക്ക്‌
ചേര്‍ക്കാം. പട്ടിക 9.5 കാണിച്ചിരിക്കുന്നതു പോലെ വിദ്യാര്‍ഥികളുടെ
വിശദാശംങ്ങള്‍ ചേര്‍ക്കുന്നതിന്‌ ആവശ്യമായ ക്വറികള്‍ എഴുതുക.

നമുക്ക്‌ ചെയ്യാം

പട്ടിക 9.5: student പട്ടികയില്‍ കുടുതത്‌ ദെക്കോഴിഡുകള്‍്‌

നിങ്ങളുടെ പുരോഗതി അറിയുക

1. ഒരു പട്ടികയില്‍ ഒരു വരി ചേര്‍ക്കുന്നതിന്‌ താഴെ കൊടുത്തിരിക്കുന്നതില്‍ ഏത്‌
കമാന്‍ഡ്‌ ഉപയോഗിക്കുന്നു ?

a. ADD b. CREATE c. INSERT  d.MAKE

2. ഒരു പട്ടികയില്‍ പുതിയ ഡാറ്റ ചേര്‍ക്കുന്നതിനുള്ള പ്രസ്താവന ഏത്‌?
a. ADD RECORD b. INSERT RECORD
c. INSERT INTO d. INSERT ROW

3. INSERT Salad കൂടെ ഉപയോഗിക്കുന്ന കീദവര്‍ഡുകള്‍ എഴുതുക.

AIO 9.3 ഉപയോഗിച്ച്‌ ഉണ്ടാക്കിയ stock എന്ന പട്ടികയില്‍ കൂടുതല്‍

റെക്കോര്‍ഡുകള്‍ ചേര്‍ക്കുന്നതിനുള്ള SQL കമാന്‍ഡുകള്‍ എഴുതുക.

നിരയില്‍ വിലകള്‍ നല്‍കുബോള്‍ AUTO INCREMENT, UNIQUE
നമുക്ക്‌ ചെയ്യാം എന്നീ കണ്‍സ്ട്രയിന്റുകളുടെ സൌകര്യം ഉപയോഗിക്കുക.

9.6൦ പട്ടികയില്‍ നിന്ന്‌ വിവരങ്ങള്‍ വീണ്ടെടുക്കുന്ന രീതി
(Retrieving information from tables)

school എന്ന ഡാറ്റാബേസും student എന്ന പട്ടികയും നിര്‍മ്മിച്ച്‌ അതില്‍ 10 റെക്കോര്‍
ഡുകള്‍ നാം ചേര്‍ത്തുവല്ലോ. ഈ പട്ടികകളില്‍ ശേഖരിച്ച ഡാറ്റ എങ്ങനെ തിരിച്ചെടുക്കാ
മെന്ന്‌ നമുക്ക്‌ പഠിക്കാം. അത്‌ ഒരു ഡാറ്റ കൈകാര്യം ചെയ്യല്‍ പ്രക്രിയയാണ്‌. ഈ ആവ
ശൃത്തിനായി SQL ലില്‍ SELECT കമാന്‍ഡ്‌ ലഭ്യമാക്കിയിട്ടുണ്ട്‌. ഒരു പട്ടികയിലെ നിര്‍ദിഷ്ട
നിരയില്‍ നിന്ന്‌ വിവരങ്ങള്‍ വീണ്ടെടുക്കാന്‍ ഇത്‌ ഉപയോഗിക്കുന്നു. SELECT കമാന്‍ഡിന്‌
നിരവധി രൂപങ്ങള്‍ ഉണ്ട്‌. SELECT കമാന്‍ഡിന്റെ ലളിതമായ രൂപമാണ്‌ താഴെകൊടുത്തി
രിക്കുന്നത്‌.

SELECT <column_name>[,<column_name>,<column_name>, ...]
FROM <table name>;

ഇവിടെ <column_name> എന്നത്‌, ഏത്‌ നിരയില്‍ നിന്നാണ്‌ ഡാറ്റ വീണ്ടെടുക്കേണ്ടത്‌
എന്നും <table name> എന്നത്‌, ഏത്‌ പട്ടികയില്‍ നിന്നാണ്‌ വിവരങ്ങള്‍ വീണ്ടെടുക്കേ
ണ്ടത്‌ എന്നുമാണ്‌ സൂചിപ്പിക്കുന്നത്‌. പട്ടികയുടെ പേര്‌ നല്‍കുന്നത്‌ FROM എന്ന കീവേര്‍ഡ്‌
ഉപയോഗിച്ചാണ്‌. ഇത്‌ SELECT കമാന്‍ഡിന്റെ കൂടെ നിര്‍ബന്ധമായും ഉപയോഗിക്കേണ്ട
ഉപവാക്യമാണ്‌ (Clause) . SELECT കമാന്‍ഡില്‍ കൊടുത്തിരിക്കുന്ന ക്രമത്തില്‍ തന്നെ
നിരകളായി ഡാറ്റ പ്രദര്‍ശിപ്പിക്കപ്പെടും.

ഇപ്പോള്‍ നമുക്ക്‌ SELECT കമാന്‍ഡിന്റെ നിര്‍വഹണം +------------ 4 +
വിവിധ ക്വറികള്‍ വഴി പരിചയപ്പെടാം. ക്വറി 9.9 | name | course :
പ്രവര്‍ത്തിക്കുമ്പോള്‍ ചിത്രം 9.6 ല്‍ | Alok | Science
കാണിച്ചിരിക്കുന്നതു Galooal student പട്ടികയിലെ | Nike | Science
റി Bharath | Commerce
വിദ്യാര്‍ഥികളുടെ name,course എന്നിവ നമുക്ക്‌ | virat | Science
ലഭിക്കുന്നു. Meera | Science
Divakar | Science
ക്വി SELECT Raushi | Commerce
name, Course Niveditha | Humanities
Sreekumar | Science
FROM student; Chaithanya | Science
------------ ------------- +

പട്ടിക മുഴുവനും നമുക്ക്‌ പ്രദര്‍ശിപ്പിക്കണമെങ്കില്‍ ആ
റിലേഷനിലെ നിരകളുടെ ലിസ്റ്റ്‌ മുഴുവന്‍ നല്‍കേണ്ട

10 rows in set (0.00 sec)

ചിത്രം 9.6:Query 9.9 റെ 895.95
തില്ല, പകരം നിരകളുടെ പൂര്‍ണമായ ലിസ്റ്റ്‌ ഉള്‍പ്പെടു

ത്തുന്നതിന്‌ നക്ഷ്രത ചിഹ്നം (*) ഉപയോഗിക്കാം
(ക്വറി 9.10). ഇതിന്റെ ഓട്ട്പുട്ട്‌ ചിത്രം 9.7 ല്‍ കൊടുത്തിരിക്കുന്നു.

ക്വി SELECT * FROM student;

330 ] pose

3------- 4-൦ ൽ. pn nnn 3-൦൦൦-൦൦. 4-൦ +
adm no name | gender dob | course = income
4--------- ------------ ona nnn --------------- 4-------------- ----------. +

1001 Alok IM 1998-10-02 | Science 24000
1002 Nike IM 1998-11-26 | Science 35000
1003 Bharath | M 1999-01-01 | Commerce 45000
1004 Virat IM 1998-12-05 | Science 22000
1005 Meera | FP 1998-08-15 | Science NULL
1006 Divakar | M 1998-02-21 | Science NULL
1025 Raushi | M 1998-10-02 | Commerce 17000
1026 Niveditha | FP 1999-03-04 | Humanities 52000
1027 Sreekumar | M 1998-06-06 | Science 15000
1057 Chaithanya | F 1999-06-03 | Science NULL
നിനി നിനിനിനിനില്‍ പ ിനിനിനിന്നിനിനിനിനിനിനല്‍ നിനില നിനിനിനിനിനിനിനിനിനിനില്‍ നിന്നില്ല പ നിനിനിനിനിനിനിന്നില്‍ി +
10 rows in set (0.00 sec)
ചിത്രം 9.7: student പട്ടികയുടെ മുഴുവരികള്ളകക്കം

ചിത്രം 9.7 ല്‍ 2 income എന്ന നിരയിലെ ചില വരികളില്‍ NULL മൂല്യങ്ങള്‍ നമുക്ക്‌
കാണാന്‍ സാധിക്കും. വരിയിലേക്ക്‌ മൂല്യങ്ങള്‍ ചേര്‍ക്കുബോള്‍ വിലകള്‍ വിട്ടുപോയ

താണ്‌ ഇതിന്‌ കാരണം. (ക്വറി 9.7, 9.8 പട്ടിക 9.1, 9

.5 പരിശോധിക്കുക].

9.6.1 DISTINCT ഉപയോഗിച്ച്‌ നിരകളിലെ ആവര്‍ത്തനങ്ങള്‍ ഉള്ള മൂല്യങ്ങള്‍ നിക്കം
ചെയ്യുന്ന രീതി (Eliminating duplicate values in columns using DISTINCT)

student എന്ന പട്ടികയിലെ വിവിധ കോഴ്സുകളുടെ പേരുകള്‍ നമുക്ക്‌ അറിയാമെന്ന്‌
കരുതുക, SELECT course FROM student; എന്ന ക്വറി നിര്‍മ്മിക്കുകയാണെങ്കില്‍
അത്‌ COULFSE എന്ന നിരയിലെ എല്ലാ മൂല്യങ്ങളെയും ചിത്രം 9.7 ല്‍ കാണിച്ചിരിക്കുന്ന

പോലെ പ്രദര്‍ശിപ്പിക്കും. റിലേഷനിലെ എല്ലാ വരി
കൂടുതല്‍ തവണ ആവര്‍ത്തിക്കുന്നുണ്ടെങ്കിലും അവ

കളില്‍ നിന്നുമുള്ള ഡാറ്റ ഒന്നില്‍
പ്രദര്‍ശിപ്പിക്കും. ഈ ആവര്‍ത്തനം

DISTINCT എന്ന കീവേര്‍ഡ്‌ ഉപയോഗിച്ച്‌ നമുക്ക്‌ ഒഴിവാക്കാന്‍ സാധിക്കും (ക്വറി 9.11).
ചിത്രം 9.8 ല്‍ ഇതിന്റെ ഓട്ട്പുട്ട്‌ കൊടുത്തിരിക്കുന്നു.

ക്വി SELECT DISTINCT course

FROM student;

BOSaNSC ആവര്‍ത്തനം ഇല്ല. കീവേര്‍ഡിനോടു +
കൂടി ഉപയോഗിച്ചിരിക്കുന്ന നിരയില്‍ ഒന്നിലധികം |
NULL വില ഉണ്ടെങ്കില്‍ അതില്‍ ഒരു വില മാത്രമെ
ഫലത്തില്‍ കാണിക്കുകയുള്ളു. DI STINCT നു പക
രം ALL എന്ന കീവേര്‍ഡ്‌ ഉപയോഗിച്ചുവെന്നിരിക്ക |
OF, ആ നിരയിലെ എല്ലാ ആവര്‍ത്തന മൂല്യങ്ങളും +
ഫലത്തില്‍ അടങ്ങിയിരിക്കും. അതായത്‌ 3
DISTINCT, ALL എന്നിവ ഉപയോഗിക്കാത്തഅവ
സ്ഥയിലുള്ള അതേ ഫലം ലഭിക്കുന്നു.

____________ +
course |

--- +
Science |
Commerce |
Humanities |

---- +

rows in set (0.25 sec)
ചിത്രം. 9.8: DISTINCT of Dase@aio
9.62 പ്രത്യേക വരികള്‍ WHERE ഉപവാക്യം ഉപയോഗിച്ച്‌ തിരഞ്ഞെടുക്കുന്ന രീതി
(Selecting specific rows using WHERE clause)

ചില സന്ദര്‍ഭങ്ങളില്‍ നമുക്ക്‌ പട്ടികയിലെ ഒരു ഉപഗണം മാത്രം തിരഞ്ഞെടുക്കേണ്ടതായി
വരും. ഉദാഹരണമായി പെണ്‍കുട്ടികളെക്കുറിച്ചുള്ള വിശദാംശങ്ങള്‍ മാത്രമോ, അല്ലെങ്കില്‍
കുടുംബമാസവരുമാനം Rs 25000/- ന്‌ താഴെയുള്ള വിദ്യാര്‍ഥികളുടെ വിശദാംശങ്ങളോ
ആവശ്യമായി വന്നേക്കാം. ഇവിടെ റെക്കോര്‍ഡുകളുടെ വീണ്ടെടുക്കലില്‍ ഒരു തിരഞ്ഞെ
ടുക്കല്‍ ഉണ്ട്‌. തീര്‍ച്ചയായും ഇത്‌ ഒരു നിബന്ധനയുടെ അടിസ്ഥാനത്തിലായിരിക്കും.
SELECT കമാന്‍ഡിന്റെ WHERE ഉപവാക്യം ഉപയോഗിച്ച്‌ റെക്കോര്‍ഡുകളള്‍ വീണ്ടെടുക്കു
ന്നതിനുള്ള ചില മാനദണ്ഡങ്ങള്‍ ഉണ്ടാക്കാന്‍ SOL നമ്മെ സഹായിക്കുന്നു. WHERE ഉപ
വാകൃത്തോടുകൂടിയ SELECT കമാന്‍ഡിന്റെ വാകൃഘടന താഴെ കൊടുക്കുന്നു.

SELECT <column_name>[,<column_name>,<column_name>, ...]
FROM <table name>
WHERE <condition>;

WHERE ഉണ്ടെങ്കില്‍ SELECT കമാന്‍ഡ്‌ പട്ടികയിലെ ഓരോ വരിയില്‍ക്കൂടിയും കടന്നു
പോവുകയും നിബന്ധനകള്‍ പാലിക്കുന്നുണ്ടോ എന്ന്‌ പരിശോധിക്കുകയും ചെയ്യും.
ഒരു വരി നിബന്ധന പാലിക്കുന്നുണ്ടെങ്കില്‍ ആ വരി ഓട്ട്പുട്ടില്‍ പ്രദര്‍ശിപ്പിക്കുന്നു.
ലോജിക്കല്‍ ഓപ്പറേറ്ററുകള്‍, റിലേഷണല്‍ ഓപ്പറേറ്ററുകള്‍ എന്നിവ ഉപയോഗിച്ച്‌
നിബന്ധനകള്‍ നിര്‍മ്മിക്കാവുന്നതാണ്‌. 18൮. ല്‍ ഇതിന്‌ വ്യത്യസ്ത ഓപ്പറേറ്ററുകള്‍
ഉപയോഗിക്കുന്നു. ഇവ പട്ടിക 9.6 ല്‍ കൊടുത്തിരിക്കുന്നു.

ന
ജലാ

വലുത്‌

6.21030)

വലുതോ തുല്യമായതോ

ഞ്ഞ ത്തി
അത്ത നിബന്ധന തെറ്റാണെങ്കില്‍ ഒട്ട്പൂട്ട്‌ രരി
pm | രണ്ട്‌ നിബന്ധനയും ശരിയാണെങ്കില്‍ ഒട്ട്പുട്ട്‌ el

നിബന്ധനകളില്‍ ഏതെമ്കിലും ശരിയാണെങ്കില്‍ ഒട്ട്പുട്ട്‌ wal

റിലേഷണല്‍ ഓഷറ്റേര്‍

ലോജിക്കല്‍

ഓചറ്റേര്‍

പട്ടിക ൧.6: AYAUMIAG (്രഥക്കുത്തുന്നതിന്‌ ഉപയോരിക്കുമ BIACOQNIL I
ഒരു പട്ടികയിലെ പെണ്‍കുട്ടികളുടെ വിശദാംശങ്ങള്‍ നല്‍കുന്നതിനുള്ള SQL പ്രസ്താവന
ഇനി എഴുതാം. ക്വറി 9.12 ല്‍ നിബന്ധന ക്രമപ്പെടുത്തുന്നതിനുള്ള WHERE ഉപവാക്യവും,
"=" ഓപ്പറേറ്ററും അടങ്ങിയിരിക്കുന്നു. അതിന്റെ ഓട്ട്പുട്ട്‌ ചിത്രം 9.9 കാണിച്ചിരിക്കുന്നു.

ക്വി SELECT * FROM student

WHERE gender='F';

+------------ +-------- 4+------------ 4+------------ +
| name | gender | dob | course I
+------------ +-------- 4+------------ 4------------ +
| Meera | F | 1998-08-15 | Science | NULL |
| Niveditha | F | 1999-03-04 | Humanities | 52000 |
| Chaithanya | F | 1999-06-03 | Science | NULL |
+------------ +-------- 4+------------ നിന്നില്ല ടട +
3 rows in set (0.06 sec)

ചിത്രം 9. 9 ONgpéLIMIAsI0S ANGY (ക്രി 9.12 മ്റീെട്ട്ചുട്ട്‌?

നമുക്ക്‌ വരുമാനം 25000 രൂപയില്‍ താഴെയുള്ള സയന്‍സ്‌ ഗ്രൂപ്പിലെ വിദ്യാര്‍ഥികളുടെ
പേര്‌, കോഴ്‌സ്‌, മാസ വരുമാനം എന്നിവ കാണണം എന്നു വിചാരിക്കുക. ഇവിടെ നമുക്ക്‌
രണ്ട്‌ നിബന്ധനകള്‍ നിര്‍മ്മിക്കേണ്ടതായി വരും. ഒന്ന്‌ വരുമാനം പരിശോധിക്കുന്നതിനും,
മറ്റൊന്ന്‌ കോഴ്‌സ്‌ പരിശോധിക്കുന്നതിനുമാണ്‌. ഇനി മുകളില്‍ പറഞ്ഞ രണ്ടു നിബന്ധ
നകളും പട്ടികയിലെ റെക്കോര്‍ഡുകളുമായി യോജിക്കുന്നുണ്ടെങ്കില്‍ name, course,
£_income എന്നീ നിരകള്‍ പ്രദര്‍ശിപ്പിക്കുന്നതിന്‌ വീണ്ടെടുക്കുന്നു (ക്വറി 9.13). ഇതിന്റെ
ഓട്ട്പൂട്ട്‌ ചിത്രം 9.10 ല്‍ കാണിച്ചിരിക്കുന്നു. രണ്ടു നിബന്ധനകള്‍ യോജിപ്പിക്കുന്നതിനു
വേണ്ടി AND ഓപ്പറേറ്റര്‍ ഉപയോഗിക്കുന്നു.

SELECT name, course, 2 income FROM student
WHERE course='Science' AND f_income<25000;

4+----------- 4----------. 4---------- +
സയന്‍സ്‌ ഗ്രൂപ്പില്‍ ഉള്‍പ്പെടാത്ത (കോമേ | name | course | £ income |
FMS, ഹ്യുമാനിറ്റീസ്‌ ഗ്രൂപ്പുകള്‍) വിദ്യാര്‍ഥി ----------- 5 ൦ +

. | Alok | Science | 24000 |
കളുടെ name, course, f income | virat | ടിം | 22000 |
എന്നിവ പ്രദര്‍ശിപ്പിക്കാനാവശ്യമായ ക്വറി | sreekumar | Science | 15000 |

4+----------- +--------- 4---------- +

എഴുതുക.

3 rows in set (0.00 sec)

ചിത്രം 9.10: AND 82280909} ഉപയോഗം

DO ക്വറി എഴുതുമ്പോള്‍ നിബന്ധന തയാറാക്കുന്നതിനായി OR ഓപ്പറേറ്റര്‍ നിങ്ങള്‍
ഉപയോഗിച്ചേക്കാം. ഇതേ വിവരങ്ങള്‍ 1407 ഓപ്പറേറ്റര്‍ ഉപയോഗിച്ചാലും ലഭിക്കും. ക്വറി
9.14 ഇത്‌ വിവരിക്കുന്നു. ചിത്രം 9.11 ല്‍ അതിന്റെ ഓട്ട്പുട്ട്‌ പ്രദര്‍ശിപ്പിച്ചിരിക്കുന്നു

ക്വി SELECT name, course, 2 income FROM student

WHERE NOT course='Science';

StOCK എന്ന പട്ടികയുമായി ബന്ധപ്പെട്ട്‌ നമുക്ക്‌ ചില നിബന്ധനകള്‍ ഉണ്ടാക്കാം, അനു

യോജ്യമായ ഓപ്പറേറ്ററുകള്‍ ഉപയോഗിച്ച്‌ +----------- 3------------ 4+---------- +
ഇതിനുള്ള ക്വറികള്‍ തയാറാക്കാന്‍ ശ്രമി | name | course | £_income !
ക്കാം. | Bharath | Commerce | 45000 |

| Kaushi | Commerce | 17000 |
SQL ല്‍ നിബന്ധനകള്‍ക്കായി പ്രത്യേകം | Niveditha | Humanities | 52000 |
ഓപ്പറേറ്ററുകള്‍ ഉണ്ട്‌. BETWEEN... . ട്ടോ ------------ ----------- +

AND,

IN, LIKE,

ഇതില്‍ ഉള്‍പ്പെടുന്നു. നിബന്ധനകള്‍ തയാറാക്കുന്നതിന്‌ ഈ ഓപ്പറേറ്ററുകള്‍
സഹായിക്കുന്നത്‌ എങ്ങനെയെന്ന്‌ നമുക്ക്‌ ചര്‍ച്ച ചെയ്യാം.

a. വിലകളുടെ പരിധികള്‍ അടിസ്ഥാനമാക്കിയുള്ള നിബന്ധനകള്‍

ഒരു പരിധിയിലുള്ള മൂല്യങ്ങളെ നിബന്ധനകളായി നല്‍കാം. പരിധി നിര്‍ദേശിക്കുന്നതിന്‌
SQL ല്‍ BETWEEN. «AND എന്ന ഓപ്പറേറ്റര്‍ ഉപയോഗിക്കാം. കുടുംബ വരുമാനം Rs 25000
മുതല്‍ Rs 45000 വരെയുള്ള വിദ്യാര്‍ഥികളുടെ ലിസ്റ്റ്‌ നമുക്ക്‌ ആവശ്യമുണ്ടെന്ന്‌ വിചാരി
ക്കുക. ക്വറി 9.15 ല്‍ കൊടുത്തിരിക്കുന്ന പ്രസ്താവന ഉപയോഗിച്ച്‌ ഇത്‌ ലഭ്യമാക്കാം.
ചിത്രം 9.12 ല്‍ ഉതിന്റെ ഓട്ട്പുട്ട്‌ കാണിച്ചിരിക്കുന്നു.

ക്വി SELECT name, 2 income FROM student

WHERE 2 income>=25000 AND f£_income<=45000;

ഇതേ ഓട്ട്പുട്ട്‌ ക്വറി 9.16 ല്‍ ഉള്ള പ്രസ്താവന ഉപയോഗിച്ച്‌ ലഭിക്കുന്നതാണ്‌. ഈ
പ്രസ്താവനയില്‍ നിബന്ധന ഉണ്ടാക്കാന്‍ BETWEEN... AND ഓപ്പറേറ്റര്‍ ഉപയോഗിച്ചി
ട്ടുണ്ട്‌. പരിധിയില്‍ കൊടുത്തിരിക്കുന്ന കുറഞ്ഞ വിലയും കൂടിയ വിലയും ഓട്ട്പുട്ടില്‍
ഉള്‍പ്പെട്ടിരിക്കുന്നു

കരി SELECT name, 2 income FROM student

WHERE 2 income BETWEEN 25000 AND 45000;

സംഖ്യാതരത്തിലുള്ള ഡാറ്റയുടെ പരിധി ഴ്‌ നനന Tea aT 1]
name income

BETWEEN ... AND ഓപ്പറേറ്റര്‍ അനുവദി 4---- _________ +

ക്കുന്നുവെന്ന്‌ L101 9.16 ല്‍ നിന്നും ചിത്രം 9.12 | Nike | 35000 |

ല്‍ നിന്നും നമുക്ക്‌ അനുമാനിക്കാന്‍ കഴിയും. | Bharath | 45000 |

+------- ----------- +

b. വിലകളുടെ ലിസ്റ്റ്‌ അടിസ്ഥാനമാക്കിയുള്ള 2 rows in set (0.00 sec)

നിബന്ധനകള്‍ ചിത്രം 9.12: BETWEEN .. AND

BICOQHOT ഉപരോഗം
റെക്കോര്‍ഡുകള്‍ വീണ്ടെടുക്കുന്നതിനു വേണ്ടി

യുള്ള നിബന്ധനകള്‍ തയാറാക്കുമ്പോള്‍ വിലകളുടെ ലിസ്റ്റ്‌ ഉപയോഗിക്കാവുന്നതാണ്‌.
വിലകള്‍ ഏതു ഡാറ്റ ഇനമായാലും നിര്‍ദിഷ്ട നിരയിലെ നിബന്ധനയുമായി
യോജിക്കുന്നതായിരിക്കണം. ഈ അവസരത്തില്‍ ലിസ്റ്റിനോടുകൂടി IN എന്ന ഓപ്പറേറ്റര്‍
ഉപയോഗിക്കാം. സയന്‍സിലെയും ഹ്യൂമാനിറ്റീസിലെയും വിദ്യാര്‍ഥികളുടെ
വിശദാംശങ്ങള്‍ നമുക്ക്‌ വീണ്ടെടുക്കണമെന്നിരിക്കട്ടെ, ക്വറി 9.17 ലെ പ്രസ്താവനയ്ക്ക്‌

ചിത്രം 9.13 ല്‍ കാണിച്ചിരിക്കുന്നതുപോലെ വിശദാംശങ്ങള്‍ നിര്‍മ്മിക്കാന്‍ കഴിയും.

കവറില്‍ SELECT * FROM student

WHERE course='Commerce!'! OR course='Humanities';

+-------- 4+----------- +-------- ------------ 4------------ 4---------- +
| adm_no | name | gender | dob | course | £_income |
+-------- +----------- +-------- 4+------------ 4+------------ ----------- +
| 1003 | Bharath | 2 | 1999-01-01 | Commerce | 45000 |
| 1025 | Kaushi IM | 1998-10-02 | Commerce | 17000 |
I 1026 | Niveditha | F | 1993-03-04 | Humanities | S2000 |
+-------- +----------- +-------- +------------ +------------ +---------- +

3 rows in set {0.00 sec)

ചിത്രം 9.73: aj 9.18 of മെട്ട്ചു്ട്‌

ഇതേ ഒട്ട്പുട്ട്‌ ക്വറി 9.18 ല്‍ കാണുന്ന രീതിയില്‍ IN ഓപ്പറേറ്റര്‍ ഉപയോഗിച്ച്‌ താഴെക്കാ
ണുന്ന രീതിയില്‍ ലഭ്യമാക്കാം.

SELECT * FROM student

WHERE course IN('Commerce', 'Humanities');
ക്വറി 9.18 ല്‍ നാം കാണുന്നതുപോലെ IN ഓപ്പറേറ്റര്‍ ഒരു റെക്കോര്‍ഡിലെ നിര്‍ദിഷ്ട
നിരയിലെ (ഇവിടെ course) വില തന്നിരിക്കുന്ന ലിസ്റ്റിലെ ഏതെങ്കിലും വിലയോട്‌
തുല്യത ഉണ്ടോ എന്ന്‌ പരിശോധിക്കുന്നു. റെക്കോര്‍ഡുകളിലൂടെ കടന്നുപോകുമ്പോള്‍
തുല്യ തുക കണ്ടെത്തിയാല്‍ അവ പ്രദര്‍ശിപ്പിക്കുന്നു. ഈ പട്ടികയില്‍ മുന്ന്‌ കോഴ്‌സ്‌
മാത്രമേ ഉള്ളൂ. HO 9.19 ഉപയോഗിക്കുമ്പോള്‍ ചിത്രം 9.13 ല്‍ കാണിച്ചിരിക്കുന്ന അതേ
ഫലം കാണിക്കുന്നതുമാണ്‌.

ക്വറി 9. SELECT * FROM student

WHERE course NOT IN('Science');

൦. പാറ്റേണ്‍ ചേര്‍ച്ച അടിസ്ഥാനമാക്കിയുള്ള നിബന്ധനകള്‍

ചില മാതൃകകളെ അടിസ്ഥാനമാക്കി ഡാറ്റകള്‍ വീണ്ടെടുക്കേണ്ടതായി വരാം. അതായത്‌
MISO ഡാറ്റയിലെ അക്ഷരങ്ങളിലുള്ള സാദൃശ്യമായിരിക്കും റെക്കോര്‍ഡുകള്‍ വീണ്ടെ
ടുക്കുന്നതിനുള്ള മാനദണ്ഡം. SQL ല്‍ ഈ ആവശ്യത്തിനായി LIKE എന്ന പാറ്റേണ്‍
മാച്ചിങ്‌ ഓപ്പറേറ്റര്‍ ഉപയോഗിക്കുന്നു. പാറ്റേണുകളെ രണ്ടു വൈല്‍ഡ്‌ കാര്‍ഡ്‌ അക്ഷരങ്ങ
ളായ % ഉം _ (അണ്ടര്‍ സ്‌കോര്‍) ഉം ഉപയോഗിച്ച്‌ നിര്‍ദേശിക്കാം. % (പെര്‍സെന്റ്‌ ) സബ്‌
സ്ര്രിങ്ങിന്റെ തുല്യത പരിശോധിക്കുന്നു. (അണ്ടര്‍ സ്‌കോര്‍ ഒരു അക്ഷരത്തിന്റെ തുല്യത
പരിശോധിക്കുന്നു. പാറ്റേണുകള്‍ കേസ്‌ സെന്‍സിറ്റീവ്‌ ആണ്‌, അതായത്‌ വലിയ അക്ഷര
ങ്ങള്‍ ചെറിയ അക്ഷരങ്ങളുമായി തുല്യത പ്രാപിക്കില്ല. താഴെ പറയുന്ന ഉദാഹരണങ്ങള്‍
പരിഗണിക്കുക.

. "Ab%" എന്നത്‌ Ab എന്ന അക്ഷരങ്ങളില്‍ തുടങ്ങുന്ന ഏതു സ്ട്രിങ്ങിനും തുല്യ
മാണ്‌.

. "Yocat%" എന്നത്‌ "cat" എന്ന വാക്ക്‌ ഉപസ്ട്രിങ്ങുമായി വരുന്ന ഏതു സ്ര്രിങ്ങു
മായും തുല്യത പാലിക്കുന്നു. ഉദാഹരണത്തിന്‌ "education", "indication", "catering"
തുടങ്ങിയവ.

. "___" എന്നത്‌ ഇടയില്‍ ശൂന്യ സ്ഥലം ഇല്ലാത്ത നാല്‍ അക്ഷരങ്ങള്‍ മാത്രമുള്ള

ഏത്‌ സ്ര്രിങ്ങിനും തുല്യമാണ്‌.
° ___ %" എന്നത്‌ ഏറ്റവും കുറഞ്ഞത്‌ മൂന്ന്‌ അക്ഷരങ്ങള്‍ ഉള്ള ഏത്‌ സ്ര്രിങ്ങുമായും
തുല്യത പാലിക്കും.

ക്വറി 9.20 LIKE ഓപ്പറേറ്ററിന്റെ ഉപയോഗം AIO 9.20 വിവരിക്കുന്നു. പട്ടികയിലെ ‘ar!
എന്ന്‌ അവസാനിക്കുന്ന പേരുകളുടെ ഒരു ലിസ്റ്റ്‌ അത്‌ നല്‍കുന്നു ചിത്രം 9.14 ല്‍ ഈ
ക്വറിയുടെ ഓട്ട്പുട്ട്‌ കാണിച്ചിരിക്കുന്നു

SELECT name FROM student | name |

WHERE name LIKE '%art; തോ *

1.9.21 'Divakar' Sang | Divakar |
ക്വറി 9. ivakar! എന്ന ബട്ട്പുട്ട്‌ തരുന്നു. കാരണം | Sreekumar |
രണ്ട്‌ _ (അണ്ടര്‍ സ്‌കോര്‍) അക്ഷരങ്ങളാണ്‌ പാറ്റേ +---------~--~ +

ണിന്റെ തുല്യത പരിശോധിക്കുന്നത്‌. 2 rows in set (0.00 sec)

ക്രി SELECT name FROM student

WHERE name LIKE 'Div__ar';

ചിത്രം 0.24. 196966 ചേരച്ചയുടെ ഉപയോനം

0. NULL വില പരിശോധന അടിസ്ഥാനമാക്കിയുള്ള നിബന്ധനകള്‍

റെക്കോര്‍ഡുകളില്‍ ചില ഫീല്‍ഡുകളില്‍ NULL വില ഉണ്ടായിരിക്കാമെന്നു നാം കണ്ടു
കഴിഞ്ഞു. ഇങ്ങനെയുള്ള റെക്കോര്‍ഡുകളെ IS

4+------------ 4+--------- +
ഓപ്പഠേറ്ററുകളുടെ സഹായത്തോടെ വീണ്ടെ | name | course |
ടുക്കാം. റെക്കോര്‍ഡിലെ നിര്‍ദിഷ്ട നിരയില്‍ NULL ൦-൦൦-൦൦ sila +
മൂല്യങ്ങള്‍ വന്നാല്‍ നിബന്ധനകള്‍ ശരിയാകും. | Meera | Science |

dent 4 രില്‍ £ 4 | Divakar | Science |
student എന്ന പട്ടികയി _income എന്ന | Chaithanya | Science |
നിരയില്‍ NULL മൂല്യം മൂന്ന്‌ വരികളില്‍ gms. +------------ 4 +

(alo 9.7 പരിശോധിക്കുക) ക്വറി 9.22 ഈ 3 rows in set (0.00 sec)
റെക്കോര്‍ഡുകള്‍ വീണ്ടെടുക്കുന്നു. ചിത്രം 9.15 ചിത്രം 9.15: NULL വില പരിശോധന
ഇതിന്റെ ഓട്ട്പുട്ട്‌ പ്രദര്‍ശിപ്പിക്കുന്നു.

ക്വി. SELECT name,course FROM student

WHERE 2 income IS NULL;

f_income നിരയില്‍ NULL മൂല്യങ്ങള്‍ ഇല്ലാത്ത റെക്കോര്‍ഡുകള്‍ വീണ്ടെടുക്കണമെ
ന്നിരിക്കട്ടെ, ക്വറി 9.23 അത്‌ നിര്‍വഹിക്കുന്നു.

കറി. SELECT name,course FROM student

WHERE 2 income IS NOT NULL ;

stock എന്ന പട്ടികയെ അടിസ്ഥാനപ്പെടുത്തി SQL ഓപ്പറേറ്ററുകള്‍
ഉപയോഗിക്കാനുള്ള ക്വറികള്‍ നിര്‍മ്മിക്കുക.

നമുക്ക്‌ ചെയ്യാം

നിങ്ങളുടെ പുരോഗതി അറിയദുക
1. രു നിരയില്‍ ആവര്‍ത്തനങ്ങള്‍ ഒഴിവാക്കാന്‍ SELECT കമാന്‍ഡിന്റെ കൂടെ

ഉപയോഗിക്കുന്ന കീവേര്‍ഡിന്റെ പേരെഴുതുക.

. SELECT കവിയുടെ കൂടെ ഉപഭയോരിക്കുന്ന പ്രധാന ഉപവാക്യം ഏത്‌?

3. ഒരു നിരയില്‍ 1111, മൂല്യങ്ങള്‍ ഉദ എന്ന്‌ പരിരോധിക്കുന്നതിനുള്ള #216096

ഏത്‌?

a. IN 2. LIKE 23 0. NOT

. പാടററണ്‍ ചേര്‍ച്ചയ്ക്ക്‌ ഉപയോഗിക്കുന്ന ഓഷറേറററാണ്‌

5. താഴെകറയുന്ന പ്രസ്താവനയിലെ തെറ്റ്‌ എന്ത്‌?
SELECT * FROM emp WHERE grade = NULL;
6. ഒരു പട്ടികയില്‍ നിന്ന്‌ റെക്കോര്‍ഡുകള്‍ തിരഞ്ഞെടുക്കുന്നതിനുള്ള കമാന്‍ഡാണ്‌

9.63 ORDER BY ഉപവാക്യം ഉപയോഗിച്ച്‌ ഉത്തരങ്ങളുടെ ക്രമീകരണം
(Sorting results using ORDER BY clause)

ഇതുവരെ ചര്‍ച്ച ചെയ്ത SELECT ക്വറിയുടെ ഫലങ്ങളിലെല്ലാം പട്ടികയിലുള്ള അതെ
ക്രമത്തിലാണ്‌ റെക്കോര്‍ഡുകള്‍ എപ്പോഴും ലഭിച്ചിട്ടുള്ളതെന്ന്‌ നാം കണ്ടു. അവയെ
ഏതെങ്കിലും രീതിയില്‍ ക്രമീകരിക്കാന്‍ സാധിക്കുമോ? ഒരു ക്വറിയുടെ ഉത്തരത്തെ ആരോ
ഹണ്രക്രമത്തിലോ അവരോഹണക്രമത്തിലോ ക്രമീകരിക്കാന്‍ കഴിയും. ഇതിനായി ORDER
BY എന്ന ഉപവവാക്യം ഉപയോഗിക്കാം. ക്രമീകരണത്തിന്‌ ASC (ആരോഹണക്രമം)
അല്ലെങ്കില്‍ DESC (അവരോഹണ്രകമം) എന്ന കീവേര്‍ഡ്‌ ഉപയോഗിക്കാം. തനതു രീതി
യില്‍ പ്രദര്‍ശിപ്പിക്കുന്നത്‌ ആരോഹണ്ക്രമത്തിലായിരിക്കും. പട്ടികയിലുള്ള വരികളുടെ
ക്രമത്തില്‍ മാറ്റം വരുന്നില്ല. പകരം സ്‌ക്രീനില്‍ പ്രദര്‍ശിപ്പിക്കുന്നവ മാത്രമാണ്‌ ഈ രീതി
യില്‍ ക്രമീകരിക്കുന്നത്‌. ക്വറി 9.24 ഉപയോഗിച്ച്‌ വിദ്യാര്‍ഥികളുടെ വിശദാംശങ്ങള്‍
അവരുടെ പേരിന്റെ അക്ഷരമാലാ ക്രമത്തിലാക്കാം. ചിത്രം 9.16 ഇതിന്റെ ഓട്ട്പുട്ട്‌
കാണിക്കുന്നു.

കറി SELECT * FROM student ORDER BY name;

+-------- 4------------ +-------- +------------ +------------ +---------- +
| adm_no | name | gender | dob | course | £_income |
+-------- 4------------ +-------- +------------ +------------ +---------- +
| 1001 | Alok lM | 1998-10-02 | science ] 24000 |
| 1003 | Bharath IM | 1999-01-01 | Commerce I 45000 |
| 1057 | Chaithanya | F | 1999-06-03 | Science I NULL |
| 1006 | Divakar IM | 1998-02-21 | Science I NULL |
| 1025 | Kaushi | ™ | 1998-10-02 | Commerce ] 17000 |
| 1005 | Meera | FP | 1998-08-15 | Science | NULL |
| 1002 | Nike | ™M | 1998-11-26 | Science | 35000 |
| 1026 | Niveditha | F | 1999-03-04 | Humanities | 52000 |
| 1027 | Sreekumar | M | 1998-06-06 | science ] 15000 |
| 1004 | Virat lM | 1998-12-05 | science | 22000 |
+-------- 4--- +-------- oo +------------ +---------- +

10 rows in set {0.00 sec)

ചിത്രം 9.16: CAR/IGLIASIOS വിമമാംരങ്ങശ്‌ GRUGIOS CIPO CoAXECRILI ക്രഥത്തില്‍്‌

ചിത്രം 9.16 വിദ്യാര്‍ത്ഥികളുടെ വിശദാംശങ്ങള്‍ അവരുടെ പേരിന്റെ അക്ഷരമാലാ
ക്രമത്തില്‍

കുടുംബത്തിന്റെ മാസവരുമാനത്തിന്റെ ക്രമത്തില്‍ അവരുടെ വിശദാംശങ്ങള്‍ നമുക്ക്‌
കാണണമെന്നിരിക്കട്ടെ. ഏറ്റവും കൂടിയ വരുമാനം മുതല്‍ കുറഞ്ഞതു വരെയുള്ള ഫലം

കുടുംബത്തിന്റെ മാസവരുമാനത്തിനനുസരിച്ച്‌ വിദ്യാര്‍ഥികളുടെ വിശദാംശങ്ങള്‍ നമുക്ക്‌
ലഭിക്കണമെങ്കില്‍ ക്വറി 9.25 ഉപയോഗിക്കാം. ചിത്രം 9.17 ല്‍ ഓട്ട്പുട്ട്‌ കാണിച്ചിരിക്കുന്നു.

ക്വി 9.5 SELECT * FROM student

ORDER BY 2 income DESC;

ചിത്രം 9.17 ല്‍ കാണിച്ചിരിക്കുന്നതുപോലെ ORDER BY ഉപവാക്യത്തോടൊപ്പം ഉപയോ
ഗിച്ചിരിക്കുന്ന നിരയില്‍ NULL ഉണ്ടെങ്കില്‍ അവ പട്ടികയുടെ അവസാനം പ്രദര്‍ശിപ്പിക്കും.
ഒന്നിലധികം ക്രമീകരണങ്ങള്‍ ORDER BY ഉപവാക്യം ഉപയോഗിച്ച്‌ നടത്താന്‍ സാധിക്കും.
ഉദാഹരണത്തിന്‌ വിദ്യാര്‍ഥികളെ അവരുടെ കോഴ്‌സ്‌ അനുസരിച്ച്‌, പേരിന്റെ അക്ഷരമാലാ
ക്രമത്തിലാക്കണം എന്ന്‌ വിചാരിക്കുക. ക്വറി 9.26 ല്‍ കൊടുത്തിരിക്കുന്ന (പ്രസ്താവന
ഇതിനു വേണ്ടി ഉപയോഗിക്കാം. ചിത്രം 9.18 ല്‍ ഇതിന്റെ ഓട്ട്പുട്ട്‌ കാണിച്ചിരിക്കുന്നു.

ക്വി SELECT name,course FROM student

ORDER BY course, name;

ചിത്രം 9.18 ലുള്ള ഓട്ട്പുട്ട്‌ നോക്കുക. 4+------------ 5 +
ആദ്യം course എന്ന നിരയിലെ വിലകളും, | name | course |
4+------------ +------------ +
പിന്നീട്‌ ഓരോ കോഴ്‌സിലെ പേരുകളും | Bharath | Commerce |
അക്ഷരമാലാ ക്രമത്തിലാക്കിയിരിക്കുന്നു. | Kaushi | Commerce I
| Niveditha | Humanities |
നേരത്തെ നാം WHERE ഉപവാക്യം ഉപയോ | ഹൂം | Science |
May നിബന്ധനകളുടെ അടിസ്ഥാനത്തില്‍ | Chaithanya | Science |
» | Divakar | Science |

വരികള്‍ വീണ്ടെടുക്കുന്നതെങ്ങനെ എന്ന്‌ :

] Meera | Science |
മനസ്സിലാക്കി. ഈ വരികള്‍ ഒരു പ്രത്യേക | Nike | Science |
രീതിയില്‍ ORDER BY ഉപവാക്യം ഉപ | Sreekumar | Science |

ay 108 ര്‍ശിപി ] Varat | Science |
യോഗിച്ച്‌ ക്രമത്ത്‌ പ്രദര്‍ശിപ്പിക്കാവുന്ന ______________ ത്തത്‌ +
താണ്‌. ഇനി സയന്‍സ്‌ ഗ്രുപ്പിലെ കുട്ടികളുടെ 10 rows in set (0.00 sec)
പേര്‌, കുടുംബ വരുമാനം എന്നിവ വരുമാന ചിത്രം 9.18: പഥ ഫകെങ്ങശ്‌ ചേര്ന്ന (OIE

ത്തിന്റെ അവരോഹണ ക്രമത്തില്‍ നമുക്ക്‌ പ്രദര്‍ശിപ്പിക്കണമെന്നിരിക്കട്ടെ. ഈ ഓട്ട്പുട്ട്‌
ലഭിക്കുന്നതിന്‌ ക്വറി 9.27 ല്‍ കാണിച്ചിരിക്കുന്നതു പോലെ രണ്ട്‌ ഉപവാകൃങ്ങള്‍ സംയോ
ജിപ്പിക്കാവുന്നതാണ്‌. ഒഓട്ട്പുട്ട്‌ ചിത്രം 9.19 കാണിച്ചിരിക്കുന്നു.

നനായ
338 | =,

ക്വി SELECT name,course,f income FROM student

WHERE course= 'Science'
ORDER BY 2 income DESC;
ചിത്രം 9.19 കാണിച്ചിരിക്കു ___________ _________ +
ന്നതുപോലെ (ര്രമീകരണ | name | course |
നിരയില്‍ NULL വിലയുള്ള 4------------- +--------- +
റെക്കോര്‍ഡുകള്‍ അവസാനം | Nike | Science |
കാണപ്പെടും. മറ്റൊരു പ്രധാ | Alok | Science |
പ്പെട്ട്‌ കാര്യം ORDER BY | Virat | Science |
ഉപവാക്യം WHERE ഉപവാ | Sreekumar | Science |
കൃത്തിനു ശേഷമാണ്‌ | Meera | Sezence |
SELECT ല്‍ ഉപയോഗിക്കേ | Divakar | Science |
ണ്ടത്‌. കാരണം റെക്കോര്‍ ! Chaithanya | Science |
ഡുകള്‍ ദ്യം തിരഞ്ഞടുത്ത :
3 ആദ്യം റ 7 rows in set (0.00 sec)

തിനു ശേഷമാണ്‌ അവ
ക്രമീകരിക്കുന്നത്‌.

നിങ്ങളുടെ പുരോഗതി അറിയുക

ചിത്രം 9.19: നിബന്ധന അടിദ്ഥാര്ഥാക്കിയുള്ള

തിഞ്ഞെകഴുക്കും ക്രമ്ക്രിക്കമും

1. ORDER BY ഉപവാക്യത്തിന്റെ അര്‍ഥമെന്ത്‌?

2. ഡാറ്റ അവരോഹണക്രമത്തില്‍ ക്രമീകരിക്കുന്നതിന്‌ MySQL ല്‍ ഉപയോഗിക്കുന്ന

കീവേര്‍ഡ്‌ ഏത്‌?
a. DESC b. ASC c. SORT d. MODIFY

3. ORDER BY ഉപവാക്യത്തിന്റെ അദാവത്തില്‍ വരികള്‍ ഏതു ക്രമത്തിലാണ്‌

പ്രദര്‍ശിഭിക്കകെടുന്നത്‌?

4. SQL@ ORDER BY ഉപവാക്ൃത്തിന്റെ തനതു ക്രമീകരണ രീതി എങ്ങനെ

നമുക്ക്‌ ചെയ്യാം

യായിരിക്കും?

stock എന്ന പട്ടിക അടിസ്ഥാനമാക്കി വിവിധ നിബന്ധനകള്‍ ഉപ
യോഗിച്ച്‌ റെക്കോര്‍ഡുകളെ ക്രമീകരിക്കാനുമുള്ള ക്വറികള്‍
നിര്‍മ്മിക്കുക.

9.6.4 സംഗ്രഹ ഫങ്ഷനുകള്‍ (Aggregate functions)

ഒരു പട്ടികയില്‍ മുഴുവനായോ WHERE ഉപയോഗിച്ച്‌ പട്ടികയില്‍ നിന്ന്‌ വേര്‍തിരിച്ചെടുത്ത
ഒരു ഉപഗണത്തിനോ ഉപയോഗിക്കാവുന്ന ധാരാളം ബില്‍ട്ട്‌ ഇന്‍ ഫങ്ഷനുകള്‍ MySQL@
ഉണ്ട്‌. ഈ ഫങ്ഷനുകളെ സംഗ്രഹ ഫങ്ഷനുകള്‍ എന്നു പറയുന്നു. കാരണം ഇവ വരി
കളുടെ സംഗ്രഹത്തിനായി പ്രവര്‍ത്തിക്കുന്നു. ഈ ഫങ്ഷനുകളുടെ ഫലം ഒരൊറ്റ വില
യായിരിക്കും. സാധാരണയായി ഉപയോഗിക്കുന്ന സംഗ്രഹ ഫങ്ഷനുകള്‍ പട്ടിക 9.7 ല്‍
കൊടുത്തിരിക്കുന്നു.

ആര്‍ധ്യുമെന്റായി കൊടുത്തിരിക്കുന്ന നിരയിലുള്ള വിലകളുടെ തുക
ആര്‍ധ്യുമെന്റായി കൊടുത്തിരിക്കുന്ന നിരയിലുള്ള വിലകളുടെ ശരാശരി
)

AVG (
(

മറ | ആര്‍ധ്യുമെന്റായി കൊടുത്തിരിക്കുന്ന നിരയിലെ ഏറ്റവും ചെറിയ വില

MIN

ആര്‍ധ്യുമെന്റായി കൊടുത്തിരിക്കുന്ന നിരയിലെ ഏറ്റവും വലിയ വില.
ആര്‍ഗ്യുമെന്റായി കൊടുത്തിരിക്കുന്ന നിരയിലെ 1൮7. അല്ലാത്ത വിലകളുടെ എണ്ണം

പട്ടിക 9.7: MySQL ലെചില ബിത്ട്‌ DO 0B NIA

ക്വറി 9.28 വിദ്യാര്‍ഥിയുടെ കുടുംബ വരുമാനത്തിന്റെ ഏറ്റവും കൂടിയത്‌, കുറഞ്ഞത്‌,
ശരാശരി എന്നിവ നല്‍കുന്നു. ചിത്രം 9.20 ഇതിന്റെ ഫലം കാണിച്ചിരിക്കുന്നു.

SELECT MAX (2 income) ,MIN(f_income),AVG(f£_ income )
FROM student;

ഈ വിലകള്‍ കണക്കാ .._______________ ച. 4. +
ക്കുമ്പോള്‍ സംഗ്രഹ | MAX(f_income) | MIN(f_income) | AVG{f_income) |
നിരയിലെ 11, വില TTT നന്ന നന്നി +

| 52000 | 15000 | 30000.0000 |
കള്‍ പരിഗണിക്കുക 4 _____________ ______________. +
യില്ല. 1 row in set (0.03 sec)

ചിത്രം 9.20: MofOD ഫങ്ഷ്നുക്ളുടെ ഉപയോഗ
ക്വറി 9.29 ല്‍ കാണി ശം ee കളുടെ ക, 0

ച്ചിരിക്കുന്നതുപോലെ ചില തിരഞ്ഞെടുക്കല്‍ മാനദണ്ഡത്തിന്റെ അടിസ്ഥാനത്തില്‍ രൂപീ
കൃതമായ പട്ടികയിലെ ഒരു ഉപഗണത്തില്‍ ഈ ഫങ്ഷനുകള്‍ ഉപയോഗിക്കാവുന്നതാണ്‌.
ഇത്‌ സയന്‍സ്‌ ഗ്രൂപ്പിലെ വിദ്യാര്‍ഥികളുടെ എണ്ണം തരുന്നു. ചിത്രം 9.19 ല്‍ അതിന്റെ
ഓട്ട്പുട്ട്‌ കാണിച്ചിരിക്കുന്നു.

1019.29 SELECT COUNT(*), ൮൨0 (2 income)

FROM student WHERE course = 'Science';

ചിത്രം 9.19 നാം പരിശോധിച്ചാല്‍ കൃത്യമായ ഉത്തരം 7 എന്ന്‌ കാണാന്‍ കഴിയും. പിന്നെ
എന്തുകൊണ്ടാണ്‌ ചിത്രം 9.21 ലെ വിലകള്‍ തമ്മില്‍ തുല്യമല്ലാത്തത്‌? ആദ്യത്തെ നിര
COUNT (*) ആണ്‌. അത്‌ course എന്ന നിരയില്‍ സയന്‍സ്‌ എന്ന വില ഉള്ള റെക്കോര്‍ഡു
കളുടെ എണ്ണം തരുന്നു. നക്ഷത്ര ചി — F777 7777 3--5-5----------- +
amo (#) പട്ടികയിലെ എല്ലാ നിരകളെ | COUNT(“) | COUNT(£ income) |
യും സൂചിപ്പിക്കുന്നു. അതുകൊണ്ട്‌ ; oo 71 നത്തെ am
ഒരു റെക്കോര്‍ഡില്‍ ഏറ്റവും കുറ ._________. ______________. +

ഞ്ഞത്‌ ഒരു ഫീല്‍സഡെങ്കിലും ഉണ്ടെ
ങ്കില്‍ COUNT (*) ആ റെക്കോര്‍ഡ്‌
പരിഗണിക്കും. പക്ഷെ ക്വറി 9.29ലെ
COUNT (f income), സയന്‍സിലെ 2 income എന്ന നിരയിലെ 1411, വിലകള്‍
കണക്കിലെടുക്കുന്നില്ല. അതുകൊണ്ടാണ്‌ ചിത്രം 9.21 ലെ രണ്ടാമത്തെ നിരയില്‍ 4
എന്ന വില കാണാന്‍ കഴിയുന്നത്‌. ചിത്രം 9.17 പരിശോധിക്കുക അതില്‍ f income
എന്ന നിരയിലെ 14111, ന്റെ എണ്ണം തിരിച്ചറിയുക.

1 row in set (0.03 sec)

ചിത്രം 927 COUNT) 2820 പെയോഗം

9.6.5 GROUP BY ഉപവാക്യം ഉപയോഗിച്ച്‌ തരം തിരിക്കല്‍
(Grouping of records using GROUP BY clause)

ചിലപ്പോള്‍ മൂല്യങ്ങളുടെ അടിസ്ഥാനത്തില്‍ പട്ടികയിലെ വരികള്‍ വിവിധ ഗണങ്ങളാക്കി
നമുക്ക്‌ വിഭജിക്കേണ്ടി വരും. പൊതുവിലയുടെ അടിസ്ഥാനത്തില്‍ GROUP BY ഉപയോ
ഗിച്ച്‌ ഒരു പട്ടികയിലെ വരികള്‍ തരംതിരിക്കാം. GROUP BY ഉപവാക്യത്തില്‍ കൊടുത്തി
രിക്കുന്ന ആഭ്രിബ്യയുട്ട്‌ ഉപയോഗിച്ച്‌ ഗ്രൂപ്പുകള്‍ രൂപീകരിക്കാം. GROUP BY ഉപവാകൃത്തില്‍
കൊടുത്തിരിക്കുന്ന ആഭ്രിബ്യയുട്ടില്‍ ഒരേ വിലയുള്ള വരികള്‍ ഒരു ഗ്രൂപ്പില്‍ കാണപ്പെടും.
നിരയിലെ വ്യത്യസ്ത വിലകളുടെ അടിസ്ഥാനത്തിലാണ്‌ ഗ്രൂപ്പുകള്‍ രൂപീകൃതമാകുന്നത്‌.
അതിനാല്‍ ഈ (ANLAID റെക്കോര്‍ഡുകളുടെ തരംതിരിക്കലായി കണക്കാക്കാം. ക്വറി
9.29 ഉപയോഗിച്ച്‌ സയന്‍സ്‌ ഗ്രുപ്പിലെ കുട്ടികളുടെ എണ്ണം ലഭിച്ചു. ഇനി ഓരോ ഗ്രൂപ്പി
ലെയും കുട്ടികളുടെ എണ്ണവും അതോടൊപ്പം കുടുംബത്തിന്റെ ശരാശരി മാസവരുമാനവും
അറിയണമെന്ന്‌ വിചാരിക്കുക. ക്വറി 9.30 ഉപയോഗിക്കാം. ഓട്ട്പുട്ട്‌ ചിത്രം 9.228 കൊടു
ത്തിരിക്കുന്നു.

ക്വി. SELECT course, COUNT(*), AVG(f£_income)

FROM student GROUP BY course ;

ഇവിടെ COURSE എന്ന നിരയിലെ വിവിധ വിലകളുടെ അടിസ്ഥാനത്തില്‍ വിവിധ ഗ്രൂ

പ്പുകള്‍ രൂപീകരിച്ചിരിക്കു ..____________ 4_________ _____________. +
ന്നു (കോമേഴ്‌സ്‌, ഹ്യൂമാ | course | COUNT{*) | AVG{f_income) |
നിറ്റീസ്‌, സയന്‍സ്‌). ടോ 55-55-5൦ Porn nnn nnn +
അതിനുശേഷം COUNT | Commerce | 2 | 31000.0000 |
. | Humanities | 1 | 52000.0000 |
*
("), AVG(Z_income) | seience | 7 | 24000.0000 |
എന്നീ ഫങ്ഷനുകള്‍ .____________ ._________. poe +

ഇതിലെ ഓരോ ഗ്രൂപ്പി 3 rows in set (0.00 sec)
ലും ഉപയോഗിച്ചിരിക്കു

ചിത്രം 9.22:GROUP BY
ന്നു. പരോ കൊഞ്ചുള്ള വരികളുടെ തരം Claenct

9.6.6 HAVING ഉപവാക്യത്തിലൂടെ നിബന്ധനകള്‍ പ്രയോഗിച്ച്‌ ഗ്രൂപുകൾ രൂപീകരിക്കുന്നു
(Applying conditions to form groups using HAVING clause)

ഈ ഉപവാക്യം GROUP BY ഉപവാക്യത്തോടൊപ്പം ഉപയോഗിക്കുന്നു. ഓരോ വരിയിലും
നിബന്ധനകള്‍ ഉപയോഗിക്കുന്ന WHERE ഉപവാകൃത്തെക്കുറിച്ചു ഇതിനോടകം പഠിച്ചു
കഴിഞ്ഞു. HAVING ഉപവാകൃത്തിന്റെ സഹായത്തോടുകൂടി നിബന്ധനകള്‍ പ്രയോഗിച്ച്‌
നമുക്ക്‌ ഗ്രൂപ്പുകള്‍ രൂപീകരിക്കാവുന്നതാണ്‌. HAVING ഉപവാകൃത്തിലെ നിബന്ധന ഒരു
കൂട്ടം റെക്കോര്‍ഡുകള്‍ രൂപീകരിക്കുന്നതിനാണ്‌ ഉപയോഗിക്കുന്നത്‌, അല്ലാതെ വരികളില്‍
ഒറ്റയ്ക്കല്ല. ക്വറി 9.31 ഗ്രൂപ്പുണ്ടാക്കുന്നതിനു വേണ്ട നിബന്ധനകള്‍ നല്‍കുന്നു. HAVING
ഉപവാകൃത്തിന്റെ കൂടെ നിബന്ധനകള്‍ നല്‍കുമ്പോള്‍ മാത്രമാണ്‌ ഇവിടെ ഗ്രൂപ്പുകള്‍
രൂപീകൃതമാകുന്നത്‌.
ക്വി 9.31 SELECT course, COUNT(*)

GROUP BY course

HAVING COUNT (*)>37

ചിത്രം 9.22 ഉം, 9.23 ഉം പരിശോധിച്ചാല്‍ നമുക്ക്‌ +--------- 4 +

സയന്‍സ്‌ ഗ്രൂപ്പില്‍ മാത്രമെ 3 വിദ്യാര്‍ഥികളില്‍ കൂടു | course | COUNT{“) |

തല്‍ ഉള്ളു എന്ന്‌ കാണാന്‍ കഴിയും. കൊമേഴ്‌സ്‌, ഹ്യുമാ | el TT j ToT a
Science

നിറ്റീസ്‌ ഗ്രൂപ്പുകള്‍ ക്വറി 9.31 ന്റെ ഓട്ട്പുട്ടില്‍ വന്നിട്ടില്ല. പ ന്ത്‌ +

കാരണം, ഇവ ഓരോന്നിന്റെയും റെക്കോര്‍ഡുകളുടെ 1 row in set (0.00 sec)
എണ്ണം യഥാക്രമം 2, 1 എന്നിങ്ങനെയാണ്‌. അതിനാ ചിത്രം 9.23: നിബദ്ധനക്ളുടെ
ലാണ്‌ ഈ ഗ്രൂപ്പുകള്‍ ക്വറി 9.31 ന്റെ ഉത്തരത്തില്‍ അടിദ്ഥാനത്തില്‍ (Zeya തിരിക്കുന്നു
കാണാന്‍ സാധിക്കാത്തത്‌.

നിങ്ങളുടെ പുരോഗതി അറിയുക
1. SQL ലെ സംഗ്രഹണത്തിനുപയോഗിക്കുന്ന ഫങ്ഷനുകള്‍ പട്ടികകെടുത്തുക?

2. COUNT (*), COUNT (column_name) എന്നിവ എങ്ങനെ വൃത്യാസഷെ
ട്ടിരിക്കുന്നു?

3. WHERE, HAVING ഉപവാക്യങ്ങള്‍ തമിലുള്ള വ്യത്യാസം എന്ത്‌?

4. താഴെ പറയുന്ന ക്വറിയുടെ ഉത്തരം എന്ത്‌?

SELECT COUNT (DISTINCT course) FROM student;

stock എന്ന പട്ടികയുടെ അടിസ്ഥാനത്തില്‍ സംഗ്രഹ ഫങ്ഷനുകളും

ORDER BY ഉപവാകൃവും ഉപയോഗിച്ച്‌ ക്വറികള്‍ തയാറാക്കുക.
നമുക്ക്‌ ചെയ്യാം

342

9.7 പട്ടികയിലെ ഡാറ്റയുടെ പരിഷ്കരണം (Modifying data in tables)

ചില സന്ദര്‍ഭങ്ങളില്‍ ഒരു പട്ടികയിലെ നിരകളുടെ വിലകളില്‍ മാറ്റം വരുത്തേണ്ടതായി
വരാറുണ്ട്‌. ഉദാഹരണത്തിന്‌ ശമ്പളം അല്ലെങ്കില്‍ കൂലി പുതുക്കുമ്പോള്‍ വിദ്യാര്‍ഥിയുടെ
കുടുംബത്തിന്റെ മാസവരുമാനത്തില്‍ മാറ്റം വരാറുണ്ട്‌. അതുപോലെ ചില വിദ്യാര്‍ഥി
കളുടെ മാസവരുമാനം വിട്ടുപോയത്‌ (NULL) പിന്നീട്‌ സാധുവായ ഡാറ്റ നല്‍കി മാറ്റം
വരുത്താവുന്നതാണ്‌. ഇങ്ങനെയുള്ള മാറ്റങ്ങള്‍ DML കമാന്‍ഡായ UPDATE ഉപയോഗിച്ച്‌
നിര്‍വഹിക്കാം. അത്‌ ഒന്നോ അതിലധികമോ നിര്‍ദിഷ്ട നിരകളിലെ വിലകളില്‍ മാറ്റം
വരുത്തുന്നതിന്‌ ഉപയോഗിക്കാം. ഈ മാറ്റം പട്ടികയിലെ തിരഞ്ഞെടുത്ത വരികളില്‍
മാത്രമെ പ്രതിഫലിക്കൂ. ഒരു വരിയിലെ നിരയില്‍ പുതിയ ഡാറ്റ കൊണ്ടുവരുന്നതിന്‌
SET കീവേര്‍ഡ്‌ ഉപയോഗിക്കുന്നു. ഇത്‌ UPDATE കമാന്‍ഡിന്റെ കുടെ നിര്‍ബന്ധമായും
ഉപയോഗിക്കേണ്ട ഒരു ഉപവാകൃമാണ്‌. പുതിയ ഡാറ്റ ഒരു സ്ഥിര സംഖ്യയോ, പ്രയോഗമോ
(Expression) മറ്റൊരു പട്ടികയിലെ ഡാറ്റയോ ആകാം. 11110211: കമാന്‍ഡിന്റെ വാകൃഘടന
താഴെ കൊടുക്കുന്നു.

UPDATE <table name> SET <column_name> = <value>
[,<column_name> = <value>,. . . ]
(WHERE <condition>] ;

‘Kaushi' എന്ന വിദ്യാര്‍ഥിയുടെ കുടുംബത്തിന്റെ മാസവരുമാനം Rs 27000 ലേക്ക്‌ മാറ്റണ
മെന്ന്‌ വിചാരിക്കുക. ക്വറി 9.32 ഇതിനായി ഉപയോഗിക്കുന്നു.

കിട. UPDATE student

SET 2 income = 27000
WHERE name = 'Kaushi' ;

ഈ ക്വറിയുടെ പ്രവര്‍ത്തനത്തിനു ശേഷം MySQL ല്‍ നിന്ന്‌ താഴെക്കാണുന്ന രീതിയിലുള്ള
പ്രതികരണം ലഭിക്കുന്നു.

Query O.K, 1 row affected (0.08 sec)
Rows matched: 1 Changed: 1 Warnings: 0

റെക്കോഡില്‍ വന്ന മാറ്റം കാണുന്നതിനു വേണ്ടി താഴെ പറയുന്ന ക്വറി ഉപയോഗിക്കാം
SELECT * FROM student WHERE name = 'Kaushi'

ചിത്രം 9.24 ല്‍ ഈ ക്വറിയുടെ ഒട്ട്പുട്ട്‌ കാണിച്ചിരിക്കുന്നു.

3-------- 3--------- +-------- 4+------------ +---------- +---------- +
| adm_no | name | gender | dob | course | £ income |
4-------- 4-------- 4--------- ------------- ---------- 4---------- +
| 1025 | Kaushi | M | 1998-10-02 | Commerce | 27000 |
+-------- $-------- 4-------- ------------- ---------- 4---------- +

1 row in set {0.00 sec)

2i@o9.24: f income Me പരിഷ്‌കരിച്ച WICOBIAIsIOKaushi മുടെ വിമ്ഥാംങ്ങ്‌

SE —
ത്ത്‌ പ്പ്‌

a

ഈ ക്വറിയുടെ ഓട്പുട്ട്‌ ചിത്രം 9.17 മായി താരതമ്യം ചെയ്ത്‌ മാറ്റങ്ങള്‍ മനസ്സിലാക്കുക.
റെക്കോര്‍ഡിലെ നിരകള്‍ക്ക്‌ വില നല്‍കാന്‍ നമുക്ക്‌ എക്‌സ്പ്രഷന്‍ ഉപയോഗിക്കാം.
ക്വറി 9.33 ഈ ആശയം വിവരിക്കുന്നു.

UPDATE student
SET 2 income = 2 income + 1000
WHERE 2 income < 25000;

ഈ ക്വറിയോടുള്ള പ്രതികരണം താഴെ കൊടുക്കുന്നു.

Query O.K, 3 rows affected (0.06 sec)

Rows matched: 3 Changed: 3 Warnings: 0
3 വരികളാണ്‌ തന്നിരിക്കുന്ന നിബന്ധനകള്‍ പാലിക്കുന്നത്‌. അതിനാല്‍ f_ income എന്ന
നിരയിലെ ഈ വരികളെ 1000 വച്ച്‌ വര്‍ധിപ്പിക്കുന്നു (ചിരം 9.17, 9.25 എന്നിവ
പരിശോധിക്കുക)

NULL മൂല്യമുള്ള നിരകളില്‍ മാറ്റം വരുത്തുന്നതിന്‌ UPDATE കമാന്‍ഡുകള്‍ ഉപയോഗി
ക്കാം. ഇപ്പോള്‍ NULL വിലയുള്ള നിരയില്‍ മാസവരുമാനം 20000 രൂപ നമുക്ക്‌ ചേര്‍
ക്കണമെന്നിരിക്കട്ടെ. ക്വറി 9.34 അത്‌ സാധ്യമാക്കുന്നു.

UPDATE student
SET 2 income = 20000
WHERE 2 income IS NULL;

ക്വറി 9.33 ലും 9.34 ലും വരുത്തിയ മാറ്റങ്ങള്‍ ചിത്രം 9.25 ല്‍ നമുക്ക്‌ കാണാന്‍ കഴിയും.
അതിന്‌ SELECT *FROM student; agaM ക്വറി ഉപയോഗിക്കുക

------- ------------ 3---------- ------ crn noe ----------- ട----------- +
adm_no name gender dob course f£_income
4------- ------------- --------- 4------------- ട-------------- 4----------- +
1001 Alok M 1958-10-02 Science 25000
1002 Nike M 1998-11-26 Science 35000
1003 Bharath M 1999-01-01 Commerce 45000
1004 Virat M 1998-12-05 Science 23000
1005 Meera | F | 1998-08-15 | Science 20000 |
1006 Divakar M 1358-02-21 Science 20000
1025 Raushi M 1998-10-02 Commerce 27000
1026 Niveditha EF 1999-03-04 Humanities 52000
1027 Sreekumar M 1998-06-06 Science 16000
1057 Chaithanya E 1999-06-03 Science 20000

നിന്നില്‍ 5 4-5 45 ട്‌ ട------ +

10 rows in set (0.00 sec)

ചിത്രം 9.25: f income നിരതിലെ തിരുത്തുക

stock എന്ന പട്ടിക ഉപയോഗിച്ച്‌ ചില നിരകളിലെ വിലകളില്‍ മാറ്റങ്ങള്‍

വരുത്താനാവശ്യമായ SQL പ്രസ്താവനകള്‍ എഴുതുക.
നമുക്ക്‌ ചെയ്യാം

98 ഒരു പട്ടികയുടെ രൂപഘടന മാറ്റൂന്നു (Changing the structure of a table

ചില സാഹചര്യങ്ങളില്‍ നമുക്ക്‌ പട്ടികയുടെ രൂപഘടനയില്‍ മാറ്റങ്ങള്‍ വരുത്തേണ്ടതായി
വരാം. ഈ പ്രവര്‍ത്തനം രൂപരേഖ (schema) യുമായി ബന്ധപ്പെട്ടതാണ്‌. അതിന്‌ DDL
കമാന്‍ഡായ ALTER TABLE ഉപയോഗിക്കാം. നിരകള്‍ കൂട്ടിച്ചേര്‍ക്കല്‍, ഒഴിവാക്കല്‍,
നിലവിലുള്ള നിരയുടെ ഡാറ്റ ഇനത്തിലും വലുപ്പത്തിലും മാറ്റം വരുത്തുക, പട്ടികയ്ക്ക്‌
പുതിയ പേര്‌ നല്‍കുക തുടങ്ങിയ പ്രവര്‍ത്തനങ്ങള്‍ക്ക്‌ ഈ നിര്‍ദേശം ഉപയോഗിക്കാം.
ഇനി ഈ മാറ്റങ്ങള്‍ എങ്ങനെയാണ്‌ വരുത്തുന്നത്‌ എന്ന്‌ നമുക്ക്‌ നോക്കാം.

9.8.1 പുതിയ നിര കൂട്ടിച്ചേര്‍ക്കുന്നു (Adding a new column)

ഒന്നോ അതിലധികമോ നിരകള്‍ ഒരു പട്ടികയില്‍ എവിടെ വേണമെങ്കിലും കൂട്ടിച്ചേര്‍
ക്കാവുന്നതാണ്‌. പുതിയ നിര കൂട്ടിച്ചേര്‍ക്കുന്നതിനുള്ള (ALTER 12131,4.നറെ) വാകൃഘടന
താഴെ കൊടുക്കുന്നു.

ALTER TABLE <table നണടാ-

ADD <column_name> <data_type> [<size>]
{[<constraint>]

[FIRST | AFTER <column_name> ] ;

ഇവിടെ <table name> എന്നത്‌ ഏത്‌ പട്ടികയിലാണോ മാറ്റം വരുത്തേണ്ടത്‌ അതിന്റെ
പേരാണ്‌. ADD എന്നത്‌ ഒരു പട്ടികയില്‍ പുതിയ നിരകള്‍ കൂട്ടിച്ചേര്‍ക്കാനുള്ള കീ
വേഡാണ്‌. <column_name> <data_type> [<size>] എന്നിവ പുതിയ നിരയുടെ
വിശദാംശങ്ങളാണ്‌. FIRST | AFTER എന്നത്‌ പുതുതായി ചേര്‍ക്കുന്ന നിരയുടെ
സ്ഥാനം സൂചിപ്പിക്കുന്നു.

പുതിയ നിര ആദ്യമാണ്‌ ചേര്‍ക്കേണ്ടത്‌ എങ്കില്‍ നമുക്ക്‌ FIRST എന്ന ഉപവാക്യം
ഉപയോഗിക്കാം. പുതിയ നിര പ്രത്യേകസ്ഥാനത്താണ്‌ ചേര്‍ക്കേണ്ടതെങ്കില്‍ AFTER
<column_ name> എന്ന ഉപവാക്യം ഉപയോഗിക്കണം. പുതിയ നിരയുടെ സ്ഥാനം
നാം വ്യക്തമാക്കിയിട്ടല്ലെങ്കില്‍ അത്‌ പട്ടികയുടെ അവസാനനിരയായി കൂട്ടിച്ചേര്‍ക്കപ്പെടും.
പുതുതായി കൂട്ടിച്ചേര്‍ക്കുന്ന നിരകളില്‍ NULL മൂല്യങ്ങളാണ്‌ ഉണ്ടാവുക എന്നത്‌
ശ്രദ്ധിക്കുക.

ഇനി നമുക്ക്‌ gr സി, reg ൩൦ എന്നീ രണ്ട്‌ നിരകള്‍ student പട്ടികയില്‍ കൂട്ടിച്ചേര്‍ക്കാം.
ഇവ യഥാക്രമം ഗ്രേസ്മാര്‍ക്കും വിദ്യാര്‍ഥിയുടെ ഹയര്‍ സെക്കന്ററി പരീക്ഷയിലെ രജിസ്റ്റര്‍
നമ്പറും സംഭരിക്കുന്നതിനുള്ളതാണ്‌. ക്വറി 9.35 ന്‌ പട്ടികയുടെ രൂപ ഘടനയില്‍ ഈ
മാറ്റങ്ങള്‍ വരുത്താന്‍ കഴിയും.

ക്വറി 9.35 ALTER TABLE student

ADD gr_mks INTEGER
AFTER dob, ADD reg_no INTEGER;

MySQL ന്റെ പ്രതികരണം താഴെ കൊടുക്കുന്നു.

Query O.K, 10 rows affected (0.25 sec)
Rows matched: 10 Changed: 10 Warnings: 0

തഞ്ജന്നന്നന്നന്ന 1000000000

98.2 ഒരു നിരയുടെ നിര്‍വചനത്തില്‍ മാറ്റം വരുത്തുന്നു
(Changing the definition of a column)

ഒരു നിരയുടെ സവിശേഷതകളായ ഡാറ്റ ഇനം, വലുപ്പം അല്ലെങ്കില്‍ കണ്‍സ്ട്രയിന്റ്‌
എന്നിവയ്ക്ക്‌ മാറ്റം വരുത്തുന്നതിന്‌ ALTER TABLE ന്റെ കൂടെ MODIFY എന്ന ഉപവാക്യം
ഉപയോഗിക്കാം. ഇതിനുള്ള വാകൃഘടന താഴെ കൊടുക്കുന്നു.

ALTER TABLE <table name>
MODIFY <column_name> <data_type> [<size>]
{<constraint>];

ഇനി പുതുതായി കൂട്ടിച്ചേര്‍ത്ത reg no എന്ന നിരയില്‍ UNIQUE എന്ന ഉപവാക്യം
നല്‍കി രണ്ടു കുട്ടികള്‍ക്ക്‌ ഒരേ രജിസ്റ്റര്‍ നമ്പര്‍ ഉണ്ടായിരിക്കില്ല എന്ന്‌ ഉറപ്പുവരുത്തുവാന്‍
സാധിക്കുന്നതാണ്‌. ക്വറി 9.36 ഈ മാറ്റം വരുത്തുന്നു.

കിട ALTER TABLE student

MODIFY reg_no INTEGER UNIQUE;

MySQL ന്റെ പ്രതികരണവും ക്വറി 9.35 ല്‍ നമുക്ക്‌ ലഭിച്ച പ്രതികരണവും ഒന്നു
തന്നെയായിരിക്കും. നമുക്ക്‌ ഈ മാറ്റങ്ങള്‍ 11:50 student; എന്ന കമാന്‍ഡ്‌ ഉപയോഗിച്ച്‌
മനസ്സിലാക്കാവുന്നതാണ്‌. ക്വറി 9.35 ലും 9.36 ലും വരുത്തിയിട്ടുള്ള മാറ്റങ്ങള്‍ നമുക്ക്‌
വീക്ഷിക്കാവുന്നതാണ്‌ ചിത്രം 9.26 ല്‍ ജഓട്ട്പുട്ട്‌ കാണിച്ചിട്ടുണ്ട്‌.

$o--- 4--------------. 4-------. +----- 4---------- oe +
| Field | Type | Null | Key | Default | Extra I
+---------- -------------. +------ +----- +--------- $---------------- +
| adm_no { int(11) | NO | PRI | NULL | auto_increment |
| name | varchar(20) | NO ] | NULL I I
| gender | char (1) | YES 1 IM | |
| dob | date | YES | | NULL ] |
| gr_mks | int (11) | YES ] | അസ്മ | I
| course | varchar(15) | YES [| | NULL | |
| £_income | int (11) | YES | | NULL ] |
| reg_no | ant(11) | YES | UNI | NULL I |
+---------- 4--------------- 4-------- +----- 4--------- 4----------------- +

8 rows in set (0.00 sec)
ചിത്രം 9.26: student പട്ടികയിത്ഥഗ്റം വദുത്തിയിതിനുമേഷഥുള്ള Ojo PLISM

gr_ mks എന്ന നിര dob ന്‌ ശേഷവും reg no എന്ന നിര അവസാന നിരയായും
കൂട്ടിച്ചേര്‍ത്തതായി ചിത്രം 9.26 ല്‍ നമുക്ക്‌ കാണാന്‍ സാധിക്കും. reg _no ന്‌ നേരെ
Key നിരയില്‍ UNIQUE കണ്‍സ്ര്രയിന്റ്‌ ഉള്‍പ്പെട്ടിരിക്കുന്നതു കൂടി ശ്രദ്ധിക്കുക. SELECT
*FROM student എന്ന കമാന്‍ഡ്‌ ഉപയോഗിച്ചാല്‍ ചിത്രം 9.27 ല്‍ കാണുന്നതുപോലെ
പുതിയ നിരകളുടെ ഉള്ളടക്കത്തില്‍ NULL വിലകള്‍ കാണാന്‍ കഴിയും. പുതുതായി
നിര്‍മ്മിച്ച നിരകളില്‍ ഇതുവരെ വിലകള്‍ കൊടുക്കാത്തതു കൊണ്ടാണ്‌ ഇങ്ങനെ
സംഭവിച്ചത്‌.

wy 346 | ള്ള

3--------- ------------- 4--------. 4-------------- 4--------. ------------- ----------. 4--------- +
| adm_no | name | gender | dob | gr_mks | course | £_income | reg_no

4--------. 4------------- 4--------- -------------- --------. 4------------. ----------. 4--------. +
| 1001 | Alok | M | 1998-10-02 | NULL | Science l 25000 | NULL |
I 1002 | Nike 24 | 2958-12-26 | NULL | Science I 35000 | NULL |
I 1003 | Bharath [Mu | 1999-01-01 | NULL | Commerce I 45000 | NULL |
| 1004 | Virat IM | 1998-12-05 | അ | Science ] 23000 | NULD |
| 2005 | Meera IP | 1998-08-15 | NULL | Science | 20000 | NULL

] 2006 | Divakar Iu | 1998-02-21 | NULL | Science | 20000 | NULL

| 1025 | Kaushi IM | 1998-10-02 | NULL | Commerce I 27000 | NULL |
I 1026 | Niveditha | F | 1993-03-04 | NULL | Humanities | 52000 | NULL |
| 1027 | Sreekumar | M | 1998-06-06 | NULL | Science | 16000 | NULL |
| 1057 | Chaithanya | F | 1999-06-03 | NULL | Science | 20000 | NULL

3--------- 4------------ 4--------. ------------. 4--------. 4------------- 4. 4-5 +

10 rows in set (0.00 sec)

ചിത്രം 9.27: AJAOJOS BosOSN പരിഷ്‌കരിച്ചതിനു ശേഷമുള്ള പുതിയ നികേളുടെ ഉള്ളടക്കം

പുതുതായി കൂട്ടിച്ചേര്‍ത്ത നിരകളില്‍ ഡാറ്റ ചേര്‍ക്കുന്നതിനും അത്‌

പ്രദര്‍ശിപ്പിക്കുന്നതിനുമുള്ള SQL പ്രസ്താവനകള്‍ എഴുതുക.

stock എന്ന പട്ടികയ്ക്ക്‌ ഘടനാപരമായ മാറ്റങ്ങള്‍ വരുത്തി അതില്‍
നമുക്ക്‌ ചെയ്യാം പുതിയ വിലകള്‍ ചേര്‍ക്കുക.

983 പട്ടികയില്‍ നിന്ന്‌ ഒരു നിര ഒഴിവാക്കുന്നു (Removing column from a table)

പട്ടികയില്‍ നിന്ന്‌ ഒരു നിര ഒഴിവാക്കണമെങ്കില്‍ ALTER TABLE കമാന്‍ഡിനോടൊപ്പം
DROP എന്ന ഉപവാക്യം ഉപയോഗിക്കണം ഇതിന്റെ വാകൃഘടന താഴെ കൊടുക്കുന്നു.

ALTER TABLE <table നണട
DROP <column_name>;

ഉദാഹരണമായി student എന്ന പട്ടികയില്‍ നിന്ന്‌ gr_mks എന്ന നിര ഒഴിവാക്കണ
മെങ്കില്‍ ക്വറി 9.37 ഉപയോഗിച്ചാല്‍ മതിയാകും.

ALTER TABLE student
DROP gr_mks;

മുന്‍പ്‌ ALTER TABLE പ്രസ്താവനകളില്‍ നിന്ന്‌ നമുക്ക്‌ ലഭിച്ച അതേ പ്രതികരണ
മായിരിക്കും 1൭൮1. ല്‍ നിന്നും ലഭിക്കുക. മാറ്റങ്ങള്‍ DESC student; എന്ന കമാന്‍ഡ്‌
ഉപയോഗിച്ച്‌ നിരീക്ഷിക്കാവുന്നതാണ്‌.

984 പട്ടിക പുനര്‍നാമകരണം ചെയ്യുന്നു (Renaming a table)

ഡാറ്റാബേസിലെ ഒരു പട്ടിക പുനര്‍നാമകരണം ചെയ്യുന്നതിന്‌ RENAME TO എന്ന
ഉപവാക്യം ALTER TABLE കമാന്‍ഡിനോടൊപ്പം ഉപയോഗിച്ചാല്‍ മതി. പട്ടികയില്‍
വരികളുണ്ടെങ്കിലും അതിനെ നമുക്ക്‌ പുനര്‍നാമകരണം ചെയ്യാം. പട്ടിക പുനര്‍നാമകരണം
ചെയ്യുന്നതിനുള്ള കമാന്‍ഡിന്റെ വാക്യ ഘടന താഴെ കൊടുക്കുന്നു

ALTER TABLE <table name>
RENAME TO <new_table name>;

തഞ്ജന്നന്നന്നന്ന 1000000000

ഉദാഹരണത്തിന്‌ student എന്ന പട്ടികയ്ക്ക്‌ student2015 എന്ന പേര്‌ മാറ്റിനല്‍കണമെങ്കില്‍
ക്വറി 9.38 ഉപയോഗിക്കാം.

4------------------- +
കറി. | നചിിടട_ 2൩ school |
3------------------- +
] student2015 |
ALTER TABLE student ------------------ +
RENAME TO student2015; 1 row in set (0.00 sec)

ചിത്രം 9.28: പുരരീരമ്മകണം ODD ചട്ടിക

ഈ ക്വറിയുടെ പ്രതികരണം താഴെ കൊടുക്കുന്നു
Query O.K, 0 rows affected (0.06 sec)

പട്ടികയുടെ പേര്‌ മാറിയെങ്കിലും അതിലെ ഉള്ളടക്കത്തില്‍ മാറ്റം വന്നിട്ടില്ല എന്ന്‌ പ്രതി
കരണം സൂചിപ്പിക്കുന്നു.
മാറ്റങ്ങള്‍ കാണുന്നതിന്‌ SHOW TABLES എന്ന ക്വറി ഉപയോഗിക്കാം. ചിത്രം 9.28 ല്‍
ഒട്ട്പുട്ട്‌ കാണിച്ചിരിക്കുന്നു.
9.9 പട്ടികയില്‍ നിന്ന്‌ വരികള്‍ ഒഴിവാക്കുന്നു (Deleting rows from a table)

ചിലപ്പോള്‍ ഒരു പട്ടികയില്‍ നിന്ന്‌ ഒന്നോ അതില്‍ക്കൂടുതലോ റെക്കോര്‍ഡുകള്‍ നമുക്ക്‌
ഒഴിവാക്കേണ്ടതായി വരും. ഇതിനായി DML കമാന്‍ഡായ DELETE ഉപയോഗിക്കുന്നു.
ഒഴിവാക്കേണ്ട വരികള്‍ WHERE ഉപവാക്യം ഉപയോഗിച്ച്‌ തിരഞ്ഞെടുക്കുന്നു. WHERE
ഉപയോഗിച്ചിട്ടില്ലെങ്കില്‍ പട്ടികയിലെ എല്ലാ റെക്കോര്‍ഡുകളും നഷ്ടപ്പെടും. DELETE
കമാന്‍ഡ്‌ ഒഴിവാക്കുന്നത്‌ റെക്കോര്‍ഡുകളെയാണ്‌. ഇതിന്റെ വാകൃഘടന താഴെ കൊടു
ക്കുന്നു.

DELETE FROM <table name> [WHERE <condition>] ;

ഉദാഹരണത്തിന്‌ അഡ്മിഷന്‍ നമ്പര്‍ 1027 ആയ Sreekumar എന്ന വിദ്യാര്‍ഥിയുടെ
റെക്കോര്‍ഡ്‌ പട്ടികയില്‍ നിന്ന്‌ ഒഴിവാക്കണമെങ്കില്‍ ക്വറി 9.39 ഉപയോഗിക്കാം.

DELETE FROM student2015 WHERE ൭൦൩ ൩ഠ = 1027 ;
ഈ ക്വറിയുടെ ഓട്ട്പുട്ട്‌ താഴെ കൊടുക്കുന്നു:
Query O.K, 1 row affected (0.08 sec)

ഇവിടെ പട്ടികയുടെ പേര്‌ കൊടുത്തിരിക്കുന്നത്‌ student2015 എന്നാണ്‌. പട്ടികയിലെ
മാറ്റം ചിത്രം 9.29 ല്‍ നിരീക്ഷിക്കാവുന്നതാണ്‌. അത്‌ ലഭിക്കുന്നതിന്‌ താഴെ കൊടുക്കുന്ന
ക്വറി ഉപയോഗിക്കുക.

SELECT * FROM student2015;

a
adm_no | name | gender | dob | course | £_income | reg_no
Se le eo
1001 | Alok IM 1998-10-02 | Science | 25000 | NULL
1002 | Nike IM 1998-11-26 | Science | 35000 | NULL
1003 | Bharath IM 1999-01-01 | Commerce | 45000 | NULL
1004 | virat IM 1998-12-05 | Science | 23000 | NULL
1005 | Meera | F 1998-08-15 | Science iT 20000 | NULL
1006 | Divakar | 14 1998-02-21 | Science | 20000 | 1൩22
1025 | Kaushi IM 1998-10-02 | Commerce | 27000 | NULL
1026 | Niveditha | F 1999-03-04 | Humanities | 52000 | NULL
1057 | Chaithanya | F 1999-06-03 | Science | 20000 | NULL
a eas

9 rows in set (0.02 sec)

ചിത്രം 9.29: ഒരു ദെക്കാര്‍ഡ്‌ ഒഴിവാക്കിയതിനു ശേഷം NONIACM ചെയ്ത AI ADIOL DEBS0N0

ചിത്രം 9.29 ല്‍ ഏഴു നിരകള്‍ മാത്രമെ കാണാന്‍ കഴിയൂ. കാരണം ക്വറി 9.37 ഉപയോഗിച്ച്‌
gr_mks എന്ന നിര നേരത്തെ ഒഴിവാക്കിയിട്ടുണ്ട്‌.

9.10 ഡാറ്റാബേസില്‍ നിന്ന്‌ പട്ടിക ഒഴിവാക്കുന്നു
(Removing table from a database)

ഡാറ്റാബേസില്‍ നിന്ന്‌ ഒരു പട്ടിക ഒഴിവാക്കണമെങ്കില്‍ DROP TABLE എന്ന കമാന്‍ഡ്‌
ഉപയോഗിച്ചാല്‍ മതി. ഈ DDL കമാന്‍ഡ്‌ പട്ടികയില്‍ റെക്കോര്‍ഡുകള്‍ ഉണ്ടെങ്കിലും
അതിനെ ഡാറ്റാബേസില്‍ നിന്ന്‌ സ്ഥിരമായി നീക്കം ചെയ്യുന്നു. ഈ കമാന്‍ഡ്‌ ഉപയോ
ഗിക്കുമ്പോള്‍ വളരെ ശ്രദ്ധിക്കണം. കാരണം, ഒരിക്കല്‍ പട്ടിക നീക്കം ചെയ്താല്‍ അത്‌
തിരിച്ചെടുക്കാന്‍ സാധിക്കുകയില്ല. ഈ കമാന്‍ഡിന്റെ വാകൃഘടന താഴെ കൊടുക്കുന്നു.

DROP TABLE <table name>;

ഉദാഹരണത്തിന്‌ school ഡാറ്റാബേസില്‍ നിന്ന്‌ student2015 എന്ന പട്ടിക ഒഴിവാക്കണ
മെങ്കില്‍ ക്വറി 9.40 ഉപയോഗിക്കാം.

ക്വി 9.40 DROP TABLE student2015;

349

നിങ്ങളുടെ പുരോഗതി അറിയറുക

1. ഒരു പട്ടികയുടെ ഘടനയില്‍ മാറ്റം വരുത്താനുപയോഥിക്കുന്ന കമാന്‍ഡാണ്‌

2. ഒരു നിരയുടെ ഘടനയില്‍ മാറ്റം വരുത്തിയാല്‍ അതിലെ വിലകളെ അത്‌
ബാധിക്കുന്നു. ഈ പ്രസ്താവന ശരിയോ തെറ്റോ?

3. ഒരു പട്ടികയില്‍ നിന്ന്‌ എങ്ങനെയാണ്‌ ഒരു നിര ഒഴിവാക്കുന്നത്‌?
4. ഒരു പട്ടികയില്‍ നിന്ന്‌ വരി ഒഴിവാക്കാനുള്ള കമാന്‍ഡ്‌ ഏത്‌?

5. DELETE FROM എന്ന കമാന്‍ഡിന്റെ കൂടെ WHERE ഉപവാക്യം
ഉപർയോരിക്കാതിരുന്നാല്‍ എന്ത്‌ സംഭവിക്കും?

9.11 നെസ്റ്റഡ്‌ ക്വറികള്‍ (Nested queries)

“നെസ്റ്റിങ്‌ എന്ന ആശയം നമുക്ക്‌ സുപരിചിതമാണല്ലോ. “നെസ്റ്റഡ്‌ if”, “നെസ്റ്റഡ്‌ ലൂപ്പ്‌
എന്നിവയില്‍ ഇത്‌ നാം ചര്‍ച്ച ചെയ്തിരുന്നു. ഇനി നമുക്ക്‌ നെസ്റ്റഡ്‌ ക്വറികളെക്കുറിച്ച്‌
ചര്‍ച്ച ചെയ്യാം. നെസ്റ്റഡ്‌ എന്നാല്‍ “ഒന്നിനുള്ളില്‍ മറ്റൊന്ന്‌” എന്നാണ്‌ അര്‍ഥമാക്കുന്നത്‌.
ഇവിടെ ഒരു ക്വറിയുടെ ഫലം ഓപ്പറേഷന്‍ സമയത്തു തന്നെ മറ്റൊരു ക്വറിയുടെ നിബ
ന്ധനയിലേക്ക്‌ കൈമാറ്റം ചെയ്യപ്പെടുന്നു. ഒരു MySQL ന്റെ ഉള്ളിലുള്ള ക്വറിയെ ഉപക്വറി
(inner query, subquery) എന്നും, ആ ഉപക്വറി അടങ്ങിയിരിക്കുന്ന ക്വറിയെ ബാഹൃക്വറി
(outer query) എന്നും പറയുന്നു. SQL ആദ്യം WHERE ഉപവാക്യം അടങ്ങിയ ഉപക്വറി
ആദ്യം പ്രവര്‍ത്തിപ്പിക്കുന്നു. അതിന്റെ ഫലം ബാഹൃക്വറിയുടെ നിബന്ധനയിലേക്ക്‌
കൈമാറുന്നു. റിലേഷണല്‍ ഓപ്പറേറ്റര്‍ ഉപയോഗിക്കുമ്പോള്‍ ഉപക്വറി ഒറ്റവരി ഓട്ട്പുട്ട്‌
തിരികെ നല്‍കുന്നുവെന്ന്‌ ഉറപ്പുവരുത്തേണ്ടതാണ്‌.

ഏറ്റവും കൂടുതല്‍ കുടുംബവരുമാനമുള്ള വിദ്യാര്‍ഥിയുടെ പേരും കോഴ്സും നമുക്ക്‌
പ്രദര്‍ശിപ്പിക്കണമെന്നിരിക്കട്ടെ. ക്വറി 9.41 ഉപയോഗിച്ച്‌ നമുക്ക്‌ ഈ കാര്യം ചെയ്യാവുന്ന
താണ്‌. ചിത്രം 9.30 ല്‍ ഇതിന്റെ ഓട്ട്പുട്ട്‌ കാണിച്ചിരിക്കുന്നു.

ക്വി. SELECT name,course FROM student2015

WHERE 2 income =

(SELECT MAX(f£ income) | name 1 course 7
PROM student2015);  ] wiveditha | mumanities |

ഈ ഉദാഹരണത്തില്‍ ഉപക്വറി ആദ്യം വിലയിരുത്തി. രമി

അതില്‍ നിന്ന്‌ 7 income എന്ന നിരയിലെ ഏറ്റവും ചിത്രം ൭0 രെന്തഡ്‌കഥിയുടെ ഫലം

വലിയ വില തിരികെ ലഭിക്കുന്നു (ഇവിടെ ഇത്‌ Rs
52000). ഈ മൂല്യം പിന്നീട്‌ പട്ടികയിലെ 7 income എന്ന റെക്കോര്‍ഡിന്റെ മൂലൃവുമായി
താരതമ്യം ചെയ്ത്‌ തുല്യമാണെങ്കില്‍ ബാഹൃക്വറി അത്‌ വീണ്ടെടുക്കുന്നു.

9.12 വ്യൂ എന്ന ആശയം (Concept of views)

MYSQL വ്യൂ എന്ന ആശയത്തെ പിന്തുണയ്ക്കുന്നു. ഇത്‌ RDBMS ലെ ഒരു സവിശേ
ഷതയാണ്‌. വ്യൂ എന്നത്‌ ഒരു സാങ്കല്‍പ്പിക പട്ടികയാണ്‌ (Virtual table). യഥാര്‍ഥത്തില്‍
ഇവ ഡാറ്റാബേസില്‍ ഇല്ല. പക്ഷേ, ഒന്നോ അതിലധികമോ പട്ടികകളില്‍ നിന്നും ഉരുത്തിരി
ച്ചെടുക്കാവുന്നതാണ്‌. ഏത്‌ പട്ടികയില്‍ നിന്നാണോ വ്യൂ നിര്‍മ്മിക്കുന്നതിനാവശ്യമായ
വരികള്‍ ശേഖരിക്കുന്നത്‌ അതിനെ അടിസ്ഥാനപ്പട്ടിക (Base table) എന്നു പറയുന്നു.
ഈ വരികള്‍ ഭാതികമായി എവിടെയും സംഭരിക്കുന്നില്ല പകരം വ്യൂവിന്റെ നിര്‍വചനം
ഡാറ്റാബേസിനകത്ത്‌ സംഭരിക്കുന്നു. അടിസ്ഥാന പട്ടികയില്‍ സംഭരിച്ചിരിക്കുന്ന, നമുക്കാ
വശ്യമുള്ള വിവരങ്ങള്‍ കാണാന്‍ കഴിയുന്ന ഒരു ജാലകം പോലെയാണ്‌ വ്യൂ. ഒരു ക്വറിയുടെ
നിബന്ധന അടിസ്ഥാനമാക്കി മറ്റു പട്ടികകളില്‍ നിന്നും വ്യൂവിലെ ഉള്ളടക്കം എടുക്കുന്നു.
CREATE ഡി എന്ന DDL കമാന്‍ഡ്‌ ഉപയോഗിച്ച്‌ വ്യൂ നിര്‍മ്മിക്കാം. അതിന്റെ വാകൃഘടന
താഴെ കൊടുക്കുന്നു.

CREATE VIEW <view_name>

AS SELECT <column_name 1> [, <column_name2>,...]
FROM <table name>

(WHERE <condition> J];

ഇനി ജനുവരി 1,1999 ന്‌ മുന്‍പ്‌ ജനിച്ച കുട്ടികളുടെ വിവരങ്ങള്‍ ഉപയോഗിച്ച്‌ ഒരു വ്യൂ
ഉണ്ടാക്കാം. ക്വറി 9.42 student1998 എന്ന വ്യൂ നിര്‍മിക്കുന്നു.

ക്വി CREATE VIEW student1998

AS SELECT * FROM student2015
WHERE dob < '1999-1-1';

ഈ ക്വറിയുടെ ഒട്ട്പുട്ട്‌ താഴെക്കൊടുക്കുന്നു
Query O.K, 0 row affected (0.31 sec)

ചിത്രം 9.31 വ്യൂവിന്റെ ഘടന കാണിക്കുന്നു. ചിത്രം 9.32 വ്യൂവിന്റെ ഉള്ളടക്കം പ്രദര്‍ശിപ്പി
ക്കുന്നു. ഇത്‌ ലഭിക്കുന്നതിന്‌ യഥാക്രമം കമാന്‍ഡുകളായ DESC student1998; ,
SELECT * FROM student1998; എന്നീ നിര്‍ദേശങ്ങള്‍ നല്‍കേണ്ടതാണ്‌.

+---------- 4------------- +------ 3------. +--------- +------- +
| Field | Type | Null | Key | Default | Extra |
+---------- -------------- 4-------. +----- +--------- +------- +
| adm_no | int (11) | NO 1 | 0 I |
| name | varchar(20) | NO ] | NULL | 1
| gender | char(1) | YES | | M | |
| dob | date | YES | | NULL | ]
| course | varchar(15) | YES | | NULL | I
| f_income | int(11) | YES | | NULL I I
| reg_no | int(11) | YES | | NULL I i]
$o---= =. fae ann ee ——— a eo +

7 xows in set (0.01 sec)
ചിത്രം 9.3%: student1998 എനന Agaiodg ദുപഷഘന

= —
+-------- +--------- +-------- 4+------------ $---------- +----------=: +$-------- +
| adm_no | name | gendex | dob | course | £_income | reg_no |
+-------- +--------- -------- 4-------------- ----------- +---------- +-------- +
| 1001 | Alok IM | 1998-10-02 | Science | 25000 | NULL |
] 1002 | Nike [MM {| 1998-11-26 | Science | 35000 | NULL |
| 1004 | Virat IM | 1998-12-05 | Science | 23000 | NULL |
| 1005 | Meera | ഇ | 1998-08-15 | Science | 20000 | NULL |
| 1006 | Divakar | M | 1998-02-21 | Science | 20000 | NULL |
| 1025 | Kaushi | 24 | 1998-10-02 | Commerce | 27000 | NULL |
ടട പിന്നില്‍ പത്നി ടട: പ്്നിനിന്നിനില്‍ിന്ത്‌ ടട ടട +

6 xows in set (0.00 sec)

ചിത്രം 9.32: student1998 എന്ന Aygo 2885200
ചിത്രം 9.3168 കീ എന്ന നിരയില്‍ adm_no, reg_no എന്നിവയുടെ കണ്‍സ്ട്രയിന്റ്‌
ഉള്‍പ്പേടടിട്ടില്ല. ചിത്രം 9.32 കാണിക്കുന്നത്‌ 1998 ല്‍ ജനിച്ച വിദ്യാര്‍ഥികളുടെ വിശദാം
ശങ്ങളാണ്‌.

പട്ടികകളോടൊപ്പം 10101. കമാന്‍ഡ്‌ ഉപയോഗിക്കുന്നതുപോലെ വ്യൂ വിനോടൊപ്പം അവ
ഉപയോഗിക്കാം. അങ്ങനെയുള്ള ക്വറിയുടെ ഉത്തരം ചിത്രം 9.32 ല്‍ കൊടുത്തിരിക്കുന്നു.
അടിസ്ഥാന പട്ടികകള്‍ നാം ഉപയോഗിക്കുന്നത്‌ അതിനോട്‌ ചേര്‍ന്നുള്ള വ്യൂവില്‍ കൂടി
യാണ്‌. അതിനാല്‍ വ്യൂവില്‍ UPDATE, DELETE എന്നീ പ്രവര്‍ത്തനങ്ങള്‍ ചെയ്യുമ്പോള്‍
അടിസ്ഥാന പട്ടികയിലും ആ മാറ്റങ്ങള്‍ ഉണ്ടാകുന്നു. ക്വറി 9.43 ഈ ആശയം വിവരി
ക്കുന്നു.

കറി 9.4 UPDATE student1998

SET reg_no = 2201020

WHERE adm _no=1001 ;

--------- 4-------------- ---------- 4-------------- -------------- +

| adm_no | name | gender | dob | course 1

4---------- 4-------------- ---------- 4------------- ------------- +

| 1001 | Alok | M | 1998-10-02 | Science ! 25000 | 2201020 |
| 1002 | Nike | M | 1998-11-26 | Science I 35000 | NULL |
! 1003 | Bharath | M | 1999-01-01 | Commerce i] 45000 | NULL |
| 1004 | Virat | M | 1998-12-05 | Science i] 23000 | NULL |
i} 1005 | Meexa | & | 1998-08-15 | Science i} 20000 | NULL |
| 1006 | Divakar | M | 1998-02-21 | Science I 20000 | NULL |
| 1025 | Raushi | M | 1998-10-02 | Commerce | 27000 | NULL |
| 1026 | Niveditha | 5 | 1999-03-04 | Humanities | 52000 | NULL |
i} 1057 | Chaithanya | F | 1999-06-03 | Science i} 20000 | NULL |
4-------- 4o----------- +-------- 4$------------ 4------------ 4----------: 4o-------- +

9 rows in set (0.00 sec)

ചിത്രം 9.33: UjOLZOSOJES അടിദ്ഥാരചട്ടിക്യുടെ പരിഷ്ക്കരണം.

ഇനി നമുക്ക്‌ ഈ ക്വറി പ്രവര്‍ത്തിപ്പിച്ച ശേഷം student2015 എന്ന പട്ടികയിലെ ഡാറ്റ
പരിശോധിക്കാം. SELECT * FROM student2015; എന്ന ക്വറിയുടെ ഓട്ട്പുട്ട്‌
ചിത്രം 9.33ല്‍ കാണിച്ചിരിക്കുന്നു. സംഭരണസ്ഥലം പ്രത്യേകമായി ഉപയോഗിക്കാതെ ഒരേ
പട്ടിക പല പട്ടികയായി ഉപയോഗിക്കാന്‍ സാധിക്കുന്നു എന്ന മേന്‍മ വ്യൂവില്‍ അടങ്ങിയി
രിക്കുന്നു. പങ്കുവയ്ക്കലിനോടൊപ്പം, സ്വകാര്യതയും വ്യൂ നടപ്പാക്കുന്നു എന്നുള്ളതാണ്‌
മറ്റൊരു നേട്ടം. പട്ടികയില്‍ നിന്ന്‌ റെക്കോര്‍ഡുകള്‍ വീണ്ടെടുക്കുക, പരിഷ്‌ക്കരിക്കുക
ഒഴിവാക്കുക എന്നിവയ്ക്കായി WHERE ഉപവാക്യത്തോടൊപ്പമുള്ള നിബന്ധനകളുടെ
സങ്കീര്‍ണത കുറയ്ക്കുന്നതിന്‌ ഇത്‌ സഹായിക്കുന്നു.

hose
352 | ള്ള

ഒരു വ്യൂ ആവശ്യമില്ലെങ്കില്‍ അത്‌ ഡാറ്റാബേസില്‍ നിന്ന്‌ ഒഴിവാക്കുന്നതിന്‌ DROP VIEW
കമാന്‍ഡ്‌ ഉപയോഗിക്കാം. അത്‌ അടിസ്ഥാന പട്ടികയെ ബാധിക്കുകയില്ല. ഇതിന്റെ വാക്യ
ഘടന താഴെ കൊടുക്കുന്നു.

DROP VIEW <view name>;
ഉദാഹരണത്തിന്‌ student1998 എന്ന വ്യൂ പട്ടിക ഒഴിവാക്കണമെങ്കില്‍ ക്വറി 9.44 ഉപയോ

ഗിക്കാം.

DROP VIEW ടധഠ൭൩൨ 998;

നിങ്ങളുടെ പുരോഗതി അറിയറുക
1. OMG ക്വറി എന്നാല്‍ എന്ത്‌?
2. SQL ലിലെ വ്യു എന്നാല്‍ എന്ത്‌?

3. വ്യു നിര്‍മിക്കുന്നതിന്‌ SELECT കമാന്‍ഡ്‌ ആവശ്യമാണ്‌. ഈ പ്രസ്താവന ശരിയോ
തെറ്റോ?

4. വ്യൂ ഒഴിവാക്കുമ്പോള്‍ ഡാറ്റാബേസില്‍ നിന്ന്‌ ഒരു പട്ടിക ഒഴിവാക്കുന്നു. ഉത്‌ ശരിയോ
തെറ്റോ എന്ന്‌ പ്രസ്താവിക്കുക.

5. പട്ടിക പുതുക്കുവാന്‍ നമുക്ക്‌ അതിന്റെ വ്യൂ ഉപയോഗിക്കാമോ?

MySQL ല്‍ നടപ്പിലാക്കിയിട്ടുള്ള എല്ലാ DDL, DML കമാന്‍ഡുകളും ഉദാഹ

രണങ്ങളും ഓട്ട്പുട്ട്‌ സഹിതം നാം ചര്‍ച്ച ചെയ്തു. ഇനി പട്ടിക 9.8ല്‍

നമുക്ക്‌ അവ സംഗ്രഹിക്കാം. ആദ്യത്തെ രണ്ടു വരികള്‍ എഴുതി ചേര്‍ത്തി
നമുക്ക്‌ ചെയ്യാം ട്ടുണ്ട്‌. ബാക്കിയുള്ള വരികള്‍ നിങ്ങള്‍ക്കായി മാറ്റിവച്ചിരിക്കുന്നു.

CREATE TABLE ഒരു പട്ടിക നിര്‍മിക്കാന്‍

ALTER TABLE | ADD/MODIFY ഒരു പട്ടികയുടെ ഘടന മാറ്റുന്നതിന്‌
DROP TABLE

CREATE VIEW
DROP VIEW

INSERT
SELECT
UPDATE

DELETE

ചട്ടിക 9.8: SOL ക്ഥാരീദ്ഥിന്റെ സംഗഗഹം

€ ome സംഗ്രഹിക്കാം

റിലേഷണല്‍ ഡാറ്റാബേസില്‍ പ്രവര്‍ത്തനങ്ങള്‍ ചെയ്യാനുപയോഗിക്കുന്ന ഭാഷയാണ്‌
സ്ദ്രക്ചേര്‍ഡ്‌ ക്വറി ലാംഗ്വേജ്‌. 7൭൮1. പ്രശസ്തമായ RDBMS പാക്കേജ്‌ ആണ്‌. അത്‌
ഉപയോഗിച്ച്‌ നമുക്ക്‌ നിര്‍ദേശങ്ങള്‍ നടപ്പിലാക്കാം. ഒരു പട്ടികയുടെ ഘടനയുമായി
ബന്ധപ്പെട്ട പ്രവര്‍ത്തനങ്ങള്‍ക്ക്‌ വിവിധ DDL കമാന്‍ഡുകള്‍ ഉണ്ട്‌. കണ്‍സ്ര്രയിന്നുകള്‍
ഡാറ്റയുടെ സാധുതയും ഡാറ്റാബേസിന്റെ കെട്ടുറപ്പും ഉറപ്പു വരുത്തുന്നു. ഒരു പട്ടിക
യിലുള്ള ഡാറ്റയുമായി ബന്ധപ്പെട്ട വിവിധ പ്രവര്‍ത്തനങ്ങള്‍ക്കുള്ള DML കമാന്‍ഡുകള്‍
നാം ചര്‍ച്ച ചെയ്തു. ഡാറ്റ കൂട്ടിച്ചേര്‍ക്കല്‍, വീണ്ടെടുക്കല്‍, പുതുക്കല്‍, ഒഴിവാക്കല്‍
തുടങ്ങിയ പ്രവര്‍ത്തനങ്ങള്‍ ഇതില്‍ ഉള്‍പ്പെടും. നെസ്റ്റഡ്‌ ക്വറി, വ്യൂ എന്നീ ആശയങ്ങളും
എന്താണെന്ന്‌ നാം പരിചയപ്പെട്ടു. ഈ പാഠഭാഗം നന്നായി മനസ്സിലാക്കേണ്ടത്‌ കമ്പ്യൂട്ടര്‍
മേഖലയിലെ നിങ്ങളുടെ ഉപരിപഠനത്തിന്‌ ആവശ്യമാണ്‌.

പില്‍ നമുക്ക്‌ പരിശീലിക്കാം

1. പരീക്ഷയില്‍ വിദ്യാര്‍ഥികള്‍ നേടിയ മാര്‍ക്കും വിശദാംശങ്ങളും സംഭരിക്കുന്നതി
നുള്ള പട്ടികയുടെ ഘടന താഴെ കൊടുത്തിരിക്കുന്നു.

Register number Numeric വിദ്യാര്‍ഥിയെ തിരിച്ചറിയാന്‍ ആവശ്യമുള്ളതും
ഏകവുമായ (WI)

Name String പരമാവധി 30 അക്ഷരങ്ങള്‍

ജിവി cad ജട്ടി ഫൂ
Marks of six subjects ആറു വ്യത്യസ്ത Mea ആവശ്യമാണ്‌

പട്ടിക നിര്‍മ്മിക്കുന്നതിനും താഴെ പറയുന്ന ആവശ്യങ്ങള്‍ക്കുമുള്ള SQL പ്രസ്താവനകള്‍
എഴുതുക
a) ഡാറ്റ ചേര്‍ക്കുക (10 റെക്കോര്‍ഡുകള്‍).

b) എല്ലാ വിദ്യാര്‍ഥികളുടെയും വിശദാംശങ്ങള്‍ പ്രദര്‍ശിപ്പിക്കുക.

c) സയന്‍സ്‌ ഗ്രൂപ്പിലെ എല്ലാ കുട്ടികളുടെയും വിശദാംശങ്ങള്‍ പട്ടികപ്പെടുത്തുക.

9) ഓരോ കോഴ്‌സിലെയും കുട്ടികളുടെ എണ്ണം കണക്കാക്കുക.

6) ആകെ മാര്‍ക്ക്‌ കണ്ടുപിടിച്ച്‌ Total എന്ന നിര പുതുക്കുക.

f) ഓരോ വിദ്യാര്‍ഥിയുടെയും ആറു മാര്‍ക്കുകളുടെ തുക ചേര്‍ത്ത്‌ Total എന്ന
നിര പുതുക്കുക.

g) ഓരോ ഗ്രൂപ്പിലെയും ഏറ്റവും ഉയര്‍ന്ന Total പ്രദര്‍ശിപ്പിക്കുക.

|) ee
ന്തി 354 ള്ള

1) കോമേഴ്‌സ്‌ ഗ്രൂപ്പിലെ ആറാമത്തെ വിഷയത്തിലെ ഏറ്റവും കുറഞ്ഞത്‌, ഏറ്റവും
കൂടിയത്‌, ശരാശരി സ്‌കോര്‍ എന്നിവ കണ്ടെത്തുക.
i) അക്ഷരമാലാക്രമത്തില്‍ ഓരോ കോഴ്‌സിലെയും പേരുകള്‍ പ്രദര്‍ശിപ്പിക്കുക.
aD) ഏറ്റവും കൂടുതല്‍ Total സ്‌കോറുള്ള കുട്ടിയുടെ പേര്‌ പ്രദര്‍ശിപ്പിക്കുക.
2. ഒരു കമ്പ്യൂട്ടര്‍ ഷോപ്പിലെ ഇനങ്ങളുടെ വിശദാംശങ്ങള്‍ സംഭരിക്കുന്നതിനുള്ള പട്ടിക
യുടെ ഘടന താഴെ കൊടുക്കുന്നു.

Manufacturer String വിതരണക്കാരന്റെ പേര്‌ (ആവര്‍ത്തനം
അനുവദിക്കുന്നു)

പട്ടിക നിര്‍മ്മിക്കുന്നതിനും താഴെ പറയുന്ന ആവശ്യങ്ങള്‍ക്കുമുള്ള SQL പ്രസ്താവന
കള്‍ എഴുതുക.
a) ഡാറ്റ ചേര്‍ക്കുക (10 റെക്കോര്‍ഡുകള്‍).
b) എല്ലാ ഇനങ്ങളുടെയും വിശദാംശങ്ങള്‍ പ്രദര്‍ശിപ്പിക്കുക.
9) ഓരോ ഇനത്തിന്റെ പേരും അവയുടെ വിലയും പ്രദര്‍ശിപ്പിക്കുക.
d) പട്ടികയില്‍ ലഭ്യമായ ഒരു കമ്പനി നിര്‍മ്മിച്ച (കമ്പനിയുടെ പേര്‌ നല്‍കുക)
ഇനങ്ങളുടെ പേര്‌ പട്ടികപ്പെടുത്തുക.
e) ഓരോ നിര്‍മ്മാതാവിന്റെയും ഇനങ്ങളുടെ എണ്ണം എഴുതുക.
f) ഏറ്റവും കൂടുതല്‍ വിലയുള്ള ഇനത്തിന്റെ വിശദാംശങ്ങള്‍ പ്രദര്‍ശിപ്പിക്കുക.
g) എല്ലാ ഇനങ്ങളുടെയും ശരാശരി വിലയെക്കാള്‍ കൂടുതല്‍ വിലയുള്ള ഇനങ്ങ
ളുടെ പേര്‌ പട്ടികപ്പെടുത്തുക.
h) 1-1-2015 നു ശേഷം വാങ്ങിയ ഇനങ്ങളുടെ പേര്‌ പ്രദര്‍ശിപ്പിക്കുക.
i) പട്ടികയിലെ രണ്ടോ മൂന്നോ കമ്പനികള്‍ (കമ്പനിയുടെ പേര്‌ നല്‍കുക) നിര്‍മ്മിച്ച
ഇനങ്ങളുടെ വിശദാംശങ്ങള്‍ ലഭ്യമാക്കുക.

aD) ഒരു കമ്പനിയിലെ 20 എണ്ണത്തില്‍ കൂടുതല്‍ സ്റ്റോക്കുള്ള ഇനങ്ങളുടെ വിശദാം
ശങ്ങള്‍ പ്രദര്‍ശിപ്പിക്കുക.

3. ഹയര്‍ സെക്കന്ററി സ്കൂളിലെ അധ്യാപകരുടെ വിശദാംശങ്ങള്‍ സംഭരിക്കുന്നതിനുള്ള
പട്ടികയുടെ ഘടന കൊടുക്കുന്നു.

| ത

ടീച്ചറെ തിരിച്ചറിയാന്‍ തനതായതും ഏകവുമായ ഡാറ്റ

സണ്‍ അമ്ില്‍ പെണ്‍

Date of joining Date ആവര്‍ത്തനം അനുവദിക്കുന്നു
Department String സയന്‍സ്‌, കോഴ്‌സ്‌, ഹ്യൂലാനിറ്റീസ്‌ അല്ലെങ്കില്‍ ദാഷ
Ses SESE വും

പട്ടിക നിര്‍മ്മിക്കുന്നതിനും താഴെപ്പറയുന്ന ആവശ്യങ്ങള്‍ക്കുമുള്ള SQL പ്രസ്താവനകള്‍
എഴുതുക.

a)
b)
c)

9)

e)
f)
g)

ഡാറ്റ ചേര്‍ക്കുക (10 റെക്കോര്‍ഡുകള്‍).

എല്ലാ അധ്യാപികമാരുടെയും വിശദാംശങ്ങള്‍ പട്ടികപ്പെടുത്തുക.

സയന്‍സ്‌ ഡിപ്പാര്‍ട്ട്മെന്റിലെ പുരുഷ അധ്യാപകരുടെ വിശദാംശങ്ങള്‍ പട്ടിക
പ്പെടുത്തുക.

അടിസ്ഥാന ശമ്പളം Rs 50000 രൂപയോ അതില്‍ കൂടുതലോ ആയിട്ടുള്ള
ഭാഷാധ്യാപകരുടെ പേരും അടിസ്ഥാന ശമ്പളവും പ്രദര്‍ശിപ്പിക്കുക.
അധ്യാപകരുടെ പേരും അടിസ്ഥാന ശമ്പളത്തിന്റെ 71% വും പ്രദര്‍ശിപ്പിക്കുക.
ഓരോ വിഭാഗത്തിലെയും അധ്യാപകരുടെ എണ്ണം കണ്ടുപിടിക്കുക.

ഒരു സ്‌കൂളിലെ അധ്യാപകരുടെ ശരാശരി അടിസ്ഥാന ശമ്പളത്തെക്കാള്‍ കുറവ്‌
ശമ്പളമുള്ള അധ്യാപകരുടെ വിശദാംശങ്ങള്‍ പ്രദര്‍ശിപ്പിക്കുക.

1-1-2010 ന്‌ മുന്‍പ്‌ ചേര്‍ന്ന പുരുഷ അധ്യാപകരുടെ പട്ടിക തയാറാക്കുക.
എല്ലാ അധ്യാപകരുടേയും അടിസ്ഥാന ശമ്പളം 1000 രൂപ വര്‍ധിപ്പിക്കുക.

ഭാഷാ വിഭാഗത്തിലെ അധ്യാപകരുടെ വിശദാംശങ്ങള്‍ ഒഴിവാക്കുക.

4. ഒരു ബാങ്കിലെ ഉപഭോക്താക്കളുടെ വിശദാംശങ്ങള്‍ സംഭരിക്കുന്നതിനുള്ള പട്ടിക
യുടെ ഘടന കൊടുക്കുന്നു.

si പ

Date of joining ആവര്‍ത്തനം അനുവദിക്കുന്നു

Type of account SB അല്ലെങ്കില്‍ Current അക്കാണ്്‌

Balance amount ദശാംശ സംഖ്യകള്‍ അനുവദിക്കുന്നു

പട്ടിക നിര്‍മ്മിക്കുന്നതിനും താഴെ പറയുന്ന ആവശ്യങ്ങള്‍ക്കുമുള്ള SQL പ്രസ്താവനകള്‍
എഴുതുക.

നമുക്ക്‌ വിലയിരുത്താം

1.

a.
b.

c.

ഡാറ്റ ചേര്‍ക്കുക (10 റെക്കോര്‍ഡുകള്‍).
SB അക്കൌണ്ടുള്ള ഉപഭോക്താവിന്റെ വിശദാംശങ്ങള്‍ പ്രദര്‍ശിപ്പിക്കുക.

ബാലന്‍സ്‌ തുക 5000 രൂപയില്‍ കൂടുതല്‍ ഉള്ള വനിത ഉപഭോക്താക്കളുടെ
പേര്‌ പ്രദര്‍ശിപ്പിക്കുക.

ബാലന്‍സ്‌ തുക Rs 10000 രൂപയെക്കാള്‍ കൂടുതല്‍ ഉള്ള സ്ത്രീകളായ ഉപഭോ
ക്താക്കളുടെ വിശദാംശങ്ങള്‍ നല്‍കുക.

സ്ത്രീ, പുരുഷ ഉപഭോക്താക്കളുടെ എണ്ണം കണ്ടുപിടിക്കുക.

ഏറ്റവും കൂടുതല്‍ ബാലന്‍സ്‌ തുക ഉള്ള ഉപഭോക്താക്കളുടെ പേര്‌ പ്രദര്‍ശി
പ്പിക്കുക.

Kumar എന്ന്‌ അവസാനിക്കുന്ന ഉപഭോക്താക്കളുടെ പേര്‌ പ്രദര്‍ശിപ്പിക്കുക.
2000 രൂപ നീക്കിയിരിപ്പുള്ള ഉപഭോക്താക്കളുടെ ബാലന്‍സ്‌ തുക പുതുക്കുക.

20000 രൂപയോ അതിലധികമോ നീക്കിയിരിപ്പുള്ള ഉപഭോക്താക്കളുടെ അക്ക
ണ്ടില്‍ നിന്നും 2% നികുതി കുറച്ചതിനു ശേഷമുള്ള വിശദാംശങ്ങള്‍ പ്രദര്‍ശി

പ്പിക്കുക.
കറന്റ്‌ അക്കൌണ്ട്‌ ഉള്ള ഉപഭോക്താക്കളുടെ വിശദാംശങ്ങള്‍ ഒഴിവാക്കുക.

CUSTOMER എന്ന പട്ടികയിലെ വരികള്‍ ഒഴിവാക്കാന്‍ ഉപയോഗിക്കുന്ന കമാന്‍ഡ്‌ ഏത്‌?

a. REMOVE FROM CUSTOMER
b. DROP TABLE CUSTOMER
c. DELETE FROM CUSTOMER
d. UPDATE CUSTOMER

ഒരു നിരയിലെ ചില വിലകള്‍ അറിയില്ലെങ്കില്‍ ഇതിലേക്ക്‌ ഒരു വരി എങ്ങനെ
ചേര്‍ക്കാം.

CHAR, VARCHAR എന്നീ SQL ഡാറ്റ ഇനങ്ങള്‍ തമ്മിലുള്ള വ്യത്യാസം കണ്ടെത്തുക.
PRIMARY KEY, UNIQUE എന്നീ കണ്‍സ്‌ട്രെയിന്റുകള്‍ തമ്മിലുള്ള വൃത്യാസം
എന്ത്‌?

SQL ലെ NULL മൂല്യം എന്നത്കൊണ്ട്‌ അര്‍ഥമാക്കുന്നത്‌ എന്ത്‌?

SELECT പ്രസ്താവനയുടെ ഉപവാക്യങ്ങളുടെ കൃത്യമായ ക്രമീകരണം ഏത്‌ ?

a. SELECT, FROM, WHERE, ORDER BY
d. SELECT, FROM, ORDER BY, WHERE

c. SELECT, WHERE, FROM, ORDER BY

d. SELECT, WHERE, ORDER BY, FROM

പാറ്റേണ്‍ തുല്ൃതയ്ക്ക്‌ ഉപയോഗിക്കുന്ന SQL ഓപ്പറേറ്ററാണ്‌
താഴെ കൊടുത്തിരിക്കുന്ന സ്ര്രിംഗുകള്‍ വായിക്കുക.

(i) അം Kumar’ (ii) 'Kumaran' (iii) 'Kumar Shanu' (iv) ‘Sreekumar’

SELECT പ്രസ്താവനയില്‍ LIKE ഓപ്പറേറ്ററിന്റെ കുടെ 'Yokumar' എന്ന പാറ്റേണ്‍
കൃത്യമായി തുല്യത പ്രാപിക്കുന്നത്‌ ഏതിനോടാണ്‌ ?

a. സ്ര്രിംഗ്‌ (1) ഉം സ്ട്രിംഗ്‌ (11) ഉം മാത്രം
1. സ്ട്രിംഗ്‌ (1) ഉം സ്ട്രിംഗ്‌ (iii) ഉം മാത്രം
൦. സ്ട്രിംഗ്‌ (i), (iii), (iv) മാത്രം

9. എല്ലാ സ്ട്രിംഗുകളും

SQL ലെ ഏതെങ്കിലും അഞ്ച്‌ ബില്‍ട്ട്‌ ഇന്‍ ഫങ്ഷനുകളും അവ ഓരോന്നും
തരുന്ന മൂല്യങ്ങളും പട്ടികപ്പെടുത്തുക.

WHERE, HAVING തമ്മിലുള്ള ഏതെങ്കിലും നാല്‍ വ്യത്യാസങ്ങള്‍ എഴുതുക.
SQL ലെ ഏതെങ്കിലും Moei DML കമാന്‍ഡുകള്‍ എഴുതുക

താഴെ പറയുന്ന ഓരോ SQL കമാന്‍ഡിന്റെയും ഉപവാക്യങ്ങള്‍ എഴുതുക

a. INSERT INTO b. SELECT c. UPDATE

Customer എന്ന പട്ടിക പരിഗണിച്ച്‌ താഴെ കൊടുത്തിരിക്കുന്ന SQL ക്വറികളുടെ
ഓട്ട്പൂട്ട്‌ എഴുതുക

Calicut

Trivandrum

a. SELECT * FROM customer WHERE Amount>25000;

b. SELECT Name FROM customer WHERE Branch IN ('Calicut',' Kannur');

c. SELECT COUNT (*) FROM customer WHERE Amount< 20000;

d. SELECT Name FROM customer WHERE Name LIKE "%m%";

e. SELECT *FROM customer ORDER BY Amount DESC;

14.
15.

20.

COUNT (*) ഉം COUNT (column name) ഉം തമ്മിലുള്ള വ്യത്യാസം എഴുതുക.

ITEM എന്ന പട്ടിക പരിഗണിക്കുക.

0001 Pencil Stationery 5.00 8.00
0002 Pen Stationery 10.00
0003 NoteBook Stationery 20.00
0004 Chappal Footwear 70.00

a, ഈ പട്ടികയ്ക്ക്‌ അനുയോജ്യമായ ഒരു പ്രഥമിക കീ നിര്‍ദേശിക്കുക. ഉത്തരം
സാധൂകരിക്കുക.

0. താഴെ പറയുന്ന ആവശ്യങ്ങള്‍ക്കുള്ള SQL പ്രസ്താവനകള്‍ എഴുതുക.

1) എല്ലാ സ്‌റ്റേഷനറി ഇനങ്ങളും പട്ടികപ്പെടുത്തുക.

ii) — itemcode, name, profit എന്നിവ പട്ടികപ്പെടുത്തുക.

iii) ഓരോ വിഭാഗത്തിലുമുള്ള ഇനങ്ങളുടെ എണ്ണം കണ്ടുപിടിക്കുക.

10) യുണിറ്റ്‌ വിലയുടെ അടിസ്ഥാനത്തില്‍ എല്ലാ സ്‌റ്റേഷനറി ഇനങ്ങളും അവരോ
ഹണ്രകമത്തില്‍ പട്ടികപ്പെടുത്തുക.

൮) വില്‍പ്പനവില ഏറ്റവും കൂടുതല്‍ ഉള്ള ഇനങ്ങള്‍ കണ്ടുപിടിക്കുക.

സ) എല്ലാ സ്‌റ്റേഷനറി ഇനങ്ങളുടെയും വിശദാംശങ്ങള്‍ അടങ്ങിയ വ്യൂ
ഉണ്ടാക്കുക.

ഒരു പട്ടികയുടെ ഘടനയില്‍ നമുക്ക്‌ ചെയ്യാന്‍ സാധിക്കുന്ന വിവിധ പ്രവര്‍ത്തനങ്ങള്‍
എന്തൊക്കെ? ഇതിന്‌ ഏത്‌ കമാന്‍ഡ്‌ ഉപയോഗിക്കണം? ഓരോന്നിന്റെയും മാറ്റ
ത്തിന്‌ ഉപയോഗിക്കുന്ന ഉപവാക്യങ്ങള്‍ എഴുതുക.

SQL 10 റെക്കോര്‍ഡുകളോടുകൂടി ഒരു പട്ടിക നിര്‍മ്മിച്ചിട്ടുണ്ടെന്ന്‌ വിചാരിക്കുക.
നിര്‍ദിഷ്ട വരിയിലെ നിരകളിലുള്ള മൂല്യങ്ങള്‍ക്ക്‌ മാറ്റം വരുത്താന്‍ ഏത്‌ SQL

കമാന്‍ഡാണ്‌ ഉപയോഗിക്കുന്നത്‌? അതിന്റെ ഘടന എഴുതുക.

ഒരു നിരയില്‍ ആവര്‍ത്തനം ഒഴിവാക്കുന്നതിന്‌ cane] SELECT കമാന്‍ഡിന്റെ

കൂടെ ഏത്‌ കീ വേഡാണ്‌ ഉപയോഗിക്കുന്നത്‌? കമാന്‍ഡിന്റെ പേരെഴുതുക.
SQL ല്‍ DISTINCT ഉം UNIQUE ഉം തമ്മിലുള്ള വൃത്യാസം എഴുതുക.

കൂട്ടത്തില്‍പ്പെടാത്തത്‌ ഏത്‌? കാരണം എഴുതുക.

a. CREATE

b. SELECT c. UPDATE d. INSERT

പ്രധാന പഠനനേട്ടങ്ങള്‍

D9 അധ്യാതത്ത? ന്റെ പഠനം പുരീത്ത?യാകുന്ന
തോടെ പഠിതാവ്‌ ആരിഖിക്കേണ പഠനട്ടങ്ങള്‍

€ PHP ഉപയോിക്കുന്നത്‌കൊണ്ടുള്ള മുണ
ങ്ങള്‍ പട്ടികകെടുത്തുന്നു

© PHP പ്രോ്രാമിന്റെ വാകൃഘടന (Syntax)
വിശദീകരിക്കുന്നു

© ഏയന്റ്‌ - സെര്‍വര്‍ (Client-Server; സാഹചര്യം
വിവരിക്കുന്നു

© 0110 യില്‍ ഉപയോിച്ചിരിക്കുന്ന വിവിധ ഡാറ്റ
ഉനങ്ങളും (08181 ypes) 821609036830 വിവ
രിക്കുന്നു.

© 0110. വരില്‍ ലദ്യമായ കണ്‍ട്രോള്‍ സ്ദ്രക്ച്ചറുക
ളും, ലുഷുകളും ഉപയോരിച്ച്‌ അല്‍ഗോരിത
ത്തില്‍നിന്നും കോഡുകള്‍ നിര്‍മിക്കുന്നു

© സ്പാധാരണ ജോലികള്‍ക്കുള്ള PHP ഫങ്ഷനു
കള്‍ രൂപകല്‍പന ചെയ്യുന്നു

© MMO, സമയം, സ്ട്രിംഗ്‌ തുടങ്ങിയവയുമായി
ബന്ധകെട്ട ഫങ്ഷനുകള്‍ തിരിച്ചറിയുന്നു

© ole, ഡൈനാമിക്‌ വെബ്പേജുകളെ വേര്‍
തിരിച്ചറിയുന്നു

* വ്വിവിധ സാഹചര്യങ്ങള്‍ക്ക്‌ അനുയോജ്യമായ
ഡാറ്റ സമര്‍ഷിക്കല്‍ രീതികള്‍ തിരഞ്ഞെടു
ക്കുന്നു

© ഡൈനാഠിക്‌ വെബ്പേജുകളുടെ നിര്‍മാണ
ത്തില്‍ ഡാറ്റാബേസ്‌ ബന്ധിരിക്കുന്നതിന്റെ പക്‌
തിരിച്ചറിയുന്നു

PHP ഉപയോഗിച്ചുള്ള സെര്‍വര്‍

ഭാഗത്തെ സ്ക്രിപ്റ്റിങ്‌

ന്‍ അധ്യായങ്ങളില്‍ HTML-OM കുറിച്ചും
ജാവ്സ്ക്രിപ്റ്റ്‌ ഉപയോഗിച്ചുളള ക്ലയന്റ്‌ ഭാഗത്തെ
സ്ക്രിപ്റ്റിംഗിനെകുറിച്ചും നാം പഠിച്ചു. HTML
പ്രോഗ്രാമുകളില്‍ ഉള്‍ക്കൊള്ളിക്കുന്ന (Embed)
ചെറു പ്രോഗ്രാമുകളാണ്‌ സ്ക്രിപ്റ്റ്‌ (Script) എന്ന്‌
നമുക്ക്‌ അറിയാം. ജാവാസ്ക്രിപ്റ്റ്‌ HTML പ്രോ
ഗ്രാമുകളില്‍ ഉള്‍ക്കൊള്ളിക്കുന്ന രീതിയും നാം
മനസ്സിലാക്കിക്കഴിഞ്ഞു. ഒരു സെര്‍വര്‍ ഭാഗത്തെ
സ്ക്രിപ്റ്റിംഗ്‌ ഭാഷയായ PHP- യെക്കുറിച്ചും അത്‌
ജാവസ്ക്രിപ്റ്റിനോടൊപ്പം HTML പ്രോഗ്രാമുക
ളില്‍ ഉള്‍ക്കൊള്ളിക്കുന്ന രീതിയുമാണ്‌ ഈ
അധ്യായത്തില്‍ പ്രതിപാദിക്കുന്നത്‌. PHP ഭാഷ
യുടെ അടിസ്ഥാന വാകൃഘടന C++, ജാവാ
സ്ക്രിപ്റ്റ്‌ (Java Script) എന്നീ പ്രോഗ്രാമിങ്‌ ഭാഷ
കള്‍ക്ക്‌ സമാനമാണ്‌. 11114.-ല്‍ ഉള്‍പ്പെടുത്തുന്ന
രീതിയും ജാവാസ്ക്രിപ്റ്റിലേതുപോലെയാണ്‌.
ആയതിനാല്‍ PHP പഠനം സുഗമവും വളരെ
രസകരവും ആയിരിക്കും.

10.1 PHP യെ കുറിച്ച്‌ ഒരു അവലോകനം

(Overview of PHP)
ലഭ്യമായ ഏറ്റവും പ്രചാരമുള്ള സെര്‍വര്‍ സൈഡ്‌
സ്ക്രിപ്റ്റിംഗ്‌ ഭാഷകളിലൊന്നാണ്‌ PHP. ഡൈ
നാമിക്‌ വെബ്പേജുകള്‍ നിര്‍മിക്കുന്നതിന്‌ ഇത്‌
ഉപയോഗിക്കുന്നു. ഇതിന്റെ പൂര്‍ണ്ണരൂപം PHP
ഹൈപ്പര്‍ ടെക്സ്റ്റ്‌ പപീപ്രൊസസര്‍ (PHP Hyper-
text Preprocessor) എന്നാണ്‌. സാധാരണയായി
ഒരു വെബ്‌ സെര്‍വറില്‍ PHP പ്രവര്‍ത്തിക്കുന്നു.
ഇത്‌ വൃത്ൃസ്ത ഓപ്പറേറ്റിങ്‌ സിസ്റ്റങ്ങളിലും
പ്ലാറ്റ്ഫോമിലും ലഭ്യമാണ്‌. കൂടാതെ, PHP ഒരു
ഇന്നര്‍പ്രെറ്റര്‍ മുഖേന പ്രവര്‍ത്തിക്കുന്ന ഭാഷയാ
ണ്‌. ഓരോ തവണയും 1111എന്‍ജിന്‍ പ്രര്‍ത്തി
ക്കുന്നതിനോടൊപ്പം PHP സ്ക്രിപ്റ്റും പ്രവര്‍ത്തി
ക്കുന്നു. ഒരു HTML പ്രോഗ്രാമിനുള്ളില്‍ PHP

10. PHP ഉപയോിച്ചുള്ള സെര്‍വര്‍ സൈഡ്‌ സ്ക്രിപ്റ്റിംഗ്‌

സ്ക്രിപ്റ്റ്‌ എഴുതുവാന്‍ സാധിക്കും. അതിനാലാണ്‌ PHP, 1111. -ല്‍ ഉള്‍പ്പെടുത്താവുന്ന
(embedded) ഭാഷയായി അറിയപ്പെടുന്നത്‌. ഒരു PHP പ്രോഗ്രാം പ്രവര്‍ത്തിക്കുമ്പോള്‍ നിര്‍
ദ്ദേശങ്ങളുടെ പ്രോസസ്സിംഗ്‌ നടന്നതിന്‌ ശേഷം ഹൈപ്പര്‍ ടെക്സ്റ്റ്‌ രൂപത്തിലാണ്‌ ഓട്ട്പുട്ട്‌
ലഭിക്കുന്നത്‌.

റാസ്മസ്‌ ലെര്‍ഡ്ഓഫ്‌ (ജനനം 22 നവംബര്‍ 1968) എന്ന {odd ലാന്‍ഡുകാര
നായ പ്രോഗ്രാമറാണ്‌ PHP നിര്‍മിച്ചത്‌. ഇദ്ദേഹം PHP - യുടെ പിതാവായി അറി
യക്കെടുന്നു. 1995-ല്‍ ഈ ദാഷനിര്‍മമാണം പൂര്‍ത്തിയായെങ്കിലും ഈല്യോരി
കമായി പ്രകാശനം ചെയ്തത്‌ 1997 - ലാണ്‌. ഈ ദാഷയുടെ ആദ്യ രണ്ടു പതിഷു,
കള്‍ ഇദ്ദേഹം എഴുതുകയും തുടര്‍ന്നുള്ള പതിഷുകളുടെ വികസനത്തില്‍ പങ്കെ
ടുക്കുകയും ചെയ്തു. ഈ പദ്ധതിയില്‍ അദ്ദേഹം തുടര്‍ന്നും സഹകരിച്ച്‌ കൊണിരിക്കുന്നു.

www.php.net ആണ്‌ 1117 യുടെ ഓദ്യോഗിക വെബ്സൈറ്റ്‌. റാന്മര്‌ഖെര്ല്‌ ഓഫ്‌

PHP ഒരു MIM LAD സോഫ്ട്വെയര്‍ പദ്ധതിയാണ്‌. ഇതു സ്വന്തമാക്കാന്‍ വില നല്‍കേ
ണ്ടതില്ല. ലോകമെമ്പാടുമുള്ള സ്വതന്ത്ര സോഫ്റ്റ്വെയര്‍ നിര്‍മ്മാതാക്കളും സന്നദ്ധ പ്രവര്‍
ത്തകരും ഇതിനെ പിന്തുണയ്ക്കുന്നു. സര്‍വര്‍ ഭാഗത്തെ മറ്റ്‌ ഭാഷകളേക്കാള്‍ കാര്യക്ഷമത
ഉള്ളതും, തെറ്റുകള്‍ കടന്നുകൂടാന്‍ സാധ്യത കുറവുള്ളതും, MySQL അടക്കം ഇരുപതില്‍
പരം ഡാറ്റാബേസ്‌ സോഫ്ട്വെയറുകളുമായി ബന്ധിപ്പിക്കുവാന്‍ സാധിക്കുന്നതുമാണ്‌
PHP. ഇമേജുകള്‍, PDF ഫോര്‍മാറ്റില്‍ തയാറാക്കിയ ഫയലുകള്‍, ഫ്‌ളാഷ്‌ വീഡിയോകള്‍
തുടങ്ങി വിവിധതരം ഒട്ട്പുട്ടുകള്‍ കൈകാര്യം ചെയ്യുവാന്‍ 1110 -യ്ക്ക്‌ സാധിക്കും. ഈ
സോഫ്ട്വെയര്‍ സ്വതന്ത്രവും സൌജന്യമായി ലഭിക്കുന്നതുമായതിനാല്‍ ഇതുപയോഗിച്ച്‌
വെബ്‌ അപ്ലിക്കേഷനുകള്‍ തയ്യാറാക്കുന്ന സ്ഥാപനങ്ങള്‍ക്ക്‌ ലൈസന്‍സ്‌ ഫീസിനത്തിലും
ചെലവേറിയ സെര്‍വര്‍ ഹാര്‍ഡ്വെയര്‍ വാങ്ങുന്ന ഇനത്തിലും ഉള്ള ലാഭം കൊണ്ട്‌
നിര്‍മാണച്ചിലവ്‌ ഗണ്യമായി കുറക്കുവാന്‍ സാധിക്കുന്നു. അതേസമയം ഈ സോഫ്റ്റ്വെയര്‍
ഉപയോഗിച്ച്‌ ഗുണമേന്മയുള്ള ഉല്പന്നങ്ങള്‍ ചുരുങ്ങിയ സമയത്തിനുള്ളില്‍ ചെയ്തു
തീര്‍ക്കുവാനും സാധിക്കുന്നു. തത്ഫലമായി ഇന്ന്‌ വന്‍കിട വെബ്സൈറ്റ്‌ രൂപകല്പനകൾ
കൂടുതലായി നടക്കുന്നത്‌ PHP ഉപയോഗിച്ചാണ്‌.

ഏറ്റവും പുതിയ സ്ഥിതിവിവര കണക്ക്‌ അനുസരിച്ച്‌ 20 മില്യനിലധികം വെബ്‌ സൈറ്റുകളിലും
ഏകദദേരം 1 മില്യണ്‍ വെബ്‌ സെര്‍വറുകളിലും 1111 ഉപയോഗിച്ച്‌ വരുന്നു.

10.1.1 PHP ഉപയോഗിക്കുന്നതു കൊണ്ടുള്ള പ്രയോജനങ്ങള്‍ (Benefits of PHP)

ക്ലയന്റ്‌ ഭാഗത്തെ സ്ക്രിപ്റ്റുകള്‍ ക്ലയന്റില്‍ തന്നെ പ്രവര്‍ത്തിക്കുന്നതിനാല്‍ അത്‌ വളരെ
വേഗത്തില്‍ പ്രവര്‍ത്തിക്കുന്നതായി നമുക്ക്‌ അറിയാം. വളരെ വേഗത ഉള്ളതാണെങ്കിലും
അതിന്‌ ചില പരിമിതികള്‍ ഉണ്ട്‌. ക്ലയന്റ്‌ ഭാഗത്തെ സ്ക്രിപ്റ്റിംഗ്‌ ഭാഷ ര്രൌസറിനെ
ആശ്രയിച്ചാണ്‌ പ്രവര്‍ത്തിക്കുന്നത്‌. തന്നെയുമല്ല ര്രൌസറിലെ “View Source’ പോലുള്ള
സങ്കേതങ്ങള്‍ ഉപയോഗിച്ച്‌ ഉപയോക്താവിന്‌ ജാവാ സ്ക്രിപ്റ്റ്‌ കോഡ്‌ കാണുന്നതിനും
സാധിക്കും. ഇത്‌ സുരക്ഷാ പ്രശ്നങ്ങള്‍ സൃഷ്ടിക്കുന്നു.

എന്നാല്‍ PHP സ്ക്രിപ്റ്റ്‌ പ്രവര്‍ത്തിക്കുന്നത്‌ ക്ലയന്റ്‌ ര്രൌസറിലല്ല, മറിച്ച്‌ സെര്‍വറിലാണ്‌.
ബ്രൌാസറിനെ ആശ്രയിക്കാതെ ഒരു കോഡ്‌ എഴുതുന്നതിന്‌ ഇത്‌ നമ്മെ സഹായിക്കുന്നു.
സെര്‍വറില്‍ പ്രവര്‍ത്തിച്ച ശേഷം ക്ലയന്‍റ്‌ കമ്പ്യൂട്ടറിലേക്ക്‌ പ്രോഗ്രാമിന്റെ ഓട്ട്പുട്ട്‌
മാത്രമാണ്‌ എത്തുന്നത്‌. അതു കൊണ്ട്‌ PHP പ്രോഗ്രാമിന്റെ സോഴ്‌സ്‌ കോഡ്‌ കാണാന്‍
ഉപയോക്താവിന്‌ കഴിയില്ല.

കമ്പ്യൂട്ടര്‍ സയന്‍സ്‌ - XII

PHP യുടെ പ്രയോജനങ്ങള്‍ സംക്ഷിപ്തമായി ചുവടെ ചേര്‍ക്കുന്നു :

¢ PHP വളരെ എളുപ്പത്തില്‍ HTML പ്രോഗ്രാമില്‍ ഉള്‍ക്കൊള്ളിക്കുവാന്‍ സാധി
ക്കുന്നതിനാല്‍ സ്റ്റാറ്റിക്‌ വെബ്‌ പേജുകളെ ഡയനാമിക്‌ വെബ്‌ പേജുകളാക്കിമാറ്റാന്‍
അനായാസം സാധിക്കുന്നു.

© ഇത്‌ വിവിധതരം ഡാറ്റാബേസ്‌ സോഫ്റ്റ്വെയറുകളുമായി യോജിച്ച്‌ പ്രവര്‍ത്തിക്കുന്നു.

© ഇത്‌ ഒരു MIM LAD ചട്ടക്കൂടിലധിഷ്ഠിതവും വിന്‍ഡോസ്‌, ലിനക്സ്‌, മാക്‌ തുടങ്ങിയ
വെബ്‌ സെർവറുകളിൽ പ്രവര്‍ത്തിക്കാന്‍ കഴിയുന്നതുമാണ്‌.

© ഇത്‌ ഏറെ പ്രചാരത്തിലുള്ള വെബ്‌ സെര്‍വറുകളെ പിന്തുണക്കുന്നതും Apache-
MySQL മായി അനായാസം യോജിച്ച്‌ പ്രവര്‍ത്തിക്കുന്നതുമാണ്‌.

€ ഇത്‌ ലളിതവും പഠിക്കാന്‍ എളുപ്പവുമാണ്‌.

© മറ്റ്‌ സ്ക്രിപ്റ്റ്‌ ഭാഷകളെ അപേക്ഷിച്ച്‌ വേഗത്തില്‍ പ്രവര്‍ത്തിക്കുന്നു. കാരണം പ്രോഗ്രാം
പ്രവര്‍ത്തിപ്പിക്കുന്നതിന്‌ കംപ്യൂട്ടറിലെ അടിസ്ഥാന വിഭവങ്ങള്‍ കുറച്ചുമാത്രമേ
ഉപയോഗിക്കേണ്ടതുള്ളു.

€ വൈറസ്സുപോലെയുള്ള അപകടകാരികളായ സോഫ്ട്വെയറില്‍ നിന്നുമുള്ള ആക്രമ
ണങ്ങള്‍ തടയുന്നതിന്‌ കൂടുതല്‍ സുരക്ഷ PHP ഉറപ്പ്‌ വരുത്തിയിരിക്കുന്നു.

© സ്വതന്ത്ര സോഫ്ട്വെയര്‍ നിര്‍മ്മാണ കൂട്ടായ്മയില്‍ നിന്നുള്ള വലിയ പിന്തുണ ഇതി
നുണ്ട്‌.

1211] മുഴുവനായും സാജജന്യമായ ഒരു MIMD സോഫ്ട്വെയര്‍ ഉല്‍പ്പന്നമായതു
കൊണ്ട്‌ വ്ൃക്തിഗതമോ വ്യാവസായികമോ ആയ വെബ്സൈറ്റ്‌ വികസനത്തിന്‌ നിയ
മാനുസൃതമായി ഉപയോഗിക്കാവുന്നതാണ്‌.

കേരള സംസ്ഥാന ഹയര്‍സെക്കണ്ടറി വിദ്യാദ്യാസ വകുഷിന്റെ ഏക ജാലക പ്രവേശന പോര്‍ട്ടലായ
www.hscap.kerala.gov.in- ല്‍ PHP പ്രവര്‍ത്തിക്കുന്നു.

10.1.2 PHP യുടെ അടിസ്ഥാന പ്രമാണങ്ങള്‍ (Basics of PHP)

A. പ്രോ്ഗാമിങ്ങ്‌ വികസനത്തിനുള്ള പരിസ്ഥിതി ഒരുക്കല്‍
(Setting up the development enviornment)

വെബ്‌ പേജ്‌ നിര്‍മ്മാണത്തിന്‌ ആവശ്യമായ വിഭവങ്ങള്‍ കമ്പ്യൂട്ടറില്‍ ഒരുക്കേണ്ടത്‌ വളരെ
അത്യാവശ്യമാണ്‌. ആദ്യമായി PHP ക്ക്‌ അനുയോജ്യമായ വെബ്‌ സെർവറും ഇന്റെര്‍
പ്രെട്ടറും നമ്മുടെ കമ്പ്യൂട്ടറില്‍ ഇന്‍സ്റ്റാള്‍ ചെയ്യേണ്ടതാണ്‌. ഇവ വെവ്വേറെയോ അല്ലെ
ങ്കില്‍ Apache വെബ്സെര്‍വെര്‍, 1൧൭൮... PHP അടങ്ങിയ WAMP, LAMP, അല്ലെങ്കില്‍
XAMPP പോലെയുള്ള സൌജന്യ സ്വതന്ത്ര സോഫ്ട്വെയര്‍ പാക്കേജുകളുടെ കൂട്ടത്തില്‍
നിന്നോ ഇന്‍സ്റ്റാള്‍ ചെയ്യാവുന്നതാണ്‌. WAMP വിന്‍ഡോസിലും, 1.൧ ലിനക്സിലും
XAMPP രണ്ടിലും പ്രവര്‍ത്തിക്കുന്നു.

വെബ്‌ സെര്‍വര്‍ കമ്പ്യൂട്ടറില്‍ പ്രവര്‍ത്തിക്കുന്നുണ്ടെന്ന്‌ ഉറപ്പുവരുത്തിയതിനു ശേഷം
മെനുവില്‍ നിന്ന്‌ വെബ്‌ (ബൌസര്‍ തുറക്കുക. അതിലെ അഡ്രസ്സ്‌ ബാറില്‍ http://local-
host എന്നോ http://127.0.0.1 എന്നോ ടൈപ്പ്‌ ചെയ്ത്‌ ENTER അമര്‍ത്തുക. അപ്പോള്‍
വെബ്സെര്‍വര്‍ സോഫ്ട്വെയറിന്റെ തനതായ ഒരു അഡ്മിനിസ്ട്രേഷന്‍ ജാലകം ദൃശ്യ
മാകുന്നുവെങ്കില്‍ സെര്‍വര്‍ ഇന്‍സ്റ്റലേഷന്‍ കൃത്യമായി എന്നുറപ്പിക്കാം.

10. PHP ഉപയോഗിച്ചുള്ള സെര്‍വര്‍ സൈഡ്‌ സ്ക്രിപ്റ്റിംഗ്‌

13. സ്ക്രിപ്റ്റ്‌ എഴുത്തും പ്രവര്‍ത്തനവും (Writing and running the script)
12112-നിര്‍ദേശങ്ങള്‍ അടങ്ങുന്ന ടെക്സ്റ്റ്‌ ഫയലുകളാണ്‌ PHP സ്ക്രിപ്റ്റുകള്‍. 1111 കോഡ്‌
എഴുതുവാന്‍ ഒരു സാധാരണ ടെക്സ്റ്റ്‌ എഡിറ്റര്‍ കൂടാതെ മറ്റൊരു പ്രത്യേക സോഫ്റ്റ്‌
വെയറിന്റെയും ആവശ്യമില്ല. എല്ലാ PHP കോഡുകളും തുടങ്ങുന്നത്‌ <?php’ കൊണ്ടും
അവസാനിക്കുന്നത്‌ “7” കൊണ്ടുമാണ്‌. വെബ്‌ സെര്‍വെര്‍ ഈ ടാഗ്‌ കാണുമ്പോള്‍ ഒരു
PHP കോഡാണ്‌ ഈ ടാഗുകള്‍ക്കിടയില്‍ എഴുതിയിരിക്കുന്നത്‌ എന്ന്‌ മനസ്സിലാക്കുകയും
അതിനെ പ്രവര്‍ത്തിപ്പിക്കുകയും ചെയ്യുന്നു. PHP കോഡ്‌ അടങ്ങുന്ന ടെക്സ്റ്റ്‌ ഫയലു
കളെ PHP എന്ന എക്സ്റ്റന്‍ഷന്‍ ഉപയോഗിച്ച്‌ വെബ്‌ സെര്‍വറിന്റെ റൂട്ട്‌ ഡയറക്ടറിയില്‍
(root direction) സേവ്‌ (save) ചെയ്യേണ്ടതാണ്‌.

WAMP, XAMPP and LAMP

WAMP, LAMP, XAMPP എന്നിവയാണ്‌ PHP വെബ്‌ സൈറ്റുകള്‍ക്ക്‌ ആധാരമായിട്ടുള്ളത്‌.
അതോടൊഷം ഉവ ലോക്കല്‍ സെര്‍വറായും പ്രവര്‍ത്തിക്കുന്നു. ഉക്കാരണത്താല്‍ നാം നിര്‍മ്മി
ക്കുന്ന വെബ്‌ സൈറ്റ്‌ നമുടെ കമ്പ്യുട്ടില്‍ തന്നെ പ്രവര്‍ത്തിച്ചു കാണുവാനും സാധിക്കും.
വെബ്‌ സൈറ്റ്‌ നിര്‍ജാണത്തിന്റെ സങ്കീര്‍ണത കുറയ്ക്കുവാനും ഡാറ്റാബേസ്‌ ഉപയോഗം, പ്രോഗ്രാം നിര്‍മാണം
മുതലായ സേവനങ്ങള്‍ എന്നിവ സുഗമമായി ചെയ്യുവാനും ഉത്തരം സോഫ്ട്വെയറുകള്‍ ഉപകാരപ്രദമാണ്‌.

Apache, MySQL, PHP എന്നിവയെ സുചിരിക്കുന്നതാണ്‌ WAMP. വിന്‍ഡോസ്‌ ഓഷറേറ്റിംഥ്‌

e സിസ്റ്റം ഉപയോഗിക്കുന്ന കമ്പ്യൂട്ടറുകളില്‍ ഇന്‍സ്റ്റാള്‍ ചെയ്രിരിക്കുന്ന സ്വത്ര്ത പാടക്കജുക
മ i © ഉണ്‌ WAMP-4608. കമ്പ്യൂട്ടറില്‍ വേഗം സജ്ജഠാക്കാന്‍ കഴിയുന്നു എന്നതാണ്‌ WAMP ഉപ
യോരിക്കുന്നതിന്റെ രുണം. wwwW.wampserver.com/en/ എന്ന സൈറ്റില്‍ WAMP ലഭ്യമാണ്‌.

൨൮൭,൮൧൧, MySQL, PHP, PERL എന്നിവയെ സുചിരിക്കുന്നതാണ്‌. XAMPP. X-OS [a
എന്നതുകൊണ്ട്‌ അര്‍ത്ഥമാക്കുന്നത്‌ ഉത്‌ എല്ലാത്തരം HICACOGloG സിസ്റ്റത്തിലും ഉപയോ
രിക്കാം എന്നതാണ്‌. തുടക്കക്കാര്‍ക്ക്‌ ഈ സോഫ്ട്വെയര്‍ വളരെ എളുഷം ഉപയോശിക്കാം.
http://www. apachefriends. org/en/xampp-windows. html എന്ന സൈറ്റില്‍ ഉത്‌ ലഭ്യമാണ്‌.

LINUX, Apache, MySQL, PHP എന്നിവയെ സുചിരിക്കുന്നതാണ്‌ LAMP.
») ലിനക്‌സ്‌ ഓഷറ്റ്റിംന്‌ സിസ്റ്റത്തെ ഉപയോഗകെടുത്തുന്ന ഒരു സ്വത്ര്ര വെബ്‌ വികസന ചട്ട
LAMP? ക്കൂടാണ്‌ LAMP. ഈ ചട്ടക്കൂടിന്‌ നാലു തലങ്ങള്‍ ഉള്ളതിനാല്‍ ചിലഷോള്‍ ഒരു [൧140 ശേഖരം
എന്നും ഉതിനെ സുചിഷിക്കുന്നു.

ഘട്ടം ഘട്ടമായി ഒരു ഉദാഹരണം നമുക്ക്‌ ചെയ്തു നോക്കാം.

ഘട്ടം 1: ടെക്സ്റ്റ്‌ എഡിറ്ററില്‍ ഒരുപുതിയ ജാലകം തുറക്കുക . ഇതിനായി ടെക്സ്റ്റ്‌
എഡിറ്ററുകളായ Notepad, ൨1:01, Geany തുടങ്ങിയവ ഉപയോഗിക്കാം. ചുവടെ
നല്‍കിയിരിക്കുന്ന പ്രകാരം കോഡ്‌ എഴുതുക
<?php
// this line of code displays a message
echo 'My First PHP Program';
2>

ഘട്ടം 2: ഈ ഫയല്‍ വെബ്‌ സെര്‍വറിന്റെ റൂട്ട്‌ ഡയറക്ടറിയില്‍ (WAMP സെര്‍വറാ
ണെങ്കില്‍ 'C:\\WAMP\WWW' ഡയറക്ടറിയിലും 1.ച്ഗി സെര്‍വറാണെങ്കില്‍

കമ്പ്യൂട്ടര്‍ സയന്‍സ്‌ - XII

A\VAR\WWW’ എന്ന ഡയറക്ടറി Mozilla Firefox
യിലും) അനുയോജ്യമായ പേരില്‍
php എക്സ്റ്റന്‍ഷനോടുകൂടി സേവ്‌
ചെയ്യുക (ഉദാ: example.php)

File Edit View History Bookmarks

7 http://localhost/example.php

My First PHP Program
ഘട്ടം 3: വെബ്‌ സെര്‍വറിന്റെ പ്രവര്‍ത്തനം
ആരംഭിച്ചു എന്ന്‌ ഉറപ്പുവരുത്തുക. ചിത്രം 70.7 ലേതു പോുള്ള
ഒെട്പുട്ട്‌ ചഭിക്കുവാര്‌

ഘട്ടം 4: അതിനുശേഷം വെബ്‌ ബ്രൌസര്‍
തുറന്ന്‌ ഫയല്‍ സംഭരണ സ്ഥല
ത്തിനു അനുസൃതമായ URL (ഉദാ: http://localhost/example.php) അഡ്ധസ്സ്‌
ബാറില്‍ നല്‍കുക.

PHP -യില്‍ ഓരോ വരി കോഡും അവസാനിക്കുന്നത്‌ അര്‍ദ്ധവിരാമ ചിഹ്നത്തോടുകൂടി
യാണ്‌ (;). PHP കോഡിലെ അവസാന പ്രസ്താവനക്ക്‌ അര്‍ദ്ധവിരാമം നിര്‍ബന്ധമില്ല.

WAMP - ന്റെ തനതായ റൂട്ട്‌ ഡയറക്ടറി "C:\wamp\www" ഉം, 2൧1171 ന്റേത്‌
"C:\xamp\htdocs" -ഉം LAMP ന്റേത്‌ Ubuntu-ale’ "വസ -ഉം ആണ്‌.

വെബ്‌ സെര്‍വറില്‍ നടക്കുന്ന PHP സ്ക്രിപ്റ്റിന്റെ പ്രവര്‍ത്തനം താഴെ പറയും വിധം
ചുരുക്കി എഴുതാം.

1. ബ്രൌസറിന്റെ അഡ്രസ്സ്‌ ബാരില്‍ പേജിന്റെ URL (ഉദാ: http: //localhost/first.php)
ടൈപ്പ്‌ ചെയ്തു കൊണ്ട്‌ നാം ഒരു വെബ്പേജിനായി ആവശ്യപ്പെടുന്നു.

2. ആവശ്യപ്പെട്ട URL ഒരു PHP സ്ക്രിപ്റ്റാണെന്ന്‌ മനസ്സിലാക്കുന്ന വെബ്‌ സെര്‍വര്‍
അത്‌ പ്രവര്‍ത്തിപ്പിക്കുവാന്‍ php എന്‍ജിന്‌ നിര്‍ദേശം നല്‍കുന്നു.

3. സ്ക്രിപ്റ്റ്‌ പ്രവര്‍ത്തിക്കുകയും അനന്തരം പ്രവര്‍ത്തന ഫലം അടങ്ങുന്ന ഒരു 111111.
പേജ്‌ നമ്മുടെ വെബ്‌ പ്രൌസറിലേക്ക്‌ അത്‌ അയക്കുകയും ചെയ്യുന്നു.

‘Tetusdo’ എന്ന പേരില്‍ ഒരു ഫോള്‍ഡര്‍ വെബ്‌ സെര്‍വറിന്റെ റൂട്ട്‌ ഡയറ
കൂറിയില്‍ നിര്‍മ്മിക്കുക.കുറച്ച്‌ ഫയലുകള്‍ ഈ ഫോള്‍ഡറിലേക്കു കോപ്പി
ചെയ്യുക. ചുവടെ നല്‍കിയിരിക്കുന്നത്‌ ചെയ്തതിനു ശേഷം ഓട്ട്പുട്ട്‌
നിരീക്ഷിക്കുക.

നമുക്ക്‌ ചെയ്യാം ൭.(ബൌസറിന്റെ അഡ്രസ്‌ ബാറില്‍ URL (http://localhost/letsdo) ടൈപ്പ്‌
ചെയ്യുക.

1. ‘index.html’ എന്ന പേരില്‍ ഒരു HTML ഫയല്‍ നിര്‍മ്മിച്ച്‌ ‘letusdo’ ഫോള്‍ഡറില്‍
സേവ്‌ ചെയ്യുക. അതിനുശേഷം മുന്‍പ്‌ പറഞ്ഞ URL പരീക്ഷിക്കുക.

c. ‘letusdo.php’ എന്ന പേരില്‍ BO} PHP ഫയല്‍ നിര്‍മ്മിച്ച്‌ ‘letusdo’ ഫോള്‍ഡറില്‍ സേവ്‌
ചെയ്യുക. അതിനു ശേഷം http://localhost/letusdo/letusdo.php എന്ന URL പരീക്ഷിക്കുക.

10. PHP ഉപയോിച്ചുള്ള സെര്‍വര്‍ സൈഡ്‌ സ്ക്രിപ്റ്റിംഗ്‌
C. 111111.-ഉം PHP-w 0 സംയോജിപ്പിക്കല്‍ (Combining HTML and PHP)

PHP-@}0 HTML -80 പരസ്പര ബന്ധമുള്ളതും അവ ഒരുമിച്ച്‌ പ്രവര്‍ത്തിക്കുന്നതുമാണ്‌.
PHP -ല്‍ നിന്നും 11171. ഉല്‍പാദിപ്പിക്കപ്പെടുകയും, അത്‌ PHP യിലേക്ക്‌ വിവരങ്ങള്‍
കൈമാറും ചെയ്യുന്നു. PHP കോഡ്‌ HTML പ്രോഗ്രാമില്‍ ഉള്‍ക്കൊള്ളിക്കുന്നത്‌ "<?php",
നറ എന്നീ രണ്ട്‌ പ്രത്യേക ടാഗുകള്‍ക്കുള്ളിലാണ്‌. 1111 കോഡ്‌ വഴക്കമുള്ളതും ഡോക്യു
മെന്റില്‍ എവിടെ വേണമെങ്കിലും ഉള്‍പ്പെടുത്താവുന്നതുമാണ്‌. PHP ടാഗുകള്‍ക്ക്‌ പുറ
ത്തുള്ളതെല്ലാം HTML ആയി പരിഗണിക്കപ്പെടും.

സ്ക്രിപ്റ്റ്‌

<HIML>

<HEAD>

<TITLE> My first php page</TITLE>
</HEAD>

<BODY>

<?php

echo "<H2> Welcome to php </H2>";
>

</BODY>

</HTML>

My first php page - Mozilla. O X
File Edit View History Bookmarks

el My first php page

Welcome to php

ഉപയോക്താവ്‌ ഈ HTML ഡോക്യുമെന്റ്‌ ആവശ്യപ്പെടുമ്പോള്‍ വെബ്‌ സെര്‍വര്‍ PHP
കോഡ്‌ തിരിച്ചറിയുകയും അത്‌ പ്രവത്തിപ്പിച്ച്‌ ലഭിക്കുന്ന ഓട്ട്പുട്ട്‌ HTML ഡോക്യു
മെന്റില്‍ ഉള്‍പ്പെടുത്തി ഉപയോക്താവിന്‌ തിരികെ അയക്കുകയും ചെയ്യുന്നു.

2. PHP-o163 കമന്റുകള്‍ (Comments in PHP) രേഖപ്പെടുത്തുന്നു

PHP കോഡില്‍ പ്രോഗ്രാമിന്റെ ഭാഗമായി പ്രവര്‍ത്തിക്കാത്ത ഒരു വരിയാണ്‌ കമന്റുകള്‍.
PHP-@168 ഒറ്റവരി കമന്റ്‌ (//), പല വരി കമന്റ്‌ (/* */) എന്നിങ്ങനെ രണ്ടു തരം കമന്റു
കള്‍ ഉണ്ട്‌. പ്രോഗ്രാമിനെക്കുറിച്ച്‌ മറ്റുള്ളവര്‍ക്ക്‌ നല്‍കുന്ന കുറിപ്പുകളാണ്‌ കമന്സുകള്‍.
ഇവ ഭാവിയില്‍ പ്രോഗ്രാം വായിക്കുന്നവര്‍ക്ക്‌ വളരെ പ്രയോജനം ചെയ്യും.

സ്ക്രിപ്റ്‌

<?php

/* Program to display the message
Welcome to php */

echo "Welcome to php"; //Shows a message

2>

കമ്പ്യൂട്ടര്‍ സയന്‍സ്‌ - XII

E. 11117-യിലെ ഓട്ട്പുട്ട്‌ പ്രസ്താവനകള്‍ (Output Statements in PHP)

ഓട്ട്പുട്ട്‌ ലഭിക്കുവാനായി PHP യില്‍ വിവിധ തരം വാകൃരചനകളും ഫങ്ഷനുകളും
ലഭ്യമാണ്‌. ഇവക്ക്‌ ഇന്നിജര്‍, ഫ്ളോട്ട്‌, സ്ര്രിംഗ്‌, അറെ തുടങ്ങിയ ഡാറ്റഇനങ്ങള്‍ കൈകാര്യം
ചെയ്യുവാന്‍സാധിക്കും.

(i) echo-@)o print-9o (echo and print)

11117-യില്‍ ഓഒട്ട്പുട്ട്‌ വെബ്പേജില്‍ പ്രദര്‍ശിപ്പിക്കുന്നതിന്‌ ഉപയോഗിക്കുന്ന രണ്ട്‌ പദങ്ങ
ളാണ്‌ echo, print എന്നിവ. എല്ലാത്തരം ഡാറ്റയും ഓട്ട്പുട്ട്‌ ചെയ്യുവാന്‍ ഇവക്ക്‌ സാധി
ക്കുമെങ്കിലും ഒന്നിലധികം ഒഓട്ട്പുട്ടുകള്‍ echo-65 മാത്രമേ കൈകാര്യം ചെയ്യാന്‍ കഴിയു.

echo, print എന്നീ പ്രസ്താവനകള്‍ ആവരണചിഹ്നത്തോട്‌ കൂടിയോ അല്ലാതെയോ
ഉപയോഗിക്കാം.

HP സ്‌ക്രിഫ്റില്‍

<?php

echo "Welcome to php<BR>", "Welcome to
web programming<BR>"; Mozilla Firefox

File Edit View History Bookmarks

echo ("Welcome to php<BR>") ; :
{3 http://localhost/P-10-3.php

print "Welcome to php<BR>";

Welcome to php
ലല " ms Welcome to web programming
print ("Welcome to php<BR>") ; Welcome to php
> Welcome to php
ന Welcome to php

echo, print എന്നിവ തമ്മിലുള്ള വ്യത്യാസം താഴെ കാണുന്ന പട്ടികയില്‍ വിവരിച്ചിരി

ക്കുന്നു.
ആവരണ ചിഹ്നം ഉല്ലാതെ ഉപയോഗശിക്കുടമ്പോള്‍ ഒരു പരാമീറ്റര്‍ മാത്രമ നല്‍കാന്‍ കഴിയൂ.
ഒന്നില്‍ കൂടുതല്‍ പരാമീറ്ററുകള്‍ നല്‍കാം.

രിലകള്‍ al ey. ശരിയായ രീതിയില്‍ പ്രവര്‍ത്തിച്ചാല്‍ TRUE ഉം
വിലെ ഒന്നും തരികെ തരുന്നില്ല സ്ക്രിങ്‌ പ്രിന്റ്‌ ചെയ്യാന്‍ സാധിക്കുന്നില്ലെങ്കില്‍

FALSE എന്നും തിരികെ തരും.

print നേക്കാള്‍ അല്പം വേഗത കൂടുതല്‍ echo യേക്കാള്‍ വേഗത അല്പം കുറവാണ്‌.

പട്ടിക ൧7 Echo - മും print— ഉം തമിലുള്ള താത്ും

(ii) var_dumpQ

പ്രിന്റ്‌ ചെയ്യുമ്പോള്‍ വേരിയബിളിന്റെ വിലക്കൊപ്പം ഡാറ്റഇനവും (പിന്റ്‌ ചെയ്യുവാന്‍
var_dump( ) ഫങ്ഷന്‍ ഉപയോഗിക്കുന്നു. ഇന്റിജര്‍, ഫ്ളോട്ട്‌, സ്ര്രിംഗ്‌, അറെകള്‍, ഒബ്ജ
ടുകള്‍ തുടങ്ങിയവ പ്രദര്‍ശിപ്പിക്കുവാന്‍ ഇത്‌ ഉപയോഗിക്കാം. ഇതിന്റെ വാകൃഘടന
താഴെ നല്‍കുന്നു.

10. PHP ഉപയോിച്ചുള്ള സെര്‍വര്‍ സൈഡ്‌ സ്ക്രിപ്റ്റിംഗ്‌

var _dump(variablel, variable 2, ....variable n);

ന്നതിനുള്ള പ്രോഗ്രാം

<?php
Sal=678;
$a2="678";
Sa3="Apple";
$a4=698.99;
var_dump ($al

7 Mozilla Firefox

var_dump ($a2
var_dump ($a3
var_dump ($a4

File Edit View History Bookmarks Tools Help

{} http://localhost/P-10-4.php | op
?> int(678) string(3) "678" string(5) "Apple" float(698.99)

7

)
)
)
)

10.2 1111-യുടെ അടിസ്ഥാന ഘടകങ്ങള്‍ (Fundamentals of PHP)

1117-യിലെ വേരിയബിളുകള്‍, ഡാറ്റ ഇനങ്ങള്‍, ഓപ്പറേറ്ററുകള്‍ എന്നിവ ഈ ഭാഗത്ത്‌
നാം ചര്‍ച്ച ചെയ്യും.

10.2. വേരിയബിളുകള്‍ (Variables)

11117-യില്‍ ഒരു വേരിയബിളിന്റെ പേര്‌ '$' ചിഹ്നത്തോടു കൂടി ആരംഭിക്കുകയും തുടര്‍ന്ന്‌
വേരിയബിളിനു നല്‍കാനുള്ള പേര്‌ നല്‍കുകയും ചെയ്യുന്നു. മറ്റ്‌ പ്രോഗ്രാമിങ്‌ ഭാഷയി
ലേതുപോലെ വേരിയബിളുകള്‍ ഉപയോഗിക്കുന്നതിനു മുന്‍പ്‌ 1111-യില്‍ വേരിയബി
ളിനെ പ്രസ്താവിക്കേണ്ടതില്ല. ഒരു വേരിയബിളിലേക്ക്‌ ആദ്യ വില നല്‍കുമ്പോള്‍ ആ
വേരിയബിള്‍ നിര്‍മ്മിക്കുന്നു. നല്‍കപ്പെടുന്ന വിലയ്ക്ക്‌ അനുസരിച്ച്‌ PHP സ്വയമേ വേരി
യബിളിന്റെ ഡാറ്റ ഇനം നിശ്ചയിക്കുന്നു.

$Var_name = value;
<2php
<?php
Stxt = "Hello world";

Sx = 25;

Sy 23.5;

2?>

മുകളില്‍ കൊടുത്ത പ്രസ്താവനകളുടെ പ്രവര്‍ത്തനത്തിന്‌ ശേഷം $txt എന്ന വേരിയ
ബിളില്‍ ‘Hello world’ എന്ന സ്ട്രിംഗ്‌ വിലയും, $x എന്ന വേരിയബിളില്‍ 25 എന്ന
പൂര്‍ണ സാഖ്യാവിലയും ഇന്റിജര്‍ വിലയും $y എന്ന വേരിയബിളില്‍ 23.5 എന്ന ദശാംശ
വിലയും ലഭിക്കുന്നു. വിലകള്‍ക്ക്‌ അനുസൃതമായി ഡാറ്റ ഇനങ്ങളും നിര്‍ണ്ണയിക്കപ്പെ
ടുന്നു. വേരിയബിളിന്‌ സ്ര്രിംഗ്‌ വിലകള്‍ നല്‍കുമ്പോള്‍ ഉദ്ധരണി ചിഹ്നം വിലയുടെ
ഇരുവശത്തും നല്‍കണം.

കമ്പ്യൂട്ടര്‍ സയന്‍സ്‌ - XII

PHP-0103 വേരിയബിളുകളുകള്‍ക്ക്‌ പേര നല്‍കുന്ന രീതി

ഒരു വേരിയബിളിന്‌ ചെറിയ പേരോ (m,n തുടങ്ങിയവ) വിവരണാത്മക പേരോ (Age,

Reg No, Amount തുടങ്ങിയവ) നല്‍കാവുന്നതാണ്‌.

PHP വേരിയബിളുകള്‍ക്ക്‌ പേര്‍ നല്‍കുന്നതിനുള്ള നിയമങ്ങള്‍ താഴെ ചേര്‍ക്കുന്നു

(Variable naming conventions in PHP)

€ ഒരു വേരിയബിളിന്റെ പേര്‌ $ ചിഹ്നത്തോടു കൂടി ആരംഭിക്കണം.

€ വേരിയബിളിന്റെ പേര്‌ തുടങ്ങുന്നത്‌ അക്ഷരമോ അല്ലെങ്കില്‍ അണ്ടര്‍സ്‌കോറോ (_)
ഉപയോഗിച്ചായിരിക്കണം.

€ അക്ഷരങ്ങള്‍, സംഖ്യകള്‍, അണ്ടര്‍സ്‌കോര്‍ എന്നിവ മാത്രമേ പേരുകളില്‍ അനുവദനീ
യമായിട്ടുള്ളു (9-2, A-Z, 0-9, and _).

© ച്ചെറിയ അക്ഷരത്തില്‍ എഴുതുന്ന പേരും വലിയ അക്ഷരത്തില്‍ എഴുതുന്ന പേരും
ഒരേ അക്ഷരമാണെങ്കില്‍ കൂടി വ്യത്യസ്ത വേരിയബിളുകളായി പരിഗണിക്കും ($name,
SNAME എന്നിവ രണ്ടു വ്യത്യസ്ത വേരിയബിളുകളാണ്‌).

© കോമ, ഉദ്ധരണി ചിഹ്നം, വിസര്‍ഗം, ചോദ്യ ചിഹ്നം, മറ്റ്‌ വിശേഷ ചിഹ്നങ്ങള്‍, ശൂന്യ
സ്ഥലം തുടങ്ങിയവ വേരിയബിളിന്റെ പേരില്‍ ഉള്‍പ്പെടാന്‍ പാടില്ല.

10.2.2 ഡാറ്റ ഇനങ്ങള്‍ (Data Types)

വിവിധ തരം ഡാറ്റകള്‍ സംഭരിക്കാന്‍ വേരിയ

ബിളുകള്‍ക്ക്‌ കഴിയും. വിവിധ തരത്തിലുള്ള

ഡാറ്റ ഇനങ്ങള്‍ വൃത്യസ്തമായി ഉപ

യോഗിക്കുന്നു. 1111-യിലെ ഡാറ്റ (seme cum nama )

ഇനങ്ങളെ ചിത്രം 10.2-ല്‍ കാണി

പി തരംതിരിച്ചി ത്തു ജി ത്തു SS

ചിത്രം 10.2: PHP - യിലെ ഡു DnewB0b
A. പ്രധാന ഡാറ്റ ഇനങ്ങള്‍ (Core data types)

ഇന്നിജര്‍, ഫ്്‌ളോട്ട്‌, ഡബിള്‍ തുടങ്ങിയ പ്രധാന ഡാറ്റ ഇനങ്ങള്‍ C++-G8 നാം പഠിച്ച
ഡാറ്റ ഇനങ്ങള്‍ക്ക്‌ സമാനമാണ്‌. ഇന്റിജറിന്റേയും ഫ്ളോട്ടിന്റെയും വലിപ്പം കമ്പ്യൂട്ടറിന്റെ
അടിസ്ഥാന സോഫ്ട്വെയറിനെ ആശ്രയിച്ചിരിക്കും.

ഇന്റിജര്‍ (Integer)

ഇന്നിജറുകള്‍ പൂര്‍ണ്ണസംഖ്യകളാണ്‌. ഇതില്‍ ദശാംശ സംഖ്യകള്‍ ഉള്‍പ്പെടില്ല. നെഗറ്റീവ്‌
സംഖ്യകളും ഇന്റിജര്‍ വിഭാഗത്തില്‍ ഉള്‍പ്പെടും. ചിഹ്നമില്ലാത്ത ഇന്റിജര്‍ ഡാറ്റ PHP
ഇനം പിന്തുണക്കുന്നില്ല.

ഉദാഹരണം: 32, 32, 986 തുടങ്ങിയവ

ഫ്്‌ളോട്ട/ഡബിള്‍ (Float/Double)

ദശാംശസ്ഥാനമുള്ള സംഖ്യകളെ ഫ്ളോട്ട്‌ അല്ലെങ്കില്‍ ഡബിള്‍ എന്ന ഡാറ്റ ഇനത്തില്‍
ഉള്‍പ്പെടുത്തിയിരിക്കുന്നു. ഫ്‌ളോട്ടിനേക്കാള്‍ ഡബിളിന്‌ ദശാംശസ്ഥാനങ്ങളും കൃതൃതയും
കൂടുതലാണ്‌.

ഉദാഹരണം: 123.56, 5.6, 1.293, 71:-10 etc.

10. PHP ഉപയോിച്ചുള്ള സെര്‍വര്‍ സൈഡ്‌ സ്ക്രിപ്റ്റിംഗ്‌

സ്ദ്രിംഗ്‌ (String)

അക്ഷരങ്ങള്‍ /സംഖൃകള്‍ ചിഹ്നങ്ങള്‍ / ഇവയുടെ കൂട്ടം, വാക്കുകള്‍, വാചകങ്ങള്‍ തുട
ങ്ങിയവക്കാണ്‌ ഈ ഡാറ്റ ഇനം ഉപയോഗിക്കുന്നത്‌. ഇത്തരത്തിലുള്ള ഡാറ്റ, ഉദ്ധരണി
ചിഹ്നങ്ങള്‍ക്ക്‌ ഉള്ളിലാണ്‌ നല്‍കേണ്ടത്‌. (” ”), ( 7) എന്നീ രണ്ടു തരം ഉദ്ധരണികളും
ഉപയോഗിക്കാവുന്നതാണ്‌. ഉദ്ധരണി ചിഹ്നം ഉപയോഗിക്കുമ്പോള്‍ സ്ര്രിംഗിന്റെ തുട
ക്കവും ഒടുക്കവും ഒരേതരം ഉദ്ധരണികള്‍ ആയിരിക്കണം. അതായത്‌ സ്ട്രിംഗ്‌ ആരംഭി
ക്കുന്നത്‌ ഏക ഉദ്ധരണി ചിഹ്നത്തില്‍ ആണെങ്കില്‍ അതേ ചിഹ്നത്തില്‍ തന്നെ സ്ട്രിംഗ്‌
അവസാനിപ്പിക്കണം.

ഉദാഹരണം: “Apple”, PHP’ etc.
ബൂളിയന്‍ (130010)

ബൂളിയന്‍ ഡാറ്റ ഇനം ശരി (TRUE) അല്ലെങ്കില്‍ തെറ്റ്‌ (FALSE) എന്നീ രണ്ട്‌ അവസ്ഥ
കളെ പ്രതിനിധീകരിക്കുന്നു. പ്രോഗ്രാമിലെ ചില വാക്യങ്ങള്‍ ചില നിബന്ധനകള്‍ക്ക്‌
അനുസൃതമാണോ അല്ലയോ എന്ന്‌ പരിശോധിക്കുമ്പോള്‍ ഇത്തരം ബൂളിയന്‍ വേരിയ
ബിളുകള്‍ ഉപയോഗിക്കുന്നു. മുമ്പ്‌ പറഞ്ഞതുപോലെ PHP ചെറിയക്ഷരങ്ങളെയും
വലിയക്ഷരങ്ങളെയും വ്യത്യസ്തമായി പരിഗണിക്കുന്നതിനാല്‍ yes/no, on/off,
1/0 എന്നിങ്ങനെ മുന്‍നിര്‍വചിത ബൂളിയന്‍ വിലകള്‍ മാത്രമേ നമുക്കുപയോഗിക്കാന്‍
സാധിക്കൂ.

< ?php
Sa = 1; // Assign the value TRUE TO Sa
Sb = 0; // Assign the value FALSE to $b
2 >
13. പ്രതേക ഡാറ്റ ഇനങ്ങള്‍ (Special datat ypes)
mos (NULL)

ഇത്‌ ഒരു പ്രത്യേക തരം ഡാറ്റ ഇനമാണ്‌. ഇതിന്റെ ഏക aler NULL എന്നത്‌ മാത്രമാണ്‌.
ഒരു വേരിയബിള്‍ നിര്‍മ്മിക്കുമ്പോള്‍ മറ്റു വിലകള്‍ ഒന്നും നല്‍കുന്നില്ലെങ്കില്‍ PHP
അതിനെ NULL ആയി പരിഗണിക്കുന്നു. വേരിയബിളുകള്‍ ശൂന്യമാക്കുന്നതിനും NULL
ഡാറ്റ ഇനം ഉപയോഗിക്കുന്നു.

ഉദാഹരണം: $x = null; //$x is assigned with NULL value
അറെ (Array)

ഒരേ ഇനത്തില്‍പെടുന്ന ഡാറ്റയുടെ കൂട്ടമാണ്‌ അറെ. PHP-OIG ഓരോ അറെ അംഗ
ത്തിനും ഒരു കീയും വിലയും ഉണ്ടായിരിക്കും. മൂന്നു തരം അറെകള്‍ 121112-യില്‍ ലഭ്യ
മാണ്‌. അവയുടെ പേരുകള്‍ ഇന്‍ഡക്സ്ഡ്‌ അറെ, അസ്സറോസിയേറ്റീവ്‌ GOO, മള്‍ട്ടീഡയ
മെന്‍ഷണല്‍ അറെ എന്നിങ്ങനെയാണ്‌. അറെകളെകുറിച്ച്‌ കൂടുതല്‍ വിശദീകരണം ഭാഗം
10.4-ല്‍ നല്‍കിയിരിക്കുന്നു.

ഒബ്ജക്റ്റ്‌ (Object)

ലെ ഒബ്ജക്റ്റുകള്‍ക്കു സമാനമാണ്‌ PHP യിലെ ഒബ്ജകറ്റ്‌ ഡാറ്റ ഇനം. വേരിയബി
ളുകളും അത്‌ പ്രോസസ്സ്‌ ചെയ്യുന്ന ഫങ്ഷനുകളും ഒബ്ജെക്ടില്‍ അടങ്ങിയിരിക്കുന്നു.

കമ്പ്യൂട്ടര്‍ സയന്‍സ്‌ - XII

12110-യില്‍ ഒബ്ജക്റ്റുകള്‍ പ്രത്യേകമായിത്തന്നെ പ്രസ്താവിക്കണം. ആദ്യം ക്ലാസ്‌ പ്രസ്‌
താവിച്ചതിനുശേഷമാണ്‌ അതിന്റെ ഇന്‍സ്റ്റന്‍സുകള്‍ അഥവാ ഒബ്ജക്റ്റുകള്‍ നിര്‍മ്മിക്കുക.
ഇതിനായി ‘new എന്ന കമാന്‍ഡ്‌ ഉപയോഗിക്കുന്നു.

റിസോഴ്‌സ്‌ (Resource)

ഇവ യഥാര്‍ത്ഥ ഡാറ്റ ഇനങ്ങള്‍ അല്ല. ഇവ ചില പ്രത്യേക വേരിയബിളുകളാണ്‌. ഇവയ്ക്ക്‌
ചില റഫറന്‍സുകള്‍ സൂക്ഷിക്കാന്‍ സാധിക്കും. ഫയല്‍ ഹാന്‍ഡ്ലെര്‍, ഡാറ്റാബേസ്‌
ഒബ്ജക്റ്റ്‌ തുടങ്ങിയവ ഇതില്‍ ഉള്‍പ്പെടും. റിസോഴ്സുകള്‍ നിര്‍മിക്കുകയും ഉപയോ
ഗിക്കുകയും ചെയ്യുന്നതിന്‌ പ്രത്യേക ഫംഗ്ഷനുകള്‍ ഉപയോഗിക്കുന്നു.

10.2.3 21117-യിലെ ഓഖറേറ്ററുകള്‍ (Operators)

11117-യില്‍ ഉപയോഗിക്കുന്ന ഓപ്പറേറ്ററുകള്‍ താഴെ കൊടുത്തിരിക്കുന്നവിധം തരംതിരി
ക്കാഠ:

a. വില നല്‍കല്‍ ഓപ്പറേറ്റര്‍
0. അരിത്മെറ്റിക്‌ ഓപ്പറേറ്ററുകള്‍
൦. റിലേഷണല്‍ ഓാപ്പറേറ്ററുകള്‍
9. ലോജിക്കല്‍ ഓപ്പറേറ്ററുകള്‍
€. സ്ട്രിംഗ്‌ ഓപ്പറേറ്ററുകള്‍
2. കൂട്ടിച്ചേര്‍ത്ത ഓപ്പറേറ്ററുകള്‍
a, വില നല്‍കല്‍ ഓപ്പറേറ്റര്‍ (Assignment Operator)

ഒരു വേരിയബിളിലേക്ക്‌ നേരിട്ടോ അല്ലെങ്കില്‍ മറ്റൊരു വേരിയബളില്‍ നിന്നോ വില
നല്‍കുന്നതിന്‌ ഈ ഓപ്പറേറ്റര്‍ ഉപയോഗിക്കുന്നു. ‘= ചിഹ്നമാണ്‌ വില നല്‍കല്‍ ഓപ്പറേ
റ്ററായി ഉപയോഗിക്കുന്നത്‌.

ഉദാ: Smy_var = 4; //$my_var is assigned a value 4

Snew_var = $my_var; //Snew_var is assigned with the
value of $my_var

0. അരില്‍മെറ്റിക്‌ ഓപ്പറേറ്ററുകള്‍ (Arithmetic Operators)

സങ്കലനം 3 + 2
വ്യവകലനം
ഗുണനം 6 * 5

(ees oS |

10. PHP ഉപയോിച്ചുള്ള സെര്‍വര്‍ സൈഡ്‌ സ്ക്രിപ്റ്റിംഗ്‌

൦. റിലേഷണല്‍ ഓപ്പറേറ്ററുകള്‍ (Relational Operators)

Sa SE പ
re ൮

a

വലുതോ തുല്യമോ $x >= Sy

d. ലോജിക്കല്‍ 92460903408 (Logical Operators)

and

എല്ലാ റിലേഷണല്‍ പദപ്രയോഥങ്ങളും (a>b) and (a>c)
രരിയാണെങ്കില്‍ True തിരികെ തരുന്നു

ഏതെങ്കിലും ഒരു റിലേഷണല്‍ പദപ്രയോഗ (a>b) or (a>c)
മെങ്കിലും ശരിയായാല്‍ 1൦ തിരികെ തരുന്നു

രണ്ട്‌ റിലേഷണല്‍ പദപ്രയോരങ്ങളില്‍ (a>b) xor (a>c)
ഏതെങ്കിലും ഒന്ന്‌ മാത്രം ശരിയായാല്‍ True
തിരികെ തരുന്നു

റിലേഷണല്‍ വാക്യം തെറ്റായാല്‍
True തിരികെ തരുന്നു

൦. സ്ര്രിങ ഓപ്പറേറ്ററുകള്‍ (String Operators)

രണ്ടു തരം സ്ര്രിങ്‌ ഓപ്പറേറ്ററുകള്‍ ലഭ്യമാണ്‌. അവ കോണ്‍കാറ്റിനേറ്റിങ്‌ ഓപ്പറേറ്റര്‍ (.),
കോണ്‍കാറ്റിനേറ്റിംഗ്‌ അസൈന്‍മെന്റ്‌ ഓപ്പറേറ്റര്‍ ("=") എന്നിവയാണ്‌. കോണ്‍കാറ്റിനേറ്റിംഗ്‌
ഓപ്പറേറ്റര്‍ രണ്ടു സ്്രിങ്ങുകളെ ഒരുമിച്ച്‌ ചേര്‍ത്ത്‌ പുതിയ ഒരു സ്ര്രിങ്‌ ആക്കി മാറ്റുന്നു.

എന്നാല്‍ കോണ്‍കാറ്റിനേറ്റിംഗ്‌ അസൈന്‍മെന്റ്‌ ഓപ്പറേറ്റര്‍ ‘= ചിഹ്നത്തിന്‌ വലത്‌ വശ
ത്തുള്ള സ്ര്രിങ്ങിനെ ഇടത്‌ വശത്തുള്ള സ്ര്രിങ്ങിനോട്‌ ചേര്‍ക്കുന്നു.

കമ്പ്യൂട്ടര്‍ സയന്‍സ്‌ - XII

ാഷ്റേഷന്‍ വിരദീകരിക്കുന്ന പ്രോദ്രാം

<HIML>

<BODY>
<?php
Sstringl= 'Good';
Sstring2= ' Morning';
Snewstring = $stringl.$string2; //concatenation
Sstringl .= Sstring2; //concatenation assignment

echo Snewstring."<BR>";

Mozilla Firefox

echo $stringl; File Edit View History Bookmarks
2> i} http://localhost/P-10-5.php |
</BODY> Good Morning
</HTML> Good Morning

f. കൂട്ടിച്ചേര്‍ത്ത ഓപ്പറേറ്ററുകള്‍ (Combined Operators)

C+t-GAIG പോലെ രണ്ടു ALMOMOo ഓപ്പറേറ്ററുകള്‍ കൂടിച്ചേര്‍ന്നാണ്‌ ഇത്തരം
ഓപ്പറേറ്ററുകള്‍ രൂപപ്പെടുന്നത്‌.

അനങ്ങി

ശിഷ്ടം കണ്ടുപിടിച്ചതിന്ശേഷം വില $x 96൦ 57 = $x % 5;
നല്‍കുന്നു

= കൂട്ടിച്ചേര്‍ത്തതിന്രേഷം വില നല്‍കുന്നു $stringl.="hello"; | $stringl=$stringl."hello";

ഉ. വര്‍ദ്ധനവി,/ കുറവീ ഓപ്പറേറ്ററുകള്‍

10. PHP ഉപയോിച്ചുള്ള സെര്‍വര്‍ സൈഡ്‌ സ്ക്രിപ്റ്റിംഗ്‌

1. എസ്‌കേപ്പ്‌ സീക്വന്‍സ്‌

ഇംഗ്ലീഷ്‌ അക്ഷരമാലയിലെ ഒരു അക്ഷരവും അതിനു മുന്നില്‍ ബാക്ക്‌സ്കാഷ്‌ ('.) ചിഹ്നവും
ചേരുമ്പോള്‍ എസ്‌കേപ്പ്‌ ക്യാരക്ടര്‍ ഉണ്ടാകുന്നു. 1111/1.-ലെ <PRE> ടാഗ്‌ ഉപയോ
ഗിച്ചാണ്‌ ഇവ വെബ്‌ പേജില്‍ പ്രദശിപ്പിക്കുന്നത്‌.

\n പുതിയ വരിയിലേക്ക്‌ ec "Raju\nHari Raju
പോകുന്നു Hari
ec

ho j LY 9
ari
\r Enter കീ dalewmoleazmalay
തുല്യം
50$

echo "C:\\Windows"; | C:\Windows;

നിങ്ങളുടെ പുരോഗതി അറിയുക (Know your progress)

1 PHP-@ 0S പൂര്‍ണ്ണരൂപം ആകുന്നു.

11117-ഫയലുകളുടെ തനതായ ഫയല്‍ എക്സ്റ്റന്‍ഷന്‍ ആകുന്നു.

PHP-@}0S പിതാവ്‌ എന്നറിയപ്പെടുന്നത്‌ ആരാണ്‌?

ഒറ്റവരി വിവരണത്തിന്‌ 11117-യില്‍ ഉപയോഗിക്കുന്നു.

)/ിഗി-ന്റെ പൂര്‍ണ്ണ രൂപം ആകുന്നു.

. LAMP-o§ പൂര്‍ണ്ണ രൂപം ആകുന്നു.

ഒരു PHP സ്ക്രിപ്റ്റ്‌ തുടങ്ങുന്നത്‌ _ ലും അവസാനിക്കുന്നത്‌

ലും ആകുന്നു.

8. PHP-O163 വേരിയബിളുകള്‍ എപ്പോഴും ആരംഭിക്കുന്നത്‌

ഉപയോഗിച്ചാണ്‌.

പമ 2 F YB N

9. 2117-യുടെ വാകൃഘടന _ പ്രോഗ്രാമിങ്‌ ഭാഷയുടേതിന്‌
സമാനമാണ്‌.

10. var_dump( ) ന്റെ ഉപയോഗം എന്ത്‌?
11. (.) ഓപ്പറേറ്റര്‍ ന്‌ ഉപയോഗിക്കുന്നു.

10.3 121117-യിലെ നിയന്ത്രണ പ്രസ്താവനകള്‍ (Cotnrol Structures in PHP)

നിയന്ത്രണ പ്രസ്താവന 11110-യിലെ പ്രോഗ്രാമിന്റെ ഗതി നിയന്ത്രിക്കുന്നു. if.....else, switch
തുടങ്ങിയ കണ്ടിഷണല്‍ പ്രസ്താവനകള്‍ ചില വ്യവസ്ഥകള്‍ക്ക്‌ അനുസരിച്ച്‌ പ്രോഗ്രാ
മിലെ ഒരു ഭാഗം പ്രവര്‍ത്തിപ്പിക്കുന്നതിനോ അല്ലെങ്കില്‍ പ്രവര്‍ത്തിപ്പിക്കാതിരിക്കുന്ന
തിനോ ഉപയോഗിക്കുന്നു. for, while, do...while എന്നീ ലൂപ്പുകള്‍ ഒരു പ്രത്യേക കോഡ്‌
ആവര്‍ത്തിച്ച്‌ (്രവര്‍ത്തിപ്പിക്കുന്നതിന്‌ ഉപയോഗിക്കുന്നു.

ഞ്ഞ്‌ കവാട സന്‌ അതാ അഞ്അ
10.3.1 7111 - യിലെ കണ്ടിഷണല്‍ പ്രസ്താവനകള്‍ (Conditional Statements in PHP)
a. if പ്രസ്താവന

ഒരു പദപ്രയോഗത്തിന്റെ ഫലം ശരിയാണോ എന്ന്‌ പരിശോധിച്ചതിനുശേഷം ശരിയെ
ങ്കില്‍ ഒന്നോ അതിലധികമോ പ്രസ്താവനകള്‍ പ്രവര്‍ത്തിപ്പിക്കുന്നതിന്‌ ഇത്‌ ഉപ

യോഗിക്കുന്നു.
വാകൃഘടന ഉദാഹരണം 'മ' വലുതാണോ എന്ന്‌ പരിശോധിക്കുക
if (expression) <?php
{ $a = 10;
//code to execute if the Sb ;
//expression evaluates to true if Sa > Sb)

}

Mozilla Firefox
File Edit View History Bookmarks
{F http://localhost/S-10-3-1.php

a is bigger than b

b. if.. else പ്രസ്താവന

if ഉപയോഗിച്ച്‌ പരിശോധിക്കുമ്പോള്‍ പദ്രപയോഗത്തിന്റെ ഫലം ശരിയാണെങ്കില്‍
1-നോട്‌ അനുബന്ധിച്ചുളള പ്രസ്താവനകള്‍ പ്രവര്‍ത്തിപ്പിക്കുകയും തെറ്റാണെങ്കില്‍ else-
നോട്‌ അനുബന്ധിച്ചുള്ള പ്രസ്താവനകള്‍ പ്രവര്‍ത്തിപ്പിക്കുകയും ചെയ്യുന്നു.

ഉദാഹരണം
ന്ന രണ്ടു സംഖ്യകളില്‍ വലുത്‌ കണ്ടുപിടിക്കുക
if (expression) <?php
{ Sa = 10;
//code to execute if the Sb = 65;
//expression evaluates to true if (Sa > Sb)
i} echo "a is bigger than b";
else else
{ echo "b is bigger than a";
//code to execute if the 2>
//expression evaluates to false
1

Mozilla Firefox
File Edit View History Bookmarks
2 http://localhost/S-10-3-1-b.php

b is bigger than a

c. else if പ്രസ്താവന

വാക്യഘടന

in (exprtess യ)

{

}

else if (expression)

}

else if (expression)

i

else

//code to execute in all other cases.

d. switch പ്രസ്താവന

ഒരേ പദപ്രയോഗത്തിനുമേല്‍ നിരനിരയായി

10. PHP ഉപയോരിച്ചുള്ള സെര്‍വര്‍ സൈഡ്‌ സ്ക്രിപ്റ്റിംഗ്‌

ഉദാഹരണം
രണ്ടു MoH തുല്യമോ, വലുതോ എന്ന്‌ കണ്ടുപിടി
ക്കുക.
[ളി
Bae

Bae
if (Sa > Sb)

echo "a is bigger than b";
if ($b > Sa)
echo "b is bigger than a";

ho "a and b are equal";

Mozilla Firefox

File Edit View History Bookmarks
£7 http://localhost/S-10-3-1-c.php [ op |
a and b are equal

ഉപയോഗിക്കുന്ന iff) പ്രസ്താവനകള്‍ക്ക്‌ സമാനമാണ്‌ switch. ഇതിന്റെ വാകൃഘടനയും

പ്രവര്‍ത്തനവും

Ct++-oe1 Switch പ്രസ്താവനക്ക്‌ സമാനമാണ്‌. എന്നാല്‍ 1110-യിലെ

10-ന്‌ കേസ്‌ ഐഡന്റിഫയറുകളായി സ്ര്രിംഗുകള്‍ ഉപയോഗിക്കാന്‍ സാധിക്കും.

വാകൃഘടന

switch (expression)

{

ട്ടാ
//execute this if result of
//expression is resultl
break;

case result2:
//execute this if result of
//expression is result2
break;

default:
//execute this if result of
//expression does not match
//any case results

ഉദാഹരണം
1 മുതല്‍ 3 വരെയുള്ള സംഖ്യകള്‍ അക്ഷരത്തില്‍ പ്രിന്റ്‌
ചെയ്യുന്ന പ്രോഗ്രാം എഴുതുക
<?php
$n = 3;
switch (Sn)
{ case 1:
echo "One";
break;
case 2:
echo "Two";
break;
case 3:
echo "Three";
break;
default:
echo "Enter correct no."
}2>

Mozilla Firefox

File Edit View History Bookmarks

et http://localhost/s-10-3-1-d.php (se
Three

കമ്പ്യൂട്ടര്‍ സയന്‍സ്‌ - XII

10.3.2 PHP- യിലെ ലൂഷുകള്‍ (,൦0)ട in PHP)

a. while ലൂപ്പ്‌

‘while’ നിയ്ര്തണഘടന ലൂപ്പിനുള്ളിലുള്ള പ്രസ്താവനകളെ പദപ്രയോഗത്തിന്റെ ഫലം
False ആകുന്നതു വരെ ആവര്‍ത്തിച്ചു പ്രവര്‍ത്തിപ്പിക്കുന്നു.

Cc

ഉദാഹരണം
വാകൃഘടന 1 മുതല്‍ 5 വരെയുള്ള സംഖ്യകര്‍ പ്രിന്റ്‌ ചെയ്യുന്ന
പ്രോഗ്രാം
while (expression) <?php
{ ; Si = 1;
//code to execute if the while ($i <= 5)
//expression evaluates to true { echo "Si ";
7
} 33442 }
?>

Mozilla Firefox

File Edit View History Bookmarks

{} http://localhost/S-10-3-2-a.php
12345

0. do.....while ena]

‘do-while! പ്രസ്താവന ഒരു തവണയെങ്കിലും
കോഡ്‌ ശകലം പ്രവര്‍ത്തിപ്പിക്കുകയും ശേഷം വ്യവസ്ഥ Truce ആയിരിക്കുന്നുതു വരെ
ആവര്‍ത്തിക്കുകയും ചെയ്യുന്നു.

ഉദാഹരണം
വാക്യഘടന 1 മുതല്‍ 5 വരെയുള്ള സംഖ്യകര്‍ പ്രിന്റ്‌ ചെയ്യുന്ന

പ്രോഗ്രാം

do <?php

i Si= 1;

//code to execute if the ae

//expression evaluates to true { echo "$i ";

} while (expression); Sitt+; }

while (Si <= 5);
൦. for ലുപ്പ്‌

ഒന്നോ അതിലധികമോ പ്രസ്താവനകളെ ഒരു നിബന്ധനക്ക്‌ വിധേയമായി എത്ര തവണ
പ്രവര്‍ത്തിപ്പിക്കണമെന്ന്‌ അറിയാമെങ്കില്‍ for ലൂപ്പ്‌ ഉപയോഗിക്കാം. നിശ്ചിത തവണ
പ്രവര്‍ത്തിച്ച്‌ കഴിയുമ്പോള്‍ ലൂപ്പ്‌ പ്രവര്‍ത്തനം അവസാനിക്കുന്നു.

10. PHP ഉപയോിച്ചുള്ള സെര്‍വര്‍ സൈഡ്‌ സ്ക്രിപ്റ്റിംഗ്‌

ഉദാഹരണം

വാകൃഘടന
1 മുതല്‍ 5 വരെയുള്ള സംഖ്യകര്‍ പ്രിന്റ്‌ ചെയ്യുക
11 <?php
Condi Eton; inernement ) for ($i = 1;$i <= 5; Si++)
{ { echo "Si

//code to be executed;

}

d. ലൂപ്പിലെ continue, break എന്നീ പ്രസ്താവനകള്‍

ലൂപ്പിനുള്ളിലെ പ്രസ്താവനകള്‍ക്കിടയില്‍ ‘continue’ വരികയാണെങ്കില്‍ ലൂപ്പിലെ
തുടര്‍ന്നുള്ള പ്രസ്താവനകള്‍ ഒഴിവാക്കുകയും ലൂപ്പിന്റെ ആരംഭത്തിലെ നിബന്ധന വില
യിരുത്തിയതിനുശേഷം അടുത്ത ആവര്‍ത്തന ല്ര്രകിയ നടത്തുകയും ചെയ്യുന്നു.

എന്നാല്‍ ‘break’ പ്രസ്താവന for, foreach, while, do...while, switch എന്നിവയുടെ
പ്രവര്‍ത്തനം അവസാനിപ്പിക്കുന്നു. break നോടൊപ്പം വേണമെങ്കില്‍ ഒരു സംഖ്യ ചേര്‍ക്കാ
വുന്നതാണ്‌. ഒന്നിനുള്ളില്‍ മറ്റൊന്ന്‌ എന്ന രീതിയില്‍ ഉപയോഗിച്ചിരിക്കുന്ന ലൂപ്പ്‌ നിര്‍മ്മി
തികളില്‍ എത്ര ലുപ്പുകള്‍ക്കുള്ളില്‍ നിന്നും പുറത്തേക്കു വരണം എന്നതിനെ ഇത്‌ സൂചി
പ്പിക്കുന്നു. (ഉദാ: break 1;, break 2; മുതലായവ)

10.4 PHP യിലെ അറെകള്‍ (Arrays in PHP)

ഒരേ തരം ഡാറ്റകളുടെ കൂട്ടമാണ്‌ അറെ.
ഓരോ അറെ അംഗത്തിനും (അറെ വേരിയബിള്‍) ഒരു കീയും വിലയും ഉണ്ടായിരിക്കും.
കീ ഉപയോഗിച്ചാണ്‌ അറെ എലെമെന്റിലെ വില കണ്ടെത്തുന്നത്‌. C++-@ ഈ കീ
ഇന്‍ഡക്സ്‌ എന്നാണ്‌ അറിയപ്പെടുന്നത്‌.
ഉദാഹരണമായി a[1] =10 എന്ന്‌ നാം എഴുതിയാല്‍ ഇന്‍ഡക്സ്‌ 1 എന്നത്‌ കീയും 10 വില
യുമാണ്‌. അറെയില്‍ ഓരോ വേരിയബിളിനും കീയും വിലയും നല്‍കി അവയെ അറെ
അംഗങ്ങള്‍ എന്നു വിളിക്കുന്നു. C++-G കീ അഥവാ ഇന്‍ഡക്സ്‌ ആയി പോസിറ്റീവ്‌
പൂര്‍ണ്ണ സംഖ്യകള്‍ മാത്രമാണ്‌ നാം ഉപയോഗിക്കുന്നത്‌. എന്നാല്‍ 1117-യില്‍ പോസിറ്റീവ്‌
പൂര്‍ണ്ണ സംഖ്യകളോ സ്ര്രിംഗുകളോ കീകളായി നമുക്ക്‌ ഉപയോഗിക്കാം. മുന്നു തരം
അറെകളാണ്‌ 2111-യില്‍ ഉള്ളത്‌.

* ഇന്‍ഡെക്സ്ഡ്‌ അറെ

€ അസ്സോസിയേറ്റീവ്‌ അറെ

© മള്‍ട്ടി ഡയമെന്‍ഷണല്‍ അറെ
ഇവയില്‍ ഇന്‍ഡെക്സ്ഡ്‌ അറെയും, അസ്സറോസിയേറ്റീവ്‌ അറെയുമാണ്‌ നാം ഇവിടെ
ചര്‍ച്ച ചെയ്യുന്നത്‌. മള്‍ട്ടി ഡയമെന്‍ഷന്‍ അറെകളെക്കുറിച്ചുള്ള പഠനം ഈ പുസ്തകത്തിന്റെ
പരിധിക്ക്‌ പുറത്താണ്‌

10.4.1 ഇന്‍ഡെക്സ്ഡ്‌ Geaned (Indexed Arrays)

ഇവ C++-OE1 അറെകള്‍ക്ക്‌ സമാനമാണ്‌. സംഖ്യകള്‍ കീ/ഇന്‍ഡക്സ്‌ ആയി ഉപയോഗി
ക്കുന്ന അറെകളെയാണ്‌ ഇന്‍ഡക്സ്ഡ്‌ അറെ എന്നു വിളിക്കുന്നത്‌. ഇത്തരം അറെകള്‍ക്ക്‌
സംഖ്യകള്‍, അക്ഷരങ്ങള്‍, മറ്റ്‌ ഒബ്ജക്റ്റുകള്‍ എന്നിവയെല്ലാം സംഭരിക്കാന്‍ സാധിക്കുമെ

കമ്പ്യൂട്ടര്‍ സയന്‍സ്‌ - XII

ങ്കിലും അവയുടെ ഇന്‍ഡക്സ്‌ എപ്പോഴും സംഖ്യകളായിരിക്കും. ഇന്‍ഡക്സ്‌ സംഖ്യ
തുടങ്ങുന്നത്‌ പൂജ്യത്തില്‍ നിന്നാണ്‌. അറെ നിര്‍മ്മിക്കുന്നതിന്‌ PHP യില്‍ array() എന്ന
ഫങ്ഷന്‍ ഉപയോഗിക്കുന്നു.
ഇന്‍ഡെക്സ്ഡ്‌ അറെ നിര്‍മ്മിക്കുന്ന വാകൃഘടന;

Sarray_name = array(valuel,value2,value3,etc.);

അഥവാ
Sarray[key] = value;

ഇന്‍ഡെക്സ്ഡ്‌ അറെക്ക്‌ ഉദാഹരണം

Sregno = array(679867, 658367, 673590);

Scolors = array("red", "brown", "yellow");

Or

Sregno[0] = 679867;

Sregnol] = 658367;

Sregno[2] = 673590;

Scolors[O] = "red";
Scolors[1] = "brown";
Scolors[2] = "yellow";

മുകളില്‍ നല്‍കിയിരിക്കുന്ന ഉദാഹരണത്തില്‍ രജിസ്റ്റര്‍ നമ്പറുകള്‍ (679867, 658367,673590),
കളറുകള്‍ ("red", "brown", "yellow") എന്നിവ ഈ അറെകളിലെ വിലകളും, 0,1,2 എന്നീ
സംഖ്യകള്‍ കീ അഥവാ ഇന്‍ഡെക്സും ആകുന്നു.

11117-യിലുള്ള print_r() എന്ന ഫങ്ഷന്‍ ഉപയോഗിച്ച്‌ ഒരു അറെയിലെ എല്ലാ വിലകളും
പ്രിന്റ്‌ ചെയ്യുവാന്‍ സാധിക്കും.

print_r( Joa വാകൃഘടന

print_r(array name)

ഉദാഹരണം: for ലൂഷ്‌ ഉപയോഗിച്ച്‌ ഉദാഹരണം: [0010 1( ) ഉപയോശിച്ച്‌
അഴേോ പ്രിന്റ്‌ ചെയ്യുന്നു അറേ പ്രിന്റ്‌ ചെയ്യുന്നു
<?php <?php
SName = array("Raju", $Name = array("Raju",
"Salim", "“John"); "Salim", "John");
for (Si = 0; Si < 3; 941) print_r($Name) ;
echo S$Name[$i]." "; ?>
>

Mozilla Firefox Mozilla Firefox
File Edit View History Bookmarks File Edit View History Bookmarks Tools Help
(i http://localhost/S-10-4-1-a.php | മും] {7} http://localhost/S-10-4-1-b.php
Raju Salim John Array ( [0] => Raju [1] => Salim [2] => John )

10. PHP ഉപയോഗിച്ചുള്ള സെര്‍വര്‍ സൈഡ്‌ സ്ക്രിപ്റ്റിംഗ്‌

10.4.2 അസ്റ്റോസിയേറ്റിവ്‌ അറെകള്‍ (Associative Arrays)

ഇത്തരം അറെകളില്‍ കീകള്‍ക്ക്‌ സാകര്യപ്രദമായ പേരുകള്‍ നല്‍കാം. അറെയുടെ
പ്രവര്‍ത്തന രീതി ഇന്‍ഡെക്സ്ഡ്‌ അറെയിലേതുപോലെയാണ്‌ എന്നാല്‍ കീ അഥവാ

ഇന്‍ഡക്സ്‌ ഒരു സ്ര്രിംഗ്‌ ആയിരിക്കും.
അസ്സറോസിയേറ്റീവ്‌ അറെയുടെ വാകൃ ഘടന

array(key=>value, key=>value, key=>value, etc.);

വിദ്യാര്‍ഥികളുടെ മാര്‍ക്കുകള്‍ സൂക്ഷിക്കുവാന്‍ സംഖ്യകള്‍ കീ ആയി വരുന്ന ഇന്‍ഡെ
ക്സ്ഡ്‌ അറെയെക്കാള്‍ അഭികാമ്യം അസ്സറോസിയേറ്റീവ്‌ അറെകളാണ്‌. എന്തെന്നാല്‍
വിദ്യാര്‍ത്ഥികളുടെ പേരുകള്‍തന്നെ കീ രൂപത്തില്‍ നല്‍കുവാന്‍ കഴിയും. അങ്ങിനെ
വന്നാല്‍ ഓരോ പേരിന്‌ നേരെയും സൂചിപ്പിച്ചിരിക്കുന്നത്‌ അവരവരുടെ മാര്‍ക്ക്‌ തന്നെ
യായിരിക്കും.

Sresult = array("Hari™ => "35", ന => "37", "Mini" => "43");

<?php

Scost=array ("Pen"=>"35", "Pencil"=>"5","Brush"=>"20") ;
echo "A pencil costs " . $cost['Pencil'] . " rupees.";

22>
Mozilla Firefox
File Edit View History Bookmarks

{"} http://localhost/P-10-4-2.php

A pencil costs 5 rupees.

10.4.3 foreach ലൂഖുകള്‍ (foreach loops)

PHP-@loe for ലൂപ്പുകളുടെ തുടര്‍ച്ചയാണ്‌ foreach ലൂപ്പ്‌, അറെയിലെ അംഗങ്ങളുടെ
എണ്ണം കൃത്യമായി അറിയില്ലെങ്കില്‍ ഈ ലൂപ്പ്‌ ഉപയോഗിക്കുന്നത്‌ നന്നായിരിക്കും.
അറെയുടെ അവസാനം വരെയുള്ള എല്ലാ കീ/മൂല്യം ജോഡികളിലൂടെയും ഇത്‌ കടന്നു
പോകുന്നു. ഈ ലൂപ്പ്‌ അറെകളില്‍ മാത്രമാണ്‌ പ്രവര്‍ത്തിക്കുന്നത്‌ എന്നൊരു പ്രത്യേക

തയുണ്ട്‌. ഇത്‌ രണ്ടു രീതിയില്‍ ഉപയോഗിക്കാം.
a. foreach (Sarray as $value)

ഓരോ ലൂപ്പ്‌ ആവര്‍ത്തനത്തിലും തല്‍സ്ഥാനത്തുള്ള അറെ അംഗത്തിന്റെ വില $value

വിലേക്ക്‌ നല്‍കുകയും അറെ പോയിന്റര്‍ ഒരു സ്ഥാനം മുന്നോട്ട്‌ നീങ്ങുകയും ചെയ്യുന്നു.

ഈ പ്രവര്‍ത്തനം അറെയിലെ അവസാന അംഗം എത്തുന്നതു വരെ ആവര്‍ത്തിക്കുന്നു.

കമ്പ്യൂട്ടര്‍ സയന്‍സ്‌ - XII

ഉദാഹരണം

വാകൃഘടന
Foreach ലുഷിന്റെ പ്രവര്‍ത്തനം വിശദീകരിക്കുന്നു.

foreach (Sarray as $value) <?php
Scolors = array("red",
"green", "blue", "yellow");
foreach (Scolors as $value)
{echo "Svalue "; }

മട്ട to be exccuted,;

Mozilla Firefox

File Edit View History Bookmarks

b. foreach (Sarray as $key=>$value) Say നത്ന്തന്നനന്നനനന്നന

ഇത്തരം Foreach ലൂപ്പില്‍ ഇവിടെ ഓരോ ലൂപ്പ്‌ | red green blue yellow

ആവര്‍ത്തനത്തിലും തല്‍സ്ഥാനത്തുള്ള അറെ
അംഗത്തിന്റെ വില $value വിലേക്ക്‌ നല്‍കുന്നതിനോടൊപ്പം അതിന്റെ കീ $key ലേക്ക്‌
നല്‍കപ്പെടുകയും അറെ പോയിന്റര്‍ ഒരു സ്ഥാനം മുന്നിലേക്ക്‌ നീങ്ങുകയും ചെയ്യുന്നു.
ഈ പ്രവര്‍ത്തനം അറെയിലെ അവസാന അംഗം എത്തുന്നത്‌ വരെ ആവര്‍ത്തിക്കുന്നു.

ഉദാഹരണം

ന്ന For each ലൂഭിന്റെ പ്രവര്‍ത്തനം വിശദീകരിക്കുന്നു.

foreach (Sarray as Skey=> <?php

Scolors = array("red"
ens) "green", "blue", "yellow") ;
{ foreach (Scolors as $key => Sitem)
//code to be executed; { echo "Skey - Sitem"; }
} ?>

Mozilla Firefox
File Edit View History Bookmarks
{3 http://localhost/S-10-4-3-b.php

0 - red1 - green2 - blue3 - yellow

10.5 11117 -യിലെ ഫങ്ഷനുകള്‍
(Functions in PHP)

മറ്റു കമ്പ്യൂട്ടര്‍ പ്രോഗ്രാമിങ്‌ SOMMASIEAIMEa109E1 PHP-Oilayjo ഫങ്ഷനുകള്‍ രണ്ടുതര
ത്തിലുണ്ട്‌. ഉപയോക്തൃ നിര്‍വചിത ഫങ്ഷനുകളും (user-defined) അന്തര്‍ നിര്‍മിത ഫങ്ഷ
നുകളും (built-in).

10.5.1 PHP-@ilae! ഉപയോക്ത്യ നിര്‍വചിത ഫങ്ഷനുകള്‍ (User-defined Functions in PHP)

ഇത്തരം ഫങ്ഷനുകളുടെ നിര്‍വചനം ഫങ്ഷന്‍ (function) എന്ന കീവേര്‍ഡോടു കൂടി
ആരംഭിക്കുന്നു. PHP വേരിയബിളുകള്‍ക്ക്‌ പേരു നല്‍കുമ്പോള്‍ പാലിക്കേണ്ട നിയമ
ങ്ങള്‍ തന്നെയാണ്‌ ഫങ്ഷനുകള്‍ക്ക്‌ പേരു നല്‍കുമ്പോഴും പിന്തുടരേണ്ടത്‌. ഫങ്ഷന്‍

നിര്‍വചനത്തിന്റെ വാക്യ ഘടന ചുവടെ നല്‍കിയിരിക്കുന്നു.

10. PHP ഉപയോഗിച്ചുള്ള സെര്‍വര്‍ സൈഡ്‌ സ്ക്രിപ്റ്റിംഗ്‌

function functionName ()

{

//code to be executed;

}

ലളിതമായ ഫങ്ഷന്‍ ആര്‍ധ്വുമെന്റും റിട്ടേണ്‍ വിലയും ഉള്ള ഫങ്ഷന്‍

<?php <?php

function hello() function add(S$a, $b)

{ = :

echo "Hello PHP!"; {Se ടേ ടെ
} return Sc; }
. echo "5+10 =".add(5,10);

hello(); / / ഫങ്ഷനെ വിളിക്കുന്നു >

>

Mozilla Firefox Mozilla Firefox

File Edit View History Bookmarks File Edit View History Bookmarks

റ http://localhost/S-10-5-1-a.php
Hello PHP!

{"} http://localhost/S-10-5-1-b.php
5+10=15

അഞ്ച്‌ വിദ്യാര്‍ഥികളുടെ പേരുകളും മാര്‍ക്കുകളും സംഭരിക്കുന്നതിനുള്ള

ഒരു അസോസിയേറ്റീവ്‌ അറെ നിര്‍മിക്കുക. ഈ വിവരങ്ങള്‍ അറെ

യില്‍ നിന്നും എടുത്ത്‌ മോണിറ്ററില്‍ പ്രദര്‍ശിപ്പിക്കുക. (ഇവിടെ കീ
നമുക്ക ചെയ്യാം ‘name’ ഉം വാല്യൂ ‘mark’ ഉം ആകുന്നു)

10.5.2 ബില്‍ട്ട്‌-ഇന്‍- ഫങ്ഷനുകള്‍ (ധില്ബ്യഥിണട)

PHP യില്‍ ധാരാളം ബില്‍ട്ട്‌-ഇന്‍ ഫങ്ഷനുകള്‍ ലഭ്യമാണ്‌. അവയില്‍ ചിലത്‌ ചുവടെ
നല്‍കിയിരിക്കുന്നു.

a. date() ഫങ്ഷന്‍ (date() function)

ഈ ഫങ്ഷന്‍ ഉപയോഗിച്ച്‌ തീയതി, സമയം, എന്നിവയുമായി ബന്ധപ്പെട്ട ഡാറ്റയെ
അനുയോജ്യമായ ഘടനയില്‍ (format) പ്രദർശിപ്പിക്കാം. ഈ ഫങ്ഷന്റെ വാക്യ ഘടന
ചുവടെ നല്‍കുന്നു.

date(format, timestamp);

ഇതില്‍ ‘format’ എന്നത്‌ തീയതി പ്രദര്‍ശിപ്പിക്കുന്ന രീതിയും ‘timestamp’ എന്നത്‌ ഒരു
ദിവസത്തിന്റെ തീയതിയും സമയവും ആയിരിക്കും. ഇതില്‍ ‘timestamp’ എന്ന ഘടകം
date() ഫങ്ഷന്‍ ഉപയോഗിക്കുമ്പോള്‍ നിര്‍ബന്ധില്ല. തനത്‌ (default) ടൈം സ്റ്റാമ്പ്‌
കംപ്യൂട്ടറിലെ ഇന്നത്തെ തീയതിയും സമയവും ആയിരിക്കും. തീയതി പ്രദര്‍ശിപ്പിക്കുന്ന
രീതിക്ക്‌ സാധാരണയായി ഉപയോഗിക്കുന്ന ചില അക്ഷരങ്ങള്‍ ചുവടെ നല്‍കിയിരിക്കുന്നു.

d- മാസത്തിലെ ദിവസം (01 to 31)
m - മാസം ( 01 to 12)

കമ്പ്യൂട്ടര്‍ സയന്‍സ്‌ - XII

Y - വര്‍ഷം (നാല്‍ അക്കങ്ങള്‍ ഉള്ളത്‌)

1 - ആഴ്ചയിലെ ദിവസം

<HTML>
<BODY>

<?php

echo "Today is ".date("Y.m.d") ."<BR>";

echo "Today is ".date("Y-m-d") ."<BR>";

echo "Today is " . date("1"); അന

2> File Edit View History Bookmarks
</BODY> {7} http://localhost/S-10-5-2-a.php | ap
</HTML> Today is 2015.03.23

Today is 2015-03-23
Today is Monday

b. സ്ര്രിംഗ്‌ ഫങ്ഷനുകള്‍ (String functions)

chr() -തന്നിരിക്കുന്ന ആസ്കി (ASCII) കോഡിന്‌ തത്തുല്യമായ ഒരു അക്ഷരം ഈ
ഫങ്ഷന്‍ തിരികെ തരുന്നു.

വാക്യഘടന : chr(ascii code);

ട്ഥിണ്റ) തന്നിരിക്കുന്ന സ്ട്രിങ്ങിന്റെ നീളം കണ്ടുപിടിക്കാന്‍ ഉപയോഗിക്കുന്നു
വാകൃഘടന : strlen(string);

Strpos() ഒരു സ്ര്രിങ്ങിനുള്ളില്‍ മറ്റൊരു സ്ര്രിങ്ങിന്റെ ആദ്യത്തെ സ്ഥാനം കണ്ടെത്തുന്നു.
വാകൃയഘടന : strpos(string, find, start);

stremp() ആവരണ ചിഹത്തിനുള്ളില്‍ നല്‍കിയിട്ടുള്ള രണ്ടു സ്ര്രിങ്ങുകള്‍ തമ്മില്‍

താരതമ്യം ചെയ്യുന്നു

വാകൃഘടന : stremp(string1, string2);

<HIML>
<BODY>
<?php
echo "ASCII 46 is ".chr(046) ."<BR>";
echo "Length is ".strlen("Apple"™) ."<BR>";

echo "a is at ".strpos("apple", "a™) ."<BR>";
Lf (strcomp("He"™, "She™) )
echo "He and She is not same";

Mozilla Firefox

File Edit View History Bookmarks

else {J http://localhost/S-10-5-2-b.php
echo "He and She is same"; .
25 ASCII 46 is&
6 Length is 5
</BODY> ais at0O

</HTML> He and She is not same

10. PHP ഉപയോിച്ചുള്ള സെര്‍വര്‍ സൈഡ്‌ സ്ക്രിപ്റ്റിംഗ്‌

നിങ്ങളുടെ പുരോഗതി അറിയുക

1. 21117-യില്‍ array( ) ഫങ്ഷന്റെ ഉപയോഗം എന്ത്‌?
2. 11117-യിലെ വിവിധതരം ലൂപ്പുകള്‍ ഏതെല്ലാം?
3. 11117-യിലെ വിവിധതരം അറെകള്‍ ഏതെല്ലാം?

4. ചുവടെ ചേര്‍ത്തിരിക്കുന്നവയില്‍ അറെ നിര്‍മ്മിക്കുന്നതിനുള്ള ശരിയായ
പ്രസ്താവനകള്‍ എടുത്തെഴുതുക:

i. state[0] = “karnataka”;
ii. Sstate[] = array(“karnataka”) ;
tit. Sstate[0] = “karnataka”;
iv. Sstate = array(“karnataka”);

a.iii Qo iv @o b. ii @o ili ഉം Cc. മാത്രം റ. ii, 111, i എന്നിവ
5. സ്ര്രിംഗ്‌ കീകള്‍ ഉപയോഗിക്കുന്ന അറെകളെ _ എന്ന്‌ വിളിക്കുന്നു.
6. ചുവടെ ചേര്‍ത്തിരിക്കുന്ന കോഡിന്റെ ഓട്ട്പുട്ട്‌ എന്താണ്‌?
SRent = 250;

function Expenses ($Other)

{
SRent = 250 + SOther;
return $Rent;

}
Expenses (50);

echo S$Rent;
a. 300 b. 250 c. 200 d. പ്രോഗ്രാം കംപയില്‍ ചെയ്യില്ല

7, ഒരു സ്ര്രിങ്ങിന്റെ നീളം കണ്ടുപിടിക്കുന്നതിനുള്ള PHP ഫങ്ഷന്‍ ആകുന്നു.

8. ഇപ്പോഴത്തെ സമയവും തീയതിയും PHP യില്‍ നമുക്ക്‌ എങ്ങിനെ കണ്ടുപിടിക്കാം?

1. ഒരു സംഖ്യയുടെ ഫാക്ടോറിയല്‍ കാണുന്നതിനുള്ള ഫങ്ഷന്‍ 11117
ഉപയോഗിച്ച്‌ എഴുതുക. സംഖ്യ ഫങ്ഷനിലേക്ക്‌ പാരാമീറ്റര്‍ ആയി
നല്‍കണം.

നമുക്ക്‌ ചെയ്യാം 2. നടപ്പ്‌ വര്‍ഷം പ്രദര്‍ശിപ്പിക്കുന്ന ഒരു PHP പ്രോഗ്രാം എഴുതുക.

10.6 PHP-wloe ത്രിതല ഘടന (Three Tier Architecture in PHP)

11117-യിലെ ത്രിതല ഘടന ഒരു ക്ലയന്റ്‌ സെര്‍വര്‍ ഘടനയാണ്‌. ഉപയോക്തൃ സമ്പര്‍ക്ക
മുഖം (user interface), ആപ്ലിക്കേഷന്‍ പ്രോഗ്രാമുകള്‍, ഡാറ്റ സംഭരണം തുടങ്ങി വിവിധ
പ്രവര്‍ത്തനങ്ങള്‍ക്കനുസരിച്ച്‌ തട്ടുകളായി തരം തിരിച്ചിരിക്കുന്നു. ഈ തട്ടുകളുടെ തല
ങ്ങള്‍ (11൦) എന്നും വിളിക്കുന്നു. ഈ മൂന്നു തലങ്ങളും ഒരു കമ്പ്യൂട്ടറില്‍ തന്നെ സജ്ജ
മാക്കാം. എന്നാല്‍ ര്രിതല ഘടനയില്‍ സാധാരണയായി ഈ തലങ്ങളെ വൃത്യസ്ത

കമ്പ്യൂട്ടര്‍ സയന്‍സ്‌ - XII

കമ്പ്യൂട്ടറികളിലായിരിക്കും ക്രമീകരിക്കുന്നത്‌ (Fig. 10.3). ത്രിതല ഘടനയില്‍ ഒരു തട്ടില്‍
വരുത്തുന്ന മാറ്റങ്ങള്‍ മറ്റുള്ള തട്ടുകളെ ബാധിക്കുകയില്ല. വെബ്‌ അധിഷ്ഠിത ആപ്ലിക്കേ
ഷന്‍ വികസനത്തിലെ മൂന്ന്‌ തട്ടുകള്‍ അഥവാ തലങ്ങള്‍ താഴെ നല്‍കിയിരിക്കുന്നു.

പ്രോഗ്രാമിനോ ഫയലിനോ
ഫ്രേര്രാമിനു വേണ്ടി ബ്രസ URL

തലം -1 )ര്‍ തലം-2 ' തലം-3
ബ്രസര്‍/കയന്റ ! വെബ്‌ സെര്‍വര്‍ ഖാറ്റാബസ്‌
1 സെര്‍വര്‍ ഫയല്‍ വിങ്ങടുക്കുനു/ ]
1 PHP ഭ്പ്ര്രനം പ്രവര്‍ത്തിരിക്കുന്നു |
I
I ]
I ]

(mgmud HTML east രിരികെ അരക്കുന്നു.

ശ്രിരിരികുന്നു(തുധിഷ്ദരിുനു.
മൂനന്റി undone ജവന്ദിച്റ്‌
ഉരി pudaaso

ചി(ത്ം70.2- (OL ഘെ

തലം 1: ഉള്ളടക്കം അടങ്ങിയ വെബ്പേജിന്റെ Front end ബ്രൌസര്‍ പ്രദര്‍ശിപ്പിക്കുന്നു (ഉദാ:
PHP ക്ക്‌ Apache). വെബ്‌ സെര്‍വറില്‍ നിന്ന്‌ ബ്രൌസറിന്‌ ലഭിക്കുന്ന ഉള്ളടക്കത്തി
നനുസരിച്ച്‌ (111171. അല്ലെങ്കില്‍ ജാവാ സ്ക്രിപ്റ്റ്‌ ഉള്‍ക്കൊള്ളിച്ച 111141.) (ബൌസര്‍
സ്റ്റാറ്റിക്‌ അല്ലെങ്കില്‍ ഡയനാമിക്‌ പേജ്‌ നിര്‍മ്മിക്കുന്നു.

തലം 2: അപ്ലിക്കേഷന്‍ സര്‍വര്‍ അല്ലെങ്കില്‍ വെബ്‌ സര്‍വര്‍ അടങ്ങിയതും ഡൈനാമിക്‌
പ്രോസസ്സിംഗിനു വേണ്ടിയുള്ളതുമായ തലമാണിത്‌ (മധ്യതലം). ഇത്‌ ര്രൌസറില്‍ /
ക്ലയന്റില്‍ നിന്നുള്ള അഭ്യര്‍ത്ഥനകള്‍ സ്വീകരിച്ച്‌, ആവശ്യപ്പെട്ട സ്ക്രിപ്റ്റ്‌ (പവര്‍
ത്തിപ്പിക്കുകയും ഒഓട്ട്പുട്ട്‌ HTML ആയി ബ്രൌസറിലേക്ക്‌/ക്ലയന്റിലേക്ക്‌ തിരിച്ച്‌
അയക്കുകയും ചെയ്യുന്നു.

തലം 3: Back end ലെ ഈ തലത്തില്‍ പ്രധാനമായി ഉള്‍ക്കൊള്ളുന്നത്‌ ഒരു ഡാറ്റാബേസ്‌
അഥവാ ഡാഠറ്റാസ്‌റ്റോര്‍ ആയിരിക്കും (ഉദാ: 7൭൮. ടസല). ഇവിടെ ഡാറ്റയുടെ
കൂട്ടവും അത്‌ കൈകാര്യം ചെയ്യുന്ന DBMS സോഫ്ട്വെയറും ഉണ്ടായിരിക്കും.
DBMS സോഫ്ട്വെയര്‍ വെബ്‌ സെര്‍വറില്‍ നിന്നും അയച്ച SQL കമാന്റുകള്‍
മനസ്സിലാക്കുകയും അവ പ്രവര്‍ത്തിപ്പിക്കുകയും വെബ്‌ സെര്‍വറിലേക്ക്‌ ഫലങ്ങളെ
തിരിച്ച്‌ അയക്കുകയും ചെയ്യുന്നു.

HTML, MySQL, ജാവാസ്ക്രിപ്റ്റ്‌ ഉപയോഗിച്ചുള്ള ക്ലയന്റ്‌ സൈഡ്‌ സ്ക്രിപ്റ്റിംഗ്‌
എന്നിവ നമ്മള്‍ ഇതിനോടകം പഠിച്ച്‌ കഴിഞ്ഞു. PHP-o® എങ്ങിനെ ക്ലയന്റ്‌,
ഡാറ്റാബേസ്‌ എന്നിവയുമായി ബന്ധിപ്പിച്ച്‌ രിതല ഘടന സജ്ജീകരിക്കാമെന്ന്‌
അടുത്ത ഭാഗങ്ങളില്‍ നാം പഠിക്കും.

10.7 PHP ഫോമുകള്‍ (PHP Forms)

HOBIE നിന്നും വിവരങ്ങള്‍ ശേഖരിച്ച്‌ സെര്‍വറിന്‌ നല്‍കുന്നതിനായി PHP ഫോമുകള്‍
ഉപയോഗിക്കുന്നു. ടെക്സ്റ്റ്‌ ബോക്സ്‌, കോംബോ ബോക്സ്‌, ബട്ടണ്‍ മുതലായ എല്ലാ
ഫോം ഘടകങ്ങളില്‍ നിന്നും ഇന്‍പുട്ട്‌ സ്വീകരിക്കാനും അവ വേണ്ടുന്ന രീതിയില്‍
കൈകാര്യം ചെയ്യാനും 11117-ക്ക്‌ കഴിയും. സെര്‍വറിലേക്ക്‌ ക്ലയന്റ്‌ എങ്ങനെയാണ്‌
വിവരങ്ങള്‍ അയയ്ക്കുന്നത്‌, സെര്‍വറുമൊത്ത്‌ എങ്ങനെയാണ്‌ വിവരങ്ങള്‍ ശേഖ
രിക്കുന്നത്‌, എങ്ങനെ സെര്‍വര്‍ ക്ലയന്റിലേക്ക്‌ ഉത്തരങ്ങള്‍ തിരികെ അയയ്ക്കുന്നു എന്നി
വയെക്കുറിച്ച്‌ ഈ ഭാഗത്ത്‌ നാം പഠിക്കും.

ഫോമുകളുടെ പ്രവര്‍ത്തനത്തെ വിശദീകരിക്കുന്ന ഒരു ഉദാഹരണം നമുക്ക്‌ നോക്കാം.
താഴെ നല്‍കിയിരിക്കുന്ന ഉദാഹരണത്തില്‍, ക്ലയന്റ്‌ വശത്തുള്ള ര്രൌസറില്‍ പ്രദര്‍ശിപ്പിച്ച
രിക്കുന്ന ഫോമിലുള്ള ടെക്സ്റ്റ്‌ ബോക്സില്‍ ഒരു വിദ്യാര്‍ത്ഥിയുടെ രജിസ്റ്റര്‍ നമ്പര്‍
ശേഖരിക്കും (ചിത്രം 10.4). Submit ബട്ടണ്‍ അമര്‍ത്തുമ്പോള്‍, ക്ലയന്റ്‌ ഈ രജിസ്റ്റര്‍ നമ്പര്‍
സെര്‍വറിലേക്ക്‌ അയയ്ക്കുന്നു. സെര്‍വര്‍ ഈ രജിസ്റ്റര്‍ നമ്പര്‍ സ്വീകരിച്ച്‌ ഡാറ്റാബേസില്‍
(ഇവിടെ MySQL) തിരയുന്നു. ഇത്‌ കണ്ടെത്തിയാല്‍, സെര്‍വര്‍ ഡാറ്റാബേസില്‍ നിന്ന്‌
ലഭിച്ച ഡാറ്റ അടങ്ങിയിരിക്കുന്ന വെബ്‌ പേജ്‌ നിര്‍മിക്കുന്നു. കണ്ടെത്തിയില്ലെങ്കില്‍ “Wrong
Register No’ എന്ന സന്ദേശം അടങ്ങുന്ന ഒരു വെബ്‌ പേജ്‌ നിര്‍മിക്കുന്നു. ഈ വെബ്‌
പേജ്‌ പിന്നീട്‌ ക്ലയന്റിലേക്ക്‌ തിരിച്ച്‌ അയയ്ക്കുന്നു.

GOVERNWENT OF KERALA
Highse Secondary Examinansn 2014

Hest Year Imgrevenent Rewate

sue ( 2 a

SQL quer
Result set
ഹന een
Hadme Secondary ജം 2014
സാസ

പ്രതികരണം

——-__ art ത്ത ലി ———_ സെര്‍വര്‍ >

ai(Oo10.4: QWAPINJe oMVGAI Io ഇക്കുള്ള വിവത്തിമ്റെച്രഥഫം

കമ്പ്യൂട്ടര്‍ സയന്‍സ്‌ - XII

ഉപയോക്താക്കളില്‍ നിന്ന്‌ ഡാറ്റ സ്വീകരിക്കുന്നതിനുള്ള ഒരു ഫോം എങ്ങനെ സൃഷ്ടി
ക്കാമെന്ന്‌ ചര്‍ച്ചചെയ്യുന്നതിന്‌ മുമ്പ്‌ ഗ്ലോബല്‍ വേരിയബിളുകളെക്കുറിച്ച്‌ നാം മനസ്സിലാ
ക്കേണ്ടതുണ്ട്‌.

10.7.1 PHP ഗ്ലോബല്‍ വേരിയബിളുകള്‍ (1172 Global Variables)

കോഡിനുള്ളില്‍ ഏതു ഭാഗത്തു (ഫങ്ഷന്‍, ക്ലാസ്‌ അല്ലെങ്കില്‍ ഫയലിനുള്ളില്‍) നിന്നും
ഉപയോഗിക്കാവുന്നവയാണ്‌ ഗ്ലോബല്‍ വേരിയബിളുകള്‍ സാധാരണയായി ഗ്ലോബല്‍
വേരിയബിളുകള്‍ സ്ക്രിപ്റ്റിന്റെ ആദ്യ ഭാഗത്ത്‌ ഒരു ഫങ്ഷന്‍ പുറത്താണ്‌ പ്രസ്താവി
ക്കുന്നത്‌.

സൂപ്പര്‍ ഗ്ലോബല്‍ അറെകള്‍ (Super global arrays)

“സൂപ്പര്‍ ഗ്ലോബല്‍” എന്ന്‌ വിളിക്കുന്ന ചില മുന്‍നിര്‍വചിത ഗ്ലോബല്‍ അറെകള്‍ PHP-
യില്‍ ഉണ്ട്‌. സ്ര്രിപ്റ്റിന്റെ നിലവിലെ പരിധി പരിഗണിക്കാതെ അതില്‍ എപ്പോഴും ലഭ്യ
മായിട്ടുളള ഒരു പ്രത്യേക വേരിയബിളാണ്‌ സൂപ്പര്‍ഗ്ലോബല്‍ അറെ. ഓരോ സൂപ്പര്‍ഗ്ലോബ
ലിനും ഉപയോഗപ്രദമായ വ്യത്യസ്ത ലക്ഷ്യമുണ്ട്‌.

SGLOBALS ഗ്ലോബല്‍ പരിധിയില്‍ ലഭ്യമായ വേരിയബിളുകള്‍

$_SERVER സെര്‍വര്‍ സംബന്ധിച്ച വിവരം

പി HTTP GET രീതി ഉപയോഗിച്ച്‌ കൈമാറിയ ഡാറ്റ

$_ POST HTTP POST രീതി ഉപയോഗിച്ച്‌ കൈമാറിയ ഡാറ്റ

$_ REQUEST ഒരു HTTP അഭ്യര്‍ത്ഥന വഴി കൈമാറിയ ഡാറ്റ

$_FILES 803 HIML ഫയല്‍ ഉന്‍പുട്ട്‌ വഴി കൈമാറിയ ഡാറ്റ

ട SESSION ഉപയോക്താവിന്‌ ലഭ്യമായ ഇകോഴുള്ള സെഷനിലെ ഡാറ്റ

$ COOKIE ഉപയോക്താവിന്റെ ബ്രസറില്‍ ഒരു കുക്കി ആയി സൂക്ഷിച്ചിരിക്കുന്ന ഡാറ്റ

ഇവയില്‍ ചില സുപ്രധാന സൂപ്പര്‍ ഗ്ലോബലുകള്‍ ഇവിടെ നമുക്ക്‌ ചര്‍ച്ച ചെയ്യാം.
A. PHP $GLOBALS

PHP സ്ക്രിപ്റ്റില്‍ എവിടെനിന്നു വേണമെങ്കിലും ഉപയോഗിക്കാവുന്ന സൂപ്പര്‍ ഗ്ലോബല്‍
വേരിയബിളാണ്‌ $GLOBALS. എല്ലാ ഗ്ലോബല്‍ വേരിയബിളുകളും $GLOBALS [ഇന്‍ഡ
ക്സ്‌] എന്ന അറെയിലാണ്‌ PHP സൂക്ഷിക്കുന്നത്‌. ഇന്‍ഡക്സ്‌ സൂചിപ്പിക്കുന്നത്‌ വേരിയ

ബിളിന്റെ പേരാണ്‌.

SGLOBALS എന്ന സുപ്പര്‍ ഗ്ലോബല്‍ വേരിയബിള്‍ എങ്ങനെ ഉപയോഗിക്കുന്നു എന്ന്‌

ചുവടെയുള്ള ഉദാഹരണത്തില്‍ കാണിച്ചിരിക്കുന്നു.

10. PHP ഉപയോിച്ചുള്ള സെര്‍വര്‍ സൈഡ്‌ സ്ക്രിപ്റ്റിംഗ്‌

<?php

Sx = 75;

Sy = 25;

function addition() {
SGLOBALS['z'] = SGLOBALS['x'] + S$GLOBALS['y'];
}

addition(); വ Mozilla Firefox

echo $z;

os File Edit View History Bookmarks

ttp://localhost/P-10-6.php
100

മുകളില്‍ ഉളള ഉദാഹരണത്തില്‍, '2' എന്നത്‌
$GLOBALS അറെയിലെ ഒരു വേരിയബിള്‍
ആയതിനാല്‍, ഇത്‌ ഫങ്ഷന്‍ പുറമെയും
ഉപയോഗിക്കാവുന്നതാണ്‌.

3. PHP $_SERVER

തലക്കെട്ടുകള്‍, ഫയലിന്റെ സ്ഥാനം സൂചിപ്പിക്കുന്ന വഴികള്‍, സ്ക്രിപ്റ്റിന്റെ സ്ഥാനങ്ങള്‍
എന്നിവയെക്കുറിച്ചുള്ള വിവരം സൂക്ഷിക്കുന്ന ഒരു PHP സൂപ്പര്‍ ഗ്ലോബല്‍ വേരിയബി
ളാണ്‌ $ SERVER.

$ 511സഗി1-ലെ ചില ഘടകങ്ങള്‍ എങ്ങനെയാണ്‌ ഉപയോഗിക്കേണ്ടതെന്ന്‌ ചുവടെയുള്ള
ഉദാഹരണം കാണിക്കുന്നു.

<?php
echo $_SERVER['PHP_SELF'];

Mozilla Firefox
echo "<BR>";

' ' File Edit View History Bookmarks
echo $_SERVER['SERVER_NAME'] ; Ci http://localhost/P-10-7.php

echo "<BR>"; /P-10-7.php
echo $_SERVER['SCRIPT_NAME']; localhost
/P-10-7.php

?>

മുകളില്‍ ഉപയോഗിച്ച $ SERVER ഘടകങ്ങളെ ഈ പട്ടിക വിശദീകരിക്കുന്നു;

$_SERVER['PHP_SELF'] ഉഷോള്‍ പ്രവര്‍ത്തിക്കുന്ന സ്ക്രിപ്റ്റിന്റെ ഫയല്‍ നാലം തിരികെ
നല്‍കുന്നു

$ SERVER['SCRIPT NAME']  §_SERVER[PHP_SELF] പോലെ തന്നെയാണ്‌ ഉതും

കമ്പ്യൂട്ടര്‍ സയന്‍സ്‌ - XII
C. PHP $ ധ്‌

$_GET, $ POST, $ COOKIE എന്നീ സൂപ്പര്‍ ഗ്ലോബലുകള്‍ ഉള്‍ക്കൊള്ളുന്ന ഒരു അറെ
യാണ്‌ $ REQUEST സൂപ്പര്‍ ഗ്ലോബല്‍. 80} HTML ഫോം സമര്‍പ്പിച്ചതിനുശേഷം ഡാറ്റ
ശേഖരിക്കാനാണ്‌ ഇത്‌ ഉപയോഗിക്കുന്നത്‌.

പ്രോഗ്രാം 10.8(8)-യിലെ കോഡ്‌ ഇന്‍പുട്ട്‌ ഫീല്‍ഡും "Submit" ബട്ടണുമുള്ള ഒരു ഫോം
കാണിക്കുന്നു. ഒരു ഉപയോക്താവ്‌ Submit" -ല്‍ ക്ലിക്കുചെയ്ത്‌ ഡാറ്റ സമര്‍പ്പിക്കുമ്പോള്‍,
ഫോമിലെ ഡാറ്റ <FORM> ടാഗിലെ ആക്ഷന്‍ ആടഭ്രിബ്യയൂട്ടില്‍ സൂചിപ്പിക്കുന്ന ഫയലിലേക്ക്‌
അയയ്ക്കുന്നു. അപ്പോള്‍ പ്രോഗ്രാം 10.8(b) -യിലെ കോഡില്‍ ഉപയോഗിച്ചിരിക്കുന്ന സൂപ്പര്‍
ഗ്ലോബല്‍ വേരിയബിളായ $ REQUEST, ഇന്‍പുട്‌ ഫീല്‍ഡിലെ വില ശേഖരിക്കുകയും
ഈ വിലയുടെ മുന്‍പില്‍ “ഹലോ എന്ന വാചകം ചേര്‍ത്ത്‌ പ്രദര്‍ശിപ്പിക്കുകയും ചെയ്യുന്നു.

ബാക്കിയുള്ള ആശയങ്ങള്‍ വിശദീകരിക്കുന്നതിന്‌ ഇനി നമുക്ക്‌ രണ്ടു പ്രോഗ്രാം
കോഡുകള്‍ നോക്കാം. 80} HTML കോഡും ഒരു 12111 കോഡും.

യബിള്‍ പരിഭോധിക്കുന്നതിനുള്ള HTML

<HTML>
<BODY>
<FORM Method="post" Action="CheckR.php">

Name:
<INPUT Type="text" Name="fname">
Mozilla Firefox - OX
<INPUT Type="submit™ Value="Submit">[Fite edit view History Bookmarks
</FORM> CJ http://localhost/P-10-8-a.php
</BODY> Name: DHSE

| Submit

</HTML>

ടിയ ബിര്‍ പരിരോധിക്കുന്നതിനുള്ള CheckR.php

<?php
Mozilla Firefox
നേട ~ $_REQUEST [ "fname' ] 7 File Edit View History Bookmarks
echo "Hello 7" Sname; {7 http://locathost/CheckP.php
Hello DHSE
?>

D. PHP $_POST

Method = "post" എന്ന രീതിയില്‍ BO} HTML ഫോം സമര്‍പ്പിച്ചതിനു ശേഷം ഫോമിലെ
ഡാറ്റ ശേഖരിക്കാന്‍ PHP $ POST വ്യാപകമായി ഉപയോഗിച്ചു വരുന്നു.

ചുവടെയുള്ള ഉദാഹരണത്തില്‍ ഒരു ഇന്‍പുട്ട്‌ ഫീല്‍ഡും ഒരു "Submit" ബട്ടണും ഉള്ള
ഫോം കാണിച്ചിരിക്കുന്നു. ഒരു ഉപയോക്താവ്‌ "Submit" ക്ലിക്കു ചെയ്യുമ്പോള്‍ <FORM>
ടാഗിലെ ആക്ഷന്‍ അആടദ്രിബ്യയൂട്ടില്‍ കൊടുത്തിരിക്കുന്ന ഫയലിലേക്ക്‌ ഫോമിലെ ഡാറ്റ
അയയ്ക്കുന്നു. ഇപ്പോള്‍ ഇന്‍പുട്ട്‌ ഫീല്‍ഡിലെ വില ശേഖരിക്കാന്‍ $ POST എന്ന

സൂപ്പര്‍ഗ്ലോബല്‍ വേരിയബിള്‍ നമുക്ക്‌ ഉപയോഗിക്കാം.

10. PHP ഉപയോഗിച്ചുള്ള സെര്‍വര്‍ സൈഡ്‌ സ്ക്രിപ്റ്റിംഗ്‌

<HTML>
<BODY>
<FORM Method="post" Action="CheckP.php">
Name:

<INPUT Type="text" Name="fname">

<INPUT Type="submit"™ Value = "Submit">
</FORM> Mozilla Firefox
</BODY> File Edit View History Bookmarks Tools Help

</HTML> CF http://localhost/P-10-9-a.php [se
Name: |DHSE | Submit |

ക്കുന്നതിനുള്ള CheckP.php

pene illa Firefi
Sname = $_POST['fname']; Mozilla FireFox
ecine "Hello a ത File Edit View History Bookmarks
2> fe http://localhost/CheckP. php | ]
Hello DHSE
E. PHP $_GET

Method = "get" എന്ന രീതിയില്‍ ഒരു 1111. ഫോം സമര്‍പ്പിച്ചതിനു ശേഷം ഫോമിലെ
ഡാറ്റ ശേഖരിക്കാന്‍ PHP $ GET ഉപയോഗിക്കുന്നു. $ ൨1-ന്‌ URL-@ അയച്ച ഡാറ്റയും
ശേഖരിക്കാനാകും

മുകളില്‍ തന്നിരിക്കുന്ന ഉദാഹരണത്തില്‍ ഫോമിലും സ്ക്രിപ്റ്റിലും
"POST" നു പകരം "GET" ഉപയോഗിക്കുക. (Method="post" നു പകരം
Method="get"), ($name=$_POST|'fhame']; നു പകരം $name=$_GET-

നമുക്ക്‌ ചെയ്യാം ['fname'];)

താഴെ കൊടുത്തിരിക്കുന്ന ഉദാഹരണത്തിലെ പോലെ GET ല്‍ ഹൈപ്പര്‍ ലിങ്കിനോ
ടൊപ്പം പരാമീറ്ററുകളും അയയ്ക്കാവുന്നതാണ്‌.

റോട്‌ കൂടിയ ഹൈഷര്‍ ലിങ്ക്‌ പരിരോധിക്കു

<HIML>

<BODY> Mozilla Firefox

<A Href="get.php?exam=March2014éweb= File Edit View History Bookmarks
www.dhsekerala.gov.in"> Test GET</A> |} http://localhost/P-10-10-a.php

</BODY> Test GET

</HTML>

കമ്പ്യൂട്ടര്‍ സയന്‍സ്‌ - XII

"Test GET" എന്ന ലിങ്കില്‍ ഉപയോക്താവ്‌ ക്ലിക്ക്‌ ചെയ്യുമ്പോള്‍, "exam", "web" എന്നീ
പരാമീറ്ററുകള്‍ "get.php" യിലേക്ക്‌ അയക്കുന്നു. അതിനു ശേഷം "get.php"-O1@8 അവ
യുടെ വിലകള്‍ $ GET കൊണ്ട്‌ നമുക്ക്‌ ഉപയോഗിക്കാം.

<?php
echo "Find Exam Result ന. GET['exam']
echo " at ". $ GET['web'];

72> Mozilla Firefox

File Edit View History Bookmarks Tools Help
}http://localhos...sekerala.gov.in [=|

@ | @ localhost,
Find Exam Result March2014 at www.dhsekerala.gov.in

10.7.2 get, post എന്നിവയുടെ താരതമ്യം (get and post comparison)

get, post എന്നിവ രണ്ടും ഫോമില്‍ നിന്നും വെബ്‌ സെര്‍വറിലേക്ക്‌ വിവരങ്ങള്‍ അയയ്‌
ക്കുന്നതിനുള്ള രീതികളാണ്‌. രണ്ടും കീ,/വില ജോഡികള്‍ അടങ്ങുന്ന ഒരു അറെ ഉണ്ടാ
ക്കുന്നു (ഉദാഹരണം (കീ! -വിലി, കീമ “വിലാ, കീമ - വില്‌ ...)). ഇവിടെ കീകള്‍ ഫോം
കണ്‍ട്രോളുകളുടെ പേരും വിലകള്‍ ഉപയോക്താവില്‍ നിന്നുള്ള ഇന്‍പുട്ട്‌ ഡാറ്റയുമാണ്‌.

get, post എന്നി രീതികളുടെ അനുബന്ധ അറെയുടെ പേരുകള്‍ യഥാക്രമം $ GET, $
_POST എന്നിവയാണ്‌. ഇവ സുപ്പര്‍ ഗ്ലോബലുകളാണ്‌. അതായത്‌ പരിധിയില്ലാതെ എല്ലായ്‌
പ്പോഴും ഉപയോഗിക്കാന്‍ കഴിയും, പ്രത്യകിച്ച്‌ ഒന്നും ചെയ്യാതെതന്നെ ഏതെങ്കിലും
ഫങ്ഷന്‍, ക്ലാസ്‌ അല്ലെങ്കില്‍ ഫയല്‍ എന്നിവയില്‍ നിന്ന്‌ നിങ്ങള്‍ക്ക്‌ അവ ഉപയോഗി
ക്കാം.

$ GET എന്നത്‌ URL പാരാമീറ്ററുകള്‍ വഴി നിലവിലെ സ്ക്രിപ്റ്റിലേക്ക്‌ കൈമാറുന്ന
വേരിയബിളുകളുടെ ഒരു അറെ ആണ്‌.

$ POST എന്നത്‌ HTTP POST രീതി വഴി നിലവിലെ സ്ക്രിപ്റ്റിലേക്ക്‌ കൈമാറുന്ന
വേരിയബിളുകളുടെ ഒരു അറെയാണ്‌.

A. get എപ്പോള്‍ ഉപയോഗിക്കാം? (When to use get?)

get രീതി ഉപയോഗിച്ച്‌ ഒരു ഫോമില്‍ നിന്നും അയച്ച വിവരങ്ങള്‍ എല്ലാവര്‍ക്കും ദൃശ്യ
മാകും (എല്ലാ വേരിയബിളിന്റെ പേരുകളും വിലകളും URL-@ പ്രദര്‍ശിപ്പിക്കും). get ന്‌
2000 അക്ഷരങ്ങള്‍ DOMED അയക്കാന്‍ കഴിയൂ.എന്നിരുന്നാലും, 11യ.-ല്‍ വേരിയബിളുകള്‍
പ്രദര്‍ശിപ്പിച്ചിരിക്കുന്നതിനാല്‍, പേജ്‌ ബുക്ക്മാര്‍ക്ക്‌ (bookmark) ചെയ്യാന്‍ കഴിയും.
പ്രാധാന്യം കുറവായ ഡാറ്റ അയയ്ക്കാന്‍ get ഉപയോഗിക്കാവുന്നതാണ്‌.

പാസ്വേഡുകളോ അല്ലെങ്കില്‍ aq പ്രധാനകെട്ട വിവരമോ അയയ്ക്കാന്‍ GET
ഒരിക്കലും ഉപയോരിക്കരുത്‌.

10. PHP ഉപയോിച്ചുള്ള സെര്‍വര്‍ സൈഡ്‌ സ്ക്രിപ്റ്റിംഗ്‌

13. post എപ്പോള്‍ ഉപയോഗിക്കാം? (When to post?)

post രീതി ഉപയോഗിച്ച്‌ ഒരു ഫോമില്‍ നിന്ന്‌ അയയ്ക്കുന്ന വിവരം മറ്റുള്ളവര്‍ക്ക്‌ ദൃ
ശ്യമാകുകയില്ല. (എല്ലാ പേരുകളും /വിലകളും 11111” അഭ്യര്‍ത്ഥനയുടെ ഭാഗമായി ഉള്‍ക്കൊ
ള്ളിക്കുന്നു.) കൂടാതെ അയക്കുന്ന ഡാറ്റയുടെ അളവിന്‌ പരിധി ഇല്ല. ഈ രീതി സുര
ക്ഷിതമായതിനാല്‍, ഫോമില്‍ നിന്ന്‌ ഡാറ്റ അയക്കുന്നതിന്‌ മിക്ക ഡെവലപ്പര്‍മാരും post
ഉപയോഗിക്കുന്നതിന്‌ മുന്‍ഗണന നല്‍കുന്നു. എന്നിരുന്നാലും URL ല്‍ വേരിയബിളുകള്‍

പ്രദര്‍ശിപ്പിക്കാത്തതിനാല്‍, പേജ്‌ ബുക്ക്മാര്‍ക്ക്‌ ചെയ്യാന്‍ സാധ്യമല്ല.

[,-നറെ ദാനമായി ഉള്ളടക്കങ്ങള്‍ 2900 HAVO ഉള്ളടക്കം ഇന്‍പുട്ട്‌ ഫയലായി സ്ക്രിപ്റ്റുകളിലേക്ക്‌
ടുന്നതുകൊണ്ട്‌ ഡാറ്റ അധ്രസ്‌ ബാറില്‍ മൃര്യമാകും. ക്രൈമാറുന്നതിനാല്‍ ഡാറ്റ ദൃശ്യമാകില്ല

പേജ്‌ ലിങ്ക്‌ ബുക്ക്മാര്‍ക്ക്‌ ചെയ്യാന്‍ കഴിയും പേജ്‌ ലിങ്ക്‌ ബുക്ക്മാര്‍ക്ക്‌ ചെയ്യാന്‍ കഴിയില്ല

111൮.-ന്റെ ദാനമായി ഡാറ്റ സാര്‍ഷിക്കുന്നു. HTTP അദ്യര്‍ത്ഥനയുടെ ഭാഗമായി ഡാറ്റ made
ക്കുന്നു.
വേഗത്തിലാണ്‌ ഡാറ്റ അയക്കുന്നതെങ്കിലും സുരക്ഷി ഡാറ്റ അയയ്ക്കല്‍ സുരക്ഷിതമാണ്‌, എന്നാല്‍ ഉ-നെ
mae. അപേക്ഷിച്ച്‌ EeAOM കുറവാണ്‌.
get-M 2000 അക്ഷരങ്ങള്‍ മാ(്രമേ അയക്കാന്‍ ഡാറ്റ അയക്കുന്നതിന്‌ പരിധിയില്ല
കഴിയു.

പ്രോജക്റ്റ്‌ (Project)

ഒരു ഫോം എങ്ങനെ ഉപയോക്താവില്‍ ക്ലയന്റില്‍ നിന്നും ഡാറ്റ ശേഖരിക്കുന്നു, അത്‌
എങ്ങനെ സെര്‍വറിലേക്ക്‌ അയയ്ക്കുന്നു (സമര്‍പ്പിക്കുന്നു), എങ്ങനെ സെര്‍വര്‍ ഉപയോ
ക്താവിന്‌/ ക്ലയന്റിന്‌ ഫലങ്ങള്‍ തിരികെ അയയ്ക്കുന്നു എന്നൊക്കെ നമുക്ക്‌ ഇപ്പോള്‍
അറിയാം. വെബ്‌ പ്രോഗ്രാമിങ്ങിനെക്കുറിച്ച്‌ നാം പഠിച്ച കാര്യങ്ങള്‍ വിശദീകരിക്കുന്ന
ഒരു പ്രോജക്റ്റ്‌ പ്രവര്‍ത്തനക്ഷമമാക്കി കൊണ്ട്‌ നമുക്ക്‌ ഇത്‌ ക്രോഡീകരിക്കാം.

രജിസ്റ്റര്‍ നമ്പര്‍, പേര്‌, മുന്ന്‌ വിഷയത്തിന്റെ മാര്‍ക്കുകള്‍ (100-ല്‍) എന്നിവ സ്വീകരിക്കു
ന്നതിനുള്ള ഒരു ഫോം സൃഷ്ടിക്കുകയും, അത്‌ സെര്‍വറിലേക്ക്‌ സമര്‍പ്പിക്കുകയും ചെ
Qh. സെര്‍വറില്‍ പ്രവര്‍ത്തിക്കുന്ന സ്ക്രിപ്റ്റ്‌ ഈ ഡാറ്റ സ്വീകരിച്ച്‌ ഫലം കണ്ടെത്തി
തിരികെ ക്ലയന്റിലേക്ക്‌ അയക്കുന്നു. പരീക്ഷ ജയിക്കുന്നതിന്‌ ഒരു വിദ്യാര്‍ഥിക്ക്‌ ഓരോ
വിഷയത്തിലും കുറഞ്ഞത്‌ 40 മാര്‍ക്ക്‌ ലഭിക്കണം. ആകെ മാര്‍ക്ക്‌ <150 ആണ്‌ എങ്കില്‍
“വിജയിച്ചു, ആകെ DIWWAD> = 150-ഉം <180-Qo ആയാല്‍ “സെക്കന്‍ഡ്‌ ക്ലാസ്‌, ആകെ
മാര്‍ക്ക്‌ട. = 180-ഉം <225-DQo ആയാല്‍ “ഫസ്റ്റ്‌ ക്ലാസ്സ്‌, ആകെ മാര്‍ക്ക്‌: = 225 ആണ്‌ എങ്കില്‍
“ഡിസ്റ്റിങ്ഷന്‍.

</HTML>
</BODY>
<FORM

Reg

Nam
<
Mar
<

Mar

<

</FORI
</BODY>
</HTML>

<?php
സി =
Sm2 =
$m3 =
Stmarks = നി + ന + Sm3;
if (($m1<40) || (S$m1<40) || ($m1<40))
Sresult = "Failed";

ethod="post™ Action="Result.php">
ister No:

PUT Type="text" Name="regno"> <BR>
൭... ഃ
PUT Type="text" Name="sname"> <BR>
I= Doom 8
PUT Type="text" Name="mark1"> <BR>
T= Zoro 8
PUT Type="text" Name="mark2"> <BR>
T= Shoo 8

PUT Type="text" Name="mark3"> <BR>

PUT Type="submit" Value="Show Result">

Mozilla Firefox

File Edit View History Bookmarks Tools
Chttp://localhost/P-10-11-a.html_ [9]

Register No.: 2068734

‘Result.PHP

$ POST ['mark1'];
$ POST ['mark2'];
$ POST ['mark3'];

10. PHP ഉപയോിച്ചുള്ള സെര്‍വര്‍ സൈഡ്‌ സ്ക്രിപ്റ്റിംഗ്‌

elseif (Stmarks < 150)

Mozilla Firefox

Sresult = "Passed"; File Edit View History Bookmarks

elseif ($tmarks < 180) (J http://locathost/result.php |
Sresult = "Second Class";

elseif ($tmarks < 225) Register No.: 2068734
Sresult = “First Class"; :

else
Sresult = "Distinction";

echo "<BR> Register No.: " . $ POST ['regno'];

echo “<BR> 1പ്ട൩5...................ംംം g Wo. $ POST ['sname'];

echo "<BR> Total Marks.: " . Stmarks;

echo "<BR> RESUL Ceres : ന. Sresult;

2>

രജിസ്റ്റര്‍ നമ്പര്‍ സ്വീകരിക്കുന്നതിനും "display.php"-Oiee16s സമര്‍പ്പി
ക്കുന്നതിനുള്ള ഒരു HTML ഫോം നിര്‍മിക്കുക. display.php ലഭിച്ച
രജിസ്റ്റര്‍ നമ്പര്‍ (ബൌസറില്‍ പ്രദര്‍ശിപ്പിക്കണം.
നമുക്ക്‌ ചെയ്യാം മേല്‍ പറഞ്ഞ പ്രവര്‍ത്തനങ്ങള്‍ get രീതി ഉപയോഗിച്ച്‌ ചെയ്യുക
a. ഫോം സമര്‍പ്പിച്ചതിന്‌ ശേഷം ധ്രൌസറിലെ അഡ്രസ്‌ ബാറിലെ [11ഡ.
എടുത്തെഴുതുക
0. ഫോം സമര്‍പ്പിച്ചതിനുശേഷം ബുക്മാര്‍ക്‌ ചെയ്യുക. ബുക്മാര്‍ക്‌ ഉപയോഗിച്ച്‌
ഫോം തിരികെ എടുക്കുക.
get -M} പകരം post ഉപയോഗിച്ച്‌ മേല്പറഞ്ഞ പ്രവര്‍ത്തനങ്ങള്‍
ആവര്‍ത്തിക്കുക

10.8 11117-യെ ഡാറ്റാബേസുമായി (MySQL) ബന്ധിഷിക്കദുക (Connecting
PHP to Database)
സ്റ്റാറ്റിക്‌ വെബ്‌ പേജുകള്‍ (നമ്മള്‍ നിര്‍മ്മിക്കുന്ന സാധാരണ പേജുകള്‍?) എപ്പോഴും ഒരു
പോലെ ആയിരിക്കും. നാം ഒരു പുതിയ പേജ്‌ ലോഡ്‌ ചെയ്യുന്നതു വരെ അതിന്റെ ഉള്ള
ടക്കം മാറുന്നില്ല. ഡൈനാമിക്ക്‌ പേജുകള്‍ നേരെ വിപരീതമാണ്‌, അവ ലോഡ്‌ ചെയ്യുമ്പോ
ഴെല്ലാം ഉള്ളടക്കം മാറുന്നു. കൂടാതെ ഉപയോക്താക്കള്‍ എന്തു ചെയ്യുന്നുവെന്നതിനെ
അടിസ്ഥാനമാക്കി (ചില ബട്ടണില്‍, വാക്കുകളില്‍ അല്ലെങ്കില്‍ ഇമേജില്‍ ക്ലിക്ക്‌ ചെയ്യുക
വഴി) അവയുടെ ഉള്ളടക്കം മാറ്റാന്‍ കഴിയും. ആരെങ്കിലും വിവരങ്ങള്‍ ആവശ്യപ്പെടുമ്പോഴെ
ല്ലാം ഡൈനാമിക്‌ വെബ്‌ സൈറ്റ്‌ ഓരോ തവണയും ഒരു പുതിയ വെബ്‌ പേജ്‌ സൃഷ്ടിക്കുന്നു.
അഭ്യര്‍ത്ഥനയുടെ അടിസ്ഥാനത്തില്‍ ഒരു വെബ്‌ പേജ്‌ ടെംപ്പേറ്റിലേക്ക്‌ ഡാറ്റാബേസില്‍
നിന്ന്‌ വിവരങ്ങള്‍ എടുത്തുകൊണ്ട്‌ വെബ്‌ സെര്‍വറില്‍ ഒരു വെബ്‌ പേജ്‌ നിര്‍മ്മിക്കപ്പെടുന്നു.

ഇത്‌ 80} HTML പേജായി ബ്രൌസറിലേക്ക്‌ അയക്കുന്നു. പ്രോഗ്രാമര്‍ ഒരു സെര്‍വര്‍ സൈഡ്‌
സ്ക്രിപ്റ്റിംഗ്‌ ഭാഷ ഉപയോഗിച്ച്‌ എഴുതിയ നിര്‍ദ്ദേശങ്ങള്‍ പാലിച്ചുകൊണ്ടാണ്‌ വെബ്‌
സെര്‍വര്‍ ഈ വെബ്‌ പേജ്‌ സൃഷ്ടിക്കുന്നത്‌.

കമ്പ്യൂട്ടര്‍ സയന്‍സ്‌ - XII

ചിത്രം 10.5: (ഖ൭൩൪൧൧൧ ഡഗ്റബര്‌ഇവ തമിലുള്ള മ്പരീക്കം

ഒരു ഡാറ്റാബേസ്‌ ഉപയോഗപ്പെടുത്തിയ "kerala results.nic.in" വെബ്സൈറ്റിന്റെ ഒരു
ഉദാഹരണം മുന്‍പ്‌ ചര്‍ച്ച ചെയ്തിട്ടുണ്ട്‌ (ചിത്രം 10.5 കാണുക). ഹയര്‍ സെക്കണ്ടറി പരീക്ഷ
ഫലങ്ങള്‍ പ്രസിദ്ധീകരിക്കുന്ന പല വെബ്‌ സൈറ്റുകളില്‍ ഒന്നാണ്‌ ഇത്‌. ഈ സ്റ്റ്റിന്റെ
സെര്‍വറില്‍ ഒരു അക്കാദമിക വര്‍ഷം പരീക്ഷയില്‍ പങ്കെടുത്ത എല്ലാ വിദ്യാര്‍ഥികളുടെയും
പരിക്ഷ ഫലങ്ങള്‍ ശേഖരിക്കുന്ന ഒരു ഡാറ്റാബേസ്‌ അടങ്ങിയിരിടുന്നു. ഒരു ഫോം (ക്ലയന്റ്‌
ഭാഗം?) വഴി റജിസ്റ്റര്‍ നമ്പര്‍ സമര്‍പ്പിക്കുമ്പോള്‍, അത്‌ വെബ്‌ സെര്‍വറില്‍ എത്തുന്നു. വെബ്‌
സെര്‍വര്‍ ഇത്‌ PHP പ്രോഗ്രാമിന്‌ കൈമാറുന്നു. PHP പ്രോഗ്രാം SQL പ്രസ്താവന വഴി
രജിസ്ടര്‍ നമ്പരുമായി ബന്ധപ്പെട്ട ഡാറ്റക്കുവേണ്ടി ഡാറ്റാബേസ്‌ സെര്‍വറിനോട്‌ അഭ്യര്‍
ഥിക്കുന്നു (SELECT * FROM marks WHERE regno= 2056789 എന്നത്‌ പോലെ). ഡാറ്റാ
ബേസില്‍ നിന്നും ഈ രജിസ്ടര്‍ നമ്പറിനായി ഡാറ്റാബേസ്‌ സെര്‍വര്‍ തിരയുകയും
അനുബന്ധ ഡാറ്റ (പരീക്ഷാ ഫലം) തിരികെ 1110-ലേക്ക്‌ നല്‍കുകയും ചെയ്യുന്നു. PHP
പ്രോഗ്രാം, 11111. ഉപയോഗിച്ച്‌ ഉചിതമായി ഫോര്‍മാറ്റ്‌ ചെയ്ത വെബ്‌ പേജ്‌ തയ്യാറാക്കുകയും
അതില്‍ തിരിച്ചുകിട്ടിയ വിവരങ്ങള്‍ ഉള്‍ക്കൊള്ളിക്കുകയും ചെയ്യുന്നു. പുതുതായി സൃഷ്ടിച്ച
വെബ്‌ പേജ്‌ വെബ്‌ സെര്‍വര്‍ ക്ലയന്റിനു തിരിച്ചു നല്‍കുന്നു.

മുന്‍ അധ്യായങ്ങളിലെ (ഡാറ്റാബേസ്‌ നിയ്ര്ത്രണ സംവിധാനം, സ്ര്രക്ച്ചേര്‍ഡ്‌ ക്വറി
ലാന്‍ഗ്വേജ്‌) ചര്‍ച്ചകളില്‍ നിന്നും, SQL പ്രസ്താവനകള്‍ ഉപയോഗിച്ച്‌ ഡാറ്റാബേസുമായി
എങ്ങനെ ഇടപെടണമെന്ന്‌ നമുക്ക്‌ അറിയാം. ഈ ഭാഗത്ത്‌, ഒരു PHP പ്രോഗ്രാം ഉപയോ
ഗിച്ച്‌ അതെല്ലാം ചെയ്യാനും, കൂടാതെ വീണ്ടെടുക്കപ്പെട്ട ഡാറ്റ 1117,11.-ലുമായി കൂട്ടി
ച്ചേര്‍ത്ത്‌ ഡൈനാമിക്‌ വെബ്‌ പേജുകള്‍ സൃഷ്ടിക്കാനും നമ്മള്‍ പഠിക്കും.

10.8.1 MySQL ഡാറ്റാബേസുമായി ബന്ധം സ്ഥാപിക്കുന്നു ( Establishing connection
to MySQL database)

ഒരു PHP പ്രോഗ്രാമിന്‌ ഡാറ്റാബേസില്‍ നിന്നും ഡാറ്റ എടുക്കുന്നതിന്‌, ആദ്യം പ്രോഗ്രാമും
ഡാറ്റാബേസ്‌ സര്‍വറുമായി (ഇവിടെ MySQL) ബന്ധം സ്ഥാപിക്കുകയും ശേഷം
ഉപയോഗിക്കേണ്ട ഡാറ്റാബേസ്‌ ഏതാണെന്ന്‌ വ്യക്തമാക്കുകയും വേണം. ഇതിനുശേഷം
മാത്രമേ PHP പ്രോഗ്രാമിന്‌ SQL ക്വറികള്‍ (Queries) ഡാറ്റാബേസിന്‌ നല്‍കാന്‍
സാധിക്കുകയുള്ളൂ.

MySQL ഡാറ്റാബേസുമായി ബന്ധം സ്ഥാപിക്കുന്നത്‌ മുന്ന്‌ ഘട്ടങ്ങളിലൂടെയാണ്‌.:

1. 141൭൮.-മായി ബന്ധം സ്ഥാപിക്കുക

10. PHP ഉപയോിച്ചുള്ള സെര്‍വര്‍ സൈഡ്‌ സ്ക്രിപ്റ്റിംഗ്‌

2. നമ്മള്‍ ഉപയോഗിക്കാന്‍ ആഗ്രഹിക്കുന്ന ഡാറ്റാബേസ്‌ ഏതെന്ന്‌ വൃക്തമാക്കുക.
3. ഡാറ്റ വീണ്ടെടുക്കുക അല്ലെങ്കില്‍ ഡാറ്റാബേസിലേക്ക്‌ ഡാറ്റ ചേര്‍ക്കുക
ഘട്ടം 1 - MySQL-a901 ബന്ധം സ്ഥാപിക്കുക (Open a connection to MySQL)
PHP-@30 MySQL ഡാറ്റാബേസ്‌ സെർവറും തമ്മില്‍ ഒരു ബന്ധം സ്ഥാപിക്കാന്‍ MySQL
_connect () ഫംഗ്ഷന്‍ ഉപയോഗിക്കുന്നു. ഇത്‌ മൂന്ന്‌ സ്ര്രിംഗ്‌ ആര്‍ഗ്യുമെന്റുകള്‍, സ്വീകരി
ക്കുന്നു. ഹോസ്റ്റ്‌ / സെര്‍വര്‍ പേര്‌, ഉപയോക്തയനാമം (User name), പാസ്സ്‌വേര്‍ഡ്‌. നിര്‍ദ്ദിഷ്ട

MySQL സെര്‍വറിലേക്ക്‌ വിജയകരമായി ബന്ധം സ്ഥാപിച്ച്‌ കഴിയുമ്പോള്‍ ഫംഗ്ഷന്‍
ഒരു ANB തിരികെ നല്‍കുന്നു. എന്തെങ്കിലും പിഴവ്‌ സംഭവിച്ചാല്‍ NULL എന്ന്‌ ലഭിക്കുന്നു.

$link_id = mysql_connect ("local host", "User ID", "Password")

p ) വിശദീകരിക്കുന്ന സ്ക്രിപ്റ്റ്‌ Connect.PHP

<?php
Suser_name = "root"; //Initialising variables
Spassword = "root";
S$server = "localhost";

//Connecting to MySQL database server
$db_handle = mysql_connect ($server,$user_name, $password) ;
if (!$db_handle) {
die('Could not connect: ' . mysql _error());
}
echo 'Connected successfully';
mysql_close ($db_handle);
2>
പ്രോഗ്രാം 10.12 ല്‍, ആദ്യത്തെ മൂന്നു വരികള്‍ വേരിയബിളുകള്‍ സങ്ജമാക്കുന്നതിനുള്ള
താണ്‌. ഈ ഉദാഹരണത്തില്‍ ഉപയോക്തൃ നാമവും പാസ്സ്വേര്‍ഡും "root" എന്നാകുന്നു.
Suser_ name="root";
Spassword="root";
Sserver="localhost";
MySQL മായി ബന്ധം സ്ഥാപിക്കുന്ന നിര്‍ദേശമാണ്‌ ചുവടെ ചേര്‍ക്കുന്നത്‌
mysql connect ($server, $user name, $password);

mysql_connect ലേക്കുള്ള പരാമീറ്ററുകള്‍ നേരിട്ട്‌ നല്‍കാനും സാധിക്കും. പ്രസ്താവന
ശ്രദ്ധിക്കുക

mysql connect( 'localhost', 'root', 'root' );

കമ്പ്യൂട്ടര്‍ സയന്‍സ്‌ - XII

തെറ്റായ പാസ്സ്‌വേര്‍ഡ്‌ ഉപയോഗിച്ച്‌ മുകളിലുള്ള ഉദാഹരണം പ്രവര്‍ത്തി
പ്പിച്ച്‌ ഓട്ട്പുട്ട്‌ പരിശോധിക്കുക
നമുക്കു ചെയ്യാം
ഘട്ടം 2 - നിങ്ങള്‍ക്ക്‌ ഉപയോഗിക്കേണ്ട ഡാറ്റാബേസിന്റെ പേര്‍ വ്യക്തമാക്കുക (Specify
the database you want to open)

MySQL ഡാറ്റാബേസ്‌ സെര്‍വറില്‍ ധാരാളം ഡാറ്റാബേസുകള്‍ ഉണ്ടായിരിക്കാം. mysql_
select_db() ഫങ്ഷന്‍ ഉപയോഗിച്ച്‌ അവയില്‍ നിന്നും ഒരു പ്രത്യേക MySQL ഡാറ്റാബേസ്‌
തിരഞ്ഞെടുക്കാം. ഡാറ്റാബേസിന്റെ പേര്‌, ഒരു ലിങ്ക: ഐഡന്റിഫയര്‍ എന്നിവ സ്ട്രിംഗ്‌
രൂപത്തിലുള്ള ആര്‍ഗ്യുമെന്റായി ഇത്‌ സ്വീകരിക്കുന്നു. ഡാറ്റാബേസ്‌ കണ്ടെത്തുന്നുവെങ്കില്‍,
True ഉം അല്ലാത്തപക്ഷം False ഉം അത്‌ തിരികെ നല്‍കുന്നു.

mysql select _db($database) ;

ിരദീകരിക്കുന്ന സ്ക്രിപ്റ്റ്‌ (DBConnect.PHP)

<?php
Suser_ name = "root";
Spassword = "root";
Sserver = "localhost";
Sdatabase = "mysql"; //initializing variable

$db_handle = mysql_connect ($server,$user_name, $password) ;
if (!$db_handle) {
die('Could not connect: ' . mysql _error());
}
echo 'Connected successfully';
//Opening the database mysql
$db_ found = mysql_select_db(S$database) ;
if ($db_found) {
echo "Database Found";
}
else {
echo "Database NOT Found";
}
mysql_close ($db_ handle);

>

ഇവിടെ ഒരു പ്രസ്താവന ഉപയോഗിച്ച്‌ $database എന്ന വേരിയബിളിലേക്ക്‌ നമ്മുടെ
ഡാറ്റാബേസിന്റെ പേര്‌ നല്‍കിയിരിക്കുന്നു

10. PHP ഉപയോിച്ചുള്ള സെര്‍വര്‍ സൈഡ്‌ സ്ക്രിപ്റ്റിംഗ്‌

Sdatabase = "mysql";
ചുവടെ ചേര്‍ത്തിരിക്കുന്ന പ്രസ്താവന ഉപയോഗിച്ച്‌ ഡാറ്റാബേസ്‌ തുറക്കുന്നു
$db_found = mysql select ഖാ (ദ്ദ ലാദടട) ;
ഇപ്പോള്‍ സജീവമായ ബന്ധമാണ്‌ ഉപയോഗിക്കുന്നുവെന്ന്‌ ഇവിടെ നാം അനുമാനിക്കു
ന്നു. മറ്റൊരു ബന്ധം ഉപയോഗിക്കേണ്ടി വരുമ്പോള്‍ ഡാറ്റാബേസ്‌ തുറക്കുന്നതിനു താഴെ
പറയുന്ന പ്രസ്താവനയും ഉപയോഗിക്കാം. ഇവിടെ രണ്ടാമത്തെ പരാമീറ്ററായി
ഉപയോഗിക്കുന്നത്‌ ബന്ധത്തിന്റെ റിസോഴ്‌സ്‌ ലിങ്കു ഐഡന്റിഫയര്‍ ആയിരിക്കും.
$db_found = mysql_select_db($database, $db_handle);
ഇപ്പോള്‍ നമ്മള്‍ സെര്‍വറിലേക്ക്‌ ബന്ധം സ്ഥാപിക്കുകയും ആവശ്യമായ ഡാറ്റാബേസ്‌
തിരഞ്ഞെടുക്കുകയും ചെയ്തു. ഇനി ഡാറ്റാബേസിനുള്ളില്‍ ഡാറ്റ തിരയല്‍ ആരംഭിക്കു
കയും ഡൈനാമിക്‌ വെബ്‌ പേജുകള്‍ സൃഷ്ടിക്കുകയും വേണം.

ഘട്ടം 3 - ഡാറ്റാബേസില്‍ നിന്ന്‌ ഡാറ്റ വീണ്ടെടുക്കുക (Reading data from database)

ഡാറ്റാബേസില്‍ നിന്ന്‌ ഡാറ്റ വീണ്ടെടുക്കുന്നത്‌ രണ്ട്‌ ഘട്ടങ്ങളിലാണ്‌

a. ൩801 സ്ര) ഫങ്ഷന്‍ ഉപയോഗിച്ച്‌ ഡാറ്റാബേസില്‍ SQL ക്വറി പ്രവര്‍ത്തിപ്പിക്കുക.

0. mysql_fetch_array() ഫങ്ഷന്‍ ഉപയോഗിച്ച്‌ നിരകളെ (Rows) ഒരു അറെയിലേക്ക്‌ മാറ്റുക.

ഈ അറെ ഉപയോഗിച്ചാണ്‌ PHP പ്രോഗ്രാം ഡാറ്റ കൈകാര്യം ചെയ്യുന്നത്‌.

a. mysql_query()

ഡാറ്റാബേസില്‍ SQL ക്വറി പ്രവര്‍ത്തിപ്പിക്കുന്നത്‌ mysql_query() ഫങ്ഷന്‍ ഉപയോഗിച്ചാണ്‌.

ഇത്‌ ഡാറ്റാബേസിലേക്ക്‌ ക്വറി അയക്കുകയും പ്രവര്‍ത്തനം ഫലപ്രദമായാല്‍ ഒരു

റിസോര്‍സ്‌ ഇനം AIO] ഹാന്‍ഡില്‍ തിരികെ ലഭിക്കുകയും ചെയ്യുന്നു.

$result_set = mysql_query(query, connection)

¢ SELECT, SHOW, DESCRIBE അല്ലെങ്കില്‍ EXPLAIN agan1SQL പ്രസ്താവനകള്‍ക്ക്‌,

mysql_query () വിജയകരമായാല്‍ ഒരു റിസോഴ്സ്‌ ഇനം ക്വറി ഹാന്‍ഡില്‍ തിരികെ

നല്‍കുന്നു, തെറ്റ്‌ സംഭവിച്ചാല്‍ FALSE ലിനു രജിസ്റ്റര്‍ നമ്പര്‍ സ്വീകരിക്കുന്നതിനുള്ള ഫോ
* മറ്റ്‌ തരം SQL പ്രസ്താവനകളായ, 11212211, 1011 1:11, DROP തുടങ്ങിയവയ്ക്കായി,

mysql_query() വിജയകരമായാല്‍ TRUE ഉം അല്ലാത്തപക്ഷം 11.51: ഉം തരുന്നു.

€ ക്വറിയില്‍ സൂചിപ്പിച്ച ടേബിളുകള്‍ ഉപയോഗിക്കുന്നതിനു ഉപയോക്താവിന്‌ അനുമതി
യില്ലെങ്കില്‍ mysql _query() പരാജയപ്പെടുകയും FALSE തിരികെ ലഭിക്കുകയും ചെയ്യും

€ ഡാറ്റ വീണ്ടെടുക്കുന്നതിന്‌ തിരികെ ലഭിച്ച ഫലം ഭവി fetch_ array() യിലേക്ക്‌
കൈമാറുന്നു.
ഒരു SELECT പ്രസ്താവന എത്ര വരികള്‍ തിരികെ നല്‍കിയെന്ന്‌ കണ്ടു
പിടിക്കാന്‍ mysql _num_rows() ഉപയോഗിക്കുന്നു. DELETE, INSERT,
REPLACE അല്ലെങ്കില്‍ UPDATE പ്രസ്താവന എത്ര വരികളെ
ബാധിച്ചു എന്ന്‌ കണ്ടുപിടിക്കാന്‍ mysql 7൦0190 7്ഭ() ഉപയോഗി
ക്കുന്നു.

b. mysql_fetch_arrayQ

MySQL റിസള്‍ട്ട്‌ ഹാന്‍ഡിലില്‍ നിന്നും mysql_fetch_array() ഉപയോഗിച്ച്‌ ഡാറ്റ വരികള്‍
അറെയായി ലഭ്യമാക്കുന്നു. mysql _query() ഫങ്ഷന്‍ നല്‍കിയ റിസള്‍ട്ട്‌ ഹാന്‍ഡില്‍ ഒരു

കമ്പ്യൂട്ടര്‍ സയന്‍സ്‌ - XII

പരാമീറ്ററായി സ്വീകരിക്കുകയും വീണ്ടെടുത്ത നിരകളെ അറെ രൂപത്തില്‍ തിരികെ തരു
കയും ചെയ്യുന്നു. ഈ അറെ ഒരു അസ്സോസിയേറ്റീവ്‌ അറെയോ അഥവാ ന്യൂമെറിക്‌
അറെയോ അതുമല്ലെങ്കില്‍ ഇവ രണ്ടുമോ ആകാം. ഇനി ഡാറ്റ നിരകള്‍ ഒന്നുംതന്നെ
വീണ്ടെടുക്കാന്‍ അവശേഷിക്കുന്നില്ലെങ്കില്‍ False തിരികെ നല്‍കുന്നു.
$result_set = mysql _query(query, connection);

$fetched_row = mysql fetch _array($result_set);

നിലവിലില്ലാത്ത ഡാറ്റാബേസ്‌ നാമം ഉപയോഗിച്ച്‌ പ്രോഠ്രഗാം 10. 13
പ്രവര്‍ത്തിപ്പിച്ച്‌ ലഭിക്കുന്ന ഓട്ട്പുട്ട്‌ ശ്രദ്ധിക്കുക

നമുക്കു ചെയ്യാം

താഴെ കൊടുത്തിരിക്കുന്ന രണ്ട്‌ ഉദാഹരണങ്ങളുടെ സഹായത്തോടെ ഈ രണ്ട്‌ ഫങ്ഷനു
കളുടെ പ്രവര്‍ത്തനത്തെ വിശദീകരിക്കാനാകും.

താഴെ പറയുന്ന പ്രോഗ്രാം (പ്രോഗ്രാം 10.14) ഫോം ഉപയോഗിച്ച്‌ ഒരു രജിസ്റ്റര്‍ നമ്പര്‍
സ്വീകരിച്ച്‌ showmarks.phpceies സമര്‍പ്പിക്കുന്നു. MySQL ഡാറ്റാബേസിലെ മാര്‍ക്കുക
ളുടെ പട്ടിക PHP പ്രോഗ്രാം തിരയുകയും, അവ

ലഭിച്ചാല്‍ ഈ ഡാറ്റ അടങ്ങിയ വെബ്‌ പേജ്‌ ! ഫീല്‍ഡ്‌ നാമം ഡാറ്റ ഇനം
സൃഷ്ടിക്കുകയും ചെയ്യുന്നു. Number
കുറിപ്പ്‌, പ്രോഗ്രാമുകള്‍ 10.14-Qo 10.15-ഉം ചെയ്യു Char (20)
ന്നതിനു മുന്‍പ്‌, "mysql" എന്നുള്ള ഡാറ്റാബേ Char(20)
സില്‍ താഴെ കൊടുത്തിരിക്കുന്ന ഘടനയില്‍
"Marks" എന്നു പേരുള്ള ഒരു പട്ടിക (Table) ഉണ്ടാ
ക്കുക. അതില്‍ കുറച്ച്‌ ഡാറ്റ നല്‍കുക (ഗ്രുപ്പ്‌ നാമം
കൊമേഴ്‌സ്‌/സയന്‍സ്‌ ആയിരിക്കണം).

നി

<HTML>
<BODY>

<FORM Method="post" Action="showmarks.php">
Register No:

Number
Number
Number

<INPUT Type="text™ name="regno"> <BR>
<INPUT Type="submit" Value="Show Result">

</FORM> Mozilla Firefox
</BODY> File Edit View History Bookmarks Tools
</HTML> CThttp://localhost/P-10-14.php [18]

Register No:
Show Result

10. PHP ഉപയോിച്ചുള്ള സെര്‍വര്‍ സൈഡ്‌ സ്ക്രിപ്റ്റിംഗ്‌

രിഷിക്കുന്നതിനുമുള്ള സ്ക്രിപ്റ്‌ showmarks.php

<?php

Suser name = "root";
Spassword = "root";
Sserver = "localhost";

Sdatabase = "mysql";
$regno = 9 POST['regno'];
$db_ handle = mysql_connect ($server, $user name, $password) ;
if (!$db_handle) {
die("Could not connect: - mysql_error());}
$db_found = mysql_select_db($database, $db_handle);
if (വാ found) { //Retrieving data from database
SSQL = "SELECT * FROM marks WHERE regno = '".$regno."'";
$result_set = mysql _query($SQL);
$record = mysql_fetch_array($result_set);
echo "<BR>MARK LIST";
echo

echo "<BR>Reg. No.:".Srecord['regno'];
echo "<BR>Name

echo "<BR>Group...:".$record['sgroup'];
echo "<BR>Mark-1..:".$record['markl1'];
echo "<BR>Mark-2..:".Srecord['mark2'];
echo "<BR>Mark-3..:".Srecord['mark3'];

echo "<BR>Result..:". compute result ($record['mark1'],
Srecord['mark2'], Srecord['mark3']);

}
else

{echo "<BR>Database NOT Found"; }
mysql_close ($db_handle);
//Function to calculate result
function compute result (സി, സ്ഥ, $m3)
{ Stmarks = ബി + $m2 + $m3;

if (($m1<40) || (Sm1<40) || ($m1<40))
Sresult = "Failed";
elseif (S$tmarks < 150)
Sresult = "Passed";
elseif (Stmarks < 180)
Sresult = "Second Class";
elseif (Stmarks < 225)
Sresult = "First Class";
else :Science
Sresult = "Distinction"; 8
return Sresult; “80

2> ...:Distinction
കമ്പ്യൂട്ടര്‍ സയന്‍സ്‌ - XII

ദീര്‍ഘചതുരത്തില്‍ ഉള്‍പ്പെടുത്തിയ കോഡ്‌ നിരീക്ഷിക്കുക. ഡാറ്റാബേസില്‍ നിന്ന്‌ ഡാറ്റ
ലഭിക്കുന്നതിന്‌ ഈ ഭാഗം ഉപയോഗിക്കുന്നു. നമുക്ക്‌ പ്രവര്‍ത്തിപ്പിക്കേണ്ട ക്വറി പ്രസ്താ
വന $SQL എന്ന വേരിയബിളിലേക്ക്‌ പ്രാരംഭവിലയായി ഇവിടെ കൊടുത്തിരിക്കുന്നു.
mysql_query ൪5൮.) എന്ന അടുത്ത പ്രസ്താവന പ്രവര്‍ത്തിപ്പിക്കുകയും Sresult_set എന്ന
വേരിയബിളില്‍ സൂക്ഷിച്ചിരിക്കുന്ന ഫലം തിരികെ നല്‍കുകയും ചെയ്യുന്നു. Sresult_set,
mysql_fetch_array (5 result_set) ലേക്ക്‌ കൈമാറുന്നു. അത്‌ Sresult_set നല്‍കിയ ഡാറ്റ
ഉപയോഗിച്ച്‌ ഒരു അസോസിയേറ്റ്‌ GOO ഉണ്ടാക്കി തിരികെ നല്‍കുന്നു. ഫങ്ഷന്‍ തിരിച്ചു
നല്‍കിയ അറെ 57900 എന്ന വേരിയബിളില്‍ സൂക്ഷിക്കുന്നു. ഇതില്‍ നിന്നും വിവരങ്ങള്‍
എടുക്കുവാന്‍ ഫീല്‍ഡ്‌ നാമം ഇന്‍ഡക്സ്‌ ആയി നല്‍കണം, അതായത്‌ $record|'sname']
എന്ന രീതിയില്‍.

നമുക്ക്‌ മറ്റൊരു പ്രോഗ്രാം നോക്കാം. കോംബോ ബോക്സ്‌ ഉപയോഗിച്ച്‌ ഒരു ഗ്രുപ്പ്‌
(സയന്‍സ്‌ / കോമേഴ്‌സ്‌) തിരഞ്ഞെടുക്കുന്നതിനുള്ള പ്രോഗ്രാം (പ്രോഗ്രാം 10.15). ആ
ഗ്രൂപ്പില്‍ പഠിക്കുന്ന വിദ്യാര്‍ത്ഥികളുടെ ഫലം ഈ പ്രോഗ്രാം ഒരു പട്ടികരൂപത്തില്‍
പ്രദര്‍ശിപ്പിക്കുകയും ചെയ്യുന്നു.

<HTML>

<BODY>
<FORM Method="post" Action="showresult.php">
Choose Group:

<SELECT Name = "cgroup">
<OPTION>Science</OPTION>
<OPTION>Commerce</OPTION>

<INPUT Type="submit" Value= "Show Result">

</FORM> Mozilla Firefox
</BODY> File Edit View History Bookmarks Tools Help
</HTML> Ci http://locathost/P-10-15.php

Choose Group: | Commerce : | Show Result

<?php
Suser_ name = "root";
Spassword = "root";
Sserver = "localhost";

Sdatabase = "mysql";
$db_handle = mysql_connect ($server,$user_ name, $password);
if (!$db_ handle) {

die('Could not connect: '

. mysql _error());

}
$db found = mysql select _db($database, വാ handle);

if ($db_ found)
{

10. PHP ഉപയോരിച്ചുള്ള സെര്‍വര്‍ സൈഡ്‌ സ്ക്രിപ്റ്റിംഗ്‌

SSQL =

"SELECT * FROM marks WHERE sgroup =
"ന. POST[cgroup] ."'";
$select_ query = mysql query($SQL);

echo "<TABLE Border = 1">;

echo "<TR>";

echo "<TH Colspan="7"><CENTER> MARK LIST </CENTER> </TH>";

echo "</TR>";

echo "<TR>";

echo "<TD>Reg No</TD>"; Mozilla Firefox

echo "<TD>Name</TD>"; File Edit View History Bookmarks Tools Help

echo "<TD>Group</TD>"; Chttp://localhost/showresult.php | a8]

echo "<TD>Mark-1</TD>"; MARK LIST

echo "<TD>Mark-2</TD>"; | [Reg No|Name {Group Mark-1 |Mark-2 |Mark-3 |Result

echo "<TD>Mark-3</TD>"; iam See ue a use Class
ju ommerce ടട;

echo "നാട </TD>"; Zeenath|Commerce|100 {100 [100 _ [Distinction

echo "</TR>";

while ($record = mysql _fetch_array($select_query) )

echo "<TR>";

echo "<TD>". Srecord['regno'] . "</TD>";

echo "<TD>" . Srecord['sname'] . "</TD>";

echo "<TD>" . Srecord['sgroup'] . "</TD>";

echo "<TD>" . S$record['mark1'] . "</TD>";

echo "<TD>" . S$record['mark2'] . "</TD>";

echo "<TD>" . S$record['mark3'] . "</TD>";

echo "<TD>" . compute _result ($record['mark1'],

Srecord['mark2'], Srecord['mark3']). "</TD>";

echo "</TR>";

}
echo "</TABLE>";

}
else {
echo '<BR>Database NOT Found';
}
mysql_close ($db_handle);
//Function to calculate result
function compute result (സി, സ്ഥ, $m3)
{ Stmarks = ബി + S$m2 + $m3;
if (($m1<40) || ($m1<40) || ($m1<40)
Sresult ="Failed";
elseif (Stmarks < 150)

Sresult ="Passed";
elseif (Stmarks < 180)

Sresult ="Second Class";
elseif (Stmarks < 225)

Sresult ="First Class";
else

Sresult = "Distinction";

return Sresult;
} നോം.

കമ്പ്യൂട്ടര്‍ സയന്‍സ്‌ - XII

ദീര്‍ഘചതുരത്തില്‍ ഉള്‍പ്പെടുത്തിയ കോഡ്‌ നിരീക്ഷിക്കുക. ഡാറ്റാബേസില്‍ നിന്നും
ഒരു പട്ടിക രൂപത്തില്‍ ഡാറ്റ (പദര്‍ശിപ്പിക്കുന്നത്‌ ഈ ഭാഗമാണ്‌. ഡാറ്റ ഒരു പട്ടിക
രൂപത്തില്‍ പ്രദര്‍ശിപ്പിക്കാന്‍, mysql fetch array($result_set) മുഖേന ലഭിച്ച ഡാറ്റ
<TABLE> ടാഗ്‌ ഉപയോഗിച്ച്‌ ര്രമീകരിച്ചിരിക്കുന്നു. while ലൂപിലെ ഓരോ
ആവര്‍ത്തനത്തിലും, <TR></TR> ടാഗ്‌ ഉപയോഗിച്ച്‌ പട്ടികയില്‍ ഒരു പുതിയ വരി
ചേര്‍ക്കപ്പെടുകയും, അസോസിയേറ്റ്‌ അറെയിലുള്ള ഡാറ്റ <TD></TD> ടാഗ്‌ ഉപയോഗിച്ച്‌
ശരിയായ കോളത്തില്‍ സ്ഥാപിക്കുകയും ചെയ്യും. ലൂപ്പിന്റെ എല്ലാ ആവര്‍ത്തനങ്ങളിലും
mysql_fetch_array($result_set) പുതിയ ഡാറ്റ $result-@8 ലോഡ്‌ ചെയ്യുന്നു. ഈ
പ്രവര്‍ത്തനം പൂര്‍ത്തിയാക്കിയാല്‍ ഫങ്ഷന്‍ ദലിടം തിരികെ നല്‍കി ലൂപ്പ്‌ പ്രവര്‍ത്തനം
അവസാനിപ്പിക്കും.

ഘട്ടം 4 - ബന്ധം വിച്ഛേദിക്കുക (Close the connection)

ഡാറ്റാബേസുകളുടെ എല്ലാ പ്രവര്‍ത്തനങ്ങളും അവസാനിച്ചതിന്‌ ശേഷം mysql _close()
ഫങ്ഷന്‍ ഉപയോഗിച്ച്‌ ഡാറ്റാബേസ്‌ സെര്‍വറുമായുള്ള ബന്ധം വിച്ലേദിക്കുന്നു. PHP
സ്ക്രിപ്റ്റ്‌, പ്രവര്‍ത്തനം അവസാനിപ്പിക്കുമ്പോള്‍ 14൮8൮. സെര്‍വറിലേക്കുള്ള ലിങ്ക്‌ സ്വയം
വിച്ഛേദിച്ചിരിക്കും. PHP സ്ക്രിപ്റ്റ്‌ അവസാനിക്കുന്നതിനു മുമ്പ്‌ നമുക്ക്‌ ബന്ധം വിച്ചേദി
ക്കണമെങ്കില്‍, ഈ ഫങ്ഷനനോടടൊപ്പം പരാമീറ്ററായി ലിങ്ക്‌ ഐഡന്റിഫയര്‍
ഉപയോഗിക്കണം.

mysql_close($db_handle);

വിജയകരമായാല്‍ Truc-Qo അല്ലെങ്കില്‍ False-Qo ഈ ഫങ്ഷന്‍ തിരികെ തരുന്നു.

മുന്‍ ഉദാഹരണങ്ങളിലെ mysql _close($db_handle); പ്രസ്താവന നോക്കുക.

ദെരസമയം ഒന്നില്‍ കൂടുതല്‍ MySQL ബന്ധങ്ങള്‍ പ്രശ്നങ്ങള്‍ സൃഷ്ടിക്കാം.
ആയതിനാല്‍ ക്വറി പ്രവര്‍ത്തിരിച്ചു കഴിഞ്ഞാല്‍ ഡാറ്റാബേസ്‌ ബന്ധം
വിദ്വേദിക്കുന്നതാണ്‌ അഭികാല്യം.

10.8.2 PHP ഉപയോഗിച്ച്‌ ഒരു പുതിയ ടേബിള്‍ നിര്‍മ്മിക്കുന്നു
(Creating a new table using PHP)

ഒരു പുതിയ പട്ടിക സൃഷ്ടിക്കുന്നതിനായി, mysql _query() ഫങ്ഷന്‍ ഉപയോഗിച്ച്‌ ഒരു
SQL പ്രസ്താവന തയ്യാറാക്കി പ്രവര്‍ത്തിപ്പിക്കുക. അതിനുള്ള ഉദാഹരണം ഇതാണ്‌.
$SQL = "CREATE TABLE marks (regno number,tname ൨൨൭൧ (20),

ml number,m2 number,m3 number, distinction char(20))";
$select_query = mysql query($SQL);
10.8.3 PHP ഉപയോഗിച്ച്‌ ഒരു ടേബിളിലേക്കു ഡാറ്റ ചേര്‍ക്കുന്നു (Inserting data into a
table using PHP)

ടേബിളിലേക്കു ഡാറ്റ ചേര്‍ക്കാന്‍ നാം ഒരു SQL പ്രസ്താവന തയാറാക്കുകയും
mysql_query() ഫങ്ഷന്‍ ഉപയോഗിച്ച്‌ അത്‌ പ്രവര്‍ത്തിപ്പിക്കുകയും വേണം. 557,

10. PHP ഉപയോിച്ചുള്ള സെര്‍വര്‍ സൈഡ്‌ സ്ക്രിപ്റ്റിംഗ്‌

$sname, $sm1, $sm2, $sm3, Ssresult എന്നീ വേരിയബിളുകളില്‍ ടേബിളിലേക്ക്‌ ചേര്‍ക്കേണ്ട
ഡാറ്റ ഉണ്ടെന്നിരിക്കട്ടെ. ഇതിനാവശ്യമായ SQL പ്രസ്താവന ചുവടെ ചേര്‍ക്കുന്നു.

9, = "INSERT INTO marks VALUES (".S$sregno.",'".Ssname.
wrom Ssmi.",".Ssm2.",".Ssm3.",'".Ssresult."')";

$select_query = mysql query($SQL);

10.8.4 PHP ഉപയോഗിച്ച്‌ ഒരു ടേബിളിലെ ഡാറ്റയില്‍ മാറ്റം വരുത്തുന്നു (Updating data
ina table using PHP)

ടേബിളിലെ ഡാറ്റ പുതുക്കുന്നതിനായി, നാം ഒരു SQL സ്റ്റേറ്റ്മെന്റ്‌ തയ്യാറാക്കുകയും
അത്‌ mysql query () ഉപയോഗിച്ച്‌ പ്രവര്‍ത്തിപ്പിക്കുകയും വേണം. $sregno എന്ന

വേരിയബിളിലെ രജിസ്റ്റര്‍ നമ്പര്‍ സൂചിപ്പിക്കുന്ന വിദ്യാര്‍ത്ഥിയുടെ മാര്‍ക്ക്‌ '70' ആക്കി
മാറ്റണം എന്ന്‌ വിചാരിക്കുക. ഇതിനായി വേണ്ടുന്ന പ്രസ്താവന ചുവടെ നല്‍കുന്നു:

$SQL = "UPDATE marks SET സി- 70 WHERE regno='".$sregno."'";

$select_query = mysql _query($SQL);

നമുക്ക്‌ സംഗ്രഹിക്കാം

സെര്‍വര്‍ ഭാഗത്തെ സ്ക്രിപ്റ്റിംഗ്‌ ഭാഷകളായ PHP, PERL, ASP.NET

തുടങ്ങിയവയുടെ സഹായത്തോടെയാണ്‌ ഡൈനാമിക്‌ വെബ്‌ പേജുകള്‍
നിര്‍മ്മിക്കുന്നത്‌. സെര്‍വര്‍ ഭാഗത്തെ സ്ക്രിപ്റ്റിംഗ്‌ ഭാഷകളില്‍ ഏറ്റവും പ്രചാരമേറിയത്‌
PHP-@o6n5. വിവിധ വെബ്‌ സെര്‍വറുകളിലും ഓപ്പറേറ്റിംഗ്‌ സിസ്റ്റങ്ങളിലും PHP പ്രവര്‍
ത്തിക്കും. 1111/1.-ന്റെയും MySQL പോലെയുളളള ഡാറ്റാബേസ്‌കളുടേയും ന്റെയും
സഹായത്തോടെ PHP-&F മികച്ച ഡൈനാമിക്‌ വെബ്‌ പേജുകള്‍ നിര്‍മ്മിക്കുവാന്‍
സാധിക്കും. C++ പ്രോഗ്രാമിങ്‌ ഭാഷയുടെ വാകൃഘടന അനുവര്‍ത്തിക്കുന്നതിനാല്‍ 11117
പഠനം വളരെ എളുപ്പമാണ്‌.

—

നമുക്ക്‌ പരിശീലിക്കാം

1. സാഖ്യ 5-ന്റെ ഗുണനപ്പട്ടിക പ്രദര്‍ശിപ്പിക്കുന്നതിനുള്ള ഒരു PHP പ്രോഗ്രാം

എഴുതുക.

2. 100-നും 200-നും ഇടയില്‍ വരുന്ന എല്ലാ പാലിന്‍ഡ്രോം സഖ്യകളും പ്രിന്റ്‌ ചെയ്യുന്നതി
നുള്ള ഒരു PHP പ്രോഗ്രാം എഴുതുക.

3. 1000-നു താഴെ വരുന്ന എല്ലാ ആംസ്ട്രോങ്‌ സംഖ്യകളും (പ്രിന്റ്‌ ചെയ്യുന്നതിനുള്ള
ഒരു PHP പ്രോഗ്രാം എഴുതുക.

4. 2117-യും 1111,41.-ഉം ഉപയോഗിച്ച്‌ ചുവടെ നല്‍കിയിരിക്കുന്ന പട്ടിക പ്രദര്‍ശിപ്പിക്കുക.

ഓരോ സെല്ലും അതാതു വരിയുടെയും നിരയുടെയും നമ്പര്‍ പ്രദര്‍ശിപ്പിക്കണം.
പട്ടിക നിര്‍മ്മാണത്തിന്‌ 11117-യിലെ ലൂപ്പ്‌ പ്രസ്താവന ഉപയോഗിക്കേണ്ടതാണ്‌.

കമ്പ്യൂട്ടര്‍ സയന്‍സ്‌ - XII

row 3, co. row 3, col 2 row 3, col 3 row 3, col 4 row 3, col 5
row 4, co row 4, col 2 row 4, col 3 row 4, col 4 row 4, col 5

row 5, co. row 5, col 2 row 5, col 3 row 5, col 4 row 5, col 5

row 6, co row 6, col 2 row 6, col 3 row 6, col 4 row 6, col 5

row 7, co row 7, col 2 row 7, col 3 row 7, col 4 row 7, col 5

row 8, co
row 9, co
row 10, col 1 row 10, col 2 row 10, col 3 row 10, col 4 | row 10, col 5

. മൂന്നു സംഖ്യകളില്‍ ഏറ്റവും വലുത്‌ കണ്ടുപിടിക്കുന്നതിനുള്ള ഒരു പ്രോഗ്രാം എഴുതുക.

Qa

. Name, RollNo, Gender എന്നീ ഫീല്‍ഡുകളും Submit Button-Do ഉള്ള ഒരു രജിസ്ട്രേഷ
ന്‍ ഫോം നിര്‍മ്മിക്കുക. ഈ വിശദാംശങ്ങള്‍ സ്വീകരിക്കുന്ന ഒരു PHP സ്ക്രിപ്റ്റ്‌
എഴുതുകയും ഉപയോക്താവ്‌ Submit ബട്ടണ്‍ ക്ലിക്കുചെയ്യുമ്പോള്‍ ബ്രൌസറില്‍ അത്‌
പ്രദര്‍ശിപ്പിക്കുകയും ചെയ്യുക.

. നല്‍കിയിരിക്കുന്ന പ്രശ്നങ്ങള്‍ക്ക്‌ അനുയോജ്യമായ PHP സ്ക്രിപ്റ്റ്‌ എഴുതുക: ഒരു
സ്ര്രിംഗ്‌ സ്വീകരിക്കുന്നതിനുള്ള ഫോം രൂപകല്‍പന ചെയ്യുക. സ്വീകരിച്ച സ്ര്രിങ്ങില്‍
എത്ര സ്വരാക്ഷരങ്ങള്‍ (2,€,1,0,U) ഉണ്ടെന്നു കണ്ടുപിടിക്കുന്ന ഫങ്ഷന്‍ എഴുതുക.

. MySQL-@ ഒരു പട്ടികനിര്‍മ്മിച്ച്‌ കുറച്ച്‌ ഡാറ്റ റെക്കോര്‍ഡുകള്‍ ചേര്‍ക്കുക. ഈ
റെക്കോര്‍ഡുകള്‍ (്രൌസറില്‍ പ്രദര്‍ശിപ്പിക്കുന്നതിനുള്ള ഒരു PAP സ്ക്രിപ്റ്റ്‌ എഴുതുക.

N

i)

©

. MySQL-@ ഒരു പട്ടികനിര്‍മ്മിച്ച്‌ കുറച്ച്‌ ഡാറ്റ റെക്കോര്‍ഡുകള്‍ ചേര്‍ക്കുക. ഫോം
ഉപയോഗിച്ച്‌ ഒരു വില സ്വീകരിക്കുന്നതിന്‌ PHP സ്ക്രിപ്റ്റ്‌ എഴുതുക, ഡാറ്റാബേസില്‍
വില തിരയുകയും ബ്രൌസറില്‍ റെക്കോര്‍ഡ്‌ പ്രദര്‍ശിപ്പിക്കുകയും ചെയ്യുക.

യ്യു
നമു വിലയിരുത്താം

1. ഓട്ട്പുട്ട്‌ വിജയകരമായി ലഭിക്കുമ്പോള്‍ 1 തിരികെ തരുന്ന ഫങ്ഷന്‍ ഏതാണ്‌?
a. echo() 0. print() ൦. രണ്ടും 0. ഇവയൊന്നുമല്ല

N

. ഒന്നില്‍ കൂടുതല്‍ പരാമീറ്ററുകള്‍ സ്വീകരിക്കുന്ന (്പിന്റ്‌ ഫങ്ഷന്‍ ഏതാണ്‌?
a. echo() 0. print() c. printf d. ഇവയെല്ലാം

@

. പാസ്വേഡുകളോ മറ്റു ത്ര്രപ്രധാനമായ വിവരങ്ങളോ അയക്കുമ്പോള്‍ താഴെ നല്‍കി
യിരിക്കുന്നവയില്‍ ഉപയോഗിക്കരുതാത്തത്‌ ഏത്‌?

a. get b. post c. REQUEST d. NEXT
4. ഒരു A(SloW വേരിയബിളിലെ അക്ഷരങ്ങളുടെ എണ്ണം കണ്ടെത്തുന്ന ഫങ്ഷന്‍
ഏതാണ്‌ ?

a. count($variable) b. len($variable) ൦. streount($variable) 6. strlen($variable)

10. PHP ഉപയോിച്ചുള്ള സെര്‍വര്‍ സൈഡ്‌ സ്ക്രിപ്റ്റിംഗ്‌

5. താഴെ കൊടുത്തിരിക്കുന്നതില്‍ ഏതാണ്‌ പ്രീ-ഡിഫൈന്‍ഡ്‌ (pre-defined) വേരിയബിള്‍
അല്ലാത്തത്‌ 2
a.$ GET  b. $ ASK c. $ REQUEST d. $ POST

6. $_GET വേരിയബിള്‍ ഉപയോഗിച്ച്‌ ഡാറ്റ സ്വീകരിക്കുമ്പോള്‍ ഡാറ്റ കാണാന്‍ കഴിയുന്നത്‌
a. ആര്‍ക്കുമില്ല 2. നിങ്ങള്‍ക്ക്‌ മാത്രം ൦. എല്ലാവര്‍ക്കും 6. ചിലര്‍ക്കുമാത്രം

7. $ POST വേരിയബിള്‍ ഉപയോഗിച്ച്‌ ഡാറ്റ സ്വീകരിക്കുമ്പോള്‍ ഡാറ്റ കാണാന്‍
കഴിയുന്നത്‌

a. ആര്‍ക്കുമില്ല 0. നിങ്ങള്‍ക്ക്‌ മാത്രം ൦. എല്ലാവര്‍ക്കും 6. ചിലര്‍ക്കുമാത്രം

8. get, post എന്നി രണ്ട്‌ രീതികള്‍ ഉപയോഗിച്ച്‌ ഫോമിലെ ഡാറ്റ അയക്കുമ്പോള്‍ താഴെ
നല്‍കിയിക്കുന്നതില്‍ ഏത്‌ വേരിയബിള്‍ ഉപയോഗിച്ചാണ്‌ ഡാറ്റ സ്വീകരിക്കുന്നത്‌?

a. $BOTH b.$ BOTH ൦. SREQUEST d. $ REQUEST
9. താഴെ നല്‍കിയിരിക്കുന്ന പരാമീറ്ററുകളില്‍ mysql connect()-@8 ഉപയോഗിക്കാത്ത പാരാ
മീറ്റര്‍ ഏത്‌ ?
a. ഡാറ്റാബേസ്‌ ഹോസ്റ്റ്‌ 0. യൂസര്‍ ഐഡി ൦. പാസ്വേര്‍ഡ്‌ d. ഡാറ്റാബേസ്‌ നാമം
10. താഴെ നല്‍കിയിരിക്കുന്ന വിവിധ ഘട്ടങ്ങളെ ശരിയായ രീതിയില്‍ ക്രമപ്പെടുത്തുക;
i. MySQL സെര്‍വറിലേക്കുള്ള കണക്ഷന്‍ തുറക്കുന്നു.
11. SQL ക്വറി പ്രവര്‍ത്തിപ്പിക്കുന്നു
111. ക്വറി ഉപയോഗിച്ച്‌ ഡാറ്റ എടുക്കുന്നു
iv. ഡാറ്റാബേസ്‌ തിരഞ്ഞെടുക്കുന്നു
ഡ കണക്ഷന്‍ വിഛേദിക്കുന്നു
a. 1,4,2,3,5 0. 4,1,2,3,5 ൦. 1,5,4,2,1 d. 4,1,3,2,5
11. എന്താണ്‌ PHP?
12. PHP-@jo ജാവാസ്ക്രിപ്റ്റും തമ്മിലുള്ള വ്യത്യാസം എന്ത്‌?
13. ഒരു PHP പ്രോഗ്രാം പ്രവര്‍ത്തിപ്പിക്കുന്നതിനുള്ള വിവിധ ഘട്ടങ്ങള്‍ ഏതെല്ലാം?
14. PHP-O1@8 0േറ-യുടെ ഉപയോഗം എന്ത്‌?
15. PHP-@1@8 print-o§ ഉപയോഗം എന്ത്‌?
16. ‘echo’, 'print'agam) പ്രസ്താവനകള്‍ തമ്മിലുള്ള വ്യത്യാസങ്ങള്‍ എന്തെല്ലാം?

7. ക്ലയന്റ്‌ ഭാഗത്തെ സ്ക്രിപ്റ്റിംഗ്‌ ഭാഷയായ ജാവാസ്ക്രിപ്റ്റിനെക്കാള്‍ PHP മികച്ചതായത്‌
എന്തുകൊണ്ട്‌?

18. ഒരു PHP പ്രസ്താവന അവസാനിപ്പിക്കുവാന്‍ ഏത്‌ അക്ഷരമാണ്‌ ഉപയോഗിക്കുന്നത്‌?
ഈ അക്ഷരം ഒഴിവാക്കിയാലും തെറ്റാണെന്ന സന്ദേശം വരാത്തത്‌ ഏത്‌ അവസരത്തി
ലാണ്‌?

കമ്പ്യൂട്ടര്‍ സയന്‍സ്‌ - XII

19. എസ്‌കേപ്‌ സീക്വന്‍സ്‌ എന്നാല്‍ എന്ത്‌? സാധാരണയായി ഉപയോഗിച്ച്‌ വരുന്ന മൂന്ന്‌
എസ്‌കേപ്‌ സീക്വന്‍സുകള്‍ എഴുതുക.

20. ചുവടെ നല്‍കിയിരിക്കുന്ന PHP സ്ക്രിപ്റ്റുകളുടെ ഓട്ട്പുട്ട്‌ പ്രവചിക്കുക:
a. <?php
echo "Today looks\nbright and sunny";
2>

b. <?php
echo "Ours not to question why;";

echo "Ours but to do and die";

2>
c. <?php
$x = 8;
Sy = 8;
echo($x = = $y);
>

21. ചുവടെ നല്‍കിയിരിക്കുന്ന PHP സ്ക്രിപ്റ്റുകളിലെ തെറ്റ്‌ കണ്ടെത്തുക
a. <?php

/* print a line of output /

echo 'Hello'

?>

b. <?php
echo '<p align="right">Copyright Me, 2008</p>';
?>

c. <?php

echo 'Line 1;
2>
22. PHP-@1oe1 വിവിധ തരം ലൂപ്പുകള്‍ ഏതെല്ലാം?
23. 11117-യില്‍ ഒരു അറെ നിര്‍മ്മിക്കുന്നത്‌ എങ്ങിനെ?
24. HTML ഫോമില്‍ action ആടഭ്രിബ്ദുട്ടിന്റെ പ്രാധാന്യം എന്ത്‌?

25."scert@hotmail.com" എന്ന സ്ര്രിങ്ങില്‍ നിന്നും "hotmail.com" എന്ന സ്ട്രിങ്ങ്‌ മാത്രം
എടുക്കുന്നത്‌ എങ്ങിനെ?

26. ചുവടെ നല്‍കിയിരിക്കുന്ന കോഡിന്റെ ഓട്ട്പുട്ട്‌ പ്രവചിക്കുക:

10. PHP ഉപയോിച്ചുള്ള സെര്‍വര്‍ സൈഡ്‌ സ്ക്രിപ്റ്റിംഗ്‌

Sa = 10;

if ($a > 5 or < 15)
echo 'true';

else

echo 'false';
27. ചുവടെ നല്‍കിയിരിക്കുന്ന കോഡിന്റെ ഓട്ട്പുട്ട്‌ പ്രവചിക്കുക:

function fn ( ഡമ)

{

Svar = $var - ($var/10*5);
return Svar;

}
echo fn(100);

28. സൂപ്പര്‍ ഗ്ലോബല്‍ അറെകള്‍ ഏത്‌ രീതിയില്‍ PHP ഉപയോഗിച്ചുള്ള പ്രോഗ്ഗാമിങ്ങിനെ
സഹായിക്കുന്നു?

29.$ SERVER-o ഉപയോഗം എന്താണ്‌?

30. ഒരു ഫോം സമര്‍പ്പിക്കുമ്പോള്‍ ഉപയോഗിക്കുന്ന get, post എന്നീ രീതികളുടെ
വ്യത്യാസങ്ങള്‍ എഴുതുക.

31. ഒരു ഫോം സമര്‍പ്പിക്കുമ്പോള്‍ അധ്ധസ്സ്ബാറില്‍ കാണപ്പെട്ട URL http://localhost:8080/
check2.php?exam=March2018&web=www.dhsekerala.gov.in എന്നതാണ്‌. ഇവിടെ
ഉപയോഗിച്ചിരിക്കുന്ന ഫോം സമര്‍പ്പണ രീതി ഏതാണെന്ന്‌ തിരിച്ചറിയുക.

32. മുന്‍പ്‌ സേവ്‌ ചെയ്തിരുന്ന ബുക്മാര്‍ക്ക്‌ ഉപയോഗിച്ച്‌ ഒരു ഡയനാമിക്‌ വെബ്‌ പേജ്‌
തുറക്കാന്‍ ശ്രമിച്ചപ്പോള്‍ ശരിയായ രീതിയില്‍ വരുന്നില്ല. ഇതിന്‌ കാരണം എന്തായി
രിക്കും?

33. 1൭൮.-മായുള്ള ബന്ധം നമുക്ക്‌ ഏത്‌ രീതിയില്‍ സജ്ജമാക്കാം?
34. PHP-@168 എങ്ങിനെ ഒരു MySQL ഡാറ്റാബേസ്‌ തിരഞ്ഞെടുക്കാം?
35. SQL ക്വറി എങ്ങിനെ പ്രവര്‍ത്തിപ്പിക്കാം? ഈ ക്വറിയുടെ ഓട്ട്പുട്ട്‌ എങ്ങിനെ ലഭിക്കും?

36. PHP-@j0 JavaScript-20 തമ്മിലുള്ള വ്യത്യാസം എഴുതുക.

37. PHP-o@, MySQL മായി ബന്ധിപ്പിക്കുന്നതിനുളള നടപടിക്രമങ്ങള്‍ വിവരിക്കുക.

കമ്പ്യൂട്ടിങ്ങിലെ മുനേറ്റങ്ങള്‍

M7K6C6

പ്രധാന പഠന നേട്ടങ്ങള്‍

D2 അധ്യാമത്തിമ്നി പഠനം പുരിത്തിയാകുനാ്തോടെ
പഠിതാവ്‌ ആരര്‍ഖിക്കുട പഠ൪മട്ട്ങശ്‌

© സിരിയല്‍ കമ്പ്യൂട്ടിങ്ങ്‌ (Serial Computing)
രീതികള്‍ മനസിലാക്കുന്നു

© ഡിസ്ദ്രിബ്യുറ്റഡ്‌ കമ്പ്യൂട്ടിങ്ങ്‌ (Distributed
Computing) രീതികള്‍ രിരിച്ചറിയുന്നു

© സിരിയല്‍ കമ്പ്യുട്ടിങ്ങും (Serial Computing) പാര
ലല്‍ കമ്പ്യുട്ടിങ്ങും (Parallel Computing) mem
Jo ചെയ്യുന്നു

© ക്ലന്റര്‍ കമ്പയുട്ടിങ്ങും (Cluster Computing) (ഗ്രിഡ്‌
കമ്പ്യുട്ടിങും (Grid Computing) തമിലുള്ള വ്യത്യാസം
കണ്ടെത്തുന്നു

© Bd കമ്പ്യുട്ടിങ്ങിന്റെ സാങ്കേതികതകള്‍ തിരിച്ചറി
യുന്നു

© ഗ്രിഡ്‌ കമ്പ്യുട്ടിങ്ങിന്റെ ആവര്യകത തിരിച്ചറിയുന്നു

© ഏഡ്‌ കമ്പ്യൂട്ടിങ്‌ മാതൃകയുടെ ആവര്യകത പരി
രോധിക്കുന്നു

© ആധുനിക യുഗത്തിലെ കമ്പ്യുട്ടിങ്ങില്‍ നിര്‍ഥജിത
ബുദ്ധി (Artifical Intelligence) യുടെ പങ്ക്‌ വിശദ
മാക്കുന്നു

© സേവനമേഖലയില്‍ ബയോമ്രെട്രിക്‌ ഉപകരണങ്ങ
ളുടെ ഉപയോഗം തിരിച്ചറിയുന്നു

൭ കമ്പ്യുട്ടര്‍ ദൃഷ്ടിയുടെ (Computer Vision) പ്രസക്തി
ഉദാഹരണസഹിതം വിശദീകരിക്കുന്നു

൭ റോബോട്ടിക്‌സിന്റെ (Robotics) സാധ്യതകള്‍ തിരി
ച്ചറിയുന്നു

© ബയോഇന്‍ഫോര്‍ലാറ്റിക്‌സും അതിന്റെ വൈദ്യരാ
സ്ത്ര രംഗത്തെ പ്രാധാന്യവും വിശദീകരിക്കുന്നു

൭ വിദുര സംവേദനത്തെ (Remote Sensing) കുറി
ച്ചും അതിന്റെ പ്രായോരിക മേഖലകളെകുറിച്ചും
വിര്മമാക്കുന്നു

൫ ദുവിവരവ്യവസ്ഥയുടെ (Geographical Information
System) ആവര്യകത നിര്‍ണയിക്കുന്നു.

ഇന്റര്‍നെറ്റിന്റെ വര്‍ദ്ധിച്ച ജന്രപീതിയും, ശക്തി
യേറിയ കമ്പ്യൂട്ടറുകളുടെ ലഭ്യതയും, ചെലവ്‌
കുറഞ്ഞ ഉപകരണങ്ങളോടു കൂടിയ അതിവേഗ
ശൃംഖലകളും കമ്പ്യൂട്ടിങ്ങ്‌ രീതിയില്‍ പല മാറ്റ
ങ്ങളും ഉണ്ടാക്കിയിട്ടുണ്ട്‌. കമ്പ്യൂട്ടിങ്ങ്‌ മേഖലയില്‍
ക്രമാനുഗതമായി മാറ്റങ്ങള്‍ വന്നു കൊണ്ടിരിക്കു
കയാണ്‌. ആ മേഖലയില്‍ ഉയര്‍ന്നു വരുന്ന പ്രശ്ന
ങ്ങളെ പുതിയ സാങ്കേതികവിദ്യ ഉപയോഗിച്ച്‌
പരിഹരിക്കേണ്ടതുണ്ടെന്നും നമുക്ക്‌ അറിയാം.
മാറിക്കൊണ്ടിരിക്കുന്ന വിവിധ മേഖലകളിലെ
കമ്പ്യൂട്ടിങ്ങ്‌ പ്രതിസന്ധികള്‍ ആധുനിക കമ്പ്യൂ
ട്ടിങ്‌ മാതൃകകള്‍ ഉപയോഗിച്ച്‌ പരിഹരിക്കുന്ന
തിനെക്കുറിച്ചാണ്‌ ഈ അദ്ധ്യായത്തില്‍ നാം
ചര്‍ച്ച ചെയ്യുന്നത്‌. ഡിസ്ര്രിബ്യൂട്ടെഡ്‌ കമ്പ്യൂട്ടര്‍
വ്യവസ്ഥ ഇന്റര്‍നെറ്റിന്റെ സഹായത്താല്‍ ഒന്നില
ധികം കമ്പ്യൂട്ടറുകളെ കോര്‍ത്തിണക്കി സങ്കീര്‍ണ്ണ
ങ്ങളായ പ്രശ്‌നങ്ങള്‍ പരിഹരിക്കുന്നു. അത്‌ ഡാറ്റ
യ്ക്ക്‌ കൂടുതല്‍ പ്രാധാന്യം നല്‍കയും ശൃംഖലാ
ക്രേ്രീകൃതമാവുകയും ചെയ്യുന്നു. ഇപ്പോള്‍
ഡിസ്്രിബ്യൂറ്റഡ്‌ കമ്പ്യൂട്ടിങ്ങിന്റെ ഉപയോഗം
കൂടുതല്‍ വ്യാപകമായിക്കൊണ്ടിരിക്കുകയാണ്‌.
വലിയ തോതില്‍ വിഭവങ്ങള്‍ പങ്കുവെച്ചുകൊണ്ട്‌
മികച്ച പ്രകടനം കാഴ്ചവെയ്ക്കുക എന്നതിനാണ്‌
ഇന്ന്‌ ഡിസ്ര്രിബ്യൂറ്റഡ്‌ കമ്പ്യൂട്ടിങ്ങ്‌ (DISTRIB-
UTED COMPUTING) പ്രാധാന്യം നല്‍കുന്നത്‌.
സോഷ്യല്‍ മീഡിയ സൈറ്റുകളായ ഫേസ്‌
ബുക്ക്‌, ട്വിറ്റെര്‍ തുടങ്ങിയവയും സെര്‍ച്ച്‌ എന്‍ജിന്‍
വെബ്സ്്റുകളായ ഗൂഗിള്‍ (GOOGLE), ബിങ്‌

(BING) തുടങ്ങിയവയും ഡിസ്രടിബ്യൂറ്റഡ്‌ കമ്പ്യൂ
11. കമ്പ്യുട്ടിങ്ങിലെ മുന്നേറ്റങ്ങ

Ness ആശയങ്ങള്‍ പ്രാവര്‍ത്തികമാക്കിയിട്ടുണ്ട്‌. ഇവയെല്ലാം ക്രേന്ദീകൃത ഡാറ്റ നിയ്രന്തണ
സംവിധാനത്തിലാണ്‌ പ്രവര്‍ത്തിക്കുന്നത്‌. എന്നിരുന്നാലും വലിയ തോതില്‍ വിപുലീകരിക്കാ
വുന്ന ഈ സംവിധാനങ്ങളില്‍ മെച്ചപ്പെട്ട കമ്പ്യൂട്ടിങ്ങ്‌ മാതൃകകളായ ക്ലസ്റ്റര്‍ കമ്പ്യൂട്ടിങ്ങ്‌ (CLUSTER
COMPUTING), ഗ്രിഡ്‌ കമ്പ്യൂട്ടിങ്ങ്‌ (GRID COMPUTING), ക്ഈഡ്‌ കമ്പ്യൂട്ടിങ്ങ്‌ (CLOUD
COMPUTING) തുടങ്ങിയവ വ്യാപകമായി ഉപയോഗിക്കുന്ന പ്രവണതയാണുള്ളത്‌. ഈ മേഖല

കളെക്കുറിച്ചുള്ള സംക്ഷിപ്തമായ ചര്‍ച്ചുകള്‍ ഈ അദ്ധ്യായത്തില്‍ ഉണ്ടാകും.

ധാരാളം ഗവേഷണങ്ങള്‍ നടന്നുകൊണ്ടിരിക്കുന്ന ഒരു മേഖലയാണ്‌ കമ്പ്യൂട്ടേഷണല്‍ ബുദ്ധി
(COMPUTATIONAL INTELLIGENCE). ബുദ്ധിവൈഭവമുള്ള കമ്പ്യൂട്ടറിന്‌ മനുഷ്യരുമായി ആശയ
വിനിമയം നടത്തുവാന്‍ സാധിക്കും. മനുഷ്യനും യന്ത്രവും തമ്മിലുള്ള പരസ്പര വിനിമയത്തെ
ക്കുറിച്ചുള്ള പഠനമാണ്‌ സൈബര്‍നെറ്റിക്സ്‌ (CYBERNETICS). എക്കാലവും ആകാംക്ഷയും
കൌതുകവും ഉണര്‍ത്തുന്ന ഒരു മേഖലയാണ്‌ നിര്‍മ്മിതബുദ്ധി (ARTIFICIAL INTELLIGENCE).
ബയോമ്രെടിക്‌, നാച്ചുറല്‍ ലാംഗ്വേജ്‌ പ്രോസസ്സിംഗ്‌ (LP), റോബോട്ടിക്സ്‌ തുടങ്ങിയ സാങ്കേതിക
വിദ്യകളില്‍ നിര്‍മിതബുദ്ധി പലതരത്തില്‍ ഉപയോഗിച്ചിരിക്കുന്നു. ഇന്‍പുട്ട്‌ സ്വീകരിക്കുന്നതിലും
ഓട്ട്പുട്ട്‌ നല്‍കുന്നതിലും ഉള്ള കൃത്യതയ്ക്ക്‌ കമ്പ്യൂട്ടറുകള്‍ പേരുകേട്ടതാണ്‌. അനിശ്ചിതത്വവും
ഭാഗിക സത്യങ്ങളും നിറഞ്ഞ മറ്റൊരു കമ്പ്യൂട്ടിങ്‌ മേഖലയായ സോഫ്റ്റ്‌ കമ്പ്യൂട്ടിങ്ങിനെ (SOFT
COMPUTING) കുറിച്ചും ഈ അദ്ധ്യായത്തില്‍ ചര്‍ച്ച ചെയ്യുന്നു. കമ്പ്യൂട്ടര്‍ രംഗത്തെ വികാസം
മറ്റേതൊരു മേഖലയ്ക്കും എന്ന പോലെ ജീവശാസ്ത്രമേഖലയ്ക്കും ഗണ്യമായ സംഭാവനകള്‍
നല്‍കിയിട്ടുണ്ട്‌. കമ്പ്യൂട്ടര്‍ സാങ്കേതികവിദ്യ ഉപയോഗിച്ച്‌ ജീവശാസ്ര്രപരമായ വിവരങ്ങള്‍
കൈകാര്യം ചെയ്യുന്ന മേഖലയാണ്‌ ബയോഇന്‍ഫോര്‍മാറ്റിക്സ്‌ (BIOINFORMATICS).
ശാസ്ത്രജ്ഞന്മാര്‍ ലോക നന്മയ്ക്കായി ഡി എന്‍ എ കമ്പ്യൂട്ടിങ്‌ വികസിപ്പിച്ചെടുക്കുവാന്‍ ശ്രദ്ധ
ചെലുത്തുന്നുണ്ട്‌. ഈ വിഷയങ്ങളും ഇവിടെ ചര്‍ച്ച ചെയ്യുന്നുണ്ട്‌. വിദൂര സംവേദനത്തെക്കുറിച്ചും
(REMOTE SENSING) ഭൂവിവരവ്യവസ്ഥയെ (GIS) കുറിച്ചും ചര്‍ച്ച ചെയ്തുകൊണ്ട്‌ അദ്ധ്യായം
അവസാനിക്കുന്നു.

11.1 ഡിസ്ട്രിബ്യുറ്റഡ്‌ കമ്പയുട്ടിങ്ങ്‌ മാത്യകകള്‍ (DISTRIBUTED COMPUTING
PARADIGMS)

ചരിര്തരപരമായി ഹാര്‍ഡ്‌ വെയര്‍, ഓപ്പറേറ്റിംഗ്‌ സിസ്റ്റം, ശൃംഖല മുതലായവയിലെ വിവിധ
മാറ്റങ്ങളിലൂടെ ആണ്‌ കമ്പ്യൂട്ടിങ്ങ്‌ മേഖല കടന്നുവന്നത്‌. കമ്പ്യൂട്ടര്‍ നമ്മുടെ ദൈനംദിന ജീവിത
ത്തിന്റെ ഭാഗമായി മാറിക്കഴിഞ്ഞു. കമ്പ്യൂട്ടര്‍ സംവിധാനങ്ങള്‍ ഫലപ്രദമായ ഉപയോഗിക്കുന്നു
വെന്ന്‌ ഡിസ്രടിബ്യൂറ്റഡ്‌ കമ്പ്യൂട്ടിങ്ങ്‌ ഉറപ്പു വരുത്തുന്നു. ഒരു കമ്പ്യൂട്ടര്‍ ശൃംഖലയിലൂടെ ആശയ
വിനിമയം നടത്തികൊണ്ടിരിക്കുന്ന രണ്ടോ അതിലധികമോ കമ്പ്യൂട്ടറുകള്‍, ഒരു പ്രോഗ്രാമിന്റെ
തന്നെ വൃത്യസ്ത ഭാഗങ്ങള്‍ ഒരേസമയം പ്രവര്‍ത്തിപ്പിക്കുന്ന രീതിയാണ്‌ ഡിസ്ര്ടിബ്യൂറ്റഡ്‌
കമ്പ്യൂട്ടിങ്ങ്‌.

ഏതൊരു സങ്കീര്‍ണമായ വിഷയത്തിന്റെയും രൂപകല്‍പ്പനയെക്കുറിച്ച്‌ അല്ലെങ്കില്‍ സ്വരൂപ
ത്തെകുറിച്ച്‌ പഠിക്കുന്നതാണ്‌ മാതൃക (PARADIGM) എന്ന പദം കൊണ്ട്‌ ഉദ്ദേശിക്കുന്നത്‌. ഈ
മാതൃക അനുസരിച്ചു വിഷയങ്ങളുടെ വിശദാംശങ്ങള്‍ തിരിച്ചറിയുന്നതിനും തരംതിരിക്കുന്നതിനും

നമുക്ക്‌ കഴിയും. സമൂഹത്തിലെ പല മേഖലകളിലേയും വിവരങ്ങള്‍ കൈകാര്യം ചെയ്യാനുള്ള
കഴിവ്‌ പരമാവധി വര്‍ധിപ്പിക്കുവാന്‍ ആധുനിക കമ്പ്യൂട്ടിങ്ങ്‌ മാതൃകകള്‍ (ADVANCED

കമ്പ്യുട്ടര്‍ സയന്‍സ്‌ - XI!

COMPUTING PARADIGMS) അത്യന്താപേക്ഷിതമാണ്‌. ആധുനിക കമ്പ്യൂട്ടിങ്ങ്‌ മാതൃകകളില്‍,
പാരലല്‍ കമ്പ്യൂട്ടിങ്ങ്‌ (PARALLEL COMPUTING), ക്ലസ്സര്‍ കമ്പ്യൂട്ടിങ്‌ (CLUSTER COMPUTING),
ഗ്രിഡ്‌ കമ്പ്യൂട്ടിങ്ങ്‌ (GRID COMPUTING), ക്ലൌഡ്‌ കമ്പ്യൂട്ടിങ്ങ്‌ (CLOUD COMPUTING) തുടങ്ങിയവ
ഉള്‍പ്പെടുന്നു. പാരലല്‍ കമ്പ്യൂട്ടിങ്ങിന്റെയും ഡിസ്ര്രിബ്യൂറ്റഡ്‌ കമ്പ്യൂട്ടിങ്ങിന്റെയും വിവിധ

രൂപങ്ങളാണ്‌ ഇവയെല്ലാം ഇവ ചുവടെ ചര്‍ച്ച ചെയ്യുന്നു.

11.2 ഡിസ്ട്രിബ്ദുറ്റഡ്‌ കമ്പുടിങ്ങ്‌ (DISTRIBUTED COMPUTING)

നമ്മുടെ ദൈനംദിന ജീവിതത്തില്‍ ഡിസ്ര്രിബ്യൂറ്റഡ്‌ കമ്പ്യൂട്ടിങ്ങ്‌ ഉപയോഗിക്കുന്ന വിവിധ
മേഖലകള്‍ പരിഗണിക്കാം. കോര്‍ബാങ്കിങ്‌ സംവിധാനമാണ്‌ ഇപ്പോള്‍ ബാങ്കുകളില്‍ ഉപയോഗി
ക്കുന്നതെന്ന്‌ നമുക്കറിയാം. ഇതിന്റെ ഫലമായി ഏതു എ ടി എം കാണ്ടറില്‍ നിന്നും നമുക്ക്‌
പണം പിന്‍വലിക്കുവാന്‍ സാധിക്കുന്നു. ഇതുപോലെ ട്രെയിന്‍, വിമാന ടിക്കറ്റുകളും ഓണ്‍ലൈന്‍
ആയി നമുക്ക്‌ ബുക്ക്‌ ചെയ്യാം. ഇത്‌ എല്ലാം സാധ്യമാകുന്നത്‌ ഡിസ്ര്രിബ്യൂറ്റഡ്‌ സാഹചര്യം
ഉപയോഗിച്ചാണ്‌. ഏറ്റവും വലിയ ഡിസ്്രിബ്യൂറ്റഡ്‌ കമ്പ്യൂട്ടിങ്ങ്‌ സംവിധാനത്തിനുള്ള നല്ല ഒരു
ഉദാഹരണമാണ്‌ വേള്‍ഡ്‌ വൈഡ്‌ വെബ്‌ (7൦). ഇക്കാലത്തു ഡിസ്ദ്രിബ്യൂറ്റഡ്‌ വ്യവസ്ഥയാണ്‌
കമ്പ്യൂട്ടിങ്ങ്‌ മേഖലയില്‍ മേല്‍ക്കോയ്മ പുലര്‍ത്തുന്നത്‌. ഒരു വലിയ കൃത്യത്തെ ചെറിയ കൃത്യ
ങ്ങളായി വിഭജിച്‌ വിവിധ കമ്പ്യൂട്ടറുകളിലായി വിന്യസിച്ച്‌ പരിഹരിക്കുന്ന രീതിയാണ്‌ ഡിസ്‌
ര്രിബ്യൂറ്റഡ്‌ കമ്പ്യൂട്ടിങ്ങ്‌ എന്നത്‌. പിന്നീട്‌ ഓരോ കമ്പ്യൂട്ടറിലെയും ഫലങ്ങളെ സംയോജിപ്പിച്ച്‌
അന്തിമ ഫലത്തില്‍ എത്തിച്ചേരുന്നു. ഒരു വലിയ കൃത്യം ചെയ്യുന്നതിനാവശ്യമായ സമയം
കുറയ്ക്കുവാന്‍ ഡിസ്ട്രിബ്യൂറ്റഡ്‌ കമ്പ്യൂട്ടിങ്ങ്‌ വഴി

യൊരുക്കുന്നു.  പ്രൊരുസ്ത്റര്‍ |
ശൃംഖല വഴി പരസ്പരം ആശയവിനിമയം നടത്തുന്ന ന്‌ [ മമ്മി
രണ്ടോ അതിലധികമോ കമ്പ്യൂട്ടറുകളില്‍ ഒരു പ്രോ |! പ്രൊസവര്‍ | f
ഗ്രാമിന്റെ പല ഭാഗങ്ങള്‍ സമാന്തരമായി പ്രവര്‍ത്തി |; J /
മെമറി f
പ്പിച്ചാണ്‌ ഇത്‌ സാധ്യമാക്കുന്നത്‌. \ / [ പ്രൊസസ്സര്‍ ]
ഒറ്റ കമ്പ്യൂട്ടര്‍ ജോലി ചെയ്ത തീര്‍ക്കുവാന്‍ ആവശ്യ പ്രൊനുസ്ത്ര്‍ | a“
മായ സമയത്തേക്കാള്‍ കുറഞ്ഞ സമയത്തില്‍ ഡിസ്‌ [onan

ര്രിബ്യൂറ്റഡ്‌ കമ്പ്യൂട്ടിങ്ങ്‌ ജോലി ചെയ്ത്‌ തീര്‍ക്കുന്നു. ന . .
ടം ° ചിത്രം 777 WIM SimygQ’ കമ്പു്്ടിങ്‌

ഡിസ്ര്രിബ്യൂറ്റഡ്‌ കമ്പ്യൂട്ടിങ്ങില്‍, എല്ലാ പ്രൊസസ്സു

റുകള്‍ക്കും പരസ്പരം പങ്കിടാന്‍ കഴിയാത്ത സ്വകാര്യ മെമ്മറികളാണ്‌ ഉള്ളത്‌. ആയതിനാല്‍

ആശയങ്ങള്‍ സന്ദേശ രൂപത്തില്‍ മാത്രമായിരിക്കും. കൈമാറ്റം ചെയ്യപ്പെടുന്നത്‌. ഡിസ്ട്രിബ്യൂറ്റഡ്‌

കമ്പ്യൂട്ടിങ്ങ്‌ രീതിയുടെ ഘടന ചിത്രം 11.1 - ല്‍ കാണിച്ചിരിക്കുന്നു.
ഒ. ഡിസ്ദ്രിബ്യയുറ്റഡ്‌ കമ്പ്യുട്ടിങ്ങിന്റെ മേന്മകള്‍
ഡിസ്ര്രിബ്യൂറ്റഡ്‌ കമ്പ്യൂട്ടിങ്ങിന്റെ മേന്മകള്‍ ചുവടെ ചേര്‍ക്കുന്നു.

ചെലവ്‌ കുറയ്ക്കുന്നു: ഉപകരണങ്ങളുടെ പരസ്പര സഹകരണത്തിലൂടെ കമ്പ്യൂട്ടിങ്ങ്‌
പ്രക്രിയയുടെ മൊത്തത്തിലുള്ള ചെലവ്‌ ഡിസ്രടിബ്യൂറ്റഡ്‌ കമ്പ്യൂട്ടിങ്ങ്‌ കുറയ്ക്കുന്നു.

വേഗത: കമ്പ്യൂട്ടേഷണല്‍ ഭാരം വ്യത്യസ്ത നോഡുകളിലായി വിനൃസിക്കുന്നതിനാല്‍ ഓരോ

ന്നിനുമുള്ള ജോലി ഭാരം കുറയുകയും തത്ഫലമായി വേഗത വര്‍ദ്ധിക്കുകയും ചെയ്യുന്നു.

11. കമ്പ്യുട്ടിങ്ങിലെ മുന്നേറ്റങ്ങ

വിശ്വാസ്യത : ഏതെങ്കിലും ഒരു കമ്പ്യൂട്ടറിന്റെ പ്രവര്‍ത്തനം നിലച്ചാലും ഡിസ്ര്ടിബ്യൂറ്റഡ്‌
കമ്പ്യൂട്ടിങ്ങ്‌ സംവിധാനത്തിന്റെ പ്രവര്‍ത്തനം തടസപ്പെടുന്നില്ല.

വിപുലീകരണ ശേഷി: ഡിസ്ദ്രിബ്യൂറ്റഡ്‌ കമ്പ്യൂട്ടിങ്ങില്‍ ആവശ്ൃത്തിനനുസരിച്ചു നോഡുക
ളുടെ എണ്ണം വ്യത്യാസപ്പെടുത്താം .

0. ഡിസ്ദ്രിബ്യുറ്റഡ്‌ കമ്പ്യുടിങ്ങിന്റെ പോരായ്മകള്‍

ഡിസ്ര്രിബ്യൂറ്റഡ്‌ കമ്പ്യൂട്ടിങ്ങിന്റെ പരിമിതികള്‍ ചുവടെ ചേര്‍ക്കുന്നു.

സങ്കീര്‍ണതകള്‍ : ഡിസ്ര്രിബ്യൂറ്റഡ്‌ കമ്പ്യൂട്ടിങ്ങ്‌ സംവിധാനം ഒരുക്കുന്നതിനായി ധാരാളം
പ്രത്യേക പ്രോഗ്രാമുകള്‍ ആവശ്യമാണ്‌.

സുരക്ഷിതത്വം : ഈ സംവിധാനത്തില്‍ ശൃംഖലയിലൂടെ കമ്പ്യൂട്ടറുകളിലേക്കു വിവരങ്ങള്‍
കൈമാറ്റം ചെയ്യേണ്ടി വരുന്നു. ആയതിനാല്‍ അനധികൃത ഉപയോക്താക്കള്‍ വിവരങ്ങള്‍
കൈക്കലാക്കാനും അവയെ ദുരുപയോഗം ചെയ്യാനും സാധ്യത കൂടുതലാണ്‌

ശൃംഖലയോടുള്ള ആശ്രയത്വം: ഡിസ്്രിബ്യൂറ്റഡ്‌ സംവിധാനം ശൃംഖലയുമായി ബന്ധിപ്പിച്ചിരി
ക്കുന്നതിനാല്‍, ശ്ൃംഖലയ്ക്കു തകരാറുണ്ടായാല്‍ മുഴുവന്‍ സംവിധാനവും അസ്ഥിരമാകും.

വിവിധ തരം ഡിസ്ദ്രിബ്യൂറ്റഡ്‌ കമ്പ്യൂട്ടിങ്ങ്‌ രീതികള്‍ നമുക്ക്‌ ഇപ്പോള്‍ ചര്‍ച്ച ചെയ്യാം.

11.2.1 പാരലല്‍ കമ്പ്യൂട്ടിങ്ങ്‌ (parallel computing)

സാധാരണയായി സോഫ്റ്റ്വെയറുകള്‍ തയ്യാറാക്കുന്നത്‌ നിര്‍ദ്ദേശങ്ങള്‍ ഒന്നിനു പുറകേ മറ്റൊ
ന്നായി പ്രവര്‍ത്തിക്കത്തക്ക വിധത്തിലുള്ള കമ്പ്യൂട്ടിങ്‌ രീതിയ്ക്ക്‌ വേണ്ടിയാണ്‌. അതായത്‌ ഒരു
പ്രോസസ്സര്‍ മാത്രം ഉള്ള കമ്പ്യൂട്ടറില്‍ ആയിരിക്കും ഈ സോഫ്റ്റ്വെയര്‍ പ്രവര്‍ത്തിക്കുക. ഇവിടെ
ഒരു കൃത്യത്തെ തുടര്‍ച്ചയായുള്ള നിര്‍ദേശങ്ങള്‍ ആയി വിഭജിക്കുന്നു. ഈ നിര്‍ദ്ദേശങ്ങള്‍ ക്രമാ
നുഗതമായി നടപ്പിലാക്കുന്നു. ഒരു സമയത്ത്‌ ഒരു നിര്‍ദേശം ആയിരിക്കും നടപ്പിലാക്കുന്നത്‌.
ഇതിനെ സിരിയല്‍ കമ്പ്യൂട്ടിങ്ങ്‌ എന്ന്‌ പറയുന്നു. സിരിയല്‍ പ്രോസസ്സിങ്ങ്‌ ചിത്രം 11.2 ല്‍ ചിത്രീക
രിച്ചിരിക്കുന്നു.

പ്രോബ്ലം

നിര്‍ദ്ദേശങ്ങള്‍

tN t3 2 tf

ചിത്രം 11.2: WIPO CUnsTOGueas”

അഞ്ചുപേര്‍ ചേര്‍ന്ന്‌ ഒരു കയര്‍ ഉപയോഗിച്ച്‌ ഒരു പാറയെ ഉയര്‍ന്നു എന്ന്‌ സങ്കല്‍പ്പിക്കുക.
സമാന്തരമായി ആണ്‌ ഇവരെല്ലാം പാറ ഉയര്‍ത്താന്‍ ശ്രമിക്കുന്നത്‌. ഇതുപോലെയാണ്‌ പാരലല്‍

കമ്പ്യൂട്ടിങ്ങില്‍ പ്രശ്നങ്ങളെ വിവിധ പ്രോസസ്സിംഗ്‌ യൂണിറ്റുകളില്‍ പരിഹരിക്കുന്നത്‌. ചെയ്യേണ്ട
പ്രവര്‍ത്തിയെ വിഭജിച്ച്‌ വിവിധ പ്രോസസ്സറുകള്‍ക്ക്‌ നല്‍കുന്നു. വിഭജിക്കപ്പെട്ട ഇത്തരം ചെറിയ

കമ്പ്യുട്ടര്‍ സയന്‍സ്‌ - XI!

പ്രവര്‍ത്തികള്‍ വിവിധ പ്രോസസ്സറുകള്‍ നിര്‍മ

യം
സമാന്തരമായി ചെയ്യുന്നു. പാരലല്‍ കമ്പ്യൂ — 1) | | | — വച]
ട്ടിങ്ങില്‍ വ്ൃതൃസ്ത പ്രൊസസ്സുറുകള്‍

പൊതുവായി ഉപയോഗിക്കുന്ന മെമ്മറികള്‍ ളി 1) | | | -_ വപ]
ലഭ്യമാണ്‌.

ക ക

സന്ദേശങ്ങള്‍ മാധ്യമം വഴി കൈമാറു

ന്നതിന്‌ പകരം പൊതുവായ മെമ്മറികളില്‍ aed 1) | | | ത വപ]

1 e oe 4

സൂക്ഷിച്ച്‌ ആശയവിനിമയം നടത്താം.
ചിത്രം ൩3 ല്‍ പാരലല്‍ പ്രോസസ്സിംഗ്‌ ചിത്രം 11.3: പാത്‌ പ്രോരന്ത്രിംഗ്‌
ചി്രീകരിച്ചിരിക്കുന്നു. പൊതുവായ മെ

2201 വിവിധ പ്രോസസ്സിങ്ങ്‌ യൂണിറ്റുകള്‍ | പ്രൊസസ്സര്‍ | പ്രൊസസ്സര്‍ പ്രൊസസ്സര്‍

എങ്ങനെ ഉപയോഗിക്കുന്നു എന്ന്‌ ചിത്രം
11.4 വിശദീകരിക്കുന്നു. പട്ടിക 11.1 ല്‍
പാരലല്‍ കമ്പ്യൂട്ടിങ്ങ്‌, സീരിയല്‍ കമ്പ്യൂ
ട്ടിങ്ങ്‌ എന്നിവ തമ്മില്‍ താരതമ്യം ചെ
യാതിരിക്കുന്നു. കാലാവസ്ഥ പ്രവചനം, ആണവ ശാസ്ത്രം, ബഹിരാകാശ ശാസ്ത്രം
തുടങ്ങിയവ പാരലല്‍ കമ്പ്യൂട്ടിങ്ങ്‌ ഉപയോഗിക്കുന്ന ചില മേഖലകളാണ്‌.

ഒരു പ്രോസസര്‍ ഉപയോരിക്കുന്നു ഒന്നിലധികം പ്രോസസ്പറുകള്‍ പൊതുവായ മെമറി ഉപയോ
രിക്കുന്നു

ചിത്രം 11.4: പാത്‌ ദ്പ്രാനശ്ത്രിംത്തിലെ 0200) പരു വയ്‌ക്കല്‍

കൃത്യത്തെ പല നിര്‍ദേരങ്ങളായി വിഭജി കൃത്യത്തെ സമാന്തരമായി നിര്‍ദ്ധാരണം ചെയ്യുവാന്‍ കഴിയുന്ന
ക്കുന്നു. വിധത്തില്‍ പല ഭാഗങ്ങളാക്കി വിരമിക്കുന്നു

നിര്‍ദ്ദേശങ്ങള്‍ ഒന്നിന്‌ പുറകെ മറ്റൊന്നായി നിര്‍ദേശങ്ങളുടെ ഓരോ ഭാഗവും വൃര്യസ്ത പ്രോസസ്സറുകളില്‍
പ്രവര്‍ത്തിക്കുന്നു ഒന്ിച്ച്‌ പ്രവര്‍ത്തിക്കുന്നു

ഒരു സമയം ഒരു നിര്‍ദേശം മാത്രമ ഒന്നിലധികം നിര്‍ദ്ദേശങ്ങള്‍ വ്യത്യസ്ത പ്രൊസസ്ത്റുകളില്‍
പ്രോസെസ്സ്റില്‍ പ്രവര്‍ത്തിക്കു ഒരേസമയം സമാന്തരമായി പ്രവര്‍ത്തിക്കുന്നു

പട്ടിക 7/7 VIGO ANSZSICB, ICL കമ്പ്്ടിത്്‌ എ

അനേകം CPU കളുള്ള വേഗതയേറിയ കമ്പ്യൂട്ടറാണ്‌ ഒരു
സുഷര്‍ കമ്പ്യുട്ടര്‍. സാധാരണ കമ്പ്യൂട്ടര്‍ സീരിയല്‍ പ്രകിയ
ഉപയോഗിക്കുന്നു. എന്നാല്‍ ഒരു സൂുഷര്‍ കമ്പ്യുട്ടര്‍ തികച്ചും
വിഭിന്നമായ രീതിയിലാണ്‌ പ്രവര്‍ത്തിക്കുന്നത്‌. സീരിയല്‍
പ്രക്രിയയ്ക്കു പകരം സവിശേഷമായ സമാന്തര പ്രരകിയയാണ്‌ ഉപയോദി
ക്കുന്നത്‌. അതായതു ഒരു കാര്യം ഒരു സമയത്തു ചെയ്യുന്നതിന്‌ പകരം
ഒന്നിലധികം കാര്യങ്ങള്‍ ഒരേ സമയത്തു ചെയ്യുക എന്ന രീതിയാണ്‌ ഉത്‌.
ഉന്ത്യയിലെ ഏറ്റവും വേഗതയേറിയ സൂഷര്‍ കമ്പ്യുട്ടര്‍ ആയി കരുതുന്നത്‌ ഉന്‍സ്സിവ്വുട്ട്‌ ഓഫ്‌ ട്രോഭിക്കല്‍ മീറ്റിയോ
റോളജിയുടെ ആദിത്യ എന്ന സുഷര്‍ കമ്പ്യൂട്ടര്‍ ആണ്‌. 790 + TERA FLOPS ഉയര്‍ന്ന പ്രവര്‍ത്തനക്ഷമതയുള്ള
ആദിത്യ എന്ന കമ്പൂട്ടര്‍ IBM iDataPlex cluster ആണ്‌ ഉപയോശിക്കുന്നത്‌. ഇഉഷോള്‍ ഇന്ത്യയിലെ ഏറ്റവും
വേധഥതയേറിയ സുഷര്‍ കമ്പ്യുട്ടായ ഉന്‍സ്സിവ്വൂട്ട്‌ ഓഫ്‌ ട്രോഷിക്കല്‍ മീറ്റിയോറോളജിയുടെ പ്രത്യുഷ്‌ 6.8 Peta
Flops വേരതയില്‍ ആണ്‌ പ്രവര്‍ത്തിക്കുന്നത്‌. ലോകത്തിലെ തന്നെ നാലാമത്തെ വേഗതയേറിയ കമ്പ്യുട്ടറാണിത്‌.

11. കമ്പ്യുട്ടിങ്ങിലെ മുന്നേറ്റങ്ങ

a പാരലല്‍ കമ്പ്യൂട്ടിങ്ങിന്റെ മേന്മകള്‍

പാരലല്‍ കമ്പ്യൂട്ടിങ്ങിന്‌ ധാരാളം മേന്മകള്‍ ഉണ്ട്‌. അവയില്‍ ചിലതു ചുവടെ ചേര്‍ക്കുന്നു.

© ഒന്നോ അതിലധികമോ നോഡുകള്‍ തകരാറിലായാലും താഴ്ന്ന പ്രവര്‍ത്തനക്ഷമതയോടു
കൂടി പാരലല്‍ കമ്പ്യൂട്ടിങ്ങ്‌ സംവിധാനം പ്രവര്‍ത്തിക്കുന്നു. ഇതിനെ ഫോള്‍ട്ട്‌ ടോളറന്‍സ്‌
(Fault Tolerance) എന്ന്‌ പറയുന്നു.

© ഓരോ ഉപയോക്താവിനും ഈ സംവിധാനത്തിലെ കമ്പ്യൂട്ടിങ്ങ്‌ ശക്തിയും സംഭരണ
ഉപകരണങ്ങളും മറ്റുള്ളവരുമായി പങ്കിടാം

° പ്രക്രിയകളെ വിവിധ നോഡുകളിലേക്കു വികേന്ദ്രീകരിക്കുന്നതിനാല്‍, ജോലിഭാരം സംവി
ധാനം മൊത്തത്തില്‍ പങ്കിടുന്നു. ഇതിനെ ജോലി ഭാരം പങ്കുവെക്കല്‍ (ലോഡ്‌ ഷെയറിങ്‌)
എന്ന്‌ വിളിക്കുന്നു.

ഭ ഈ സംസമ്പ്രദായത്തെ വളരെ എളുപ്പത്തില്‍ വിപുലീകരിക്കാനും വ്യാപിപ്പിക്കാനും സാധി
ക്കും.

1. പാരലല്‍ കമ്പ്യുട്ടിങ്ങിന്റെ പോരായ്മകള്‍

പാരലല്‍ കമ്പ്യൂട്ടിങ്ങിന്റെ ചില പോരായ്മകള്‍ ഇവയാണ്‌:

€ സീരിയല്‍ ആപ്ലിക്കേഷനെ അപേക്ഷിച്ചു തത്തുല്യമായ പാരലല്‍ ആപ്ലിക്കേഷന്റെ
പ്രവര്‍ത്തനം അതിസങ്കീര്‍ണമാണ്‌

൭ ഒരു കമ്പ്യൂട്ടറില്‍ ശ്രവര്‍ത്തിക്കുന്ന പ്രോ്ഗാം മറ്റൊന്നിലേക്കു മാറ്റുമ്പോള്‍ ആവശ്യമായ
മാറ്റങ്ങള്‍ വരുത്തിയാല്‍ മാത്രമേ ഈ പ്രോഗ്രാമുകള്‍ കൃത്യമായി പ്രവര്‍ത്തിക്കുകയുള്ളൂു.

11.2.2 ഗ്രിഡ്‌ കമ്പ്യൂട്ടിങ്ങ്‌

കോടിക്കണക്കിനു സ്വകാര്യ കമ്പ്യൂട്ടറുകളും (സര്‍വറുകള്‍, ഡെസ്‌ക്ടോപ്പുകള്‍ ലാപ്ടോപ്പുകള്‍
തുടങ്ങിയവയും) ആയിരക്കണക്കിന്‌ മൊബൈല്‍ ഫോണുകള്‍, ടെലിസ്‌കോപ്പുകള്‍, സെന്‍
സറുകള്‍ തുടങ്ങിയ ഉപകരണങ്ങളും പരസ്പരം ബന്ധിപ്പിച്ച്‌ ഒരു ശക്തമായ കമ്പ്യൂട്ടര്‍ രൂപ
കല്‍പ്പന ചെയ്യുന്നത്‌ ഒന്ന്‌ സങ്കല്‍പ്പിച്ചു നോക്കുക. ഇതാണ്‌ ഗ്രിഡ്‌ കമ്പ്യൂട്ടിങ്ങ്‌. വൈദ്യുതോര്‍ജം
ലഭ്യമാകുന്നതുപോലെ കമ്പ്യൂട്ടേഷണല്‍ ഈര്‍ജം (വിഭവങ്ങള്‍, സേവനങ്ങള്‍, ഡാറ്റ) ലഭിക്കുന്ന
തിനെ ഗ്രിഡ്‌ കമ്പ്യൂട്ടിങ്ങ്‌ എന്ന്‌ പറയുന്നു. ഒരു പൊതുലക്ഷ്യത്തിനായി പ്രവര്‍ത്തിക്കുന്നതും
ലോകത്തിന്റെ വിവിധ ഭാഗങ്ങളിലായി വിനൃസിച്ചിരിക്കുന്നതുമായ വിഭവങ്ങളുടെ ശേഖരമാണ്‌
ഗ്രിഡ്‌. വൈദ്യുതോര്‍ജം എവിടെ, എങ്ങനെ ഉണ്ടാക്കുന്നു എന്നത്‌ പരിഗണിക്കാതെ ഒരു വൈദ്യുത
സോക്കറ്റ്‌ വഴി അത്‌ ലഭിക്കുന്നതുപോലെ, കമ്പ്യൂട്ടേഷണല്‍ ഈര്‍ജവും ഉപയോക്താക്കള്‍ക്ക്‌
ലഭ്യമാകുന്നു. ഇവിടെ ഗ്രിഡിലുള്ള കമ്പ്യൂട്ടറുകളിലെ പ്രോഗ്രാമുകളും, ഉപയോഗിക്കാത്ത.
അനുബന്ധ ഉപകരണങ്ങളും (സാധാരണയായി പ്രവര്‍ത്തന സമയവും മെമ്മറിയും) ഗ്രിഡിലേ
മറ്റു കമ്പ്യൂട്ടറുകള്‍ക്ക്‌ ഉപയോഗിക്കാന്‍ സാധിക്കുന്നു.

ഗ്രിഡിലെ കമ്പ്യൂട്ടറുകള്‍ തമ്മിലുള്ള വിനിമയ വേഗത കുറവായതിനാല്‍, കൃത്യം വിഭജിച്ച്‌

സ്വതന്ത്ര ഭാഗങ്ങളാക്കി (ഗിഡിലെ വിവിധ കമ്പ്യൂട്ടറുകളിലേക്ക്‌ അയയ്ക്കുന്നു. ഓരോ

കമ്പ്യുട്ടര്‍ സയന്‍സ്‌ - XI!

കമ്പ്യൂട്ടറില്‍ നിന്നും ലഭിക്കുന്ന ഫലം സര്‍വറിലേക്കു തിരികെ അയയ്ക്കുന്നു. (MUNG പൂര്‍
ത്തിയാകുന്ന സേവനങ്ങള്‍ വിവിധതരത്തിലുള്ളതാണ്‌. വിജ്ഞാനം ലഭ്യമാക്കുന്നവ (knowledge
grid), ഡാറ്റ ലഭ്യമാക്കുന്നവ (data grid), കമ്പ്യൂട്ടേഷന്‍ സാധുൃമാക്കുന്നവ (computational grid)
മുതലായവ. വളരെ വേഗം പരസ്പര സഹകരണം സാധ്യമാകുന്നതിനാല്‍ നിലവിലുള്ള ഹാര്‍ഡ്‌
വെയര്‍ ഫലപ്രദമായി ഉപയോഗിച്ചു കൊണ്ട്‌ വലുതും സങ്കീര്‍ണവുമായ പ്രശ്നങ്ങളെ ചുരു
ങ്ങിയ സമയത്തിനുള്ളില്‍ ഗ്രിഡ്‌ കമ്പ്യൂട്ടിങ്ങ്‌ പരിഹരിക്കുന്നു. ദുരന്ത നിവാരണം, കാലാവസ്ഥാ
പ്രവചനം, ഓഹരി കമ്പോള പ്രവ
ചനം, ബയോ ഇന്‍ഫോര്‍മാറ്റി പ്രൊസസ്സര്‍
ക്സ്‌, തുടങ്ങിയ മേഖലകളില്‍
ഗ്രിഡ്‌ കമ്പ്യൂട്ടിങ്ങ്‌ ഉപയോഗി
ക്കുന്നു. ഗ്രിഡ്‌ കമ്പ്യൂട്ടിങ്ങ്‌ രീതി
യുടെ ഘടന ചിത്രം 11.5 ല്‍ ചിത്രീ ചിത്രം 11.5: (OW ANSGAR’ സംവിധാനം

കരിച്ചിരിക്കുന്നു.

a ഗ്രിഡ്‌ കമ്പ്യൂട്ടിങ്ങിന്റെ മേന്മകള്‍

ഗ്രിഡ്‌ കമ്പ്യൂട്ടിങ്ങ്‌ ഉപയോഗിക്കുന്നതിന്റെ ഗുണങ്ങള്‍ ഇവയാണ്‌

ഭ അതിസങ്കീര്‍ണമായ വലിയ കൃത്യങ്ങള്‍ കുറഞ്ഞ സമയം കൊണ്ട്‌ ചെയ്തു തീര്‍ക്കുവാന്‍
ഗ്രിഡുകള്‍ക്കു കഴിയുന്നു

൫ നിലവില്‍ ലഭ്യമായ ഉപകരണങ്ങളെ ഗ്രിഡുകള്‍ കൂടുതല്‍ ഫലപ്രദമായി ഉപയോഗിക്കുന്നു.

€ ഡെസ്‌ക്ടോപ്പ്‌ കമ്പ്യൂട്ടറുകള്‍ അല്ലെങ്കില്‍ സര്‍വര്‍ കമ്പ്യൂട്ടറുകള്‍ കൂട്ടിച്ചേര്‍ത്ത്‌ വളരെ
അനായാസമായി കമ്പ്യൂട്ടിങ്ങ്‌ ശക്തി വര്‍ദ്ധിപ്പിക്കാം

1. ഗ്രിഡ്‌ കമ്പ്യൂട്ടിങ്ങിന്റെ പോരായ്മകള്‍

ഗ്രിഡ്‌ കമ്പ്യൂട്ടിങ്ങിന്റെ ന്യൂനതകള്‍ ഇവയാണ്‌:

൫ കമ്പ്യൂട്ടറുകള്‍ തമ്മിലുള്ള ആശയ വിനിമയ വേഗത കുറവായതിനാല്‍ ്ഗിഡിന്റെ
പ്രവര്‍ത്തന വേഗതയെ അത്‌ ബാധിക്കുന്നു

൫ വിവിധ കമ്പ്യൂട്ടറുകളും സര്‍വറുകളും തമ്മിലുള്ള ലൈസന്‍സിങ്‌ പ്രശ്നങ്ങള്‍ ചില ആപ്ലി
ക്കേഷനുകളുടെ പ്രവര്‍ത്തനത്തെ ബാധിക്കുന്നു.

11.2.3 കലന്റര്‍ കമ്പ്യൂട്ടിങ്ങ്‌

ക്ലസ്റ്റര്‍ കമ്പ്യൂട്ടിങ്ങ്‌ എന്നത്‌ കമ്പ്യൂട്ടിങ്ങ്‌ മേഖലയിലെ ഒരു സംവിധാനമാണ്‌. ഇവിടെ ഒരു കൂട്ടം
സ്വകാര്യ കമ്പ്യൂട്ടറുകള്‍, സംഭരണ ഉപകരണങ്ങള്‍ എന്നിവയെ പരസ്പരം ബന്ധിപ്പിച്ച്‌ ഒറ്റ
കമ്പ്യൂട്ടര്‍ എന്ന നിലയില്‍ പ്രവര്‍ത്തിപ്പിക്കുന്നു. ക്ലസ്റ്റര്‍ കമ്പ്യൂട്ടറിന്റെ ഭാഗങ്ങള്‍ വേഗതയേറിയ
ഒരു ലാന്‍ (LAN) ശൃംഖല വഴി ബന്ധിപ്പിച്ചിരിക്കുന്നു. TY സമാന്തര പ്രക്രിയ വഴിയാണ്‌
ഗണന ശക്തി കിട്ടുന്നത്‌. ശാസ്ര്ര മേഖലയിലും, മറ്റു ആവശ്യങ്ങള്‍ക്കും ഉപയോഗിക്കുന്ന
സമാന്തര പ്രക്രിയയുടെ ഏറ്റവും ചിലവു കുറഞ്ഞ മാതൃകയാണ്‌ ഇത്‌. ക്ലസ്റ്റര്‍ കമ്പ്യൂട്ടിങ്‌
ഉപയോഗിക്കുന്നതിനുള്ള പ്രധാന കാരണം തകരാറു പരിഹരിക്കുവാനുള്ള അവയുടെ കഴിവും,
അതുവഴി കമ്പ്യൂട്ടേഷണല്‍ ഈര്‍ജ്ജ ലഭൃത ഏതു സമയവും ഉറപ്പാക്കാമെന്നതുമാണ്‌.

ചിത്രം 11.6 ല്‍ ഒരു കമ്പ്യൂട്ടിങ്‌ ക്ലസ്റ്റര്‍ ചി(്രീകരിച്ചിരിക്കുന്നു.

11. കമ്പ്യുട്ടിങ്ങിലെ മുന്നേറ്റങ്ങ

ഇലക്ര്യോണിക്‌ വാണിജ്യം (ഇ-കോമേഴ്സ്‌) മുതല്‍
ഉയര്‍ന്ന കാര്യക്ഷമത ആവശ്യമുള്ള ഡാറ്റാബേസ്‌
ആപ്ലിക്കേഷനുകള്‍ വരെ ക്ലസ്റ്റര്‍ കമ്പ്യൂട്ടറുകള്‍ പിന്തു
ണയ്ക്കുന്നു.

ക്ലസ്റ്റര്‍ കമ്പ്യൂട്ടറുകളില്‍ ഏറ്റവും വിപുലമായി ഉപയോ
ഗിക്കുന്ന ഓപ്പറേറ്റിംഗ്‌ സിസ്റ്റമാണ്‌ ലിനക്സ്‌.

ഒ. ക്ലസ്റ്റര്‍ കമ്പ്യൂടിങ്ങിന്റെ മേന്മകള്‍

ക്ലസ്റ്റര്‍ കമ്പ്യൂട്ടിങ്‌ ഉപയോഗിക്കുന്നതിന്റെ മേന്മ

കള്‍ ഇവയാണ്‌. ചിത്രം 16 ഒരു കമ്പട്ടിത്‌കൂര്ശൂര്‍
വില നിര്‍വഹണ അനുപാതം (Price-perfomrance Ratio): HIVE കമ്പ്യൂട്ടിങ്ങ്‌ പ്രവര്‍ത്തന
ചെലവ്‌ ഗണ്യമായി കുറയ്ക്കുന്നു.
ലഭൃത : ഒരു ഉപകരണം തകരാറായാലും സംവിധാനം മൊത്തമായി അപ്പോഴും പ്രവര്‍ത്തന
ക്ഷമമായിരിക്കും
വികസിപ്പിക്കല്‍: ആവശ്യകതയനുസരിച്ചു പ്രോസസ്സറും നോഡും ക്ടസ്റ്റുകളിലേക്ക്‌ കൂട്ടിച്ചേര്‍ക്കാം.
0. ക്ലസ്സര്‍ കമ്പ്യൂട്ടിങ്ങിന്റെ പോരായ്മകള്‍
ക്ലസ്റ്റര്‍ കമ്പ്യൂട്ടിങ്ങ്‌ ഉപയോഗിക്കുന്നത്‌ മൂലം ഉള്ള പോരായ്മകള്‍ ഇവയാണ്‌.
പ്രോഗ്രാം എഴുതുമ്പോള്‍ ഉണ്ടാകുന്ന പ്രശ്നങ്ങള്‍ : വ്യത്യസ്ത കമ്പ്യൂട്ടറുകളില്‍ വിവിധതരം
സോഫ്റ്റ്‌വെയര്‍ ഉപയോഗിക്കുകയാണെങ്കില്‍, അവ കൂട്ടിയോജിപ്പിച്ചു ഒന്നാക്കുമ്പോള്‍
ബുദ്ധിമുട്ടുകള്‍ ഉണ്ടാകാം.

തകരാറുകള്‍ കണ്ടെത്തുവാനുള്ള ബുദ്ധിമുട്ട: ഒറ്റ അസ്തിത്വമായി കൈകാര്യം ചെയ്യുന്നതി
നാല്‍ തകരാറുള്ള ഘടകങ്ങള്‍ കണ്ടെത്തുവാന്‍ ബുദ്ധിമുട്ടാണ്‌.

Beowulf Cluster എന്നത്‌, പേഴ്സണല്‍ കമ്പ്യൂട്ടറുകള്‍ ഉപയോിച്ച്‌ നിര്‍മ്മിച്ച ചെലവ്‌ കുറഞ്ഞ
Be 803 IVS ആണ്‌. ഒരു ലാന്‍ (1.4) കണക്ഷനും കുറച്ചു പഴയ കമ്പ്യൂട്ടറുകളും ഉപയോശിച്ച്‌ ഉത്‌
നിര്‍മിക്കാം. ലിനക്സ്‌, സൊളാരിസ്‌ തുടങ്ങിയ MOY ഓഷേറ്റിംര്‌ സിസ്സങ്ങളിലാണ്‌ Beowulf
Cluster ലെ കമ്പ്യൂട്ടറുകള്‍ പ്രവര്‍ത്തിക്കുന്നത്‌. ഉയര്‍ന്ന നിലവാരത്തിലുള്ള പ്രവര്‍ത്തനം കാഴ്ചവെച്ചില്ലെങ്കിലും
ഇവയുടെ പ്രവര്‍ത്തനം ഒരു സാധാരണ കമ്പയൂട്ടിന്റെ പ്രവര്‍ത്തനത്തെക്കാര്‍ പല മടങ്ങ്‌ മികച്ചതാണ്‌.

11.2.4 കഏഡ്കമ്പയുട്ടിങ്ങ്‌

OW കമ്പ്യൂട്ടിങ്ങ്‌ പ്രചാരമേറി വരുന്ന ഒരു കമ്പ്യൂട്ടിങ്ങ്‌ സാങ്കേതിക വിദ്യയാണ്‌. ഉപയോ
ക്താവിന്‌ ആവശ്യമുള്ള വിഭവങ്ങള്‍, അടിസ്ഥാന സാകര്യങ്ങള്‍, സോഫ്റ്റ്വെയറുകള്‍ എന്നിവ
പങ്കുവെക്കുക എന്നതാണ്‌ ഇതിന്റെ പരമ പ്രധാനമായ ലക്ഷ്യം. ഇന്റര്‍നെറ്റും കേന്ദ്രീകൃത
വിദൂര സര്‍വറുകളും ഉപയോഗിച്ച്‌ ഡാറ്റയും ആപ്ലിക്കേഷനുകളും കാത്ത്സൂക്ഷിക്കുന്നു.

വിദൂര സ്ഥലത്ത്‌ സംരക്ഷിച്ചിരിക്കുന്ന കമ്പ്യൂട്ടിങ്ങ്‌ വിഭവങ്ങളെ ഒരു സേവനമായി ഉപയോക്താ
വിന്‌ നല്‍കുക എന്നതാണ്‌ HOW കമ്പ്യൂട്ടിങ്ങ്‌ കൊണ്ട്‌ ഉദ്ദേശിക്കുന്നത്‌. ഇ-മെയില്‍ സേവനം

ഒരു ക്ലൌഡ്‌ കമ്പ്യൂട്ടിങ്ങിന്‌ ഉദാഹരണമാണ്‌. വെബ്‌ അധിഷ്ഠിത ഇ-മെയില്‍ സേവനദാതാ

കമ്പ്യുട്ടര്‍ സയന്‍സ്‌ - XI!

ക്കളായ യാഹു, ജിമെയില്‍, BOF ലുക്ക്‌ തുടങ്ങിയവ സ്വകാര്യ ഇമെയില്‍ അക്കാണ്ടുകള്‍
പരിപാലിക്കുന്നതിനാവശ്യമായ ഹാര്‍ഡ്വെയറും സോഫ്റ്റ്വെയറും സൂക്ഷിക്കുന്നു. ഇ-മെയില്‍
അക്കണ്ട്‌ ഉപയോഗിക്കേണ്ടി വരുമ്പോള്‍ വെബ്‌ ര്രൌസറില്‍ ഇ-മെയില്‍ ക്ലൈന്റ്‌ തുറന്നു
ലോഗിന്‍ ചെയ്ത്‌ ഉപയോഗിക്കുന്നു. ഈ ല്ര്രകിയ്ക്ക്‌ ഇന്റര്‍നെറ്റ്‌ എപ്പോഴും ആവശ്യമാണ്‌.
നമ്മുടെ ഇ-മെയില്‍ സന്ദേശങ്ങളും, സന്ദേശങ്ങള്‍ കൈകാര്യം ചെയ്യുന്ന സോഫ്റ്റ്വെയറുകളും
നമ്മുടെ കമ്പ്യൂട്ടറില്‍ അല്ല സൂക്ഷിച്ചിരിക്കുന്നത്‌. ഇ-മെയില്‍ സേവനദാതാക്കള്‍ ഇവയെ
ക്ലൂൌഡിലാണ്‌ സൂക്ഷിച്ചിരിക്കുന്നത്‌. എവിടെ നിന്നും ഏതു സമയത്തും BOUT നിന്ന്‌ ഇന്റര്‍നെറ്റ്‌
വഴി നമുക്ക്‌ ഇവ ഉപയോഗിക്കാം.

ഇമെയില്‍ സേവനം പോലെ, ഓഫീസ്‌ സോഫ്റ്റ്വെയര്‍ (വേര്‍ഡ്‌ പ്രൊസസ്സര്‍ , സ്പ്രെഡ്‌ ഷീറ്റ്‌
എന്നിവ) ്രാഫിക്‌ സോഫ്റ്റ്വെയര്‍ തുടങ്ങിയവ ഇപ്പോള്‍ ക്ലൌഡ്‌ വഴി ലഭ്യമാണ്‌. വ്യക്തികള്‍ക്ക്‌
ഈ സോഫ്ട്വെയറുകള്‍ സ്വകാര്യ ആവശ്യങ്ങള്‍ക്കായി ഉപയോഗിക്കുവാനും, തനതു ഫയ
ലുകള്‍ (ഡോക്യുമെന്റുകള്‍, സ്പ്രെഡ്‌ ഷിന്റുകള്‍, ചിത്രങ്ങള്‍ തുടങ്ങിയവ) ക്ലൂൌഡിലെ സ്വകാര്യ

സംഭരണ സ്ഥലത്തു സൂക്ഷിക്കുവാനും കഴിയും. ക്ലൌഡ്‌ കമ്പ്യൂട്ടിങ്ങ്‌ രീതി എന്നത്‌ ഒരു കമ്പ്യൂ

ട്ടിങ്ങ്‌ മാതൃകയാണ്‌. ഇവിടെ കമ്പ്യൂട്ടിങ്ങ്‌ ശക്തി, സംഭരണശേഷി, ശൃംഖല, സോഫ്റ്റ്വെയര്‍
തുടങ്ങിയവയെ സംയോജിപ്പിച്ച്‌, വിദുര | |

odand

തയില്‍ ലഭ്യമാകുന്ന വിധത്തില്‍, ഇന്റര്‍ A
നെറ്റിലെ ഒരു സേവനമായി മാറ്റിയിരിക്കു es

കിക്‌ ആപ്പിക്കേഷന്‍ മ
ന്നു. ലഭ്യമാകേണ്ട വിവരങ്ങള്‍ ആകാ =
v y പൂ 5
NOD മേഘങ്ങള്‍ സ്ഥിതി ചെയുന്നത്‌ cent a
. ar
പോലുള്ള BO} BOW സംവിധാനത്തില്‍ afeadie നി
നിന്നോ വിദൂര സ്ഥലത്ത്‌ നിന്നോ ലഭി = a |
y സക്തി വിവരം )
ക്കുന്നതിനാലാണ്‌ ക്ലൌഡ്‌ എന്ന്‌ ഈ athe നാട്ടി
സംവിധാനത്തെ വിശേഷിപ്പിക്കുന്നത്‌. ; അടിസ്ഥാന meaqint

ക്ലൌഡ്കമ്പ്യൂട്ടിങ്ങ്‌ ഉപയോഗിക്കണമെ
ക്കില്‍ ഇന്റര്‍നെറ്റ്‌ സേവനവും ക്ലൌഡ്‌ ൧൭ ല്‌

സേവനദാതാവ്‌ നല്‍കുന്ന അക്കൌണ്ടും

ച്ചി

: 196108, നിര്‍മിത ബുദ്ധി (artificial intelligence) amt പത്തു വര്‍ഷത്തിന്‌
APY ശേഷം, പ്രൊഫ. ജോണ്‍ മക്കാര്‍ത്തിയാണ്‌ (John Mccarthy) ഹാര്‍ഡ്‌
വെയറും ആദിക്കേഷനുകളും പങ്കിടാം എന്ന ആരയം കൊണ്ടുവന്നത്‌.

ജലമോ, പാചക വാതകമോ എങ്ങനെ വിതരണം ചെയ്യുന്നുവോ, അതുപോലെ സാജന്യ
മായോ കുറഞ്ഞ ചിലവിലോ കമ്പ്യൂട്ടിങ്ങ്‌ ശക്തിയും നല്‍കുവാന്‍ കഴിയുമെന്ന്‌ അദ്ദേഹം
ഭാവനയില്‍ കണ്ടു. salesforce.com എന്ന ലളിതമായ വെബ്‌ സ്റ്റ്‌ വഴി 1999ല്‍
ഉപയോക്താക്കള്‍ക്ക്‌ എന്റര്‍പ്രെസ്‌ ആപ്പിക്കേഷന്‍ നല്‍കിയതാണ്‌ ക്ൂാഡ്കമ്പ്യുട്ടിങ്ങ്‌
ചരിത്രത്തിലെ ആദ്യ നാഴികക്കല്ല്‌. ഉത്‌ വിദധ്ധര്‍ക്കും മുന്‍നിര സോഫ്റ്റ്വെയര്‍ സ്ഥാപന
ങ്ങള്‍ക്കും അവരുടെ ഉല്‍കന്നങ്ങള്‍ ഉന്റര്‍നെറ്റിലൂടെ നല്‍കുവാന്‍ വഴിയൊരുക്കി. ഇഉഷോള്‍ Gow കമ്പ്യൂട്ടിങ്ങ്‌
എന്നത്‌ വിവര സാങ്കേതിക മേഖലയില്‍ ഉയര്‍ന്നു വന്നുകൊണ്ടിരിക്കുന്ന പ്രധാന വിഷയങ്ങളില്‍ ഒന്നാണ്‌.

]
ജോണ്‍ മക്കാരിത്തി
(19272011)

11. കമ്പ്യുട്ടിങ്ങിലെ മുന്നേറ്റങ്ങ

ആവശ്യമാണ്‌. ക്ലൌഡ്‌ കമ്പ്യൂട്ടിങ്‌ ഒരു വരിസംഖ്യ അധിഷ്ഠിത സേവനമാണ്‌, അവിടെ കമ്പ്യൂട്ടിങ്ങ്‌
ഉപകരണങ്ങളും, ശൃംഖലയുമായി ബന്ധിപ്പിച്ചിട്ടുള്ള സംഭരണ സ്ഥലവും നമുക്ക്‌ ലഭ്യമാകുന്നു.
ചിത്രം 11.7 ല്‍ ക്ലൌഡ്‌ കമ്പ്യൂട്ടിങ്ങിന്റെ രേഖാചിത്രം കൊടുത്തിരിക്കുന്നു.

ഒ. QDW സേവന മാതൃകകള്‍

BOW സേവനദാതാക്കള്‍ തരുന്ന സേവനങ്ങളെ

പ്രധാനമായും മൂന്ന്‌ വിഭാഗങ്ങളായി തരം തിരിക്കാം

സോഫ്റ്റ്വെയര്‍ ഒരു സേവനമായി (SaaS), പ്ലാറ്റ്ഫോം

ഒരു സേവനമായി (PaaS), അടിസ്ഥാനസൌകര്യം ഒരു

സേവനമായി (143) എന്നിവയാണവ. ഇവയെ കുറിച്ച്‌ നി

നമുക്ക്‌ വിശദമായി ചര്‍ച്ച ചെയ്യാം (ചിത്രം 11.8 ചിത്രം 11.8: അടിസ്ഥാന
നോക്കുക) BI AMIQSIOS മ്മുക്ക്‌
1 സോഫ്റ്റവെയര്‍ ഒരു സേവനമെന്ന നിലയില്‍ (Software as a Service)

SaaS സേവനദാതാക്കള്‍ വരിക്കാര്‍ക്ക്‌ വിഭവങ്ങളും ആപ്ലിക്കേഷനുകളും സേവനമായി നല്‍കുന്നു.
ഉപയോക്താവിന്റെ ആവശ്യാനുസരണം സമ്പൂര്‍ണരൂപത്തിലുള്ള ആപ്ലിക്കേഷനുകള്‍ ഒരു
സേവനമായി ലഭ്യമാകുന്നു. HO UNS സൂക്ഷിച്ചിട്ടുള്ള ആപ്ലിക്കേഷനുകളും സേവനങ്ങളും ഉപ
യോഗിക്കുവാന്‍ ഉള്ള അവകാശം ഉപയോക്താക്കള്‍ വാങ്ങുന്നു. എല്ലാ ജിമെയില്‍ അക്കൌണ്ട്‌
ഉപയോക്താക്കള്‍ക്കും ഗൂഗിള്‍ ഡോക്‌ എന്ന ഗുഗിളിന്റെ സേവനം സൌജന്യമായി ഉപയോഗി
ക്കുവാന്‍ കഴിയുന്നു. ഇവിടെ ആപ്ലിക്കേഷന്റെ ഒരു പതിപ്പ്‌ Howes പ്രവര്‍ത്തിക്കുകയും
ഒന്നിലധികം ഉപയോക്താക്കള്‍ക്ക്‌ ഇതിന്റെ സേവനം ലഭ്യമാവുകയും ചെയ്യുന്നു. നമ്മുടെ
കമ്പ്യൂട്ടറുകള്‍, ലാപ്ടോപ്പുകള്‍, മൊബെയിലുകള്‍ എന്നിവകളില്‍ ആപ്ലിക്കക്കേഷനുകളുടെ
പതിപ്പുകള്‍ ഇന്‍സ്റ്റാള്‍ ചെയ്യേണ്ട ആവശ്യം ഈ ക്ലൌഡ്‌ സേവനം കൊണ്ട്‌ ഇല്ലാതാകുന്നു.
ഗൂഗിള്‍ ഡോക്സിന്റെ (Google Docs) കാര്യത്തില്‍, വേര്‍ഡ്‌ പ്രോസസ്സററിന്റെ ഒരു പകര്‍പ്പ്‌ മാത്രം
ക്ലൌഈഡില്‍ പ്രവര്‍ത്തിക്കുന്നു. ഇതു Saas വഴി, ഉപയോക്താവിന്‌ സ്വന്തം കമ്പ്യൂട്ടറില്‍ ഈ സോഫ്റ്റ്‌
വെയര്‍ ഇന്‍സ്റ്റാള്‍ ചെയ്യാതെ തന്നെ അതു ഉപയോഗിക്കാം BOUIN നിന്ന്‌ ഉപയോഗിക്കുന്നത്‌
കാരണം ഈ സോഫ്റ്റ്‌ വെയറിന്റെ ഒരേ പതിപ്പ്‌ തന്നെ നിങ്ങളുടെ എല്ലാ കമ്പ്യൂട്ടറുകളിലും
വളരെ എളുപ്പത്തില്‍ ലഭ്യമാകുന്നു. പണം നല്‍കിയുള്ള സേവനങ്ങള്‍, വില നല്‍കിയതിനുശേ
ഷമേ ഉപയോക്താക്കള്‍ക്ക്‌ ലഭ്യമാകൂ.

സോഫ്റ്റ്വെയര്‍ ഒരു സേവനമായി കണക്കാക്കുന്ന കരാറില്‍, ഉപയോക്താവിന്‌ വളരെ കുറഞ്ഞ
തോതിലുള്ള നിയ്രന്തരണമേ ക്ലൂൌനഡില്‍ ഉള്ളൂ. സര്‍വറുകള്‍ക്കു വേണ്ടിയോ സോഫ്റ്റ്വെയര്‍
ലൈസന്‍സിനു വേണ്ടിയോ വലിയ തോതിലുള്ള നിക്ഷേപം ഉപഭോക്താവ്‌ നടത്തേണ്ടതില്ല.
അതുപോലെ സോഫ്റ്റ്‌വെയറിന്റെ ഒരു പതിപ്പ്‌ മാത്രം സൂക്ഷിക്കുകയും പരിപാലിക്കുകയും
ചെയ്യേണ്ടതുള്ളു എന്നതിനാല്‍ സേവനദാതാക്കള്‍ക്കും ചെലവ്‌ വളരെ കുറവാണ്‌. ഇക്കാലത്തു
ഇത്തരം സേവനങ്ങള്‍ പല സ്ഥാപനങ്ങളും നല്‍കുന്നുണ്ട്‌. അഡോബിന്റെ (Adobe) ചിത്ര
പ്രവര്‍ത്തന സോഫ്റ്റ്വെയറായ (Image Processing Software) ക്രിയേറ്റീവ്‌ ക്ലൌഡ്‌ (Creative Cloud)
മൈക്രോസോഫ്റ്റന്റെ ഓഫീസ്‌ സോഫ്റ്റ്വെയറായ ഓഫീസ്‌ 365, facebook.com തുടങ്ങിയവ

ഉദാഹരങ്ങളാണ്‌.

കമ്പ്യുട്ടര്‍ സയന്‍സ്‌ - XI!

2. പ്ലാറ്റ്ഫോം ഒരു സേവനമെന്ന നിലയില്‍ (Platform as a Service) (PaaS)

സോഫ്റ്റ്വെയര്‍ ഒരു സേവനമായി ഉപയോഗിക്കുന്ന സംവിധാനത്തില്‍ നിന്നും ഒരുപടി ഉയര്‍ന്ന
തലമാണ്‌ പ്ലാറ്റ്ഫോം ഒരു സേവനമായി നല്‍കുന്നത്‌. പ്ലാറ്റ്ഫോം (PaaS) ഒരു സേവനമായി
നല്‍കുന്ന സേവനദാദാക്കള്‍, വരിക്കാര്‍ക്ക്‌ ഇന്റര്‍നെറ്റ്‌ വഴി ആപ്ലിക്കേഷനുകള്‍ വികസിപ്പിക്കു
വാനും പ്രവര്‍ത്തിപ്പിക്കുവാനുമുള്ള അടിസ്ഥാന ഘടകങ്ങള്‍ നല്‍കുന്നു. മറ്റൊരുതരത്തില്‍
പറഞ്ഞാല്‍, ഒരു ആപ്ലിക്കേഷന്‍ രൂപകല്‍പ്പന ചെയ്യുവാനും, വികസിപ്പിക്കുവാനും, നിര്‍മ്മിക്കു
വാനും, പരിശോധിക്കുവാനുമുള്ള അടിസ്ഥാന സൌകര്യം ഇത്തരം ക്ലൌഡ്‌ നല്‍കുന്നു. സേവന
ദാതാവ്‌ നല്‍കുന്ന അടിസ്ഥാന സായകര്യങ്ങള്‍ ഉപയോഗിച്ച്‌ ഉപയോക്താവിനു തനതായ
ആപ്ലിക്കേഷന്‍ നിര്‍മ്മിക്കുവാനുള്ള സ്വാതന്ത്യം ഉണ്ട്‌. ആപ്ലിക്കേഷനുകളുടെ പരിപാലനത്തിനും
വികാസത്തിനുമാവശ്യമായ ഘടകങ്ങള്‍ നല്‍കുവാനായി, പ്ലാറ്റ്ഫോം സേവനദാതാക്കള്‍ ലാംപ്‌
(LAMP) ലിനക്സ്‌ (LINUX), അപ്പാച്ചെ (APPACHE), മൈ എസ്ക്യൂഎല്‍ (ശവ), പി എച്‌ പി
(PHP) ag) എന്‍ പി ഡോട്ട്‌ നെറ്റ്‌ (ASP.NET), o@asmend (PYTHON) തുടങ്ങിയവ ഒഎസ്‌ (OS) ന്റെ
യും ആപ്ലിക്കേഷന്‍ സര്‍വറുകളുടെയും സംയോജിത രൂപം വാഗ്ദാനം ചെയ്യുന്നു. ഗൂഗിളിന്റെ
ആപ്‌ എന്‍ജിന്‍ (App Engine), മൈക്രോസോഫ്ട്‌ ആഷ്വര്‍ (Azure), ഫോഴ്‌സ്‌ ഡോട്ട്‌ കോം
(Force.com) തുടങ്ങിയവ പ്ലാറ്റ്ഫോം സേവനങ്ങള്‍ക്ക്‌ ഉദാഹരങ്ങളാണ്‌.

3. അടിസ്ഥാന സനകര്യങ്ങള്‍ ഒരു സേവനമെന്ന നിലയില്‍ (Infrastructure as a ടണി(0മമട)

പേര്‌ സുചിപ്പിക്കുന്നത്‌ പോലെ, കമ്പ്യൂട്ടേഷണല്‍ അടിസ്ഥാന സൌകര്യങ്ങള്‍ നല്‍കുവാനാണ്‌
ഐഎഎഎസ്‌ (143) ഉടമ്പടി മുന്‍ഗണ നല്‍കുന്നത്‌. അടിസ്ഥാന സംഭരണശേഷി, കമ്പ്യൂട്ടിങ്ങ്‌
ശേഷി എന്നിവ നിലവാരമുള്ള സര്‍വീസുകളായി ഐഎഎഎസ്‌ (laaS) ശൃംഖല വഴി നല്‍കുന്നു.
സര്‍വര്‍, സംഭരണികള്‍, ശൃംഖല ഉപകരണങ്ങള്‍, കേന്ദ്രീകൃത ഡാറ്റ സംഭരണികള്‍ തുടങ്ങിയവ
ജോലിഭാരം കൈകാര്യം ചെയ്യുവാനായി സങ്ജമാക്കിയിരിക്കുന്നു. ഈ അടിസ്ഥാന സൌകര്യ
ത്തില്‍ ഉപഭോക്താക്കള്‍ അവരവരുടെ സോഫ്റ്റ്‌ വെയറുകള്‍ സജ്ജീകരിച്ചിരിക്കണം. ആമ
സോണ്‍ വെബ്‌ സര്‍വീസ്‌ ജോയന്റ്‌ (Joyent), എ ടി ആന്‍ഡ്‌ ടി (൧ & 1), ഗോ ഗ്രിഡ്‌ (GoGrid)
എന്നിവ ചില ഉദാഹരങ്ങളാണ്‌.

1. QA കമ്പ്യൂട്ടിങ്ങിന്റെ മേന്മകള്‍

ക്ലൌഡ്‌ കമ്പ്യൂട്ടിങ്ങ്‌ ഉപയോഗിക്കുന്നത്‌ കൊണ്ടുള്ള ചില മേന്മകള്‍ ചുവടെ ചേര്‍ക്കുന്നു.

ചെലവ്‌ ലാഭിക്കാം : സ്ഥാപനങ്ങള്‍ക്ക്‌ അവരുടെ മുലധനചിലവ്‌ കുറയ്ക്കുകയും പ്രവര്‍ത്തന
ചിലവ്‌ ഉപയോഗപ്പെടുത്തി കമ്പ്യൂട്ടിങ്ങ്‌ ശേഷി വര്‍ദ്ധിപ്പിക്കുകയും ചെയ്യാം.

വികസന സാധ്ൃതയും/വഴക്കവും: സ്ഥാപനങ്ങള്‍ക്ക്‌ അവരുടെ പ്രവര്‍ത്തനങ്ങള്‍ ചെറിയ
അളവില്‍ തുടങ്ങി വളരെ വേഗത്തില്‍ വലിയ അളവിലേക്കു വികസിപ്പിക്കുവാനും ആവശ്യം
വന്നാല്‍ പഴയ അവസ്ഥയിലേക്ക്‌ മടങ്ങുവാനും കഴിയുന്നു. അതോടൊപ്പം തന്നെ കമ്പനികള്‍ക്കു
വളരെ തിരക്കുള്ള സമയത്ത്‌ അധിക വിഭവങ്ങള്‍ ഉപയോഗിച്ച്‌ ഉപഭോക്താക്കളെ തൃപ്തിപ്പെ
ടുത്തുവാനും ക്ലൌഡ്‌ കമ്പ്യൂട്ടിങ്ങ്‌ രീതി സഹായിക്കുന്നു.

വിശ്വാസ്യത : ഒന്നില്‍ കൂടുതല്‍ മേഖലകളിലെ സര്‍വീസുകള്‍ ഉപയോഗിക്കുന്നതിനാല്‍

തകരാറുകളില്‍ നിന്ന്‌ തിരിച്ചുവരുവാന്‍ സഹായിക്കുന്നു.

11. കമ്പ്യുട്ടിങ്ങിലെ മുന്നേറ്റങ്ങ

പരിപാലനം : BOW സേവനദാതാക്കള്‍ തന്നെ ഈ സംവിധാനത്തിന്റെ പരിപാലനം നടത്തുന്ന
തിനാല്‍ ഉപഭോക്താവ്‌ ഇതിന്റെ പരിപാലനം ഏറ്റെടുക്കേണ്ടതില്ല.

യാത്രയിലും ലഭ്യമാകുന്നു : ഈ സംവിധാനം എവിടെ നിന്നും ഉപയോഗിക്കുവാന്‍ കഴിയുന്ന
തിനാല്‍ ജോലി സംബന്ധമായി യാത്ര ചെയ്യുന്ന ജീവനക്കാര്‍ക്ക്‌ അവരുടെ സ്ഥാപനങ്ങളിലെ
ജോലി തടസ്സം കൂടാതെ നിര്‍വഹിക്കുവാന്‍ കഴിയുന്നു.

൭. ROW ANY SNAG പോരായ്മകള്‍

QO കമ്പ്യൂട്ടിങ്ങ്‌ രീതി ഉപയോഗിക്കുന്നവര്‍ അഭിമുഖികരിക്കേണ്ടിവരുന്ന ചില വെല്ലുവിളികള്‍
ഇവയാണ്‌.

സുരക്ഷയും സ്വകാരൃതയും: വിവരങ്ങള്‍ പൊതു ശൃംഖലകള്‍വഴി കൈമാറ്റം ചെയ്യുമ്പോഴും,
പൊതു സംഭരണ വ്യവസ്ഥയില്‍ സൂക്ഷിക്കു മ്പോഴും, ഇവ മോഷ്ടിക്കുവാനോ, തകരാര്‍
വരുത്തുവാനോ സാധ്യതയുണ്ട്‌.

മാനദണ്ഡങ്ങളുടെ കുറവ്‌: പൊതുവായ മാനദണ്ഡങ്ങള്‍ ഒന്നും ക്ലൌഈഡിന്‌ ഇല്ലാത്തതിനാല്‍,
മിക്ക ക്ലൌഡുകളും പരസ്പരം സഹകരിച്ച്‌ പ്രവര്‍ത്തിക്കാത്തവയാണ്‌.

നമുക്ക്‌ വിലയിരുത്താം

ക്ലസ്റ്റര്‍ കമ്പ്യൂട്ടിങ്ങിന്റെ മേന്മകള്‍ എഴുതുക?
എന്താണ്‌ ക്ലൌഡ്‌ കമ്പ്യൂട്ടിങ്ങ്‌?

വിവിധ ക്ലൌഡ്‌ സേവന മാതൃകളുടെ പേരെഴുതക?

എന്താണ്‌ സോഫ്റ്റ്വെയര്‍ ഒരു സേവനം എന്നാല്‍ എന?

ഏതെങ്കിലും രണ്ട്‌ എസ്‌ എ എ എന്‍ (SaaS) സേവനദാതാക്കളുടെ പേരുകള്‍
എഴുതുക ?

6 ഏതെങ്കിലും രണ്ട്‌ ഐ എ എ എസ്‌ (1495) സേവനദാതാക്കളുടെ പേരുകള്‍
എഴുതുക?

11.3 നിര്‍മിത ബുലി (Artificial Intelligence)

നിര്‍മിത ബുദ്ധി (൧) എന്നത്‌ കമ്പ്യൂട്ടര്‍ ശാസ്ത്രത്തില്‍ ഏറ്റവും നൂതനമായ മേഖലയാണ്‌.
1950 ലാണ്‌ അലന്‍ ടൂറിംഗ്‌ ഇതിന്‌ ആദ്യ നിര്‍വചനം നല്‍കിയത്‌. മനുഷ്യ മസ്തിഷ്കത്തിന്റെ
പ്രവര്‍ത്തനത്തെ എങ്ങനെ ഒരു യ്രന്രത്തിന്‌ അനുകരിക്കമെന്ന്‌ അലന്‍ ട്യൂറിംഗ്‌ പഠിച്ചു.
ഇദ്ദേഹത്തിന്റെ പഠന ഫലമായി AT മേഖലയിലെ ആദ്യ പ്രസിദ്ധീകരണം, ഇന്റലിജന്റ്‌ മെഷിനറി,
എന്ന പേരില്‍ പ്രസിദ്ധീകരിച്ചു. 1956 ല്‍ ജോണ്‍ മക്കാര്‍ത്തി സംഘടിപ്പിച്ച ഡാര്‍ട്‌ മാത്‌ കോണ്‍ഫ
റന്‍സില്‍ ആണ്‌ ആദ്യമായി നിര്‍മിത ബുദ്ധി എന്ന പദം ഉപയോഗിച്ചത്‌. Al ഇപ്പോള്‍ ധാരാളം
ഉപമേഖലകളിലും ശ്രദ്ധ ക്രേന്ദീകരിച്ചിരിക്കുന്നു. പൊതു ഉദ്ദേശ്യ മേഖലകളായ ഗ്രഹണശക്തി
(ഉള്‍കാഴ്ച) [Perception], യുക്തിപരമായ ന്യായവാദങ്ങള്‍ [Logical reasoning] തുടങ്ങിയവയിലും
നിര്‍ദിഷു കൃത്യങ്ങളായ ചതുരംഗക്കളി, ഗണിത സിദ്ധാന്തങ്ങള്‍ തെളിയിക്കുക, കമ്പ്യൂട്ടറിന്റെ
വിഷന്‍ (കാഴ്ച ശക്തി) [Computer Vision], സ്വാഭാവിക ഭാഷാ പ്ര്രകിയ (Natural Language
Processing), വൈദ്യ പരിശോധന തുടങ്ങിയവയിലും നിര്‍മിത ബുദ്ധി ശ്രദ്ധ കേന്ദ്രീകരിച്ചിരിക്കുന്നു.

കമ്പ്യുട്ടര്‍ സയന്‍സ്‌ - XI!

പലപ്പോഴും ഈ മേഖലയെ കണ്ടിരിക്കുന്നത്‌ ഗവേഷണത്തിന്റെ പരസ്പര ബന്ധിത
മേഖലയായിട്ടാണ്‌. ഇവിടേയ്ക്ക്‌ മറ്റു ഗവേഷണ മേഖലയില്‍ നിന്നുള്ള ഗവേഷകരും
കടന്നുവരുന്നുണ്ട്‌, അവിടെ അവര്‍ പ്രവര്‍ത്തിക്കുന്ന മേഖലയ്ക്ക്‌ ആവശ്യമായ ഉപകരണങ്ങള്‍
കണ്ടെത്തുകയും പദസംധ്രഹങ്ങളെ ക്രമപ്പെടുത്തി പ്രവര്‍ത്തനങ്ങളെ യ്രന്തവല്‍ക്കരിക്കുകയും
ചെയ്യുന്നു .

അതുപോലെ മനുഷ്യബുദ്ധി അധികമായി പ്രയോജനപ്പെടുത്തേണ്ട ഏതൊരു മേഖലയിലും AT
ഗവേഷകര്‍ക്ക്‌ അവരുടെതായ രിതി തെരഞ്ഞെടുക്കാവുന്നതാണ്‌. ഒരര്‍ഥത്തില്‍ ശരിക്കും ഇത്‌
ഒരു സാര്‍വ്ര്രിക മേഖലയാണ്‌.

ചിത്രം 11.9 ല്‍ അറിവിന്റെ വൃത്യസ്തതലങ്ങളെ പിരമിഡ്‌ രൂപത്തില്‍ ചിത്രീകരിച്ചിരിക്കുന്നു.
ഇവയില്‍ അറിവും ബുദ്ധിയും ആണ്‌ എ ഐ യുടെ പ്രധാന പഠന മേഖലകള്‍. ഇവയെ കമ്പ്യൂട്ട
റിലേക്ക്‌ സന്നിവേശിപ്പിച്ച സിസ്റ്റത്തെ അറിവുള്ളതാക്കി

മാറ്റുന്നു. ജീവശാസ്ത്ര വ്യവസ്ഥയുടെ വിവിധ കമ്പ്യൂ
ട്ടിങ്ങ്‌ മാതൃകകള്‍ വികസിപ്പിക്കുന്നതില്‍ വിജയം
കണ്ടെത്തിയിട്ടുണ്ട്‌. ഉദാ: ജീവനാഡീകോശത്തിന്റെ

മാതൃകകള്‍. എന്നാല്‍ മനുഷ്യ ബുദ്ധിയുടെ ഭാഗങ്ങ snugaiil (Intelligence)
ളായ സ്വയമറിവി, പ്രബുദ്ധത, മനോവികാരം തുടങ്ങിയ അറിവ്‌ Knowledge)
അതിസങ്കീര്‍ണങ്ങളായ പ്രശ്‌ന മാതൃകകള്‍ സൃഷ്ടി [

ക്കുവാന്‍ ഇന്നും കഴിഞ്ഞിട്ടില്ല.

മനുഷ്യ മസ്തിഷ്കത്തെ അനുകരിക്കുവാന്‍ കഴിയുന്ന ചിഹങ്ങ (Symbols)

രീതിയില്‍ ഒരു യ്രനത്രം നിര്‍മ്മിക്കുവാന്‍ കഴിയുമെന്ന്‌
ചിത്രം 11.9: അിവിമ്റെ Hes

ഇഞാനം
(Wisdom)

അലന്‍ ട്യൂറിംഗ്‌ വിശ്വസിച്ചു. മനുഷ്യമസ്തിഷ്കത്തിന്‌

കഴിയുന്ന എല്ലാ കാര്യങ്ങളും മികച്ച രീതിയില്‍ രൂപകല്‍പ്പന ചെയ്ത ഒരു കമ്പ്യൂട്ടറിന്‌ ഇത്‌
സാധിക്കുമെന്ന്‌ അലന്‍ ട്യൂറിംഗ്‌ ശക്തമായി വിശ്വസിച്ചു. ഒരു ദീര്‍ഘ വീക്ഷണമായി തന്നെ
അദ്ദേഹത്തിന്റെ വാക്കുകള്‍ 50 വര്‍ഷത്തിന്‌ ശേഷവും നില നില്‍ക്കുന്നു.

എല്ലാ ബുദ്ധിപരമായ ഘടനയ്ക്കും പിന്നില്‍ പ്രവര്‍ത്തിക്കുന്ന ശക്തി അറിവാണ്‌. അറിവിന്റെ
പിരമിഡില്‍ അടിസ്ഥാന ഘടകമായി കൊടുത്തിരിക്കുന്നത്‌ ചിഹ്നങ്ങള്‍ ആണ്‌. ചിഹ്നങ്ങളുടെ
ഒരു ശേഖരമാണ്‌ ഡാറ്റ. ഡാറ്റയെ പ്രോസസ്സ്‌ ചെയ്യുമ്പോള്‍ വിവരങ്ങള്‍ കിട്ടുന്നു, വിവരങ്ങളെ
ചിട്ടപ്പെടുത്തി വെയ്ക്കുമ്പോള്‍ അത്‌ അറിവായി മാറുന്നു. തീരുമാനം എടുക്കുവാന്‍ വിവരം
സഹായിക്കുന്നു. നേടിയ അറിവില്‍ നിന്നും പ്രയോജനകരമായ അനുമാനത്തില്‍ എത്തുവാനുള്ള
കഴിവിനെ ബുദ്ധി എന്ന്‌ പറയുന്നു. ആഗ്രഹിക്കുന്ന ലക്ഷ്യം നേടിയെടുക്കുന്നതിന്‌ ബുദ്ധിയെ
നയിക്കുന്ന പക്വമായ മനസ്സാണ്‌ ജ്ഞാനം.

അറിവിനെ എങ്ങനെ സിസ്റ്റത്തില്‍ ഉള്‍ക്കൊള്ളിക്കാമെന്നും സാധാരണ പ്രോഗ്രാമിങ്‌ ഭാഷാ
ഉപയോഗിച്ചു പരിഹരിക്കുവാന്‍ സാധിക്കാത്ത യഥാര്‍ത്ഥ ജീവിത പ്രശ്നങ്ങളെ ബുദ്ധിപരമായി
എങ്ങനെ പരിഹരിക്കാമെന്നും ഇവിടെ നാം പഠിക്കുന്നു. മനുഷ്യന്റെ യുക്തിക്കു സമാനമായ

പ്രവര്‍ത്തനങ്ങളെ പ്രയോജനപ്പെടുത്തി അതിസങ്കീര്‍ണമായ പ്രശ്നപരിഹാരത്തിനുള്ള കമ്പ്യു

ട്ടര്‍ പ്രോഗ്രാമുകള്‍ വികസിപ്പിക്കുക എന്നതാണ്‌ ച യുടെ അടിസ്ഥാനം.

11. കമ്പ്യുട്ടിങ്ങിലെ മുന്നേറ്റങ്ങ

നിര്‍മിത ബുദ്ധിയോടുള്ള ടൂറിംഗ്‌ പരീക്ഷണ സമീപനം (Turing Test approach to ച)

അലന്‍ ട്യൂറിംഗ്‌ നിര്‍ദേശിച്ച ട്യൂറിംഗ്‌ പരിക്ഷണം ബുദ്ധിശക്തിയുടെ തൃപ്തികരമായ പ്രവര്‍ത്തന
രീതി നിര്‍വചിക്കുവാനുള്ള രൂപകല്‍പനയാണ്‌. ട്യൂറിംഗ്‌ ടെസ്റ്റ്ന്റെ വിശദാംശങ്ങള്‍ പതിനൊന്നാം
ക്ലാസ്സിലെ കമ്പ്യൂട്ടര്‍ സയന്‍സ്‌ പാഠ പുസ്തകത്തില്‍ (അദ്ധ്യായം ഒന്ന്‌) വിശദീകരിച്ചിട്ടുണ്ട്‌.
ഒരു ലക്ഷ്യം നേടിയെടുക്കുന്നതിനുവേണ്ടിയുള്ള എല്ലാ പ്രവര്‍ത്തനങ്ങളും മനുഷ്യ സാധ്യമായ
തലത്തില്‍ നിര്‍വഹിക്കാനുള്ള ശേഷിയെയാണ്‌ ടൂറിങ്ങ്‌ കമ്പ്യൂട്ടറുകളുടെ ബൌദ്ധിക ചേഷ്ട
(Intelligence behaviour) എന്നു നിര്‍വഹിക്കുന്നത്‌.
ഈയൊരു കഴിവ്‌ ആര്‍ജിക്കുന്നതു വഴി ചോദ്യ,
കര്‍ത്താവിനെ വിഡ്ഡമിയാക്കാനും കമ്പ്യൂട്ടറിനു
കഴിയും. ഇത്‌ ഒരു ടൈപ്പ്‌ റൈറ്ററിന്റെ സഹായ
ത്താല്‍ മനുഷ്യന്‍ കമ്പ്യൂട്ടറിനെ ചോദ്യം ചെയ്യുന്ന
ഒരു പരീക്ഷണമാണ്‌ എന്ന്‌ പറയാം. കമ്പ്യൂട്ടര്‍ ഈ
പരീക്ഷ വിജയിക്കണമെങ്കില്‍, തിരികെ ലഭിക്കുന്ന
മറുപടിയില്‍ നിന്ന്‌ ചോദ്യകര്‍ത്താവിനു കമ്പ്യൂട്ട
റിനെയും മനുഷ്യനെയും തമ്മില്‍ വേര്‍തിരിച്ചറിയു
വാന്‍ പറ്റാത്ത അവസ്ഥ ഉണ്ടാകണം. ട്യൂറിംഗ്‌
ടെസ്റ്റിന്റെ ചിത്രീകരണം ചിത്രം 11.1008 നല്‍കിയിരി
ക്കുന്നു. ഇന്നും, ട്യൂറിംഗ്‌ ടെസ്റ്റ്‌ എന്ന്‌ പറയുന്നത്‌ ചിത 11.10: ടുറിംഗ്‌പരിക്ഷണം

ഒരു യന്ത്രം ബുദ്ധിയുള്ളതാണ്‌ എന്ന്‌ തെളിയിക്കു

വാനുള്ള അന്തിമ പരീക്ഷണമായി കരുതുകയും, ഈ പരീക്ഷണം വിജയിക്കുന്നതിനായി
കമ്പ്യൂട്ടറിന്‌ പോ്രഗാം വഴി ധാരാളം കൃത്യങ്ങള്‍ നല്‍കുകയും ചെയ്യുന്നു.

അക്കാര്യത്തില്‍ കമ്പ്യൂട്ടറിനു താഴെപറയുന്ന കഴിവുകള്‍ കൂടി ഉണ്ടായിരിക്കണം.

€ സ്വാഭാവിക ഭാഷ പ്രരകിയ (Natural Language Processing (NLP)): ഇംഗ്ലീഷ്‌ ഭാഷയില്‍
(അല്ലങ്കില്‍ മറ്റു ഭാഷകളില്‍) വിജയകരമായി ആശയവിനിമയം നടത്തുവാനുള്ള കഴിവ്‌
ആര്‍ജിക്കുക. സ്വയം സംഭാഷണം തിരിച്ചറിയല്‍ (Automatic Speech Recognition), ശബ്ദ
സമമ്പയം (Speech Synthesis), Ma പരിഭാഷ (Machine Translation), കയ്യക്ഷരം തിരിച്ച
റിയല്‍ (Handwritten Character Recognition) തുടങ്ങിയവയൊക്കെ NLP യുമായി ബന്ധപ്പെട്ട
പ്രായോഗിക ഉപയോഗങ്ങളാണ്‌. ഒരാളിന്റെ സ്വാഭാവിക ഭാക്ഷയില്‍ കമ്പ്യൂട്ടറുമായി
ആശയവിനിമയം നടത്തുക എന്നതാണ്‌ ഇത്കൊണ്ട്‌ ഉദ്ദേശിക്കുന്നത്‌.

© അറിവിന്റെ പ്രതിനിധീകരണം (Knowledge Representation): ചോദ്യം ചെയ്യലിന്‌ മുന്‍പോ
ഇടയിലോ മനുഷ്യ പരിജ്ഞാനം ഉള്‍പ്പെടുത്തുന്നതിന്‌

© സ്വയം വിചിന്തനം (Automated Reasoning): ആര്‍ജിച്ച അറിവുകളില്‍ നിന്ന്‌ ചോദ്യങ്ങള്‍ക്ക്‌
ഉത്തരം നല്‍കുവാനും പുതിയ നിഗമനങ്ങളില്‍ എത്തുവാനുമുള്ള കഴിവ്‌

© യ്യുത്രപഠനം (Machine Learning) : പുതിയ സാഹചര്യങ്ങളുമായി പൊരുത്തപ്പെടുവാനും

പുതിയ മാതൃകകള്‍ കണ്ടെത്തുവാനും അവലംബിക്കുവാനുമുള്ള കഴിവ്‌.

കമ്പ്യുട്ടര്‍ സയന്‍സ്‌ - XI!

എങ്ങനെ ഒരു ഉപയോക്താവിനോട്‌ പ്രാദേശിക ഭാഷയിലൂടെ സംവദിക്കുന്നുവെന്നും എങ്ങനെ
ഭാഷ പ്രക്രിയ പ്രവര്‍ത്തിക്കുന്നുവെന്നും ഒരു സാമര്‍ഥ്യമുള്ള സംവിധാനം വിശദീകരിക്കേണ്ടി
വരും. യ്രന്രങ്ങള്‍ മനുഷ്യനെപോലെ പെരുമാറുമ്പോള്‍, നിര്‍മിത ബുദ്ധിയുടെ പ്രോഗ്രാമുകള്‍
പ്രാഥമികമായി നേരിടുന്ന വെല്ലുവിളി, ഈ പ്രോഗ്രാമുകള്‍ മനുഷ്യന്റെ ആശയ വിനിമയത്തിലെ
സ്വാഭാവിക രീതികള്‍ അനുസരിച്ചു പ്രവര്‍ത്തിക്കുകയും അവയെ സ്വയം മനസ്സിലാക്കുവാന്‍
പര്യാപ്തമാക്കുകയും ചെയ്യുക എന്നതാണ്‌. മനുഷ്യ മാതൃകകളെ അനുകരിച്ചോ അല്ലാതെയോ
ആകാം ഇത്തരം സിസ്റ്റങ്ങളുടെ അടിസ്ഥാനപരമായ നിര്‍മ്മിതിയും ന്യായവാദങ്ങളും. കമ്പ്യൂ
ട്ടറിന്റെ സമ്പൂര്‍ണമായ ട്യൂറിംഗ്‌ ടെസ്റ്റിന്റെ വിജയത്തിന്‌, ചുവടെ ചേര്‍ക്കുന്ന സവിശേഷതകളും
കൂടി ആവശ്യമാണ്‌

© കമ്പ്യൂട്ടര്‍ ദൃഷ്ടി (Computer Vision): വസ്തുക്കളെ നിരിക്ഷിക്കുവാനുള്ള കഴിവാണിത്‌.
ഒരു യ്ര്രത്തിന്‌ കാണുവാനുള്ള കഴിവ്‌ ഉണ്ടാകണമെങ്കില്‍, ചിത്രങ്ങള്‍ ഗ്രഹിക്കുക,
പരിവര്‍ത്തനം നടത്തുക, പ്രക്രിയയ്ക്ക്‌ വിധേയമാക്കുക, പരിശോധിക്കുക, മനസ്സിലാക്കുക,

നിര്‍വചിക്കുക തുടങ്ങിയ പ്രവര്‍ത്തനങ്ങള്‍ കൂടി നടത്തേണ്ടി വരും.

ഭ റോബോട്ടിക്‌ പ്രവര്‍ത്തനങ്ങള്‍ (Robotic Activities): MMC ചലിപ്പിക്കുക എന്നതാണ്‌
ഇത്കൊണ്ട്‌ ഉദ്ദേശിക്കുന്നത്‌. റോബോട്ടിനെ സാമര്‍ഥ്യം ഉള്ളതാക്കി മാറ്റുവാന്‍, അതിനു
ബുദ്ധി നല്‍കുക എന്നതാണ്‌ പ്രഥമ കര്‍ത്തവ്യം. മാറിക്കൊണ്ടിരിക്കുന്ന പരിസ്ഥിതിയെ
തരണം ചെയ്യുവാനായി റോബോട്ടുകളില്‍ ചുറ്റുപാടുകളെ നിരീക്ഷിക്കുവാനുള്ള
സെന്‍സറുകള്‍ ഉള്‍പ്പെടുത്തുകയും, ഗ്രഹിക്കുന്ന തരംഗങ്ങളെ അതിന്റെ ബുദ്ധിപരമായി
നിയ്ര്ത്രണ ഭാഗത്തു എത്തിക്കുകയും വേണം.

ജീവശാസ്ത്ര മാതൃകകളെ അനുകരിച്ചും, വിവിധ പ്രര്രിയകകള്‍ ഉപയോഗപ്പെടുത്തിയും, സ്വാഭാ
വികമായ ബുദ്ധിയെ ഉത്തേജിപ്പിച്ചും ധാരാളം വിജയങ്ങള്‍ ഈ മേഖലയില്‍ നേടുവാന്‍ കഴിഞ്ഞി
ട്ടുണ്ട്‌. ആര്‍ട്ടിഫിഷല്‍ ന്യൂറല്‍ നെറ്റ്വര്‍ക്ക്‌ (Artificial Intelligent Neural Network), ഇവല്യൂഷനറി
കമ്പ്യൂട്ടേഷന്‍ (Evolutionary Computation), സ്വാം ഇന്റലിജന്‍സ്‌ (Swarm Intelligence), ഫസീ
ലോജിക്‌ (Fuzzy Logic) തുടങ്ങിയവ ബുദ്ധിപരമായ അല്‍ഗോരിതങ്ങളാണ്‌. ഈ അല്‍ഗോ

രിതങ്ങള്‍ നിര്‍മ്മിത ബുദ്ധിയുടെ ഭാഗമായി മാറിയിരിക്കുന്നു.

നിര്‍മിത ബുദ്ധിയും മത്സരകളികളും

കമ്പ്യൂട്ടറിനെ ഗെയിം കളിക്കുവാന്‍ പ്രാപ്തമാക്കുക എന്നതാണ്‌ കമ്പ്യുട്ടര്‍ ശാസ്ത്ര ഗവേഷണ
ങ്ങളുടെ ഒരു പ്രധാന ലക്ഷ്യം. പ്രത്യേകിച്ച്‌ നിര്‍മിത ബുദ്ധിയില്‍. emo എന്ന വ്യക്തിയുടെ
ചതുരംഗ കളിയുടെ പ്രോഗ്രാമുമായി ബന്ധപെട്ട പ്രബന്ധവും സാമുവല്‍ എന്ന വ്യക്തിയുടെ 'ചെക്കേര്‍സ്‌
(Checkers)’ എന്ന പ്രോര്രാംമും ആണ്‌ ഈ മേഖലയിലെ നാഴികക്കല്ലായി കണക്കാക്കുന്നത്‌. നിര്‍മിത
ബുദ്ധിയുടെ മേഖലയില്‍ മത്സരകളികള്‍ പ്രധാന പങ്കുവഹിക്കുന്നതിന്റെ കാരണങ്ങള്‍ ചുവടെ ചേര്‍ക്കുന്നു.

° മത്സരക്കളികളുടെ നിയമാവലികള്‍ പരിമിതമായതുകാരണം ഈ മേഖലയില്‍ ഉള്ള വിരാലമായ
അറിവിന്റെ ആവശ്യമില്ല.

° പ്രോഗ്രാമുകളുടെ വികസനത്തിന്‌ ഈ മേഖലയിലെ ധാരാളം വിദര്ധര്‍ സഹായിക്കുന്നു

11. കമ്പ്യുട്ടിങ്ങിലെ മുന്നേറ്റങ്ങ
ളു

൫ വളരെ കുറഞ്ഞ പരി്രമം കൊണ്‌ ജയപരാജയം അറിയു ന്ത
വാന്‍ കഴിയുന്ന വിധമാണ്‌ മത്സരക്കളികളുടെ ഘടന രൂപ ന്ധ won world champion of chess
> (Deep Blue) (Garry Kasparov)
കല്‍ഷന ചെയ്രിരിക്കുന്നത്‌

° 203 മേഖലകളില്‍ നിന്ന്‌ വ്യത്യസ്തമായി ഈ മേഖലയിലെ
വിദഥ്ധര്‍ക്ക്‌ ഒരു നീക്കത്തിന്റെ കാരണം നില്‍കാന്‍ ക്കുന്നു.

° മത്സരകളികളില്‍ രൊള്‍ക്ക്‌ യഥാര്‍ഥ ജീവിത സാഹചര്യങ്ങളി
ലൂടെ കടന്നു പോകുവാനുള്ള അവസരം അനുവദി
ക്കുന്നു

അധ = Kyodo News)

© 1997 ല്‍ പ്രശസ്ത ചതുരംഗ കളിക്കാരനായ കാസ്പറോ
വിനെ ഐ ബി എം ന്റെ ഡീപ്‌ ബ്ലു സൂഷര്‍ കമ്പ്യുട്ടര്‍ (Deep Blue) ചതുരംഗ കളിയില്‍ (Chess Game)
പരാജയകെടുത്തി. അദ്ദേഹത്തെ പരാജയകെടുത്തിയ Mo, ചതുരംഗ കളിയുടെ വിരാല അറിവുകള്‍
ഉപയോഗിച്ച്‌ ഭൂപകല്‍ഷന ചെയ്തതായിരുന്നു.

11.4 കമ്പ്യൂട്ടേഷണല്‍ ബുദ്ധിവൈദവം (Computational Intelligence)

പുരാതന കാലം മുതല്‍ക്കുതന്നെ, വിവിധതരം ജോലികള്‍ ചെയ്യുവാന്‍ യ്ര്്രങ്ങള്‍ നാം ഉപ
യോഗിച്ചിരുന്നു. ചെയ്യേണ്ട ജോലിക്കനുസരിച്ചിട്ടുള്ള യ്രന്രങ്ങളാണ്‌ നമ്മള്‍ തിരഞ്ഞെടുത്തി
രുന്നത്‌. കമ്പ്യൂട്ടറുകളുടെ കണ്ടുപിടുത്തത്തോടുകൂടി കൂടുതല്‍ സമയം എടുക്കുന്നതും തെറ്റുകള്‍
വരുവാന്‍ സാധ്യതയുള്ളതുമായ ഗണനം ലാളിത്യവും കൃത്യതയും കൈവരിച്ചു. അതിനുശേഷം
യുക്തിസഹജമായ പ്രക്രിയയില്‍ കമ്പ്യൂട്ടറുകളുടെ സഹായം തേടാനാകുമോ എന്ന്‌ നമ്മള്‍
ചിന്തിച്ചു തുടങ്ങി. അലന്‍ ട്യൂറിംഗ്‌ എന്ന ശാസ്ത്രജ്ഞനാണ്‌, ഈ ആശയത്തിന്റെ വിത്തുകള്‍
ശാസ്ത്രമേഖലയില്‍ പാകിയത്‌. യഥാര്‍ത്ഥ ജീവിത പ്രശ്‌നങ്ങളെ കമ്പ്യൂട്ടറുകള്‍ ഉപയോഗിച്ച്‌
പരിഹരിക്കുവാന്‍ ഉതകുന്ന, പ്രക്രിയാ മാതൃകകള്‍ രൂപകല്‍പ്പന ചെയ്യുക എന്നത്‌ ഇന്ന്‌ ഒരു
പ്രധാന വെല്ലുവിളിയായി കരുതപ്പെടുന്നു.

യഥാര്‍ഥ ജീവിത പ്രശ്നങ്ങള്‍ പരിഹരിക്കുന്നതിന്‌ യ്രന്രങ്ങള്‍ ഉപയോഗിക്കുവാന്‍ തുട
ങ്ങിയതോടുകൂടി, മനുഷ്യനും യന്ത്രവും പ്രത്യകിച്ച്‌ കമ്പ്യൂട്ടറുകളും തമ്മിലുള്ള ഇടപെടലുകള്‍
വളരെ രസകരമായ പഠനമായി മാറി. അത്തരം പഠനങ്ങള്‍ സൈബര്‍നെറ്റിക്സ്‌ എന്നറിയപ്പെടുന്ന
പഠന ശാഖയുടെ വളര്‍ച്ചയ്ക്ക്‌ കാരണമാകുകയും ചെയ്തു. മനുഷ്യനും യ്രന്രവും തമ്മിലുള്ള
ആശയവിനിമയത്തിന്റെയും നിയ്രന്തണത്തിന്റെയും പഠനമാണ്‌ സൈബര്‍നെറ്റിക് സ്‌.
ഉദാഹരണത്തിന്‌, ഈ പഠനങ്ങള്‍കൊണ്ട്‌ വളര്‍ന്ന മേഖലകളാണ്‌, മനുഷ്യ ഇടപെടല്‍ ഇല്ലാത്ത
ബഹിരാകാശ വാഹനത്തിന്റെ നിയ്രത്രണ സംവിധാനം, സ്വാഭാവിക ഭാഷ പ്രയോഗത്തിലൂടെ
കമ്പ്യൂട്ടറുകള്‍ക്ക്‌ നിര്‍ദേശങ്ങള്‍ നല്‍കല്‍, കയ്യെഴുത്തിലൂടെ ഇന്‍പുട്‌ നല്‍കല്‍, കാര്യക്ഷമത
യുള്ള ആയുധങ്ങള്‍ (Smart Weapons), നിയ്രത്രിത ആണവ പോര്‍മുനകള്‍ തുടങ്ങിയവ. കമ്പ്യൂ
ട്ടേഷണല്‍ ബുദ്ധിവൈഭവം (Computational Intelligence) എന്നത്‌ പഠന ഘടകങ്ങള്‍, അനുകൂലനം,
പരിണാമം, ഫസ്സീ ഭാക്ഷാശാസ്ത്രം (Fuzzy Linquistic) തുടങ്ങിയവ സംയോജിപ്പിച്ച്‌ ബുദ്ധിവൈ
ഭവമുള്ള പ്രോഗ്രാമുകള്‍ നിര്‍മ്മിക്കുകയും, അവ ഉപയോഗിച്ച്‌ യ്രന്തത്തെ വിവേകമുള്ളതാക്കു
കയും ചെയ്യുന്നു. കമ്പ്യൂട്ടിങ്ങ്‌ ബുദ്ധിവൈഭവ വിദഗ്ധര്‍ നിര്‍മ്മിത ബുദ്ധി ഉപയോഗിച്ച്‌ പരിഹ
രിക്കുവാന്‍ കഴിയാത്ത പ്രശ്നങ്ങളിലേക്കാണ്‌ ശ്രദ്ധകേന്ദ്രീകരിച്ചിരിക്കുന്നത്‌. എന്നാല്‍ മനുഷ്യ
നും, ചില ജീവജാലങ്ങളും അവയുടെ സ്വാഭാവിക ബുദ്ധി ഉപയോഗിച്ച്‌ ഈ പ്രശ്നങ്ങള്‍

പരിഹരിക്കുന്നുണ്ട്‌.

കമ്പ്യുട്ടര്‍ സയന്‍സ്‌ - XI!

ആളുകള്‍ ഭംഗിയായി ചെയ്യുന്ന ജോലികള്‍ കമ്പ്യൂട്ടര്‍ ഉപയോഗിച്ച്‌ എങ്ങനെ ചെയ്യുക്കുവാന്‍
കഴിയും എന്ന പഠനമാണത്‌ നിര്‍മിത ബുദ്ധി. ഇത്‌ വിവിധ ഗവേഷണ മേഖലകളായ കമ്പ്യൂട്ടര്‍
സയന്‍സ്‌, ജീവശാസ്ത്രം, വൈദൃശാസ്ത്രം, റോബോട്ടിക്സ്‌ തുടങ്ങിയ പഠനശാഖകളോട്‌ കൂടി
ചേര്‍ന്ന്‌ നില്‍ക്കുന്നു.

11.4.1 കമ്പദുട്ടേഷണല്‍ ബുദ്ധിവൈദവത്തിന്റെ മാത്യകകള്‍
(Computational Intelligence Paradigms)

സങ്കീര്‍ണ്ണവും, മാറികൊണ്ടിരിക്കുന്നതുമായ സാഹചര്യങ്ങളെ ബുദ്ധിപൂര്‍വമായ പ്രവര്‍ത്തന
രീതികൊണ്ട്‌ സുഗമമാക്കുവാനും, അനുയോജ്യമായ രീതികള്‍ കണ്ടെത്തുവാനും, യഥാര്‍ഥ
ജീവിത പ്രശ്നങ്ങള്‍ പരിഹരിക്കുവാനുള്ള പഠനമാണ്‌ കമ്പ്യൂട്ടേഷണല്‍ ബുദ്ധിവൈഭവം. ഈ
പ്രക്രിയയില്‍ നിര്‍മിത ബുദ്ധിയുടെ മേഖലകളായ പുതിയ സാഹചര്യങ്ങള്‍ മനസിലാക്കുക
അല്ലങ്കില്‍ പൊരുത്തപ്പെടുക തുടങ്ങിയവയും കമ്പ്യൂട്ടേഷണല്‍ ബുദ്ധിയുടെ മേഖലകളായ,
കമ്പ്യൂട്ടിങ്ങ്‌ മാതൃക, കൃത്രിമ Mow lvojooiosel (Artificial Intelligent Neural Network), ഇവല്യൂഷ
നറി കമ്പൂട്ടേഷന്‍ (Evolutionary Computation), സ്വാം ഇന്റലിജന്‍സ്‌ (Swarm Intelligence), ഫസീ
ലോജിക്‌ (Fuzzy Logic) എന്നിവയും ഉള്‍കൊള്ളുന്നു.

ഇതില്‍ കമ്പ്യൂട്ടേഷണല്‍ ബുദ്ധിവൈഭവ മാതൃക ഒറ്റപ്പെട്ട (പ്രവര്‍ത്തന രീതികളിലൂടെ യഥാര്‍ഥ
ലോക പ്രശ്നങ്ങളെ വിജയകരമായി പരിഹരിക്കുവാന്‍ സഹായിക്കുന്നു. എന്നാല്‍ പുതിയ
സാഹചര്യത്തില്‍ സങ്കരയിനം മാതൃകകള്‍ വികസിപ്പിച്ചെടുക്കുകയും, അവ ഒരു സാഹചര്യ
ത്തിലും ഒന്ന്‌ മറ്റൊന്നിനേക്കാള്‍ മേല്‍ക്കോയ്മ നേടാത്ത അവസ്ഥ ഉണ്ടാക്കുകയും ചെയ്തു.
വ്യക്തിഗത ഘടകങ്ങളുടെ പോരായ്മകള്‍ ഒഴിവാക്കികൊണ്ടു, സങ്കരയിനം കമ്പ്യൂട്ടേഷണല്‍
ബുദ്ധിവൈഭവ മാതൃകകളുടെ സംവിധാനത്തില്‍ തനതു ഘടകങ്ങളുടെ ശക്തി പരമാവധി
മുതലെടുക്കുക എന്നതാണ്‌ ഇതിന്റെ ഉദ്ദേശ്യം. ഇവിടെ കമ്പ്യൂട്ടേഷണല്‍ ബുദ്ധിവൈഭവ
മാതൃകയില്‍ നാലു പ്രധാന മാതൃകകള്‍ ആണ പരിഗണിക്കുന്നത്‌ ഇവ കൃത്രിമ നാഡീ ശൃംഖല
(Artificial Intelligent Neural Network), ഇവല്യൂഷനറി കമ്പ്യൂട്ടേഷന്‍ (Evolutionary Computation),
സ്വാം ഇന്റലിജന്‍സ്‌ (Swarm Intelligence), ഫസീ eaiedles (Fuzzy Logic) എന്നിവയാണ്‌.

സോഫ്റ്റ്‌ കമ്പ്യൂട്ടിങ്ങ്‌ (Soft Computing)

കാലിഫോര്‍ണിയ യുണിവേഴ്‌സിറ്റി യിലെ കമ്പ്യുട്ടര്‍ സയന്‍സ്‌ അദ്ധ്യാപകനായ Lotfi.A Zadeh റെ

അഭിപ്രായത്തില്‍, സോഫ്റ്റ്‌ കമ്പ്യൂട്ടിങ്ങ്‌ രീതി എന്നത്‌ കമ്പ്യൂട്ടിങ്ങ്‌ മേഖലയിലെ വികസിച്ചു
കൊണ്ടിരിക്കുന്ന കമ്പുട്ടിങ്ങക്‌ മേഖലയാണ്‌. ഉത്‌ അനിശ്ധിതവും അവ്യക്തവുമായ പരിസ്ഥിതിയെ
മനസ്സിലാക്കുവാനുള്ള മനുഷ്യ മനസ്സിന്റെ ശ്രദ്ധേയമായ കഴിവുകള്‍ക്ക്‌ സമാനമായവയെ സമാന്തരമായി
അവരരിരിക്കുന്നു. വ്യത്യസ്ത ഗ്രുഷുകളുടെ ഒരു മാതൃകയായിട്ടും, കമ്പ്യൂട്ടേഷണല്‍ ബുദ്ധി ലാതൃകകളുടെയും
അനുമാനരീതികളുടെ കൂട്ടായ സംവിധാനമായിട്ടാണ്‌ DOOM കരുതിപോരുന്നത്‌. വ്യത്യസ്ത മാതൃകകളില്‍ നിന്നുള്ള
സാങ്കേതികതകളെ കൂട്ടിച്ചേര്‍ത്ത്‌ സങ്കരയിനം സംവിധാനം ഉണാക്കുവാനും സാധിക്കും. അര്‍ദ്ധസര്യം, അവ്യദതത,
അനിമത്ധിതര്യം, ഏകദദേരരുപം തുടങ്ങിയ വിവിധതരത്തിലുള്ള സാഹചര്യങ്ങളോട്‌ സോഫ്റ്റ്‌ കമ്പ്യൂട്ടിങ്ങ്‌ രീതി
സഹിഷ്ണുത പുലര്‍ത്തുന്നു. സോഫ്റ്റ്‌ കമ്പുട്ടിങ്ങിന്റെ അനുകരണീയ HAs മനുഷ്യമസ്തിഷ്കഥാണ്‌. ഫലത്തില്‍
യഥാര്‍ഥ ജീവിതത്തിലെ അവ്യക്തമായ സാഹചര്യങ്ങളെ കൈകാര്യം ചെയ്യുവാനുതകുന്ന ഒരു കുട്ടം സ്്രദായ
ങ്ങളെ സവ്യയിരിച്ച്‌ പ്രവര്‍ത്തിരിക്കുവാനും, സാകര്യപ്രദമായ രീതിയില്‍ ആരയങ്ങളെ കൈകാര്യം ചെയ്യിക്കുവാനും
സോഫ്റ്റ്‌ കമ്പ്യൂട്ടിങ്ങ്‌ ഭീതിയ്ക്ക്‌ കഴിയുന്നു.

11. കമ്പ്യുട്ടിങ്ങിലെ മുന്നേറ്റങ്ങ

മുകളില്‍ സൂചിപ്പിച്ചിരിക്കുന്ന എല്ലാ കമ്പ്യൂട്ടേഷണല്‍ ബുദ്ധി മാതൃകകളുടെയും ഉത്ഭവം ജൈവ
വ്യവസ്ഥിതിയില്‍ നിന്നാണ്‌. (a നാഡി ശൃംഖല (Artificial Neural Network) മാതൃകയാക്കുന്നത്‌
ജൈവ വ്യവസ്ഥിതിയിലെ നാഡിവ്യൂഹത്തെയാണ്‌. ഇവല്യൂഷനറി കമ്പ്യൂട്ടിങ്‌ (Evolutionary
Computing) മാതൃകയാക്കുന്നതു പ്രകൃതി പരിണാമത്തെയാണ്‌ (ജനിതക പരിണാമവും, സ്വഭാവ
പരിണാമവും ഉള്‍പ്പടുന്നു). സ്വാം ഇന്റലിജന്‍സ്‌ (Swarm Intelligence) മാതൃകയാക്കുന്നത്‌
കോളനികളായി ജീവിക്കുന്ന ജീവികളുടെ അല്ലെങ്കില്‍ തേനീച്ചക്കൂട്ടത്തിന്റെ സാമൂഹിക സ്വഭാവ
സവിശേഷതയാണ്‌, ഫസി വ്യവസ്ഥിതി (Fuzzy System) ഉരുത്തിരിഞ്ഞിരിക്കുന്നത്‌, ജീവികള്‍
അവയുടെ പരിസ്ഥിതിയുമായി എങ്ങനെ സംവദിക്കുന്നുവെന്നതും, അനിശ്ചിതമായ, അല്ലെങ്കില്‍
അവ്യക്തമായ ആവശ്യങ്ങളോട്‌ എങ്ങനെ പ്രതികരിക്കുന്നു വെന്നതും ഗ്രഹിച്ചാണ്‌.

A. @ ola നാഡി ശൃംഖല (Artificial Neural Network)

മനുഷ്യ മസ്തിഷ്കത്തെ സങ്കീര്‍ണ്ണവും ക്രമീകരിക്കാത്ത രീതിയില്‍ സമാന്തരമായി പ്രവര്‍
ത്തിക്കുന്നതുമായ ഒരു കമ്പ്യൂട്ടറിനോട്‌ ഉപമിക്കാം. രൂപരേഖകളെ തിരിച്ചറിയുക, കാര്യങ്ങള്‍
ഗ്രഹിക്കുക, ചലിക്കുക തുടങ്ങിയ പ്രവര്‍ത്തികള്‍ ഒരു കമ്പ്യൂട്ടറിനേക്കാള്‍ വേഗത്തില്‍ മസ്തി
ഷ്കത്തിന്‌ ചെയ്യുവാന്‍ കഴിയുന്നു. എന്നിരുന്നാലും സിലിക്കണ്‍ ഗേറ്റ്സ്‌ നാനോ സെക്കന്റുകളിലും
നാഡി വ്യവസ്ഥ മില്ലി സെക്കന്റുകളിലുമാണ്‌ കാര്യങ്ങള്‍ നടപ്പിലാക്കുന്നത്‌. മസ്തിഷ്കത്തിന്‌
ഈ സവിശേഷതകള്‍ കൂടാതെ ഗ്രഹിക്കുവാനുള്ള കഴിവ്‌, ഓര്‍മിക്കുവാന്‍ ഉള്ള കഴിവ്‌, എപ്പോഴും
അനുമാനിക്കുവാനുള്ള കഴിവ്‌ തുടങ്ങിയവയും ഉണ്ട്‌. ജീവശാസ്ത്രപരമായ നാഡീ വ്യവസ്ഥ
കളുടെ, ഗവേഷ്ണമേഖലകളിലെ പ്രക്രിയ മാതൃകകളാണ്‌ കൃര്രിമ നാഡി ശൃംഖല.

മനുഷ്യന്റെ മസ്തിഷ്കത്തിലുള്ള കോര്‍ട്ടെക്സില്‍ [Cortex] 10 - 500 ലക്ഷം കോടി നാഡീകോ
ശങ്ങളും 60 (്രില്യണ്‍ സിനാപ്സുകളും ഉണ്ട്‌ എന്നാണ്‌ കണക്കാക്കിയിരിക്കുന്നത്‌, സിനാപ്സ്സ്‌
(Synapses) എന്നത്‌ ഒരു നാഡീകോശത്തില്‍ നിന്ന്‌ മറ്റൊരു നാഡീികോശത്തിലേക്കു ആവേഗ
ങ്ങളെ സംയോജിപ്പിക്കുന്ന പ്രധാന ഇടമാണിത്‌. നാഡികോശങ്ങളെ ഏകദേശം 1000 ത്തോളം
പ്രധാന ഘടകങ്ങളായി ക്രമീകരിച്ചിരിക്കുന്നു. ഓരോന്നിനും 500 ഓളം നാഡിവ്യൂഹങ്ങള്‍ ഉണ്ട്‌.
ചെറിയ കാര്യങ്ങള്‍ കൃത്രിമ നാഡീ ശൃംഖലകള്‍ (ച്ഡ്‌പ) പരിഹരിക്കുന്നു എന്നതാണ്‌ നാഡീ

മാതൃകകളുടെ (neural modelling) ഇപ്പോഴത്തെ വിജയം
13. ഇവല്യുഷനറി കമ്പ്യുട്ടേഷന്‍ (Evolutionary Computation)

സ്വാഭാവിക പരിണാമ പ്രക്രിയയെ അനുകരിക്കുക എന്നതാണ്‌ പരിണാമ കമ്പ്യൂട്ടിങ്ങ്‌ രീതിയുടെ
പ്രധാന ലക്ഷ്യം. ഉത്തമഗുണങ്ങള്‍ ഉള്ളവ അതിജിവിക്കു എന്നതാണ്‌ ഇവിടത്തെ പ്രധാന
ആശയം. അതായതു ദുര്‍ബലര്‍ നശിപ്പിക്കപ്പെടും. പ്രകൃതി പരിണാമ ല്ര്രകിയയില്‍, ഒരു
ജീവിയുടെ നിലനില്‍പ്പ്‌ പ്രത്യുല്‍പ്പാദനം വഴിയാണ്‌ നടക്കുന്നത്‌. എല്ലാ സന്തതികളിലും മാതാ
പിതാക്കളുടെ രണ്ടുപേരുടെയും ജനിതക ഘടകങ്ങള്‍ ഉണ്ടായിരിക്കും. മാതാപിതാക്കളുടെ മികച്ച
സ്വഭാവ സവിശേഷതകള്‍ സന്തതികള്‍ക്ക്‌ കിട്ടും എന്ന്‌ പ്രതീക്ഷിക്കുന്നു. അതിനു വിരുദ്ധമായി
മോശപ്പെട്ട സ്വഭാവ സവിശേഷതകള്‍ പാരമ്പര്യമായി ലഭിക്കുന്നവര്‍ക്ക്‌ അതിജീവനം സാധ്യമ
ല്ലാതെ വരുന്നു. എല്ലാ ജീവിവര്‍ഗങ്ങളും നിലനില്‍ക്കാന്‍ സാധ്യത ഉള്ളതിലും കൂടുതല്‍ കുഞ്ഞു

ങ്ങളെ ഉല്‍പ്പാദിപ്പിക്കുന്നുണ്ട്‌. അതിനാല്‍ അവര്‍ തമ്മില്‍ ആഹാരത്തിനു വേണ്ടിയും മറ്റും സമരം

കമ്പ്യുട്ടര്‍ സയന്‍സ്‌ - XI!

നടക്കുകയും അവയില്‍ ഏറ്റവും നന്നായി പ്രകൃതിയോട്‌ ഇണങ്ങി ജീവിക്കാന്‍ കഴിയുന്നവ
മാത്രം നിലനില്‍ക്കുകയും ചെയ്യുന്നു. ഇത്‌ ചില പക്ഷി വര്‍ഗ്ഗങ്ങളില്‍ നമുക്കു കാണുവാന്‍ സാ
ധിക്കും. അവിടെ കൂടുതല്‍ ഭക്ഷണം ലഭിക്കുവാനും ശക്തിയാര്‍ജിക്കുവാനുമായി പക്ഷി
കുഞ്ഞുങ്ങളില്‍ ദൂര്‍ബലന്മാരെ കൂട്ടില്‍ നിന്ന്‌ പുറംതള്ളി ഇല്ലാതാക്കുന്നു.

പരിണാമ അല്‍ഗൊരിതങ്ങള്‍ വ്യക്തികളുടെ സാമൂഹിക ജീവിതത്തില്‍ ഉപയോഗിക്കുന്നു. ഇവിടെ
വൃക്തികളെ ക്രോമോസോം ആയി കരുതാം. ഒരു സമൂഹത്തിലെ വൃക്തികളുടെ സ്വഭാവ സവി
ശേഷതകളെ ക്രോമോസോം നിര്‍വചിക്കുന്നു. ഓരോ സ്വഭാവ സവിശേഷതയും ഓരോ
ജീനുമായി (Gene) ബന്ധപ്പെട്ടിരിക്കുന്നു. ഒരു സ്വഭാവത്തെ നിര്‍ണ്ണയിക്കുന്ന ജീനിന്‌ വൃത്യസ്ത
തരങ്ങള്‍ ഉണ്ടാകും. ഒരു ജീനിന്റെ വൃത്ൃസ്ത തരങ്ങളെ അലിലുകള്‍ [Allele] എന്ന്‌ വിളിക്കുന്നു.
ഓരോ തലമുറയിലെയും ജീവികള്‍ അവയുടെ സന്തതിപരമ്പരകളെ സൃഷ്ടിക്കുവാന്‍ മത്സരി
ക്കുന്നു.

അതിജീവന ശേഷി കുടുതലുള്ള വ്യക്തികള്‍ക്ക്‌ പ്രത്യുല്‍പ്പാദന ശേഷിക്കുള്ള സാധ്യത
മികച്ചതാണ്‌. സന്താനപരമ്പരകള്‍ സൃഷ്ടിക്കപ്പെടുന്നത്‌ മാതാപിതാക്കളുടെ സ്വഭാവസവിശേ
ഷതകള്‍ സമന്വയിപ്പിച്ചു കൊണ്ടാകും. ഇതിനെ ക്രോസ്സോവര്‍ എന്ന്‌ പറയുന്നു. ഒരു ജീവിയുടെ
ജനിതകഘടനയില്‍ പെട്ടെന്ന്‌ ഉണ്ടാകുന്നതും അടുത്ത തലമുറയിലേക്കു കൈമാറ്റം ചെയ്യ
പ്പെടുന്നതുമായ മാറ്റങ്ങളാണ്‌ ഉല്പരിവര്‍ത്തനം (mutation). ഒരു ജീവി വര്‍ഗ്ഗത്തിലെ ഓരോ
ജീവിയിലും ഉല്പരിവര്‍ത്തനം വഴി ക്രോമോസോമുകളിലെ അലീലുകളില്‍ മാറ്റങ്ങള്‍ സംഭവി
ക്കുന്നു. ഒരു ജീവിയുടെ അതിജീവനശേഷി സാധ്യമാവുന്നത്‌ അവയുടെ ആവശ്യങ്ങള്‍ നേടു
വാനും മുന്നിലുള്ള പ്രതിബന്ധങ്ങളെ തരണം ചെയ്യുവാനുമുള്ള ക്ഷമതയെ ആധാരമാക്കിയാണ്‌.

യഥാര്‍ഥ ലോകത്തിലെ പ്രവര്‍ത്തനങ്ങളായ ഡാറ്റ ഖനനം (ഡാറ്റ മൈനിംഗ്‌) (പുതിയ വിവരങ്ങള്‍
ഡാറ്റാബേസില്‍ നിന്ന്‌ കണ്ടെത്തുക), തകരാറുകള്‍ നിര്‍ണ്ണയിക്കുക (Fault Diagnosis), വര്‍ഗീക
രണം (classification), പദ്ധതി തയ്യാറാക്കുക (scheduling) തുടങ്ങിയവയില്‍ വളരെ വിജയകരമായി
തന്നെ ഇവല്യൂഷനറി കമ്പ്യൂട്ടേഷന്‍ (Evolutionary Computation) നടപ്പിലാക്കിയിരിക്കുന്നു.

൦. സ്വാം ഇന്റലിജന്‍സ്‌ (Swarm Intelligence)

കോളനിയായി താമസിക്കുന്ന ജീവികളുടെ ജീവിത രിതികളെക്കുറിച്ചുള്ള പഠനത്തില്‍ നിന്നാണ്‌
സ്വാം ഇന്റലിജന്‍സ്‌ എന്ന ആശയം ഉരുത്തിരിഞ്ഞത്‌ (ചിത്രം 11.11).
ജീവികളുടെ സാമൂഹിക സ്വഭാവത്തെകുറിച്ചുള്ള പഠനങ്ങള്‍ വളരെ
കാര്യക്ഷമമായ അല്‍ഗോരിതങ്ങള്‍ രൂപകല്‍പ്പന ചെയ്യുവാന്‍
പ്രേരണയായി. ഉദാഹരണത്തിന്‌, ആകാശത്തു കൂട്ടമായി പറക്കുന്ന
പക്ഷികളുടെ പ്രവചനാതീതമായ ചലന ക്രമീകരണങ്ങളുടെ
മനോഹരമായ ആവിഷ്‌കാരപഠനങ്ങള്‍ നയിച്ചത്‌ പാര്‍ട്ടിക്കിള്‍ സ്വാം
ഓപ്ടിമൈസേഷന്‍ അല്‍ഗോരിതത്തിലേക്കാണ്‌ (Particle Swarm
Optimization Algorithms). ഭക്ഷണസാധനങ്ങള്‍ തേടിയുള്ള ഉറുമ്പു
കളുടെ സഞ്ചാരത്തെക്കുറിച്ചുള്ള പഠനം ആന്റ്‌ കോളനി ഓപ്റ്റി
ലൈസേഷന്‍ അല്‍ഗോരിത (Ant colony optimization algrorithm) 4൫ g09mj5305 MAZa00

മായി പരിണമിച്ചു.

11. കമ്പ്യുട്ടിങ്ങിലെ മുന്നേറ്റങ്ങ

യന്ത്രപഠനം (Machine Learning )

സങ്കീര്‍ണ്ണ രൂപങ്ങളില്‍നിന്നും പ്രയോധസിദ്ധമായ ഡാറ്റയില്‍ നിന്നും ഒരു യന്ത്രത്തിന്‌ അനുമാന
ങ്ങളില്‍ എത്തിച്ചേരുവാനുള്ള കഴിവിനെ യ്നത്രപഠനം എന്ന്‌ പറയുന്നു. ചിത്രങ്ങളുടെയും ബ്ദ
ത്തിന്റെയും വിരകലന മേഖലകളിലാണ്‌ യന്ത്രപഠനം കുടുതലായി ഉപയോിച്ചിരിക്കുന്നത്‌. അതോദൊഷം
ഡാറ്റ ഖനന പ്രരകിയകളിലും ഉത്‌ പ്രയോജനകെടുത്തുന്നു. കമ്പ്യൂട്ടേഷണല്‍ ബുദ്ധിവൈദവ (Computational
Intelligence) സ്ര്രദായങ്ങള്‍ എല്ലാം ഒരുപോലെയാണെങ്കിലും പ്രധാന അറിവുകളുടെ പ്രതിനിധീകരണം യന്ത്ര
പഠനത്തില്‍ സ്ഥിരമാണ്‌. എന്നാല്‍ കമ്പ്യൂട്ടേഷണല്‍ ബുദ്ധിവൈദവത്തില്‍ പ്രധാന അറിവുകളുടെ പ്രതിനിധി
കരണം ഏകദേശ രുപത്തിലുള്ള അവതരണമാണ്‌ (Fuzzy).

യ്ത
1. ഫസി സിസ്റ്റം (Fuzzy System)

പരമ്പരാഗത OMY തിയറിയില്‍ അംഗങ്ങള്‍ ഒരു ഗണത്തില്‍ ഉള്‍പ്പെടുന്നുണ്ടോ ഇല്ലയോ
എന്നുള്ള നിഗമനമാണ്‌ നടക്കുന്നത്‌. അതുപോലെ ബൈനറി വിലയുടെ (binary value)
യുക്തിയില്‍ മൂല്യങ്ങള്‍ 9 അല്ലെങ്കില്‍ 1 ആകാം. എന്നിരുന്നാലും മനുഷ്യന്റെ യുക്തി എല്ലായി
പ്പോഴും ഇത്രയും കൃത്യമായിക്കൊള്ളണമെന്നില്ല. നമ്മുടെ നിരീക്ഷണത്തിലും യുക്തിയിലും
പലപ്പോഴും അനിശ്ചിതത്വം ഉള്‍പ്പെട്ടിട്ടുണ്ടാകും. ഉദാഹരണത്തിന്‌ “ചില കമ്പ്യൂട്ടര്‍ സയന്‍സ്‌
വിദ്യാര്‍ഥികള്‍ക്ക്‌ എല്ലാ ഭാഷയിലും പ്രോഗ്രാം ചെയ്യാന്‍ സാധിക്കും; എന്ന വാചകം എല്ലാവര്‍ക്കും
മനസ്സിലാക്കുവാന്‍ കഴിയും. പക്ഷെ കമ്പ്യൂട്ടറിനു എങ്ങനെ ഈ യാഥാര്‍ഥ്യത്തെ അവതരിപ്പിക്കു
വാനും യുക്തിവിചാരം നടത്തുവാനും കഴിയും? ഫസി സെറ്റുകളും ഫസി ലോജിക്കും ഏകദേശ
യുക്തിവിചാരത്തെ അനുവദിക്കുന്നു. അംഗങ്ങള്‍ ഒരു വിഭാഗത്തില്‍ എത്രത്തോളം ഉള്‍ക്കൊണ്ടി
ട്ടുണ്ട്‌ എന്ന്‌ ഫസി സെറ്റുകള്‍ കൊണ്ട്‌ പരാമര്‍ശിക്കുന്നു. ഫസി ലോജിക്‌ അനിശ്ചിതമായ വസ്തു
തകളില്‍ നിന്ന്‌, ഓരോ വസ്തുതകളിലും അടങ്ങിയിരിക്കുന്ന നിശ്ചിതത്വത്തിന്റെ അംശം ഉറപ്പാ
ക്കിക്കൊണ്ട്‌, പുതിയ വസ്തുതകളുടെ യുക്തിവിചാരത്തിലെത്തിച്ചേരുന്നു. ഒരര്‍ഥത്തില്‍ ഫസി
സെറ്റുകളും ഫസി ലോജിക്കും സാമാന്യ ബോധത്തിന്റെ മാതൃകകള്‍ അനുവദിക്കുന്നു.

വാഹനങ്ങളിലെ ഗിയര്‍ ദ്രാന്‍സ്മിഷന്‍, റാക്കിങ്‌ സംവിധാനങ്ങളുള്‍ തുടങ്ങിയവയുടെ നിയ
ന്ത്രണം, ലിഫ്റ്റ്‌ നിയ്രന്തണം, ഗൃഹോപകരണങ്ങളുടെ നിയ്രന്തണം, (ട്രാഫിക്‌ സിഗ്നല്‍
നിയ്രന്തണം തുടങ്ങിയ മേഖലകളില്‍ ഫസി സംവിധാനം (Fuzzy System) വിജയകരമായി
നടപ്പിലാക്കിയിരിക്കുന്നു.

11.4.2 കമ്പൂട്ടേഷണല്‍ ബുദ്ധിയുടെ പ്രയോഗം

കമ്പ്യൂട്ടേഷണല്‍ ബുദ്ധിവൈഭവം (പൊതുവായ്‌ നിര്‍മിതബുദ്ധി എന്ന്‌ അറിയപ്പെടുന്നു) എന്നത്‌
വിശാലമായ ഇടപെടല്‍ ഉള്ളതും മറ്റു പല പ്രവര്‍ത്തന മേഖലകളിലും സ്വാധീനമുള്ളതുമാണ്‌.
കമ്പ്യൂട്ടിംഗ്‌ മേഖലയില്‍ മാത്രമല്ല, ഗണിതം, ഭാഷാശാസ്ത്രം, മനശാസ്ത്രം, നാഡീ ശാസ്ത്രം,
മെക്കാനിക്കല്‍ എഞ്ചിനീയറിംഗ്‌, സ്റ്റാറ്റിസ്റ്റിക്സ്‌,സാമ്പത്തിക ശാസ്ത്രം, നിയ്യന്തണ സിദ്ധാന്തവും
സൈബര്‍നെറ്റിക്സും, തത്വചിന്ത തുടങ്ങി മറ്റു പലമേഖലകളിലും ഇത്‌ ഉപയോഗിക്കുന്നു.
കമ്പ്യൂട്ടേഷണല്‍ ബുദ്ധിവൈഭവത്തിന്റെ പ്രയോഗത്തെക്കുറിച്ച്‌ ഇപ്പോള്‍ സമഗ്ര പഠനം നടത്തി
ക്കൊണ്ടിരിക്കുന്നു. കമ്പ്യൂട്ടേഷണല്‍ ബുദ്ധിയുടെ പ്രചുര പ്രചാരം നേടിയ ചില പ്രയോഗങ്ങളെ

ക്കുറിച്ച്‌ നമുക്ക്‌ ഇവിടെ ചര്‍ച്ച ചെയ്യാം.

കമ്പ്യുട്ടര്‍ സയന്‍സ്‌ - XI!

A. ബയോമ്മെട്ിക്സ്‌

ബയോമ്രടരിക്സ്‌ എന്നത്‌ മനുഷ്യന്റെ സവിശേഷതകളുമായും വിശേഷണ ഗുണങ്ങളുടെ അളവു
കളുമായും ബന്ധപ്പെട്ടിരിക്കുന്നു.വ്ൃക്തികളെ തിരിച്ചറിയുവാന്‍ ബയോമ്മെടിക്‌ തിരിച്ചറിയല്‍
സംവിധാനം ഉപയോഗിക്കുന്നു. തിരിച്ചറിയുവാന്‍ കഴിയുന്നതും അളക്കുവാന്‍ കഴിയുന്നതുമായ
സ്വഭാവ സവിശേഷതകള്‍ ഉപയോഗിച്ച്‌ ഒരു വൃക്തിയെ അടയാളപ്പെടുത്തുവാനും വിവരങ്ങള്‍
തയാറാക്കുവാനും ബയോമ്മെടിക്‌ തിരിച്ചറിയലുകള്‍ ഉപയോഗിക്കുന്നു. ശാരീരിക പ്രവര്‍ത്ത
നങ്ങള്‍, ശരീര ഘടനയുമായും ശരീരത്തിന്റെ സവിശേഷതകളുമായും ബന്ധപ്പെട്ടിരിക്കുന്നു.
വിരലടയാളം, ഹസ്തരേഖകള്‍, മുഖം, കയ്യുടെ അളവുകള്‍, ഐറിസ്‌, റെറ്റിന, ഗന്ധം, മണം
തുടങ്ങിയവ ഇതില്‍ ഉള്‍പ്പെടുന്നു. സ്വഭാവ സവിശേഷതകള്‍ വ്ൃക്തിയുടെ സ്വഭാവമാതൃകയുമായി
ബന്ധപ്പെട്ടിരിക്കുന്നു. ഇതില്‍ ശബ്ദം, വേഗത, എന്നിവ ഉള്‍പ്പെട്ടിരിക്കുന്നു.

ഹാജര്‍ രേഖപ്പെടുത്തുവാനും, കമ്പ്യൂട്ടറും AY ഉപകരണങ്ങളും ഉപയോഗിക്കുന്നതിന്റെ ആധികാ

രികത ഉറപ്പാക്കുവാനും, ആധാര്‍കാര്‍ഡ്‌ പോലുള്ള പ്രധാനപ്പെട്ട മേഖലകളിലും ബയോമ്മെടിക്‌
തിരിച്ചറിയല്‍ സാധാരണയായി ഉപയോഗിക്കുന്നു. ചിത്രം 11.12 ബയോമ്മെട്രിക്കിന്റെ ഉപയോഗം
കാണിച്ചിരിക്കുന്നു.

ചിത്രം. 11.12: H@LSOIBAZo റ്റിയും തിരിച്ചറിയല്‍

13. റോബോട്ടിക്സ്‌

റോബോട്ട്‌ ഒരു ഇലക്രോമെക്കാനിക്കല്‍ ഉപകരണമാണ്‌. ഇവയ്ക്കു സാഹചര്യത്തിന്‌ അനുസ
രിച്ചു പ്രതികരിക്കാനും സ്വതന്ത്ര രീതിയില്‍ തീരുമാനം എടുത്ത്‌ പ്രവര്‍ത്തിച്ച്‌ അതിലൂടെ
പ്രത്യേക കര്‍ത്തവ്യം നിര്‍വഹിക്കുവാനുമുള്ള കഴിവുണ്ട്‌.

റോബോട്ടുകളുടെ രൂപകല്‍പ്പന, നിര്‍മാണം, സിദ്ധാന്തം, ഉപയോഗങ്ങള്‍ എന്നിവയുടെ
ശാസ്ര്രീയ പഠനത്തേ റോബോട്ടിക്സ്‌ എന്ന്‌ നിര്‍വചിച്ചിരിക്കുന്നു. റോബോട്ടിക്സ്‌ എന്നത്‌
ബഹുമുഖ ശാസ്ത്രശാഖയാണ്‌. മെക്കാനിക്കല്‍ എഞ്ചിനീയറിങ്‌, ഇല്രക്ടിക്കല്‍ എഞ്ചിനിയറിംഗ്‌,
കമ്പ്യൂട്ടര്‍ സയന്‍സ്‌ തുടങ്ങിയ മേഖലകളില്‍ വ്യാപിച്ചു കിടക്കുന്ന പഠന ശാഖയാണ്‌ ഇത്‌.
റോബോട്ടിക്കിന്റെ ശാസ്ത്രീയ പഠനത്തില്‍, റോബോട്ടുകളുടെ രൂപകല്‍പ്പന, നിര്‍മ്മാണം,
പ്രവര്‍ത്തനം, ഉപയോഗം തുടങ്ങിയവയും, കമ്പ്യൂട്ടര്‍ സംവിധാനമുപയോഗിച്ച്‌ ഇവയുടെ
നിയ്രന്തണം, സംവേദ ഉപകരണങ്ങള്‍ വഴിയുള്ള വിവര ശേഖരണം, ഗ്രഹിക്കുന്ന വിവരങ്ങളെ
പ്രക്രിയയ്ക്ക്‌ വിധേയമാക്കുക എന്നിവയും ഉള്‍പ്പെടുന്നു. ചിത്രം 11.13 ല്‍ റോബോട്ടുകളുടെ

ചില ഉപയോഗങ്ങള്‍ കാണിച്ചിരിക്കുന്നു.

11. കമ്പ്യുട്ടിങ്ങിലെ മുന്നേറ്റങ്ങ

൪)

ചിത്രം. 11.13: (a) കാരി നിര്‍മാണത്തില്‍ (2) കാര്‍ഷിക ദ്മഖലതില്‍ (c) മൈരിക ദുദ്ധാണ്‍്‌ എന്നിവയില്‍ ensenI0g; 06

ഇന്നു റോബോട്ടുകള്‍ വാഹന വ്യവസായം, ബഹിരാകാശമേഖല, സൈനികമേഖല തുടങ്ങിയ
നിരവധി മേഖലകളില്‍ ഉപയോഗിക്കുന്നു. ഇവയില്‍ ചിലതു നമുക്കു ചര്‍ച്ച ചെയ്യാം.

വാഹന നിര്‍മാണ മേഖലയിലെ ഉപയോഗങ്ങള്‍: റോബോട്ടിക്‌ കൈകള്‍ വാഹന നിര്‍മാണ
പ്രക്രിയയില്‍ ഉപയോഗിക്കുന്നു. ഇവ വെല്‍ഡിങ്‌, കട്ടിങ്‌, ഉയര്‍ത്തല്‍, ക്രമപ്പെടുത്തല്‍, വളയ്ക്കല്‍
തുടങ്ങിയ ഒന്നിലധികം ജോലികള്‍ ചെയ്യുവാന്‍ കഴിവുള്ളവയാണ്‌.

ബഹിരാകാശ പര്യവേഷണം: ബഹിരാകാശ നിലയങ്ങള്‍ സ്ഥാപിക്കുക, ബഹിരാകാശ
വാഹനത്തില്‍നിന്നും ഉപ്രഗഹങ്ങള്‍ വിക്ഷേപിക്കുക എന്നീ പ്രവര്‍ത്തികള്‍ മനുഷ്യനിയ്ന്ത്ര
ണത്തിലൂടെ യ്ന്ത്രക്കൈകള്‍ നിര്‍വഹിക്കുന്നു.

സ്മാര്‍ട്ട്‌ ഹോംസ്‌: വിടുകളുടെ സുരക്ഷയ്ക്കും ഈര്‍ജ്ജ ഉപയോഗ നിയ്യരന്തണത്തിനും പരി
സര അവലോകനത്തിനും സ്വയം പ്രവര്‍ത്തന സംവിധാനം ഉപയോഗിക്കുന്നു. കതകുകളും
ജനലുകളും സ്വയം തുറക്കുവാനും, ഗൃഹോപകരണങ്ങളും ലൈറ്റും ശീതീകരണികളും മുന്‍
കൂട്ടി തയ്യാറാക്കി വെച്ച പ്രോഗ്രാമുകള്‍ അനുസരിച്ചു സ്വയം പ്രവര്‍ത്തന ക്ഷമമാക്കുവാനും
കഴിയുന്നു.

ബുദ്ധിമുട്ടുള്ള സാഹചര്യങ്ങളിലെ പര്യവേക്ഷണം. മനുഷ്യന്‍ പ്രവേശിക്കുവാന്‍ കഴിയാത്ത
അപകട സാധ്യത കൂടിയ മേഖലകളില്‍ എത്തിച്ചേരുവാന്‍ റോബോട്ടുകള്‍ക്കു കഴിയുന്നു.
അഗ്നിപര്‍വ്ൃതങ്ങളുടെ ഉള്‍ഭാഗത്തും ആഴക്കടല്‍ നിരീക്ഷണത്തിനും ഇവ ഉപയോഗിക്കുന്നു.
1960 കളുടെ തുടക്കം മുതല്‍ തന്നെ നാസ (NASA) ഗ്രഹങ്ങളുടെ പര്യവേക്ഷണത്തിനായി
റോബോട്ടുകളെ ഉപയോഗിച്ച്‌ തുടങ്ങിയിരുന്നു

സൈനികപരമായ ഉപയോഗങ്ങള്‍: ഇക്കാലത്തു ആധുനിക സൈന്യങ്ങള്‍ പല ആവശ്യ
ങ്ങള്‍ക്കായി എയര്‍ ബോണ്‍ റോബോട്ടുകള്‍ (ഡ്രോണ്‍സ്‌) ഉപയോഗിക്കുന്നു. നിരീക്ഷണ മേഖല
യിലാണ്‌ പ്രധാനമായും ഡ്രോണുകള്‍ ഇന്ന്‌ കൂടുതലായും ഉപയോഗിക്കുന്നത്‌. ആകാശ
മാര്‍ഗത്തിലൂടെ ശത്രുക്കളുടെ ആവാസ കേന്ദ്രങ്ങള്‍ ആക്രമിക്കുവാന്‍ ഡ്രോണുകള്‍ ഉപയോഗി
ക്കുന്നു. ഭാവിയില്‍, സ്വയം നിയ്രതിത എയര്‍ക്രാഫ്റ്റുകളും വാഹനങ്ങളും ഉപയോഗിച്ച്‌ ഇന്ധന
വും സ്ഫോടകവസ്തുക്കളും യുദ്ധമേഖലകളില്‍ എത്തിക്കുവാനും മൈനുകള്‍ നീക്കം
ചെയ്യുവാനും ഉപയോഗിച്ചേക്കാം.

കാര്‍ഷിക മേഖലയിലെ ഉപയോഗങ്ങള്‍: വികസിത രാജ്യങ്ങളിലെ വലിയ കൃഷിമേഖലകളില്‍
വിളവെടുപ്പ്‌ നടത്തുവാനും വിളകള്‍ സ്വയം ശേഖരിക്കുവാനും യ്രന്തങ്ങള്‍ ഉപയോഗിക്കുന്നു.
റോബോട്ടിക്‌ ക്ഷവീരശാലകളില്‍ മൃഗങ്ങള്‍ക്കു ഭക്ഷണം നല്‍കുവാനും പാല്‍ ശേഖരിക്കുവാനും

വിദൂര സ്ഥലങ്ങളില്‍ ഇരുന്ന്‌ സാധിക്കുന്നു.

കമ്പ്യൂട്ടര്‍ സയന്‍സ്‌ - XI!

1942 ല്‍ പ്രസിദ്ധീകരിച്ച റണ്‍റൊൌണ്ട്‌ (RUNROUND ) എന്ന ചെറുകഥയില്‍ അമേരിക്കന്‍
കഥാകൃത്തും ബയോ കെമിസ്ട്രി പ്രൊഫസറുമായ ഐസക്‌ അസിഥോസ്‌ (ISSAC ASIMOU)
ആണ്‌ റോബോട്ടിക്‌ എന്ന പദം ആദ്യമായി ഉപയോരിച്ചത്‌. റോബോട്ടാ എന്ന ചെക്ക്‌ പദത്തില്‍
നിന്നാണ്‌ ഈ വാക്കിന്റെ ഉദ്ഭവം. ഉതിന്റെ അര്‍ത്ഥം പ്രതിഫലം വാങ്ങാതെ നിര്‍ബന്ധമായി
കായികാധ്വാനം ചെയ്യുക” എന്നാണ്‌.

൦. കമ്പ്യുട്ടര്‍ ദൃഷ്ടി (COMPUTER VISION)

ദ്വിമാന ദൃശ്യങ്ങളില്‍ നിന്ന്‌, വ്യക്തമായതും, രൂപഘടനയുടെ അര്‍ഥപൂര്‍ണമായ വിവരങ്ങ
ഉടങ്ങിയതുമായ ത്രിമാന ദൃശ്യങ്ങളുടെ നിര്‍മാണമാണ്‌ കമ്പ്യൂട്ടര്‍ ദൃഷ്ടി. കമ്പ്യൂട്ടറുകളുടെയും
ക്യാമറകളുടെയും സഹായത്തോടുകൂടി ശേഖരിക്കുന്ന ദ്വിമാന ദൃശ്യങ്ങളെ അടിസ്ഥാനമാക്കി
കമ്പ്യൂട്ടര്‍ വിഷന്‍ (ത്രിമാന ദൃശ്യങ്ങളുടെ ആകൃതിയും ഗുണങ്ങളും കണക്കാക്കുന്നു. ഇതിനെ
ചിത്രങ്ങളെ ശ്രഹിക്കുക (IMAGE UNDERSTANDING) എന്നും വിളിക്കുന്നു.

ദൃശ്യ മാധ്യമങ്ങളുടെ സഹായത്താല്‍ ബരദ്ധിക ലോകത്തെ മനസ്സിലാക്കാന്‍ കമ്പ്യൂട്ടറുകളെ
പ്രാപ്തമാക്കുക എന്നതാണ്‌ ഈ ശാഖയുടെ ഉദ്ദേശം. ചിത്രങ്ങള്‍ ഏതു രൂപത്തിലും എടുക്കാവു
ന്നതാണ്‌. അതായത്‌, ക്രമമായ വീഡിയോ ആയിട്ടോ, ഒന്നില്‍ കൂടുതല്‍ ക്യാമറകള്‍ ഉപയോഗിച്ച്‌
വിവിധ തലങ്ങളിലെ ചിത്രങ്ങളായിട്ടോ, മെഡിക്കല്‍ WHIM നിന്നുള്ള ബഹുമുഖ
ഡാറ്റകളായിട്ടോ ആകാം ഇത്‌.

കമ്പ്യൂട്ടര്‍ വിഷന്‍ ആദ്യമായി വികസിപ്പിച്ചത്‌
സൈനിക ആവശ്യങ്ങള്‍ക്കാണ്‌. ഇത്‌
നിര്‍മിത ബുദ്ധിയുടെയും റോബോട്ടിക്സി
ന്റെയും ഒരു പ്രധാന ഭാഗമാണ്‌. ദൃശ്യ പുന
രാവിഷ്കരണം, സ്ഥിതി മനസ്സിലാക്കല്‍,
വീഡിയോ ട്രാക്കിംഗ്‌, ഗ്രഹിക്കല്‍, ഇന്‍ഡ
ക്സിങ്‌, വസ്തുവിനെ മനസ്സിലാക്കല്‍, ചിത്ര
പുനരാവിഷ്കരണം തുടങ്ങിയവ കമ്പ്യൂട്ടര്‍
വിഷന്റെ ഉപമേഖലകള്‍ ആണ്‌. ചിത്രം
11.14ല്‍ ചൊവ്വയില്‍ ക്യൂരിയോസിറ്റി എന്ന
മാര്‍സ്‌ റോവര്‍ കമ്പ്യൂട്ടര്‍ വിഷന്‍ ഉപയോ
ഗിച്ച്‌ ഗവേഷണം നടത്തുന്നതിന്റെ ചിത്രം പ്രദര്‍ശിപ്പിച്ചിരിക്കുന്നു.

ചിത്രം 11.14: ചൊ പരുവേഷ്ണ വാഫനം കുുമ്യോദ്ധി്റി.

1. സ്വാഭാവിക ഭാഷ പ്രിയ (നാച്ചുറല്‍ ലാംഗ്വേജ്‌ പ്രോസസ്സിംഗ്‌ (NLP))

ജനങ്ങളുടെ സംസാര ഭാഷയെ സ്വാഭാവിക ഭാഷകള്‍ (Natural Language) എന്ന്‌ പറയുന്നു.
കമ്പ്യൂട്ടര്‍ ശാസ്ത്ര മേഖലയിലെ ഒരു ശാഖയായ സ്വാഭാവിക ഭാഷ (aK (നാച്ചുറല്‍ ലാംഗ്വേജ്‌
പ്രോസസ്സിംഗ്‌) (പധാനമായും ലക്ഷ്യമിടുന്നത്‌ ഇംഗ്ലീഷ്‌, മലയാളം തുടങ്ങിയ ഭാഷകളിലൂടെ
കമ്പ്യൂട്ടറുമായി ആശയവിനിമയം നടത്തുവാനുള്ള സംവിധാനം ഉണ്ടാക്കുക എന്നതാണ്‌.
നിര്‍മ്മിത ബുദ്ധി (AI) യുടെ ഉപമേഖലയാണ്‌ സ്വാഭാവിക ഭാഷ (aol (Natural Language
Processing). ഏതെങ്കിലും സവിശേഷ അറിവ്‌ ഇല്ലാതെ തന്നെ കമ്പ്യൂട്ടറുമായി ആളുകള്‍ക്ക്‌
ഇടപെടാന്‍ ഇത്‌ സഹായിക്കുന്നു. ഏതൊരു വ്ൃക്തിയ്ക്കും അവരുടെ സ്വന്തം ഭാഷ ഉപയോഗിച്ച്‌
കമ്പ്യൂട്ടറുമായി സംസാരിക്കാം എന്നതാണ്‌ ഇതുകൊണ്ടു ഉദ്ദേശിക്കുന്നത്‌. അതിനായി ഏതെ

11. കമ്പ്യുട്ടിങ്ങിലെ മുന്നേറ്റങ്ങ

PIANO പ്രോ്രഗാമിങ്‌ ഭാഷ പഠിക്കേണ്ട ആവശ്യം ഇല്ല. ചിഹ്നങ്ങളുടെയും ചട്ടങ്ങളുടെയും ഒരു
ഗണമാണ്‌ ഭാഷ എന്ന്‌ നമുക്ക്‌ അറിയാം. പുതിയ ആശയങ്ങള്‍ വിനിമയം ചെയ്യുവാന്‍ ചിഹ്നങ്ങളെ
കൂട്ടിയോജിപ്പിക്കുന്നു. ഭാഷ നിയമങ്ങള്‍ ചിഹ്നങ്ങളെ ചിട്ടപ്പെടുത്തുവാനുള്ള മാര്‍ഗനിര്‍ദേശങ്ങള്‍
തരുന്നു. ഒരു ഭാഷയുടെ വ്യാകരണമെന്നാണ്‌ ഈ നിയമങ്ങളെ നമ്മള്‍ വിളിക്കുന്നത്‌. സ്വാഭാവിക
ഭാഷകള്‍ മനസ്സിലാകുന്ന തരത്തില്‍ കമ്പ്യൂട്ടര്‍ പ്രോഗാമുകള്‍ വികസിപ്പിക്കുക എന്നത്‌ ബുദ്ധി
മൂട്ടുള്ള (പ്രവര്‍ത്തിയാണ്‌. NLP കമ്പ്യൂട്ടര്‍ രണ്ടു കാര്യങ്ങള്‍ ചെയ്യുന്നു സ്വാഭാവിക ഭാഷ മനസ്സി
ലാക്കുന്നു (Natural Language Understanding (NLU)), സ്വാഭാവിക ഭാഷ ഉല്‍പ്പാദിപ്പിക്കുന്നു (Natural
Language Generation(NLG)). ഇംഗ്ലീഷ്‌, മലയാളം തുടങ്ങിയ ഏതൊരു സ്വാഭാവിക ഭാഷയും
മനസ്സിലാക്കുകയും കിട്ടുന്ന ഇന്‍പുൂട്ടിനെ യുക്തിഭ്രദമായി സമീപിക്കുകയും ചെയ്യുന്ന രീതിയാണ്‌
സ്വാഭാവിക ഭാഷ മനസിലാക്കുക (NLU) എന്ന പ്രക്രിയ. സ്വാഭാവിക ഭാഷ ഉല്‍പ്പാദനം (NLG)
BOF ANS നിര്‍മാണം കൈകാര്യം ചെയ്യുന്നു. ഇതു കൂടാതെ സംഭാഷണ ശകലങ്ങളെ വാക്കു
കളായി എഴുതുന്ന ശബ്ദം തിരിച്ചറിയല്‍ (voice recognition) സംവിധാനവും നിലവിലുണ്ട്‌.

അന്താരാഷ്ട സാഹചര്യങ്ങളുമായി താരതമ്യം ചെയ്യുമ്പോള്‍ ഇന്ത്യയിലെ സ്വാഭാവിക ഭാഷ
പ്രക്രിയ ശൈശവാവസ്ഥയിലാണ്‌. ഇന്ത്യ ഒരു ബഹുഭാഷ രാഷ്ൂമായതിനാല്‍ ഇതിന്റെ വിദൂര
സാധ്യതകള്‍ തിരിച്ചറിഞ്ഞ ഭാരത സര്‍ക്കാരിന്റെ ഇലക്ട്രോണിക്സ്‌ വിഭാഗത്തിന്റെ കീഴിലുള്ള
DOE (Department of Eletcronics), 11211. തുടങ്ങിയ സ്ഥാപനങ്ങള്‍ സ്വാഭാവികഭാഷ (ales)
DOD ആധാരമാക്കിയുള്ള പ്രോഗ്രാമുകള്‍ വികസിപ്പിക്കുവാന്‍ തുടങ്ങി.

1. സ്വയം സംഭാഷണം ഗ്രഹിക്കുക (Automatic Speech Recognition (ASR)):

മലയാളം പോലുള്ള സ്വാഭാവിക ഭാഷകള്‍ ഉപയോഗിച്ച്‌ കമ്പ്യൂട്ടറുമായി ആശയവിനിമയം
നടത്തുവാനുള്ള നിര്‍മ്മിത ബുദ്ധിയിലെ രീതികളെ സ്വാഭാവിക ഭാഷ പ്രരകിയ എന്ന്‌ പറയുന്നു.
സ്വാഭാവിക ഭാഷാ പ്രക്രിയയിലെ അതിവേഗം വികാസം പ്രാപിച്ചു കൊണ്ടിരിക്കുന്ന സാങ്കേ
തികവിദ്യയാണ്‌ സംഭാഷണം ഗ്രഹിക്കുക (Automatic speech recognition) എന്നത്‌. വാണിജ്യപര
മായി ഏറെ സാധ്യതയുള്ള ഒരു സംവിധാനമാണിത്‌. മനുഷ്യര്‍ക്കിടയിലുള്ള ആശയവിനിമയ
മേഖലയില്‍ സംസാരഭാഷ മേധാവിത്വം പുലര്‍ത്തുന്നു. അതുകൊണ്ട്‌ ജനങ്ങള്‍ കമ്പ്യൂട്ടറുമായി
ആശയവിനിമയം നടത്തുവാന്‍ സ്വാഭാവികമായും പ്രാദേശിക ഭാഷയില്‍ ഉള്ള ഒരു മാധ്യമം
പ്രതീക്ഷിക്കും. മൈക്രോഫോണിലോ ടെലിഫോണിലോ ഉപയോക്താക്കള്‍ നടത്തുന്ന സംഭാഷ
ണങ്ങള്‍ കമ്പ്യൂട്ടര്‍ മനസ്സിലാക്കുകയും അവയെ വാക്കുകളായി എഴുതുവാനുള്ള സ്വയം
സംഭാഷണ ഗ്രഹിക്കല്‍ (Automatic Speech Recognition (ASR)) സംവിധാനം വികസിപ്പിച്ചാണ്‌
ഈ ലക്ഷ്യം കൈവരിക്കുന്നത്‌. തല്‍ഫലമായി മനുഷ്യനും കമ്പ്യൂട്ടറും തമ്മിലുള്ള പ്രധാന
ആശയവിനിമയ രീതിയാക്കുവാന്‍ ഇതിന്‌ കഴിയും. കമ്പ്യൂട്ടറുമായി വിനിമയം നടത്തേണ്ട ഏതു
പ്രക്രിയയ്ക്കും ASR ഉപയോഗപ്പെടുത്താവുന്നതാണ്‌. കേട്ടെഴുത്ത്‌ (Dictation), നിര്‍ദ്ദേശങ്ങളും
നിയന്ത്രണങ്ങളും, ശബ്ദ ഡയലിംഗ്‌, ശബ്ദം ഉപയോഗിച്ച്‌ ഡാറ്റാബേസിലെ ഡാറ്റയുടെ തിരഞ്ഞെ
ടുക്കല്‍, ഓഫീസ്‌ ആവശ്യങ്ങള്‍ക്കായുള്ള കേട്ടെഴുത്തു ഉപകരണങ്ങള്‍, വിദേശ ഭാഷയിലേ
ക്കുള്ള സ്വയം പരിഭാഷ തുടങ്ങിയവ ASR സംവിധാനം പിന്തുണയ്ക്കുന്ന ചില വിലപ്പെട്ട ആപ്ലി
ക്കേഷനുകള്‍ ആണ്‌. ചിത്രം 11.15 ല്‍ മനുഷ്യനും കമ്പ്യൂട്ടറും തമ്മില്‍ ASR വഴിയുള്ള സമ്പര്‍ക്ക

ത്തിന്റെ ഉദാഹരണം കാണിച്ചിരിക്കുന്നു.

കമ്പ്യുട്ടര്‍ സയന്‍സ്‌ - XI!

ചിത്രം 11.15:ASR വഴിയുള്ള സന്രിക്കം

Apple 105 ന്റെ ഭാഗമായ ‘Siri’ എന്ന മൊബൈല്‍ അപ്ലിക്കേഷന്‍, മൈക്രോസോഫ്ട്‌ ഫോണിന്റെ
Cortana, ആന്‍ഡ്രോയിഡിന്റെ ഗൂഗിള്‍ MD എന്ന അപ്ലിക്കേഷന്‍ തുടങ്ങിയവ മികച്ച വ്യക്തിഗത
സഹായികള്‍ ആണ്‌. ഇവ വാക്കാലുള്ള ചോദ്യങ്ങള്‍ക്കു ഉത്തരം പറയുവാനും, അഭിപ്രായങ്ങള്‍
നല്‍കുവാനും, പ്രവര്‍ത്തനങ്ങള്‍ നടത്തുവാനും സഹായിക്കുന്നു

17 ഒപ്റ്റിക്കല്‍ ക്യാരക്റ്റര്‍ റെകഗ്നിഷന്‍ (Optical Character Recognition -OCR)/
ഹാന്‍ഡ്റിട്ടേന്‍ ക്യാരക്റ്റര്‍ റെകഗ്നിഷന്‍ (Handwritten Character Recognition - HCR)

വളരെ വേഗത്തിലും കൃത്യമായും മനസ്സില്‍ പതിയുന്ന രീതിയില്‍ ചിത്രങ്ങളുടെ രൂപരേഖകളെ
തിരിച്ചറിയുവാന്‍ കഴിവുള്ളവയാണ്‌ നമ്മുടെ ദൃശ്യ ഘടന. നമ്മുടെ ചുറ്റുപാടുമുള്ള പലതരത്തി
ലുള്ള രൂപരേഖകളെയും വസ്തുക്കളെയും വലിയ ബുദ്ധിമുട്ടില്ലാതെ തന്നെ നമ്മള്‍ ഗ്രഹിക്കുന്നു.
OCR ഉം HCR ഉം സാധാരണ സന്ദര്‍ഭങ്ങളില്‍ രൂപരേഖകളെ കൃത്യമായി ഗ്രഹിക്കുവാന്‍ ഉപ
യോഗിക്കുന്ന പ്രക്രിയയുടെ അവിഭാജയഘടകങ്ങള്‍ ആയി മാറിയിരിക്കുകയാണ്‌. രൂപരേഖകള്‍
തിരിച്ചറിയുവാനുള്ള ഗവേഷണത്തിന്റെയും വികാസത്തിന്റെയും തുടക്കത്തില്‍ OCR ഉം ആയി
ബന്ധപ്പെട്ട ഗവേഷണങ്ങള്‍ക്കാണ്‌ കൂടുതല്‍ മുന്‍തൂക്കം നല്‍കിയിരിക്കുന്നത്‌. ഇത്തരം സോഫ്റ്റ്‌
വെയറുകള്‍, പ്രിന്റ്‌ ചെയ്ത വാചകങ്ങളെ സ്‌കാന്‍ ചെയ്ത്‌ ചിത്രങ്ങളാക്കി (അക്കങ്ങള്‍, അക്ഷ
രങ്ങള്‍, ചിഹ്നങ്ങള്‍) കമ്പ്യൂട്ടര്‍ പ്രക്രിയയ്ക്ക്‌ വിധേയമാക്കുവാന്‍ കഴിയുന്ന രൂപത്തിലേക്ക്‌ (ASCII
പോലെ) മാറ്റുന്നു. നിലവില്‍ മിക്കഭാഷകളിലും സാമാന്യം ഭേദപ്പെട്ട നല്ല OCR പാക്കേജുകള്‍
ലഭ്യമാണ്‌. ആധുനിക കമ്പ്യൂട്ടറുകള്‍ കണ്ടെത്തുന്നതിന്‌ മുന്‍പ്‌ തന്നെ, കയ്യെഴുത്തു
വാചകങ്ങളുടെ സ്വയം തിരിച്ചറിയല്‍ എന്നത്‌ ശാസ്ത്രകാരന്മാർക്കും എഞ്ചിനീര്‍യര്‍മാര്‍ക്കും
വെല്ലുവിളി നിറഞ്ഞ ഗവേഷണ മേഖലയാ
യിരുന്നു. കയ്യെഴുത്തു രേഖകളെ സൃഷ്ടിക്കുന്ന
തിനെ ആധാരമാക്കി 11൨1-ല്‍ ഓണ്‍ലൈന്‍
എന്നും ഓഫ്‌ലൈന്‍ എന്നും രണ്ടു തരത്തി
ലുള്ള സമീപനരീതികള്‍ ഉണ്ട്‌. ഇലക്ര്ോണിക്‌
പ്രതലത്തില്‍ പ്രത്യേകതരം പേന ഉപയോഗിച്ച്‌
എഴുതുന്ന അവസരത്തില്‍ തന്നെ ഡാറ്റക്ക്‌
രൂപം കൊടുക്കുന്ന രീതിയാണ്‌ ആദ്യത്തേത്‌.
ചിത്രം 11.16 ല്‍ ഇത്‌ ചിത്രീകരിച്ചിരിക്കുന്നു.

എഴുതിയതിന്‌ ശേഷം സ്‌കാനര്‍ ഡാറ്റയെ

ആര്‍ജിക്കുന്ന രീതിയാണ്‌ രണ്ടാമത്തേത്‌. .
ചിത്രം 116: കൈജ്യെഴുത്ത്‌ തിരിച്ചറിയല്‍ സംവിധാനം

11. കമ്പ്യുട്ടിങ്ങിലെ മുന്നേറ്റങ്ങ

വിദേശഭാഷകളിലും ഇന്ത്യന്‍ ഭക്ഷകളിലും ധാരാളം ആശാവഹമായ ഗവേഷണ ഫലങ്ങള്‍ 14%
മേഖലയില്‍ ഉണ്ടായിട്ടുണ്ട്‌. മൊബൈലില്‍ ഉപയോഗിക്കുന്ന ഗൂഗിളിന്റെ ഓണ്‍ലൈന്‍ കയ്യെഴുത്തു
തിരിച്ചറിയല്‍ അപ്ലിക്കേഷന്‍ ആയ “ഗൂഗിള്‍ ഹാന്‍ഡ്‌ റൈറ്റിംഗ്‌ ഇന്‍പുട്ട്‌” 82 ഓളം ഭാഷകളിലെ
കൈമയ്യെഴുത്തുകള്‍ തിരിച്ചറിയുവാന്‍ കഴിവുള്ളതാണ്‌.

൭. ബയോഇന്‍ഫോര്‍മാറ്റികസ്‌ (Bioinformatics)

കമ്പ്യൂട്ടറിന്റെ സഹായത്താല്‍ ജീവശാസ്ത്രപരമായ വിവരങ്ങളെ ബയോഇന്‍ഫോര്‍മാറ്റിക്സ്‌,
കൈകാര്യം ചെയ്യുന്നു. ജീവശാസ്ത്രപരമായ വിവരങ്ങളും ജനിതക വിവരങ്ങളും കമ്പ്യൂട്ടറിന്റെ
സഹായത്താല്‍ ശേഖരിക്കുകയും, സംഭരിക്കുകയും, വിശകലനം ചെയ്യുകയും, ബന്ധിപ്പിക്കു
കയും ചെയ്യുന്നു ഇവയെ ജീനുകളെ അടിസ്ഥാനമാക്കിയ ഓഷധ നിര്‍മാണത്തിനും വികസ
നത്തിനും ഉപയോഗിക്കുന്നു. മനുഷ്യ ജനിതക പദ്ധതിയുടെ ഫലമായി ഉരുത്തിരിഞ്ഞ കണ്ടു
പിടുത്തങ്ങളെ വിശകലനം ചെയ്യുന്നതിലും പൊതുജനങ്ങളില്‍ എത്തിക്കുന്നതിലും ബയോ
ഇന്‍ഫോര്‍മാറ്റിക്സ്‌ എന്ന ശാസ്ത്രശാഖ ശ്രദ്ധേയമായ പങ്കുവഹിക്കുന്നു.

ബയോഇന്‍ഫോര്‍മാറ്റിക്‌സിന്‌ പ്രധാനമായും മൂന്നു ലക്ഷ്യങ്ങള്‍ ഉണ്ട്‌. ഗവേഷകര്‍ക്ക്‌ നിലവി
ലുള്ള വിവരങ്ങള്‍ ഉപയോഗിക്കുവാന്‍ കഴിയുന്നവിധത്തില്‍ വിവരങ്ങള്‍, ക്രമപ്പെടുത്തി
സൂക്ഷിക്കുകയും അവര്‍ കണ്ടെത്തുന്ന പുതിയ വിവരങ്ങള്‍ സമര്‍പ്പിക്കുവാനുമുള്ള സംവിധാനം
ഒരുക്കുകയും ചെയ്യുക എന്നതാണ്‌ ബയോഇന്‍ഫോര്‍മാറ്റിക്സിന്റെ ആദ്യ ലക്ഷ്യം. രണ്ടാമത്ത
ലക്ഷ്യം ഈ ഡാറ്റയെ വിശകലനം ചെയ്യുന്നതിനുള്ള ഉപകരണങ്ങളും ഉപാധികളും വികസി
പ്പിക്കുക എന്നതാണ്‌. ഈ ഉപകരണങ്ങള്‍ ഉപയോഗിച്ച്‌ ജീവശാസ്ത്രപരമായി അര്‍ഥവത്തായ
രീതിയില്‍ ഡാറ്റയെ വിശകലനവും പരിവര്‍ത്തനവും ചെയ്യുക എന്നതാണ്‌ മൂന്നാമത്തെ ലക്ഷ്യം.

മനുഷ്യ ജനിതക പദ്ധതി (ഹ്യുമന്‍ ജീനോം പ്രൊജക്റ്റ്‌

മനുഷ്യ ജനിതകഘടനയെയും അവയില്‍ ഉള്‍ടെട്ടിട്ടുള്ള ജീനുകളെയും തിരിച്ചറിയുക എന്ന

പ്രയത്നമാണ്‌ ഉത്‌ ലക്ഷ്യമാക്കുന്നത്‌. എല്ലാ ജീനുകളെയും ചേര്‍ത്ത്‌ നമ്മുടെ ജനിതകഘടന
(Genome) എന്ന്‌ അറിയകെടുന്നു. ഈ പദ്ധതിയെ ഏകോപിരിച്ചിരുന്നത്‌ യുണൈറ്റഡ്‌ സ്റ്റേറ്റ്സ്‌ ഡിഷാര്‍ട്മെന്റ്‌
ഓഫ്‌ എനര്‍ജിയും നാഷണല്‍ ഉന്‍സ്റ്ിവ്വുട്ട്‌ ഓഫ്‌ ഹെല്‍ത്തുാണ്‌. ഒരു വ്യക്തിയുടെ പ്രാഥമിക രേഖാരുപം
വേഷകര്‍ക്ക്‌ കിട്ടുവാന്‍ മനുഷ്യ ജനിതക പദ്ധതി ഗവേഷകരെ സഹായിച്ചു. ഈ ഗവേഷണത്തിന്‌ ജീനുകളുടെ
പ്രവര്‍ത്തനങ്ങളെയും പ്രോട്ടീനുകളെയും കുറിച്ചുള്ള കൂടുതല്‍ വിവരങ്ങള്‍ കമ്പ്യൂട്ടറിന്റെ വിപുലമായ ഉപയോ
ത്താല്‍ കണ്ടെത്തുവാന്‍ കഴിഞ്ഞു. ഈ അറിവ്‌ വൈദ്യരാസ്ത്രം, ജൈവ വസാങ്കേതികവിദ്യയിലും, ജീവരാ
MMM തുടങ്ങിയ മേഖലകളില്‍ വളരെ വലിയ സ്വാധീനം സൃഷ്ടിക്കുവാന്‍ കഴിയും.

1 ഭുവിവരവ്യവസ്ഥ (Geographic Information System)

ഭൂമിയെ ഭ്രമണം ചെയ്യുന്ന ധാരാളം ഉപഗ്രഹങ്ങള്‍ ഉണ്ടെന്ന്‌ നമുക്ക്‌ അറിയാം. ഇവയുടെ
രൂപകല്‍പ്പന, നിര്‍മ്മാണം, വിക്ഷേപണം എന്നിവ ഭൂമിയുടെ വിവിധതരം ചിത്രങ്ങള്‍ തുടര്‍ച്ചയായി
ഭൂമിയിലേക്ക്‌ കൈമാറുക എന്ന ഉദ്ദേശത്തോടുകൂടിയാണ്‌. ഇങ്ങനെ കിട്ടുന്ന വിദൂര സംവേദന
വിവരങ്ങളാണ്‌, നഗരാസൂത്രണത്തിനും, കാര്‍ഷിക ആവശ്യങ്ങള്‍ക്കും, ദുരന്ത നിവാരണത്തിനും,

ക്രൂഡോയില്‍ സാന്നിദ്ധ്യം കണ്ടെത്തുവാനുമുള്ള സംവിധാനങ്ങളില്‍ ഉപയോഗിക്കുന്നത്‌.
ഡിജിറ്റല്‍ കാര്‍ട്ടോഗ്ഗോഫി (DIGITAL CARTOGRAPHY), കമ്പ്യൂട്ടര്‍ എയ്ഡഡ്‌ ഡിസൈന്‍ (൧൮)
എന്നിവയില്‍ നിന്നാണ്‌ ജിസ്‌ (Geographic Information System) സാങ്കേതികവിദ്യ വികസിപ്പിച്ചത്‌.

കമ്പ്യുട്ടര്‍ സയന്‍സ്‌ - XI!

ഭൂമിയുടെ ഉപരിതല സവിശേഷതകളും സ്ഥാനീയ വിവരങ്ങളും ഒരു സെര്‍വറില്‍ ഭൂപടങ്ങളിലെ
വിവരങ്ങളായി ഉള്‍ക്കൊള്ളിച്ച്‌ സംഭരിച്ചു വെയ്ക്കുന്നു. ഈ ഡാറ്റബേസിൽ ആവശ്യാനുസരണം
മാറ്റങ്ങള്‍ വരുത്തുക, വിശകലനം ചെയ്യുക, ക്രോഡീകരിക്കുക തുടങ്ങിയ ജോലികള്‍ ചെയ്യുന്ന
തിനായി തയ്യാറാക്കിയ സാങ്കേതിക വിദ്യയാണ്‌ ഭൂവിവര വ്യവസ്ഥ എന്ന്‌ പറയുന്നത്‌. ഭൂമിയുടെ
ഉപരിതലത്തിലെ വിവിധ ഭാഗങ്ങളുടെ വിവരങ്ങള്‍ ശേഖരിക്കുവാനും സംഭരിക്കുവാനും, പരി
ശോധിക്കുവാനും പ്രദര്‍ശിപ്പിക്കുവാനുമുള്ള കമ്പ്യൂട്ടര്‍ സംവിധാനമാണ്‌ GIS. പല തരത്തിലുള്ള
ഡേറ്റ ഒരു ഭൂപടത്തില്‍ ൨5-ന്‌ പ്രദര്‍ശിപ്പിക്കാന്‍ കഴിയും. ചുരുക്കത്തില്‍, ഭൂമിയെ സംബ
ന്ധിക്കുന്ന വിവരങ്ങള്‍ കമ്പ്യൂട്ടറില്‍ ശേഖരിച്ചുവെച്ച്‌ ആവശ്യാനുസരണം ഉപയോഗപ്പെടുത്തുന്നു.
പലതരത്തിലുള്ള വിവരങ്ങളെ ഒരു ഭൂപടത്തില്‍ പ്രദര്‍ശിപ്പിക്കുവാന്‍ ഭൂവിവരവ്യവസ്ഥ
ഉപയോഗിക്കാം. ജനങ്ങള്‍ക്ക്‌ മനസ്സിലാകുന്ന വിധത്തില്‍ രേഖാചിത്രങ്ങളും, അവ തമ്മിലുള്ള
ബന്ധങ്ങളും എളുപ്പത്തില്‍ ചിത്രീകരിക്കുവാനും പരിശോധിക്കുവാനും ഈ ആപ്ലിക്കേഷന്‍
ഉപയോഗിക്കുന്നു. ചിത്രം 11.17 (a) യില്‍ കോഴിക്കോട്‌ ജില്ലയിലെ ഓരോ വില്ലേജിലെയും
ജനസംഖ്യയുടെ വിന്യാസം ചിത്രീകരിച്ചിരിക്കുന്നു.

നന്ന

Mapping of Domography and Amonitios
ails Sera & GIS - ഡി Lakarmatics Canto
ary HEE

Villager Tort Pepalstioa

~
_
2
iss 2 ee
ചിത്രം 11.171): GIS ഉപയോഗിച്ചുള്ള ചിത്രം 11.1710): GIS ഉപയോഗിച്ചുള്ള
കോഴിക്കോട്‌ ജില്ലയുടെ BN Moay വിരാമം കേരളത്തിലെ വനങ്ങളുടെ രേഖാചിത്രം

മണ്ണിന്റെ വിന്യാസഘടനയുടെ ചിത്രീകരണം, വനങ്ങളുടെ വിന്യാസ ചിത്രീകരണം (്രിത്രം
11.17 (൪), കാര്‍ഷികമേഖലയുടെ ചിത്രികരണം, ഇ-ഗവര്‍ണനന്‍സ്‌, ജലവിഭവ പരിപാലനം,
പ്രകൃതി ദുരന്ത പരിപാലനം തുടങ്ങിയ വിവിധ മേഖലകളില്‍ ഭൂവിവരവ്യവസ്ഥ ഉപയോഗിക്കുന്നു.
“അങ്ങനെ സംഭവിച്ചാല്‍” എന്ന അവസ്ഥയെ കൈകാര്യം ചെയ്യുവാനുള്ള കഴിവ്‌, പദ്ധതികളുടെ
ശേഷി വര്‍ധിപ്പിക്കുക, മേന്മയേറിയ ഗുണനിലവാര വിശകലം എന്നിവയാണ്‌ ഭൂവിവരവൃവസ്ഥ
യുടെ പ്രയോജനങ്ങള്‍. സുസ്ഥിര വികസന പദ്ധതികളായ നഗരവികസന പദ്ധതികള്‍, അടി
സ്ഥാന സാകര്യ ആസൂത്രണം, കൃത്യമായ കാര്‍ഷിക പദ്ധതികളുടെ ആസുത്രണം എന്നിവയ്ക്ക്‌
ഭൂവിവര വ്യവസ്ഥ ആപ്ലിക്കേഷനുകള്‍ ഉപയോഗിക്കുന്നു.

11. കമ്പ്യുട്ടിങ്ങിലെ മുന്നേറ്റങ്ങ

(അയയ

വിദുര സംവേദനം (റിമോട്ട്‌ സെന്‍സിം6)

9 SF അകലെ നിന്ന്‌ കാര്യങ്ങള്‍ ലനസ്സിലാക്കുക എന്നതാണ്‌ വിദുര സംവേദനം കൊണ്ട്‌ ഉദ്ദേരിക്കുന്നത്‌.
വസ്തുക്കളുമായി നേരിട്ടു ബന്ധകെ്ടാതെ തന്നെ, ഒരു വസ്തുവിന്റെ വിവരങ്ങള്‍ കഞടെത്തുന്ന
രാസ്ത്രവും കലയുലാണ്‌ വിദുര സംവേദനം.

ഉപ്ര്രഹ വിദൂര സംവേദനത്തില്‍ സംവേദന ഉപകരണങ്ങള്‍ ഉപയോശിച്ച്‌ മനുഷ്യന്‌ ദൃര്യമാകുന്ന വൈദ്യുത
കാന്തിക വര്‍ണ്ണരാജിയുടെ വിവിധ തലത്തിലെ പ്രസരണങ്ങള്‍ പിടിച്ചെടുക്കുന്നു. ദുമിയുടെ ഉപരിതലം, സമുദ്രം,
അനുരീക്ഷം എന്നിവയുടെ വസ്തുതകളും സവിശേഷതകളും ലഭിക്കുന്നതിനു വേണ്ടിയാണ്‌ ഉ സാങ്കേതികവിദ്യ
ഉപയോഗിക്കുന്നത്‌.

നമുക്ക്‌ കാലാവസ്ഥ പ്രവചനത്തിന്റെ കാര്യം പരിഗണിക്കാം. കാലാവസ്ഥ ഉപ്ര്രഹങ്ങള്‍ വഹിക്കുന്ന ഉപകര
ണമായ റേഡിയോ മീറ്റെര്‍സ്‌ എന്ന ഉപകരണം, ദുമിയെ സ്‌കാന്‍ ചെയ്തു ചിത്രങ്ങള്‍ ഉണക്കുന്നു. ഈ ഡാറ്റ
വിശകലനം ചെയ്ത്‌ നമ്മുടെ കാലാവസ്ഥ രാസ്ത്രജ്ഞന്മാര്‍ കാലാവസ്ഥ പ്രവചിക്കുന്നു

കാലാവസ്ഥ ശാസ്ത്രജ്ഞന്മാര്‍ മഴയും താപനിലയും മാത്രമല്ല ദുകമ്പ സാധ്യത, ചുഴലിങകറ്റ്‌, കൊടുംങ്കാറ്റ്‌,
എന്നിവയും പ്രവചിക്കുന്നു. Day) മെറ്ററോളോജിക്കല്‍
ഡിഷാര്‍ട്മെന്റ്‌ (India Meteorological Department)
ഉന്ത്യയില്‍ സ്ഥാപിച്ചിരിക്കുന്നത്‌ ഈ ഉദ്ദേര്യഭത്തോടു
കുടിയാണ്‌. BAM സര്‍ക്കാരിന്റെ കീഴിലുള്ള
ദാമരാസ്ത്ര ല്രന്താലയത്തിന്റെ രാഖയാണിത്‌.
കാലാവസ്ഥ നിരീക്ഷണം, കാലാവസ്ഥ പ്രവചനം,
ദുകമ്പ രാസ്ത്രം തുടങ്ങിയവയുടെ ഉത്തരവാദിത്വം
ഉള്ള പ്രധാന ഏജന്‍സിയാണിത്‌. 2014 ഒക്ടോബറില്‍
ബംഗാള്‍ ഉള്‍ക്കടലില്‍ രൂപം കൊണ്‍ ഹഡ്‌ ഹഡ്‌
ചുഴലികൊടുംങാറ്റിന്റെ ഉപ്്രഹചിത്രം ശ്രദ്ധിക്കുക
(ചിത്രം 11.18)

നിങ്ങളുടെ പുരോഗതി അറിയുക

1 OCR, HCR എന്നീ സംവിധാനങ്ങള്‍ തമ്മിലുള്ള വൃത്യാസമെന്ത്‌?
2 ജിസ്‌ കൊണ്ട്‌ എന്താണ്‌ ഉദ്ദേശിക്കുന്നത്‌?

3 റോബോട്ടുകളുടെ രൂപകല്‍പ്പന, നിര്‍മ്മാണം, സിദ്ധാന്തം, ഉപയോഗം എന്നി
വയുമായി ബന്ധപ്പെട്ട ശാസ്ത്രപഠനത്തെ എന്ന്‌ വിളിക്കുന്നു.

4 എന്താണ്‌ NLP (Natural Language Processing)?

5 കമ്പ്യൂട്ടര്‍ ദൃഷ്ടി (VISION) എവിടെ ഉപയോഗിക്കുന്നു എന്നതിനു ഒരു
ഉദാഹരണം എഴുതുക?

6 ANN ന്റെ പൂര്‍ണരൂപം ആണ്‌

കമ്പ്യുട്ടര്‍ സയന്‍സ്‌ - XI!

ക നമുക്ക്‌ സംഗ്രഹിക്കാം

ഡിസ്ര്രിബ്യൂറ്റഡ്‌ കമ്പ്യൂട്ടിങ്ങിലേക്കുള്ള സമീപകാലത്തെ മാറ്റം ശൃംഖലാടിസ്ഥാനത്തിലുള്ള
കമ്പ്യൂട്ടിങ്ങിനെ ശരിയായി മനസ്സിലാക്കുന്നതിന്റെ ആവശ്യകത വര്‍ധിപ്പിച്ചു. ഡിസ്ഭ്രിബ്യൂറ്റഡ്‌
പ്ലാറ്റ്ഫോം, ഭൂമിശാസ്ത്രപരമായി വിന്യസിച്ച ശൃംഖലകള്‍ മുതല്‍ പരനപരം ബന്ധിപ്പിച്ച പ്രത്യേ
കമായ ഘടനാരൂപകല്‍പ്പനകളെ വരെ തമ്മില്‍ ബന്ധിപ്പിച്ചിരിക്കുന്നു. പാരലല്‍ കമ്പ്യൂട്ടിങ്ങില്‍
ഒരു പ്രശ്നത്തെ വിവിധ CPU കളിലായി വിഭജിച്ച്‌ കൊടുക്കുന്നു. ക്ലസ്റ്ററുകള്‍ കുറെ കമ്പ്യൂട്ടറു
കളെ ചേര്‍ത്ത്‌ വലിയ കേന്ദ്രീയമായി നിയ്രന്രിക്കുന്ന ഒരൊറ്റ അസ്തിത്വമായി നിലനിര്‍ത്തുന്നു.
ഗ്രിഡ്‌ കമ്പ്യൂട്ടിങ്ങില്‍ ഓരോ നോഡിനും മറ്റു നോഡുകളിലെ സംവിധാനങ്ങളെ അവ പ്രാദേശി
കമാണ്‌ എന്ന പോലെ ഉപയോഗിക്കാം. ഇന്റര്‍നെറ്റ്‌ വഴി ആപ്ലിക്കേഷനും, സേവനങ്ങളും ലഭ്യമാ
ക്കുന്നതിനെയാണ്‌ ക്ലൌഡ്‌ കമ്പ്യൂട്ടിങ്‌ എന്ന്‌ പറയുന്നത്‌. ഭാവിയില്‍ കുറഞ്ഞ വിലയില്‍ അതി
വേഗ ശൃംഖലകള്‍ വഴി പ്രോസസ്സുറിന്റെ ശക്തി കമ്പ്യൂട്ടിങ്ങിന്‌ ലഭ്യമാകും എന്നത്‌ വൃക്തമാ
ണ്‌. യന്ത്രമോ സോഫ്ട്വെയറോ പ്രകടമാക്കുന്ന ബുദ്ധിയാണ്‌ നിര്‍മ്മിത ബുദ്ധി എന്നത്‌ ബുദ്ധി
സൃഷ്ടിക്കുക എന്നത്‌ ഈ പഠനമേഖലയുടെ ലക്ഷ്യമാണ്‌. ജിസ്‌ സോഫ്ട്വെയര്‍ പ്രധാനമായും
ഉപയോഗിക്കുന്നത്‌ ഭമശാസ്ര്രപരമായ ഡാറ്റ ആസുയ്രണം ചെയ്യുവാനും ക്രമീകരിക്കുവാനു
മാണ്‌. വിദൂരസംവേദനം വസ്തുക്കളുടെ വിവരങ്ങള്‍ ശേഖരിക്കുന്ന ഒരു രീതിയാണ്‌. ഇത്‌ വസ്‌
തുക്കളുമായി നേരിട്ടു ബന്ധപ്പെടാതെയും, നേരിട്ടു സ്ഥല നിരീക്ഷണം നടത്താതെയുമുള്ള
രീതിയാണ്‌. കാര്‍ഷിക മേഖല, ഭൂഗര്‍ഭ ശാസ്ത്രം, കാലാവസ്ഥ, വാനശാസ്ത്രം തുടങ്ങിയ വിവിധ
മേഖലകളില്‍ വിദൂര സംവിധാനം ഉപയോഗിക്കുന്നു.

| 2765 വിലനിരുത്നം TT TTT YY

1
2

ഡിസ്ദ്രിബ്യൂറ്റഡ്‌ കമ്പ്യൂട്ടിങ്ങിന്റെ സവിശേഷതകള്‍ വിവരിക്കുക
പാരലല്‍ കമ്പ്യൂട്ടിങ്ങും സിരിയല്‍കമ്പ്യൂട്ടിങ്ങും തമ്മില്‍ താരതമ്യം ചെയ്യുക?
ഡിസ്ദ്രിബ്യയൂറ്റഡ്‌ കമ്പ്യൂട്ടിങ്ങിന്റെ മാതൃക ഉപയോഗിക്കുന്ന നിലവിലുള്ള ഹാര്‍ഡ്വെയര്‍

ക്ലസ്റ്റര്‍ കമ്പ്യൂട്ടിങ്ങിന്റെ മേന്മകള്‍ എഴുതുക

നാം കമ്പ്യൂട്ടറുകള്‍ ഉപയോഗിക്കുന്ന രീതിയെ എങ്ങനെയാണു ക്ലൌഡ്‌ സേവന മാതൃകള്‍
മാറ്റുന്നത്‌ വിശദമാക്കുക.

SaaS ന്റെ സേവനങ്ങള്‍ നല്‍കുന്ന സ്ഥാപനങ്ങള്‍ക്ക്‌ ഉദാഹരണങ്ങള്‍ എഴുതുക

ക്ലൌഡ്‌ കമ്പ്യൂട്ടിങ്ങിന്റെ മേന്മകളും പരിമിതികളും എഴുതുക.

അറിവിന്റെ പിരമിഡ്‌ ചിത്രീകരിക്കുകയും വിശദമാക്കുകയും ചെയ്യുക?

എന്താണ്‌ കമ്പ്യൂട്ടേഷണല്‍ ബുദ്ധിവൈഭവം ?

സൈബര്‍നെറ്റിക്സ്‌ നിര്‍വചിക്കുക?

ഒരു കമ്പ്യൂട്ടറിന്‌ ബുദ്ധിയുണ്ടോ ഇല്ലയോ എന്ന്‌ തീരുമാനിക്കുന്ന പരീക്ഷണത്തേ
എന്ന്‌ വിളിക്കുന്നു

എന്താണ്‌ ANN ?

സ്വാം ഇന്റലിജന്‍സ്‌ വിശദമാക്കുക

ഫസ്സ്റി സിസ്റ്റം വിശദമാക്കുക

ബയോമ്രെടിക്സിന്റെ ചില ഉപയോഗങ്ങള്‍ എഴുതുക

റോബോട്ടിക്കിന്റെ ഉപയോഗങ്ങള്‍ എഴുതുക?

പ്രധാന പഠന നേട്ടങ്ങള്‍

DO അധ്യാതത്തിമ്റെ പഠനം പുരീത്തിയാകു?മാ
തോടെ പഠിതാവ്‌ ആരിഖിക്കേണ പഠനോട്ടങ്ങള്‍

@- BEM D- വ്യാപാരം ഉ-പഠനം എന്നിവ
യുദെ സൌകര്യങ്ങള്‍ പട്ടികകെടുത്തുന്നു.

ഉ -പഠനത്തിനുപയോിക്കുന്ന ഉപകരണ
ങ്ങള്‍ വിശദീകരിക്കുന്നു.

ഉ.-ഭരണം ഉ. വ്യാപാരം ഇ- പഠനം എന്നീ
ആപ്ലിക്കേഷനുകള്‍ നദഷാക്കുമ്പോള്‍ അഭിമു
ഖീകരിക്കുന്ന വിവിധ മേന്‍മകളും വെല്ലുവി
ളികളും പട്ടികകെടുത്തുന്നു.

ഓരോ മേഖലയിലെയും ഉപകാരപ്രദമായ
ചില വെബ്‌ സൈറ്റുകള്‍ ഉപയോശിക്കുന്നു.

സൈബര്‍ ഉടത്തെകുറിച്ച്‌ വിഭദീകരിക്കുന്നു.
വിവിധ തരത്തിലുള്ള സൈബര്‍ കുറ്റകൃത്യ
ങ്ങള്‍ വേര്‍തിരിക്കുന്നു.

വിവിധ ബൌദ്ധിക സ്വത്തവകാരങ്ങള്‍ വിര
ദീകരിക്കുകയും പട്ടികകെടുത്തുകയും ചെ
യ്യുന്നു.

സൈബര്‍ നീതിരാസ്ത്രവും (ethics) നിയ
മവും വിശദീകരിക്കുന്നു.

ഐടി നിയമത്തിന്റെ പ്രാധാന്യം തിരിച്ചറി
യുന്നു.

ഉന്‍ഫോമാനിയയെക്കുറിച്ച്‌ മനസിലാക്കുന്നു.

വിവര ആശയവിനിമയ
സാങ്കേതികവിദ്യയും സമൂഹവും

കുഴിഞ്ഞ കുറച്ച്‌ ദശാബ്ദങ്ങളായി ഇന്റര്‍നെറ്റിന്റെ
ഉപയോഗം അതിവേഗം വര്‍ദ്ധിച്ചിട്ടുണ്ട്‌. ഇന്റര്‍
നെറ്റും അതിന്റെ സേവനങ്ങളും ഇല്ലാത്ത ഒരു
ദിവസത്തെക്കുറിച്ച്‌ ആധുനിക സമൂഹത്തിന്‌
ചിന്തിക്കുവാന്‍ സാധ്യമല്ല. ATM ഇല്ലാത്ത
ബാങ്കിങ്ങ്‌, ഇവാണിജ്യം ഉപയോഗിക്കാത്ത
വ്യപാരം, കമ്പ്യൂട്ടര്‍ ഉപയോഗിച്ച്‌ രോഗനിര്‍ണ്ണ
യം നടത്താത്ത ആശുപത്രികള്‍ വിവര സാങ്കേ
തിക വിദ്യാധിഷ്ഠിതമായ ഉപകരണങ്ങള്‍
ഇല്ലാത്ത വിദ്യാഭ്യാസം മുതലായവയെകുറിച്ച്‌
നമുക്ക്‌ ചിന്തിക്കാനാകുമോ? തീര്‍ച്ചയായും
വിവര ആശയ വിനിമയ സാങ്കേതിക വിദ്യ നമ്മു
ടെ ജീവിതത്തെ വളരെ എളുപ്പമാക്കി. ഇന്റര്‍നെറ്റ്‌
ഏറ്റവും വലിയ ആശയ വിനിമ മാധ്യമമാണെന്ന്‌
നാം പഠിച്ചു. സാമൂഹിക മാധ്യമങ്ങള്‍ സമൂഹ
ത്തില്‍ വലിയ സ്വാധീനം ചെലുത്തിയിട്ടുണ്ട്‌.
സര്‍ക്കാര്‍ സേവനങ്ങള്‍ ജനങ്ങളിലെക്കെത്തി
ക്കാന്‍ ഇഭരണം പുതിയ വഴികള്‍ തുറന്നു. ഇ-
വാണിജ്യം വ്യാപാര ഇടപാടുകളെ വളരെ എളു
പത്തിലാക്കുകയും ഇ-പഠനം പഠനത്തിനും
അധ്യാപന മേഖലക്കും പുതിയ വിജ്ഞാന
മണ്ഡലം തുറക്കുകയും ചെയ്തു. വിവര സാങ്കേ
തികവിദ്യ (11) യുടെ വിപുലീകരിച്ച രൂപമായി
വിവര ആശയ വിനിമയ സാങ്കേതിക വിദ്യ (ICT)
പലപ്പോഴും ഉപയോഗിക്കുന്നു. ടെലി കമ്യൂണി
ക്കേഷനെ സംയോജിപ്പിക്കുവാനും വിവരങ്ങള്‍
ച്ചടിക്കുവാനും വ്യാഖ്യനിക്കുവാനും പ്രര്രിയ ചെ
യ്യുവാനും, സംഭരിക്കുവാനും, ഡാറ്റ പിടിച്ചെടുക്കു
വാനും കമ്പ്യൂട്ടര്‍ സാങ്കേതിക വിദ്യ ഉപയോഗിച്ച്‌
സാധിക്കുന്നു. ഡാറ്റ പിടിച്ചെടുക്കുക, സംഭരിക്കു
ഞന്‌ അ

ക, (ALAND ചെയ്യുക, വ്യാഖ്യാനിക്കുക, അച്ചടിക്കുക എന്നിവയ്ക്കുള്ള സാങ്കേതിക വിദ്യ
കള്‍ അടങ്ങിയ കമ്പ്യൂട്ടറുകളും ടെലികമ്യൂണിക്കേഷനും തമ്മിലുള്ള സംയോജനമാണ്‌
ICT യുടെ പ്രത്യേകത.

ഭൂമി, വീട്‌ തുടങ്ങിയവയിലുള്ള അവകാശം പോലെ തന്നെ സംഗീതം സിനിമ, സോഫ്റ്റ്‌
വെയര്‍, രൂപകല്‍പ്പനകള്‍ എന്നിവക്കും ഉടമസ്ഥാവകാശങ്ങളുണ്ട്‌. ഈ അവകാശങ്ങളെ
ബൌദ്ധിക സ്വത്തവകാശം എന്നു വിളിക്കുന്നു. ഇതുമായി ബന്ധപ്പെട്ട കാര്യങ്ങള്‍ ഈ
അധ്യായത്തില്‍ ചര്‍ച്ച ചെയ്തിരിക്കുന്നു. എല്ലാ സാങ്കേതിക വിദ്യകള്‍ക്കും ഒരു ഇരുണ്ട
വശമുണ്ട്‌. ഇന്റര്‍നെറ്റിനും അതിന്റേതായ പ്രശ്നങ്ങളും ഭീഷണികളുമുണ്ട്‌. ധാരാളം ആളു
കള്‍ ഈ ഉപാധിയെ നിയമവിരുദ്ധമായ പ്രവര്‍ത്തനങ്ങള്‍ക്ക്‌ ഉപയോഗിക്കുന്നു. അതു
പോലെയുള്ള പ്രവര്‍ത്തനങ്ങളെ കുറിച്ചും ഇന്റര്‍നെറ്റില്‍ എങ്ങനെ സുരക്ഷാ സംവിധാനം
ഒരുക്കാമെന്നും നമുക്ക്‌ ചര്‍ച്ച ചെയ്യാം.

12.1 ICT സേവനങ്ങള്‍ (ICT Services)

വിവര സാങ്കേതിക വിദ്യയുടെ പ്രചാരം കമ്പ്യൂട്ടറുകളുടെയും ആശയ വിനിമയ
സാങ്കേതിക വിദ്യയുടെയും സഹായത്തോടു കൂടി ലഭ്യമായ സേവനങ്ങളുടെ എണ്ണം
വര്‍ധിപ്പിക്കുന്നതിന്‌ കാരണമായി. ഉപയോഗിക്കുന്ന നടപടി ക്രമങ്ങളില്‍ മാറ്റം വന്ന
സേവനങ്ങളില്‍ ചിലത്‌ നാം ഇവിടെ ചര്‍ച്ച ചെയ്യുന്നു.

12.1 ഇ-ഭരണം (e-Governance)

സര്‍ക്കാരിന്റെ പ്രവര്‍ത്തനങ്ങള്‍ വളരെ അനായാസമാക്കുന്നതിന്‌ ഐ ടി വലിയ പങ്ക്‌
വഹിക്കുന്നുണ്ട്‌. വിവരങ്ങള്‍ ശേഖരിക്കുക, സംസ്‌കരിക്കുക, വിശദീകരിക്കുക,
സംഭരിക്കുക, കൈമാറ്റം ചെയ്യുക എന്നിവയ്ക്ക്‌ വേണ്ടിയുള്ള പല സാങ്കേതിക വിദ്യകള്‍
ഇതില്‍ ഉള്‍പ്പെടുന്നു. വളരെ പെട്ടെന്ന്‌ ന്യായമായ തീരുമാനങ്ങള്‍ എടുക്കുവാന്‍ ഇത്‌
സര്‍ക്കാരുകളെ സഹായിക്കുന്നു. എല്ലാ സര്‍ക്കാര്‍ സേവനങ്ങളിലും സുതാര്യതയും
ഉത്തരവാദിത്തവും വര്‍ധിപ്പിക്കുന്നു. ഐ സി ടി ഉപയോഗിച്ച്‌ കൊണ്ടുള്ള ഭരണ
നിര്‍വ്വഹണം ആണ്‌ ഉഇഭരണം എന്ന പേരില്‍ പൊതുവെ അറിയപ്പെടുന്നു.

സര്‍ക്കാര്‍ സേവനങ്ങള്‍ സാകര്യപ്രദവും, കാര്യക്ഷമവും, സുതാര്യവുമായ രീതിയില്‍
പൌരന്മാരിലേക്ക്‌ എത്തിക്കുവാന്‍ ഐ സി ടി ഉപയോഗിച്ച്‌ കൊണ്ടുള്ള ഇ-ഭരണത്തിന്‌
സാധിക്കുന്നു. സര്‍ക്കാര്‍ സേവനങ്ങള്‍ ഫലപ്രദമായ രീതിയില്‍ തല്‍ക്ഷണം
ജനങ്ങളിലേക്ക്‌ എത്തുന്നു എന്ന്‌ ഉറപ്പു വരുത്തുകയാണ്‌ ഇതിന്റെ പ്രധാന ലക്ഷ്യം.
കേരളത്തില്‍ മോട്ടോര്‍ വാഹന വകുപ്പ്‌, വിദ്യാഭ്യാസ വകുപ്പ്‌, റവന്യൂ വകുപ്പ്‌ തുടങ്ങിയ
വയില്‍ ഇ-ഭരണം വളരെ വിജയകരമായ രീതിയില്‍ നടപ്പിലാക്കിയിട്ടുണ്ട്‌. ഇനി നമുക്ക്‌
ഇഭരണത്തിലെ വിവിധ വ്യവഹാരങ്ങളെ കുറിച്ച്‌ ഇപ്പോള്‍ ചര്‍ച്ച ചെയ്യാം.

A. ഇ- ഭരണത്തിലെ വിവിധതരം വ്യവഹാരങ്ങള്‍ (Types of Interactions in

e-Governance)

ഭരണ നിര്‍വ്വഹണത്തില്‍ വിവിധതരം പങ്കാളികളുമായുള്ള പരസ്പര വ്യവഹാരങ്ങള്‍ ഇ
ഭരണം വഴി സുഗമമാകുന്നു. ഇത്തരത്തിലുള്ള വിവിധതരം വ്യവഹാരങ്ങളെ കുറിച്ച്‌
ചുവടെ പ്രതിപാദിക്കുന്നു.

12. വിവര ആശയവിനിമയ സാങ്കേതികവിദ്യയും സമുഹവും:

സര്‍ക്കാരില്‍ നിന്നും സര്‍ക്കാരിലേക്ക്‌ /ഴലസ്മബ്‌ to Government (G2G )

സര്‍ക്കാര്‍ സംവിധാനത്തിലുള്ള ഏജന്‍സികള്‍, വകുപ്പുകള്‍, സംഘടനകള്‍ എന്നിവയുടെ
ഇടയില്‍ നടക്കുന്ന ഇലക്ര്രോണിക്‌ രൂപത്തിലുള്ള ഡാറ്റയുടെയും വിവരങ്ങളുടെയും പങ്കു
വയ്ക്കലാണിത്‌. ആശയ വിനിമയം, ഡാറ്റയുടെ ഉപയോഗം, ഡാറ്റ പങ്കുവയ്ക്കല്‍ എന്നിവ
മെച്ചപ്പെടുത്തി ഇ-ഭരണ സംരംഭങ്ങളെ പിന്‍തുണക്കുക എന്നതാണ്‌ ൭20 യുടെ ലക്ഷ്യം.

സര്‍ക്കാരില്‍ നിന്നും പൌരന്മാരിലേക്ക്‌/ഴലസ്ങബ്‌ to Citizens (G2C)

ഇത്‌ സര്‍ക്കാരിനും പൌരന്മാര്‍ക്കുമിടയില്‍ സമ്പര്‍ക്കം സാധ്യമാക്കുന്നു. ഇവിടെ പൊതു
ജനങ്ങള്‍ ധാരാളം പൊതുസേവനങ്ങള്‍ ഉപയോഗപ്പെടുത്തുന്നു. പൊതുസേവനങ്ങളുടെ
ലഭൃതയും ഉപയോഗക്ഷമതയും ഇത്‌ വര്‍ധിപ്പിക്കുന്നു. സേവനങ്ങളുടെ ഗുണനിലവാ
രവും ഇത്‌ ഉയര്‍ത്തുന്നു. സര്‍ക്കാരിനും പൌരന്മാര്‍ക്കും ഇടയില്‍ ഒരു സാഹൃദ വലയം
ഒരുക്കുക എന്നതാണ്‌ ഇതിന്റെ പ്രധാന ഉദ്ദേശം.

സര്‍ക്കാരില്‍ നിന്നും വ്യാപാരത്തിലേക്ക്‌ /Government to Business (G2B)

ഇവിടെ ഇഭരണ സംവിധാനം വ്യാപാര സമൂഹത്തിന്‌ സര്‍ക്കാരുമായി സംവദിക്കുവാനുള്ള
അവസരം ഒരുക്കുന്നു. ചുവപ്പുനാട പ്രവണത ഒഴിവാക്കുക, സമയനഷ്ടം പരിഹരിക്കുകം
പ്രവര്‍ത്തന ചെലവ്‌ കുറയ്ക്കുക, സര്‍ക്കാരുമായുള്ള വ്യാപാര ഇടപാടുകളില്‍ കൂടുതല്‍
സുതാര്യത വരുത്തുക എന്നിവയാണ്‌ ഇതിന്റെ ലക്ഷ്യം.

സര്‍ക്കാരില്‍ നിന്നും ജീവനക്കാരിലേക്ക്‌ / Government to Employees (G2E)
സര്‍ക്കാരിന്റെ നയങ്ങള്‍ ജീവനക്കാരിലൂടെയാണ്‌ നടപ്പിലാക്കുന്നത്‌. ഇതിനായി
സര്‍ക്കാരും ജീവനക്കാരും പരസ്പരം പതിവായി സമ്പര്‍ക്കം പുലര്‍ത്തേണ്ടതുണ്ട്‌.
ഗവണ്‍മെന്റും ജീവനക്കാരും തമ്മില്‍ തമ്മില്‍ സമ്പര്‍ക്കം പുലര്‍ത്തുന്നു. സര്‍ക്കാരിന്റെ
വിവിധ പരിപാടികള്‍ നടപ്പിലാക്കുന്നതിനുള്ള നയങ്ങളും മാര്‍ഗ്ഗ നിര്‍ദ്ദേശങ്ങളും സര്‍ക്കാര്‍
ഉത്തരവുകളുടെയും വിജ്ഞാപനങ്ങളുടെയും രൂപത്തില്‍ ഇ-ഭരണ പോര്‍ട്ടലുകള്‍ വഴി
ജീവനക്കാര്‍ക്ക്‌ ലഭ്യമാക്കിയിട്ടുണ്ട്‌. ഇ-ഭരണ സേവനങ്ങള്‍ ഉപയോഗപ്പെടുത്തിക്കൊ
ണ്ടാണ്‌ സര്‍ക്കാര്‍ ജീവനക്കാരുടെ ശമ്പളം, വ്യക്തിഗത വിവരങ്ങള്‍ എന്നിവ കൈകാര്യം
ചെയ്യുന്നത്‌. (ഉദാ: സ്പാര്‍ക്ക്‌ വെബ്‌ സൈറ്റ്‌ - www.spark.gov.in) ഐ സി ടിയുടെ സക
ര്യങ്ങള്‍ ഉപയോഗപ്പെടുത്തി ഇത്തരം പ്രവര്‍ത്തനങ്ങള്‍ വളരെ വേഗത്തിലും കാര്യക്ഷ
മതയോടെയും കൈകാര്യം ചെയ്യുവാന്‍ സാധിക്കുന്നു.

13. ഇ- ഭരണത്തിന്റെ അടിസ്ഥാന സൌകര്യം (e-Governance Infrastructure)

ഇഭരണത്തിന്റെ അടിസ്ഥാന സാകര്യവും സംഭരണവും നി സ്‌റ്റേറ്റ്‌
ഡാറ്റ സെന്ററുകള്‍ (SDC), അവയെ _
ബന്ധിപ്പിക്കുന്നതിനായുള്ള സ്റ്റേറ്റ്‌ ,-~

വൈഡ്‌ ഏരിയ നെറ്റ്വര്‍ക്ക്‌ (SWAN), 7

പൊതുജനങ്ങള്‍ക്ക്‌ സേവനങ്ങള്‍ | ട്ട ഞ്ഞ
എത്തിക്കുന്നതിനുള്ള പൊതുസേ

വന ക്രേന്രങ്ങള്‍ (കോമണ്‍ സര്‍വീസ്‌ _ State bate സാം “7

\State wide! Area Network (SWAN)
N

സെന്ററുകള്‍) എന്നീ ഘടകങ്ങളാണ്‌ iH

ഇന്ത്യയിലെ ഇഭരണത്തിന്റെ ഘട \ ച്‌
നയില്‍ ഉള്‍പ്പെടുന്നത്‌. ഇ-ഭരണ “soos
ത്തിന്റെ ഈ മൂന്നു ഘടകങ്ങളുടേയും Common Service Centre (50)

സംയോജനം ചിത്രം 10.1 ല്‍ കാണി — Fig. 12. 1:H-eoanawlnd അടിസ്ഥാന സരകര്യം/6-
ച്ചിരിക്കുന്നു. Governance infrastructure

ഞന്‌ അ

i. mend ഡാ സെന്റര്‍ / State Data Cetnre (SDC)

ഇഭരണം സാധ്യമാക്കുന്നതിനു ആവശ്യമായ ഒരു പ്രധാന ഘടകമാണ്‌ സ്റ്റേറ്റ്‌ ഡാറ്റാ
സെന്റര്‍. ദേശീയ ഇഭരണ പദ്ധതി,ക്ഥഠനമി e-Governance Plan (NeGP) മുന്‍കൈ എടു
ത്താണ്‌ ഇത്‌ രൂപപ്പെടുത്തിയത്‌. സേവനങ്ങള്‍, ഉപയോഗങ്ങള്‍, അടിസ്ഥാന സാകര്യം
എന്നിവയെ സംയോജിപ്പിക്കുകയും, 20, G2C, G2B എന്നീ സേവനങ്ങള്‍ക്ക്‌ ഇലക്ര്രോണിക്‌
ഡാറ്റാ വിതരണം കാര്യക്ഷമമായ രീതിയില്‍ നടത്തുന്നതിനും വേണ്ടിയാണ്‌ 1൦൨ യുടെ
കീഴില്‍ സ്റ്റേറ്റ്‌ ഡാറ്റ സെന്റര്‍ നിര്‍മ്മിക്കുവാന്‍ തീരുമാനിച്ചത്‌. ഒരു പൊതുവിതരണ
സംവിധാനത്തിലൂടെ ഓരോ സംസ്ഥാന സര്‍ക്കാരിനും ഈ സേവനങ്ങള്‍ നിര്‍വഹിക്കാ
വുന്നതാണ്‌. സ്റ്റേറ്റ്‌ വൈഡ്‌ ഏരിയ നെറ്റ്വര്‍ക്ക്‌ (SWAN), ഗ്രാമങ്ങളില്‍ വരെ വ്യാപിച്ചു
കിടക്കുന്ന പൊതു സേവന കേന്ദ്രങ്ങള്‍ (CSC) മുതലായവ ഈ പൊതുവിതരണ സംവി
ധാനങ്ങള്‍ക്ക്‌ പിന്തുണ നല്‍കുന്നു. സ്‌റ്റേറ്റ്‌ ഡാറ്റാ സെന്റര്‍ നിരവധി സേവനങ്ങള്‍ നല്‍
കുന്നു. സംസ്ഥാനങ്ങളുടെ പരമ്രപധാനമായ ഡാറ്റ സംരക്ഷിക്കുക, വിവിധ സേവന
ങ്ങള്‍ക്കു വേണ്ടിയുള്ള ഓണ്‍ലൈന്‍ സംവിധാനം ഒരുക്കുക, സംസ്ഥാന ഇന്‍ദ്രാനെറ്റ്‌
സംവിധാനത്തിന്റെ കവാടമാകുക, പൌരന്‍മാര്‍ക്കു സേവനങ്ങളുടെ കവാടമാകുക, ദുരന്ത
നിവാരണ സംവിധാനമൊരുക്കുക മുതലായ പ്രവര്‍ത്തനങ്ങള്‍ സ്റ്റേറ്റ്‌ ഡാറ്റാ സെന്റര്‍
എന്നിവ അവയില്‍ ഉള്‍പ്പെടുന്നു. മാനേജ്മെന്റ്‌ നിയ്ര്രണങ്ങള്‍, ഡാറ്റ മാനേജ്മെന്റിന്റെ
മൊത്തം ചെലവ്‌ കുറയ്ക്കല്‍, വിഭവ നിര്‍വ്വഹണം, വിന്യാസം, തുടങ്ങിയവജെല്ലാം സ്റ്റേറ്റ്‌
ഡാറ്റ സെന്ററുകള്‍ നല്‍കുന്ന സാകര്യങ്ങളാണ്‌.

ii. കേരള സ്റ്റേറ്റ്‌ വൈഡ്‌ ഏരിയ നെറ്റ്വര്‍ക്ക്‌ /Kerala State Wide Area Network (KSWAN)

KSWAN, സ്‌റ്റേറ്റ്‌ ഇന്‍ഫര്‍മേഷന്‍ DMd[anoM5(Sé> 24MOaG /(State Information Infrastructure (811)
നട്ടേല്ലായി പ്രവര്‍ത്തിക്കുന്നു. ഇത്‌ തിരുവനന്തപുരം, കൊച്ചി, കോഴിക്കോട്‌ എന്നീ പ്രധാന
നഗരങ്ങളെ താല്‍പര്യക്രേന്ദങ്ങളാക്കി (Hubs) 14 ജില്ലകളിലെ 152 ബ്ലോക്ക്‌ പഞ്ചായത്തുകളെ
തമ്മില്‍ ബന്ധിപ്പിക്കുന്ന. ഈ ശൃംഖല വഴി അനേകം സര്‍ക്കാര്‍ കാര്യാലയങ്ങളേയും
ബന്ധിപ്പിക്കുന്നു. സ്‌റ്റേറ്റ്‌ ഡാറ്റ സെന്ററില്‍ നിന്നുള്ള അപേക്ഷകള്‍ക്ക്‌ അനുസരിച്ചു G2G,
20 സേവനങ്ങളെ ഏകോപിപ്പിച്ചു പ്രവര്‍ത്തിക്കുക എന്നത്‌ കേരള സ്റ്റേറ്റ്‌ വൈഡ്‌ ഏരിയ
നെറ്റ്വര്‍ക്ക്‌ (KSWAN) ന്റെ പ്രധാന ചുമതലയാണ്‌.

iii. പൊതുസേവന കേന്ദ്രങ്ങള്‍ / Common Service Cetnre (CSC)

സര്‍ക്കാര്‍, സ്വകാര്യ, സാമൂഹ്യ വകുപ്പുകളുടെ സേവനങ്ങള്‍ രാജ്യത്തെ ഗ്രാമീണര്‍ക്ക്‌
എത്തിക്കുന്നതിനുള്ള സേവന കേന്ദ്രങ്ങളാണ്‌ പൊതു സേവന കേന്ദ്രങ്ങള്‍. വെബ്‌
അധിഷ്ഠിത ഇ-ഭരണ സേവനങ്ങള്‍ ഗ്രാമ പ്രദേശങ്ങളില്‍ എത്തിക്കുന്നു എന്നതാണ്‌
CSC യുടെ പ്രധാന സവിശേഷത. ഈ സംവിധാനം ഉപയോഗപ്പെടുത്തിക്കൊണ്ട്‌ നമുക്ക്‌
വൈദ്യുതി ബില്‍, ടെലിഫോണ്‍ ബില്‍, ജലഉപയോഗ ബില്‍ എന്നിവ അടയ്ക്കുവാന്‍
സാധിക്കുന്നു. കൂടാതെ അപേക്ഷകള്‍ ഓണ്‍ലൈന്‍ ആയി സമര്‍പ്പിക്കുവാനും ആവ
ശ്ൃക്കാര്‍ക്ക്‌ യോഗ്യതാപ്രതം (certificate) തയ്യാറാക്കി വിതരണം ചെയ്യുവാനും ഇത്‌ വഴി
സാധിക്കുന്നു. പൊതു സേവനകേന്ദ്രങ്ങള്‍ വഴി ലഭ്യമാകുന്ന മറ്റു സേവനങ്ങള്‍ ചുവടെ
ചേര്‍ക്കുന്നു.

© കാര്‍ഷിക സേവനങ്ങള്‍

© വിദ്യാഭ്യാസവും പരിശീലനവുമായി ബന്ധപ്പെട്ട സേവനങ്ങള്‍

© ആരോഗ്യ സേവനങ്ങള്‍
© ഗ്രാമീണ ബാങ്കിന്റെയും ഇന്‍ഷുറന്‍സിന്റെയും സേവനങ്ങള്‍

12. വിവര ആശയവിനിമയ സാങ്കേതികവിദ്യയും സമുഹവും:

ഭ വിനോദ സംബന്ധമായ സേവനങ്ങള്‍

© വാണിജ്യപരമായ സേവനങ്ങള്‍
കേരളത്തില്‍ അക്ഷയ സെന്ററുകള്‍ പൊതു സേവന ക്രേന്ദ്രങ്ങളായി പ്രവര്‍ത്തിക്കുന്നു.
അക്ഷയ സെന്ററുകള്‍
കേരളത്തിലെ മലപ്പുറം ജില്ലയില്‍ 2002 ല്‍ അക്ഷയ സെന്ററുകള്‍ക്ക്‌ തുടക്കം കുറിച്ചു.
സാധാരണക്കാരായ പൌരന്മാരില്‍ ഇ-സാക്ഷരത (e-literacy) അല്ലെങ്കില്‍ കമ്പ്യൂട്ടര്‍
സാക്ഷരത ഉണ്ടാക്കിയെടുക്കുക എന്നതാണ്‌ ഇതിന്റെ ഉദ്ദേശം. കേരള സംസ്ഥാന വിവര
സാങ്കേതിക വിദ്യ മിഷന്‍ /Kerala State Information Technology Mission (KSITM) ന്റെ
ഒരു അതിരടയാളം (landmark) ആയാണ്‌ അക്ഷയ സെന്ററുകള്‍ രൂപകല്‍പന
ചെയ്തിരിക്കുന്നത്‌. ഐ.സി.ടി യുടെ പ്രയോജനങ്ങള്‍ ഡിജിറ്റല്‍ വേര്‍തിരിവില്ലാതെ
സംസ്ഥാനത്തെ എല്ലാ ജനവിഭാഗങ്ങളിലേക്കും എത്തിക്കുക എന്നതാണ്‌ ഇതുകൊണ്ടു
ഉദ്ദേശിക്കുന്നത്‌. ഇഗ്രാന്റ്‌ സ്‌ (e-gratnz), ഇഫയലിംഗ്‌ (e-filing), ഇ-ഡിസ്ര്രിക്ട്‌ (e-district),
ഇടിക്കറ്റിങ്‌ (c-ticketing) എന്നിവ ഇതിന്റെ സേവനങ്ങളില്‍ ചിലതാണ്‌. അതുപോലെ
റേഷന്‍ കാര്‍ഡ്‌, തെരഞ്ഞെടുപ്പ്‌ ഐ ഡി എന്നിവയുടെ അപേക്ഷ സമര്‍പ്പിക്കുവാനും,
ആധാര്‍ കാര്‍ഡില്‍ പേര്‍ ചേര്‍ക്കുവാനും, മറ്റ്‌ ആധാര്‍ സേവനങ്ങള്‍ക്കും, ഇന്‍ഷുറന്‍സ്‌
ബാങ്കിങ്‌ സേവനങ്ങള്‍ക്കുമെല്ലാം നമുക്ക്‌ അക്ഷയ സെന്ററുകളെ ഉപയോഗപ്പെടുത്താം.

2002 നവംബര്‍ 18ന്‌ മുന്‍ രാഷ്ട്രപതി
ഡോ. എ പി ജെ അബ്ദുര്‍കലാം അക്ഷയ പദ്ധതി ഉദ്ഘാടനം ചെയ്തു.

സ്വകാര്യ പൊതുപകങ്കാളിത്ത / Private Public
Partnership (PPP Model) മാതൃകയില്‍ ആണ്‌ അക്ഷയ കേന്ദ്രങ്ങള്‍
പ്രവര്‍ത്തിക്കുന്നത്‌. അക്ഷയ സെന്ററിന്റെ ഉടമസ്ഥാവകാശം ഒരു
സ്വകാര്യ വ്ൃക്തിക്കാണെങ്കില്‍ പോലും തദ്ദേശ സ്വയംഭരണ
വകുപ്പാണ്‌ ഈ വ്യക്തിയെ തെരഞ്ഞെടുക്കുന്നത്‌. അക്ഷയ സെന്റര്‍
പ്രവര്‍ത്തിക്കുന്ന പഞ്ചായത്തിലെ വ്യക്തികള്‍ക്കാണ്‌ മുന്‍ഗണന. അക്ഷയ
ഉടമസ്ഥന്റെ വരുമാനം എന്നത്‌ ഓരോ ഇടപാടിനും പനരന്മാരില്‍ അവസരങ്ങളുടെ ജാലകം
നിന്നും ഈടാക്കുന്നതോ അല്ല്ലെങ്കില്‍ സര്‍ക്കാരില്‍ നിന്നും www.akshaya.kerala.gov.in
ലഭിക്കുന്നതോ ആയ നാമമാത്രമായ സേവന വേതനം മാത്രമാണ്‌.

ഭാരത സര്‍ക്കാരിന്റെ കീഴിലുള്ള യുണീക്‌ ഐഡന്റിഫിക്കേഷന്‍ അതോറിറ്റി
ഓഫ്‌ ഇന്ത്യ / Unique Identification Authortiy of India (UIDAI), ഇ-ഭരണ
സംവിധാനത്തിന്റെ ഭാഗമായി പൌരന്മാര്‍ക്ക്‌ നല്‍കുന്ന 12 അക്ക വ്യക്തിഗത
തിരിച്ചറിയല്‍ സംഖ്യയാണ്‌ ആധാര്‍. ഇന്ത്യയില്‍ എവിടെയും ഒരു തിരിച്ചറിയല്‍
രേഖയായും, മേല്‍ വിലാസത്തിന്റെ തെളിവ്‌ ആയും ഇത്‌ ഉപയോഗിക്കാം. ഇന്ത്യയിലെ
ഏതൊരു പൌരനും പ്രായ ലിംഗഭേദം ഇല്ലാതെ ആധാറില്‍ പേര്‌ രേഖപ്പെടുത്താവുന്നതാണ്‌.
ഓരോ വ്യക്തിക്കും സൌജന്യമായി ഒരു പ്രാവശ്യം പട്ടികയില്‍ ചേര്‍ക്കാവുന്നതാണ്‌. പേര്‌
ചേര്‍ക്കുന്ന സമയത്ത്‌ പൌരന്റെ അടിസ്ഥാന വിവരങ്ങള്‍ (പേര്‌, വയസ്സ്‌, ലിംഗം, വിലാസം),
ബയോമ്രെടിക്‌ വിശദാംശങ്ങള്‍ (ഫോട്ടോ, 10 വിരലിന്റെയും 2 കൃഷ്ണമണികളുടെയും
അടയാളം) എന്നിവ കൃത്യമായി രേഖപ്പെടുത്തുന്നതാണ്‌. ഓരോ ആധാര്‍ നമ്പറും അനന്യവും
വൃക്തിയുടെ ജീവിതാവസാനം വരെ നിയമ സാധുതയുള്ളതുമായിരിക്കും. ബാങ്കിങ്‌
സേവനങ്ങള്‍ പ്രയോജനപ്പെടുത്തുവാനും , മൊബൈല്‍ഫോണ്‍ കണക്ഷന്‍ എടുക്കുന്നതിനും
മറ്റു സര്‍ക്കാര്‍, സര്‍ക്കാര്‍ ഇതര സേവനങ്ങള്‍ക്കും ആധാര്‍ നമ്പര്‍ ഉപയോഗപ്പെടുത്താം.

അത്ത SS
൦. ഇ- ഭരണത്തിന്റെ പ്രയോജനങ്ങള്‍

ഇ-ഭരണം പ്രയോഗത്തില്‍ വരുത്തുന്നത്‌ കൊണ്ട്‌ ധാരാളം മേന്മകള്‍ ഉണ്ട്‌. സര്‍ക്കാരിന്റെ

പ്രവര്‍ത്തനങ്ങളെ പറ്റിയും, സര്‍ക്കാര്‍ നടപ്പില്‍ വരുത്താന്‍ ഉദ്ദേശിക്കുന്ന നയപരിപാടികളെ

കുറിച്ചുമുള്ള അവബോധം ജനങ്ങളില്‍ സൃഷ്ടിച്ചെടുക്കുവാന്‍ ഇ-ഭരണത്തിന്‌ കഴിയുന്നു.

ഇഭരണത്തിന്റെ പ്രധാന പ്രയോജനങ്ങള്‍ ചുവടെ ചേര്‍ക്കുന്നു.

© ഇ-ഭരണം സര്‍ക്കാര്‍ സര്‍വീസുകളില്‍ കമ്പ്യൂട്ടര്‍ വത്കരണം സാധ്യമാക്കുന്നു.
ജനക്ഷേമ പ്രവര്‍ത്തനങ്ങളുമായി ബന്ധപ്പെട്ട വിവരങ്ങള്‍ എളുപ്പത്തില്‍ ജനങ്ങളില്‍
എത്തിച്ചേരുന്നു എന്ന്‌ ഉറപ്പു വരുത്തുന്നു.

© ഇ-ഭരണം സര്‍ക്കാരിന്റെ എല്ലാ തലങ്ങളിലും പൌരന്മാരുടെ ഇടപെടലുകള്‍ ഉറപ്പു
വരുത്തിക്കൊണ്ട്‌ ജനാധിപത്യം ശക്തിപ്പെടുത്തുന്നു.

© ഇത്‌ സര്‍ക്കാര്‍ പ്രവര്‍ത്തനങ്ങള്‍ കൂടുതല്‍ സുതാര്യമാക്കുകയും അഴിമതി തടയാന്‍
സഹായിക്കുകയും ചെയ്യുന്നു.

€ സൂക്ഷ്മമായി നിരീക്ഷിക്കപെടുന്നു എന്ന ബോധ്യം ഉള്ളതിനാല്‍ എല്ലാ സര്‍ക്കാര്‍
വകുപ്പുകളുടെയും പ്രവര്‍ത്തനങ്ങള്‍ കാര്യക്ഷമവും ഉത്തരവാദിത്തപൂര്‍ണവും
ആകുന്നു.

© ഇ-ഭരണം കാര്യക്ഷമമായി പ്രയോഗത്തില്‍ വരുത്തുന്നതിലൂടെ പൊതുജനത്തിന്‌
നിരന്തരമായി കാര്യാലയങ്ങള്‍ സന്ദര്‍ശിക്കേണ്ട അവസ്ഥ ഒഴിവാകുന്നു. ഇത്‌
സമയവും സാമ്പത്തും ലാഭിക്കുന്നു.

1. ഇ- ഭരണത്തിന്റെ വെല്ലുവിളികള്‍ (Challenges to e-Governance)

ഇ-ഭരണത്തിന്‌ ഒരുപാട്‌ മേന്മകള്‍ ഉണ്ടെങ്കിലും, ചില വെല്ലുവിളികളും ഇതിന്‌ അഭി
മുഖീകരിക്കേണ്ടി വരുന്നു. ഇ-ഭരണം പ്രയോഗത്തില്‍ വരുത്തുമ്പോള്‍ അഭിമുഖീ
കരിക്കേണ്ടി വരുന്ന ചില വെല്ലുവിളികള്‍ എന്തൊക്കെ എന്ന്‌ നോക്കാം.

© ഡിജിറ്റല്‍ വിഭജനം മുലം ഇ-ഭരണ സേവനം കൃത്യമായി ഉപയോഗപ്പെടുത്തുന്നതിന്‌
ചില തടസ്സങ്ങള്‍ നേരിടുന്നു. വിദൂര സ്ഥലങ്ങളില്‍ ജീവിക്കുന്ന കമ്പ്യൂട്ടര്‍ സാക്ഷരത
കുറഞ്ഞ ആളുകള്‍ക്ക്‌ ഇഭരണ സേവനങ്ങള്‍ പ്രയോജനപ്പെടുത്തു ന്നതിന്‌
ബുദ്ധിമുട്ടുകള്‍ നേരിടുന്നു.

© ഇ-ഭരണ സംവിധാനം കമ്പ്യൂട്ടര്‍/വെബ്‌ അധിഷ്ഠിതമായതിനാല്‍ മികച്ച രീതി
യിലുള്ള സുരക്ഷാ സംവിധാനങ്ങള്‍ ആവശ്യമാണ്‌. അല്ലാത്ത പക്ഷം സൈബര്‍
ആക്രമണങ്ങള്‍ക്കുള്ള സാധ്യത വളരെ കൂടുതലാണ്‌.

© ഉഇ-ഭരണ സേവനങ്ങള്‍ പ്രയോഗത്തില്‍ വരുത്തുന്നതിനും അതിന്റെ പരിപാലന
ത്തിനും വലിയ തോതിലുള്ള മുതല്‍മുടക്കും ആസൂര്രണവും ആവശ്യമാണ്‌.

© വ്യക്തിഗത വിവരങ്ങളും, ബയോമ്ര്രടിക്‌ ഡാറ്റയും നിര്‍ദ്ിഷ് ഏജന്‍സികളുമായി
പങ്കുവയ്ക്കുന്നതില്‍ ഭൂരിഭാഗം ആളുകളും ഉത്കണ്ഠാകുലരാണ്‌.

© ഇ-ഭരണം കാര്യശേഷി ഉള്ളതും ഫലപ്രാപ്തവുമാകണമെങ്കില്‍ വിവിധ വകുപ്പു
കളുടെ ഏകോപനം വളരെ അത്യാവശ്യമാണ്‌.

12. വിവര ആശയവിനിമയ സാഭ്കേതികവിദയയും സമുഹവും

14. ഇദരണവുമായി ബന്ധപെട്ട വെബ്സൈറ്റുകള്‍ (Useful e-Governance websites)

കേരള സര്‍ക്കാരിന്റെ വിവിധ സേവനങ്ങള്‍ ജനങ്ങളിലേക്ക്‌ എത്തിക്കുന്നതിന്‌
വേണ്ടിയുള്ള ചില വെബ്സൈറ്റ്‌ വിലാസങ്ങള്‍ പട്ടിക 10.1 ല്‍ കാണിച്ചിരിക്കുന്നു. ചിത്രം
10.2 ല്‍ DHSE. ചിത്രം 10.3ല്‍ ഇ-ഡിസ്ട്രിക്ട്‌ പ്രധാന പേജും കാണിച്ചിരിക്കുന്നു.

www.dhsekerala.gov.in കേരള സര്‍ക്കാരിന്റെ കീഴിലുള്ള ഹയര്‍ സെക്കണ്ടറി വിദ്യാദ്യാസ
A alam െദ്യോഗിക വെബ്സൈറ്റ്‌. വിദ്യാര്‍ത്ഥികള്‍ക്കും അധ്യാപ
കര്‍ക്കും സ്കൂള്‍ ദരണാധികാരികള്‍ക്കും ആവര്യമായ വിവിധ moe
ര്യങ്ങളും സേവനങ്ങളും ഇത്‌ ലഭ്യമാക്കുന്നു.

www.edistrict.kerala.gov.in ഉത്‌ സര്‍ക്കാര്‍ സേവനങ്ങള്‍ പൊതുജനങ്ങളിലേക്ക്‌ എത്തിക്കുന്നു.

www.incometaxindia.gov.in ഉത്‌ ആദായനികുതി വകുരിന്റെ സേവനങ്ങള്‍ ലഭ്യമാക്കുന്നു.

www.keralamvd.gov.in ഇതാണ്‌ കേരള മോട്ടോര്‍ വാഹന വകുഷിന്റെ ഓദ്യോരിക
വെബ്സൈറ്റ്‌.

www.ti.gov.in സര്‍ക്കാരില്‍ നിന്നോ അധികാരികളില്‍ നിന്നോ വിവരങ്ങള്‍ക്കായി
അപേക്ഷ നല്‍കിയ പാരന്‌ വിവരാവകാശ നിയമം 2005 ഉത്തരവ്‌
അനുസരിച്ച്‌ സമയബന്ധിതമായി മറുപടി നല്‍കുന്നു.

www.itmissionkerala.gov.in കേരള സര്‍ക്കാരിന്റെ ഈ വെബ്സൈറ്റ്‌ വിവിധ ഐ ടി സംരംഭങ്ങള്‍ക്ക്‌
ഭരണപരമായ പിന്തുണ നല്‍കുന്നു.

www.spark.gov.in ജീവനക്കാരന്റെ സേവന വേതന കാര്യങ്ങള്‍ കൈകാര്യം ചെയ്യുന്ന
G2E വിദാത്തിലുള്ള വെബ്സൈറ്റ്‌.

പട്ടിക 121 ഉ- ഭരണവുമായി ബന്ധക്ടെ വെബ്‌വ്ൈറ്റുകര്‌

Education Portal

ah  _Migher Secondary Education,

GOVERNMENT OF KERALA

RESULIS 2013
Post Creation Orders
> 15.07.201:

Students Figible tor
INSPIRE Scholarship

HSE ITYR Say

ചിതം 12.2: DHSE AUMOOMGION (aSWIN പേജ്‌

കമ്പ്യൂട്ടര്‍ സ =

www .dhsekerala.gov.in
ഹയര്‍ സെക്കന്ററി പരീക്ഷകള്‍ക്ക്‌ രജിസ്റര്‍ ചെയ്യല്‍, ഹാര്‍ ടിക്കറ്റ്‌
വിതരണം, പരീക്ഷാഫല പ്രസിദ്ധീകരണം, വിവിധ ഉത്തദവുകളുടെയും
വിജ്ഞാപനങ്ങളുടെയും വിതരണം മുതലായവ ഉതിന്റെ സേവന പരിധിയില്‍
ഉള്‍കെടുന്നു. വിവിധ ഫോറങ്ങളും, മാതൃക ചോദ്യ കടലാസുകള്‍ ഉള്‍കെടെയുള്ള പഠന സാല്രരികളും
ഡൌണ്‍ലോഡ്‌ ചെയ്യാനുള്ള MIA@o ഈ വെബ്സൈറ്റില്‍ ലഭ്യമാണ്‌.

Portal User Login

വയ്യേ comet
അന്നാ ഭയ Aepartments നാ brovght

je available through

kend computerization to ബിം സ്സ
and uniform application of rules. Lhe
cry of services to public hy automation,
ces പോള) whee ever — Smweooaueoniemer മമായ?
an ic progr: i

de prompt and effective services to the public.

Panne

minimizing <ffort and time Liner he case senenve cnaracters as നട ദനാ.

ഖന്ന

നി
© Engen ലയാളം

൬. പദ്ധതിയാണ്‌ ഇ.ഡ്ലിസ്‌
നിന്നുത് സേവനങ്ങല്‌

കയാ
ey

eee
1 ടി

നി

ഇതുകൊണ്ട്‌
(മങ്ങളിലെ
ചുരുക്ത്തില്‌,
ുമൂളിലും ദനവനങ്ങള്‌
രിയ പദ്ധതിയാണ്‌ ഇ.

ഉദ്ദേശിക്കുന്നത്‌
ഘൂചരണവ്വും
ആനയീാസരഹിനായും കുറന്ത സ്ന
ലട മാ്ജുന്നതിനു പ്രത്യേകം OYLO
wae kang

ബട

ചിതം 12.3: D- ദഥിര്ധുടിക്ട്‌ (ഫി പോരിന്റെ ്രശ്ഥാന പേഴ്‌

ദേരീയ ഉദരണ പദ്ധതിയ്ക്ക്‌ കീഴില്‍ സംസ്ഥാനം ഏറ്റെടുത്തിരിക്കുന്ന BIG) നിര്‍വ്വഹണ പദ്ധതി

(State Mission Mode Project) ആണ്‌ ഉധിസ്ട്രിക്ട്‌ (e-District). കമ്പയൂട്ടര്‍വത്കൃത

സേവനങ്ങള്‍ പൊതുജനങ്ങളിലെത്തിക്കുക എന്നതാണ്‌ ഈ പദ്ധതിയുടെ ലക്ഷ്യം.

കേരളത്തിലെ റവന്യു വകുഷുമായി ബന്ധകെട്ട വിവിധ യോമ്യതാ പത്രങ്ങളുടെ
(Certificates) വിതരണം ഉഡിസ്ട്രിക്ട്‌ പോര്‍ട്ടലുമായി സമന്വയിരിച്ചിരിക്കുന്നു ഉത്‌ സര്‍ക്കാര്‍
കാര്യാലയങ്ങളിലെ പല സങ്കീര്‍ണമായ വ്യവസ്ഥകളെയും ലഘൂകരിക്കുകയും പൌരന്റെ ജീവിത രീതിയെ
എളുകഷമാക്കുകയും ചെയ്യുന്നു. പരനെ സംബസ്ധിച്ചിടത്തോളം പൊതുഭരഖകളുടെ പകര്‍ഷുകള്‍
നേടുന്നതോ, അപേക്ഷകള്‍ സ്ഥര്‍ഭിക്കുന്നതോ, അധികാരികളെ കാണുന്നതോ, 293 ദൈനം ദിനാവ
ര്യങ്ങള്‍ക്കുള്ള വിവരങ്ങള്‍ ആരായുന്നതോ ബുദ്ധിമുട്ടേറിയ കാര്യമാണ്‌. ഉത്‌ അവന്റെ/അവളുടെ
യാത്രാ ചെലവ്‌ വര്‍ധിരിക്കുകയും, ദിവസവരുമാനവും സമയവും നഷ്ടകെടുത്തുകയും ചെയ്യുന്നു. സര്‍
ക്കാര്‍ സ്ഥാപനങ്ങളില്‍ ചിലഷോള്‍ ബന്ധകെട്ട രേഖകളോ, വിവരങ്ങളോ അല്ലെങ്കില്‍ അധികാരികളോ
യഥാസമയം ലദ്യമാകണമെന്നില്ല. ആയതിനാല്‍ സ്ഥാപനത്തിലേക്കുള്ള സന്ദര്‍ശനം ആവര്‍ത്തിക്കേണ്ടി
വരികയും ചെലവ്‌ വര്‍ധിക്കാനിടയാകുകയും ചെയ്യുന്നു. ആവശ്യമായ രേഖകള്‍ സഹിതം രൊര്‍ക്ക്‌ ഉ
ഡിസ്ട്രിക്ട്‌ വെബ്‌ പോര്‍ട്ടലില്‍ നേരിട്ടോ, അക്ഷയ കേന്ദ്രങ്ങള്‍ മുഖാന്തരമോ അപേക്ഷകള്‍ സാര്‍രിച്ച്‌
സേവനങ്ങള്‍ തേടാവുന്നതാണ്‌ . അക്ഷയ കേന്ദ്രങ്ങള്‍ പൊതു പാരനുഭവണി ഓണ്‍ലൈന്‍ അപേക്ഷകള്‍
സ്ഥര്‍രിക്കുന്നു. ഈ അപേക്ഷകള്‍ വിവിധ ഘട്ടങ്ങളിലൂടെ വില്ലേജ്‌ ഓഫീസറുടെ അരികില്‍ എത്തി
ച്ചേരുന്നു. ഈ അപേക്ഷകളിലുളള വില്ലേജ്‌ നടപടിക്ക്‌ ശേഷം ഓഫീസറുടെ തൊട്ടടുത്ത ഉന്നത അധികാ
രിക്ക്‌ സമര്‍കിക്കുകടയാ, അല്ലെങ്കില്‍ അംഗീകരിച്ചതിനു രേഷം ഡിജിറ്റല്‍ ഒക്‌ സഹിതം ആവര്യക്കാരന
വിതരണം ചെയ്യുകയോ ചെയ്യുന്നു. യോഗ്യതാ പ്രതം ലദ്യമായാല്‍ അപേക്ഷകനെ എസ്‌ എം എസ്‌ വഴി
അറിയിക്കുകയും ചെയ്യുന്നു.

12. വിവര ആശയവിനിമയ സാങ്കേതികവിദ്യയും സമുഹവും:

സ്വയം വിലയിരുത്താം

1. ഐ സിടി ഉപയോമിച്ച്‌ സര്‍ക്കാര്‍ സേവനങ്ങള്‍ സാകര്യപ്രദവും, കാര്യക്ഷമവും,
സുതാര്യവുമായ രീതിയില്‍ പൌരന്‌ എത്തിക്കുവാനുള്ള പ്രയോരത്തിന്റെ പേരെന്ത്‌?

2. ഉ.-ദരണം എന്ന പദം നിര്‍വൃചിക്കുക.

3. ദരണ നിര്‍വൃഹണത്തില്‍ വിവിധതരം പങ്കാളികളുമായുളള പരസ്പര വ്യവഹാരങ്ങള്‍
ഉ-ദരണം സുമമാക്കുന്നു. ഈ പ്രസ്താവന ശരിയോ തെറ്റോ എന്ന്‌ പറയുക.

4. ഒരു ഇ- ഭരണ വെബ്സൈറ്റിന്‌ ഉദാഹരണം നല്‍കുക.
ട. എന്നാണ്‌ KSWAN?

12.1. 2 ഇ- വ്യാപാരം (e-Business)

നമ്മള്‍ പലപ്പോഴും സാധനങ്ങള്‍ വാങ്ങാന്‍ കടകളില്‍ പോവുകയും അതിനായി ഒരുപാട്‌
സമയവും അധ്വാനവും നീക്കി വെക്കുകയും ചെയ്യാറുണ്ട്‌. വീട്‌ വിട്ട്‌ പുറത്തിറങ്ങാതെ
സാധനങ്ങള്‍ വാങ്ങുക എന്ന ആശയം എങ്ങനെയുണ്ട്‌? എന്നാല്‍ ഇന്ന്‌ ഇതൊരു യാഥാര്‍
ത്ഥ്യമാണ്‌. ഒരു വിധം എല്ലാ സേവനങ്ങളും വ്യാപാരവും ഇന്ന്‌ ഓണ്‍ലൈനില്‍ ലഭ്യമാണ്‌.
അത്‌ ഏതാനും മൌസ്‌ ക്ലിക്കുകള്‍ മാത്രം അകലെയാണ്‌.

ഇ-വ്യാപാരം (e-Business) എന്നത്‌ കൊണ്ട്‌ ഉദ്ദേശിക്കുന്നത്‌, വ്യാപാര വിവരങ്ങള്‍ പങ്കു
വയ്ക്കുക, വ്യാപാര ബന്ധങ്ങള്‍ നിലനിര്‍ത്തുക, ഐ സി ടി ഉപയോഗിച്ച്‌ വ്യാപാര
ഇടപാടുകള്‍ നടത്തുക എന്നിവയാണ്‌. കമ്പനികകള്‍ (വ്യാപാരം), പൊതു സ്ഥാപനങ്ങള്‍
(ഭരണസമിതി), വ്യക്തികള്‍ (ഉപഭോക്താവ്‌) മുതലായവര്‍ ഇ-വ്യാപാരത്തിന്റെ ഭാഗമായി
വരുന്നു. ഇ-വാണിജ്യ സേവനങ്ങള്‍ കാര്യക്ഷമമായി ഉപയോഗിച്ചുകൊണ്ട്‌ മികച്ച
രീതിയിലുള്ള വിപണനത്തിനും, വില്പന വര്‍ധനവിനും ഇ-വ്യാപാരം സഹായിക്കുന്നു.
ഓണ്‍ലൈന്‍ കൂടിക്കാഴ്ചകള്‍ സംഘടിപ്പിക്കുക, പ്രവര്‍ത്തനതലം പങ്കുവെക്കുക മുതലായ
കാര്യങ്ങള്‍ വഴി നിരന്തര സമ്പര്‍ക്കവും, യാ്രാച്ചെലവും കുറയ്ക്കാന്‍ സാധ്യമാകുന്നു.

A. ഉ- വാണിജ്യവും ഉ- വ്യാപാരവും (e-Commerce and e-Business)

ഇ-വാണിജ്യവും ഇ-വ്യാപാരവും പലപ്പോഴും ഇടകലര്‍ത്തി ഉപയോഗിക്കുന്ന പദങ്ങ
ളാണെങ്കിലും ഇവ വ്ൃത്യാസപ്പെട്ടിരിക്കുന്നു. പണം കൈമാറ്റം ചെയ്യുന്ന വ്യാപാര ഇടപാ
ടുകളാണ്‌ ഇവാണിജ്യത്തില്‍ ഉള്‍പ്പെടുന്നതെങ്കില്‍ വ്യാപാരം നടത്തിക്കൊണ്ടുപോകുവാന്‍
ആവശ്യമായ എല്ലാ ഘടകങ്ങളും ഇ-വ്യാപരത്തില്‍ ഉള്‍പ്പെടുന്നു. വിപണനം, അസം
WALD വസ്തുക്കളുടെയും ചരക്കുകളുടെയും വാങ്ങല്‍, ഉപഭോക്താക്കള്‍ക്കുള്ള
പരിശീലനം, വിതരണക്കാരെ കണ്ടെത്തല്‍ എന്നിവയെല്ലാം ഇ വ്യാപാരത്തില്‍
ഉള്‍പ്പെടുന്നു. അതിനാല്‍ ഇ-വാണിജ്യത്തിന്റെ വിപുലീകരണമാണ്‌ ഇ-വ്യാപാരം.

13. ഉലക്രോണിക്‌ രൂപത്തില്‍ പണം നല്‍കുന്ന സമ്പ്രദായം
(Eletcronic Payment System (EPS))

കീശയില്‍ പണമില്ലാതെയുള്ള ജീവിതം നിങ്ങള്‍ക്കു ചിന്തിക്കുവാന്‍ കഴിയുമോ? പണം
കൈകൊണ്ടു തൊടാതെ ഒരാഴ്ചയോളം MBS) നീക്കി എന്ന്‌ ആരെങ്കിലും പറഞ്ഞാല്‍
നിങ്ങള്‍ വിശ്വസിക്കുമോ? ഇന്ന്‌ നാം ജീവിക്കുന്ന ലോകത്തു ഒരു വിധം എല്ലാ കച്ചവട

ഞന്‌ അ

സാധനങ്ങളിലും അതിന്റെ വില അനുബന്ധമായി ചേര്‍ത്തിരിക്കും (Price tag). അപ്പോള്‍
പിന്നെ കാശ്‌ നല്‍കാതെ ഒരു സാധനം വാങ്ങുക എന്നത്‌ എങ്ങനെ സാധ്യമാകും?

ഇലക്ര്രോണിക്‌ രൂപത്തില്‍ പണം നല്‍കുന്ന സ്ര്രദായം Eletcronic Payment System
(EPS) ഇതിനു പരിഹാരമാകുന്നു. നമ്മള്‍ DMEIG( IMA വ്യാപാരത്തിലേക്ക്‌ കടന്നു
ചെല്ലുമ്പോള്‍ പണമിടപാടുകളും ഇലക്ര്രോണിക്‌ രൂപത്തിലാകേണ്ടതുണ്ട്‌. സമുചിതമായ
രീതിയില്‍ പ്രയോഗത്തില്‍ വരുത്തിയാല്‍ ഇത്‌ സാകര്യപ്രദവും സുരക്ഷിതവുമായിരിക്കും.
ഇ-വ്യാപാരത്തില്‍ ഇ പി എസ്‌ ഒരു പ്രധാന പങ്ക്‌: വഹിക്കുന്നു. വളരെ വലിയ പ്രാധാന്യ
മുണ്ട്‌. ഓണ്‍ലൈന്‍ സാഹചര്യത്തില്‍ ഉപഭോക്താവും വില്‍പ്പനക്കാരനും തമ്മില്‍ നട
ത്തുന്ന സാമ്പത്തിക ഇടപാടുകളെ ആണ്‌ ഇലക്ര്ോണിക്‌ രൂപത്തിലുള്ള പണമിടപാട്‌
സ്രമ്പദായം (Eletcronic Payment System) എന്ന്‌ പറയുന്നത്‌. ഒരു ബാങ്കിന്റെയോ ഇടനില
ക്കാരന്റെയോ പിന്തുണയോടെയുള്ള ഡിജിറ്റല്‍ സാമ്പത്തിക ഉപകരണം ഉപയോഗപ്പെടു
ത്തിയാണ്‌ ഇവിടെ സാമ്പത്തിക ഇടപാടുകള്‍ സുഗമമാക്കുന്നത്‌ (അതായത്‌ ക്രെഡിറ്റ്‌ /
ഡെബിറ്റ്‌ കാര്‍ഡ്‌, ഇലക്ര്രോണിക്‌ ചെക്ക്‌ അല്ലെങ്കില്‍ ഡിജിറ്റല്‍ പണം)

€. ഉ- ബാങ്കിങ്‌

വിവരസാങ്കേതിക വിദ്യയുടെ പുരോഗതിക്കനുസരിച്ചു ബാങ്കിങ്‌ മേഖലയിലും വലിയ
തോതിലുള്ള മാറ്റങ്ങള്‍ സംഭവിച്ചിട്ടുണ്ട്‌. ബാങ്കിങ്‌ മേഖലയിലെ നമ്മുടെ പരമ്പരാഗത
സങ്കല്‍പ്പങ്ങള്‍ ഒരുപാട്‌ മാറിക്കഴിഞ്ഞു. ഉദാഹരണമായി, ഇന്ന്‌ സാമ്പത്തിക ഇടപാടു
കള്‍ക്ക്‌ ബാജ്‌: സന്ദര്‍ശിക്കേണ്ട ആവശ്യം തന്നെ ഇല്ല. യാര്രകളില്‍ പോലും ഓണ്‍ലൈന്‍
ബാങ്കിങ്‌ സാകര്യങ്ങള്‍ ഉപയോഗപ്പെടുത്തി നമുക്ക്‌ ഇടപാടുകള്‍ നടത്താം. എ ടി എം,
ഡെബിറ്റ്‌ കാര്‍ഡ്‌, ക്രെഡിറ്റ്‌ കാര്‍ഡ്‌, ഇന്റര്‍നെറ്റ്‌ ബാങ്കിങ്‌, കോര്‍ ബാങ്കിങ്‌ എന്നിങ്ങനെ
യുള്ള സൌകര്യങ്ങള്‍ പരമ്പരാഗത ബാങ്കിങ്‌ സ്ര്പദായത്തില്‍ നിന്നും ഇ-ബാങ്കിങ്‌ സ്രമ്പ
ദായത്തിലേക്കു മാറുവാന്‍ സഹായിച്ചിട്ടുണ്ട്‌. ബാങ്കിങ്‌ സേവനങ്ങള്‍ ഉപഭോക്താക്കള്‍ക്ക്‌
നേരിട്ട്‌ ഇലക്ര്രോണിക്‌ മാര്‍ഗ്ഗത്തിലൂടെ നല്‍കുന്നതിനെയാണ്‌ ഇ-ബാങ്കിങ്‌ അല്ലെങ്കില്‍
ഇലക്ര്യോണിക്‌ ബാങ്കിങ്‌ എന്ന്‌ പറയുന്നത്‌. ഇതില്‍ ഭൂമിശാസ്ത്രപരമായ പരിമിതികള്‍
ഇല്ലാതെ ഡാറ്റ ഉപയോഗിക്കുവാന്‍ കഴിയും.

1. ഉ- വ്യാപാരത്തിന്റെ cama

ഇ-വ്യാപാരം ഉപഭോക്താക്കള്‍ക്കും സ്ഥാപനത്തിനും ധാരാളം മേന്മകള്‍ പ്രദാനം

ചെയ്യുന്നു. ഇ-വ്യാപാരത്തിന്റെ ഉപയോഗം കൊണ്ട്‌ ലഭ്യമാകുന്ന ചില പ്രധാന ഗുണങ്ങളെ

പറ്റി നമുക്ക്‌ ചര്‍ച്ച ചെയ്യാം.

ഭ DO ഭദുമിശാസ്തചത്മമയ പരിമിതികശി മധികകക്കുമ്മു. സാധാരണ രീതിയിലുള്ള
കച്ചവടത്തില്‍ നിങ്ങള്‍ക്ക്‌ സേവനങ്ങള്‍ ലഭിക്കുന്നത്‌ പരിമിതമായ സ്ഥലങ്ങളില്‍
നിന്ന്‌ മാത്രമായിരിക്കും. പക്ഷെ ഈ പരിമിതി ഇ-വാണിജ്യം വഴി പരിഹരിക്ക
പ്പെടുന്നു.

© ഇ-വ്യാപാരം പ€്രവരിത്മദ ചെലവ്‌ കുറയ്ക്കുമ്മു. വ്യാപാരിക്ക്‌ ഇ-വാണിജ്യത്തില്‍
ഒരു പ്രധാന സ്ഥലത്തെ ഭാതിക സാഹചര്യങ്ങള്‍ ആവശ്യമില്ല; അതിനാല്‍
പ്രവര്‍ത്തന ചെലവ്‌ കുറയുന്നു. ഇതുവഴി ലഭ്യമാകുന്ന ലാഭത്തിന്റെ ഒരു വിഹിതം
ഇളവ്‌ (Discount) രൂപത്തില്‍ ഉപഭോക്താവിന്‌ തന്നെ കൊടുക്കുവാന്‍ സാധിക്കുന്നു.

12. വിവര ആശയവിനിമയ സാങ്കേതികവിദ്യയും സമുഹവും:

ഭ ഉത്‌ യമ്യതമ MWAOONo ചെലഡ്എം കുഠയ്ക്കുമ്മു. ചിലപ്പോള്‍ ഉപഭോക്താക്കള്‍ക്ക്‌
അവരുടെ (പിയപ്പെട്ട വിപണനശാലകളില്‍ എത്തിച്ചേരുവാന്‍ ദീര്‍ഘദൂരം യാത്ര
ചെയ്യേണ്ടതായി വന്നേക്കാം. ഇ-വ്യാപാരം വഴി ഇതേ വിപണനശാലസാങ്കല്‍പ്പിക
മായി സന്ദര്‍ശിക്കുവാന്‍ അനുവദിക്കുന്നു.

ഇത്‌ ഏഎല്ലായ്ച്ഛേഴും MAM} (പവരിത്തക്കുമ്മു. ഇ -വ്യാപാര സേവനം
എല്ലായ്പ്പോഴും ലഭ്യമാണ്‌ (247). വ്യാപാരിയെ സംബന്ധിച്ചിടത്തോളം, അവര്‍ക്ക്‌
വില്‍പന വര്‍ദ്ധിക്കുന്നു. ഉപഭോക്താവിനാണെങ്കില്‍ “എല്ലായ്പ്പോഴും” തുറന്നു
പ്രവര്‍ത്തിക്കുന്ന വിപണനശാലകള്‍ കൂടുതല്‍ സാകര്യപ്രദമാണ്‌.

ഒരുപാട്‌ ഉത്ഭീചസ്നശ്ങശിക്കിടയിര്മി DIA മാമുക്കാവശ്വമമയ ഉതിച്മം വത്രെ
പപെട്ടെമ്മ്‌ കങ്ങെത്തുവമമി കഴിയും. ഇവ്യാപാര വെബ്സൈറ്റ്‌ വഴി ഉപഭോ
ക്താക്കള്‍ക്ക്‌ വ്യത്യസ്ത വ്യാപാരികളുടെ അനേകം ഉല്‍പന്നങ്ങള്‍ക്കിടയില്‍ നിന്ന്‌
ഇഷ്ടമുള്ളത്‌ തെരഞ്ഞെടുക്കുവാന്‍ കഴിയുന്നു. ചില വെബ്സൈറ്റുകള്‍ ഉപഭോക്താ
വിന്റെ മുന്‍ഗണനയും വാങ്ങിച്ച വസ്തുക്കളുടെ പട്ടികയും ഓര്‍മിപ്പിക്കുന്നതിനാല്‍
ഉല്‍പന്നങ്ങള്‍ ആവര്‍ത്തിച്ചു വാങ്ങുന്നവര്‍ക്ക്‌ ഇത്‌ സാകര്യപ്രദമാണ്‌. ഉല്‍പന്ന
ങ്ങളുടെ സ്വഭാവം, വിലയുടെ താരതമ്യം മുതലായ സവിശേഷതകള്‍ ഇ-വ്യാപാ
രത്തിന്റെ മറ്റൊരു ആകര്‍ഷണമാണ്‌.

മൊബൈല്‍ ഉപകരണങ്ങളായ മൊബൈല്‍ ഫോണ്‍, പി ഡി എ (PDA) മുതലാ
യവ ഉപയോഗിച്ച്‌കൊണ്ടുള്ള വ്യാപാര പ്രവര്‍ത്തനങ്ങളെയും, പ്രര്രിയകളെയും,
ഉപയോഗങ്ങളെയും ആണ്‌ എം വ്യാപാരം (m-Business) അല്ലെങ്കില്‍ മൊബൈല്‍
വ്യാപാരം (mobile business) എന്ന പദം കൊണ്ട്‌ അര്‍ത്ഥമാക്കുന്നത്‌. എം വ്യാപാരം
ഇ-വ്യാപാരത്തിന്റെ ഒരു ശാഖയായി കണക്കാക്കാം.
ഇന്റര്‍നെറ്റ്‌ ഉപയോഗിച്ച്‌ ലഘു വ്യാപാരം നടത്തുന്നതിനെയാണ്‌ ഇടൈലിങ്‌ e-tailing (അല്ലെ
രില്‍ ഇലക്ര്യോണിക്‌ റീടൈലിങ്‌ (eletcronic retailing) എന്ന്‌ പറയുന്നത്‌. ഇത്‌ 820 (ബിസി
നസ്‌ ടു കണ്‍സ്യൂമര്‍) യുടെ സര്‍വ്വ സാധാരണമായ ഒരു രൂപമാണ്‌.

11. ഉ - വ്യാപാരത്തിന്റെ വെല്ലുവിളികള്‍ (Chalanges to e-Business)

വ്യാപാരലോകത്ത്‌ ഇ-വ്യാപാരത്തിന്‌ അതിശക്തമായ സാധ്യതകള്‍ ഉണ്ടെങ്കിലും ഇന്ത്യ
പോലുള്ള വികസ്വര രാഷ്ഷ്ങ്ങളില്‍ ഇതിന്‌ പല വിധ വെല്ലുവിളികളെയും അഭിമുഖീക
രിക്കേണ്ടി വരുന്നു. പ്രധാനപ്പെട്ട വെല്ലുവിളികള്‍ താഴെ ചര്‍ച്ച ചെയ്യുന്നു.

€ ജനസാഖ്യയുടെ നല്ലൊരു ശതമാനവും ഐ ടിയുടെ പ്രയോഗത്തെക്കുറിച്ചും ഉപയോ
ഗത്തെ കുറിച്ചും ബോധവാന്മാരല്ല. സ്ഥിരമായി ഇന്റര്‍നെറ്റ്‌ ഉപയോഗിക്കുന്ന ആളു
കള്‍ക്ക്‌ പോലും ഓണ്‍ലൈന്‍ വ്യാപാരത്തെ കുറിച്ചും അതിന്റെ സാധ്യതകളെ
കുറിച്ചും അറിവില്ല എന്നത്‌ അത്ഭുതകരമാണ്‌.

ഇ-വ്യാപാരത്തിന്‌ വളരെ അത്യാവശ്യമായ പ്ലാസ്റ്റിക്‌ പണം എന്നറിയപ്പെടുന്ന
ക്രെഡിറ്റ്‌ കാര്‍ഡ്‌, ഡെബിറ്റ്‌ കാര്‍ഡ്‌ എന്നിവയും ഇന്റര്‍നെറ്റ്‌ ബാങ്കിങ്‌ സംവിധാന
വും ഭൂരിഭാഗം ആളുകളും പ്രത്യകിച്ച്‌ ഗ്രാമീണ മേഖലയിലുള്ളവര്‍ക്ക്‌ (്രാപ്യമല്ല.

വേണ്ട മുന്‍കരുതലുകള്‍ ഇല്ലാതെ ഉപയോഗിക്കുന്നതുകൊണ്ട്‌ ഉപഭോക്താക്കള്‍ക്ക്‌
അവരുടെ വിലപ്പെട്ട വിവരങ്ങളായ ക്രെഡിറ്റ്‌ ഡെബിറ്റ്‌ കാര്‍ഡ്‌ നമ്പര്‍, രഹസ്യകോഡ്‌
(Password) എന്നിവ നഷ്ടപ്പെടാന്‍ സാധ്യതയുണ്ട്‌.

ആ സ്നാന ന സ്തം അ

° വസ്ര്തങ്ങൾ, കരകാശല വസ്തുക്കള്‍, ആഭരണങ്ങള്‍ തുടങ്ങിയ ഉല്‍പന്നങ്ങള്‍
ഭാതിക സാഹചര്യത്തില്‍ പരിശോധിച്ച്‌ വാങ്ങാവുന്നതാണ്‌. എന്നാല്‍ ഓണ്‍ലൈന്‍
വ്യാപാരത്തില്‍ ഉപഭോക്താവിന്‌ “സ്പര്‍ശിച്ചും അനുഭവിച്ചറിഞ്ഞും” ഉല്‍പന്നങ്ങള്‍
വാങ്ങുവാന്‍ സാധ്യമല്ല.

© ഇ.-വ്യാപാരത്തിന്റെ വിജയത്തിനായി വ്യാപാര സ്ഥാപനങ്ങള്‍ കുറ്റമറ്റതും,
കാര്യക്ഷമവുമായ രീതിയില്‍ ഉല്‍പന്നങ്ങള്‍ വിതരണം ചെയ്യേണ്ടത്‌ അത്യാവശ്യ
മാണ്‌.

1. ഉ- വ്യാപാരത്തിന്‌ പ്രയോജനകരമായ വെബ്സൈറ്റുകള്‍ (Useful e-Business websites)

ജനപ്രീതിയാര്‍ജ്ജിച്ച ചില ഇ-വ്യാപാര വെബ്സൈറ്റുകള്‍ പട്ടിക 12.2 ല്‍ കൊടുത്തി
രിക്കുന്നു. കൂടാതെ ചില ഇ-വ്യാപാര വെബ്സൈറ്റുകളുടെ (പധാന താളുകള്‍
ചിത്രം 12.4 ലും 12.5 ലും കാണിച്ചിരിക്കുന്നു.

MAA, വിമാന ടിക്കറ്റുകള്‍ ബുക്ക്‌ ചെയ്യുവാനും, 08 ചെയ്യുവാനും,
ഹോട്ടലുകളില്‍ മുറികര്‍ ബുക്ക്‌ ചെയ്യുവാനും വേണിയുള്ള ഉന്തധ്യന്‍
റെയില്‍വേ കുറ്ററിംഗ്‌ ആന്‍ഡ്‌ ടൂറിസം ലിമിറ്റഡ്‌ (1൨൦) ന്റെ ഈ വെബ്സൈറ്റ്‌
ഉപയോരിക്കാം

വാഷിംഗ്ടണ്‍ ആസ്ഥാനമായി പ്രവര്‍ത്തിക്കുന്ന അമേരിക്കന്‍ ഓണ്‍ലൈന്‍
വ്യാപാരി.

ഇന്ത്യയിലെ ഏറ്റുവും വലിയ ഓണ്‍ലൈന്‍ വ്യാപാര വെബ്സൈറ്റുകളില്‍ ഒന്ന്‌.
ഉന്‍ (ടട സന്ന eto

oo ഉന്യ വിമാന ടിക്കറ്റുകള്‍ ബുക്ക്‌ ചെയ്യുന്നതിനുള്ള ഓണ്‍ലൈന്‍
www.keralarte.com ew MIT 510093418 ബുക്ക്‌ ചെയ്യുന്നതിനുള്ള വെബ്സ്റ്റ്റ്‌,
www.bookmyshow.com സിനിമാരാലകളിലേക്കുള്ള ടിക്കറ്റ്‌ ബുക്ക്‌ ചെയ്യുന്നതിനുള്ള വെബ്സ്്റ്റ്‌.

പട്ടിക 12.2: ചില D- വ്യാപാ വെബ്‌മൈറ്റുകര്‌

www.ircte.co.in

ചിത്രം 12.4: wwwirete.co.in വെബ്‌മൈറ്റിത്റി [SLIM പേജ്‌

12. വിവര ആശയവിനിമയ സാങ്കേതികവിദ്യയും സമുഹവും:

www.irctc.co.in

IRCTC ഒരു ഭാരത സര്‍ക്കാര്‍ സംരംഭമാണ്‌. ഭക്ഷണം തയ്യാറാക്കി വിതരണം
ചെയ്യുക (Catering), വിനോദസഞ്ചാരം (Tourism), തീവണ്ടി, വിമാന ടിക്കറ്റ്‌
ബന്ധപ്പെട്ട ര്രവര്‍ത്തനങ്ങള്‍ ഇത്‌ കൈകാര്യം ചെയ്യുന്നു. ഓണ്‍ലൈന്‍ വഴി
ടിക്കറ്റ്‌ ബുക്ക്‌ ചെയ്യാനുള്ള സൌകര്യം ഒരുക്കുന്നതോടൊപ്പം റിസര്‍വേഷന്‍ നില,
തീവണ്ടി സമയം, ഹോട്ടല്‍ ബുക്കിങ്ങ്‌ എന്നിവയ്ക്കും ഈ വെബ്സൈറ്റ്‌ ഉപയോഗിക്കാം.

wishlist
Wish Win,

119,999

New Year,
New You

ao 12.5: www.Amazon.in വെബ്‌മൈറ്റിന്റെ (asWIM പേഴ്‌

www.amazon.com

ആമസോണ്‍ ലോകത്തിലെ ഏറ്റവും വലിയ ചില്ലറ വ്യാപാരിയാണ്‌. ആമസോണ്‍

തുടക്കത്തില്‍ ഒരു ഓണ്‍ലൈന്‍ പുസ്തകശേഖരമായി ആരംഭിച്ചു. ഇത്‌ പിന്നീട്‌

സോഫ്റ്റ്‌ വെയര്‍, വീഡിയോ ഗെയിംസ്‌, ഇലക്ര്യോണിക്‌ ഉപകരണങ്ങള്‍,
ഗൃഹോപകരണങ്ങള്‍, ഭക്ഷണ സാധനങ്ങള്‍, കളിപ്പാട്ടങ്ങള്‍, ആഭരണങ്ങള്‍ എന്നിവയുടെ
വില്പനക്കാരായി മാറി. ഈ കമ്പനി ഉപഭോക്ത്യ ഇലക്ര്യോണിക്സും (consumer eletcronics)
നിര്‍മ്മിക്കുന്നു. വിവിധ രാജ്യങ്ങളില്‍ വ്യാപാരം നടത്തുന്നതിനായി ഇവര്‍ക്ക്‌ വൃത്ൃയസ്ത
വ്യാപാര വെബ്സൈറ്റുകള്‍ നിലവിലുണ്ട്‌. 2013 ല്‍ www.amazon.in എന്ന വെബ്സൈറ്റ്‌
ഇന്ത്യയില്‍ തുടക്കം കുറിച്ചു.

സ്വയം വിലയിരുത്താം

1. ഓണ്‍ലൈന്‍ ചുറ്റുപാടില്‍ വില്പനക്കാരനും വാങ്ങുന്നവനും തമില്‍ നടത്തുന്ന
സാമ്പത്തിക ഇടപാട്‌ സംവിധാനത്തെ .......................... എന്ന്‌ അറിയകെടുന്നു.

2. ഉ.വ്യാപാരം നിര്‍വ്ൃവചിക്കുക.
3. ഉ. ബാങ്കിങ്‌ നിര്‍വചിക്കുക.

4. താഴെ കൊടുത്തിരിക്കുന്ന പ്രസ്താവന ശരിയോ തെറ്റോ എന്ന്‌ പരിശോധിക്കുക.

'ഉ- വ്യാപാരം എന്നത്‌ ഇ- വാണിജ്യത്തിന്റെ വിപുലീകരണമാണ്‌.

12.1. 3 ഇ-പഠനം (e-Learning)

അധ്യാപകര്‍, വിദ്യാര്‍ത്ഥികള്‍, പഠന ഉപകരണങ്ങള്‍ മുതലായവ അടങ്ങുന്ന ഒരു ക്ലാസ്‌
മുറി നമുക്കെല്ലാവര്‍ക്കും സുപരിചിതമാണ്‌. എന്നാല്‍ ഒരു സാങ്കല്‍പ്പിക ക്ലാസ്‌ മുറിയെ

ഞന്‌ അ

പറ്റി ചിന്തിച്ചുനോക്കു, അവിടെ അധ്യാപകരും വിദ്യാര്‍ത്ഥികളും വ്യത്യസ്ഥമായ സ്ഥല
ങ്ങളിലോ ഒരു പക്ഷേ പല രാജ്യങ്ങളിലോ ആയിരിക്കും ഉണ്ടാകുക. ഇത്‌ സാധ്യമാകു
മോ? അതെ അത്‌ സാധ്യമാണ്‌. ഇ-പഠനം വഴി സാ്രദായിക പഠന രീതിയിലുള്ള പല
പരിമിതികളെയും മറികടക്കുവാന്‍ കഴിയുന്നു. ഇലക്ര്യോണിക്‌ മാധ്യമങ്ങളെയും, ഐ സി
ടിയെയും ഉള്‍ക്കൊള്ളിച്ചുകൊണ്ടുള്ള പഠനരീതിയെയാണ്‌ ഇ-പഠനം എന്ന്‌ വിശേഷി
പ്പിക്കുന്നത്‌.

A. ഉ- പഠനത്തിന്‌ ഉപയോഗിക്കുന്ന ഉപകരണങ്ങള്‍ (e-Learning tools)

ഇ-പഠനം മെച്ചപ്പെടുത്തുന്നതിനായി നിരവധി ഉപകരണങ്ങള്‍ ഉപയോഗിക്കുന്നുണ്ട്‌. ഇ-
പഠന ഉപകരണങ്ങള്‍ താഴെ ചര്‍ച്ച ചെയ്യുന്നു.

i. ഉലക്രോണിക്‌ ബുക്ക്‌ റീഡര്‍ (e-Book Reader)

ഒരു വലിയ ബാഗും അതില്‍ നിറയെ പുസ്തകങ്ങളുമായി സ്കൂളില്‍ പോകുന്നതിന്‌ പക
രം നമുക്ക്‌ ആവശ്യമായ എല്ലാ വിവരങ്ങളും ഒരു ചെറിയ ഉപകരണത്തില്‍ സൂക്ഷിച്ച്‌ സ്‌
കൂളില്‍ പോകുന്നത്‌ ചിന്തിച്ചു നോക്കൂ? അത്‌! രസകരമാണ്‌ അല്ലേ? ഒരുപാട്‌ പുസ്തക
ങ്ങളിലായി അടങ്ങിയിട്ടുളള ആശയങ്ങളെ ഡിജിറ്റല്‍ രൂപത്തിലാക്കി സൂക്ഷിച്ചുവെക്കു
വാനും കയ്യില്‍ കൊണ്ട്‌ നടക്കുവാനും കഴിയുന്ന ഉപകരണമാണ്‌ ഇ-ബുക്ക്‌ റീഡര്‍. ഇ-ബു
ക്ക്‌ റീഡറില്‍ ഏത്‌ പുസ്തകവും അതിന്റെ ഏതു പേജും അനായാസേന നമുക്ക്‌ തുറക്കാം.
ഈ ഉപകരണം ഉപയോഗിച്ച്‌ ഇന്റര്‍നെറ്റില്‍ നിന്ന്‌ വെബ്‌ പ്രമാണങ്ങള്‍ ഡൌണ്‍ലോഡ്‌
ചെയ്ത്‌ എപ്പോള്‍ വേണമെങ്കിലും വായിക്കുവാനും ഓണ്‍ലൈനായി പണമടയ്ക്കുവാനും
സാധിക്കുന്നു. ഇ-ബുക്ക്‌ റീഡറിലെ ഓഡിയോ ഒഓട്ട്പുട്ട്‌ സംവിധാനം ഉപയോഗപ്പെടു
ത്തി പാഠഭാഗങ്ങള്‍ വായിച്ച്‌ കേള്‍ക്കുവാനും കഴിയുന്നു.

ii. ഇ- NS@M/e-Text (ഉ- പുസ്തകം)

പുസ്തകത്തിലുള്ള വിവരങ്ങള്‍ ഇലക്ര്രോണിക്‌ രൂപത്തില്‍ ലഭ്യമാക്കുന്നതിനെയാണ്‌
ഇ-ടെക്സ്റ്റ്‌ (ഇ-പുസ്തകം) എന്നു പറയുന്നത്‌. ഇ-ബുക്ക്‌ റീഡറോ, കമ്പ്യൂട്ടറോ, മറ്റേതെ
ങ്കിലും ഇലക്ര്ോണിക്‌ ഉപകരണമോ ഉപയോഗിച്ച്‌ ഇ-ടെക്സ്റ്റ്‌ വായിക്കുവാനാകും. നമു
ക്ക്‌ താല്‍പര്യമുള്ള രീതിയില്‍ ടെക്സ്റ്റിന്റെ രൂപഘടനയില്‍ സോഫ്റ്റെയറുകള്‍ ഉപയോ
ഗിച്ച്‌ മാറ്റം വരുത്താവുന്നതാണ്‌. ഒരു കമ്പ്യൂട്ടറിന്റെയോ ഇ-ടെക്സ്റ്റ്‌ റീഡറിന്റെയോ സ
ഹായത്തോടെ ഇ-ടെക്സ്റ്റ്‌ വായിച്ച്‌ കേള്‍ക്കുവാനാകും. ഇത്‌ കാഴ്ച ശക്തി കുറഞ്ഞവര്‍
ക്ക്‌ വളരെയധികം സഹായകരമാണ്‌.

iii. ഓണ്‍ലൈന്‍ 2199 (Online chat)

ഇന്റര്‍നെറ്റ്‌ ഉപയോഗിച്ച്‌ രണ്ടോ അതിലധികമോ വ്ൃക്തികള്‍ തമ്മില്‍ ടെക്സ്റ്റ്‌, രൂപത്തില്‍
സന്ദേശങ്ങള്‍ കൈമാറുന്ന രീതിയാണ്‌ ഓണ്‍ലൈന്‍ ചാറ്റ്‌. സാങ്കല്‍പ്പിക ക്ലാസ്‌ മുറിക
ളില്‍ അധ്യാപകരും വിദ്യാര്‍ത്ഥികളും തമ്മില്‍ വിവിധ വിഷയങ്ങളെകുറിച്ച്‌ ചര്‍ച്ച നട
ത്തുന്നത്‌ ഓണ്‍ലൈന്‍ ചാറ്റിങ്ങിലൂടെയാണ്‌. ഇന്റര്‍നെറ്റിന്റെ വേഗത കുറവാണെങ്കിലും
ടെക്സ്റ്റ്‌ രൂപത്തിലുള്ള ഓണ്‍ലൈന്‍ ചാറ്റിങ്ങ്‌ നടത്താവുന്നതാണ്‌. പരസ്പരം കണ്ട്‌ സംസാ
രിക്കുന്നതിനും ഓണ്‍ലൈന്‍ ചാറ്റിങ്ങില്‍ സാധ്യമാണ്‌. ഇതിന്‌ വേഗതയേറിയ ഇന്റര്‍നെ
റ്റ്‌ ബന്ധം, വെബ്‌ ക്യാമറ, സ്പീക്കര്‍ തുടങ്ങിയ ഉപകരണങ്ങളും ആവശ്യമാണ്‌. ഓണ്‍
ലൈന്‍ ചാറ്റ്‌ സാമൂഹിക ഇടപെടലുകള്‍ക്കുള്ള സാധ്യതയും ഒരുക്കുന്നു. രണ്ട്‌ വ്യക്തി
കള്‍ തമ്മില്‍ വിവിധ സ്ഥലങ്ങളില്‍ ഇരുന്ന്‌ ആശയവിനിമയം നടത്തുന്നതിന്‌ ഇത്‌ സ
ഹായിക്കുന്നു. ഈ സംവിധാനം ഉപയോഗിച്ചാണ്‌ അധ്യാപകരുടെ ഓണ്‍ലൈനിലൂടെ

12. വിവര ആശയവിനിമയ സാങ്കേതികവിദ്യയും സമുഹവും:

യുള്ള തത്സമയക്ലാസുകള്‍ ലഭ്യമാകുന്നത്‌. വിദ്യാര്‍ത്ഥികള്‍ക്ക്‌ വിദൂര സ്ഥലങ്ങളില്‍ ഇ
രുന്ന്‌ ലോഗിന്‍ ചെയ്ത്‌ ക്ലാസുകളില്‍ പങ്കെടുക്കാം.

iv. ©- കണ്ടന്റ്‌ (e-Content)

വീഡിയോകള്‍, അവതരണങ്ങള്‍, ഗ്രാഫിക്സ്‌, ആനിമേഷന്‍ എന്നിവ ഉള്‍പ്പെടുത്തി ഇ-ക
ണ്ടന്റ്‌ നിര്‍മ്മിക്കുകയും അതുവഴി ഇ-പഠനം സാധ്യമാക്കുകയും ചെയ്യാം. ഇവ ടെലിവി
ഷനിലൂടെയോ, വെബ്സൈറ്റുകള്‍ മുഖേനയോ പ്രക്ഷേപണം ചെയ്യുവാനും സാധിക്കുന്നു.
അപ്പ്‌ലോഡ്‌ ചെയ്ത ഉള്ളടക്കങ്ങള്‍ പിന്നീട്‌ വെബ്സൈറ്റുകളില്‍ നിന്ന്‌ ഡണ്‍ലോഡ്‌
ചെയ്യുവാനും എപ്പോള്‍ വേണമെങ്കിലും ഉപയോഗിക്കുവാനും സാധിക്കുന്നു. ഉള്ളടക്ക
ങ്ങള്‍ എളുപ്പത്തില്‍ ജനങ്ങളിലേക്ക്‌ എത്തിക്കുവാന്‍ മള്‍ട്ടി മീഡിയ ഉള്ളടക്കങ്ങള്‍ വഴി
സാദ്ധ്യമാക്കുന്നു. സാമ്പ്രദായിക ക്ലാസ്‌ മുറികളില്‍ അസാധ്യമായത്‌ കൃത്യമായി നിര്‍മിച്ച്‌
കാണിക്കുവാനും ഇത്‌ വഴി സാധ്യമാകുന്നു. കേരള സര്‍ക്കാരിന്റെ MAW പോര്‍ട്ടല്‍ ഇ.
കണ്ടന്റീന്‌ ഒരു ഉദാഹരണമാണ്‌. (www. samagra. kite. kerala.gov.in)

യ, വിദ്യാഭ്യാസ ടി വി ചാനലുകര്‍ (Educational TV Channels)

ഇ-പഠനം സാധ്യമാക്കുന്നതിന്‌ നിരവധി ടി വി ചാനലുകളും വെബ്ചാനലുകളും ലഭ്യ
മാണ്‌. ഈ ചാനലുകള്‍ ഉപയോഗിച്ച്‌ വിവിധ വിഷയങ്ങളിലെ ക്ലാസുകള്‍, വിദഗ്ധരുമാ
യി നടത്തിയ അഭിമുഖങ്ങള്‍, ലാബുകളില്‍ നടത്തിയ പരീക്ഷണങ്ങള്‍ എന്നിവ സംപ്രേ
ഷണം ചെയ്യുവാന്‍ സാധിക്കുന്നു. ഇവയില്‍ ചില ചാനലുകള്‍ ഇന്റര്‍നെറ്റിലും ലഭ്യമാണ്‌.
ദൂരദര്‍ശന്റെ വ്യാസ്‌, കേരളാ ഗവണ്‍മെന്റിന്റെ വിക്ടേഴ്‌സ്‌ തുടങ്ങിയവ വിദ്യാഭ്യാസ ടെലി
വിഷന്‍ ചാനലുകള്‍ക്ക്‌ ഉദാഹരണങ്ങളാണ്‌.

13. ഉ- പഠനത്തിന്റെ 6208240 (Advantages of e-Learning)

ഇ-പഠനത്തിന്‌ ധാരാളം മേന്‍മകളുണ്ട്‌. അവ താഴെ കൊടുത്തിരിക്കുന്നു.

© വിദൂര സ്ഥലങ്ങളിലുള്ള വിദ്യാര്‍ത്ഥികള്‍ക്ക്‌ വൈവിധ്യമാര്‍ന്നതും ഗുണമേന്‍മയുള്ള
തുമായ വിവിധ വിഷയങ്ങളിലുള്ള കോഴ്സുകള്‍ ഇ-പഠനം വഴി പഠിക്കുവാന്‍ കഴി
യുന്നു.

© ഇ-പഠനത്തിന്‌ ചെലവ്‌ കുറവാണ്‌. ഇത്‌ വഴി യാത്രാസമയവും, അധ്യാപക വേത
നവും ലാഭിക്കാം.

ഭ പരിമിതമായ സാമ്പത്തിക സ്ഥിതിയുളളവര്‍ക്ക്‌ പോലും കുറഞ്ഞ ചിലവുള്ള ഇ-പഠ
നം സാധ്യമാണ്‌.

© ഈ സംവിധാനം ഉപയോഗിച്ച്‌ തദ്ദേശീയവും, അന്തര്‍ദേശീയവുമായ സ്ഥാപനങ്ങ
ളില്‍ നിന്നും ഓണ്‍ലൈന്‍ കോഴ്‌സുകള്‍ പഠിക്കുന്നതിന്‌ അവസരം ലഭിക്കുന്നു.

€ സ്ഥലവും, സമയവും ഇ-പഠനത്തിന്‌ തടസമാകുന്നില്ല.
C. ഉ- പഠനത്തിന്റെ വെല്ലുവിളികള്‍ (Challanges to e-Learning)
ഇ-പഠനം നേരിടുന്ന ചില വെല്ലുവിളികള്‍ താഴെ പറയുന്നവയാണ്‌.

© അധ്യാപകരും വിദ്യാര്‍ത്ഥികളും തമ്മില്‍ മുഖാമുഖമുള്ള പഠനം സാധ്യമല്ല.

© അടിസ്ഥാന സാകര്യങ്ങളുടെ പരിമിതി കാരണം അധ്യാപകരും വിദ്യാര്‍ത്ഥികളും
തമ്മിലുള്ള ഇടപെടലുകള്‍ പരിമിതപ്പെടുത്തുന്നു.

© ഉപകരണങ്ങളുടെയും സാങ്കേതികവിദൃയുടെയും (കമ്പ്യൂട്ടറും വേഗതയേറിയ ഇന്റര്‍
നെറ്റും) ആവശ്യകത ഇ-പഠനത്തിന്‌ തടസമാകുന്നു.

° നിരന്തരമായ പ്രോത്സാഹനം ലഭിക്കേണ്ട വിദ്യാര്‍ത്ഥികള്‍ക്ക്‌ അത്‌ വേണ്ട രീതിയില്‍
ലഭിക്കാതെ പോകുന്നു.

e ലബോറട്ടറികളുടെ അഭാവം കാരണം പ്രായോഗിക പഠനത്തെ പരിമിതപ്പെടുത്തു
ന്നു.

D. ഉ- പഠനത്തിന്‌ പ്രയോജനകരമായ വെബ്‌ സൈറ്റുകള്‍ (Useful e-Learning Website)

ഇ-പഠനത്തിന്‌ ഉപകരിക്കുന്ന വെബ്സൈറ്റുകളുടെ ഒരു പട്ടിക 10.3 ല്‍ സംഗ്രഹിച്ചിരി
ക്കുന്ന ചിത്രം 10.6 ല്‍ ഇഗ്നോയുടെ (ഇന്ദിരാഗാന്ധി നാഷണല്‍ ഓപ്പണ്‍ യൂണിവേഴ്‌
സിറ്റി) പ്രധാന പേജാണ്‌ കാണിച്ചിരിക്കുന്നത്‌.

www.ignouonline.ac.in വിവിധ കോഴ്‌സുകളില്‍ വിദുര വിദ്യാഭ്യാസം നല്‍കുന്ന ഓഷണ്‍ യുണി
വേഴ്‌സിറ്റികളില്‍ ഒന്നായ ഇന്ദിരാഥാന്ധി ഓഷണ്‍ യുണിവേഴ്‌സിറ്റിയുടെ
ADEA വെബ്സൈറ്റാണിത്‌.

www.nptel. iitm.ac.in
കളും വീഡിയോകളും തയ്യാറാക്കി ഓണ്‍ലൈനായി കോഴ്‌സുകള്‍ നല്‍

കുന്ന നാഷണല്‍ പ്രോദ്രാം ഓണ്‍ ടെക്നോളജി എന്‍ഹാന്‍സ്ഡ്‌ ലേ
ിങ്ങിന്റെ വെബ്സൈറ്റാണിത്‌.

നാഷണല്‍ കണ്‍സില്‍ ഓഫ്‌ എഡ്യുക്കേഷണല്‍ റിസേര്‍ച്ച്‌ ആന്‍ഡ്‌ os
യിനിങ്ങിന്റെ വെബ്സൈറ്റാണിത്‌. വിവിധ പഠനസഹായികളും, സംശയ
നിവാരണ സാല്രരികളും ഹിന്ദി, ഉംഗ്ലീഷ്‌ എന്നീ ഭാഷകളില്‍ ഈ വെബ്‌
സൈറ്റില്‍ ഉള്‍ക്െടുത്തിയിരിക്കുന്നു.

മുംബൈ ഐ.ഐ.ടിയുടെ ഒരു സംരദമാണിത്‌. ഉവ സ്പോക്കണ്‍ ട്യു
ട്രോറിയല്‍സ്‌ വഴി സോഫ്റ്റ്വെയര്‍ പരിരീലനം സാധ്യമാക്കുന്നു. എല്ലാ
കോഴ്‌സുകളും കേന്ദ്ര സര്‍ക്കാരിന്റെ പുര്‍ണ്ണസഹായത്തോടുകുടി സൌ
ഇന്യമായി നടത്തകെടുന്നു.

വെബ്സൈറ്റുകള്‍ നിര്‍മിക്കുന്നതിനാവര്യമായ HTML, CSS, JavaScript,
PHP, SQL, JQuery തുടങ്ങിയവ പഠിക്കുന്നതിന്‌ ആവര്യമായ പഠനസഹാ
യികളും സംരയനിവാരണ 221614830 w3schools ല്‍ ലദ്യമാണ്‌.
OWANG കമ്യൂണിറ്റി ഫണ്ദേഷന്‍ സഹായത്തോടുകൂടി പ്രവര്‍ത്തിക്കു
നന ഒരു വെബ്സൈറ്റാണ്‌ gcflearnfree.org. ഗണിതം, രാസ്ത്രം, സാ
്കേതികവിദ്യ, ഉംഗ്ലീഷ്‌ മുതലായ വിഷയങ്ങളിലെ പാഠദാമങ്ങള്‍ വളരെ
ലളിതമായി ഉതില്‍ കൊടുത്തിരിക്കുന്നു. ആര്‍ക്കും എവിടെ വൈദ
ര്ധ്യവും അറിവുടനേടുന്നതിന്‌ ഉത്‌ സഹായിക്കുന്നു.

www.ncert.nic.in

www.spoken_tutorial.org

www.w3schools.com

www.gcflearnfree. org

പട്ടിക 12:3 ചില D-ntoM വെബ്‌മൈറ്റുക

12. വിവര ആശയവിനിമയ സാങ്കേതികവിദ്യയും സമുഹവും:

allo. 12.6IGNOU വെഖ്‌മൈറ്റിമ്റി പഥാനപേജ്‌.

www. ignouonline.ac.in

ഭാരത സര്‍ക്കാരിന്റെ കീഴില്‍ പ്രവര്‍ത്തിക്കുന്ന ഒരു ഓപ്പണ്‍ സര്‍വ്വകലാശാലയാ
ണ്‌ ഇഗ്നോ (ഇന്ദിരാഗാന്ധി നാഷണല്‍ ഓപ്പണ്‍ യൂണിവേഴ്‌സിറ്റി). ഈ വെബ്‌
സൈറ്റിലൂടെ eGyankosh പോലുളള മികച്ച സേവനങ്ങള്‍ നല്‍കിവരുന്നു. പഠന
കുറിപ്പുകളുടെയും വീഡിയോകളുടെയും ഒരു ഡിജിറ്റല്‍ കലവറയാണ്‌ eGyankosh. ഗ്യാന്‍ദര്‍
ശന്‍ (Gyandarshan), ഗ്യാന്‍വാണി (Gyanvani), എഡ്യുസാറ്റ്‌ (EDUSAT) മുതലായ വിദ്യാഭ്യാസ
ചാനലുകളും ഈ വെബ്സൈറ്റ്‌ ഉപയോഗിച്ച്‌ സംപ്രേഷണം ചെയ്യുന്നു. ഇത്‌ കൂടാതെ സര്‍
വൃകലാശാല നടത്തിവരുന്ന എല്ലാ ഓണ്‍ലൈന്‍ പ്രോഗ്രാമുകളും സാങ്കല്‍പ്പിക ക്ലാസ്‌ മുറി
കളിലൂടെ ലഭ്യമാണ്‌.

സാ
‘Accessing 1 ടിം, Individuals ററ agi z

ഡിപി

[
Sette Meeting Centenary Hace Wide (9 Re 208)
നി]

ന വംശം 2009
ഷം 2]

www.nptel.iitm.ac.in
നാഷണല്‍ പ്രോഗ്രാം ഓണ്‍ ടെക്നോളജി എന്‍ഹാന്‍സ്ഡ്‌ ലേണിങ്ങ്‌ എന്നതിന്റെ
ചുരുക്കപേരാണ്‌ NPTEL. ഇത്‌ ഏഴ്‌ ഐ.ഐ.ടികളുടെയും ഐ.ഐ.എസ്‌.സിയു
ടെയും സംയുക്ത സംരംഭമാണ്‌. എഞ്ചിനിയറിങ്ങ്‌, സയന്‍സ്‌ വിഷയങ്ങള്‍ക്ക്‌ ആ
വശ്യമായ പഠന സാമഗ്രികള്‍ നിര്‍മ്മിക്കുക എന്നതാണ്‌ ഇതിന്റെ ലക്ഷ്യം. ഇത്ത
രം വെബ്സൈറ്റുകള്‍ വെബ്‌ അധിഷ്ഠിത പഠന സാമ്രഗികള്‍ നിര്‍മ്മിക്കുകയും അവ സജ
നയമായി ലഭ്യമാക്കുകയും ചെയ്യുന്നു. വീഡിയോ ഉള്‍പ്പെടുത്തികൊണ്ടുള്ള അധ്യാപനവും
ഇത്‌ വഴി സാധ്യമാണ്‌.

കമ്പ്യുട്ടര്‍ സ

സ്വയം വിലയിരുത്താം

1. ഉന്റര്‍നെറ്റ്‌ ഉപയോിച്ച്‌ രണ്ടോ അതിലധികമോ വ്യക്തികള്‍ തമില്‍ ടെക്സ്റ്റ്‌ രൂപത്തിലുള്ള
സന്ദേരങ്ങള്‍ കൈമാറുന്ന രീതിയാണ്‌.................

2. വേറിട്ടു നില്‍ക്കുന്നത്‌ ഏത്‌?
a. ഉ-ബുക്ക്‌ റീഡര്‍ b. ഉ- ടെക്സ്റ്റ്‌
c. ടെലിവിഷന്‍ ചാനല്‍ 6. ഉ- ബിസിനസ്‌

3. ഉ.ടെക്സ്റ്‌ നിര്‍വചിക്കുക.

4. ഇ.-ലേണിഞ്ങ്‌ ഉപകരണത്തിന്‌ ഒരു ഉദാഹരണം നല്‍കുക?

12.2 വിവരങ്ങളുടെ സുരക്ഷിതത്വം (Information security)

ഇന്നത്തെ കാലത്ത്‌ ആശയവിനിമയം, സാധനങ്ങള്‍ വാങ്ങിക്കല്‍, ബാങ്കിങ്‌ എന്നിങ്ങനെ
യുള്ള എല്ലാവിധ പ്രവര്‍ത്തനങ്ങളും ഇന്റര്‍നെറ്റിലൂടെ നിര്‍വഹിക്കപ്പെടുന്നു. ഇങ്ങനെ
യുള്ള പ്രവര്‍ത്തനങ്ങള്‍ നിര്‍വഹിക്കപ്പെടുമ്പോള്‍ കമ്പ്യൂട്ടറുകള്‍ തമ്മില്‍ വിവരങ്ങള്‍
കൈമാറ്റം ചെയ്യപ്പെടുന്നു. കമ്പ്യൂട്ടറുകള്‍ തമ്മില്‍ കൈമാറ്റം ചെയ്യപ്പെടുന്ന വിവരങ്ങളുടെ
സുരക്ഷിതത്വം ആശങ്ക ഉണ്ടാക്കുന്നതാണ്‌. ഈ ഭാഗത്ത്‌ സൈബര്‍ സുരക്ഷ, പകര്‍പ്പവ
കാശം, വ്യാപാരമുര്ര ലംഘനങ്ങള്‍, സൈബര്‍ കുറ്റകൃത്യങ്ങള്‍ എന്നിങ്ങനെ ഇന്റര്‍നെറ്റുപ
യോഗിക്കുമ്പോള്‍ ശ്രദ്ധിക്കേണ്ട കാര്യങ്ങളെക്കുറിച്ച്‌ വിശദമായി ചര്‍ച്ച ചെയ്യുന്നു.

12.2.1 ബാദ്ധിക സ്വത്തവകാരം (Intellectual Property Right)

സംഗീതം, സാഹിത്യം, aNlMalM, നൂതനമായ കണ്ടുപിടുത്തങ്ങള്‍, ഡിസൈനിംഗ്‌, സോ
ഫ്റ്റ്വെയര്‍ വികസനം എന്നീ മേഖലകളില്‍ ധാരാളം പേര്‍ സൃഷ്ടിപരമായ പ്രവര്‍ത്തന
ങ്ങള്‍ നിര്‍വഹിച്ചു പോരുന്നു. ധാരാളം സമയവും കഠിനാധ്വാനവും ഇവര്‍ അതിനായി
ഉപയോഗിക്കുന്നു. ഇങ്ങിനെ ഉണ്ടാകുന്ന അറിവുകളെയും കണ്ടെത്തലുകളെയുമാണ്‌
ബദദ്ധിക സ്വത്ത്‌ എന്ന്‌ പറയുന്നത്‌. അനുവാദമില്ലാതെ ഒരാളുടെ ആശയങ്ങള്‍ മറ്റൊരാള്‍
എടുക്കുന്നത്‌ നീതിക്കു നിരക്കാത്തതാണ്‌. ഇങ്ങനെയുള്ള ബൌദ്ധിക അറിവുകള്‍ വിക
സിപ്പിക്കുന്നവര്‍ക്ക്‌ അതിന്റെ ആനുകൂല്യം ലഭിക്കണം. അതുകൊണ്ട്‌ ഇവ സംരക്ഷിക്കേണ്ട
തുണ്ട്‌. 1883ലെ പാരീസ്‌ കണ്‍വെന്‍ഷനിലാണ്‌ ബൌദ്ധിക സ്വത്തവകാശത്തിന്റെ പ്രാധാന്യം
തിരിച്ചറിഞ്ഞത്‌.

1886ല്‍ ഉണ്ടായ ബേണ്‍ (131411: ) കണ്‍വെന്‍ഷനിലും അനുബന്ധമായ നിയമ നിര്‍മ്മാണം
നടത്തുകയുണ്ടായി. രണ്ട്‌ ഉടമ്പടികളുടെയും കാര്യനിര്‍വഹണം നടത്തുന്നത്‌ വേള്‍ഡ്‌
ഇന്നലെക്ചവല്‍ പ്രോപ്പര്‍ട്ടി ഓര്‍ഗനൈസേഷന്‍ (WIPO) ആണ്‌. WIPO, 1960 ല്‍ യുനൈറ്റഡ്‌
നേഷന്റെ (UN) ആഭിമുഖ്യത്തില്‍ സ്ഥാപിക്കപ്പെട്ടു. ലോകത്താകമാനമുള്ള ബൌദ്ധിക
സ്വത്തുക്കളെയും അതിന്റെ അവകാശികളെയും കണ്ടെത്തി സംരക്ഷിക്കുക എന്നതാണ്‌
WIPO യുടെ ദൌത്യം. ൯ഠറയുടെ അടയാളചിഹ്നം ചിത്രം 10.5 ല്‍ കൊടുത്തിരിക്കുന്നു.

ബൌദ്ധിക സ്വത്തവകാശം എന്നത്‌ ഭൂമിക്ക്‌ മേലുള്ള അവകാശം, വീടിന്‌ മേലുള്ള അവ
കാശം എന്നിങ്ങിനെ മറ്റേതൊരു അവകാശവുംപോലെ തന്നെയാണ്‌. ഒരു പ്രത്യേക
കാലയളവിലേക്ക്‌ ഒരാള്‍ക്ക്‌ അയാളുടെ കണ്ടെത്തലിന്റെ മുകളില്‍ പൂര്‍ണമായ അവകാശം
നല്‍കുന്നു. ഒരാള്‍ക്ക്‌ തന്റെ കണ്ടുപിടുത്തത്തിലൂടെയോ സൃഷ്ടിയിലൂടെയോ സാമ്പ
ത്തിക നേട്ടം ഉണ്ടാകുന്നതിനും, അംഗീകാരം ലഭിക്കുന്നതിനും IPR ആളുകളെ പ്രാപ്തരാ
ക്കുന്നു. IPR ഉടമകള്‍ക്ക്‌ തങ്ങളുടെ സൃഷ്ടികള്‍ പണത്തിനു പകരമായി നല്‍കാനും
സാധ്യമാക്കുന്നു. കമ്പനി അവര്‍ക്ക്‌ ലഭിക്കുന്ന അവകാശം വിപണിയിലെത്തിക്കുകയും

12. വിവര ആശയവിനിമയ സാങ്കേതികവിദ്യയും സമുഹവും:

ചെയ്യുകയും ഈ നവ സൃഷ്ടിയെ സമൂഹത്തില്‍ വില്‍ക്കുകയും പ
ചെയ്യുന്നു. ഇത്തരത്തില്‍ ബൌദ്ധിക സ്വത്തവകാശിയും കമ്പനിയും നി
സമൂഹവും സൃഷ്ടിയില്‍ നിന്ന്‌ ആനുകൂല്യം കൈപ്പറ്റുന്നു. യുണൈ
QU നേഷന്‍സും (UN) മിക്കവാറും എല്ലാ രാജ്യങ്ങളും നവസൃഷ്‌
ടികളെ പ്രോത്സാഹിപ്പിക്കുന്നതിനായി ബരദ്ധിക സ്വത്തവകാശ
ത്തെയും പ്രോത്സാഹിപ്പിക്കുന്നു. ആ
ഓരോ രാജ്യത്തിനും അതിന്റേതായ രീതിയിലുള്ള ബൌദ്ധിക WI P ro)

സ്വത്തവകാശ രജിസ്ട്രേഷന്‍ സംവിധാനങ്ങളുണ്ട്‌. വ്യാപാരമുദ്ര,
alto. 12.8: WIPO

വ്യാവസായികരുപരേഖ മുതലായവക്ക്‌ WIPO ഒരു അന്താരാഷ്ട
യുടെ കേമാ

രജിസ്‌ട്രേഷന്‍ സംവിധാനമായി പ്രവര്‍ത്തിക്കുന്നു. WIPO യുടെ
നിയമം എല്ലാ അംഗ രാജ്യങ്ങള്‍ക്കും ബാധകമാണ്‌. ബൌദ്ധിക സ്വത്തവകാശത്തെ രണ്ടായി
തരംതിരിക്കുന്നു- വ്യവസായിക സ്വത്തവകാശം, പകര്‍പ്പവകാശം.

A) വ്യാവസായിക സ്വത്ത്‌ (Industrial property)

Or വ്യവസായം, വാണിജ്യം, കാര്‍ഷികോല്‍പ്പന്നങ്ങള്‍ എന്നിവയെ
Nig സംബന്ധിക്കുന്നതാണ്‌ വ്യാവസായിക സ്വത്ത്‌. കണ്ടെത്തലു
കള്‍, വ്യാപാരമുദ്രകള്‍, വ്യവസായരൂപരേഖകള്‍, ഭാമശാസ്ത്ര

INTELLECTUAL
PROPERTY INDIA പരമായ സൂചകങ്ങള്‍ എന്നിവ ഈ നിയമ പ്രകാരം സംരക്ഷി
ചിത്രം. 12.9: IP India ക്കപ്പെടുന്നു. ഇന്ത്യയില്‍ MIVAIAMITOAAIV കേന്ദ്ര വ്യവ
യുടെ ലോഗോ സായ വകുപ്പിന്റെ കീഴിലുള്ള കണ്‍ട്രോളര്‍ ജനറല്‍ ഓഫ്‌ പ്റ്റന്റ്‌
ഡിസൈന്‍സ്‌ ആന്‍ഡ്‌ ട്രേഡ്മാര്‍ക്സില്‍ രജിസ്റ്റര്‍ ചെയ്യാവുന്ന
താണ്‌. ബൌദ്ധിക സ്വത്തവകാശത്തിന്റെ അടയാള ചിഹ്നം ചിത്രം 10.6 ല്‍ കാണിച്ചിരിക്കുന്നു.

കുത്തകാവകാശം (Patents): ഒരു കണ്ടുപിടുത്തത്തിന്റെ മേല്‍ അത്‌ കണ്ടുപിടിക്കുന്ന
വ്യക്തിക്ക്‌ നല്‍കുന്ന പരിപൂര്‍ണമായ അവകാശമാണ്‌ കുത്തകാവകാശം. കണ്ടുപിടുത്ത
മെന്നാല്‍ ഒരു പുതിയ ഉല്‍പ്പന്നമോ, ഒരു കണ്ടെത്തലിനു സഹായിക്കുന്ന പ്രരക്രിയയോ
ആകാം. ഒരു നിശ്ചിത കാലയളവിലേക്കാണ്‌ കണ്ടുപിടിക്കുന്ന ആള്‍ക്ക്‌ അയാളുടെ ഉല്‍
പ്പന്നത്തിന്റെ മേല്‍ നിയമാധികാരമുള്ളത്‌. കുത്തകാവകാശം ലഭിക്കാന്‍ താഴെ പറയുന്ന
നിബന്ധനകള്‍ പാലിക്കണം.

© ഒരു ്രരരിയയുമായോ ഉല്‍പ്പന്നവുമായോ ബന്ധപ്പെട്ടിരിക്കണം
€ഭ പുതിയതായിരിക്കണം

ഭ കണ്ടെത്തലിനായുള്ള ഒരു ഘട്ടം അടങ്ങിയിരിക്കണം

€ വ്യാവസായികോപയോഗത്തിന്‌ അനുയോജ്യമാകണം

€ മറ്റുള്ളവര്‍ക്ക്‌ ഉപ്ദ്രവകരമായിത്തീരുന്നതൊന്നും വികസിപ്പിക്കരുത്‌.

കുത്തകാവകാശ സംരക്ഷണമെന്നാല്‍ ഒരു ഉലപന്നവും ഉടമസ്ഥന്റെ /യുടെ അനുവാദം
കൂടാതെ ഉണ്ടാക്കാനോ ഉപയോഗിക്കാനോ വിതരണം ചെയ്യാനോ വില്പന നടത്താനോ
പാടില്ലെന്ന നിയമ വ്യവസ്ഥയാണ്‌. ഒരു കണ്ടുപിടുത്തം മറ്റുള്ളവര്‍ എങ്ങനെ ഉപയോഗിക്ക
ണമെന്ന്‌ തീരുമാനിക്കാനുള്ള അവകാശം കുത്തകാവകാശിക്ക്‌ ലഭിക്കുന്നു. ഉടമ, തന്റെ കണ്ടു

അജാത

ടം . L. JUDBON.
OLAS? LOOKER OB UNLOCKER TOR SHOES.

പിടുത്തത്തിന്റെ അവകാശം മറ്റൊരാള്‍ക്ക്‌ നല്‍കിയാല്‍ wa. fase? Patented Aegsid, i663.

പിന്നീട്‌ അയാള്‍ക്കായിരിക്കും അതിന്റെ കുത്തകാവകാശം.
കുത്തകാവകാശത്തിനുള്ള അപേക്ഷ ലഭിക്കുന്നത്‌ മുതല്‍
20 വര്‍ഷത്തേക്കാണ്‌ ഇന്ത്യയില്‍ ഇതിന്റെ കാലാവധി.
കുത്തകാവകാശ കാലാവധി കഴിഞ്ഞാല്‍ സുരക്ഷിതത്വം
അവസാനിക്കുകയും എല്ലാവര്‍ക്കും സൌജന്യമായി കണ്ടു
പിടുത്തം ഉപയോഗിക്കുകയും ചെയ്യാം. allo 10.7ല്‍

[ =" _
കുടുക്കിനുള്ള (zipper) കുത്തകാവകാശം വിശദമായി ക്‌ & ശ്‌. &

Fig

vign

ചേര്‍ത്തിരിക്കുന്നു.

വ്യാപാരമുരദ (Trademark): ചില സാധനങ്ങളെ തിരിച്ച
റിയുന്നതിനോ, ചില കമ്പനികളോ വ്യക്തികളോ നല്‍
കുന്ന സേവനങ്ങളെ പ്രത്യേകമായി തിരിച്ചറിയുന്ന
തിനോ ഉപയോഗിക്കുന്ന പ്രത്യേക മുശ്രയാണിത്‌. ഇത്‌ ഒരു ഉല്‍പ്പന്നത്തെയോ സേവന
ത്തെയോ തിരിച്ചറിയാന്‍ സഹായിക്കുന്ന പേരോ, അടയാള ചിഹ്നമോ, പ്രതീകമോ ആകാം.
ഉല്‍പ്പന്നങ്ങളെ തിരിച്ചറിയുവാന്‍ വ്യാപാരമുശ്രയുടെ ഉടമയ്ക്ക്‌ അത്‌ ഉപയോഗിക്കാന്‍
അധികാരമുണ്ട്‌. ഉപയോക്താക്കള്‍ക്ക്‌ അത്‌ തിരിച്ചറിയു
esx Vad LY വാനും ഉല്‍പ്പന്നത്തെയോ സേവനത്തെയോ വിലയ്ക്ക്‌
വാങ്ങുവാനും സാധിക്കുന്നു. വ്യാപാരമുദ്ര രജിസ്റ്റര്‍ ചെയ്‌
൫ BSNL <p തിരിക്കണം. 10 വര്‍ഷത്തേക്കാണ്‌ ആദ്യ കാലാവധി.
ov TATA. തുടര്‍ന്ന്‌ ഇവ പുതുക്കാം. ഒരു വ്യക്തിയോ കമ്പനിയോ
൫ Infosys വ്യാപാരമുര്ര ഉപയോഗിക്കുന്നുവോ എന്ന്‌ കണ്‍ട്രോളര്‍
$ ജനറല്‍ ഓഫ്‌ പ്പ്റന്റ്‌ ഡിസൈന്‍സ്‌ ആന്‍ഡ്‌ asus
Reliance മാര്‍ക്കിലൂടെ (http://ipindia-online.gov.in ) അന്വേഷണം
നടത്തി തിരിച്ചറിയാന്‍ സാധിക്കും. വ്യാപാരമുര്ര രജിസ്‌
Amul ട്രേഷന്‍ അതാത്‌ രാജ്യങ്ങള്‍ക്ക്‌ മാധ്രം ബാധകമാണ്‌.
ചിത്രം. 12.7: (്രശര്ധ്തമായ ചിത്രം 10.8ല്‍ ഇന്ത്യയിലെ ചില പ്രശസ്തമായ വ്യാപാ
വ്യാപാ മു(കേര്‌ രമുധ്രകള്‍ കാണിച്ചിരിക്കുന്നു.

alto. 12.10:
MIMO CHR ഫേസ്‌

വ്യാവസായിക രൂപരേഖ (Industrial designs): ഒരു വസ്തുവിന്റെ ആലങ്കാരികമോ
സാന്ദര്യപരമോ ആയ സ്വഭാവ സവിശേഷതകള്‍ ലം

പ്രതിപാദിക്കുന്നതാണ്‌ വ്യാവസായിക രൂപരേഖ. ഒരു
വസ്തുവിന്റെ ത്രിമാന സവിശേഷതകളായ ആകൃതി, ഉപരി
തലം എന്നിവയും ദ്വിമാന സവിശേഷതകളായ മാതൃകം
വരകള്‍, നിറങ്ങള്‍ എന്നിവയുമൊക്കെ ഈ രൂപ
കല്പനയില്‍ ഉൾപ്പെട്ടേക്കാം. പ്രവര്‍ത്തനപരമായ സവിശേ
ഷതകള്‍ക്കപ്പുറം വസ്തുക്കളുടെ ദൃശ്യപരമായ രൂപഘടനയെ

വ്യാവസായിക രൂപരേഖ അവകാശം സംരക്ഷിക്കുന്നു.
വൈവിധ്യമാര്‍ന്ന വ്യവസായ ഉല്‍പ്പന്നങ്ങളിലും കരക
ശല വസ്തുക്കളിലും, മെഡിക്കല്‍ ഉപകരണങ്ങള്‍, ആഭര

Coca-Cola bottle

ചിതം. 12.12: (ate WOaIa
AYIUTIIONA ദുപരഖകള്‍

12. വിവര ആശയവിനിമയ സാഭ്കേതികവിദ്യയും സമുഹവും

ണങ്ങള്‍, വാച്ചുകള്‍, വാഹനങ്ങള്‍, വസ്ത്ര രൂപകല്പനകള്‍ എന്നിവയിലും വ്യാവസായിക
രൂപരേഖ ഉപയോഗിക്കപ്പെടുന്നു. കൊക്കക്കോള കുപ്പിയുടെയും, ഐ ഫോണിന്റെയും
രജിസ്റ്റര്‍ ചെയ്ത രൂപകല്‍പന ചിത്രം 10.9 ല്‍ കാണിച്ചിരിക്കുന്നു.

ഭാമശാസ്ര്രപരമായ സൂചകങ്ങള്‍ (Geographical indications)

ഭൂമിശാസ്ത്രപരമായ ഉത്ഭവം, ഗുണങ്ങള്‍ അല്ലെങ്കില്‍ ആ പ്രദേശ
ത്തിന്റെതായ ഒരു സല്‍പ്പേര്‌ ഉല്‍പ്പന്നങ്ങളില്‍ ഉപയോഗിക്കുന്ന
തിനെയാണ്‌ ഭാമശാസ്ത്രപരമായ സൂചകങ്ങള്‍ എന്ന്‌ പറയുന്നത്‌.
കാര്‍ഷികോല്‍പ്പന്നങ്ങള്‍ക്ക്‌ അവയുടെ ഉല്‍പ്പാദന സ്ഥലത്തിന്റെ
ഗുണങ്ങളോടൊപ്പം അവിടുത്തെ മണ്ണിന്റെയും കാലാവസ്ഥയു
ടെയും സ്വാധീനവും ഉണ്ടാകും. ഉത്ഭവ സ്ഥലം ഗ്രാമമോ നഗരമോ
ചില മേഖലകളോ രാജ്യമോ ആകാം. ആറമ്മുളക്കണ്ണാടിയും പാല
ക്കാടന്‍ മട്ട അരിയും കേരളവുമായി ബന്ധപ്പെട്ട ഭാമശാസ്ത്ര
പരമായ സുചകങ്ങള്‍ക്കുള്ള ചില പ്രശസ്തമായ ഉല്‍പ്പന്നങ്ങള്‍
ആണ്‌.

b) പകര്‍ഷവകാശം (Copyright)

ചിത്രം. 12.13: കേരളവു

ഒരു നിശ്ചിത കാലത്തേക്ക്‌ ഒരു സ്രഷ്ടാവിന്‌ തന്‍െറ സൃഷ്ടിയിന്മേ 279 ബ്ധക്കെ 69400)
ലുളള അവകാശമാണ്‌ പകര്‍പ്പവകാശം. പുസ്തകങ്ങള്‍, സംഗീ ൪/൫പമോയ രുചകങ്ങള്‍
തം, ചിത്രങ്ങള്‍, ശില്‌ പങ്ങള്‍, സിനിമ, പരസ്യം, കമ്പ്യൂട്ടര്‍ സോഫ്റ്റ്‌ വെയര്‍
തുടങ്ങിയവയിലുള്ള സൃഷ്ടിപരമോ ബരദ്ധികമോ കലാപരമോ ആയ പ്രവര്‍ത്തനങ്ങളുടെ
വൈവിധ്യത്തെ ബാധകമാക്കിയുള്ള അവകാശമാണിത്‌. സൃഷ്ടികളുടെ പുനരുല്‍പ്പാദനം,
പൊതുജനവുമായുള്ള ആശയവിനിമയം, അനുരൂപീകരണം, പരിഭാഷ എന്നിവയൊക്കെ
ഈ അവകാശത്തിന്റെ പരിധിയില്‍പ്പെടുന്നു. ഇന്ത്യയില്‍ 1958 ജനുവരിയിലാണ്‌
പകര്‍പ്പവകാശനിയമം - 1957 നിലവില്‍ വന്നത്‌. ഈ നിയമത്തില്‍ അഞ്ച്‌ പ്രാവശ്യം
ഭേദഗതി വരുത്തി. 2012 ല്‍ പകര്‍പ്പവകാശ സംരക്ഷണ നിയമത്തില്‍ ചില സുപ്രധാന
ഭേദഗതികള്‍ വരുത്തി. ഡിജിറ്റല്‍ പരിസ്ഥിതിയിലേക്കുള്ള ഈ നിയമത്തിന്റെ വ്യാപനം,
ഇന്റര്‍നെറ്റ്‌ സേവന ദാതാക്കളുടെ ബാധ്യതകള്‍, സംഗീത സംവിധായകര്‍ക്ക്‌ റോയല്‍റ്റി
ലഭിക്കുന്നതിനുള്ള അവകാശം ഉറപ്പാക്കല്‍, അംഗപരിമിതര്‍ ഏതെങ്കിലും തരത്തിലുള്ള
ഉല്പന്നമോ സേവനമോ ഉപയോഗിക്കുന്നത്‌ പകര്‍പ്പവകാശ സംരക്ഷണ നിയമത്തിന്റെ
പേരില്‍ തടയാതിരിക്കല്‍ എന്നിവയാണ്‌ ഭേദഗതികള്‍.

ഇന്ത്യന്‍ പകര്‍പ്പവകാശനിയമര്രകാരം, ഒരു പ്രവൃത്തി

അതിന്റെ സൃഷ്ടികര്‍മത്തില്‍ത്തന്നെ പകര്‍പ്പവകാശത്തില്‍ (൭
സ്വമേധയാ സംരക്ഷിക്കപ്പെടുന്നു. പകര്‍പ്പവകാശത്തിന്‌

എഴുത്തുകാരന്റെ മരണശേഷം 60 വര്‍ഷം വരെ നിയമ സാ

ധുത ഉണ്ടായിരിക്കും. പകര്‍പ്പവകാശ രജിസ്ട്രേഷന്‍ സുൃഷ്ടിപ

രമായ പ്രവര്‍ത്തനങ്ങള്‍ക്ക്‌ നിയമപരമായ പരിരക്ഷ നല്‍കുന്നു. Copyright Office

ഇത്‌ സ്രഷ്ടാവിന്‌ സൃഷ്ടിക്കുമേല്‍ നിയമപരമായ അവകാശം Government of India

നല്‍കിക്കൊണ്ട്‌ അത്‌ ഒരു MUDAIAMITHIAN മാറ്റുന്നു. ചിതം. 12.14: കോകിന്റ7്‌
ഓഫീ; ഉത്യയുഴെ ലോഗോ

ഞന്‌ അ

പകര്‍പ്പവകാശം ലഭിക്കുന്നതിന്‌ രജിസ്റ്റര്‍ ചെയ്യേണ്ട ആവശ്യമില്ല എന്ന വസ്തുത
ശ്രദ്ധിക്കേണ്ടതാണ്‌. ഇന്ത്യയിലെ പകര്‍പ്പവകാശ രജിസ്‌ട്രേഷന്‍ മാനവവിഭവവികസന
മന്ത്രാലയത്തിന്‌ കീഴിലുള്ള പകര്‍പ്പവകാശ കാര്യാലയമാണ്‌ കൈകാര്യം ചെയ്യുന്നത്‌.
ഇന്ത്യന്‍ കാര്യാലയത്തിന്റെ ഓഫീസിന്റെ ലോഗോ ചിത്രം 10.11 ല്‍ നല്‍കിയിരിക്കുന്നു.

പട്ടിക 10.2 ല്‍ ബൌദ്ധികസ്വത്തിന്റെ രജിസ്ദ്രേഷന്‍സ്ഥിതി വ്യക്തമാക്കാന്‍ ഉപയോഗിക്കുന്ന
വിവിധ ചിഹ്നങ്ങള്‍ കാണിച്ചിരിക്കുന്നു

ഒരു സൃഷ്ടിയുടെ പകര്‍പ്പവകാശ ഉടമകള്‍ക്ക്‌ ചുവടെ കൊടുത്തിരിക്കുന്ന പ്രവര്‍ത്തന
ങ്ങള്‍ക്ക്‌ അംഗീകാരം നല്‍കാനോ നിഷേധിക്കാനോ കഴിയും.

€ അച്ചടിച്ച രൂപവും ശബ്ദ റെക്കോര്‍ഡിങ്ങും ഉള്‍പ്പടെ എല്ലാ രൂപത്തിലുമുള്ള അതിന്റെ
പുനഃസൃഷ്ടി;

€ പൊതുവായ കാര്യനിര്‍വഹണവും പൊതുജനങ്ങള്‍ക്കുള്ള ആശയവിനിമയവും;
€ അതിന്റെ സംപ്രേഷണം;
* മറ്റു ഭാഷകളിലേക്കുള്ള വിവര്‍ത്തനം;

€ നോവലിനെ സിനിമയുടെ തിരക്കഥയാക്കി മാറ്റുന്നതു പോലെയുള്ള അനുരുപീകര
ണങ്ങള്‍.

ര്സഷ്ടരാക്കള്‍ തങ്ങളുടെ സൃഷ്ടികള്‍ സാമ്പത്തി
കനേട്ടത്തിനു വേണ്ടി വ്യക്തികള്‍ക്കോ, കമ്പനി
കള്‍ക്കോ വില്‍ക്കാറുണ്ട്‌. രജിസ്റ്റര്‍ ചെയ്ത വ്യാപാരമു(ദ ®

കമ്പ്യൂട്ടര്‍ സോഫ്റ്റ്വെറുകള്‍ (സോഴ്‌സ്‌ കോഡ്‌, രജിസ്റ്റര്‍ ചെയ്യാത്ത വ്യാപാരമുദ്ര 114
ഡാറ്റബേസ്‌, വെബ്‌ സൈറ്റുകള്‍ എന്നിവ) ഒരു
സാഹിത്യ സൃഷ്ടി പോലെ പകര്‍പ്പവകാശ

പകര്‍ഷവകാശം ©

¥ vy y !
ത്തിന്‌ വിധേയമാക്കാം. കമ്പ്യൂട്ടര്‍ സോഫ്റ്റ്വെ പടര്‍ഷവകാര ദെടക്കാര്‍ഡിങ്‌ ശബ്ദം +

യര്‍ പകര്‍പ്പവകാശത്തിനു കീഴില്‍ സംരക്ഷിക്ക പട്ടി 22.4 ബന്ധിഭ നുത്തവകാരത്തില്‍
പ്പേട്ടിട്ടുണ്ടെങ്കിലും ഇപ്പോള്‍ അവ കുത്തകബ ഉപോശിക്കുനന അമാളങ്ങര്‍

കാശം നേടിയെടുക്കുന്നു. സോഫ്റ്റ്വെയര്‍ വികസനം ഒരു വ്യവസായമായി കണക്കാ
ക്കപ്പെട്ടതും പകര്‍പ്പവകാശവുമായി താരതമ്യം ചെയ്യുമ്പോള്‍ കുത്തകാവകാശം മികച്ച
സംരക്ഷണം നല്‍കുന്നതും ഇതിനൊരു കാരണമാണ്‌. കുത്തകാവകാശ സംരക്ഷണത്തിന്‌
ആവശ്യമായ മാനദണ്ഡങ്ങള്‍ കര്‍ശനമാണ്‌ എന്നത്‌ ശ്രദ്ധിക്കേണ്ടതാണ്‌. പട്ടിക 10.3 ല്‍

അവകാശങ്ങളും അനുബന്ധ ബൌദ്ധിക സ്വത്തുക്കളും പ്രദര്‍ശിപ്പിച്ചിരിക്കുന്നു.

ബൌദ്ധിക സ്വത്തവകാശത്തിന്റെ രജിസ്ട്രേഷനിലെ വൃത്യാസങ്ങള്‍ പട്ടിക 10.4 ല്‍ കൊടു
ത്തിരിക്കുന്നു.

12. വിവര ആശയവിനിമയ സാങ്കേതികവിദ്യയും സമുഹവും:

കണ്ടുപിടുത്തം/പുതുമ കുത്തകാവകാരം
am + സവിദ്രേഷത വ്യാപാരമുദ്ര

ദൂപദേഖ
സാധനം ദുമിരാസ്ത്രപരമായ ഉരഅവം ദുമിരാസ്ത്രപരമായ സൂചകങ്ങള്‍

ഭാവനകള്‍ പകര്‍ഷ്വകാരം

പട്ടിക 2.5: MIRA ദൃത്തവകാരത്തിന്റെ അവകാമങ്ങശ്‌

പരാമര്‍ശിക്കുന്നു ഉല്‍ഷന്നം, പ്രക്രിയ പേര്‌, അടയാള ചിഹ്നം, സൃഷ്ടിപരമായ, ബുദ്ധിപരമായ അല്ലെങ്കില്‍
അടയാളങ്ങള്‍ കലാപരമായ പ്രവര്‍ത്തന രീതികള്‍

ലിക ഭവന്‍ കും

കാലാവധി 20 വര്‍ഷം 10 വര്‍ഷം ടടുവിലത്തെ എഴുത്തുകാരന്റെ മരണരേ
ഷം 60 വര്‍ഷം വരെ

ന നന്നി

പട്ടിക 12.6: MIRA ദ്യത്തവകാമത്തിമ്റെ ELIMESATIOL വൃതുമങ്ങള്‍്‌

12.2.2 അവകാശ കയ്യേറ്റം (Infringement)

അനുമതി കൂടാതെ കുത്തകാവകാശമോ, പകര്‍പ്പവകാശമോ, വ്യാപാരമുശ്രയോ ഉപയോഗി
ക്കുന്നത്‌ ബൌദ്ധിക സ്വത്തിന്മേലുള്ള കയ്യേറ്റമാണ്‌. ബൌദ്ധിക സ്വത്തിന്റെ സ്വഭാവം,
അധികാര പരിധി (രാജ്യങ്ങള്‍ തമ്മില്‍), പ്രവൃത്തിയുടെ സ്വഭാവം എന്നിവയുടെ അടി
സ്ഥാനത്തില്‍ ഇത്‌ പൌരാവകാശ നിയമത്തിന്റെയോ (ക്രിമിനല്‍ നിയമത്തിന്റെയോ
ലംഘനമായിരിക്കാം.

കുത്തകാവകാശമുള്ള ആളുടെ (patent holder) അനുമതിയില്ലാതെ കുത്തകാവകാശമുള്ള
കണ്ടുപിടുത്തം ഉപയോഗിക്കുകയോ വില്‍ക്കുകയോ ചെയ്യുന്നത്‌ കുത്തകാവകാശ കയ്യേറ്റ
മാണ്‌. ഗവേഷണാവശ്യങ്ങള്‍ക്ക്‌ വേണ്ടി കുത്തകാവകാശമുള്ള കണ്ടുപിടുത്തങ്ങള്‍ ഉപയോ
ഗിക്കുന്നതിന്‌ ധാരാളം രാജ്യങ്ങള്‍ അനുമതി നല്‍കുന്നു. മൊബൈല്‍ ഫോണ്‍ സാങ്കേതിക
വിദ്യയില്‍ ആപ്പിളും സാംസങ്ങും തമ്മിലുള്ള നിയമപരമായ തര്‍ക്കം കുത്തകാവകാശ
കയ്യേറ്റത്തിന്‌ ഒരുദാഹരണമാണ്‌.

ഒരാളുടെ വ്യാപാരമുദ്രയോട്‌ സാമ്യമുള്ള വ്യാപാരമുര്ര മറ്റൊരാള്‍ ഉപയോഗിക്കലാണ്‌
വ്യാപാരമു്ര കയ്യേറ്റം. ഇവിടെ രണ്ടു കക്ഷികളും ഉപയോഗിക്കുന്നത്‌ ഒരേ ഉല്‍പ്പന്നം
അഥവാ സേവനം തന്നെയായിരിക്കും. നിയമപരമായ ആനുകൂല്യം ലഭിക്കാന്‍ വ്യാപാര
QB രജിസ്റ്റര്‍ ചെയ്യണം. 11൨11195" എന്ന വ്യാപാര നാമം ഉപയോഗിച്ച്‌ ഒരു ചെറിയ
കമ്പനി മിഠായികള്‍ നിര്‍മിച്ചത്‌ 'HORLICKS' എന്ന വ്യാപാര നാമം ഉപയോഗിച്ചിരുന്ന
കമ്പനിയുടെ വ്യാപാര മുര്രാവകാശത്തിന്‍മേലുള്ള കയ്യേറ്റത്തിനുദാഹരണമാണ്‌.

പകര്‍പ്പവകാശ കയ്യേറ്റം എന്നത്‌ സൃഷ്ടാവിന്റെ അനുമതിയില്ലാതെ അയാളുടെ കൃതി
പുനഃസൃഷ്ടിക്കുകയോ വിതരണം ചെയ്യുകയോ പ്രദര്‍ശിപ്പിക്കുകയോ മാറ്റുകയോ പരിഭാ
ഷപ്പെടുത്തുകയോ ആണ്‌. ഇതിനെ സാഹിത്യ മോഷണം എന്ന്‌ വിളിക്കുന്നു.

കമ്പ്യുട്ടര്‍ സ

സോഫ്റ്റ്വെയറുകള്‍ നിര്‍മ്മാതാക്കളുടെ അനുവാദമോ, അംഗീകാരമോ കൂടാതെ മോഷ്ടിച്ച്‌
മറ്റു കമ്പ്യൂട്ടറുകളില്‍ അനധികൃതമായി കോപ്പി ചെയ്യുന്നതിനെ സോഫ്റ്റ്വെയര്‍ പൈറസി
(മോഷണം) എന്ന്‌ പറയുന്നു. ഒരു സംഗീതശകലം ഗാനരചയിതാവിന്റെയോ, കലാകാര
ന്റെയോ, ഗാനത്തിന്റെ പകര്‍പ്പവകാശമുള്ള കമ്പനിയുടെയോ അനുവാദമില്ലാതെ കോപ്പി
ചെയ്യുകയോ വിതരണം ചെയ്യുകയോ ചെയ്യുന്ന പ്രവര്‍ത്തനത്തെ മ്യൂസിക്‌ പൈറസി
എന്ന്‌ പറയുന്നു.

നിങ്ങളുടെ പുരോഗതി അറിയുക
1. മനസ്സിന്റെ സൃഷ്ഠി ______ എന്നറിയകെടുന്നു.
2 WIPO എന്നതിന്റെ പൂര്‍ണരൂപം എഴുതുക.

3. MIVA സ്വത്തവകാരത്തെ —__ എന്നും, —___ എന്നും രങായി
തരംതിരിക്കുന്നു.

4. കുത്തകാവകാശം എന്നത്‌ ________ പ്രത്യേകമായി നല്‍കിയ അവകാശമാണ്‌.

5 എന്നത്‌ ഒരു ഉല്‍ഷന്നമോ സേവനമോ തിരിച്ചറിയാനുള്ള അടയാളമാണ്‌
6. വ്യാവസായിക രൂപദരഖ എന്നാല്‍ എന്താണ്‌?

7. ഭാമശാസ്ത്രപരമായ സൂചകങ്ങളുടെ പ്രാധാന്യമെന്ത്‌?

12.2.3 സൈബര്‍ ഇടം (Cyber space)

DBIONQ}AO! ബന്ധിപ്പിച്ചിട്ടുള്ള കംപ്യൂട്ടര്‍ സംവിധാനങ്ങള്‍ സൃഷ്ടിച്ച ഒരു അയഥാര്‍ഥ
പരിതസ്ഥിതിയാണ്‌ സൈബര്‍ ഇടം. ഒരു പക്ഷേ, ഒരു സ്ഥലത്ത്‌ പല കാര്യങ്ങളും ചെയ്യാന്‍
കഴിയുന്ന ഒരു സ്രമ്പദായത്തെ സൂചിപ്പിക്കാനാണ്‌ ഈ പദം ഉപയോഗിക്കുന്നത്‌. സൈബര്‍
ഇടം നമ്മുടെ ജീവിതത്തില്‍ സ്വാധീനം ചെലുത്തുന്ന വിവിധ അവസരങ്ങള്‍ നമുക്ക്‌ ചര്‍ച്ച
ചെയ്യാം. ആശയവിനിമയത്തിനായി മുന്‍കാലങ്ങളില്‍ നിലവിലിരുന്ന പോസ്റ്റല്‍ സേവന
ത്തിന്റെ സ്ഥാനത്ത്‌ ഇന്ന്‌ ഇ-മെയില്‍ ഏറെ സ്വീകാര്യതയും നിയമസാധുതയും നേടിയി
രിക്കുന്നു. ഹയര്‍ സെക്കന്ററി വിദ്യാഭ്യാസ വകുപ്പില്‍ വിദ്യാര്‍ഥിപ്രവേശനം, പരീക്ഷ,
നാഷണല്‍ സര്‍വീസ്‌ സ്‌കീം, ഭരണനിര്‍വഹണം എന്നിവയെല്ലാം വെബ്സ്ൈറ്റിന്റെയും
ഇ-മെയിലുകളുടെയും സഹായത്തോടെയാണ്‌ നടക്കുന്നത്‌. സാധാരണ ജനങ്ങളില്‍
ഇന്റര്‍നെറ്റ്‌ പ്രശസ്തമായ ആശയവിനിമയ മാധ്യമമായി മാറിയിരിക്കുന്നു.

ഇന്ത്യയിലെ ഒരു മെട്രോ നഗരത്തില്‍ 2012 ഡിസംബറില്‍ ഓടിക്കൊണ്ടിരുന്ന ബസ്സിനു
ള്ളില്‍ വെച്ച്‌ ഒരു പെണ്‍കുട്ടി ശാരീരിക പീഡനത്തിനിരയായി. കുറച്ചു ദിവസങ്ങള്‍ക്കു
ശേഷം ആ കൂട്ടി മരണപ്പെട്ടു. ജീവിതത്തിന്റെ വിവിധ മേഖലകളിലുള്ളവര്‍ സാമൂഹിക
മാധ്യമങ്ങള്‍ വഴി ഇതിനെതിരെ ശക്തമായി പ്രതികരിച്ചു. ഇതിന്റെ ഫലമായി ലോക്സഭ
2013ല്‍ ലൈംഗികാതിക്രമങ്ങള്‍ക്ക്‌ എതിരെ The Criminal Law (Amendent) Act 2013 എന്ന
ശക്തമായ നിയമം കൊണ്ടുവന്നു. ഇന്റര്‍നെറ്റ്‌ ഉപയോഗിച്ച്‌ സാമൂഹിക മാധ്യമങ്ങള്‍ വഴി
സംഘടിപ്പിച്ച ഈ പ്രതിഷേധത്തിന്‌ സമൂഹത്തെ സ്വാധീനിക്കാനായി.

പണ്ട്‌ കടയില്‍ പോയി സാധനങ്ങള്‍ വാങ്ങിയിരുന്നതിന്‌ പകരം ഇന്റര്‍നെറ്റ്‌ വ്യാപാര
സൈറ്റുകള്‍ വഴി ഇന്ന്‌ സാധനങ്ങള്‍ വാങ്ങാവുന്നതാണ്‌. ഉല്‍പ്പന്നങ്ങളെക്കുറിച്ചുള്ള വിവ
രങ്ങള്‍ ഇത്തരം ഇ-വാണിജ്യ സൈറ്റുകള്‍ നല്‍കുന്നു. അനായാസമായി സാധനങ്ങള്‍

12. വിവര ആശയവിനിമയ സാഭ്കേതികവിദയയും സമുഹവും

വാങ്ങുന്നതിനുള്ള സൌകര്യം ഇതുവഴി സാധ്യമാകുന്നു. ഇന്റര്‍നെറ്റ്‌ ബാങ്കിങ്‌, ക്രെഡിറ്റ്‌
കാര്‍ഡ്‌, ഡെബിറ്റ്‌ കാര്‍ഡ്‌ എന്നിവ വഴി സാമ്പത്തിക വിനിമയങ്ങളും ലളിതമായി. എല്ലാ
സേവനങ്ങളും ഓണ്‍ലൈനാക്കി മാറ്റുവാന്‍ ഇന്റര്‍നെറ്റിന്റെ സഹായത്തോടെ ഇപ്പോള്‍
സാധിക്കുന്നു. ചിത്രം 12.12ല്‍ ചില ഇ-വാണിജ്യ വെബ്‌ സൈറ്റുകള്‍ കാണിച്ചിരിക്കുന്നു.

ഞ്ഞ =

ചിത്രം 12.12: ഇ-വാണിലു വെബ്സൈറ്റിന്‌ ഒരു HANES

ഇന്ന്‌ എല്ലാ ബാങ്കുകളും അവരുടെ ഉപയോക്താക്കള്‍ക്ക്‌ ഇന്റര്‍നെറ്റ്‌ ബാങ്കിങ്‌ സൌകര്യം
ഏര്‍പ്പെടുത്തിയിരിക്കുന്നു. സാമ്പത്തിക വിനിമയം നടത്തുവാനും, ടെലിഫോണ്‍ ബില്‍,
വൈദ്യുത ബില്‍, ഓണ്‍ലൈനായി വ്യാപാരം നടത്തല്‍, ട്രെയിന്‍ ടിക്കറ്റ്‌ ബുക്കിംഗ്‌,
സിനിമ ടിക്കറ്റ്‌ ബുക്കിംഗ്‌ എന്നിവയ്ക്കെല്ലാം ഇന്റര്‍നെറ്റ്‌ ബാങ്കിങ്‌ സൌകര്യം ഉപയോഗ
പ്പെടുത്തുന്നു. ഈ പ്രവര്‍ത്തനങ്ങള്‍ക്ക്‌ ബന്ധപ്പെട്ട ഓഫീസുകള്‍ സന്ദര്‍ശിക്കുന്നതുമായി
താരതമ്യം ചെയ്യുമ്പോള്‍ ഇന്റര്‍നെറ്റ്‌ ബാങ്കിങ്ങിലൂടെ സമയവും അധ്വാനവും ലാഭിക്കാന്‍
കഴിയുന്നു. അങ്ങനെ ബാങ്ക്‌: ഇടപാടുകളും ഇന്റര്‍നെറ്റിലൂടെ ലഭ്യമാകുന്ന ജനപ്രിയ സേവ
നമായി മാറി. ഒരു ഇന്റര്‍നെറ്റ്‌ ബാങ്കിങ്‌ വെബ്സൈറ്റ്‌ ചിത്രം 10.13 ല്‍ കാണിച്ചിരിക്കുന്നു.
കാലക്രമത്തില്‍ കൂടുതല്‍ സേവനങ്ങള്‍ ഓണ്‍ലൈനായി മാറിക്കൊണ്ടിരിക്കുന്നു.
വെബ്ദിലെ വിവിധ സേവനങ്ങള്‍ ലഭിക്കുന്നതിനായി ധാരാളം ആളുകള്‍ ഗണ്യമായ സമയം
ഇന്റര്‍നെറ്റിനു മുമ്പില്‍ വിനിയോഗിക്കുന്നു. ഇന്റര്‍നെറ്റ്‌ പലപ്പോഴും സൈബര്‍ ഇടം എന്നും
അറിയപ്പെടുന്നു. സൈബര്‍ ഇടത്തെ പ്രതീകാത്മകമായി ചിത്രം 10.14 ല്‍ കാണിച്ചിരി
ക്കുന്നു.

4 Ja stare wasn or nena ni aps eww onlinesbiccer Avy &

൭ പു

NEVER respond to any popup, email, SMS or phone call, no matter how
‘appealing or official looking, seeking your personal information such
Qs username, password(s), mobile number, ATM Card details, etc.

Such communications are sent or created by fraudsters to trick you into
parting with your credentials.

Do not use Internet Banking if your computer Is not free of malware
(Viruses, Trojans, etc)

PERSONAL BANKING ; CORPORATE BANKING ഇ ) OTHER SERVICES

E Comorare lanking application provides features, > SM Finder naw
; toadminister and manage ann ന്മ ഡാ ; ! Reprint Remittance torm MOPS
‘Our internet banking portal provides personal ; വം E+ SBICARD-SPECIAL OFFERS
Lauking verviews Ua gives you vomplete control വവ വചച

ചിത്രം 72.73: Hijéong ബാമുംഗ്‌ വെബ്‌മൈറ്റ്‌

ടാതെ റി

കമ്പ്യൂട്ടര്‍ നെറ്റ്വര്‍ക്കുകളിലൂടെ ആശയവിനിമയം നട
ത്തുന്ന ഒരു പ്രതീതി ലോകമാണ്‌ സൈബര്‍ ഇടം. വിവര
ങ്ങളുടെ പ്രധാന പാതയായ ഇവിടെ വ്ൃക്തിപരമായ
വിവരങ്ങള്‍ ശേഖരിക്കുകയും, ആശയങ്ങള്‍ വിനിമയം
നടത്തുകയും, പരസ്പരം സംവാദങ്ങളില്‍ ഏര്‍പ്പെടു
കയും, സാമൂഹിക സഹായം നല്‍കുകയും, വ്യാപാരം
നടത്തുകയും, വിനോദങ്ങളില്‍ ഏര്‍പ്പെടുകയും, ചര്‍ച്ച
കളില്‍ മുഴുകുകയും ചെയ്യുന്നു. സാമൂഹിക ഇടപെട
ലുകള്‍ക്ക്‌ ആധിപത്യമുള്ള ഒരു സ്ഥലമാണ്‌ സൈബര്‍
ഇടം. ഇഷ്ടാനുസരണം ഏതു പ്രവര്‍ത്തനത്തില്‍ ഏർപ്പെ
ടാനും എന്തും സ്വതന്ത്രമായി പ്രകടിപ്പിക്കാനുമുള്ള ഒരു അനിയ്ര്ത്രിത ഇലക്ട്രോണിക്‌
മാധ്യമായി ചിലര്‍ സൈബര്‍ ഇടത്തെ കാണുന്നു. അത്തരം പ്രവൃത്തികള്‍ മറ്റുള്ളവര്‍ക്ക്‌
പലപ്പോഴും ബുദ്ധിമുട്ടുകള്‍ സൃഷ്ടിക്കുകയും തെറ്റിലേക്ക്‌ നയിക്കുകയും ചെയ്യുന്നു.
അതിനാല്‍ ഇന്റര്‍നെറ്റ്‌ ഉപയോഗിക്കുന്ന ഒരു വ്യക്തി മറ്റുള്ളവര്‍ക്ക്‌ ഗുണകരമാകുന്ന
വിധത്തില്‍ നിയമങ്ങളും സദാചാരമുല്യങ്ങളും പാലിക്കേണ്ടതാണ്‌. നിയ്രത്രണരഹിതമായ
ഈ ഇടം കുറ്റവാളികള്‍ക്കും ലഭ്യമാണ്‌. സൈബര്‍ ഇടത്തിലെ ആശയവിനിമയം,
സാമ്പത്തിക ഇടപാടുകള്‍ മുതലായവ ദിനംപ്രതി വര്‍ദ്ധിക്കുന്നു. അതിനാല്‍ കുറ്റകൃത്യ
ങ്ങള്‍ക്കുള്ള മാധ്യമമായും ഇത്‌ മാറുന്നു. അതുകൊണ്ട്‌ തന്നെ സൈബര്‍ ഇടത്തിന്റെ
സുരക്ഷ ഗാരവമേറിയ പരിഗണനവിഷയമായി മാറിയിരിക്കുന്നു.

Ses5E5 22S
ചിത്രം 7074. saneué Dsawlod
പ്രതികാത്ഥക അവതണം

സൈബര്‍ ഉടം എന്ന പദം സൃഷ്ടിച്ചത്‌ കനേഡിയന്‍ രാസ്ത്രനോവല്‍ എഴു
ത്തുകാരനായ വില്യം രിബ്സണ്‍ ആണ്‌. അദ്ദേഹത്തിന്റെ ഹ്രസ്വ കഥയായ
ബേണിങ്‌ ട്്രോമില്‍ 1982ലാണ്‌ ഉത്‌ പരാര്‍രിച്ചിരിക്കുന്നത്‌. യഥാര്‍ഥ ലോക
ത്തില്‍ ഉല്ലാത്ത സംഭവങ്ങള്‍ അല്ലെങ്കില്‍ ഉടപാടുകള്‍ നടക്കുന്ന ഒരു ലോകത്തെ പ്രതിനി
ധാനം ചെയ്യാന്‍ അദ്ദേഹം അത്‌ ഉപയോഗിച്ചു. സൈബര്‍ ഉടം എന്നത്‌ പൊതുവായ ഒരു
മായാലോകഥാണ്‌ എന്ന്‌ അദ്ദേഹം വിര്വസിച്ചു. മായാദൃശ്യം എന്നത്‌ സൈബര്‍ ഉടത്തിന്റെ
ഉള്ളിലുള്ള ജീവന്റെ സ്വഭാവമാണ്‌ എന്ന്‌ രിബ്സണ്‍ പറയുന്നു.

12.2.4 സൈബര്‍ കുറ്റകൃത്യങ്ങള്‍ (Cyber crimes)

വിനോദത്തിനും വ്യാപാരത്തിനും ആശയവിനിമയത്തിനും വിദ്യാഭ്യാസാവശ്യങ്ങള്‍ക്കു
മായി ഇന്റര്‍നെറ്റ്‌ പുതിയ വാതായനങ്ങള്‍ തുറക്കുന്നു എന്ന്‌ നമുക്കറിയാം. അതേസമയം
ചിലര്‍ നിയമവിരുദ്ധമായ പ്രവര്‍ത്തനങ്ങള്‍ക്കും ഇന്റര്‍നെറ്റ്‌ ഉപയോഗിക്കുന്നു.

ഓണ്‍ലൈന്‍ ബാങ്കിങ്ങിനും മറ്റ്‌ സാമ്പ Cyber crimes committed under IT Act
ത്തിക ഇടപാടുകള്‍ക്കുമായി സ്മാര്‍ട്ട്‌ ഠം 1856
ഫോണുകളിലൂടെയും ടാബ്ലറ്റുകളിലൂ 000
ടെയുമുളള്ള വര്‍ധിച്ച ഇന്റര്‍നെറ്റ്‌ ഉപ [ =
യോഗം അപകട സാധ്യതയും വര്‍ധിപ്പി ട്ട്‌ | നി [
ക്കുന്നു. ഉയര്‍ന്ന തോതിലുള്ള ഇന്റര്‍ ച a7 we =

രി ee ഞ്ഞ —
നെറ്റ്‌ നുഴഞ്ഞു കയറ്റവും ഓണ്‍ലൈന്‍ ° 2005 2007 2008 2009 2010 2011 2022 2013

Source: National Crime Records Bureau Year

ബാങ്കിങ്‌ സംവിധാനങ്ങളും സൈബര്‍ ചിത്രം 12.15: ഐടി തിമത്തി്റെ

അക്രമികള്‍ക്ക്‌ Dal BAHIA B® പരിധിയ്ക്ുള്ളിത്ക്ടെ വൈബര്‍കുുക്യരുങ്ങള്‍

12. വിവര ആശയവിനിമയ സാങ്കേതികവിദ്യയും സമുഹവും:

സോഫ്റ്റ്വെയര്‍ (മാല്‍വെയര്‍) ഉപയോഗിച്ചോ നിയമവിരുദ്ധമായ ഹാക്കിങ്‌ നടത്തിയോ
ഓണ്‍ലൈന്‍ സാമ്പത്തിക ഇടപാടുകളെ ഉന്നം വയ്ക്കാന്‍ അവസരം ഒരുക്കുന്നു.
നാഷണല്‍ ക്രൈം റെക്കോര്‍ഡ്സ്‌ ബ്യൂറോയുടെ കണക്കു പ്രകാരം കഴിഞ്ഞ വര്‍ഷങ്ങളില്‍
നടന്ന സൈബര്‍കുറ്റകൃത്യങ്ങളുടെ സ്ഥിതിവിവരക്കണക്ക്‌ ചിത്രം 11.17 ലെ ഗ്രാഫില്‍
കാണിച്ചിരിക്കുന്നു. ഇന്ത്യയില്‍ സൈബര്‍ കുറ്റകൃത്യങ്ങള്‍ ഗണ്യമായി വര്‍ധിക്കുന്നുവെന്ന്‌
ഗ്രാഫില്‍ കാണാന്‍ സാധിക്കും.

കമ്പ്യൂട്ടറുകളും കമ്പ്യൂട്ടര്‍ നെറ്റ്വര്‍ക്കുകളും ഒരു ടൂളായോ അവയെ ഒരു ലക്ഷ്യമായോ
അതുമല്ലെങ്കില്‍ അവ ഒരു കുറ്റകൃത്യം നടത്തുന്നതിനുള്ള സ്ഥലമായോ ഉപയോഗിക്കു
ന്നതിനെയാണ്‌ സൈബര്‍ കുറ്റകൃത്യം എന്ന്‌ നിര്‍വചിച്ചിരിക്കുന്നത്‌. സൈബര്‍ കുറ്റകൃത്യ
ത്തിന്റെ ഒരു സുപ്രധാന ഘടകം അതിന്റെ പ്രാദേശികമല്ലാത്ത സ്വഭാവമാണ്‌. വളരെ
അകലങ്ങളിലായി വേര്‍തിരിക്കപ്പെട്ടിട്ടുള്ള നിയമവ്യവസ്ഥകളില്‍ ഒരു കുറ്റകൃത്യം സംഭ
വിക്കാം. ഒരു ആക്രമണകാരിക്ക്‌ ഒരു രാജ്യത്ത്‌ നിന്നും മറ്റൊരു രാജ്യത്തെ ലക്ഷ്യമാക്കി
ആക്രമണം നടത്തുവാന്‍ കഴിയും. അതിനാല്‍ വിവിധ രാജ്യങ്ങളിലെ അന്വേഷണ സംഘ
വും നീതിന്യായക്കോടതികളും കൈകോര്‍ക്കേണ്ടത്‌ ആവശ്യമാണ്‌. ഇന്റര്‍നെറ്റിന്റെ
അജ്ഞാത സ്വഭാവം കാരണം ആളുകള്‍ വിവിധ കുറ്റകൃത്യങ്ങളില്‍ ഏര്‍പ്പെടാന്‍ സാ
ധ്ൃതയുണ്ട്‌. ആളുകള്‍ അറിഞ്ഞോ അറിയാതെയോ സൈബര്‍ കുറ്റകൃത്യങ്ങളില്‍ ഏര്‍
പ്പെടുന്നു.

ഫിഷിങ്‌, ഹാക്കിങ്‌, സേവന ആക്രമണങ്ങളുടെ നിഷേധം എന്നിവ സൈബര്‍ കുറ്റകൃ
ത്യങ്ങളില്‍ ഉള്‍പ്പെടുന്നു. ഇവ പതിനൊന്നാം ക്ലാസ്സിലെ 9-90 അധ്യായത്തില്‍ നാം പഠിച്ചി
ട്ടുണ്ട്‌. അനുവാദമില്ലാതെയുള്ള കമ്പ്യൂട്ടര്‍ ഉപയോഗം, ക്രെഡിറ്റ്‌ കാര്‍ഡ്‌ വഞ്ചന, നിയമാനു
സൃതമല്ലാതെയുള്ള ഡൌണ്‍ലോഡ്‌, അശ്ലീല ചിത്രങ്ങള്‍, സൈബര്‍ ഭീകരവാദം, വൈറ
സുകള്‍, ഉപയോഗശൂന്യമായ ഇ-മെയിലുകള്‍ (സ്പാമുകള്‍) എന്നിവയൊക്കെ കമ്പ്യൂട്ടര്‍
കുറ്റകൃത്യങ്ങളില്‍പ്പെടുന്ന പ്രവര്‍ത്തനങ്ങളാണ്‌.

സൈബര്‍ കുറ്റകൃത്യങ്ങളെ പ്രധാനമായും മുന്നായി തരം തിരിച്ചിരിക്കുന്നു- വ്യക്തികള്‍
ക്കെതിരെയുള്ള കുറ്റകൃത്യങ്ങള്‍, സ്വത്തിനെതിരെയുള്ള കുറ്റകൃത്യങ്ങള്‍, ഭരണകൂടത്തി
നെതിരെയുള്ള കുറ്റകൃത്യങ്ങള്‍.

A) വൃക്തികള്‍ക്കെതിരെയുള്ള സൈബര്‍ കുറ്റകൃത്യങ്ങള്‍ (Cyber crimes against individuals)

ബ്രോഡ്ബാന്‍ഡ്‌ ഇന്റര്‍നെറ്റിന്റെ പ്രചാരം ദൈനംദിന പ്രവത്തനങ്ങളില്‍ ഇന്റര്‍നെറ്റി
നുള്ള സ്വാധീനം വര്‍ധിപ്പിച്ചു. ഇത്‌ ഓണ്‍ലൈന്‍ കുറ്റകൃത്യങ്ങളുടെ അപകട സാധ്യതയും
വര്‍ധിപ്പിച്ചു. ഒരു വ്യക്തിക്ക്‌ ശാരീരികമോ മാനസികമോ ആയ ബുദ്ധിമുട്ടുകള്‍ ഉണ്ടാക്കുന്ന
മറ്റൊരാളുടെ സൈബര്‍ ഇടത്തിലെ പ്രവൃത്തി സൈബര്‍ കുറ്റകൃത്യമായി കണക്കാക്കുന്നു.
ഒരാളുടെ സ്വകാര്യതയില്‍ ഇടപെടുക, ആള്‍മാറാട്ടം നടത്തുക, മറ്റൊരാളുടെ പേരില്‍
ഇന്റര്‍നെറ്റ്‌ ഉപയോഗിക്കുക, മറ്റൊരാളെ ശല്യപ്പെടുത്തുക എന്നിവയാണ്‌ വ്യക്തികള്‍ക്കെ
തിരെയുള്ള സൈബര്‍ കുറ്റകൃത്യങ്ങള്‍.

(i) സ്വകാര്യ വിവരങ്ങളുടെ മോഷണം (Identity theft): ഒരു വ്യക്തിയെ തിരിച്ചറിയാനുള്ള
പേര്‌, ക്രെഡിറ്റ്‌ കാര്‍ഡ്‌, ആധാര്‍ നമ്പര്‍ തുടങ്ങിയവ അയാളുടെ സമ്മതം കൂടാതെ
മറ്റൊരാള്‍ തട്ടിപ്പ്‌ നടത്തുന്നതിനും കുറ്റകൃത്യങ്ങള്‍ക്കുമായി ഉപയോഗിക്കുന്നതാണ്‌
സ്വകാര്യ വിവരങ്ങളുടെ മോഷണം എന്നറിയപ്പെടുന്നത്‌. ഒരാളുടെ ബാജ്‌: അക്കാണ്ടുകളും
സാമൂഹിക മാധ്യമ അക്കൌണ്ടുകളും ഉപയോഗിക്കുന്നതിനായി അയാളുടെ വ്ൃക്തിപര

ഞന ന്ത്‌ അ

മായ തിരിച്ചറിയല്‍ വിവരങ്ങള്‍ മോഷ്ടിക്കുന്ന പ്രവൃ
ത്തിയാണിത്‌. ഇത്‌ അയാളെ അപകീര്‍ത്തിപ്പെടുത്തു
ന്നതിനോ അയാളുടെ അക്കാണ്ടില്‍ നിന്ന്‌ പണം
മോഷ്ടിക്കുന്നതിനോ സാധനങ്ങള്‍ക്ക്‌ വില നല്‍കു
ന്നതിനോ, ധനകാര്യ സ്ഥാപനങ്ങളില്‍നിന്ന്‌ പണം
ലഭിക്കുന്നതിനോ മറ്റെന്തെങ്കിലും ആനുകൂല്യങ്ങള്‍
ലഭിക്കുന്നതിനോ ആകാം.

ബാങ്ക്‌ അക്കാണ്ടില്‍നിന്ന്‌ പണം പിന്‍വലിക്കു

ന്നതിനു മുമ്പ്‌ മോഷ്ടാവ്‌ യഥാര്‍ഥത്തിലുള്ള ഉടമ പണമിടപാട്‌ വിവരങ്ങള്‍ അറിയാ
തിരിക്കുന്നതിനായി മെയിലിങ്‌ മേല്‍വിലാസം മാറ്റും. അയാളുടെ വൃക്തിവിവരങ്ങള്‍
പുതിയ അക്കൌണ്ടുകളോ ക്രെഡിറ്റ്‌ കാര്‍ഡ്‌ അക്കൌണ്ടുകള്‍ തുടങ്ങുന്നതിനോ
മൊബൈല്‍ ഫോണ്‍ കണക്ഷന്‍ എടുക്കുന്നതിനോ മറ്റോ ഉപയോഗിച്ചേക്കാം.

(ii) ശല്യപ്പെടുത്തല്‍ (Harassment): വിശിഷ്ട വ്യക്തികളെപ്പറ്റി ചാറ്റ്‌ റൂം, സാമൂഹിക മാധ്യമങ്ങള്‍,
ഇ-മെയില്‍ തുടങ്ങിയവയില്‍ അയാളുടെ ലിംഗഭേദം, വംശം, മതം, ദേശീയത എന്നിവയെ
ഉന്നം വച്ച്‌ പരിഹാസ്യമായ അഭിപ്രായങ്ങള്‍ ഉടുന്നത്‌ ഇത്തരം ശല്യപ്പെടുത്തലാണ്‌.
അശ്ലീല പദങ്ങളുപയോഗിക്കുക, അസ്സാന്മാര്‍ഗികമോ നിയമപരമല്ലാത്തതോ ആയ പ്രവൃത്തി
കളിലൂടെ ഭീഷണിപ്പെടുത്തുക എന്നിവയും ശല്യപ്പെടുത്തലില്‍ ഉള്‍പ്പെടുന്നു.
ഇന്റര്‍നെറ്റുപയോഗിച്ച്‌ ഒരാളെ ശല്യപ്പെടുത്തുന്നതിന്‌ സൈബര്‍ സ്റ്റോക്കിങ്‌ (stalking)
എന്ന്‌ പറയുന്നു. പ്രശസ്തരായ ചിലര്‍ തങ്ങളുടെ പേരില്‍ വന്നിട്ടുള്ള ഫേസ്‌ ബുക്ക്‌
അക്കൌണ്ടുകള്‍ വ്യാജമാണെന്ന്‌ പറയുന്നത്‌ നാം വായിച്ചിട്ടുണ്ട്‌. ഇത്തരം അക്കാണ്ടു
കളില്‍ അപകീര്‍ത്തികരമായ ചിത്രങ്ങളോ വിവരങ്ങളോ വന്നത്‌ കൊണ്ടാണിങ്ങനെ പറ
യുന്നത്‌. കുറ്റവാസനയുള്ള ചിലര്‍ ബഹുമാന്യരായ വ്യക്തികളുടെ ഫോട്ടോയും വൃക്തി
വിവരങ്ങളും ഉപയോഗിച്ച്‌ പ്രൊഫൈല്‍ നിര്‍മ്മിക്കും. ചിലര്‍ അപഹാസ്യമായ ഇ-മെയി
ലുകള്‍, ഫേസ്‌ ബുക്ക്‌ പോസ്റ്റിങ്ങുകള്‍ എന്നിവ അയച്ച്‌ ആളുകളെ അപകീര്‍ത്തിപ്പെടുത്തും.
ഇവയെല്ലാം ഇത്തരം ശല്യപ്പെടുത്തലുകളാണ്‌. ദുരാരോപണങ്ങള്‍, ഭീഷണികള്‍, നിരീ
ക്ഷിക്കലുകള്‍, സ്വകാര്യവിവരങ്ങളുടെ മോഷണം, വിവരങ്ങള്‍ നശിപ്പിക്കല്‍ ഇവജെല്ലാം
സൈബര്‍ സ്റ്റോക്കിങ്ങിന്റെ പ്രത്യേകതകളാണ്‌. പ്രായപൂര്‍ത്തിയാകാത്ത കുട്ടികളെ
ലൈംഗികമായി ചൂഷണം ചെയ്യുന്നതും സൈബര്‍ സ്റ്റോക്കിങ്ങില്‍ ഉള്‍പ്പെടും. ഇത്‌
സൌഹൃദങ്ങളും തൊഴിലുകളും പ്രതിച്ഛായയും ആത്മവിശ്വാസവും നഷ്ടപ്പെടുത്തും.

(iii) ആള്‍മാറഠാട്ടവും വഞ്ചനയും (Impersonation and cheating): ഒരു വ്യക്തി മറ്റൊരാളായി
അഭിനയിച്ച്‌ ആളുകളെ ദ്രോഹിക്കുന്നതിനെ ആള്‍മാറാട്ടം എന്ന്‌ പറയുന്നു. ഇന്റര്‍നെറ്റിന്റെ
അജ്ഞാതസ്വഭാവം ഉപയോഗിച്ച്‌ ചിലര്‍ ഓണ്‍ലൈന്‍ ആള്‍മാറാട്ടം നടത്തുന്നു.

വിദൂര രാജ്യങ്ങളില്‍ നിന്നും ഇന്ത്യയിലേക്ക്‌ വന്‍തുകകള്‍ മാറ്റുന്നതിന്‌ നമ്മുടെ സഹായം
ആവശ്യപ്പെട്ടു കൊണ്ടുള്ള ഇ-മെയിലുകള്‍ നമുക്ക്‌ ലഭിക്കാറുണ്ട്‌. ഈ പണം ഏതെങ്കിലും
വസ്തു, സ്വര്‍ണം എന്നിവ വില്‍ക്കാനുള്ള ആസ്തിയാണെന്ന്‌ അവര്‍ പറയും. നിയമനട
പടികള്‍ പൂര്‍ത്തിയാക്കി ഈ ആസ്തി വില്‍ക്കുന്നതിന്‌ അവര്‍ക്ക്‌ കുറച്ചു പണം ആവശ്യ,
മുണ്ടെന്നും അതില്‍ ഒരു പങ്ക്‌: നാം വഹിക്കേണ്ടതുണ്ട്‌ എന്നും, പകരം ആസ്തിയുടെ
50% വരെ തരാമെന്നും വാഗ്ദാനം നല്‍കുന്നു. ഇതിനു വേണ്ടി നാം അയയ്ക്കുന്ന പണം
സ്വീകരിച്ച്‌, ചില പ്രശ്നങ്ങള്‍ കൂടി തീര്‍ക്കാനുണ്ടെന്നു പറഞ്ഞ്‌ കൂടുതല്‍ പണം ആവശ്യ,

12. വിവര ആശയവിനിമയ സാങ്കേതികവിദ്യയും സമുഹവും:

പ്പെടുന്നു. ഇതിന്‌ ഇരയാകുന്നവര്‍ക്ക്‌ വന്‍ തുകകള്‍ നഷ്ടപ്പെടുന്നു. ഇതുപോലെ വൃതൃസ്ത
കഥകളുമായി ധാരാളം മെയിലുകള്‍ വന്നു കൊണ്ടിരിക്കുന്നു. ഇത്തരം മെയിലുകള്‍
ഇന്റര്‍നെറ്റ്‌ വഞ്ചനയ്ക്ക്‌ ഉദാഹരണങ്ങളാണ്‌.

സമാനമായ കുറ്റകൃത്യങ്ങള്‍ ഓണ്‍ലൈന്‍ ലേലത്തിലും സംഭവിക്കുന്നു. ചിലപ്പോള്‍ ഇന്റര്‍
നെറ്റ്‌ ലേലസൈറ്റുകളില്‍ വില്‍പ്പനയ്ക്കുള്ള ഉല്‍പ്പന്നങ്ങള്‍ അവതരിപ്പിക്കാറുണ്ട്‌. അവര്‍
സാധനം തരുന്നതിന്‌ മുമ്പ്‌ തന്നെ പണം വാങ്ങുകയും സാധനം തരാതിരിക്കുകയും
ചെയ്യുന്നു.

(iv) സ്വകാര്യത ലംഘനം (Violation of privacy): വ്യക്തമായ കാരണം കൂടാതെ മറ്റൊരാളുടെ
വ്യക്തിജീവിതത്തില്‍ കടന്നു കൂടുകയോ നുഴഞ്ഞു കയറുകയോ ചെയ്യുന്നതാണ്‌
സ്വകാരൃത ലംഘനം. സ്വകാര്യത നഷ്ടപ്പെട്ട ആളിനോ സ്ഥാപനത്തിനോ നിയമനടപടി
എടുക്കുന്നതിന്‌ അവകാശമുണ്ട്‌. വ്യക്തിഗതവിവരങ്ങള്‍, ഫോട്ടോ, തൊഴിലിട ദൃശ്യങ്ങള്‍
എന്നിവ പ്രചരിപ്പിക്കുന്നത്‌ ഇതില്‍ ഉള്‍പ്പെടുന്നു. സ്ര്രീകളുടെ ചിത്രങ്ങള്‍ എടുകുന്നതിന്‌
പൊതു സ്ഥലങ്ങളില്‍ ഒളി ക്യാമറ, മൊബൈല്‍ ക്യാമറ എന്നിവ ഉപയോഗിക്കുന്നതിനെ
ക്കുറിച്ച്‌ നാം കേട്ടിട്ടുണ്ട്‌. അനുവാദമില്ലാതെ ഒരാളുടെ ഫോട്ടോ എടുക്കുന്നത്‌ സ്വകാരൃതാ
ലംഘനമാണ്‌. അനുവാദമില്ലാതെ മറ്റുള്ളവരുടെ ദൃശ്യങ്ങള്‍ പൊതു മാധ്യമങ്ങളില്‍ പോസ്റ്റ്‌
ചെയ്യുന്നതും അവ പകര്‍ത്തുന്നതും ഇ-മെയിലില്‍ പ്രചരിപ്പിയ്ക്കുന്നതും സ്വകാരൃതാ
ലംഘനമാണ്‌.

(൬ അശ്ലീല വസ്തുക്കളുടെ വ്യാപനം (Dissemination of obscene material): അശ്ലീലത പോലുള്ള
കുറ്റകൃത്യങ്ങള്‍ വ്യാപിക്കുന്നതിന്‌ ഇന്റര്‍നെറ്റ്‌ ഒരു മാധ്യമമായിരിക്കുന്നു. അശ്ലീല വസ്തു
ക്കള്‍ പോസ്റ്റ്‌ ചെയ്യുകയോ വിതരണം ചെയ്യുകയോ ചെയ്യുന്നത്‌ സൈബര്‍ കുറ്റകൃത്യമാണ്‌.
ഇന്റര്‍നെറ്റിലെ അശ്ലീലത പല രൂപത്തിലുണ്ട്‌. നിരോധിച്ചിട്ടുള്ള സൈറ്റുകള്‍ എടുക്കുക,
കമ്പ്യൂട്ടര്‍ ഉപയോഗിച്ച്‌ ഇവ നിര്‍മ്മിക്കുക, ഇന്റര്‍നെറ്റിലൂടെ ഇവ ഡൌണ്‍ലോഡ്‌ ചെയ്യുക
എന്നിവയെല്ലാം ഇതില്‍ ഉള്‍പ്പെടുന്നു. ഇത്‌ പലപ്പോഴും (പായപൂര്‍ത്തിയാകാത്ത
കുട്ടികളെ തെറ്റിലേക്ക്‌ നയിക്കുന്നു.

ഇരകളുടെ അറിവില്ലാതെയാണ്‌ മിക്കവാറും സൈബര്‍ കുറ്റങ്ങളും നടക്കുന്നത്‌. എന്നാല്‍
എളുപ്പത്തില്‍ പണമുണ്ടാക്കുന്നതിന്‌ പലപ്പോഴും ഇരകള്‍ അറിഞ്ഞുകൊണ്ടുതന്നെ
ഇതില്‍ പടങ്കെടുക്കുന്നുമുണ്ട്‌. ഇത്തരത്തിലുള്ള കുറ്റകൃത്യങ്ങള്‍ തടയാന്‍ വിവിധ സംവിധാ
നങ്ങള്‍ ഉണ്ടെന്ന്‌ നാം അറിഞ്ഞിരിക്കണം. ഇ-മെയില്‍ സേവനങ്ങള്‍ നല്‍കുന്നവര്‍ “സ്പാം
ഫില്‍റ്റര്‍” എന്ന ഒരു സംവിധാനം, ആവശ്യമില്ലാത്ത മെയിലുകള്‍ തടയാന്‍ വേണ്ടി ഉപയോ
ഗിക്കുന്നു. ഒരു പരിധിവരെ തട്ടിപ്പുകള്‍ തടയാന്‍ ഓണ്‍ലൈന്‍ സാമ്പത്തിക ഇടപാടു
കള്‍ക്ക്‌ പല തരത്തിലുള്ള ആധികാരികതാ സംവിധാനങ്ങളുണ്ട്‌. എന്നിരുന്നാലും ഇന്റര്‍
നെറ്റ്‌ ഉപയോഗിക്കുമ്പോള്‍ നാം അതീവ ശ്രദ്ധ പാലിക്കേണ്ടതുണ്ട്‌.

13. സ്വത്തിനെതിരായ സൈബര്‍ കുറ്റകൃത്യങ്ങള്‍ (Cyber crimes against property)

ക്രെഡിറ്റ്‌ കാര്‍ഡ്‌, MIVA സ്വത്ത്‌ എന്നിങ്ങനെയുള്ള സ്വത്തുക്കള്‍ക്കെതിരെ നടത്തുന്ന
സൈബര്‍ കുറ്റകൃത്യങ്ങളെയാണ്‌ സ്വത്തിനെതിരായ സൈബര്‍ കുറ്റകൃത്യങ്ങള്‍ എന്ന്‌
പറയുന്നത്‌. ഹാക്കിങ്‌, സോഫ്റ്റ്വെയര്‍ മോഷണം, വസ്തുവകകള്‍ മനപ്പൂര്‍വ്വം നശിപ്പി
ക്കല്‍, സൈബര്‍ ഇടത്തില്‍ നുഴഞ്ഞു കയറ്റം, കമ്പ്യൂട്ടറില്‍ ശേഖരിച്ച്‌ വച്ചിരിക്കുന്ന വിവര

ങ്ങള്‍ അനധികൃതമായി കൈവശപ്പെടുത്തല്‍ എന്നിവയെല്ലാം തന്നെ സ്വത്തിനെതിരായ
സൈബര്‍ കുറ്റകൃത്യങ്ങള്‍ ആണ്‌.

സ്വത്തിനെതിരായ സൈബര്‍ കുറ്റകൃത്യങ്ങളില്‍ ചിലത്‌ താഴെ കൊടുത്തിരിക്കുന്നു.

൫ ക്രെഡിറ്റ്‌ കാര്‍ഡ്‌ തട്ടിപ്പ്‌ (Credit card fraud): അനുവാദമില്ലാതെ മറ്റൊരാളുടെ ക്രെഡിറ്റ്‌
കാര്‍ഡ്‌ വിവരങ്ങളുപയോഗിച്ച്‌ പണം എടുക്കുക, വാങ്ങിക്കുന്ന സാധനങ്ങള്‍ക്ക്‌ പണം
നല്‍കുക എന്നിവയെല്ലാം ക്രെഡിറ്റ്‌ കാര്‍ഡ്‌ തട്ടിപ്പാണ്‌. ഇന്റര്‍നെറ്റ്‌ മോഷ്ടാക്കള്‍ വലിയ
സ്ഥാപനങ്ങളുടെ വെബ്സൈറ്റ്‌ ഹാക്ക്‌ ചെയ്ത്‌ വളരെയധികം ആളുകളുടെ ക്രെഡിറ്റ്‌
കാര്‍ഡ്‌ വിവരങ്ങള്‍ മോഷ്ടിച്ച സംഭവങ്ങളുണ്ട്‌. മോഷ്ടാക്കള്‍ ഈ വിവരങ്ങള്‍ ആര്‍ക്കെ
ങ്കിലും പണം നല്‍കുന്നതിനുപയോഗിക്കുന്നു, ചിലപ്പോള്‍ മറ്റ്‌ മോഷ്ടാക്കള്‍ക്ക്‌ കുറഞ്ഞ
വിലയ്ക്ക്‌ ഇവ വില്‍ക്കുകയും ചെയ്യുന്നു.

Gi) ബൌദ്ധിക സ്വത്ത്‌ മോഷണം (Intellectual property theft): ബൌദ്ധിക സ്വത്തവകാശ ലംഘനം
ഈ ഇനത്തില്‍പ്പെട്ടതാണ്‌. പകര്‍പ്പവകാശം, കുത്തകാവകാശം, വ്യാപാരമുദ്ര എന്നിവയുടെ
ലംഘനങ്ങള്‍ സ്വത്തിനെതിരായ കടന്നു കയറ്റമാണ്‌. ഈയിടയ്ക്ക്‌ ഒരു ഇന്ത്യന്‍ ഐ.ടി
കമ്പനി, പ്രോഗ്രാം കോഡിലെ തെറ്റുകള്‍ തിരു
ത്താനുള്ള ഒരു സോഫ്റ്റ്‌വെയര്‍ നിര്‍മ്മിച്ചു.
ഒരു തൊഴിലാളി ഇത്‌ സി.ഡിയില്‍ പകര്‍ത്തി
കമ്പനിയുടെ എതിരാളികള്‍ക്ക്‌ വലിയ വില
യ്ക്ക്‌ വില്‍ക്കാന്‍ ശ്രമിച്ചു. ഇത്‌ കമ്പനിക്ക്‌ വ
ലിയ സാമ്പത്തിക നഷ്ടവും സ്വത്ത്‌ നഷ്ടവും
ഉണ്ടാക്കി. ഇതും ബൌദ്ധിക സ്വത്ത്‌ മോഷണ
മായി പരിഗണിക്കപ്പെടുന്നു. സോഫ്റ്റ്വെയര്‍
മോഷണവും സൈബര്‍ നിയമപ്രകാരം കുറ്റക
രമാണ്‌.

ഇക്കാലത്ത്‌ ബൌദ്ധിക സ്വത്ത്‌ മോഷണം സര്‍വ്വസാധാരണമാണ്‌. ഏതു വിഷയത്തിലും
നമുക്ക്‌ സ്വതന്ത്രമായി വിവരങ്ങള്‍ ഇന്റര്‍നെറ്റില്‍ നിന്നും എടുക്കാം. മറ്റൊരാളുടെ ഭാഷ,
ചിന്തകള്‍, ആശയങ്ങള്‍ ഇവ നമ്മുടെ സ്വന്തം കൃതികളില്‍ ഉപയോഗിക്കുന്നതിന്‌ “പ്ലേജ
Ambo’ (Plagiarism) അഥവാ സാഹിത്യ ചോരണം എന്ന്‌ പറയുന്നു. ഇന്ത്യയില്‍ ബൌദ്ധിക
സ്വത്തവകാശം സംരക്ഷിക്കുന്നതിന്‌ ശക്തമായ പകര്‍പ്പവകാശ നിയമങ്ങള്‍ ലഭ്യമാണ്‌.
ഓണ്‍ലൈനില്‍ ലഭ്യമായിട്ടുള്ള വിവിധ ടൂളുകള്‍ ഉപയോഗിച്ച്‌ എളുപ്പത്തില്‍ പ്ലേജറിസം
കണ്ടുപിടിക്കാന്‍ സാധിക്കും .

(iii) ഇന്റര്‍നെറ്റ്‌ സമയമോഷണം (Internet time theft): ഇന്ന്‌ ഒട്ടു മിക്ക മോഡത്തിനും
റാട്ടറിനും വയര്‍ലെസ്‌ ഇന്റര്‍നെറ്റ്‌ സൌകര്യമുണ്ട്‌. ഇത്‌ വീടുകള്‍, സ്കൂളുകള്‍, വ്യാപാര
സ്ഥാപനങ്ങള്‍ എന്നിവിടങ്ങളിലൊക്കെ ഇന്റര്‍നെറ്റ്‌ പങ്കു വയ്ക്കല്‍ സാകര്യമൊരുക്കുന്നു.
ഇവയൊക്കെ ശരിയായ വിധത്തില്‍ പാസ്വേഡ്‌ ഉപയോഗിച്ച്‌ സുരക്ഷിതമാക്കിയില്ലെ
ങ്കില്‍ മറ്റുള്ളവര്‍ നമ്മുടെ ഇന്റര്‍നെറ്റ്‌ ഉപയോഗിക്കും. ഒരാളുടെ ഇന്റര്‍നെറ്റ്‌ സൌകര്യം
മറ്റൊരാള്‍ അനധികൃതമായി ഉപയോഗിക്കുന്നതിനെയാണ്‌ ഇന്റര്‍നെറ്റ്‌ സമയ മോഷണം
എന്നു പറയുന്നത്‌. ഇത്‌ യഥാര്‍ഥ ഇന്റര്‍നെറ്റ്‌ ഉപയോക്താവിന്‌ പണവും ഇന്റര്‍നെറ്റ്‌

12. വിവര ആശയവിനിമയ സാങ്കേതികവിദ്യയും സമുഹവും:

സമയവും നഷ്ടപ്പെടുത്തുന്നു. ഇതിനും പുറമെ മറ്റുള്ളവര്‍ നമ്മുടെ ഇന്റര്‍നെറ്റ്‌ അക്ക
ണ്ടുപയോഗിച്ച്‌ കുറ്റകൃത്യങ്ങള്‍ ചെയ്യുകയും നാം അതിന്‌ ഉത്തരവാദികള്‍ ആകുകയും
ചെയ്യുന്നു.

വിവിധ തരത്തിലുള്ള ആക്രമണങ്ങളായ വൈറസ്‌, വേംസ്‌, മാന്‍ ഇന്‍ ദി മിഡില്‍ അറ്റാക്ക്‌
എന്നിവ പതിനൊന്നാം ക്ളാസ്സിലെ 9-90 അധ്യായത്തില്‍ നാം പഠിച്ചു കഴിഞ്ഞു. ഇതെല്ലാം
ഇത്തരത്തിലുള്ള മോഷണത്തിന്‌ ഉദാഹരണങ്ങളാണ്‌.

C. ഭരണകൂടത്തിനെതിരായ സൈബര്‍ കുറ്റകൃത്യങ്ങള്‍ (Cyber crimes against government)

ഇ-ഭരണത്തിന്റെ പ്രശസ്തി ഭരണകൂടങ്ങളെ

|
]

വിധേയരാക്കി. ഇങ്ങനെ വിവിധതരത്തിലുള്ള
സര്‍ക്കാര്‍ കമ്പ്യൂട്ടര്‍ നെറ്റ്വര്‍ക്കുകളും, വെബ്‌
സൈറ്റുകളും സൈബര്‍ കുറ്റകൃത്യങ്ങളുടെ
അപകട ഭീഷണി നേരിടുന്നു. സൈബര്‍ ഭീക
രത, വെബ്സൈറ്റ്‌ വികൃതമാക്കല്‍, ഇ- ഭരണ
വെബ്സൈറ്റുകള്‍ക്കെതിരെയുള്ള ആക്രമണം
എന്നിവ ഇത്തരം കുറ്റകൃത്യങ്ങളുടെ വിവിധ
ഭാവങ്ങളാണ്‌.

(i) സൈബര്‍ ഭീകരത (Cyber terrorism)

ന്യൂക്ലിയര്‍ പവര്‍ പ്ലാന്നുകള്‍, വ്യോമഗതാഗതനിയ്രന്തണം, ഗ്യാസ്‌ ലൈന്‍ നിയ്ര്ത്രണം,
ടെലികോം തുടങ്ങിയ സൂഷ്മസം വേദനക്ഷമതയുള്ള നെറ്റ്‌വര്‍ക്കുകള്‍ എന്നിവയിലെ
സൈബര്‍ ആക്രമണങ്ങളെ ഈ വിഭാഗത്തില്‍പെടുത്താം. ലോക വ്യാപകമായി ഭരണകൂട
ങ്ങള്‍ക്കെതിരായി ഈ വിധത്തിലുള്ള ആക്രമണങ്ങള്‍ വര്‍ധിച്ചു വരുന്നു. രാജ്യത്തിന്റെ
സാമ്പത്തിക സാങ്കേതിക അടിത്തറയെ ബാധിക്കുന്ന വിധത്തില്‍ ദേശവിരുദ്ധ ശക്തികള്‍
ഇന്റര്‍നെറ്റ്‌ ഉപയോഗിക്കുന്നതാണ്‌ സൈബര്‍ ഭീകരത.

2010 ല്‍ ഇറാന്റെ രഹസ്യ ന്യൂക്ലിയര്‍ പദ്ധതിയെ “ ടക്്‌സ്നെറ്റ്‌" (tuxnet) എന്ന്‌ പേരുള്ള
വൈറസ്‌ ഉപയോഗിച്ച്‌ ആക്രമിച്ചു. യുറേനിയം സമ്പുഷ്ടീകരണ പരിപാടിയെ പ്രവര്‍ത്തന
രഹിതമാക്കാന്‍ ഉദ്ദേശിച്ചിട്ടുള്ളതായിരുന്നു ഈ വൈറസ്‌. ഈ വൈറസ്‌ വളരെയധികം
ന്യൂക്ലിയര്‍ കണ്‍ട്രോളുകളെ ബാധിച്ച്‌ അവയ്ക്ക്‌ തെറ്റായ നിര്‍ദേശങ്ങള്‍ നല്‍കി. ന്യൂക്ലിയര്‍
പ്രവര്‍ത്തനങ്ങള്‍ തെറ്റായ രീതിയില്‍ നടത്തി സജ്ജീകരണങ്ങള്‍ കേടു വരുത്തി. സൈ
ബര്‍ ഭീകരതക്കെതിരെ ഒരു രാജ്യത്തിന്‌ വലിയ വില നല്‍കേണ്ടി വരും. അതിനാല്‍
സെര്‍വറുകള്‍ക്ക്‌ വളരെ ശക്തിയേറിയ സുരക്ഷാ സംവിധാനങ്ങള്‍ ഒരുക്കേണ്ടത്‌ സര്‍ക്കാ
രിന്റെ ബാധൃതയാണ്‌.

(ii) വെബ്സൈറ്റ്‌ വികൃതമാക്കല്‍ (Website defacement)

ഇത്‌ ഭരണകൂടത്തിനെതിരെയുള്ള സാധാരണ സൈബര്‍ ആക്രമണമാണ്‌. ഇതില്‍ സര്‍
ക്കാര്‍ വെബ്‌ സൈറ്റുകള്‍ ഹാക്ക്‌ ചെയ്യുകയും അവയില്‍ സര്‍ക്കാരിനെതിരെ ദോഷക
രമായ അഭിപ്രായങ്ങള്‍ ഇടുകയും ചെയ്യുന്നു.

ഞന്‌ അ

0) ഇ-ഭരണ വെബ്‌ സൈറ്റുകള്‍ക്കെതിരെയുള്ള ആക്രമണങ്ങള്‍
(Attacks against e-governance websites)

ഇത്തരം ആക്രമണങ്ങള്‍ ഒരു പ്രത്യേകതരം ഓണ്‍ലൈന്‍ സര്‍ക്കാര്‍ സേവനം ലഭ്യമല്ലാ
താക്കുന്നു. പതിനൊന്നാം ക്ലാസ്സിലെ 9-00 അധ്യായത്തില്‍ നാം പഠിച്ച “ഡിസ്ട്രിബ്യൂട്ടഡ്‌
ഡിനയല്‍ ഓഫ്‌ സര്‍വീസ്‌” (121205) ഉപയോഗിച്ചാണ്‌ ഇത്‌ ചെയ്യുന്നത്‌. ഹാക്കര്‍മാര്‍
വെബ്സൈറ്റ്‌ തട്ടിയെടുത്ത്‌ ഉപയോഗിക്കുന്നത്‌ ഇതിന്റെ മറ്റൊരു തലമാണ്‌. അവര്‍ക്ക്‌
ഉള്ളടക്ക നിയ്രന്രണത്തിലൂടെ (Content Management System) വെബ്സൈറ്റ്‌ നിയ്ര്ത്രണം
സാധിക്കുകയും വിവരങ്ങള്‍ നശിപ്പിക്കാന്‍ സാധിക്കുകയും ചെയ്യുന്നു. ഇത്‌ മൂലം സര്‍ക്കാ
രിന്‌ വലിയ നഷ്ടം സംഭവിക്കുന്നു.

സൈബര്‍ ഇടത്തിന്റെ അജ്ഞാത സ്വഭാവം കാരണം ആധുനിക ലോകത്ത്‌ സൈബര്‍
ഭീകരത വര്‍ധിച്ചിട്ടുണ്ട്‌. വളരെയധികം ആളുകളെ ബാധിക്കുന്ന വിവിധ ലക്ഷ്യ സ്ഥാന
ങ്ങളുടെ ലഭ്യതയും, ദൂരെ നിന്ന്‌ ആക്രമണങ്ങള്‍ നടത്താമെന്നുള്ളതും സൈബര്‍ ഇടത്തി
ലൂടെയുള്ള ഭീകര പ്രവര്‍ത്തനങ്ങള്‍ വര്‍ധിപ്പിക്കുന്നു.

12.2.5 സൈബര്‍ സദാചാരം (Cyber ethics)

ആഗോളതലത്തില്‍ സൈബര്‍ കുറ്റകൃത്യങ്ങള്‍ വര്‍ധിച്ചു വരുന്നതായി കണക്കുകള്‍ സൂചി
പ്പിക്കുന്നു. ഇന്റര്‍നെറ്റ്‌ കുറ്റകൃത്യങ്ങള്‍ പലതരമാണ്‌. അവ വിവിധ രീതികളില്‍ ചെയ്യുന്നു.
ആദ്യഘട്ടം നമ്മുടെ കുടുംബത്തെയും വ്യാപാരത്തെയും ഇത്തരം കുറ്റകൃത്യങ്ങളില്‍ നിന്ന്‌
സംരക്ഷിക്കുക എന്നതാണ്‌. അതുപോലെ തന്നെ സൈബര്‍ ഇടത്തിലെ നമ്മുടെ പ്രവര്‍
ത്തനങ്ങള്‍ മറ്റുള്ളവര്‍ക്ക്‌ ദോഷം വരുത്തില്ല എന്ന്‌ ഉറപ്പു വരുത്തേണ്ടതുണ്ട്‌. നമ്മുടെ
പ്രവര്‍ത്തനങ്ങള്‍ മറ്റു പലരും നിരീക്ഷിക്കുന്നുണ്ടെന്ന്‌ നാം ഓര്‍ക്കണം.

ഇന്റര്‍നെറ്റ്‌ ഉപയോഗിക്കുന്നവര്‍ക്കുള്ള സൈബര്‍ സദാചാര നിര്‍ദേശങ്ങള്‍ താഴെ കൊടു
ക്കുന്നു.
€ നിങ്ങളുടെ കമ്പ്യൂട്ടറില്‍ ആന്റിവൈറസുകള്‍, ഫയര്‍വാള്‍, സ്പാം ബ്ലോക്കിങ്‌ സോഫ്റ്റ്‌

വെയര്‍ എന്നിവ ഉപയോഗിക്കുക.

€ ഓണ്‍ലൈന്‍ പണമിടപാടുകള്‍ നടത്തുമ്പോള്‍ സുരക്ഷാ വെബ്സൈറ്റുകള്‍ ഉണ്ടെന്ന്‌
ഉറപ്പു വരുത്തുക

© അജ്ഞാതര്‍ അയയ്ക്കുന്ന ഇ-മെയിലുകളോട്‌ പ്രതികരിക്കാതിരിക്കുക

© അസാധാരണവും സങ്കീര്‍ണവുമായ പാസ്‌വേര്‍ഡുകള്‍ ഉപയോഗിക്കുക. നിശ്ചിത
ഇടവേളകളില്‍ പാസ്വേര്‍ഡുകള്‍ മാറ്റുക. പാസ്വേഡില്‍ കുറഞ്ഞത്‌ 8 അക്ഷരങ്ങള്‍
ഉണ്ടായിരിക്കണം. അക്ഷരങ്ങളും, സംഖ്യകളും, ചിഹ്നങ്ങളും ഉപയോഗിക്കണം.

€ ഒരു കരാറിന്റെയോ സന്ദേശത്തിന്റെയോ നേരെയുള്ള ചെക്കുബോക്സുകളോ OK
ബട്ടണുകളോ അവ വായിച്ചു തീരുന്നതിന്‌ മുമ്പ്‌ ക്ലിക്ക്‌ ചെയ്യരുത്‌.

€ ആധികാരികതയില്ലാത്ത സോഫ്റ്റ്വെയര്‍ ഉപയോഗിക്കരുത്‌.

€ നിങ്ങളുടെ തിരിച്ചറിയല്‍ രേഖ മറച്ചുവച്ച്‌ മറ്റുള്ളവരെ കബളിപ്പിക്കരുത്‌.

12. വിവര ആശയവിനിമയ സാങ്കേതികവിദ്യയും സമുഹവും:

© സാമൂഹിക മാധ്യമങ്ങളിലോ ഇ-മെയിലിലോ മോശമായതോ പരുക്കനായതോ ആയ
ഭാഷ ഉപയോഗിക്കരുത്‌.

© നിങ്ങളുടെ സ്വന്തം കമ്പ്യൂട്ടറുകള്‍ അല്ലാത്തവ ഉപയോഗിക്കുമ്പോള്‍ അക്കൌണ്ടില്‍
പ്രവേശിക്കുന്നതിന്‌ മുമ്പ്‌ (login), "Remember me’ എന്ന ചെക്ക്‌ മാര്‍ക്ക്‌ നീക്കം ചെയ്യുക.

€ വിവിധ തരം സൈബര്‍ കുറ്റകൃത്യങ്ങളെപ്പറ്റി ബോധവല്‍ക്കരണ പരിപാ
ടികള്‍ സംഘടിപ്പിക്കുക.
© സൈബര്‍ ഇടത്തില്‍ എങ്ങനെ നമ്മെ സംരക്ഷിക്കാം എന്നതിനെ കുറിച്ച്‌
നമുക്ക്‌ ചെയ്യാം പട്ടിക തയാറാക്കുക.

നിങ്ങളുടെ പുരോഗതി അറിയറുക
1. സൈബര്‍ ഉടം എന്നാലെന്ത്‌?
2. കമ്പ്യൂട്ടര്‍, മൊബൈല്‍ ഫോണ്‍, ഉന്റര്‍നെറ്റ്‌ എന്നിവ ഉപയോഗിച്ചുള്ള കുറ്റകൃത്യങ്ങളെ

എന്ന്‌ വിളിക്കുന്നു.
3. വൃദതികള്‍ക്കെതിരെയുള്ള സൈബര്‍ കുറ്റകൃത്യം എന്നാല്‍ എന്താണ്‌?
4. സൈബര്‍ ദീകരത എന്നത്‌ _____ ന്‌ എതിരായ ഒരു സൈബര്‍
കുറ്റകൃത്യമാണ്‌.
5. രൊളുടെ യൂസര്‍ നെയിം, പാസ്‌വേര്‍ഡ്‌ തുടങ്ങിയവ മോഷ്ടിക്കുന്നത്‌
ആണ്‌.

12.2.6 സൈബര്‍ നിയമങ്ങള്‍ (Cyber laws)

ഇന്നര്‍നെറ്റിന്റെ നിയമപരവും നിയ്രന്തണപരവുമായ കാര്യങ്ങളെ സൂചിപ്പിക്കുന്നതിനാണ്‌
സൈബര്‍ നിയമങ്ങള്‍ എന്ന പേര്‌ ഉപയോഗിക്കുന്നത്‌. കമ്പ്യൂട്ടറുകളുടെയും ഇന്റര്‍നെറ്റി
ന്റെയും നിയ്രത്രണത്തെ സംബന്ധിക്കുന്ന നിയമങ്ങള്‍ എന്ന്‌ സൈബര്‍ നിയമത്തെ നിര്‍
വചിക്കാം.

വിവിധ തരം സൈബര്‍ കുറ്റകൃത്യങ്ങള്‍ ഉണ്ടെന്ന്‌ നാം കണ്ടു. മോഷണം, വഞ്ചന, കൃത്രിമ
രേഖയുണ്ടാക്കല്‍, അപകീര്‍ത്തിപ്പെടുത്തല്‍ എന്നിവയെല്ലാം പരമ്പരാഗത സ്വഭാവമുള്ള
കുറ്റകൃത്യങ്ങളും ഇന്ത്യന്‍ ശിക്ഷാ നിയമങ്ങള്‍ക്ക്‌ (Indian Penal Code) വിധേയവുമാണ്‌.
വിവര സാങ്കേതികവിദ്യ നിയമം 2000 വും ഐ.ടി. ആക്ട്‌ ഭേദഗതി ബില്‍ 2008 ഉം
ഇന്ത്യയില്‍ വ്യാപകമായി വരുന്ന സൈബര്‍ കുറ്റങ്ങളെ നേരിടാനുള്ളതാണ്‌. ഇന്റര്‍നെറ്റ്‌
ഉപയോഗിച്ചുള്ള എല്ലാ പ്രവര്‍ത്തനങ്ങളെയും ഇടപാടുകളെയും സ്പര്‍ശിക്കുന്നതാകയാല്‍
സൈബര്‍ നിയമം പ്രാധാന്യമുള്ളതാണ്‌. നാം മനസ്സിലാക്കിയാലും ഇല്ലെങ്കിലും സൈബര്‍
ഇടത്തിലുള്ള എല്ലാ പ്രവര്‍ത്തനത്തിനും പ്രതിപ്രവര്‍ത്തനത്തിനും നിയമപരമായ
വശങ്ങള്‍ ഉണ്ട്‌.

12.2.7 വിവര സാങ്കേതികവിദ്യ നിയമം 2000 (2008 ല്‍ ദേദഥതി വരുത്തിയത്‌)
(Information Technology Act 2000 [Amended in 20081)

കമ്പ്യൂട്ടറുകള്‍, സെര്‍വറുകള്‍, കമ്പ്യൂട്ടര്‍ നെറ്റ്വര്‍ക്കുകള്‍, ഇലക്ട്രോണിക്‌ രൂപത്തിലുള്ള
ഡാറ്റയും വിവരങ്ങളും എന്നിവയുടെ ഉപയോഗത്തെ നിയ്യ്ത്രിക്കുന്ന ഭാരത സര്‍ക്കാരിന്റെ
നിയമമാണ്‌ വിവരസാങ്കേതികവിദ്യ നിയമം 2000. നെറ്റ്വര്‍ക്ക്‌ സേവനദാതാവിന്റെ ബാധ്ൃ
തകള്‍, ആധികാരികത വരുത്തല്‍, ഡിജിറ്റല്‍ ഒപ്പ്‌, സൈബര്‍ കുറ്റകൃത്യങ്ങള്‍ എന്നിവയു
മായി ബന്ധപ്പെട്ട വിവിധ വശങ്ങളെ ഈ നിയമം സ്പര്‍ശിക്കുന്നു. ഇലക്ര്രോണിക്‌ ഡാറ്റ
കൈമാറ്റത്തിലൂടെയുള്ള ഇടപാടുകള്‍ക്കും മറ്റ്‌ ഇലക്ര്രോണിക്‌ ആശയ വിനിമയ രീതി
കള്‍ക്കും ഈ നിയമം അംഗീകാരം നല്‍കുന്നു.

പേപ്പര്‍ ഉപയോഗിച്ചുള്ള ആശയ വിനിമയത്തിന്‌ പകരമുള്ള മാര്‍ഗങ്ങള്‍ നല്‍കുകയും
സര്‍ക്കാര്‍ ഏജന്‍സികളുടെ രേഖകള്‍ ഇലക്ര്രോണിക്‌ ആയി ഫയല്‍ ചെയ്യാനും ഐ.ടി
നിയമം സഹായിക്കുന്നു. കൂടാതെ ഇലക്രരോണിക്‌ ആശയ വിനിമയത്തിന്‌ നിയമ പ്രാബ
ല്യം നല്‍കുന്നു. ഇത്‌ സൈബര്‍ ഉഇടത്തിലുള്ള കുറ്റകൃത്യങ്ങള്‍, തര്‍ക്കങ്ങള്‍ എന്നിവ
നേരിടുന്നതിനും സൈബര്‍ കുറ്റകൃത്യങ്ങളുടെ ഇരകള്‍ക്ക്‌ നീതി ലഭ്യമാക്കുവാന്‍ സഹാ
യകമാവുകയും ചെയ്യുന്നു. ഇന്ത്യയിലെ ഇ-വാണിജ്ൃത്തിനുള്ള നിയമപരമായ അടിത്തറ
ഒരുക്കുന്നതിന്‌ ഐ.ടി. നിയമം ലക്ഷ്യമിടുന്നു. ഐ.ടി. വ്യവസായത്തെ പ്രോത്സാഹിപ്പി
ക്കുന്നതിനും ഇ-വാണിജ്യം നിയന്ത്രിക്കുന്നതിനും ഇ-ഭരണത്തിന്‌ സൌകര്യമൊരുക്കുന്ന
തിനും സൈബര്‍ കുറ്റങ്ങള്‍ തടയുന്നതിനുമാണ്‌ ഈ നിയമം ഉണ്ടാക്കിയിട്ടുള്ളത്‌.
ആഗോള തലത്തില്‍ രാജ്യത്തെ സേവിക്കുന്നതിന്‌ ഇന്ത്യക്കകത്തു തന്നെയുള്ള സുരക്ഷാ
ക്രമീകരണ രീതികളെ ഇത്‌ പ്രോത്സാഹിപ്പിക്കുന്നു. ഈ നിയമമനുസരിച്ച്‌ ചില നിയമ
ലംഘനങ്ങള്‍ ഗാരവമുള്ള കുറ്റങ്ങളായി കണക്കാക്കി കുറ്റവാളികളെ നിയമ വിചാരണ
യ്ക്ക്‌ വിധേയമാക്കുകയും ചെയ്യുന്നു. അതിനാല്‍ ഐ.ടി. നിയമം 2000 ന്റെ പ്രധാനപ്പെട്ട
ആശയങ്ങള്‍ മനസ്സിലാക്കേണ്ടതാണ്‌.

2000 മെയ്‌ മാസത്തിലാണ്‌ ഇന്ത്യന്‍ പാര്‍ലമെന്റില്‍ വിവര സാങ്കേതികവിദ്യ ബില്‍ പാസ്സാ
ക്കിയത്‌. ഇത്‌ വിവര സാങ്കേതികവിദ്യ നിയമം 2000 എന്നറിയപ്പെടുന്നു. പിന്നീട്‌ ഈ
നിയമം “ ഐ.ടി. ഭേദഗതി ബില്‍ 2008” എന്ന പേരില്‍ ഭേദഗതി ചെയ്ത്‌ 2008 ഡിസംബറില്‍
പാസ്സാക്കി. വിവര സാങ്കേതികവിദ്യ നിയമം 2000 നു ശേഷമുള്ള ഐ.ടി പുരോഗതിയും
സുരക്ഷാ കാര്യങ്ങളും ഇതില്‍ ഉള്‍പ്പെടുത്തിയിട്ടുണ്ട്‌. വൈറസ്‌ കൊണ്ടോ, സേവനം
നിഷേധിക്കുന്നത്‌ കൊണ്ടോ, കമ്പ്യൂട്ടറുകള്‍ ക്കോ, കമ്പ്യൂട്ടര്‍ നെറ്റ്വര്‍ക്കുകള്‍ക്കോ
ഉണ്ടാകുന്ന കേടുപാടുകള്‍ക്ക്‌ നഷ്ടപരിഹാരം നല്‍കേണ്ടതാണ്‌. ഈ നിയമത്തിലെ 65-74
ഭാഗങ്ങള്‍ സൈബര്‍ കുറ്റങ്ങളെപ്പറ്റി പ്രത്യേകം പ്രതിപാദിക്കുന്ന.

12. വിവര ആശയവിനിമയ സാങ്കേതികവിദ്യയും സമുഹവും:

ഐ.ടി നിയം 2000 ലും ഐ.ടി ഭേദഗതി 2008 ലും
സുചിദിച്ചിട്ടുള്ള ചില സാധാരണ കുറ്റങ്ങളും അവയുടെ ശിക്ഷകളും

&

റും
65 കമ്പ്യൂട്ടറിന്റെ സോഴ്‌സ്‌ കോഡില്‍ നാരം | 2 ലക്ഷം രൂപ വരെ പിഴയോ, 3 വര്‍ഷം തടവോ രണ്ടും
വരുത്തുക കൂടിയോ
കമ്പ്യൂട്ടറുമായി ബന്ധകെട്ട കുറ്റങ്ങള്‍ 5 ലക്ഷം രൂപ പിഴയോ, 3 വര്‍ഷം വരെ തടവോ രണ്ടും
കൂടിയോ
66B മോഷ്ടിച്ച കമ്പ്യുട്ടര്‍, ആശയവിനിമയ 1 ലക്ഷം രൂപ പിഴയോ, 3 വര്‍ഷം വരെ തടവോ രണ്ടും
സംവിധാനം ഉവ വാങ്ങുക കൂടിയോ

ഐഡന്റിറ്റി മോഷണം നടത്തുക 1 ലക്ഷം രൂപ പിഴയോ, 3 വര്‍ഷം വരെ തടവോ

കമ്പ്യൂട്ടര്‍ വിഭവങ്ങള്‍ ഉപയോശിച്ച്‌ 1 ലക്ഷം രൂപ പിഴയോ, 3 വര്‍ഷം വരെ തടവോ രണ്ടും
ആള്‍ മാറാട്ടം നടത്തി വഞ്ചിക്കുക കൂടിയോ

66E സ്വകാര്യത ലംഘനം 2 ലക്ഷം രുപ പിഴയോ, 3 വര്‍ഷം വരെ തടവോ രണ്ടും
കൂടിയോ

ഉലക്രോണിക്‌ രീതിയില്‍ അശ്ലീലം 2 മുതല്‍ 3 വര്‍ഷം വരെ തടവും 5 ലക്ഷം രുപ വരെ
പ്രചരിവിക്കല്‍ പിഴയും. കുറ്റം ആവര്‍ത്തിച്ചാല്‍ 5 വര്‍ഷം വരെ തടവും
10 ലക്ഷം രൂപ വരെ പിഴയും

67A | ഉലക്രോണിക്‌ രീതിയില്‍ ലൈംഭിക 10 ലക്ഷം രൂപ വരെ പിഴയും, 5 വര്‍ഷം വരെ തടവും
അതിക്രമം പ്രചരിഷിക്കല്‍

ഉലഭക്്രോണിക്‌ രീതിയില്‍ കുട്ടികള്‍ക്കെ | 5 വര്‍ഷം വരെ തടവും 10 ലക്ഷം രൂപ വരെ പിഴയും.
തിരെയുള്ള ലൈംഥിക അതിക്രറം കുറ്റം ആവര്‍ത്തിച്ചാല്‍ 7 വര്‍ഷം വരെ തടവും 10 ലക്ഷം
പ്രചരിവിക്കല്‍ രൂപ വരെ പിഴയും

ഓണ്‍ലൈന്‍ ആശയവിനിമയ സംവിധാനങ്ങളായ ഉ. മെയില്‍, സാമൂഹിക മാധ്യമം, എസ്‌.എം.എസ്‌. മുതലായ

വയിലൂടെ അശ്ലീല സന്ദേരങ്ങള്‍ അയച്ചാലുള്ള ശിക്ഷാനടപടികള്‍ ഉന്ത്യന്‍ പീനല്‍ കോഡിലെ (IPC) ബന്ധ
കെട്ട വിദാഗങ്ങള്‍ക്കനുസരിച്ചായിരിക്കും.

12.2.8 സൈബര്‍ കുറ്റാന്വേഷണം (Cyber forensics)

സൈബര്‍ കുറ്റങ്ങളുടെ വര്‍ധന നിതൃജീവിതത്തെയും രാജ്യ സുരക്ഷയെയും ബാധി
ക്കുന്നു. വളരെയധികം സാകര്യങ്ങള്‍ ഇന്റര്‍നെറ്റ്‌ വഴി ലഭ്യമാണെങ്കിലും അത്‌ കുറ്റവാളി
കള്‍ക്ക്‌ കൂടുതല്‍ കുറ്റങ്ങള്‍ ചെയ്യുന്നതിന്‌ സഹായകമാകുന്നു. സൈബര്‍ കുറ്റങ്ങള്‍ കണ്ടു
പിടിച്ച്‌ അന്വേഷണം നടത്തി ശിക്ഷിക്കുവാന്‍ പരമ്പരാഗതമായി ഉണ്ടായിരുന്ന നിയമങ്ങള്‍
ഫല്പ്രദമായിരുന്നില്ല.

ശാസ്ത്രീയമായ അറിവുപയോഗിച്ച്‌ കുറ്റകൃത്യങ്ങള്‍ കണ്ടുപിടിക്കുകയും, അവ തെളിവു
കള്‍ സഹിതം ശേഖരിക്കുകയും, വിശകലനം ചെയ്ത്‌ കോടതിക്ക്‌ സമര്‍പ്പിക്കുകയും

തനന ന്ത്‌ അ

ചെയ്യുന്ന പ്രക്രിയയാണ്‌ ഫോറെന്‍സിക്സ്‌. നിയമവും കമ്പ്യൂട്ടര്‍ സയന്‍സും യോജിപ്പിച്ച്‌
കമ്പ്യൂട്ടര്‍ സിസ്റ്റങ്ങള്‍, നെറ്റ്വര്‍ക്കുകള്‍, ആശയവിനിമയ സംവിധാനങ്ങള്‍ ഇവയില്‍
നിന്നുള്ള വിവരങ്ങള്‍ വിശകലനം നടത്തി കോടതിക്ക്‌ തെളിവ്‌ കൊടുക്കുന്ന
ശാസ്‌ ര്രശാഖയാണ്‌ സൈബര്‍ ഫോറന്‍സിക്‌ സ്‌. ശേഖരിച്ച തെളിവുകളുടെ
സതൃസന്ധതയെ സംരക്ഷിക്കുന്ന വിധത്തില്‍ ഡാറ്റ വിശകലനം ചെയ്ത്‌ നിയമാനുസ
രണം ഫലപ്രദമായി ഉപയോഗിക്കലാണ്‌ കമ്പ്യൂട്ടര്‍ ഫോറെന്‍സിക്സിന്റെ ലക്ഷ്യം.

12.4.9 ഇന്‍ഫോഠാനിയ (Infomania)

വിവരങ്ങള്‍ വിജയത്തിന്റെ താക്കോലാണ്‌. അവ ശേഖരിച്ച്‌ പ്രൊസസ്സ്‌ ചെയ്തു വേണം
ഉപയോഗിക്കേണ്ടത്‌. എന്നാല്‍ ഒരാള്‍ക്ക്‌ താങ്ങാവുന്നതിലധികം വിവരങ്ങള്‍ ലഭിക്കുകയാ
ണെങ്കില്‍ അയാള്‍ക്ക്‌ എന്ത്‌ ചെയ്യാനാകും? ഇങ്ങനെ അധികവിവരങ്ങള്‍ ഉപയോഗിച്ച്‌
പരിക്ഷീണിതനാകുന്ന അവസ്ഥയാണ്‌ ഇന്‍ഫോമാനിയ.

ഇന്റര്‍നെറ്റ്‌, ഇമെയില്‍, സെല്‍ഫോണ്‍ തുടങ്ങി അനേകം സ്രോതസ്സുകളില്‍ കുമിഞ്ഞു
കൂടുന്ന വിവരങ്ങള്‍ പ്രോസസ്സ്‌ ചെയ്യാന്‍ കഴിയാത്തതു മൂലമാണ്‌ ഇന്‍ഫോമാനിയ
ഉണ്ടാകുന്നത്‌. വിവരങ്ങള്‍ ശേഖരിക്കുമ്പോള്‍ അവയുടെ ഗുണമേന്മയും പ്രസക്തിയും
കണക്കിലെടുക്കണം. വിവരങ്ങള്‍ ശേഖരിക്കാനുള്ള അമിതാവേശമാണ്‌ ഇന്‍ഫോമാനിയ.
ഇത്‌ മൂലം കുടുംബം, കര്‍ത്തവ്യങ്ങള്‍ തുടങ്ങിയ കൂടുതല്‍ പ്രധാനപ്പെട്ട കാര്യങ്ങള്‍
അവഗണിക്കപ്പെടുന്നു. ഭക്ഷണ സമയത്തു പോലും വിവരങ്ങള്‍ (്രൌസ്‌ ചെയ്ത്‌ കൊണ്ടി
രിക്കുന്നവരെ നാം കണ്ടിട്ടുണ്ട്‌. ഇത്‌ ഒരു മാനസിക പ്രശ്നമാണ്‌. സ്ഥിരമായി ഇ-മെയില്‍,
സാമൂഹിക നെറ്റ്വര്‍ക്കുകള്‍, ഓണ്‍ലൈന്‍ വാര്‍ത്തകള്‍ എന്നിവ പരതികൊണ്ടിരിക്കുന്നത്‌
ഇന്‍ഫോമാനിയയുടെ ലക്ഷണങ്ങളാണ്‌. തങ്ങളെ തന്നെ മെച്ചപ്പെടുത്തി സ്വന്തം ഗ്രൂപ്പില്‍
നിന്നും പുറത്താകാതിരിക്കുന്നതിനാണ്‌ മിക്കവാറും ഇങ്ങനെ ചെയ്യുന്നത്‌.

ഇന്‍ഫോമാനിയയ്ക്ക്‌ അടിമപ്പെട്ടിട്ടുള്ളവര്‍ക്ക്‌ ശ്രദ്ധയും ഉറക്കവും കുറയുന്നു. സാങ്കേതിക
വിദ്യയുടെ അമിതോപയോഗം ബുദ്ധി കുറയ്ക്കുന്നു. ചിലര്‍ ഇ-മെയിലിലും സാമൂഹിക
മാധ്യമങ്ങളിലും വരുന്ന സന്ദേശങ്ങള്‍ക്ക്‌ മറുപടി അയയ്ക്കുന്നതിന്‌ മുന്‍ഗണന നല്‍കുന്നു.
ഇതിനാല്‍ അവര്‍ കുടുംബത്തിലെയും തൊഴിലിലെയും പ്രധാന കാര്യങ്ങള്‍ മറന്നു പോ
കുന്നു. ഇതില്‍ നിന്ന്‌ രക്ഷ നേടാന്‍ കുടുംബ കാര്യങ്ങളും തൊഴിലും ചെയ്യുമ്പോള്‍
സാമൂഹിക മാധ്യമങ്ങള്‍ ഉപയോഗിക്കുന്നതില്‍ നിന്നും, ഓണ്‍ലൈന്‍ വാര്‍ത്തകള്‍
കാണുന്നതില്‍ നിന്നും തല്‍ക്കാലത്തേക്കെങ്കിലും മാറി നില്‍ക്കാന്‍ അഥവാ ലോഗ്‌ ഓഫ്‌
ചെയ്യാന്‍ പഠിക്കണം.

നിങ്ങളുടെ പുരോഗതി അറിയുക

1. ഇന്ത്യയില്‍ ഏതു വര്‍ഷമാണ്‌ ഐ.ടി നിയമം നിലവില്‍ വന്നത്‌?
, 2. ഐ.ടി നിയമത്തിന്റെ ഉദ്ദേശ്യമെന്താണ്‌?

3. സൈബര്‍ ഫോറന്‍സിക്സ്‌ എന്നതുകൊണ്ട്‌ ഉദ്ദരിക്കുന്നതെന്താണ്‌?

4. അറിവ്‌ സമ്പാദിക്കാനുള്ള അമിതാവേശമാണ്‌

12. വിവര ആശയവിനിമയ സാങ്കേതികവിദ്യയും സമുഹവും:

ക നമുക്ക്‌ ചുരുക്കാം

വിവര സാങ്കേതികവിദ്യ അതിവേഗം വളരുന്ന ഒരു മേഖലയാണ്‌. നമ്മുടെ ദൈനം
ദിന പ്രവര്‍ത്തനങ്ങളില്‍ ഇത്‌ വ്യാപകമായി ഉപയോഗിക്കപ്പെടുന്നു. വ്യാപാര
ഇടപാടുകള്‍, സര്‍ക്കാരിന്റെ വിവിധ പ്രവര്‍ത്തനങ്ങള്‍, പഠന പ്രക്രിയകള്‍ തുടങ്ങിയ
വയാണ്‌ വിവര സാങ്കേതികവിദ്യ ഗണ്യമായി ഉപയോഗിച്ചിരിക്കുന്ന പ്രധാന മേഖ
ലകള്‍. ആശയ വിനിമയത്തിന്റെ പുരോഗതി വിവര സാങ്കേതികവിദ്യയുടെ വളര്‍
ച്ചക്ക്‌ വളരെയേറെ കടപ്പെട്ടിരിക്കുന്നു. വിവര സാങ്കേതികവിദ്യയുടെ വേറൊരു
പര്യായമായി വിവരവും ആശയവിനിമയ സാകങ്കേതികവിദ്യയും ഉപയോഗിക്കുന്നു.
അതിനാല്‍ വിവര സാങ്കേതികവിദ്യയും വിവര ആശയവിനിമയ സാങ്കേതിക വിദ്യ,
യും ഉപയോഗിച്ചുള്ള സേവനങ്ങള്‍ ആധുനിക സമൂഹത്തിന്റെ അവിഭാജ്യ ഘടക
മായി തീര്‍ന്നിട്ടുണ്ട്‌. ഇരുപത്തി ഒന്നാം നൂറ്റാണ്ടിലെ സാങ്കേതിക വൈദഗ്ധ്യമുള്ള
ലോകത്ത്‌ കൂടുതല്‍ ആളുകള്‍ ഇന്റര്‍നെറ്റ്‌ വഴി സാമൂഹിക നെറ്റ്‌ വര്‍ക്കുകള്‍, നെറ്റ്‌
ബാങ്കിങ്‌, മൊബൈല്‍ അപ്പ്ലിക്കേഷനുകള്‍, ഇ-ഷോപ്പിംഗ്‌ എന്നിവയിലൂടെ ഇന്റര്‍
നെറ്റ്‌ ഉപയോഗിക്കുന്നു. ഒരു വ്ൃക്തിക്ക്‌ സൈബര്‍ ഇടം വഴി പലതരം ജോലികള്‍
ചെയ്യാന്‍ കഴിയും. അഞ്ജാത സ്വഭാവം കാരണം സൈബര്‍ ഇടം ക്രിമിനലുകള്‍ക്ക്‌
വേദിയായി മാറി. കുറ്റങ്ങള്‍ ഒരു വ്യക്തിക്കോ, സ്വത്തിനോ സര്‍ക്കാരിനോ എതിരാ
യിരിക്കാം. സുരക്ഷിതമായിരിക്കാനുള്ള എളുപ്പ മാര്‍ഗ്ഗം ഇന്റര്‍നെറ്റിലെ കെണികളെ
ക്കുറിച്ച്‌ അറിഞ്ഞിരിക്കുക എന്നതാണ്‌. സൃഷ്ടിക്കുന്ന (സഷ്ടാവ്‌ അല്ലെങ്കില്‍ സംഗീ
തം, സോഫ്റ്റ്വെയര്‍, കലാസൃഷ്ടി, കൃതികള്‍, കണ്ടുപിടുത്തങ്ങള്‍ തുടങ്ങിയവയുടെ
ഉടമസ്ഥാവകാശം ബദദ്ധിക സ്വത്തവകാശനിയമങ്ങളാല്‍ സംരക്ഷിക്കപ്പെട്ടിരിക്കു
ന്നു. സൈബര്‍ സ്പേസില്‍ സുരക്ഷിതമായ പരിസ്ഥിതിക്ക്‌ ചട്ടങ്ങള്‍ ഏര്‍പ്പെടു
ത്തുന്ന സൈബര്‍ നിയമങ്ങളുണ്ട്‌. ഇന്ത്യക്ക്‌ കരുത്തുറ്റ ഐ.ടി നിയമമുണ്ട്‌. കമ്പ്യൂട്ട
റുകള്‍, ഇന്റര്‍നെറ്റ്‌, മൊബൈല്‍ ഫോണ്‍ എന്നിവ ഉപയോഗിച്ച്‌ നടത്തിയ വിവിധ
കുറ്റകൃത്യങ്ങളെ ഇത്‌ അഭിസംബോധന ചെയ്യുന്നു.

എല്ലാ സിവില്‍ ക്രിമിനല്‍ കേസുകളിലും നിയമ നടപടികളുടെ ഭാഗമായി സൈബര്‍
കുറ്റാന്വേഷണം ഉയര്‍ന്നു വന്നു. ഐ.ടി അടിസ്ഥാന സൌകര്യങ്ങള്‍ ഉപയോഗിച്ച്‌
നടത്തിയ കുറ്റകൃത്യങ്ങള്‍ എളുപ്പത്തില്‍ കണ്ടെത്താന്‍ കഴിയുന്ന ഡിജിറ്റല്‍ തെളി
വുകള്‍ അവശേഷിക്കുന്നു. ഇന്റര്‍നെറ്റ്‌ ഉപയോഗിക്കുമ്പോള്‍ ഞങ്ങളുടെ പ്രവര്‍ത്ത
നങ്ങള്‍ മറ്റുള്ളവര്‍ക്ക്‌ ദോഷം വരുത്തുന്നില്ലെന്ന്‌ ഉറപ്പു വരുത്തുക. വിവരങ്ങള്‍

കൂടുതലാകുമ്പോള്‍ അവ സൃഷ്ടിച്ച പ്രശ്നങ്ങള്‍ പരിഹരിക്കുന്നതിനായി “ഇന്‍ഫോ
മാനിയ” എന്ന പദം ഉപയോഗിക്കുന്നു.

a ഞ്ഞ്ഞ്ഞറററഞ്ഞ
നന്തി !11111111111111111111181

DOSA TY വായിക്കാന്‍ ഉപയോഗിക്കുന്ന ഒരു ഇലക്ര്രോണിക്‌ ഉപകരണത്തിന്‌ പേര്‌
നല്‍കുക

2. ഏതെങ്കിലും രണ്ട്‌ ഇ-പഠന ഉപകരണങ്ങള്‍ക്ക്‌ പേര്‌ നല്‍കുക

3. ഇഭരണത്തിലെ വിവിധ തരം ആശയ വിനിമയം പരിചയപ്പെടുത്തുക
4. ഇഭരണത്തിന്റെ മേന്മകള്‍ എന്തെല്ലാമാണ്‌

5. അക്ഷയ സെന്ററുകളുടെ കടമകള്‍ എന്തെല്ലാമാണ്‌?

6. D-alOMo നടപ്പാക്കുന്നതില്‍ അഭിമുഖീകരിക്കുന്ന പ്രധാന വെല്ലുവിളികള്‍ എന്തെ
ല്ലാമാണ്‌?

7. ഇവ്യാപാരം നടപ്പാക്കുന്നതിന്റെ ഗുണങ്ങളും ദോഷങ്ങളും താരതമ്യം ചെയ്യുക
8. സൈബര്‍ ഇടം എന്നാല്‍ എന്താണ്‌?

9. സൈബര്‍ ഇടം ഒരു അയഥാര്‍ത്ഥ ലോകം എന്ന്‌ പറയുന്നതെന്തുകൊണ്ടാണ്‌?
10. ഫിഷിംഗ്‌ (phishing) എന്നത്‌ ..................... ന്‌ ഉദാഹരണമാണ്‌

11. വിവിധ തരത്തിലുള്ള സൈബര്‍ കുറ്റകൃത്യങ്ങള്‍ വിശദമായി വിവരിക്കുക

12. സൈബര്‍ ഇടത്തില്‍ സ്വയം സംരക്ഷിക്കപ്പെടുന്നതിനുള്ള ഏറ്റവും നല്ല മാര്‍ഗ്ഗമാണ്‌
അവബോധം. അഭിപ്രായം പറയുക

13. വ്യാപാരമുശ്രയും വ്യാവസായിക രൂപകല്‍പ്പനയും തമ്മിലുള്ള വ്യത്യാസം എന്താണ്‌?

14. പകര്‍പ്പവകാശം എന്താണ്‌? കുത്തകാവകാശത്തില്‍ നിന്ന്‌ ഇത്‌ എങ്ങിനെ
വ്യത്യാസപ്പെട്ടിരിക്കുന്നു?

15. ബരദദ്ധിക സ്വത്തവകാശം മുഖേന ഉടമക്ക്‌ നല്‍കിയ പ്രത്യേക അവകാശം വിവരിക്കുക
16. എന്താണ്‌ പൈറസി അഥവാ സോഫ്റ്റ്വെയര്‍ മോഷണം?

17. കയ്യേറ്റം ചെയ്യല്‍ (Infringement) എന്നത്‌ കൊണ്ട്‌ ഉദ്ദേശിക്കുന്നതെന്താണ്‌?

18. സൈബര്‍ നിയമം പ്രധാനമായിരിക്കുന്നത്‌ എന്തുകൊണ്ട്‌?

19. സൈബര്‍ കുറ്റകൃത്യത്തിന്റെ (്രാദേശികമല്ലാത്ത സ്വഭാവം അന്വേഷകര്‍ക്ക്‌
പ്രശ്നങ്ങള്‍ സൃഷ്ടിക്കുന്നു. വിശദീകരിക്കുക

20. ഇന്‍ഫോമാനിയ ഒരു മാനസിക പ്രശ്നമായി മാറിയിരിക്കുന്നു. നിങ്ങളുടെ അഭിപ്രായം
എഴുതുക

അംധങ്ങള്‍

അടിസ്ഥാന ക്ലാസ്‌
അടിസ്ഥാന ഡാറ്റ ഉനം
അടിസ്ഥാന വിലാസം
അടിസ്ഥാനപരമായ
അന്തര്‍നിര്‍മിത ഫങ്ഷന്‍
അവ്യക്തയുക്തി
അളക്കാവുന്ന അവസ്ഥ
അവകാര കൈയേറ്റം
അബ്‌സ്ട്രാക്ട്‌ ഡാറ്റകള്‍
അസ്ഥിര ദരാംശര സംഖ്യ
ആധാരസംഖ്യ
ആധികാരികത

ആഗോള സ്ഥാന നിര്‍ണ്ണയ വ്യവസ്ഥ
ആര്‍ധ്യുമെന്‍റ്‌

@- വ്യാപാരം

ഉപവാക്യ ടാന്‌

IP 2േര്‍വിലാസം
കമ്പ്യൂട്ടിങ്‌ യ്രന്തം
കമ്പ്യുട്ടിങ്‌ വിജ്ഞാനരാഖ
കമ്പ്യൂട്ടിങ്‌ സിദ്ധാന്തം
AMG കമ്പ്യൂട്ടിങ്‌
കുത്തകാവകാരം

കുറവ്‌ ഓഷറേറ്റര്‍

ക്രമ ലിസ്റ്‌
ക്രമഷെടുത്തല്‍
ക്രമപ്രകാരമുള്ള വര്‍ഥീകരണം
ക്രമീകരിക്കുക

ണന ബുല്ധി

പദാവലി

Elements

Base Class
Fundamental data type
Base address
Fundamental

built in funcion

fuzzy logic

scalabiltiy
infringement

abstract data types
floating point number
base number
authentication

global positioning sysetm (GPS)
argument

e-business

phrase tag

IP address

computing machine
computing discipline
theory of computing
cluster computing
patent

decrement operator)
ordered list

sorting

hierarchial classification

set up

computational intelligenece

ഘടന
R വില

ടൈദ്‌ മോഡിഫയര്‍

ഡാറ്റ അംഗങ്ങള്‍

ഡാറ്റ ഉനം

ഡാറ്റ സ്ദ്രക്ചര്‍

ഡാറ്റ സുരക്ഷ

ഡാറ്റ സംഗ്രഹം

ഡാറ്റ നിര്‍വചന ദാഷ

ഡാറ്റ കൈകാര്യം ചെയ്യുന്ന ദാഷ
ഡാറ്റ നിയ്യന്രണ ഭാഷ

ഡൊമൈന്‍ നാമകരണ സ്രമ്രദായം
തനതുവില

തലക്കെട്ട്‌

തിരയല്‍

ത്രികോണമിതി

ത്രിതല ഘടന

ദ്വിതീയ മെമറി

ദൃര്യസാങ്കേതിക വിവരവ്യവസ്ഥ
നിര്‍മിത ബുദ്ധി

നിര്‍വചനം

നീക്കം ചെയ്യല്‍
നീക്കി വയ്ക്കുക
നിര്‍മിത ബുദ്ധി
പകര്‍ഷവകാരം
പദപ്രയോഗം
പരിപാലനം
പരിവര്‍ത്തനാത്മകം
പരിണാമിക ഉണം

പുനരുപയോരം

template

R Value

type modifier

data elements

data type

data structure

data security

data abstraction

data definion language
data manipulation language
data control language
domain naming system
fefault value

heading

dearch

trigonometry

three tier architecture
secondary memory
graphical information sysetm
artificial intelligence
definition

deletion

allocate

artifical intelligence
copy right

expression
maintainabiltiy
dynamic

evolutionary computation

reusabiltiy

പൊതു അവലോകനം
പൊതു സേവന ക്രേന്ദങ്ങള്‍
പഖ്യാപനം

പഖ്യാപന പ്രസ്താവന
പ്ര്നങ്ങള്‍ നിര്‍ധാരണം ചെയ്യുക
പ്രസ്താവന

പ്രാഥമിക മെമറി

പ്രാഥമികമായ ഡാറ്റാ Te: 91d
പ്രാദേരിക ൧

പ്രാരം വില നല്‍കല്‍

പ്രാവര്‍ത്തിക്മാക്കല്‍
പ്രോര്രോമിങ്‌ മാതൃക
ബാഹ്യ ഉനം മാറ്റല്‍
ബാഹൃഫയല്‍

MDA സ്വത്താവകാരം
മാതൃക

മുഖം തിരിച്ചറിയല്‍
മെമറി വലുഷം
മെജറിസ്ഥാനം
മൊബൈല്‍ ആരയവിനിയമം
രൂപമാറ്റം വരുത്തുക
രുപികൃത ക്ലാസ്‌
രുപികൃത ഡാറ്റ ഇനം
രുപികൃത ഡാറ്റ ഇനം
രേഖിയം
രേഖീയാല്ലാത്തത്‌
ലയിക്കുക

ലിഖിതം

വര്‍ദ്ധനവ്‌ ഓഷറേറ്റര്‍

വഹനീയത

overview

common service centre
declaration

declaration statement
problem solving
statement

primary memory
simple data structure
local DNS

initialization
implementation
programming paradigm
explicit type conversion
external file
intellectual property right
paradigm

face recognition
memory size

memory location
mobile communication
encrypt

derived class

derived data type
derived data type

linear

non liner

merging

document

increment operator

portabiltiy

വാക്യ ഘടന
വിദൂര സെര്‍വര്‍

വില നല്‍കല്‍ പ്രസ്താവന
വിലാസ സ്ര്പ്രദായം

വ്യാപാര 2318

വുത്താകുത ക്യു

രകലം

രീര്‍ഷകം

സന്ദേര ജാലകം

സമ്ര്രത

സമ്പര്‍ക്കമുഖം
സംയോചിതം//ഏകോപിതം
സംയോജിത/ഏകോപിത ഡാറ്റ സ്ദ്രക്ചര്‍
സാര്‍ഥക ചിഹ്നങ്ങള്‍

സിംരിള്‍ ഉന്‍ഹെറിറ്റന്‍സ്‌
Mohd alas ലിസ്റ്റ്‌
സുരക്ഷിതം

സെര്‍വര്‍ നവീകരണം

സ്ക്രീന്‍ വലുഷം

സ്ര്രക്ച്ഛര്‍

സ്ഥാനീയ സംഖ്യാന സ്ര്രദായം
സ്ഥിര ഡാറ്റ സ്ദ്രക്ച്ചര്‍
സ്ഥിരവില

സ്വയം സുചിത

Me

സ്റ്റോക്‌ അണര്‍ഫ്‌ളോ

സ്റ്റോക്‌ ഓവര്‍ഫ്‌ളോ
സംഭാഷണം ഗ്രഹിക്കുക
സൈബര്‍ ഇദം

സൈബര്‍ നിയമങ്ങള്‍

syntax

remote server
assignment statement
addressing scheme
trade mark

circular queue
segment

caption

message window
integrtiy

interface

grouped

compound data structure
reserved character
single inheritance
singly linked Isti
secure

server update

screen size

structure

positional value number system
static data structure
constant

self referential

stack

stack underflow
stack overflow
speech recognition

cyber space

cyber laws

സൈബര്‍ കുറ്റാന്വേഷണം : cyber forensics

സ്വയം പ്രവര്‍ത്തിത ദാഷണവേചനം : auomtatic speech recognition (ASR)

കേരളസര്‍ക്കാര്‍
പൊതുവിദ്യാഭ്യാസ വകുപ്‌

സംസ്ഥാന വിദ്യാദ്യാസ ഗവേഷണ പരിശീലന സമിതി (ഭവ്യ); കേരളം
2019

ദേശീയഗാനം
ജനഗണമന അധിനായക ജയഹേ
ഭാരത ഭാഗ്യവിധാതാ,
പഞ്ചാബസിന്ധു ഗുജറാത്ത മറാഠാ
ദ്രാവിഡ ഉത്ക്കല ബംഗാ,
വിന്ധൃഹിമാചല യമുനാഗംഗാ,
ഉച്ഛല ജലധിതരംഗാ,
തവശുഭനാമേ ജാഗേ,
തവശുഭ ആശിഷ മാഗേ,
ഗാഹേ തവ ജയ ഗാഥാ
ജനഗണമംഗലദായക ജയഹേ
ഭാരത ഭാഗ്യവിധാതാ
ജയഹേ, ജയഹേ, ജയഹേ,

ജയ ജയ ജയ ജയഹേ!

പ്രതിഇഞ

ഇന്ത്യ എന്റെ രാജ്യമാണ്‌. എല്ലാ ഇന്ത്യക്കാരും എന്റെ
സഹോദരീ സഹോദരന്മാരാണ്‌.

ഞാന്‍ എന്റെ രാജ്യത്തെ സ്നേഹിക്കുന്നു;
സമ്പൂര്‍ണവും വൈവിധ്യപൂര്‍ണവുമായ അതിന്റെ
പാരമ്പര്യത്തില്‍ ഞാന്‍ അഭിമാനം കൊള്ളുന്നു.
ഞാന്‍ എന്റെ മാതാപിതാക്കളെയും ഗുരുക്കന്മാരെയും
മുതിര്‍ന്നവരെയും ബഹുമാനിക്കും.

ഞാന്‍ എന്റെ രാജ്യത്തിന്റെയും എന്റെ നാട്ടുകാരു
ടെയും ക്ഷേമത്തിനും ഐശ്വര്യത്തിനും വേണ്ടി
പ്രയത്നിക്കും.

ഏതു വിജ്ഞാനവും മാതൃഭാഘയില്‍ പഠിക്കാനും പ്രകാശനം ചെയ്യാനും സാധി

ക്കും. അതിനുളള അവസരം പഠിതാക്കള്‍ക്ക്‌ ഒരുക്കേണ്ടത്‌; ഏതൊരു പഠന സന്പ്ര
ദായത്തിന്റെയറും അനിവാര്യതയാണ്‌. അതിന്റെ തൂടക്കമെന്ന നിലയ്ക്കാണ്‌
ഹയര്‍സെക്കന്ററി തലത്തില്‍ ഭാഘേതര വിഘയങ്ങളിലെ പാഠപുസ്തകങ്ങള്‍ മല
യാളത്തില്‍ പ്രസിദ്ധികരിക്കുന്നത്‌.:

മാത്ൃഭാഘയിലമൂടെയുള്ള വിദ്യാഭ്യാസം, ജ്ഞാനസമ്പാദനത്തിനമൂള്ള സുഗമമാര്‍ഗം
എന്നതിഗനോടൊഷം സാംസ്കാരികത്തനിമയമുടെ തിരിച്ചറിയല്‍ കൂടിയാണ്‌:
അതുകൊണ്ടാണ്‌ വികസിതരാജ്യങ്ങള്‍ മാതൃഭാഘയെ മുുഖ്യബോധന മാധ്യമമായി
സ്വികരിച്ചിരിക്കൂന്നത്‌. ഇന്ത്യയിലാകട്ടെ, ദേശീയതലത്തിലുള്ള പ്രധാന പരീക്ഷക
ഒളെല്ലാം പ്രഠാദദശിക ഭാഘകളില്‍ക്കമൂടി നടത്തുന്നതിനുള്ള സംവിധാനവും ഉണ്ടായി
വരികയാണ്‌. ഈയൊരു സാഹചര്യത്തില്‍ നമ്മൂടെ കുട്ടികളും മാതൃഭാഘയറുടെ
ശക്തിസാന്ദര്യങ്ങള്‍ തിരിച്ചറിഞ്ഞ്‌ വിവിധ വിഘയങ്ങളില്‍ ജ്ഞാനനിര്‍മിതിയില്‍
ഏര്‍ഖെടേണ്ടതൂണ്ട്‌. അതിന്‌ അവരെ സജ്ജരാക്കുകയാണ്‌ ഈ പാഠപദുസ്തകങ്ങ
ളൂടെ മുമൂഖ്യ ലക്ഷ്യം.

പരിഭാഘകെടുത്തിയ പുസ്തകങ്ങളില്‍ അതത്‌ വിഘയങ്ങളിലെ സാഭങ്കേതിക പദ
ങ്ങള്‍ പരമാവധി മലയാളത്തിലാക്കിയിട്ടുണ്ട്‌. നമ്മുടെ ഭാഘയില്‍ ചിരപരിചിതമായ
ഇംഗ്ലീഘ്‌ പദങ്ങളെ അഭതപടി സ്വീകരിച്ചിട്ടുമുണ്ട്‌. വിവര്‍ത്തനത്തിന്‌ തീര്‍ത്തദും വഴ
ങ്ങാത്ത പദങ്ങളെ അതേരീതിയില്‍ തന്നെ ഉപഭയാഗിച്ചിരിക്കുന്നമു. മാതൃഭാഘയില്‍
പഠിക്കുന്നവര്‍ക്ക്‌ ആശയഗ്രഹണം സുഗമമാക്കുന്ന വിധത്തിലാണ്‌ പാഠപുസ്തക
രചന നാടത്തിയിരിക്കുന്നത്‌: അതോടൊഷം മലയാളഭാഷയുടെ വളര്‍ച്ചയ്ക്കും
ഈ പ്രവര്‍ത്തനം സഹായകമാകുമെന്ന്‌ കരുതുന്നു.

പാഠപറുസ്തകവിവര്‍ത്തന രംഗത്ത്‌ നമ്മുടെ രാജ്യത്ത്‌ നടന്ന വലിയൊരു കാല്‍വെ
AON ഇത്‌. പ്രഥമ സംരംഭമെന്നനിലയില്‍ പല പരിമിതികളും പരിഭാഘയില്‍
വന്നിട്ടുണ്ടാകാം. ക്ലാസ്മുറിയില്‍ പ്രയോഗത്തില്‍ വരുമ്പോഴാണ്‌ അവയെല്ലാം
കൂടുതല്‍ ബോധ്യഖെടുക. തമൂടര്‍ന്ന്‌ വരുന്ന ഘട്ടങ്ങളില്‍ അവയൊക്കെ പരിഹരി
ക്കുന്നതിന്‌ എല്ലാ അഭ്യുദയകാംക്ളികളില്‍ ന്നിന്നും വിശിഷ്യ അധ്യാപകര്‍,
വിദ്യാര്‍ത്ഥികള്‍ എന്നിവരില്‍ നിന്നും അഭിപ്രായങ്ങളും നിര്‍ദദശങ്ങളും പ്രതീക്ഷി

ANAM.

ഡോ.ജെ. പ്രസാദ്‌

ഡയറക്ടര്‍,

എസ്‌.സി.ഇ.ആര്‍.ടി. കേരളം

പാഠപുസ്തക നിര്‍മാണ സമിതി

കന്മൂടര്‍സയന്‍സ്‌

ശ്രീ. ജോയി ജോണ്‍ ശ്രീ. പ്രശാന്ത്‌ പി.എം.

എച്ച്‌.എസ്‌.എസ്‌.ടി, സെന്റ്‌. ജോസഫ്‌ എച്ച്‌.എസ്‌.എസ്‌.ടി, സെന്റ്‌. ജോസഫ്‌ ബോയ്‌സ്‌
എച്ച്‌.എസ്‌.എസ്‌. തിരുവനന്തപുരം എച്ച്‌.എസ്‌.എസ്‌. കോഴിക്കോട്‌

ശ്രീ. അസീസ്‌ വി. ശ്രീ. വിനോദ്‌ വി.
എച്ച്‌.എസ്‌.എസ്‌ .ടി, ജി.എച്ച്‌ എസ്‌.എസ്‌ എച്ച്‌.എസ്‌.എസ്‌ .ടി, എന്‍.എസ്‌.എസ്‌.
വെള്ളിയോട്‌, കോഴിക്കോട്‌ എച്ച്‌.എസ്‌.എസ്‌, പ്രാക്കുളം, കൊല്ലം
ശ്രീ. റോയ്‌ ജോണ്‍ ശ്രീ. രാജമോഹന്‍ സി.
എച്ച്‌.എസ്‌.എസ്‌.ടി, അലോഷ്യസ്‌ എച്ച്‌.എസ്‌.എസ്‌. എച്ച്‌.എസ്‌.എസ്‌.ടി, നവമുകുന്ദ എച്ച്‌ എസ്‌.എസ്‌.
എല്‍തുരുത്ത്‌, തൃശൂര്‍ തിരുനാവായ, മലഷുറം

ശ്രീ. അബുബക്കര്‍ പി. ശ്രീ. എ.എസ്‌. ഇസ്മൈല്‍

എച്ച്‌.എസ്‌.എസ്‌.ടി, OAL. ജി.എച്ച്‌.എസ്‌.എസ്‌. എച്ച്‌.എസ്‌.എസ്‌.ടി, ഗവ. എച്ച്‌.എസ്‌.എസ്‌.
ചാലകുറം, കോഴിക്കോട്‌ QOS], മലഷുറം
ശ്രീ. ഷാജന്‍ ജോസ്‌ എന്‍. ശ്രീ. സുനില്‍ കാര്യത്തന്‍

എച്ച്‌.എസ്‌.എസ്‌.ടി, സെന്റ്‌. ജോസഫ്‌ എച്ച്‌.എസ്‌.എസ്‌.ടി, ഗവ. ബ്രണ്ണന്‍ എച്ച്‌.എസ്‌.എസ്‌.
എച്ച്‌.എസ്‌.എസ്‌. പാവറട്ടി, തൃശൂര്‍ തലമ്ദേരി

ശ്രീ. അഫ്സല്‍ കെ.എ. ശ്രീ. സായ്‌ പ്രകാര്‌ എസ്‌.

എച്ച്‌.എസ്‌.എസ്‌.ടി, ജി. എച്ച്‌.എസ്‌.എസ്‌. ശിവപുരം, എച്ച്‌.എസ്‌.എസ്‌.ടി, സെന്റ്‌. തോമസ്‌ എച്ച്‌.എസ്‌.എസ്‌.
കരിയാത്തന്‍കരേ പി.ഒ., കോഴിക്കോട്‌ പുന്തുറ, തിരുവനന്തപുരം

ഡോ. ലജീഷ്‌ ail. ages. ഡോ. സുശീല്‍ കുമാര്‍ ആര്‍.

അസിസ്റ്റന്റ്‌ പ്രൊഫസര്‍, ഡിഷാര്‍ട്ട്മെന്റ്‌ ഓഫ്‌ അസോസിയേറ്റ്‌ പ്രൊഫസര്‍, ഡിഷാര്‍ട്ട്മെന്റ്‌ ഓഫ്‌
കമ്പ്യൂട്ടര്‍ സയന്‍സ്‌, കാലിക്കറ്റ്‌ യൂണിവേഴ്‌സിറ്റ്‌ ഉംഗ്ലീഷ്‌, ഡി.ബി. കോളേജ്‌, ശാസ്താംകോട്ട
ഡോ. മധു എസ്‌. നായര്‍ ഡോ. വിനീത്‌ കെ. പലേരി

അസിസ്റ്റന്റ്‌ പ്രൊഫസര്‍, ഡിഷാര്‍ട്ട്മെന്റ്‌ ഓഫ്‌ പ്രൊഫസര്‍, ഡിഷാര്‍ട്ട്മെന്റ്‌ ഓഫ്‌ സയന്‍സ്‌ ആന്റ്‌
കമ്പ്യൂട്ടര്‍ സയന്‍സ്‌, കേരള സര്‍വകലാശാല എഞ്ചിനീയറിംഗ്‌, എന്‍.ഐ.ടി., കോഴിക്കോട്‌
ശ്രീ. മധു വി.ടി. മുഹേര്യരന്‍ നായര്‍. വി.

ഡയറക്ടര്‍, കമ്പ്യൂട്ടര്‍ സെന്റര്‍, സബ്‌ ഡിവിഷണല്‍ എഞ്ചിനീയര്‍, റീജിയണല്‍
കാലിക്കറ്റ്‌ യുണിവേഴ്‌സിറ്റി ടെലികോം ട്രെയിനിങ്‌ സെന്റര്‍, തിരുവനന്തപുരം
ഡോ. ബിനു പി. ചാക്കോ

അസോസിയേറ്റ്‌ പ്രൊഫസര്‍, ഡിഷാര്‍ട്ട്മെന്റ്‌ ഓഫ്‌

കമ്പ്യുട്ടര്‍ സയന്‍സ്‌, പ്രജ്യോതി നികേതന്‍ കോളേജ്‌,

പുതുക്കാട്‌
ആര്‍ട്ടിസ്റ്റ്‌

സുധീര്‍ വൈ വിനീത്‌ വി

അക്കാദമിക്‌ കോര്‍ഡിനേറ്റര്‍

ഡോ. മീന എസ്‌.
റിസര്‍ച്ച്‌ ഓഫീസര്‍, എസ്‌.സി.ഇ.ആര്‍.ടി

ശ്രീമതി. ജാന്‍സി റാണി എ.കെ.
റിസര്‍ച്ച്‌ ഓഫീസര്‍, എസ്‌.സി.ഇ.ആര്‍.ടി

പാഠപുസ്തക പരിഭാഷ സമിതി
(മലയാളം)

ഡോ. ബിനു പി ചാക്കോ
അസോസിയേറ്റ്‌ പ്രൊഫസര്‍, ഡിഷാര്‍ട്ട്മെന്റ്‌ ഓഫ്‌ കമ്പ്യൂട്ടര്‍ സയന്‍സ്‌
പ്രജോതി നികേതന്‍ കോളേജ്‌, പുതുക്കാട്‌
ഡോ. ഗ്ലാഡ്‌സണ്‍ എസ്‌. രാജ്‌
അസിസ്റ്റന്റ്‌ പ്രൊഫസര്‍ & ഹെഡ്‌ ഡിഷാര്‍ട്ട്മെന്റ്‌ ഓഫ്‌ കമ്പ്യൂട്ടര്‍ സയന്‍സ്‌
ON). കോളേജ്‌, നെടുമങ്ങാട്‌

ശ്രീ. എ.എസ്‌. ഇസ്മൈല്‍ ശ്രീമതി. വിദ്യ പി.എസ്‌.

എച്ച്‌.എസ്‌.എസ്‌.ടി, എച്ച്‌.എസ്‌.എസ്‌. എച്ച്‌ എസ്‌.എസ്‌ ടി, ഗവ. നളന്ദ എച്ച്‌ എസ്‌.എസ്‌.
പ്ലാഷപെട്ടി, മലഷുറം കിഴുപില്ലിക്കര, തൃശൂര്‍

ശ്രീ. മുകേഷ്‌ വി.കെ ശ്രീ. ശ്രീജിത്ത്‌ പി.

ജി.എച്ച്‌.എസ്‌.എസ്‌.ടി, കോക്കലൂര്‍ സി.ജെ.എച്ച്‌.എസ്‌.എസ്‌., ചെമ്മനാട്‌, കാസര്‍ഗോഡ്‌
ശ്രീ. വിനയചന്ദ്രന്‍ സി ശ്രീ. ഹരി കെ

എച്ച്‌.എസ്‌.എസ്‌ .ടി, വി.ജി.എച്ച്‌.എസ്‌.എസ്‌. ൫൮. വി ആന്റ്‌ എച്ച്‌.എസ്‌.എസ്‌. കടഷുറം
അംമ്പികോദയം എച്ച്‌.എസ്‌.എസ്‌ ചാവക്കാട, തുശൂര്‍

നെടിയവിള, കൊല്ലം

അക്കാദമിക്‌ കോര്‍ഡിനേറ്റര്‍

ശ്രീമതി റിയാന അന്‍സാരി
റിസര്‍ച്ച്‌ ഓഫീസര്‍, എസ്‌.സി.ഇ.ആര്‍.ടി

ഉള്ളടക്കം

യൂണിറ്റ്‌ 7 നിയന്ത്രണ പ്രസ്താവനകള്‍ 219
യുണിറ്റ്‌ 8 അറെകള്‍ 269
യുണിറ്റ്‌ 9 MUSES’ കൈകാര്യം ചെയ്യലും ഇന്‍പുട്ട്‌ ഓട്ടപുട്ട്‌ ഫങ്ഷനുകളും 299
യൂണിറ്റ്‌ 10 ഫങ്ഷനുകള്‍ 315
യൂണിറ്റ്‌ 11 കമ്പ്യുട്ടര്‍ ശൃംഖലകള്‍ 357
യുണിറ്റ്‌ 12 ഇന്റര്‍നെറ്റും മൊബൈല്‍ കമ്പുട്ടിങും 397

പാഠപുസ്തകത്തില്‍ ഉപയോിച്ചിരിക്കുന്ന സുചനകള്‍

നമുക്ക്‌ ചെയ്യാം

നിങ്ങളുടെ പുരോഗതി അറിയുക

ഉന്‍ഫര്‍മേഷന്‍ ബോക്സ്‌

നമുക്ക്‌ പരിരീലിക്കാം

നമുക്ക്‌ സംഗ്രഹിക്കാം

പ്രധാന ആശയങ്ങള്‍

ഇന്‍പുട്ട്‌, ഓട്ട്പുട്ട്‌, വില നല്‍കല്‍ എന്നിവ ചെയ്യുന്നതതി
നുള്ള --ലെ നിര്‍വഹണ പ്രസ്താവനകള്‍ കഴിഞ്ഞ

൭ തീരുമാനം എടുക്കുന്നതിനുള്ള

പ്രസ്താവനകള്‍ .
അധ്യായങ്ങളില്‍ നാം ചര്‍ച്ച ചെയ്തു. ഇതുപയോഗിച്ച്‌ ലളി
e if പ്രസ്താവന തമായ പ്രോഗ്രാമുകള്‍ എങ്ങനെ എഴുതുവാന്‍ കഴിയു
e if .. else പ്രസ്താവന മെന്ന്‌ നമുക്കറിയാം. ഈ പ്രോ്രഗാമുകളുടെ നിര്‍വഹണം
ം omqad if അനുക്രമമാണ്‌. അതായത്‌, പ്രോഗ്രാമിലെ ഓരോ നിർദ്ദേ

ശവും ഒന്നിന്‌ പുറകെ ഒന്നായി പ്രവര്‍ത്തിക്കുന്നു. ഈ
അധ്യായത്തില്‍ €“---ലെ പ്രോഗ്രാമിന്റെ തനത്‌ പ്രവര്‍
e switch പ്രസ്താവന ത്തന്രകമത്തിന്‌ മാറ്റം വരുത്തുന്ന പ്രസ്താവനകളെ കുറി
ച്ചാണ്‌ നാം ചര്‍ച്ച ചെയ്യുന്നത്‌. അധ്യായം 3 ല്‍ നാം ചര്‍ച്ച
ചെയ്ത തെരഞ്ഞെടുക്കല്‍, ആവര്‍ത്തിക്കല്‍, നീക്കംചെ
QC എന്നീ പ്രസ്താവനകള്‍ പ്രശ്നങ്ങള്‍ നിര്‍ദ്ധാരണം
e while പ്രസ്താവന ചെയ്യാന്‍ ആവശ്യമായേക്കാം. സാധാരണയായി ഇത്തരം
തീരുമാനങ്ങള്‍ കൈക്കൊള്ളുന്നത്‌ ചില നിബന്ധനകളെ
അടിസ്ഥാനമാക്കിയാണ്‌. C++ ഈ ആവശ്യം നിറവ്റ്റു
ന്നത്‌ നിയ്രന്തണ പ്രസ്താവനകളുടെ സഹായത്തോടെ
൭ ലുഷുകളുടെ നെസ്സിംന്‌ യാണ്‌. ഈ പ്രസ്താവനകള്‍ പ്രേഠ്രഗാം നിര്‍വഹണ
ത്തിലെ സാധാരണ രീതിക്ക്‌ മാറ്റം വരുത്തുന്നതിനായി
ഉപയോഗിക്കുന്നു. നിയ്രന്തണ പ്രസ്താവനകളെ രണ്ടായി

e else if ലാഡര്‍

© AHMBWIHENG ഓകറേററര്‍

© ആവര്‍ത്തന പ്രസ്താവനകള്‍

e for പ്രസ്താവന

e do .. while പ്രസ്താവന

e ജമ്പ്‌ പ്രസ്താവന

0 ge ee തരംതിരിക്കാം. (1) തീരുമാനമെടുക്കല്‍ /തിരഞ്ഞെടുക്കല്‍
e breack (Decision making/Selection statement) (2) ആവര്‍ത്തന
e continue പ്രസ്താവനകള്‍ (Iteration statement). ഈ പ്രസ്താവന

കളും ഇവയുടെ വാകൃഘടനയും നിര്‍വഹണ രീതികളും

നമുക്ക്‌ ചര്‍ച്ച ചെയ്യാം.

7.1 തീരുമാനങ്ങള്‍ ഏടുക്കുന്നതിനുള്ള പ്രസ്താ
വനകള്‍ (Decision making statements)

പ്രശ്നങ്ങള്‍ നിര്‍ദ്ധാരണം ചെയ്യുമ്പോള്‍ കമ്പ്യൂട്ടറുകളില്‍
എല്ലാ പ്രസ്താവനകളും എല്ലാ സന്ദര്‍ഭങ്ങളിലും ഒരു
പോലെ പ്രവര്‍ത്തിക്കണമെന്നില്ല. ചില പ്രസ്താവനകള്‍
ഒരു സന്ദര്‍ഭത്തില്‍ പ്രവര്‍ത്തിക്കുമെങ്കിലും മറ്റു ചില
സന്ദര്‍ഭങ്ങളില്‍ പ്രവര്‍ത്തിക്കണമെന്നില്ല. ഇത്തരം സന്ദര്‍ഭ

പിടി

ങ്ങളില്‍ കമ്പ്യൂട്ടറിന്‌ ആവശ്യമായ തീരുമാനങ്ങള്‍ എടുക്കേണ്ടതുണ്ട്‌. ഇതിനായി നാം ഇവിടെ അനു
യോജ്യമായ നിബന്ധനകള്‍ നല്‍കുകയും അവയെ കമ്പ്യൂട്ടര്‍ വിലയിരുത്തുകയും വേണം. ഈ
ഫലത്തിന്റെ അടിസ്ഥാനത്തില്‍ അത്‌ ഒരു തീരുമാനം എടുക്കുന്നു. ഈ തീരുമാനങ്ങള്‍ ഒന്നുകില്‍
ഒരു പ്രത്യേക പ്രസ്താവനയെ പ്രവര്‍ത്തിപ്പിക്കുന്നതിനായി തിരഞ്ഞെടുക്കുന്നതിനോ അല്ലെങ്കില്‍
ചില പ്രസ്താവനകളെ പ്രവര്‍ത്തിപ്പിക്കുന്നതില്‍ നിന്നും ഒഴിവാക്കുന്നതിനോ ആയിരിക്കും. lal
കാരം ചില പ്രസ്താവനകള്‍ മാത്രം നിര്‍വഹണം നടത്തുന്നതിനായി C++ ല്‍ തീരുമാനമെടു
ക്കല്‍ പ്രസ്താവനകള്‍ അല്ലെങ്കില്‍ തെരഞ്ഞെടുക്കല്‍ പ്രസ്താവനകള്‍ ഉപയോഗിക്കുന്നു. if,
switch എന്നിവയാണ്‌ C++ ലെ രണ്ടുതരം തിരഞ്ഞെടുക്കല്‍ പ്രസ്താവനകള്‍.

7.1.1 if പ്രസ്താവന (if statement)

ഒരു നിബന്ധനയുടെ (condition) അടിസ്ഥാനത്തില്‍ ഒരു കൂട്ടം പ്രസ്താവനകളെ പ്രവര്‍ത്തിപ്പിക്കു
ന്നതിനായി if പ്രസ്താവന ഉപയോഗിക്കുന്നു. C++ ല്‍ നിബന്ധനകള്‍ (പരിശോധനാ പ്രയോഗ
ങ്ങള്‍ എന്നും അറിയപ്പെടുന്നു) നല്‍കുന്നത്‌ റിലേഷണല്‍ അല്ലെങ്കില്‍ ലോജിക്കല്‍ പ്രയോഗങ്ങള്‍
ഉപയോഗിച്ചാണ്‌. 17 പ്രസ്താവനയുടെ വാകൃഘടന (Syntax) താഴെ കൊടുത്തിരിക്കുന്നു.

if ചട്ടകൂടിലെ നിബന്ധനകള്‍ ശരിയാ
വുകയാണെങ്കില്‍ പ്രവര്‍ത്തിക്കേണ്ട
പ്രസ്താവന കൂട്ടം;

LE (പരിശോധന പ്രയോഗം)

{

പ്രസ്താവനകള്‍;

if (test expression)

statement block;
}

ഇവിടെ പരിശോധനാ പ്രയോഗം എന്നത്‌ ഒന്നുകില്‍ റിലേഷണല്‍ പ്രയോഗം അല്ലെങ്കില്‍ ലോജി
ക്കല്‍ പ്രയോഗമായ ഒരു നിബന്ധനയെയാണ്‌ സൂചിപ്പിക്കുന്നത്‌. പരിശോധനാ പ്രയോഗം ശരിയാ
ണെങ്കില്‍ ( 1ബേപൂജ്യം അല്ലാത്ത വില) if -നോടു
ചേര്‍ന്നുള്ള പ്രസ്താവനയോ അല്ലെങ്കില്‍ ഒരു കൂട്ടം പ്രസ്താ
വനകളോ പ്രവര്‍ത്തിക്കും. അല്ലെങ്കില്‍ 17 -നു ശേഷമുള്ള
പ്രസ്താവനയിലേക്ക്‌ നിയ്രന്തണം കൈമാറുന്നു. ചിത്രം 7.1 17
പ്രസ്താവനയുടെ പ്രവര്‍ത്തന രീതി കാണിക്കുന്നു. if ഉപ
യോഗിക്കു മ്പോള്‍ താഴെ പറയുന്ന ചില കാര്യങ്ങള്‍
ഓര്‍ത്തിരിക്കേണ്ടതുണ്ട്‌.

പരിരോധന
പ്രയോഗം

ചിത്രം 77 //പ്രരതാവരമുടെ
e 1f പ്രസ്താവനയോടുകൂടി ഒന്നോ അതിലധികമോ പ്രവരത്തനം

ര പരിശോധനാ പ്രയോഗം എപ്പോഴും ആവരണ ചിഹ്ന
ത്തിന്‌ അകത്തായിരിക്കണം.

[) നിബന്ധനയിലുള്ള പ്രയോഗം റിലേഷണല്‍ പ്രയോഗ
ങ്ങള്‍ ഉപയോഗിച്ചുള്ള ലളിതമായ (പ്രയോഗങ്ങളോ,
ലോജിക്കല്‍ പ്രയോഗങ്ങള്‍ ഉപയോഗിച്ചുള്ള സംയുക്ത
പ്രയോഗങ്ങളോ ആകാം.

| eon 7. MOLOHM പ്രസ്താവനകള്‍

പ്രസ്താവനകള്‍ ഉണ്ടാകാം. ഒരു പ്രസ്താവന മാത്രമാണെങ്കില്‍ {,} എന്നീ ്രാക്കറ്റുകള്‍
നിര്‍ബന്ധമില്ല. ഒന്നില്‍ കൂടുതല്‍ പ്രസ്താവനകള്‍ ഉണ്ടെങ്കില്‍ ഈ ്രാക്കറ്റുകള്‍ നിര്‍ബ
ന്ധമാണ്‌.
പ്രോ്രഗാം 2.1 ഒരു വിദ്യാര്‍ഥിയുടെ സ്‌കോര്‍ സ്വീകരിക്കുകയും അത്‌ 18 ഓ അതിലധികമോ ആണെ
ങ്കില്‍ "You have Passed" എന്ന്‌ പ്രദര്‍ശിപ്പിക്കുകയും ചെയ്യുന്നു. (പഠസാവാന്‍ മിനിമം 18 സ്കോര്‍
വേണമെന്ന്‌ വിചാരിക്കുക)

You have Passed" എന്ന പ്രദര്‍രിഷിക്കുന്നതിന്‌

#include<iostream>

using namespace std;

int score ;
COUE << "Enter your Scone: Ur
cin >> score; if ന്റെ ചട്ടകൂട്‌
if (score >= 18)
cout << "You have passed";
ടി 17
}

പ്രോ്രഗാം 7.1 - ന്റെ മാതൃകാ ഓട്ട്പുട്ട്‌ താഴെകൊടുത്തിരിക്കുന്നു.
Enter your score: 25
You have passed

പ്രോ്രഗാം 7.1 -ല്‍ ഒരു വിദ്യാര്‍ത്ഥിയുടെ സ്കോര്‍ നല്‍കുകയും അത്‌ SCOLE എന്ന വേരിയബിളില്‍
സംഭരിക്കുകയും ചെയ്യുന്നു. പരിശോധനാപ്രയോഗം സ്കോര്‍ എന്ന വേരിയബിളിലെ വില 18-ഓ
അതില്‍ അധികമോ ആണോ എന്നു നോക്കുന്നു. പരിശോധനാപ്രയോഗം ശരിയാണെങ്കില്‍ if -ന്റെ
ഭാഗം പ്രവര്‍ത്തിക്കുന്ന. അതായത്‌ സ്‌കോര്‍ 18-89 അതിലധികമോ ആണെങ്കില്‍ "You have
Passed" എന്ന സന്ദേശം സ്‌ക്രീനില്‍ പ്രദര്‍ശിപ്പിക്കപ്പെടുന്നു. അല്ലാത്തപക്ഷം ഒരു ഓട്ട്പുട്ടും
ലഭിക്കുന്നില്ല.

2£-നോടു കൂടിയുള്ള ഭാഗം ഒരു ടാബ്‌ ദൂരത്തിന്‌ ശേഷമാണ്‌ എഴുതിയിട്ടുള്ളത്‌ എന്നത്‌ ശ്രദ്ധിക്കുക.
നാം അതിനെ ഇന്‍ഡന്റേഷന്‍ എന്നു വിളിക്കുന്നു. ഇത്‌ പ്രോ്രഗാമിന്റെ വായന ക്ഷമത വര്‍ദ്ധിപ്പി
ക്കുകയും തെറ്റുകള്‍ കണ്ടുപിടിക്കാന്‍ സഹായിക്കുകയും ചെയ്യുന്നു. എന്നാല്‍ ഇവ പ്രോഗ്രാമിന്റെ
പ്രവര്‍ത്തനത്തില്‍ ഒരു സ്വാധീനവും ചെലുത്തുന്നില്ല.

താഴെ കൊടുത്തിരിക്കുന്ന C++ പ്രോ്രഗാം ശകലം ശ്രദ്ധിക്കുക. തന്നിരിക്കുന്ന ഇന്‍പുട്ട്‌ ഒരു അക്ഷ
രമാണോ അല്ലെങ്കില്‍ ഒരു അക്കമാണോ എന്ന്‌ ഇത്‌ പരിശോധിക്കുന്നു.

ലോജിക്കല്‍
പ്രസ്താവന നിര്‍ദ്ധാരണം
ചെയ്തിരിക്കുന്നു.

char ch;
cin >> ch;
if (ch >= "ഒ" && ch <= "ജു
ലി

cout << "You entered an alphabet";
if (ch >= 10 && ch <= '9')
|

ഒരു പ്രസ്താവന
മാത്രമേയുള്ളു അതുകൊണ്ട്‌

{, } ആവശ്യമില്ല

cout << “You entered a digit\n";

cout << “It is a decimal number “;

}
7.1.2 if... else പ്രസ്താവന (if... else statement)

ഒന്നില്‍കൂടുതല്‍
പ്രസ്താവനകള്‍ ഉള്ളതു കൊണ
അവ നിര്‍ബന്ധമായും (.) ന്‌
അകത്തായിരിക്കണം

പ്രോഗ്രാം 7.1-ലെ Lf പ്രസ്താവന പരിഗണിക്കുക.
if (score >= 18)
cout << “You have passed’;

ഇവിടെ സ്‌കോര്‍ പതിനെട്ടോ അതില്‍ കൂടുതലോ ആണെങ്കില്‍ മാത്രമേ ഓട്ട്പുട്ട്‌ ലഭിക്കുന്നുള്ളൂ.
നല്‍കിയ സ്‌കോര്‍ 18-ല്‍ കുറവാണെങ്കില്‍ എന്ത്‌ സംഭവിക്കും? ഒരു ഓട്ട്പുട്ടും ലഭിക്കില്ല എന്ന്‌
വ്യക്തമാണ്‌. പരിശോധന പ്രയോഗം വിലയിരുത്തുമ്പോള്‍ തെറ്റ്‌ (false) ലഭിക്കുകയാണെങ്കില്‍
മറ്റൊരു കൂട്ടം പ്രസ്താവനകള്‍ തിരഞ്ഞെടുക്കുന്നതിനുള്ള അവസരം നമുക്ക്‌ ലഭിക്കാതെ വരുന്നു.
നിബന്ധന തെറ്റാവുന്ന അവസരത്തില്‍ ചില പ്രവര്‍ത്തനങ്ങള്‍ ചെയ്യണമെങ്കില്‍ if പ്രസ്താവ
നയുടെ മറ്റൊരു രൂപമായ if.. else നമുക്ക്‌ ഉപയോഗിക്കാം. ഇതിന്റെ വാകൃഘടന താഴെ

കൊടുക്കുന്നു.
if (പരിശോധനാ പ്രയോഗം)
{
പ്രസ്താവനകള്‍ 1 ;
}
else
{
പ്രസ്താവനകള്‍ 2;
}
if (test expression)
{
statement block 1;
}
else
{
statement
block 2;

}
പരിശോധനാപ്രയോഗം ശരിയാണെ
ങ്കില്‍ പ്രസ്താവനകള്‍ 1 ഉം തെറ്റാ

പരിശോധനാ
പ്രയോഗം

പ്രസ്താവന കൂട്ടം 1

ണെങ്കില്‍ പ്രസ്താവനകള്‍ 2 ഉം
പ്രവര്‍ത്തിക്കുന്നു. if...else
പ്രസ്താവനയുടെ പ്രവര്‍ത്തനം
ചിത്രം 7.2-ല്‍ കാണിച്ചിരിക്കുന്നു.

athe 7.2 if.,..else പ്രസ്താവനയുടെ ഫ്ര്മാചാരീട്‌
| eon 7. MOLOHM പ്രസ്താവനകള്‍

താഴെ കൊടുത്തിരിക്കുന്ന കോഡ്‌ ശകലം 1 . . . ൪ ട൦ പ്രസ്താവനയുടെ പ്രവര്‍ത്തനം വിവരി
ക്കുന്നു.

18 ഓ അതിലധികളോ ആണെങ്കില്‍ മാത്രം ഈ പ്രസ്താ
വന പ്രവര്‍ത്തിക്കുന്നു. (അതായത്‌ പരിരോധനാ
പ്രയോരം രരിയാകുമ്പോള്‍)

if (score >= 18)

cout << "Passed";
else
cout << "Failed";

18 ല്‍ കുറവാണെങ്കില്‍ ഈ പ്രസ്താവന പ്രവര്‍ത്തിക്കുന്നു.
(അതായത്‌ പരിശോധനാ പ്രയോഗം തെറ്റാകുമ്പോള്‍.)

രണ്ട്‌ കുട്ടികളുടെ ഉയരം ഇന്‍പൂട്ടായി സ്വീകരിച്ച്‌ അവരില്‍ ഉയരമുള്ള കുട്ടിയെ കണ്ടുപിടിക്കുന്നതി
നുള്ള ഒരു പ്രോ്രഗാം നമുക്കെഴുതാം.

വരില്‍ ഉയരം കൂടുതലുള്ള ആളെ കണ്ടുപിടി

#include <iostream>

using namespace std;

int main()

{
chide, loci, 1
cout << "Enter heights of the two students: ";
Gin >> hel >> he2;

8 (miei, & 152) //decision making based on condition
cout<<"Student with height "<<ht1<<" is taller";
else
cout<<"Student with height "<<ht2<<" is taller";
11 0p

}

പ്രോ്രഗാം 7.2 പ്രവര്‍ത്തിക്കുമ്പോള്‍ 1൨1൨൧2 എന്ന റിലേഷണല്‍ പ്രയോഗത്തിന്റെ ഫലത്തെ

ആശ്രയിച്ച്‌ ഏതെങ്കിലും ഒരു ഓട്ട്പുട്ട്‌ പ്രദര്‍ശിപ്പിക്കപ്പെടും. മാതൃകാ ഓട്ട്പുട്ടുകള്‍ താഴെ കൊടു

ത്തിരിക്കുന്നു.

ഓട്ട്പൂട്ട്‌ 1: Enter the height of two students: 170 165
Student with height 170 is taller

ഓട്ടപുട്ട്‌ 2: Enter the height of two students: 160 171
Student with height 171 is taller

ഈട്ട്പൂട്ട്‌ 1-ല്‍ ht -ന്‌ 170-ഉം ht2 -ന്‌ 165-ഉം ഇന്‍പുട്ടായി നല്‍കിയിരിക്കുന്നു. അതുകൊണ്ട്‌
(൩൨൭൩൭2) എന്ന പരിശോധനാപ്രയോഗം ശരിയാവുകയും തല്‍ഫലമായി i f ബ്ലോക്ക്‌ പ്രവര്‍ത്തി
ക്കുകയും ചെയ്യുന്നു. ഓട്ട്പുട്ട 2-ല്‍ ൨൦1 -ന്‌ 160-ഉം ൨൧-ന്‌ 171-ഉം വിലകള്‍ നല്‍കുമ്പോള്‍ ht 1>ht2
എന്ന പരിശോധനാ പ്രയോഗം തെറ്റാവുകയും തല്‍ഫലമായി ELSE ബ്ലോക്ക്‌ പ്രവര്‍ത്തിക്കുകയും
ചെയ്യുന്നു. if .. else പ്രസ്താവനയില്‍ ഒന്നുകില്‍ 1: നോട്‌ അനുബന്ധിച്ചുള്ള കോഡും
പി

(്രസ്താവനകള്‍ 1) അല്ലെങ്കില്‍ ELSES നോട്‌ അനുബന്ധിച്ചുളള കോഡും (പ്രസ്താവനകള്‍ 2)
പ്രവര്‍ത്തിക്കുന്നു.

പരിശോധനാ പ്രയോഗത്തില്‍ ഒരു ഓപറന്‍ഡ്‌ ആയി അരിത്തമെറ്റിക്‌ പ്രയോഗം ഉപയോഗിച്ചിരി
ക്കുന്ന മറ്റൊരു പ്രോ്രഗഠം നമുക്ക്‌ നോക്കാം. പ്രോ്രഗാം 7.3 ഈ ആശയം ഉപയോഗിച്ച്‌ ഒരു സംഖ്യ
ഒറ്റസംഖ്യയാണോ ഇരട്ടസംഖൃയയാണോ എന്ന്‌ പരിശോധിക്കുന്നു.

ട്ടസംഖ്യയാണോ എന്ന്‌ പരിരോധിക്കുന്നതിന്‌.

#include <iostream>
using namespace std;
int main()

{

int num;
cout << "Enter the number: ";
cin >> num;

if (num%2 == 0)

cout << "The given number is Even";
else

cout << "The given number is Odd";
return 0;

}
പ്രോ്രഗാം 7.3 ന്റെ ചില മാതൃക ഓട്ട്പുട്ടുകള്‍ താഴെ കാണിച്ചിരിക്കുന്നു

ജഓട്ട്പുട്ട്‌ 1:

Enter the number: 7

The given number is Odd
ഓട്ടപുട്ട്‌ 2:

Enter the number: 10

The given number is Even
ഈ പ്രോഗാമില്‍ (num%2) എന്ന പ്രയോഗം num ലെ വിലയെ 2 കൊണ്ട്‌ ഹരിച്ച്‌ കിട്ടുന്ന
ശിഷ്ടത്തെ പൂജ്യമായി താരതമ്യം ചെയ്യുന്നു. അത്‌ തുല്യമാണെങ്കില്‍ if പ്രസ്താവനകള്‍
പ്രവര്‍ത്തിക്കും അല്ലെങ്കില്‍ ൭൦ പ്രസ്താവനകള്‍ പ്രവര്‍ത്തിക്കും.

തന്നിരിക്കുന്ന സംഖ്യ പോസിറ്റീവ്‌ ആണോ നെഗറ്റീവ്‌ ആണോ എന്ന്‌ പ
രിശോധിക്കാനുള്ള പ്രോഗ്രാം എഴുതുക. (പൂജ്യം ഒഴികെയുള്ള സാഖ്യ
മാത്രമേ ഇന്‍പുട്ട്‌ ചെയ്യുന്നുള്ളൂ.)
= . ഒരു അക്ഷരം സ്വീകരിച്ച്‌ “M’ ആണെങ്കില്‍ Male എന്നും 1” ആണെങ്കില്‍
Female എന്നും ഓട്ട്പുട്ട്‌ കാണിക്കുന്നതിനുള്ള പ്രോഗ്രാം എഴുതുക.

നിങ്ങളുടെ പ്രായം ഇന്‍പൂട്ടായി നല്‍കി അത്‌ 18 വയസ്സിനു മുകളിലാണെ
ങ്കില്‍ വോട്ടു ചെയ്യാന്‍ യോഗ്യതയുണ്ടെന്നും അല്ലെങ്കില്‍ യോഗ്ൃതയി
ല്ലെന്നും (പ്ദര്‍ശിപ്പിക്കാനുള്ള പ്രോഗ്രാം എഴുതുക.

| eon 7. MOLOHM പ്രസ്താവനകള്‍

7.1.3 നെസ്റ്റഡ്‌ if (Nested if)

ചില സാഹചര്യങ്ങളില്‍ LE പ്രസ്താവനയുടെ അകത്തുനിന്നുകൊണ്ട്‌ തീരുമാനങ്ങള്‍ എടുക്കേണ്ട
ആവശ്യം വരും. ഒരു 1f ബ്ലോക്കിനകത്ത്‌ മറ്റൊരു If ബ്ലോക്ക്‌ എഴുതുന്നതിനെ നെസ്റ്റിങ്ങ്‌ എന്നു
പറയുന്നു. നെസ്റ്റഡ്‌ എന്നാല്‍ ഒന്നിനകത്ത്‌ മറ്റൊന്ന്‌ എന്നാണ്‌ അര്‍ഥം. താഴെ കൊടുത്തിരിക്കുന്ന

പ്രോഗ്രാം ശകലം പ്ളം
if (score >= 60) aie
|
നി auc
if(age >= 18)
cout<<"You are selected for the course!";

}

ഈ കോഡ്‌ ശകലത്തില്‍ Scoreads വില 60 ഓ അതില്‍ കൂടുതലോ ആണെങ്കില്‍ പ്രോഗ്രാമിന്റെ
നിയ്രന്തണം പുറത്തെ Lf ബ്ലോക്കിനുള്ളിലേക്ക്‌ പപവേശിക്കുന്നു. അതിനുശേഷം അകത്തുള്ള
LF ന്റെ പരിശോധനാ പ്രസ്താവന വിലയിരുത്തുന്നു. (അതായത്‌ age ന്റെ വില പതിനെട്ടോ അതില്‍
കൂടുതലോ എന്ന്‌). ഇത്‌ ശരിയാണെങ്കില്‍ "You are selected for the course!"
എന്ന സന്ദേശം പ്രദര്‍ശിപ്പിക്കും. തുടര്‍ന്ന്‌ പുറത്തെ if പ്രസ്താവനകള്‍ക്ക്‌ ശേഷമുളള പ്രസ്താ
AINA പ്രവര്‍ത്തിക്കുന്നു.

ഒരു 1£ പ്രസ്താവനക്കുളളിലെ മറ്റൊരു 1£ പ്രസ്താവനയെ നെസ്റ്റഡ്‌ if (nested 25) എന്നു
വിളിക്കുന്നു. നെസ്റ്റഡ്‌ 27 -ന്റെ വിപുലീകരിച്ച വാകൃഘടന താഴെ കൊടുത്തിരിക്കുന്നു.
if (test expressionl1)

{

പരിശോധനാ പ്രയോഗം
രണ്ടും ശരിയാകുമ്പോള്‍ മാത്രം
പ്രവര്‍ത്തിക്കുന്ന.

if (test expression 2)
statement 1; .—

else

പരിശോധനാ പ്രയോഗം 1
ശരിയാവുകയും പരിരോധനാ
പ്രയോഗം 2 തെറ്റാവുകയും
ചെയ്യുമ്പോള്‍ പ്രവര്‍ത്തിക്കുന്നു.

statement 2;

else

{

body of else; പരിശോധനാ പ്രയോഥം 1 HMQIAIEMIG പ്രവര്‍ത്തിക്കും.
} 7 പരിശോധനാ പ്രയോഗം 2 നിര്‍ദ്ധാരണം ചെയ്യുന്നില്ല.
പിടി

നെസ്റ്റഡ്‌ if മായി ബന്ധപ്പെട്ട്‌ ശ്രദ്ധിക്കേണ്ട പ്രധാന കാര്യം ഒരു ELSE എപ്പോഴും അതേ
ബ്ലോക്കില്‍ തന്നെയുള്ള ഏറ്റവും അടുത്ത If മായി ബന്ധപ്പെട്ടിരിക്കുന്നു എന്നതാണ്‌. ഒരു ഉദാഹര
ണത്തിലൂടെ നമുക്ക്‌ ഇത്‌ ചര്‍ച്ച ചെയ്യാം. താഴെ പറയുന്ന പ്രോഗ്രാം ശകലം പരിഗണിക്കുക.

cout<<"Enter your score in Computer Science exam: ";
cin>>score;
if (score >= 18)
cout<<"You have passed";
1f(score >= 54)
cout<<"with A+ grade !";
else

cout<<"\nYou have failed";
Score ന്‌ 45 എന്ന വില നല്‍കുകയാണെങ്കില്‍ ഓട്ട്പുട്ട്‌ താഴെ ഉള്ളതുപോലെയായിരിക്കും.

You have passed

You have failed
യുക്തിപരമായി ഇത്‌ ശരിയല്ല എന്ന്‌ നമുക്ക്‌ അറിയാം. കോഡിന്റെ ഇന്‍ഡന്റേഷന്‍ ശരിയാണെങ്കിലും
പ്രവര്‍ത്തനത്തില്‍ പ്രതിഫലിച്ചിട്ടില്ല. ഇതില്‍ രണ്ടാമത്തെ if പ്രസ്താവന നെസ്റ്റഡ്‌ if ആയി
പരിഗണിച്ചിട്ടില്ല. പകരം അതിനെ else ബ്ലോക്കോടു കൂടിയ സ്വത്രന്തമായ ഒരു if ആയിട്ടാണ്‌
കണക്കാക്കിയിട്ടുള്ളത്‌. അതുകൊണ്ട്‌ ആദ്യത്തെ 1£ പ്രസ്താവനയിലെ പരിശോധനാ പ്രയോഗം
ശരിയായതിനാല്‍ അതിലെ if ബ്ലോക്ക്‌ പ്രവര്‍ത്തനത്തിനായി തിരഞ്ഞെടുക്കുന്നു. ഇത്‌ ഓട്ട്പു
ട്ടിലെ ഒന്നാമത്തെ വരിക്ക്‌ കാരണമാകുന്നു. അതിനുശേഷം രണ്ടാമത്തെ if പ്രസ്താവനയിലെ
പരിശോധനാ പ്രയോഗം തെറ്റായതിനാല്‍ ഓട്ട്പുട്ടിലെ രണ്ടാമത്തെ വരി ലഭിക്കുന്നു. അതുകൊണ്ട്‌
ശരിയായ ഓട്ട്പൂട്ട്‌ ലഭിക്കുന്നതിനായി കോഡ്‌ താഴെയുള്ളതുപോലെ പരിഷ്കരിക്കണം.

cout<<"Enter your score in Computer Science exam: ";
cin>>score;

ഒരു ജോഡി ബ്രാക്കറ്റുകളുടെ
സഹായത്തോടെ നെസ്റ്റിങ്ങ്‌
നടകിലാക്കിയിരിക്കുന്നു.

if (score >= 18)

{

cout<<"You have passed";
if(score >= 54)
cout<<" with A+ grade ന;

else പ്രസ്താവന
ഉദഷോര്‍ പുറത്തെ if നോട്‌
ചേര്‍ന്നിരിക്കുന്നു.

}
else —
cout<<"\nYou have failed";
മുന്‍ ഉദാഹരണത്തിലെ ഇന്‍പുട്ട്‌ ആയ 45 ഇവിടെയും നല്‍കിയാല്‍ താഴെ പറയുന്ന ഓട്ട്പൂട്ട്‌ ലഭി
ക്കും.

You have passed
| eon 7. MOLOHM പ്രസ്താവനകള്‍

തന്നിരിക്കുന്ന മൂന്നു സംഖ്യകളില്‍ വലുത്‌ കണ്ടെത്തുന്നതിനായി പ്രേഠ്രഗാം 7.4 ല്‍ നെസ്റ്റഡ്‌ if
ഉപയോഗിച്ചിരിക്കുന്നു. ഈ പ്രോഗ്രാമില്‍ if പ്രസ്താവന if ബ്ലോക്കിനകത്തും else ബ്ലോക്കി
നകത്തും ഉപയോഗിച്ചിരിക്കുന്നു.

ങുപിടിക്കുന്നതിന്‌

#include <iostream>
using namespace std;
int main()

{

int x, y, 27

cout << "Enter three different numbers: ";
cin >> x >> y >> Zz;

if (x > y)

{

if (x > z)

cout << "The largest number is: " << x;
else
cout << "The largest number is: " << z;
}
else
{
if (y > z)
cout << "The largest number is: " << y;
else
cout << "The largest number is: " << z;
}
return 0;

}

പ്രോ്രഗാം 7.4-ന്റെ ഒരു മാതൃകാ ഓട്ട്പുട്ട്‌ താഴെ കൊടുത്തിരിക്കുന്നു.
Enter three different numbers: 6 2 7
The largest number is: 7

ഇന്‍പുട്ട്‌ നല്‍കിയ പ്രകാരം പുറമെയുള്ള if ലെ പരിശോധനാപ്രയോഗം (X>Y) ശരിയായതിനാല്‍
അതിലെ അകത്തെ if ലേക്ക്‌ പ്രവേശിക്കുന്നു. ഇവിടെ (X>Z) എന്ന പരിശോധനാപ്രയോഗം
തെറ്റായതിനാല്‍ അതിന്റെ else ബ്ലോക്ക്‌ പ്രവര്‍ത്തിക്കുന്നു. അതുകൊണ്ട്‌ 2-ന്റെ വില ഓട്ട്പു
ട്ടായി പ്രദര്‍ശിപ്പിക്കുന്നു.

സ്വയം പരിരോധിക്കാം

1. ഒരു പൂര്‍ണ്ണ സംഖ്യ ഇന്‍പൂട്ടായി സ്വീകരിച്ച്‌, അത്‌ പോസ്റ്റീവാണോ നെററ്റീവാണോ പുജ്യം
ആണോ എന്ന്‌ പരിരോധിക്കുന്നതിനുള്ള ഒരു പ്രോഗാം എഴുതുക

2. മൂന്ന്‌ സംഖ്യകളെ ഉന്‍പുട്ടായി സ്വീകരിച്ച്‌ അതിലെ ചെറുത്‌ പ്രിന്റ്‌ ചെയ്യാനുള്ള ഒരു
പ്രോഗാം എഴുതുക.

Qoe

7.1.4 else if ലാഡര്‍ (The else if ladder)

ഒരു ൭19൦ ബ്ലോക്കിനുള്ളില്‍ ഒരു 17 പ്രസ്താവന ഉപയോഗിക്കേണ്ട സാഹചര്യം ഉണ്ടായേക്കാം.
അനേകം നിബന്ധനകള്‍ (൦0൩0 11൨൩) ആവശ്യമുള്ള പ്രോഗ്രാമുകളില്‍ അത്‌ ഉപയോഗിക്കു
ന്നു. പ്രവര്‍ത്തനത്തിനായി ഏത്‌ പ്രസ്താവന തിരഞ്ഞെടുക്കണമെന്ന്‌ അതാത്‌ നിബന്ധന തീരുമാ
നിക്കുന്നു. 1 പ്രസ്താവനയെ അടിസ്ഥാനമാക്കിയുള്ള ഒരു സാധാരണ പ്രോ്രഗാമിംഗ്‌ രൂപകല്‍പന
യാണ്‌ else if ലാഡര്‍. അതിന്റെ രൂപഘടനയിലുള്ള പ്രത്യേകത കാരണം അതിനെ else
LE സ്റ്റെയര്‍ കെയ്‌സ്‌ എന്നും പറയുന്നു. ഇത്‌ if..else if പ്രസ്താവന എന്നും അറിയപ്പെടു
ന്നു. else if ലാഡറിന്റെ വാകൃഘടന താഴെ കൊടുക്കുന്നു.

Lf (പരിശോധനാ പ്രയോഗം 1)
പ്രസ്താവനകള്‍ 1;
else if (പരിശോധനാ പ്രയോഗം 2)
പ്രസ്താവനകള്‍ 2;
else if (പരിശോധനാ പ്രയോഗം 3)
പ്രസ്താവനകള്‍ 3;

പ്രസ്താവനകള്‍ ൩:

if (test expression 1)
statement block 1;
else if (test expression 2)
statement block 2;
else if (test expression 3)
statement block 3;

statement block n;

ആദ്യം പരിശോധനാ പ്രയോഗം 1 വിലയിരുത്തുമ്പോള്‍ അത്‌ ശരിയാണെങ്കില്‍ പ്രസ്താവനകള്‍
1 പ്രവര്‍ത്തിച്ചതിനുശേഷം ലാഡറില്‍ നിന്ന്‌ പുറത്തേക്ക്‌ വരുന്നു. അതായത്‌ ലാഡറിന്റെ ബാക്കി
ഭാഗം ഒഴിവാക്കപ്പെടുന്നു. പരിശോധനാപ്രയോഗം 1 വിലയിരുത്തുമ്പോള്‍ അത്‌ തെറ്റാണെങ്കില്‍
പരിശോധനാ പ്രയോഗം 2 വിലയിരുത്തുന്നു. ഈ പ്രക്രിയ അങ്ങിനെ തുടരുന്നു. ഏതെങ്കിലും ഒരു
പരിശോധനാപ്രയോഗം ശരിയാണെങ്കില്‍ അതിനനുസൃതമായ പ്രസ്താവനകള്‍ പ്രവര്‍ത്തിച്ചതി
നുശേഷം നിയ്രന്തണം ലാഡറിന്റെ പുറത്തേക്ക്‌ വരുന്നു. എല്ലാ പരിശോധനാ പ്രയോഗങ്ങളും വില
യിരുത്തുമ്പോള്‍ തെറ്റാണെങ്കില്‍ അവസാന ൭1 3൦-നുശേഷമുള്ള പ്രസ്താവനകള്‍ 1 പ്രവര്‍ത്തി
ക്കുന്നു. വാകൃഘടനയില്‍ കൊടുത്തിരിക്കുന്ന ഇന്‍ഡന്റേഷന്‍ നിരീക്ഷിക്കുകയും else if
ലാഡര്‍ ഉപയോഗിക്കുന്നതിന്‌ ഈ രീതി പിന്തുടരുകയും ചെയ്യുക.

ഒരു വിദ്യാര്‍ത്ഥിക്ക്‌ ഒരു വിഷയത്തില്‍ 100 ല്‍ ലഭ്യമായ സ്‌കോറിന്റെ അടിസ്ഥാനത്തില്‍ ഗ്രേഡ്‌
കണ്ടുപിടിക്കാനുള്ള പ്രോ്രഗാം else if ലാഡര്‍ ഉപയോഗിച്ച്‌ നമുക്ക്‌ വിവരിക്കാം.
| eon 7. MOLOM പ്രസ്താവനകള്‍

താഴെയുള്ള പട്ടികയില്‍ കൊടുത്തിരിക്കുന്ന മാനദണ്ഡമനുസരിച്ചാണ്‌ ഗ്രേഡ്‌ കണ്ടുപിടിക്കേണ്ടത്‌.

80 ഓ അതില്‍ കൂടുതലോ A

60 മുതല്‍ 79 വരെ

40 മുതല്‍ 59 വരെ

30 മുതല്‍ 39 വരെ

യിനി

30 ല്‍ താഴെ

വിദ്യാര്‍ത്ഥിയുടെ ഗ്രേഡ്‌ കണ്ടുപിടിക്കുന്നതിന്‌

#include <iostream>
using namespace std;
int main ()

{

int score;
cout << "Enter your score: ";
cin >> score;
if (score >= 80)
cout << "A Grade";
else if (score >= 60)
cout << "B Grade ";
else if (score >= 40)
cout << "C grade";
else if (score >= 30)
cout << "D grade";
else
cout << "E Grade";
return 0;

}

പ്രോഗാം 7.5 ന്റെ മാതൃക ഓട്ട്പുട്ടുകളാണ്‌ താഴെയുള്ളത്‌.
ഓട്ട്പുട്ട |:

Enter your score: 73

B Grade
ഓട്ട്പുട്ട്‌ 2:

Enter your score: 25

E Grade

പ്രോഗ്രാം 7.5 ല്‍ ആദ്യം പരിശോധനാ പ്രയോഗം SCOrE>=80 വിലയിരുത്തുന്നു. ഓട്ട്പൂട്ട്‌ 1-8
ഇന്‍പുട്ട്‌ ചെയ്ത വില 73 ആയതിനാല്‍ പരിശോധനാ പ്രയോഗം തെറ്റ്‌ ആകുകയും score>=60
ലി

എന്ന അടുത്ത പരിശോധനാ പ്രയോഗം വിലയിരുത്തുകയും ചെയ്യുന്നു. ഇവിടെ ഇത്‌ ശരിയായതി
നാല്‍ “8 Grade” എന്ന്‌ പ്രദര്‍ശിപ്പിക്കുകയും else if ലാഡറിന്റെ ബാക്കി ഭാഗം ഒഴിവാക്കു
കയും ചെയ്യുന്നു. എന്നാല്‍ ജട്ട്പുട്ട്‌ 2 - ല്‍ എല്ലാ പരിശോധന്പപയോഗങ്ങളും തെറ്റാണെന്ന്‌ വില
യിരുത്തിയതിനാല്‍ അവസാനത്തെ ൭൨൭൭ ബ്ലോക്ക്‌ പ്രസ്താവന പ്രവര്‍ത്തിക്കുകയും “E grade”
എന്ന ജഈട്ട്പുട്ട്‌ ലഭിക്കുകയും ചെയ്യുന്നു.

തന്നിരിക്കുന്ന വര്‍ഷം അധിവര്‍ഷം (leap year) ആണോ അല്ലയോ എന്ന്‌ പരിശോധിക്കുന്നതിനുള്ള
ഒരു പ്രോ്രഗാം നമുക്ക്‌ എഴുതാം. ഇന്‍പൂട്ട്‌ സംഖ്യ ശതാബ്ദമാണോ എന്ന്‌ പരിശോധിക്കേണ്ടതുണ്ട്‌
(നൂറുകൊണ്ട്‌ ഹരിക്കാന്‍ സാധിക്കുന്ന വര്‍ഷമാണോ എന്ന്‌). അത്‌ ഒരു ശതാബ്ദ വര്‍ഷമാണെ
ങ്കില്‍ അതിനെ 400 കൊണ്ട്‌ കൂടി ഹരിക്കാമെങ്കിലേ അത്‌ അധിവര്‍ഷമാകുന്നുള്ളു. ഇന്‍പുട്ട്‌ സംഖ്യ,
ശതാബ്ദ വര്‍ഷമല്ലെങ്കില്‍ അതിനെ 4 കൊണ്ട്‌ ഹരിക്കുവാന്‍ സാധിക്കുമോ എന്ന്‌ നാം പരിശോ
ധിക്കേണ്ടതുണ്ട്‌. അതിനെ ഹരിക്കാന്‍ സാധിക്കുമെങ്കില്‍ തന്നിരിക്കുന്ന വര്‍ഷം അധിവര്‍ഷം ആണ്‌,
അല്ലെങ്കില്‍ അത്‌ ഒരു അധിവര്‍ഷമല്ല.

ല്ലയോ എന്ന്‌ പരിഭോധിക്കുന്നതിന്‌.

#include <iostream>
using namespace std;
void main()
{
int year ;
cout << "Enter the year (in 4-digits): "7
cin >> year;
if (year%100 == 0)// Checks for century year
{
if (year%400 == 0)
cout << "Leap year\n";
else
cout<< "Not a leap year\n";

ശതാബ്ദ വര്‍ഷമല്ലാത്തവ

അധിവര്‍ഷം ആകണമെങ്കില്‍
അവയെ 4കൊണ്ട്‌

ഹരിക്കുവാന്‍ കഴിയണം.

}
else if (year%4 == 0)
cout << "Leap year\n";

else
cout<< "Not a leap year\n";
return 0;

}
പ്രോഗാം 7.6 ന്റെ ചില മാതൃക ഓട്ട്പുട്ടുകള്‍ നമുക്ക്‌ നോക്കാം.
ഓട്ട്പുട്ട്‌ |:
Enter the year (in 4-digits): 2000
Leap year
ഓട്ട്പുട്ട 2:
Enter the year (in 4-digits): 2014
Not a leap year
| eon 7. MOLOHM പ്രസ്താവനകള്‍

ഓട്ട്പുട്ട്‌ 3:
Enter the year (in 4-digits): 2100
Not a leap year

ഓട്ട്പുട്ട 4:

Enter the year (in 4-digits): 2004

Leap year
else Lf ലാഡറിന്റെ ഉപയോഗം വിവരിക്കുന്നതിനുള്ള ഒരു പ്രോ്രഗാം കൂടി നമുക്ക്‌ എഴുതാം.
പ്രോ്രഗാം 7.7-ല്‍ ആഴ്ചയിലെ ദിവസത്തെ സൂചിപ്പിക്കുന്നതിനായി 1 മുതല്‍ 7 വരെയുള്ള സംഖ്യ
ഇന്‍പുട്ടു ചെയ്യുന്നതിന്‌ അനുവദിക്കുകയും അതിനനുസൃതമായ ദിവസത്തിന്റെ പേര്‌ പ്രദര്‍ശിപ്പി
ക്കുകയും ചെയ്യുന്നു. ഇന്‍പൂട്ട്‌ 1 ആണെങ്കില്‍ “ടഥ്ഥഠിമ്‌ എന്നും 2 ആണെങ്കില്‍ “Monday” എന്നും
ഓട്ട്പുട്ടുകള്‍ പ്രദര്‍ശിപ്പിക്കപ്പെടുന്നു. ഇതുപോലെ മറ്റു ദിവസങ്ങളും. 1 മുതല്‍ 7 വരെയുള്ള പരി
ധിക്ക്‌ പുറത്താണ്‌ ഇന്‍പുട്ട്‌ എങ്കില്‍ “Wrong input” എന്നായിരിക്കും ഓട്ട്പൂട്ട്‌.
ഖ്യയ്ക്ക്‌ അനുസൃതമായ ദിവസത്തിന്റെ പേര്‌

#include <iostream>

using namespace std;
int main()
{

int day;

cout << "Enter the day number (1-7): "7

cin >> day;

if (day == 1)

cout << "Sunday";
else if (day == 2)
cout << "Monday";
else if (day == 3)
cout << "Tuesday";
else if (day == 4)
cout << "Wednesday";
else if (day == 5)
cout << "Thursday";
else if (day == 6)
cout << "Friday";
else if (day == 7)
cout << "Saturday";
else
cout << "Wrong input";
return 0;
പി

പ്രോഗാം 7.7 ന്റെ ചില മാതൃക ഓട്ട്പുട്ടുകളാണ്‌ താഴെയുള്ളത്‌.

ഓട്ട്പൂട്ട്‌ 1:
Enter the day number (1-7): 5
Thursday

ഓട്ട്പൂട്ട്‌ 2:
Enter day number (1-7): 9

Wrong input

സ്വയം പരിരോധിക്കാം

1. ഒരു പൂര്‍ണ്ണ സംഖ്യ ഉന്‍പുട്ടായി സ്വീകരിച്ച്‌ അത്‌ പോസ്റ്റീവാണോ നെററ്റീവാണോ പുജ്യ
മാണോ എന്ന്‌ പരിഭോധിക്കുവാനുള്ള പ്രോഗ്രാം if else പ്രസ്താവന ഉപയോഗിച്ച്‌ എഴു
തുക.

2. ഒരു അക്ഷരം (a, 0, ൦ അല്ലെങ്കില്‍ 0) ഉന്‍പൂട്ട്‌ ചെയ്യുന്നതിനും താഴെപറയുന്ന രീതി
യില്‍ ഒട്ട്‌ പ്രദര്‍രിരിക്കുന്നതിനുമുള്ള ഒരു പ്രോദ്രാം എഴുതുക.

"a - abacus", "b - boolean", "c - computer", "d - debugging"
3. ഒരു അക്ഷരം ഉന്‍പുട്ട്‌ ചെയ്യുന്നതിനും അത്‌ ആല്‍ഫഡ്റ്റാണോ, സംഖ്യയാണോ അതോ മറ്റേ

തെങ്കിലും ക്യാരക്ടര്‍ ആണോ എന്ന്‌ പ്രിന്റ്‌ ചെയ്യുന്നതിനുള്ള ഒരു പ്രോരാം എഴുതുക.

7.1.5. switch പ്രസ്താവന (switch statement)

else if ലാഡറിന്റെ സഹായത്തോടെ ബഹുശാഖീകരണം (Multiple branching)
എന്ന ആശയം നാം കണ്ടു കഴിഞ്ഞു. ൨:---ലെ മറ്റൊരു രൂപകല്‍പ്പനയായ switch പ്രസ്താവന
ഉപയോഗിച്ച്‌ ഇവയില്‍ ചില പ്രോ്രഗാമുകള്‍ എഴുതുവാന്‍ സാധിക്കും. ഈ തിരഞ്ഞെടുക്കല്‍ പ്രസ്താ
വന ഒരു വേരിയബിളിന്റേയോ ഒരു പ്രയോഗത്തിന്റേയോ (expression) വിലയെ ഒരു കൂട്ടം
പൂര്‍ണ സംഖ്യകളുമായോ അക്ഷര സ്ഥിരാങ്കങ്ങളുമായോ തുടര്‍ച്ചയായി പരിശോധിക്കുന്നു. switch
പ്രസ്താവനയുടെ വാകൃഘടന ചുവടെ ചേര്‍ത്തിരിക്കുന്നു.

SWitch പ്രയോഗം)

case male 1 > പ്രസ്താവനകള്‍ 1;
break;

case സ്ഥിരാംം 2 : പ്രസ്താവനകര്‍ 2;
break;

case സ്ഥിരാംഗം 3 : പ്രസ്താവനകര്‍ 3;
break;

case സ്ഥിരാംഗം ൩-1. > പ്രസ്താവനകള്‍ n-1;
break;

default > പ്രസ്താവനകള്‍ n;
| eon 7. MOLOHM പ്രസ്താവനകള്‍

switch (expression)

‘case! constant_1 : statement block 1;
break;

‘case’ constant 2 : statement block 2;
break;

‘case’ constant_3 : statement block 3;
break;

‘case! constant_n-1 : statement block n-1;
break;

default : statement block n;

}

വാകൃഘടനയില്‍ switch, case, break, default എന്നിവ കീ വേര്‍ഡുകളാണ്‌ (Keyword).
ഒരു പൂര്‍ണ്ണസംഖ്യയോ ഒരു ക്യാരക്ടര്‍ കോണ്‍സ്റ്റന്റോ കിട്ടാവുന്ന രീതിയില്‍ പ്രയോഗത്തെ വിലയി
രുത്തുകയും അത്‌ CASE പ്രസ്താവനകളില്‍ കൊടുത്തിരിക്കുന്ന സ്ഥിരാംഗങ്ങള്‍ക്ക്‌ തുല്യമാണോ
എന്ന്‌ നോക്കുകയും ചെയ്യുന്നു. ഒരു തുല്യത കണ്ടെത്തിയാല്‍ ആ ഠദടട-നോട്‌ അനുബന്ധിച്ചുള്ള
പ്രസ്താവനകള്‍ പ്രവര്‍ത്തിക്കും (break പ്രസ്താവന വരെയോ അല്ലെങ്കില്‍ switch പ്രസ്താ
വനയുടെ അവസാനം വരെയോ. തുല്യത കണ്ടെത്തിയില്ലെങ്കില്‍ default ബ്ലോക്കിലെ പ്രസ്താ
വന കൂട്ടം പ്രവര്‍ത്തിക്കും. default പ്രസ്താവന നിര്‍ബന്ധമല്ല. അത്‌ ഉപയോഗിച്ചിട്ടില്ലെങ്കില്‍
തുല്യത കണ്ടെത്താനാവാത്ത സന്ദര്‍ഭങ്ങളില്‍ മറ്റൊന്നും പ്രവര്‍ത്തിക്കുകയില്ല.

൭൧ ൦൧൨-നകത്ത്‌ ഉപയോഗിച്ചിരിക്കുന്ന break പ്രസ്താവന €----ലെ ഒരു ജമ്പ്‌ പ്രസ്താവനയാണ്‌.
break പ്രസ്താവനയില്‍ എത്തുമ്പോള്‍ പ്രോഗ്രാം നിയ്രന്രണം switch പ്രസ്താവനയ്ക്ക്‌
ശേഷമുള്ള പ്രസ്താവനകളിലേക്ക്‌ പോകുന്നു.

ഭാഗം 7.3.2 ല്‍ break സ്റ്റേറ്റ്മെന്റിനെക്കുറിച്ച്‌ വിശദമായി നമുക്ക്‌ ചര്‍ച്ച ചെയ്യാം. Baldo 7.2നെ
SWITCH പ്രസ്താവന ഉപയോഗിച്ച്‌ എഴുതാവുന്നതാണ്‌. ഇത്‌ കോഡിന്റെ വായനാ സുഖവും ഫല
പ്രാപ്തിയും വര്‍ദ്ധിപ്പിക്കുന്നു. പ്രോ്രഗാം 7.8 ല്‍ വരുത്തിയ ഭേദഗതികള്‍ (ശ്രദ്ധിക്കുക.

യിലെ ദിവസം പ്രദര്‍രിഷിക്കുന്നതിന്‌.

#include <iostream>
using namespace std;
int main()

{ int day ;

cout << "Enter a number between 1 and 7: ";
cin >> day ;
switch (day)
{
case 1: cout << "Sunday";
break;
eon

case 2: cout << "Monday";

case 3: cout << "Tuesday";

case 4: cout << "Wednesday";

case 5: cout << "Thursday";

case 6: cout << "Friday";

case 7: cout << "Saturday";

break;

default: cout << "Wrong input";

}

return 0;

}

പ്രോ്രഗാം 7.7-ന്റെ ഓട്ട്പുട്ട്‌ തന്നെയായിരിക്കും പ്രോഠ്രഗാം 7.8-നും. ചില മാതൃകകള്‍ താഴെ കൊടു
ത്തിരിക്കുന്നു.
ഓട്ട്പുട്ട 1:
Enter a number between 1 and 7: 5
Thursday
ഓട്ട്പുട്ട്‌ 2:
Enter a number between 1 and 7: 8
Wrong input

പ്രോഗാം 7.8-ല്‍ day വേരിയബിന്റെ വില case പ്രസ്താവനയിലെ സ്ഥിരാങ്കങ്ങളുമായി താര
തമ്യം ചെയ്തിരിക്കുന്നു. ഒരു തുല്യത കണ്ടെത്തുമ്പോള്‍ ആ ഠദടട-നോട്‌ അനുബന്ധിച്ചുള്ള
BOSONS പ്രസ്താവന പ്രവര്‍ത്തിക്കുന്നു. വേരിയബിള്‍ ദിദ യ്ക്ക്‌ 5 എന്ന വില നാം ഇന്‍പൂട്ടായി
കൊടുത്താല്‍ അഞ്ചാമത്തെ CASE പ്രസ്താവന തുല്യമാവുകയും cout << "Thursday";
എന്ന പ്രസ്താവന പ്രവര്‍ത്തിക്കുകയും ചെയ്യുന്നു. ഇന്‍പുട്ട്‌ 8 ആണെങ്കില്‍ തുല്യത കണ്ടെത്തു
വാന്‍ ആകില്ല. ആയതിനാല്‍ default ബ്ലോക്ക്‌ പ്രവര്‍ത്തിക്കും.

എല്ലാ break പ്രസ്താവനകളെയും ഒഴിവാക്കുകയാണെങ്കില്‍ പ്രോഗ്രാം 27.8-ന്റെ ഓട്ട്പുട്ട്‌
നിങ്ങള്‍ക്ക്‌ പ്രവചിക്കാമോ? ഠദടട സ്ഥിരാങ്കങ്ങളുമായി day യുടെ വില താരതമ്യം ചെയ്യുന്നു.
ആദ്യത്തെ തുല്യത കണ്ടെത്തുമ്പോള്‍ അനുബന്ധ പ്രസ്താവനകളും തുടര്‍ന്നുള്ള പ്രസ്താവന
കളും (പവര്‍ത്തിക്കുന്നു (അവശേഷിക്കുന്ന സ്ഥിരാങ്കങ്ങള്‍ പരിശോധിക്കാതെ). ചില സാഹചര്യ
ങ്ങളില്‍ break പ്രസ്താവന മന:പൂര്‍വ്വം ഒഴിവാക്കാറുണ്ട്‌. ഒരു switch ലെ തന്നിട്ടുള്ള എല്ലാ
ടട നോടും അനുബന്ധിച്ചുള്ള പ്രസ്താവനകള്‍ ഒരുപോലെയാണെങ്കില്‍ അത്തരം പ്രസ്താവ
നകള്‍ അവസാനത്തെ CASE ല്‍ നാം എഴുതിയാല്‍ മതിയാകും. പ്രോഗ്രാം 7.9 ഈ ആശയം വിവ
രിക്കുന്നു.
| eon 7. MOLOHM പ്രസ്താവനകള്‍

൮) അല്ലയോ എന്ന്‌ പരിരോധിക്കുന്നതിന്‌.

#include <iostream>
using namespace std;
int main()
{
char ch;
cout<<"Enter the character to check: ";
cin>>ch;
switch (ch)
{

case "മ

case ‘a!

case 'E!

case 'e!

case 'I'

case "27

case 'O!

case 'o!

case 'U' :

case 'u' : cout<<"The given character is a vowel";
break;

default : cout<<"The given character is not a vowel";

}

return 0;

}

പ്രോഗ്രാം. 7.9 നല്‍കുന്ന ചില ഓട്ട്പുട്ടുകള്‍ താഴെ കാണിച്ചിരിക്കുന്നു.

ഓട്ട്പൂട്ട്‌ 1:

Enter a character to check: E

The given character is a vowel
ഓട്ട്പുട്ട്‌ 2:

Enter a character to check: k

The given character is not a vowel

Switch ഉപയോഗിക്കുന്നതിന്റെ അനുയോജ്യതയും ആവശ്യകതയും

Switch പ്രസ്താവന else if ലാഡറിന്റെ അനേകം ശാഖകളുള്ള പ്രസ്താവനകള്‍ക്ക്‌ പകരമാ
യാണ്‌ ഉപയോഗിക്കുന്നതെങ്കിലും ഇവ രണ്ടും ഒരേ രീതിയിലല്ല പ്രവര്‍ത്തിക്കുന്നത്‌. ----ല്‍ എല്ലാ
Switch പ്രസ്താവനകളേയും else if ലാഡര്‍ ഉപയോഗിച്ച്‌ മാറ്റിയെഴുതാം. എന്നാല്‍ എല്ലാ
else if ലാഡറുകളും switch ഉപയോഗിച്ച്‌ മാറ്റിയെഴുതാന്‍ സാധിക്കില്ല. switch പ്രസ്താ
വന ഉപയോഗിച്ച്‌ അനേകം ശാഖകള്‍ നടപ്പില്‍ വരുത്തുന്നതിന്‌ താഴെ പറയുന്നവ ആവശ്യമാണ്‌.
eon

© MINITWNASG DENG പരിശോധന മാരതമെ ഉള്ളൂ. ag അവസരങ്ങളില്‍ അതിനെ തുല്യത
പ്രയോഗങ്ങളാക്കി മാറ്റിയെഴുതണം.

© എല്ലാ തുല്യതാ പ്രയോഗങ്ങളിലേയും ആദ്യത്തെ ഓപ്പറന്‍ഡ്‌ (operand) ഒരേ വേരിയബിളോ
പ്രയോഗമോ ആയിരിക്കണം.

ഭ ഈ പ്രയോഗങ്ങളിലെ രണ്ടാമത്തെ ഓപ്പറന്‍ഡ്‌ (operand) പൂര്‍ണസാഖ്യ (integer) അല്ലെങ്കില്‍
ക്യാരക്ടര്‍ കോണ്‍സ്റ്റന്റ്‌ ആയിരിക്കണം.

ഈ അധ്യായത്തില്‍ ഇതുവരെ ചര്‍ച്ച ചെയ്ത പ്രോ്രഗാം 7.3, lal 7.7 എന്നിവയിലെ ശാഖ
കള്‍ AMA Switch ഉപയോഗിച്ച്‌ മാറ്റിയെഴുതുവാന്‍ സാധിക്കുകയുള്ളൂ. പ്രോഗ്രാം 7.5-ല്‍ പരി
ശോധനാ പ്രയോഗങ്ങള്‍ score/10==10, score/10==9, score/10==8 എന്നിങ്ങനെ
മാറ്റം വരുത്തിയാല്‍ 3൩൪൨ ഉപയോഗിക്കാം. ഇതുപോലെ മറ്റു സ്‌കോറുകള്‍ മാറ്റി എഴുതുക.
താഴെകൊടുത്തിരിക്കുന്ന പ്രോ്രഗാംശകലം Else Lf ഗോവണിക്കു പകരമായി ഉപയോഗിക്കാം.

സ്കോര്‍ 1൩ asa

ആയതിനാല്‍ പ്രയോരം പൂര്‍ണ
സംഖ്യകള്‍ മാത്രേ നല്‍കുന്നുള്ളൂ.

switch(score/10)

‘ പ
case 10:
case 9: case 8: cout<< "A Grade"; break;
case 7: case 6: cout<< "B Grade"; break;
case 5: case 4: cout<< "C Grade"; break;
case 3: cout<< "D Grade"; break;
default: cout<< "E Grade";

}

switch ഉം else if ലാഡറും തമ്മിലുള്ള ഒരു താരതമ്യം പട്ടിക 7.1-ല്‍ കൊടുത്തിരിക്കുന്നു.

switch പ്രസ്താവന
1 അനേകം ശാഖകള്‍ (ബ്രാഞ്ച്‌) അനുവദിക്കുന്നു. | 1 അനേകം ശാഖകള്‍ (ബ്രാഞ്ച്‌) അനുവദിക്കുന്നു.

2. തുല്യത (equality) ഓപ്പറേറ്റര്‍ ഉള്ള നിബന്ധ | 2. ഏതൊരു റിലേഷണല്‍ / ലോജിക്കല്‍
നകള്‍ മാഠ്രതം വിലയിരുത്തുന്നു. പ്രയോഗങ്ങളും വിലയിരുത്തുന്നു.

3. ഫ്ളോട്ടിങ്ങ്‌ പോയിന്റ്‌ സ്ഥിരാങ്കങ്ങളോ
ഒരു പരിധിയിലുള്ള വിലകളോ നിബന്ധ
നകളിലൂള്‍പ്പെടുത്താം.

3.CASE സ്ഥിരാങ്കം എപ്പോഴും പൂര്‍ണ
സംഖ്യയോ അക്ഷരമോ ആയിരിക്കണം.

4. ഒരു തുല്യതയും ലഭിക്കാത്തപ്പോള്‍ default | 4. ഒരു പ്രയോഗവും ശരിയായില്ലെങ്കില്‍ else

8. SWItCh പ്രസ്താവനയില്‍ നിന്നും പുറത്തു | 5. ഒരു ബ്ലോക്ക്‌ പൂര്‍ത്തീകരിച്ചതിനുശേഷം
കടക്കുന്നതിന്‌ break പ്രസ്താവന ആവശ്യ, പ്രോ്ഗാമിന്റെ നിയ്ര്ത്രണം സ്വയം
മാണ്‌. ബ്ലാക്കിന്‌ പുറത്തു പോകുന്നു.

6. ഒരേ വേരിയബിളോ പ്രയോഗവോ ഒരു കൂട്ടം | 6. 5൦ ൦൩൨-നെക്കാള്‍ വഴക്കമുള്ളതും
വിലകളുമായി തുലൃത പരിശോധിക്കുന്നതിന്‌ എളുപ്പത്തില്‍ ഉപയോഗിക്കുവാന്‍ സാധി
കൂടുതല്‍ ഫലപ്രദമാണ്‌. ക്കുന്നതുമാണ്‌.

പട്ടിക 7.1 Switch ഉം else if ചുഡ്ധരും തമ്മിലുള്ള താരതമ്യം
| eon 7. MOLOHM പ്രസ്താവനകള്‍

7.1.6 കണ്ടിഷണല്‍ ഓഷറേറ്റര്‍ (Conditional operator (?:))

അധ്യായം 6- ല്‍ സൂപിപ്പിച്ചതുപോലെ C++ ല്‍ ഒരു ടെര്‍ണറി ഓപ്പറേറ്റര്‍ ഉണ്ട്‌. ? Do : ഉം എന്നീ
ചിഹ്നങ്ങള്‍ (ചോദ്യചിഹ്നവും കോളനും) ഉള്‍പ്പെടുന്ന കണ്ടിഷണല്‍ ഓപ്പറേറ്റര്‍ (Conditional
Operator) ആണ്‌ അത്‌. ഇത്‌ ഉപയോഗിക്കുന്നതിന്‌ മൂന്ന്‌ ഓപ്പറന്റുകള്‍ ആവശ്യമാണ്‌. if...else
പ്രസ്താവനക്ക്‌ പകരമായി ഇതിനെ ഉപയോഗിക്കാം. ഇതിന്റെ വാകൃഘടന താഴെ കൊടുത്തിരിക്കു
ന്നു.

പരിശോധനാ പ്രയോഗം 5 പ്രയോഗം ശരിയാകുമ്പോര്‍ പ്രവര്‍ത്തിക്കുന്ന കോഡ്‌ : പ്രയാഴം തെറ്റാകുമ്പോര്‍
പ്രവര്‍ത്തിക്കുന്ന കോഡ്‌ ;

Test expression ? True case code : False case code;
പരിശോധനാ പ്രയോഗം ഏതെങ്കിലും റിലേഷണലോ ലോജിക്കലോ ആയ പ്രയോഗം ആകാം.
പ്രയോഗം ശരിയാകുമ്പോള്‍ പ്രവര്‍ത്തിക്കുന്ന കോഡ്‌, പ്രയോഗം തെറ്റാകുമ്പോള്‍ പ്രവര്‍ത്തിക്കുന്ന
കോഡ്‌ എന്നിവ സ്ഥിരവിലയോ, വേരിയബിളോ, പ്രയോഗമോ അല്ലെങ്കില്‍ പ്രസ്താവനയോ ആകാം.
ഇതിന്റെ പ്രവര്‍ത്തനം if else പ്രസ്താവനയുടെ സഹായത്തോടു കൂടി താഴെ കാണിച്ചിരിക്കുന്നു.

if Test experssion (പരിശോധനാ പ്രയോഗം)
TLUE CASE COE? (പ്രയോഗം ശരിയാകുമ്പോള്‍ പ്രവര്‍ത്തിക്കുന്ന കോഡ്‌:)

}

else

False_case code: (പ്രയോഗം തെറ്റാകുമ്പോള്‍ പ്രവര്‍ത്തിക്കുന്ന കോഡ്‌;)

if (Test expression)
True_case code;
else

False case code;

22. . . 215 പ്രവര്‍ത്തിക്കുന്നതുപോലെയാണ്‌ കണ്ടിഷണല്‍ BIaJGOQOQ}0 പ്രവര്‍ത്തിക്കുന്നത്‌.
പരിശോധനാ പ്രയോഗം വിലയിരുത്തി അത്‌ ശരിയാണെങ്കില്‍ പ്രയോഗം ശരിയാകുമ്പോള്‍
പ്രവര്‍ത്തിക്കുന്ന കോഡും' (true_case Code) തെറ്റാണെങ്കില്‍ “പ്രയോഗം തെറ്റാകുമ്പോള്‍
പ്രവര്‍ത്തിക്കുന്ന കോഡും' (515 ഠടടട code) തിരഞ്ഞെടുക്കുന്ന. കണ്ടീഷണല്‍ ഓപ്പ
റേറ്ററിന്റെ പ്രവര്‍ത്തനം പ്രോഗ്രാം 7.10 ല്‍ വിവരിച്ചിരിക്കുന്നു.
Ooe

ഏറ്റവും വലിയ സംഖ്യ കണ്ടുപിടിക്കുന്നതിന്‌.

#include <iostream>

using namespace std;

int main()

{

int numl, num2;

cout << "Enter two numbers: ";

cin>> numl >> num2 ;

(num1l>num2) ? cout<<numl<<" is larger" : cout<<num2<<" is larger";
return 0;

}
ഈ പ്രോ്രഗാമിലെ return 0 പ്രസ്താവനയ്ക്ക്‌ മുമ്പുള്ള (പ്രസ്താവനയില്‍ കണ്ടീഷണല്‍ ഓപ്പ
റേറ്റര്‍ ഉപയോഗിക്കുന്നതുകൊണ്ട്‌ അതിനെ കണ്ടീഷണല്‍ പ്രസ്താവന എന്നു വിളിക്കുന്നു. ഈ
പ്രസ്താവനയെ താഴെയുള്ള കോഡ്‌ ശകലം ഉപയോഗിച്ച്‌ മാറ്റി എഴുതാവുന്നതാണ്‌.

int big = (numl>num2)? numl : num2;

cout<< big << "is larger";
പരിശോധനാ പ്രയോഗം ശരിയാണെങ്കില്‍ NuM1-an വിലയും തെറ്റാണെങ്കില്‍ num2 ന്റെ വിലയും
ആയിരിക്കും HIG ലേക്ക്‌ ശേഖരിക്കുക. ഇവിടെ കണ്ടീഷണല്‍ ഓപ്പറേറ്റര്‍ ഉപയോഗിച്ചാണ്‌ ഒരു
കണ്ടീഷണല്‍ പ്രയോഗം ഉണ്ടാക്കിയിരിക്കുന്നത്‌. ഈ പ്രയോഗത്തില്‍ നിന്നും ലഭിക്കുന്ന വില big
ലേക്ക്‌ ശേഖരിക്കുന്നു.
കണ്ടീഷണല്‍ പ്രയോഗത്തിന്റെ ഒരു സങ്കീര്‍ണ രൂപം താഴെ കൊടുത്തിരിക്കുന്നു. ഇത്‌ മൂന്ന്‌ സംഖ്യ
കളില്‍ ഏറ്റവും വലുത്‌ നല്‍കുന്നു. n1, ൩൧, ൩3, big എന്നിവ പൂര്‍ണ സംഖ്യ വേരിയബിളു
കളാണെങ്കില്‍,
big = (nl>n2) ? ( (nl>n3)?nlin3 ) : ( (n2>n3)?n2:n3);
പ്രോഗ്രാം 7.4 പരിശോധിച്ച്‌ മുകളില്‍ കൊടുത്തിരിക്കുന്ന കണ്ടീഷണല്‍ പ്രയോഗം എങ്ങനെയാണ്‌
നെസ്റ്റഡ്‌ if നുപകരമായി ഉപയോഗിച്ചിരിക്കുന്നത്‌ എന്ന്‌ നോക്കുക.

സ്വയം പരിശോധിക്കാം
1. 1 മുതല്‍ 12 വരെയുള്ള സംഖ്യകള്‍ ഉന്‍പുട്ട്‌ ചെയ്ത്‌ അതിനനുസ്യതമായ മാസത്തിന്റെ

പേര്‌ പ്രദര്‍രിരിക്കുന്നതിനുള്ള പ്രോ്രാം എഴുതുക. (1 ആണെങ്കില്‍ January, 2 ആണെ
ങ്കില്‍ February എന്നിങ്ങനെ)

2. switch പ്രസ്താവന ഉപയോഗിച്ച്‌ അരിത്തമറ്റിക്‌ ഓഷറേഷനുകള്‍ ചെയ്യുവാനുള്ള
ഒരു പ്രോഗ്രാം എഴുതുക. ഉതിനുവേണ്ടി 2 ഓകറന്റുകളും ഒരു ഓഷറേറ്ററും ഉന്‍പുട്ടായി
സ്വീകരിക്കുക.

3. switch പ്രസ്താവനയ്ക്കകത്തുള്ള break പ്രസ്താവനയുടെ പ്രാധാന്യം എന്താണ്‌?

4. 0 മുതല്‍ 9 വരെയുള്ള ഏതെങ്കിലുമൊരു സംഖ്യ ഇന്‍പുട്ട്‌ ചെയ്ത്‌ അതിനെ അക്ഷരത്തിലെഴുതുവാ
നുള്ള ഒരു പ്രോഗ്രാം. switch പ്രസ്താവന ഉപയോഗിച്ച്‌ എഴുതുക.

| eon 7. MOLOHM പ്രസ്താവനകള്‍

5. ഒരു സംഖ്യ ഉന്‍പുട്ടായി സ്വീകരിച്ച്‌ ആ സംഖ്യ 5 ന്റെ ഗുണിത്മാണ്‌ എന്ന്‌ പരിരോധിക്കുന്നതിനുള്ള
ഒരു പ്രോ്രാം തിരഞ്ഞെടുക്കല്‍ പ്രസ്താവനയും കണ്ടിഷണല്‍ ഓഷറേറ്ററും ഉപയോശിച്ച്‌ എഴുതുക.

6. താഴെ കൊടുത്തിരിക്കുന്ന പ്രസ്താവന if..else ഉപയോരിച്ച്‌ മാറ്റിയെഴുതുക.
result = (mark>30)? ‘P’ : ഡു
അത്ത

7.2. ആവര്‍ത്തന പ്രസ്താവനകള്‍ (Iteration statements)

അധ്യായം 4-ല്‍ നാം ചര്‍ച്ച ചെയ്ത ചില പ്രശ്നങ്ങളുടെ ഉത്തരങ്ങളില്‍ ആവര്‍ത്തന സ്വാഭാവമുള്ള
പ്രവര്‍ത്തികള്‍ അടങ്ങിയിട്ടുണ്ട്‌. പ്രോരഗാമുകള്‍ എഴുതുമ്പോള്‍ ഒന്നോ അതിലധികമോ പ്രസ്താവ
നകളെ പല തവണ പ്രവര്‍ത്തിപ്പിക്കുന്നതിനായി ഭാഷയുടെ പ്രത്യേക രൂപകല്‍പ്പനകള്‍ നാം ഉപ
യോഗിക്കുന്നു. ഇത്തരം രൂപകല്‍പ്പനകളെ ആവര്‍ത്തന പ്രസ്താവനകള്‍ (ഒല statements)
അല്ലെങ്കില്‍ ലുപ്പിങ്‌ പ്രസ്താവനകള്‍ എന്നു വിളിക്കുന്നു. C++-G8 AM തരം ആവര്‍ത്തന പ്രസ്താ
വനകള്‍ ഉണ്ട്‌. ഒരു നിബന്ധന ശരിയാകുമ്പോള്‍ ഒരു കൂട്ടം പ്രസ്താവനകള്‍ ആവര്‍ത്തിച്ച്‌ പ്രവര്‍ത്തി
പ്പിക്കുവാന്‍ ഇവ അനുവദിക്കുന്നു.

ലൂപ്പ്‌ എന്ന ആശയം നിത്യജീവിതത്തില്‍ നാം പ്രയോഗിക്കാറുണ്ട്‌. നമുക്ക്‌ ഒരു സാഹചര്യം പരിഗ
ണിക്കാം. പരീക്ഷയില്‍ A+ ഗ്രേഡ്‌ ലഭിക്കുന്ന എല്ലാ വിദ്യഠാര്‍ത്ഥികള്‍ക്കും നിങ്ങളുടെ ക്ലാസ്‌ ടീച്ചര്‍
ഒരു സമ്മാനം തരുമെന്ന്‌ പ്രഖ്യാപിച്ചു എന്ന്‌ വിചാരിക്കുക. സമ്മാനം പൊതിയാനുള്ള ചുമതല
നിങ്ങളെ ഏല്‍പ്പിക്കുന്നു. സമ്മാനം പൊതിയേണ്ടതെങ്ങെനെയെന്ന്‌ താഴെ കൊടുത്ത രീതിയില്‍
ടീച്ചര്‍ വിശദീകരിക്കുന്നു.

ഘട്ടം 1 : സമ്മാനം എടുക്കുക.

ഘട്ടം2 : പൊതിയാനുള്ള പേപ്പര്‍ മുറിക്കുക.

ഘട്ടം3 : സമ്മാനം പൊതിയുക.

ഘട്ടം 4 : റിബണ്‍ ഉപയോഗിച്ച്‌ കവര്‍ കെട്ടുക.

ഘട്ടം : കാര്‍ഡില്‍ പേരെഴുതി സമ്മാനത്തിന്‌ മുകളില്‍ ഒട്ടിക്കുക.

പരീക്ഷയില്‍ 30 വിദ്യാര്‍ഥികള്‍ക്ക്‌ A+ ഗ്രേഡ്‌ ഉണ്ടെങ്കില്‍ ഇതേ പ്രവര്‍ത്തി 30 തവണ നിങ്ങള്‍
ആവര്‍ത്തിക്കേണ്ടതുണ്ട്‌. സമ്മാനം പൊതിയുന്ന ഈ പ്രവര്‍ത്തി 30 തവണ ആവര്‍ത്തിക്കുന്നതിന്‌
താഴെ കൊടുത്ത രീതിയില്‍ നിര്‍ദ്ദേശങ്ങള്‍ പുന:ര്രമീകരിക്കാം.

താഴെ കൊടുത്ത ഘട്ടങ്ങള്‍ 30 തവണ ആവര്‍ത്തിക്കുക

{

GOS}OM സമ്മാനം എടുക്കുക.
പൊതുയാനുകൂള പേച്ഛര്‌ മുറിക്കുക.
സമ്മാനം ചഫെതയുക.

റിബണ്‍ ഉപയോഗിച്ച്‌ HUG കെട്ടുക.

കാര്‍ഡില്‍ പേരെഴുതി സമ്മാനത്തിന്‌ മുകളില്‍ ഒട്ടിക്കുക.
Ooe

ഇനി വേറൊരു ഉദാഹരണമെടുക്കാം. കമ്പ്യൂട്ടര്‍ ആപ്ലിക്കേഷന്‍ വിഷയത്തില്‍ ലഭിച്ച സ്്‌കോറുക
ളുടെ ക്ലാസ്‌ ശരാശരി നമുക്ക്‌ കണ്ടുപിടിക്കണമെന്ന്‌ കരുതുക. അതിനായി താഴെ പറയുന്ന ഘട്ട
ങ്ങളിലൂടെ കടന്നു പോകണം.

ആകെ-സ്‌കോഥിന്‌ (പഠരംഭ വിലയായ? പുജ്യം കൊടുക്കുക.

താഴെ പറയുന്ന ഘടങ്ങള്‍ ആദ്യത്തെ വിദ്യാര്‍ഥിക്ക്‌ മുതല്‍ അവസ്ധാനത്തെ ആള്‍ വരെ
ആവരത്തിക്കുക.

{

വിദ്യാര്‍ത്ഥിയുടെ സ്കോര്‍ ആകെ-സ്കോറിനോട്‌ കൂട്ടുക.
അടുത്ത വിദ്യാരിത്ഥിയുടെ സ്കോര്‍ എടുക്കുക.

}

ശരാശരി = CHOA-VEOAIG/BITIOL ആകെ വിദ്ാര്ത്ഥികള്ുടെ എണ്ണം

ഈ രണ്ടു ഉദാഹരണങ്ങളിലും ചില ഘട്ടങ്ങള്‍ നാം പല തവണ ചെയ്യുന്നു. പ്രകിയ aH LO
തവണ ആവര്‍ത്തിച്ചു എന്നറിയുന്നതിന്‌ നാം ഒരു കൌണ്ടര്‍ (counter) ഉപയോഗിക്കുന്നു. പ്രവര്‍ത്തനം
തുടരണമോ വേണ്ടയോ എന്ന്‌ കരണ്ടറിന്റെ വില തീരുമാനിക്കുന്നു. നിബന്ധനയ്ക്ക്‌ വിധേയമായി
ലൂപ്പുകള്‍ പ്രവര്‍ത്തിക്കുന്നതിനാല്‍ കൌണ്ടര്‍ പോലുള്ള വേരിയബിള്‍ ലൂപ്പ്‌ നിര്‍മ്മിക്കുന്നതിന്‌ ഉപ
യോഗിക്കുന്നു. ഈ വേരിയബിള്‍ പൊതുവെ ലൂപ്പ്‌ നിയ്രന്തണവേരിയബിള്‍ (Loop control variable)
എന്നറിയപ്പെടുന്നു. എന്തുകൊണ്ടെന്നാല്‍ യഥാര്‍ത്ഥത്തില്‍ ഇതാണ്‌ ലൂപ്പിന്റെ പ്രവര്‍ത്തനത്തെ നിയ
്ത്രിക്കുന്നത്‌. അധ്യായം 4-ല്‍ ഒരു ലൂപ്പിന്റെ 4 ഘടകങ്ങളെക്കുറിച്ച്‌ നാം ചര്‍ച്ച ചെയ്തു. നമുക്ക്‌
അതൊന്ന്‌ ഓര്‍ത്തെടുക്കാം.

1 പ്രാരംഭ വില നല്‍കല്‍ (Initialisation) : ലൂപ്പിലേക്ക്‌ (aicaimlanmaolmn മുമ്പ്‌ അതിന്റെ
നിയ്രന്തണ വേരിയബിളിന്‌ പ്രാരംഭ വില നല്‍കണം. അങ്ങനെ ലൂപ്പ്‌ നിയ്രന്ത വേരിയബി
ളിന്‌ അതിന്റെ ആദ്യത്തെ വില ലഭിക്കും. (പാരംഭ വില നല്‍കുന്ന പ്രസ്താവന ലൂപ്പിന്റെ
തുടക്കത്തില്‍ മാതമേ പ്രവര്‍ത്തിക്കുന്നുള്ളു.

2. പരിശോധനാ പ്രയോഗം (Test Expression) : ഇത്‌ ഒരു റിലേഷണല്‍ അല്ലെങ്കില്‍ ലോജി
ക്കല്‍ പ്രയോഗമാണ്‌. ഇതിന്റെ വില ശരി അല്ലെങ്കില്‍ തെറ്റ്‌ ആയിരിക്കും. ലൂപ്പിന്റെ ചട്ടക്കൂട്‌
പ്രവര്‍ത്തിക്കണോ വേണ്ടയോ എന്ന്‌ ഇത്‌ തീരുമാനിക്കുന്നു. പരിശോധനാ പ്രയോഗം ശരി
യാണെങ്കില്‍ ലൂപ്പ്‌ പ്രവര്‍ത്തിക്കുന്നു. അല്ലെങ്കില്‍ അത്‌ പ്രവര്‍ത്തിക്കില്ല.

3. പരിഷ്കരിക്കല്‍ പ്രസ്താവന (Updation Statement) : പരിഷ്കരിക്കല്‍ പ്രസ്താവന
ലൂപ്പ്‌ നിയ്രന്തണ വേരിയബിളിന്റെ വിലയില്‍ മാറ്റം വരുത്തുന്നു. ഈ പ്രസ്താവന അടുത്ത
ആവര്‍ത്തനത്തിന്‌ മുന്നേ പ്രവര്‍ത്തിക്കുന്നു.

4. ലുപ്പിന്റെ ചട്ടക്കൂട്‌ (Body of loop) : ആവര്‍ത്തിക്കപ്പെടേണ്ട പ്രസ്താവനകള്‍ ഉപയോ
ഗിച്ച്‌ ലൂപ്പിന്റെ ചട്ടക്കൂട്‌ രൂപപ്പെടുത്തുന്നു. ഇതില്‍ ഒന്നോ അതിലധികമോ പ്രസ്താവനകള്‍
ഉണ്ടായിരിക്കും. ലൂപ്പുകളെ പൊതുവെ ആഗമന നിയ്രന്തണ ലൂപ്പുകള്‍ (Entry controlled
loop) എന്നും ബഹിര്‍ഗമന നിയ്രന്തണ ലൂപ്പുകള്‍ (Exit controlled loop) എന്നും തരംതിരിച്ചി
രിക്കുന്നു എന്ന്‌ അധ്യായം 4-ല്‍ നാം പഠിച്ചു. C++ ല്‍ മൂന്നുതരം ലൂപ്പ്‌ പ്രസ്താവനകള്‍
ഉണ്ട്‌. while loop, for loop, do-while loop. ഓരോന്നിന്റേയും പ്രവര്‍ത്തനം
വിശദമായി നമുക്ക്‌ ചര്‍ച്ച ചെയ്യാം.
| eon 7. MOLOM പ്രസ്താവനകള്‍

7.2.1 while പ്രസ്താവന (while statement)

while ലൂപ്പ്‌ ഒരു ആഗമന നിയ്യന്തണ ലൂപ്പ്‌ ആണ്‌. നിബന്ധന (Condition) ആദ്യം പരിശോധിക്കുകയും
അത്‌ ശരിയാണെങ്കില്‍ ലൂപ്പിന്റെ ചട്ടക്കൂട്‌ പ്രവര്‍ത്തിക്കുകയും ചെയ്യുന്നു. അതായത്‌ നിബന്ധന ശരി
യാകുന്നിടത്തോളം ലൂപ്പിന്റെ ചട്ടക്കൂട പ്രവര്‍ത്തിക്കും. while ലൂപ്പിന്റെ വാകൃഘടന ഇതാണ്‌.

Moyen വേരിയബിളിന്റെ പ്രാരംഭ വില നല്‍കല്‍;
while (പരിശോധനാ പ്രയോഗം)
{
ലൂഭിന്റെ ചട്ടക്കൂട്‌;
ലൂഭ്‌ നിയ്ര്ത്രണ വേരിയബിളിനെ പുതുക്കല്‍;
intialisation of loop control variable;
while (test expression)
{
body of the loop;
updation of loop control variable;

}

ഇവിടെ പരിശോധനാ പ്രയോഗം നിബന്ധന നിര്‍വചിക്കുകയും അത്‌ ലൂപ്പിനെ നിയ്യന്രിക്കുകയും
ചെയ്യുന്നു. ലൂപ്പിന്റെ ചട്ടക്കൂട്‌ ഒരു പ്രസ്താവനയോ ഒന്നിലധികം പ്രസ്താവനകളോ അല്ലെങ്കില്‍
പ്രസ്താവനകളില്ലാതെയോ ആകാം. ആവര്‍ത്തിച്ചു
പ്രവര്‍ത്തിക്കുന്നതിനുള്ള ഒരു കൂട്ടം പ്രസ്താവനകളാണ്‌
ലൂപ്പിന്റെ ചട്ടക്കൂട്‌. ലൂപ്പ്‌ നിയ്രന്തണ വേരിയബിളിന്റെ
വില വൃത്യാസപ്പെടുത്തുന്ന പ്രസ്താവനയാണ്‌ a lair വ്‌ eo ah
രിക്കല്‍ പ്രസ്താവന. ഒരു while ലൂപ്പില്‍ ലൂപ്പ്‌ നിയ
ര്ത്രണ വേരിയബിളിന്‌ ലൂപ്പ്‌ തുടങ്ങുന്നതിനുമുമ്പ്‌ പ്രാരം
ഭവില നല്‍കുകയും ലൂപ്പ്‌ ചട്ടക്കൂടിനുള്ളില്‍ വച്ച്‌ അതു
പുതുക്കുകയും ചെയ്യുന്നു. ഒരു while ലൂപ്പിന്റെ
പ്രവര്‍ത്തന ചിത്രം 7.3-O2! ഫ്ളോചാര്‍ട്ടില്‍ വിവരിച്ചിരി

ക്കുന്നു. al

നിയ്രന്തണ വേരിയബിളിന്‌ പ്രാരംഭ വില നല്‍കു പ്രസ്താവനകള്‍
കയാണ്‌ ആദ്യം ചെയ്യുന്നത്‌. പിന്നീട്‌ പരിശോധനാ ലൂഷിന്റെ
പ്രയോഗം വിലയിരുത്തുന്നു. അത്‌ ശരിയാണ്‌ എങ്കില്‍ ക്കു്‌

ലൂപ്പിന്റെ ചട്ടക്കൂട്‌ പ്രവര്‍ത്തിക്കുന്നു. അതുകൊണ്ടാണ്‌ പി വിയബിളിനറെ
വില പുതുക്ക
while ലൂപ്പിനെ ആഗമന Mayme ലൂപ്പ്‌ എന്ന്‌ വിളി

ക്കുന്നത്‌. ലൂപ്പിന്റെ ചട്ടക്കൂട്‌ ്രവര്‍ത്തിക്കുന്നതിനൊപ്പം

പ ൦ |
ലൂപ്പ്‌ നിയ്രന്തണ വേരിയബിളിന്റെ വിലയും പുതുക്കു again പുറത്തുള്ള
പു പ്രസ്താവന
ന്നു. ലൂപ്പ്‌ ചട്ടക്കൂട്ടിന്റെ ്രവര്‍ത്തനം കഴിഞ്ഞതിനു

ശേഷം പരിശോധനാപ്രയോഗം വീണ്ടും വിലയിരുത്തു ചിത്രം 7.3. while മുകിമ്റ്‌ പ്രവരിത്തനം

ലി

ന്നു. നിബന്ധന ശരിയായിരിക്കുന്നിടത്തോളം ഈ പ്രക്രിയ തുടരുന്നു. while ലൂപ്പിന്റെ പ്രവര്‍ത്തനം
വിവരിക്കുന്നതിനുള്ള ഒരു കോഡ്‌ ശകലം നമുക്ക്‌ ഇപ്പോള്‍ പരിഗണിക്കാം.

int k=1;
Sala നല്‍കല്‍
while(k<=3)
[n18WIDo
{
cout << k << "\t'ly

+4+k; ലൂരിന്റെ
ചട്ടക്കൂടിനകത്തെ പുതു
} ക്കല്‍ പ്രസ്താവന

cout << "\n Program Ends";

ഈ കോഡ്‌ ശകലത്തില്‍ എന്ന ലൂപ്പ്‌ നിയ്രന്തണ വേരിയബിളിന്‌ 1 എന്ന വില ആദ്യം നല്‍കിയിരി
ക്കുന്നു. പിന്നീട്‌ K<=3 എന്ന പരിശോധനാ പ്രയോഗമായ വിലയിരുത്തുന്നു. ഇത്‌ ശരിയായതു കൊണ്ട്‌
ലൂപ്പിന്റെ ചട്ടക്കൂട്‌ പ്രവര്‍ത്തിക്കുന്നു. അതായത്‌ 1:-യുടെ വിലയായ 1 സ്ക്രീനില്‍ പ്രദര്‍ശിപ്പിക്കുന്നു.
അതിനുശേഷം പരിഷ്കരിക്കല്‍ പ്രസ്താവനയായ (update statement) ++k പ്രവര്‍ത്തിച്ച്‌ k യുടെ
വില 2 ആയി മാറുകയും ചെയ്യുന്നു. നിബന്ധന (1:53) ഒന്നുകൂടി പരിശോധിച്ച്‌ ശരിയാണെന്ന്‌
കണ്ടെത്തുകയും ചെയ്തു. പ്രോഗ്രാമിന്റെ നിയ്രന്തണം ലൂപ്പിനകത്ത്‌ പ്രവേശിച്ച്‌ k യുടെ വില 2
എന്ന്‌ സ്ക്രീനില്‍ പ്രദര്‍ശിപ്പിക്കുന്നു. വീണ്ടും പരിഷ്കരിക്കല്‍ പ്രസ്താവന ആവര്‍ത്തിക്കുകയും k
യുടെ വില 3 ആകുകയും ചെയ്യുന്നു. നിബന്ധന ഇപ്പോഴും ശരിയായതിനാല്‍ ലൂപ്പ്‌ പ്രവര്‍ത്തിച്ച്‌ 3
എന്ന്‌ സ്ക്രീനില്‍ പ്രദര്‍ശിപ്പിക്കുന്നു. k യുടെ വില വീണ്ടും പരിഷ്കരിച്ച 4 ആവുകയും ഇപ്പോള്‍ പരി
ശോധന പ്രയോഗത്തിനന്റെ ഫലം തെറ്റാവുകയും ചെയ്യുന്നു. നിയ്യന്തണം ലൂപ്പിന്‌ പുറത്തേക്ക്‌ വരു
കയും While ലൂപ്പിന്‌ പുറത്തുള്ള അടുത്ത പ്രസ്താവന പ്രവര്‍ത്തിക്കുകയും ചെയ്യുന്നു. ചുരുക്ക
ത്തില്‍ കോഡിന്റെ ഓട്ട്പുട്ട്‌ താഴെ കൊടുത്തിരിക്കുന്നത്‌ പോലെയായിരിക്കും.

1 2 3

Program ends
1യുടെ പ്രാരംഭ വില 5 ആണെങ്കില്‍ എന്ത്‌ സംഭവിക്കുമെന്ന്‌ സങ്കല്‍പ്പിക്കുക? ആദ്യം വിലയി
രുത്തുമ്പോള്‍ തന്നെ പരിശോധന പ്രയോഗം തെറ്റായതിനാല്‍ ലൂപ്പിന്റെ ചട്ടക്കൂട്‌ പ്രവര്‍ത്തിക്കുക
യില്ല. ലൂപ്പിന്റെ ചട്ടക്കൂടിലെക്കുള്ള പ്രവേശനം 1൨1൭൦ loop നിയ്യ്ത്രിക്കുന്നുവെന്ന്‌ ഇത്‌ വ്യക്ത
മായി കാണിക്കുന്നു.

ആദ്യത്തെ 10 എണ്ണല്‍ സംഖ്യകളെ while loop ഉപയോഗിച്ച്‌ പ്രിന്റ്‌ ചെയ്യുന്നതിനുള്ള ഒരു

പ്രോഗ്രാം നമുക്ക്‌ നോക്കാം.

#include<iostream>
using namespace std;
int main()

{

ലൂര്‌ നിയന്ത്രണ
വേരിയബളിന്‌ പ്രാരംഭ
വില നല്‍കല്‍.

ime 015 20
| eon 7. MOLOHM പ്രസ്താവനകള്‍

ae (n <= 10)
ഭരി i << ല്ല 5
aa ലൂരിന്റെ ചട്ടക്കൂട്‌

ലൂഭ്‌ നിയന്ത്രണ
വേരിബളിന്റെ വില
പുതുക്കല്‍

}

return 0;

പ്രോഗ്രാം 7.11 ന്റെ ഓട്ട്പുട്ട്‌ താഴെ കൊടുത്തിരിക്കുന്ന പോലെ ആയിരിക്കും.
12 3 4 5 6 7 8 9 10

20 വരെയുളള ഇരട്ട സംഖ്യകളുടെ തുക കണ്ട്പിടിക്കുന്നതിന്‌ പ്രോ്രഗാം 7.12 while ലൂപ്പ്‌ ഉപ
യോഗിക്കുന്നു. ലൂപ്പ്‌ വേരിയബിളിന്റെ വില ഏത്‌ ഓപ്പറേഷനുപയോഗിച്ചും പരിഷ്കരിക്കാമെന്ന്‌

ഈ പ്രോഗ്രാം കാണിക്കുന്നു.

#include<iostream>
using namespace std;
int main()
{
int i, sum — 0;
i = 2;
while( i<x= 20)

നിലവിലുള്ള വിലയോട്‌ രണ്ട്‌ കൂട്ടി
ച്ചേര്‍ത്തു കൊണ്ട്‌ ലൂക്‌ നിയന്ത്രണ
വേരിയബിന്റെ വില പുതുക്കുന്നു.

sum = sum + i;

d= i + 2;

cout<<"\nThe sum of even numbers up to 20 is: "<<sum;

return 0;

}

പ്രോഗ്രാം 7.12 ന്റെ ഓട്ട്പുട്ട്‌ താഴെ കൊടുത്തിരിക്കുന്നു.

The sum of even numbers up to 20 is: 110

100- നും 200- നും ഇടയിലുള്ള എല്ല BY MoYABJo (്രരീശിഷിക്കുവാനായി E(a19(00
7.11 പരിഷ്‌കരിക്കുക.

2. GlatHOI 7.12 പരിഷ്കരിച്ച്‌ ആ4/ത്തെ N എണ്ണത്‌ MoAYABIOS (90I0C) കങ്ടുപിടിക്കുക.

നമുക്ക്‌ ചെയ്യാം

പിടി

while പ്രസ്താവനയിലെ പരിശോധനാ പ്രയോരത്തിന്‌ ശേഷം നാം ഒരു അര്‍ധവിരാലം (;) ഇട്ടാല്‍
വാക്യൃഘടനയില്‍ തെറ്റൊന്നുമില്ല. എന്നാല്‍ അതിനുശേഷമുള്ള ബ്രാക്കറ്റുകളിലെ പ്രസ്താവനകളെ
ലൂക്‌ ചട്ടക്കൂടായി പരിരണിക്കുന്നില്ല. പരിശോധനാ പ്രയോഗം ശരിയാണെങ്കില്‍ while ലൂകിനു

ശേഷമുള്ള കോഡ്‌ പ്രവര്‍ത്തിക്കുകയുമില്ല പ്രോഗ്രാം അവസാനിക്കുകയുമില്ല എന്നതാണ്‌ ഏറ്റവും
പരിതാപകരമായ അവസ്ഥ. ഉത്‌ ഒരു അനന്തമായ ലൂദിന്‌ കാരണമാകുന്നു

7.2.2 for പ്രസ്താവന (for statement)

for ലൂപ്പും --ലെ ഒരു ആഗമന നിയ്രന്രണ ലൂപ്പ്‌ ആണ്‌. ലൂപ്പിലെ ഘടകങ്ങളായ പ്രാരംഭ
വില നല്‍കല്‍, പരിശോധന പ്രയോഗം, പരിഷ്കരിക്കല്‍ പ്രസ്താവന എന്നിവ ഒരുമിച്ചാണ്‌ for
പ്രസ്താവനയില്‍ നല്‍കിയിരിക്കുന്നത്‌. അതുകൊണ്ട്‌ പ്രോഗ്രാം ഒതുക്കമുള്ളതായി തീരുന്നു. വാക്യ
ഘടന ഇതാണ്‌;

For (പ്രാരംഭവില നല്‍കല്‍; പരിശോധന പ്രയോഗം? പരിഷ്കരിക്കല്‍ പ്രസ്താവന)
{

ലൂപ്പിന്റെ ചട്ടക്കൂട്‌;
}

for (initialisation; test expression; update statement)

{
body-of-the-loop;

{

for ലൂപ്പിന്റെ പവര്‍ത്തനം while ലൂപ്പിന്റേതുപോ

പ്രാരംഭ വില നല്‍കല്‍
പ്രയോരം

രി

ലൂിന്റെ ചട്ടക്കൂട്‌
ലൂരിനു പുറത്തുള്ള
പ്രസ്താവന

ചിത്രം 7.4: ഫോര്‍ലുഷിന്റെ പ്രവരിത്തനം.

ലെയാണ്‌. while ലൂപ്പിന്റെ ഫ്ളോചാര്‍ട്ട്‌ for
ലൂപ്പിന്റെ പ്രവര്‍ത്തനം വിശദമാക്കുന്നതിന്‌ ഉപയോഗി
ക്കാവുന്നതാണ്‌.

Lor ലൂപ്പില്‍ മൂന്നു ഘടകങ്ങളും ഒരുമിച്ചു വന്നതിനാല്‍
എണ്ണുന്ന (Counting) സാഹചര്യങ്ങളില്‍ ഈ പ്രസ്താ
വന ഉപയോഗിക്കുന്നത്‌ അഭികാമ്യമാണ്‌.

allo 7.4 ല്‍ കൊടുത്തിരിക്കുന്ന ഫ്‌ളോചാര്‍ട്ട്‌ സാധാ
രണയായി For പ്രസ്താവനയുടെ പ്രവര്‍ത്തനം കാണി
ക്കുന്നതിന്‌ ഉപയോഗിക്കുന്നു.

തുടക്കത്തില്‍, (പാഠരംഭ വില നല്‍കല്‍ നടക്കുന്നു,

തുടര്‍ന്ന്‌ പരിശോധനാ പ്രയോഗം വിലയിരുത്തുന്നു. ഇതിന്റെ ഫലം ശരിയാണെങ്കില്‍ ലൂപ്പ്‌ ചട്ട
ENS പ്രവര്‍ത്തിക്കുന്നു. അല്ലെങ്കില്‍ പ്രോ്രഗാം നിയ്രന്തണം ലൂപ്പിനു പുറത്തേക്കു പോകുന്നു. ലൂപ്പ്‌
ചട്ടക്കൂടിന്റെ (പവര്‍ത്തനത്തിനുശേഷം പരിഷ്കരിക്കല്‍ പ്രയോഗം പ്രവര്‍ത്തിക്കുകയും പരിശോ
ധനാ പ്രയോഗം വീണ്ടും വിലയിരുത്തുകയും ചെയ്യുന്നു. പരിശോധനാ പ്രയോഗം തെറ്റാവുന്നതു
വരെ ഈ മുന്നു ഘട്ടങ്ങളും (പരിശോധന, ചട്ടക്കൂട്‌, പരിഷ്കരിക്കല്‍ ) തുടര്‍ന്നു കൊണ്ടേയിരി
ക്കും.
| eon 7. MOLOHM പ്രസ്താവനകള്‍

പ്രോരഗാം 7.11 ല്‍ ഉപയോഗിച്ചിരിക്കുന്ന ലൂപ്പ്‌ ശകലത്തെ for ലൂപ്പ്‌ ഉപയോഗിച്ച്‌ താഴെ കാണും
വിധം മാറ്റി എഴുതാം.
for (n=1; n<=10; ++n)
cout << n << " നു

while ലൂപ്പിലേതുപോലെ തന്നെ ഈ കോഡ്‌ പ്രവര്‍ത്തിക്കുന്നു.

തൊട്ട്‌ മുമ്‌ Mzoiche) for echo പ്രവരീത്തന്(ക്ഥത്തിമെ മന്തും രങ്ങും ഫട്രങ്ങശ്‌ താഴെ
കൊഴുത്തിരിക്കുന്തു. ബാക്കി ഫട്ടങ്ങശി എഴുതുക.

e507: n= 1, നിബന്ഥന മദിയാണ്‌; BON" പ്രദര്ശിഷിക്കുന്നു 77 മറെ വില 2 ആകുന്നു.

നമുക്ക്‌ ചെയ്യാം

2150 2: നിബമ്ഥനശരിമാണ്‌, 2 പ്രദരീശിഷിക്കുന്നു, n og വില 2 ആകുന്നു.

Lor ലൂപ്പ്‌ ഉപയോഗിച്ച്‌ ഒരു സംഖ്യയുടെ ഫാക്റ്റോറിയല്‍ കണ്ടുപിടിക്കാനുള്ള പ്രോ്രഗാം നമുക്കു
എഴുതാം. 14 എന്ന സംഖ്യയുടെ ഫാക്റ്റോറിയല്‍ എന്നത്‌ 11! എന്ന്‌ സൂചിപ്പിക്കുന്നു. ഇത്‌ ആദ്യത്തെ
14 എണ്ണല്‍ സംഖ്യകളുടെ ഗുണനഫലമാണ്‌. ഉദാഹരണത്തിന്‌ 5 ന്റെ ഫാക്റ്റോറിയല്‍ (51)കണ
ക്കാക്കുന്നത്‌ 1 x 2 x 3 x 4 x5= 120 എന്നാണ്‌.

ടോറിയല്‍ കണ്ടുപിടിക്കുന്നതിന്‌.

#include <iostream>

using namespace std;

int main()

{ ചര്യ im, 514
long fact=1;
cout<<"Enter the number:

പ്രാരംഭ വില നല്‍കല്‍,
പരിശോധനാ പ്രയോരം,
പുതുക്കല്‍ പ്രസ്താവന

രു z
hom (i— i em, 602.) പ

fact — fact * i;
Cote << YHaCcomial or Y << m << VY ig Y << ewes
return 0;

}

പ്രോഠ്രഗാം 7.13 ന്റെ ഒരു മാതൃക ഓട്ട്പുട്ട്‌ താഴെ കൊടുത്തിരിക്കുന്നു.
Enter the number: 6

Factorial of 6 is 720
കമ്പ്യൂട്ടര്‍ ആപ്ലിക്കേഷന്‍സ്‌ എന്ന വിഷയത്തിലെ സ്‌കോറുകളുടെ ശരാശരി കാണുന്നതിനുള്ള
മറ്റൊരു പ്രോ്രഗാമാണ്‌ താഴെ കൊടുത്തിരിക്കുന്നത്‌ പ്രോ്രഗാം 7.14-ല്‍ 0 നു(കുട്ടികളുടെ എണ്ണം)
വില സ്വീകരിക്കുകയും പിന്നീട്‌ ഓരോ വിദ്യാര്‍ഥികളേയും സ്‌കോര്‍ ഇന്‍പുട്ടായി സ്വീകരിച്ച്‌ ശരാ
ശരി സ്‌കോര്‍ പ്രിന്റ്‌ ചെയ്യുന്നു.
ലി

#include<iostream>
using namespace std;
int main()
{
int i, sum, score, n;
float avg;
cout << "How many students?

രണ്ട്‌ ഭവരിയ
ബിളുകര്‍ക്ക്‌ പ്രാരംഭ വില
നല്‍കുന്നു

cin >> ൩
for( i=1, sum=0; i<=n; ++i)
{
cout << "Enter the score of student " << i << ": ";
cin >> score;

എക്സ്‌പ്ലിസിറ്റ്‌ ടൈദ്‌
കണ്‍വേര്‍ഷന്‍

sum = sum + score;

}
avg = (float)sum / n;
cout << "Class Average: " << avg;
return 0;

}
പ്രോഗ്രാം 7.14 ന്റെ ഒരു മാതൃക ഓട്ട്പുട്ട്‌ താഴെ കൊടുത്തിരിക്കുന്നു.

How many students? 5

Enter the score of student 1: 45
Enter the score of student 2: 50
Enter the score of student 3: 52
Enter the score of student 4: 34
Enter the score of student 5: 55

Class Average: 47.2

പ്രേഠ്രഗാം 7.14-G പ്രാരംഭ വില നല്‍കുന്ന പ്രസ്താവനയില്‍ ഒരു കോമ ഉപയോഗിച്ച്‌ വേര്‍തിരിച്ച
രണ്ട്‌ പ്രയോഗങ്ങള്‍ (1-1, ൩-0) അടങ്ങിയിരിക്കുന്നു. 1, SUM എന്നീ വേരിയബിളുകള്‍ക്ക്‌
അവയുടെ ആദ്യ വിലയായ 0, 1 യഥാക്രമം കിട്ടുന്നു. 1<=N എന്ന പരിശോധന പ്രയോഗം വില
യിരുത്തുകയും അത്‌ ശരിയായതിനാല്‍ ലൂപ്പിന്റെ ചട്ടക്കൂട്‌ പ്രവര്‍ത്തിക്കുകയും ചെയ്യുന്നു. ലൂപ്പിന്റെ
ചട്ടക്കൂട്‌ പ്രവര്‍ത്തിച്ചതിനുശേഷം പരിഷ്കരിക്കല്‍ പ്രസ്താവനയായ ++i പ്രവര്‍ത്തിക്കുന്നു.
വീണ്ടും 1:5൩ എന്ന പരിശോധന പ്രയോഗം വിലയിരുത്തുകയും നിബന്ധന ശരിയായതിനാല്‍
ലൂപ്പിന്റെ ചട്ടക്കൂട്‌ പ്രവര്‍ത്തിക്കുകയും ചെയ്യുന്നു. പരിശോധന പ്രയോഗം തെറ്റായ വില തിരിച്ചു
തരുന്നതുവരെ ഈ പ്രകിയ തുടരുന്നു. മാതൃക ഓട്ട്പുട്ടില്‍ ഇത്‌ സംഭവിക്കുന്നത്‌ 2-യുടെ വില 6
ആകുമ്പോഴാണ്‌.
| eon 7. MOLOHM പ്രസ്താവനകള്‍

OMELOZM MoNAfOZOS OFM MAGN പ്രദര്രിഷിക്കുവാരുള്ള ഒരു (01900 എഴുതുക. Wolf
ഇഫ്‌ OIQIMO 2 എന 6AICIUMNIBIEIOIMM കരുതുക. ചുഷിമ്റി ചടക്കുട്‌ താഴെ
കൊഴുത്തിരിക്കുന്നു.

cout<<i<<" x “ <<n<<“ = “<< i * സ്സ

BS o1)§ 295) കാണിക്കുക.

Lor ലൂപ്പ്‌ ഉപയോഗിക്കുമ്പോള്‍ ചില കാര്യങ്ങള്‍ ശ്രദ്ധിക്കേണ്ടതുണ്ട്‌. തന്നിരിക്കുന്ന നാലു കോഡ്‌
ശകലങ്ങള്‍ ഈ പ്രത്യേക സാഹചര്യത്തില്‍ വിശദീകരിക്കുന്നു. കോഡില്‍ ഉപയോഗിച്ചിട്ടുള്ള എല്ലാ
വേരിയബിളുകളും Int ഡാറ്റ ഇനത്തിലുള്ളതാണ്‌ എന്ന്‌ കരുതുക.

കോഡ്‌ ശകചം 1: for (൩-1; n<5; nt+);
cout<<n;

FOL പ്രസ്താവനയുടെ (്രായ്ക്കറ്റ്‌ കഴിഞ്ഞ്‌ ഒരു അര്‍ധവിരാമം കാണപ്പെടുന്നു. ഇത്‌ വാകൃഘടന
യിലെ തെറ്റ്‌ (syntax error) അല്ല. ഇതിന്റെ ഓട്ട്പുട്ട്‌ നിങ്ങള്‍ക്ക്‌ പ്രവചിക്കാന്‍ കഴിയുമോ? 5 ആണെ
ങ്കില്‍ നിങ്ങള്‍ പറഞ്ഞത്‌ ശരിയാണ്‌. ഈ ലൂപ്പിന്‌ ചട്ടക്കൂട്‌ ഇല്ല. പക്ഷേ ഇതിന്റെ പ്രവര്‍ത്തനം
സാധാരണപോലെ പൂര്‍ത്തീകരിക്കുന്നു. പ്രാരംഭവില നല്‍കുന്ന പ്രസ്താവന൩ ന്‌ 1 എന്ന വില
നല്‍കുകയും നിബന്ധന വിലയിരുത്തുമ്പോള്‍ ശരിയാവുകയും ചെയ്യുന്നു. അവിടെ ലൂപ്പ്‌ ചട്ടക്കൂട്‌
ഇല്ലാത്തതിനാല്‍ പരിഷ്‌കരിക്കല്‍ പ്രസ്താവന പ്രവര്‍ത്തിക്കുകയും൩ ന്റെ വില 5 ആകുന്നതുവരെ
ഈ പ്രവര്‍ത്തനം തുടരുകയും ചെയ്യുന്നു. ഈ സന്ദര്‍ഭത്തില്‍ നിബന്ധന വിലയിരുത്തി തെറ്റാവു
കയും പ്രോഗ്രാമിന്റെ നിയ്രന്തണം ലൂപ്പില്‍ നിന്നും പുറത്തു വരികയും ചെയ്യുന്നു. ഓട്ട്പുട്ട്‌ പ്രസ്താ
വന പ്രവര്‍ത്തിക്കുമ്പോള്‍ സ്ക്രീനില്‍ 5 എന്ന്‌ പ്രദര്‍ശിപ്പിക്കുന്നു.

കോഡ്‌ ശകചം 2: for (n=1; n<5; )

cout<<n;
ഈ കോഡില്‍ പരിഷ്കരിക്കല്‍ പ്രസ്താവന (update expression) ഇല്ല. ഇത്‌ കോഡിന്റെ വാകൃ
ഘടനയില്‍ തെറ്റ്‌ ഉണ്ടാക്കുന്നില്ല. പക്ഷെ ലൂപ്പ്‌ പ്രവര്‍ത്തിക്കുമ്പോള്‍ ഒരിക്കലും അവസാനിക്കുന്നി
ല്ല. 1 എന്ന സംഖ്യ അനന്തമായി പ്രദര്‍ശിപ്പിക്കുന്നു. ഇതിനെ നമുക്ക്‌ അനന്തമായ ലൂപ്പ്‌ (Infinite
loop) എന്നു വിളിക്കാം.
കോഡ്‌ ശകലം 3: for ( ; n<5; ൩4)

cout<<n;
ഈ കോഡിന്റെ ഓട്ട്പുട്ട്‌ പ്രവചിക്കുവാന്‍ സാധ്യമല്ല, കാരണം നിയ്രന്തണവേരിയബിളിന്‌ (Control
Variable) പ്രാരംഭ വില നല്‍കിയിട്ടില്ല. അതിനാല്‍ നിയ്യന്രണ വേരിയബിള്‍ n- a5 ചില പൂര്‍ണസംഖ്യ
കള്‍ കിട്ടുന്നു. ചിലപ്പോള്‍ അത്‌ ട-നെക്കാള്‍ കുറവാണെങ്കില്‍ നിബന്ധന (condition) തെറ്റാവുന്ന
തുവരെ ചട്ടക്കൂട്‌ പ്രവര്‍ത്തിക്കും. ൩ ന്റെ തനത്‌ വില 5-80 അതില്‍ കൂടുതലോ ആണെങ്കില്‍
ലൂപ്പിന്റെ ചട്ടക്കൂട്‌ പ്രവര്‍ത്തിക്കാതെ തന്നെ ലൂപ്പ്‌ അവസാനിക്കുന്നു.
(രി

കോഡ്‌ ശകലം 4: for (൩-1 ; ൩൪)

cout<<n;
മുകളില്‍ കൊടുത്തിരിക്കുന്ന കോഡില്‍ പരിശോധന പ്രയോഗം (test expression) നല്‍കിയിട്ടില്ല.
ഇത്തരം ഘട്ടത്തില്‍ പരിശോധനാ പ്രയോഗത്തിന്റെ ഫലം ശരിയായി എടുക്കുകയും ലൂപ്പ്‌ അന
AMAIA മാറുകയും ചെയ്യുന്നു.
മുകളില്‍ കൊടുത്തിരിക്കുന്ന നാലു കോഡ്‌ ശകലങ്ങളും സൂചിപ്പിക്കുന്നത്‌ for ലൂപ്പിലെ എല്ലാ
ഘടകങ്ങളും നിര്‍ബന്ധമില്ല എന്നാണ്‌. എന്നാല്‍ while, do. ..while പ്രസ്താവനകളുടെ
കാര്യം ഇങ്ങനെയല്ല. ഈ രണ്ടു ലൂപ്പുകള്‍ക്കും പരിശോധന പ്രയോഗങ്ങള്‍ നിര്‍ബന്ധമാണ്‌. എന്നാല്‍
മറ്റു ഘടകങ്ങള്‍ നിര്‍ബന്ധമില്ല. എന്നാല്‍ ജട്ട്പുട്ട്‌ സംബന്ധിച്ച്‌ LOG പുലര്‍ത്തണം.
മറ്റൊരു വസ്തുത ശ്രദ്ധിക്കേണ്ടത്‌ പരിശോധന പ്രയോഗത്തിനു പകരമായി നമുക്കു ഒരു സംഖ്യ
നല്‍കുവാന്‍ സാധിക്കുമെന്നതാണ്‌. ഈ സംഘ്യ പൂജ്യമാണെങ്കില്‍ പരിശോധന പ്രയോഗം തെറ്റാ
യായും അല്ലെങ്കില്‍ ശരിയായും ലൂപ്പ്‌ പരിഗണിക്കും.

നമുക്ക്‌ പരിശോധിക്കാം

7 നും 49 നും ഇടയ്ക്കും എല്ലാ ഇരട്ടമ്പാഖ്യകളുടെയും തുകയും
ശരാശരിയും കണ്ടുഫിടിക്കാനുക്ള പ്രോഗ്രാം എഴുതുക.

3 കൊണ്ടും 5 കൊണ്ടും ഹതിക്കാവുദ്ന 10 നും 20 നും ഇടയ്ക്കുള്ള
സംഖ്യകള്‍ ഫ്രദരശിച്ചിക്കുവാനുള്ളു പ്രോഗ്രാം എഴുതുക.

DIOP കൊടുത്തിരിക്കുന്ന കോഡിന്റെ BOGAYS (്രവചിക്കുക.

for (i=1; i<=10; ++1);
cout<<it2;

7.2.3 do...while പ്രസ്താവന (do...while statement)

for ലൂപ്പിന്റെയും , while ലൂപ്പിന്റെയും കാര്യത്തില്‍ ലൂപ്പ്‌ ചട്ടക്കൂട്‌ പ്രവര്‍ത്തിക്കുന്നതിന്‌ മുമ്പ്‌
പരിശോധന പപയോഗം വിലയിരുത്തുന്നു. ആദ്യ തവണ തന്നെ പരിശോധന പ്രയോഗം തെറ്റാ
ണെങ്കില്‍ ലൂപ്പ്‌ പ്രവര്‍ത്തിക്കില്ല. എന്നാല്‍ ചില സാഹചര്യങ്ങളില്‍ പരിശോധന പ്രയോഗത്തിന്റെ
ഫലം പരിഗണിക്കാതെ തന്നെ ലൂപ്പിന്റെ ചട്ടക്കൂട്‌ ഒരു പ്രാവശ്യമെങ്കിലും പ്രവര്‍ത്തിപ്പിക്കേണ്ടത്‌
ആവശ്യമായി വരും. അത്തരം സാഹചര്യത്തില്‍ do. . . while ലൂപ്പ്‌ ഉപയോഗിക്കുന്നതാണ്‌
നല്ലത്‌. do...while ലൂപ്പിന്റെ വാകൃഘടന (syntax) ഇതാണ്‌.

നിയ്രന്തണവേരിയബിളിന്റെ പ്രാരംഭ വില നല്‍കല്‍;

do

{

ലൂപ്പിന്റെ ചട്ടക്കൂട്‌,

ലൂപ്പ്‌ നിയ്രന്തണവേരിയബിളിന്റെ വില പുതുക്കല്‍;

} while (പരിശോധന പ്രയോഗം) ?
| eon 7. MOLOHM പ്രസ്താവനകള്‍

initialisation of loop control variable;

do Initialisation of Loop
{ Control Variable

body of the loop;

അത്ത്‌
updation of loop control variable; [ Bodyatthe Loop |
. . Body of the Loop
} while(test expression);

ചിത്രം 7.5-G8 ഈ ലൂപ്പിന്റെ പ്രവര്‍ത്തന (്രമം കാണിച്ചിരിക്കുന്നു.
ഇവിടെ ലൂപ്പ്‌ ചട്ടക്കൂട്‌ ര്രവര്‍ത്തിച്ചതിനുശേഷം മാര്തമാണ്‌ പരി | Update of Loop Control
ശോധന പ്രസ്താവന വിലയിരുത്തുന്നത്‌. അതിനാല്‍ do... while Variable

ലൂപ്പ്‌ ഒരു ബഹിര്‍ഗമന നിയ്രന്തണ ലൂപ്പ്‌ (Exit controlled

Loop) ആകുന്നു. പരിശോധന പ്രയോഗം തെറ്റാണെങ്കില്‍ ലൂപ്പിന്റെ True
പ്രവര്‍ത്തനം അവസാനിക്കുന്നു. ഇത്‌ അര്‍ഥമാക്കുന്നത്‌ പരിശോ
ധന പ്രയോഗത്തിന്റെ ഫലം പരിഗണിക്കാതെ തന്നെ ലൂപ്പിന്റെ ചട്ട

False

ക്കൂട്‌ ഒരു പ്രാവശ്യം പ്രവര്‍ത്തിക്കുന്നു എന്നാണ്‌.

. Statement outside the

do...while ലൂപ്പിന്റെ പ്രവര്‍ത്തനം വിശദീകരിക്കുന്നതിനായി Loop

താഴെ കൊടുത്തിരിക്കുന്ന പ്രോഗ്രാം ശകലം നമുക്ക്‌ പരിശോധിക്കാം.

wv

ചിത്രം 7.5. Execution of
do..while Joop

; ലൂക്‌ തുടങ്ങുന്നതിനുമുമ്പ്‌

int 1൦1 പാരം8 വില നല്‍കുന്നു

do

{ ലൂരീന്റെ ചട്ടക്കൂട്‌
cout << k << "\tl;
++k;

ലൂകിന്റെ ചട്ടക്കൂടിനകത്ത്‌
വില പുതുക്കുന്നു

} while (ടട);

cout << "\n Program Ends

പരിശോധനാ പ്രയോഴം

ആദ്യം വേരിയബിള്‍ 16യുടെ വിലയായി 1 നല്‍കുന്നു. അതിനുശേഷം ലൂപ്പ്‌ ചട്ടക്കൂട പ്രവര്‍ത്തിക്കു
കയും 1 യുടെ വിലയായ 1 എന്ന്‌ പ്രദര്‍ശിപ്പിക്കുകയും ചെയ്യുന്നു. തുടര്‍ന്ന്‌ &-യുടെ വില 1 വര്‍ദ്ധി
പ്പിക്കുന്നു (ഇപ്പോള്‍ 1൦2). അതിനുശേഷം 1:53 എന്ന വ്യവസ്ഥ പരിശോധിക്കുന്നു. ആ വ്യവസ്ഥ
ശരിയായതിനാല്‍ ലൂപ്പിന്റെ ചട്ടക്കൂട്‌ (പ്രവര്‍ത്തിച്ച്‌ 1-യുടെ വില 2 എന്ന്‌ സ്ക്രീനില്‍ പ്രദര്‍ശിപ്പിക്കു
AM}. പുതുക്കല്‍ (OLLI വീണ്ടും നടത്തി %-യുടെ വില 3 ആക്കുകയും 1:53 എന്ന നിബന്ധന
വീണ്ടും പരിശോധിക്കുകയും ചെയ്യുന്നു. നിബന്ധന ശരിയായതിനാല്‍ ലൂപ്പിന്റെ ചട്ടക്കൂട പ്രവര്‍ത്തി
പ്പിച്ച്‌ 1-യുടെ വിലയായ 3 പ്രദര്‍ശിപ്പിക്കുന്നു. 1-യുടെ വില വീണ്ടും പരിഷ്കരിച്ച്‌ 4 ആകുന്നു. ഇത്‌
പ്രോഗ്രാമിന്റെ നിയ്രന്തണം ലൂപ്പിന്‌ പുറത്ത്‌ വരുന്നതിനും തുടര്‍ന്നുളള പ്രസ്താവന പ്രവര്‍ത്തിക്കു
ന്നതിനും കാരണമാകുന്നു. ആയതിനാല്‍ കോഡിന്റെ ഓട്ടപുട്ട്‌ ഇങ്ങനെയായിരിക്കും.

1 2 3
ലി

ഈ ലൂപ്പ്‌ മറ്റു രണ്ടു ലൂപ്പില്‍ നിന്നും എങ്ങനെ വൃത്യാസപ്പെട്ടിരിക്കുന്നു എന്ന്‌ ഇപ്പോള്‍ നമുക്കു
നോക്കാം. 1യുടെ പ്രാരംഭവില 5 ആണെന്ന്‌ സങ്കല്‍പിക്കുക. എന്ത്‌ സംഭവിക്കും? ലൂപ്പിന്റെ ചട്ട
ക്കൂട്‌ പ്രവര്‍ത്തിച്ച്‌ 1-യുടെ വിലയായ 5 സ്ക്രീനില്‍ പ്രദര്‍ശിപ്പിക്കുന്നു. അതിനുശേഷം 1൦യുടെ
വില ഒന്ന്‌ വര്‍ദ്ധിപ്പിച്ച്‌ 6 ആയി തീരുന്നു. 1:53 എന്ന നിബന്ധന പരിശോധിച്ചപ്പോള്‍ പരിശോധന
പ്രയോഗം തെറ്റാവുകയും നിയ്രന്തണം ലൂപ്പിന്‌ പുറത്തേയ്ക്കു വരുകയും ചെയ്യുന്നു. do. . .while
ലൂപ്പിന്റെ ചട്ടക്കൂടിലേക്ക്‌ ആദ്ൃത്തെ പ്രാവശ്യം പ്രവേശിക്കുന്നതിന്‌ യാതൊരു നിയ്രന്തണവും ഇല്ലെ
ന്നാണ്‌ ഇത്‌ കാണിക്കുന്നത്‌. അതുകൊണ്ടു നിബന്ധനയുടെ ശരി (True) വില മാര്രം അനുസരി
ച്ചാണ്‌ ലൂപ്പ്‌ ചട്ടക്കൂട്‌ (്രവര്‍ത്തിക്കേണ്ടതെങ്കില്‍ while ലൂപ്പോ, for ലൂപ്പോ ഉപയോഗിക്കുക.

ഉപയോക്താവിന്റെ ആവശ്ൃത്തിനനുസരിച്ച്‌ പ്രവര്‍ത്തിക്കുന്ന ഒരു പ്രോഗ്രാം നമുക്കു നോക്കാം.
ഇത്തരം പ്രോഠ്രഗാമുകള്‍ ഉപയോക്താവിന്റെ പ്രതികരണം സ്വീകരിച്ചുകൊണ്ട്‌ കോഡ്‌ ശകലം
ആവര്‍ത്തിച്ചു പ്രവര്‍ത്തിപ്പിക്കുന്നു.

ഉപഭോക്താവില്‍ നിന്നും ഓരോ ചതുരത്തിന്റേയും നീളവും വീതിയും ഇന്‍പുട്ടായി സ്വീകരിച്ച്‌ ചതു
രങ്ങളുടെ വിസ്തീര്‍ണം കണ്ട്പിടിക്കുന്നതിനുള്ള ഒരു പ്രോഗ്രാം do. . .while ലൂപ്പ്‌ ഉപയോഗിച്ച്‌
എഴുതിയിരിക്കുന്നു. (പ്രോഗ്രാം 7.15)

#include <iostream>
using namespace std;
int main()
{
float length, breadth, area;
char ch;
do
{
cout << "Enter length and breadth: ";
cin >> length >> breadth;
area = length * breadth;
cout << "Area = " << area;
cout << "Any more rectangle (Y/N)? ന
cin >> ch;
} while (ch == 'y' || ch == 'y');
return 0;

}

പ്രോഗാം 7.15 ന്റെ ഒരു മാതൃക ഓട്ട്പൂട്ട്‌ താഴെ കൊടുക്കുന്നു. പ യോക്താവ്‌
Enter length and breadth: 3.5 7. ാ(ഇന്‍പൂട്ട്‌ നല്‍കുന്നു
Area = 24.5

Any more rectangle (Y/N)? Y
Enter length and breadth: 6 4.5
Area = 27

| eon

Any more rectangle (Y/N)? N

7. നിയ്ര്രണ പ്രസ്താവനകള്‍

ഉപയോക്താവ്‌
ഉന്‍പൂട്ട്‌ നല്‍കുന്നു

C++ ലെ മുന്ന്‌ ലൂപ്പിങ്ങ്‌ പ്രസ്താവനകളെക്കുറിച്ചും നാം ചര്‍ച്ച ചെയ്തു. പട്ടിക 7.2 ല്‍ ഈ
പ്രസ്താവനകള്‍ താരതമ്യം ചെയ്തിരിക്കുന്നു.

ആമെന നിയന്ത്രണ ലൂക്‌ (Entry
controlled loop)

ലൂകിന്റെ നിര്‍വചനത്തോടൊഷം

തന്നെ പ്രാരംഭ വിലയും നല്‍കുന്നു.

ലൂഭിന്റെ ചട്ടക്കൂട്‌ ഒരു പ്രാവ്യ
മെങ്കിലും പ്രവര്‍ത്തിക്കുമെന്ന്‌
ഉറരില്ല

ആമെന നിയന്ത്രണ ലൂക്‌ (Entry
controlled loop)

ലൂഷ്‌ നിര്‍വചനത്തിനു മുമ്പ്‌
പ്രാരംഭവില നല്‍കുന്നു.
ലൂഭിന്റെ ചട്ടക്കൂട്‌ രു പ്രാവര്യമെ
ങ്കിലും പ്രവര്‍ത്തിക്കുമെന്ന്‌
ഉറരില്ല.

ബഹിര്‍ഗമന നിയന്ത്രണ ലൂഷ്‌
(Extit controlled loop)

ലൂക്‌ നിര്‍വചനത്തിനു മുമ്പ്‌
പ്രാരംഭവില നല്‍കുന്നു.
നിബന്ധന തെറ്റാണെങ്കിലും
ലൂരിന്റെ ചട്ടക്കൂട്‌ ഒരു പ്രാവശ്യം
പ്രവര്‍ത്തിക്കും.

പട്ടിക 7.2: C++ ചു്‌ പ്രശ്്താവനകളുടെ താദമേമ്യം
7.2.4 ലൂഷുകളുടെ നെസ്സിങ്ങ്‌ (Nesting of loops)

ഒരു ലൂപ്പിനകത്ത്‌ മറ്റൊരു ലൂപ്പ്‌ ഉള്‍പ്പെടുത്തുന്നതിനെ ലൂപ്പുകളുടെ നെസ്സ്ിങ്ങ്‌ എന്നു പറയുന്നു.
രണ്ട്‌ ലൂപ്പുകള്‍ നാം നെസ്റ്റ്‌ ചെയ്യുമ്പോള്‍ പുറത്തുള്ള ലൂപ്പ്‌ (Outer loop) അകത്തുള്ള ലൂപ്പ്‌ എത്ര
തവണ പ്രവര്‍ത്തിച്ചു എന്ന്‌ തിട്ടപ്പെടുത്തുന്നു. ഇവിടെ രണ്ടു ലൂപ്പുകളുടെയും ലൂപ്പ്‌ നിയ്രന്തണ
വേരിയബിളുകള്‍ (Loop control variable) വ്യത്യസ്തമായിരിക്കണം.

നെസ്റ്റഡ്‌ ലൂപ്പ്‌ എങ്ങനെ പ്രവര്‍ത്തിക്കുന്നു എന്ന്‌ നമുക്കു നോക്കാം. ഒരു ക്ലോക്കിലെ മിനുട്ട്‌ സൂചി
യുടെയും, സെക്കന്റ്‌ സൂചിയുടെയും കാര്യം എടുക്കുക. നിങ്ങള്‍ ക്ലോക്കിന്റെ പ്രവര്‍ത്തനം ശ്രദ്ധിച്ചി
ട്ടുണ്ടോ? മിനുട്ട്‌ സൂചി ഏതെങ്കിലും ഒരു സ്ഥാനത്ത്‌ നില്‍ക്കുമ്പോള്‍ സെക്കന്റ്‌ സൂചി ഒരു ഭ്രമണം
പൂര്‍ത്തിയാക്കുന്നു (1 മുതല്‍ 60 വരെ). സെക്കന്റ്‌ സൂചി ഒരു LACM പൂര്‍ത്തിയാക്കിയതിനു
ശേഷം മിനുട്ട്‌ സൂചി അടുത്ത സ്ഥാനത്തേക്ക്‌ മാറുന്നു. മിനുട്ട്‌ സൂചിയുടെ ഓരോ സ്ഥാനത്തിനും
അനുസൃതമായി സെക്കന്റ്‌ സൂചി കറക്കം പൂര്‍ത്തിയാക്കുന്നു. ഈ പ്രകിയ തുടര്‍ന്നു കൊണ്ടേയി
രിക്കുന്നു. ഇവിടെ സെക്കന്റ്‌ സൂചിയുടെ ചലനം ഉള്ളിലെ ലൂപ്പിന്റെ ്രവര്‍ത്തനമായും മിനുട്ട സൂചി
യുടെ ചലനം ബാഹ്യലൂപ്പിന്റെ (പവര്‍ത്തനമായും കരുതാവുന്നതാണ്‌. C++ ലെ എല്ലാ ലൂപ്പു
കളും നെസ്റ്റിങ്ങ്‌ അനുവദിക്കുന്നു. താഴെ കൊടുത്തിരിക്കുന്ന ഉദാഹരണം For ലൂപ്പിന്റെ നെസ്റ്റിങ്ങ്‌
പ്രവര്‍ത്തനം കാണിച്ചുതരുന്നു.

for( i=l; i<=2; ++i)

{
for (j=l; 353 ++3)
{

cout<< "\n" << i << " and " << 4;
eon

ബാഹ്യലൂപ്പിലെ വേരിയബിളായ 1 2H പ്രാരംഭ വിലയായി 1 നല്‍കുന്നു. അതിന്റെ പരിശോധന
പ്രയോഗം വിലയിരുത്തി ശരിയായതിനാല്‍ ലൂപ്പിന്റെ ചട്ടക്കൂട്‌ പ്രവര്‍ത്തിക്കുന്നു. ചട്ടക്കൂടില്‍ അട
ങ്ങിയിരിക്കുന്നത്‌ നിയ്രന്തണ വേരിയബിള്‍ J യോടുകൂടിയ ആന്തരിക ലൂപ്പാണ്‌. J ക്ക്‌ പ്രാരംഭ
വിലയായ 1 നല്‍കി അതിന്റെ പ്രവര്‍ത്തനം ആരംഭിക്കുന്നു. J =1, 2-2, 3-3 ആയി ആന്തരിക
ലൂപ്പ്‌ ദ തവണ പ്രവര്‍ത്തിക്കുന്നു. ഓരോ തവണയും J<=3 എന്ന പരിശോധന പ്രയോഗം വിലയി
രുത്തുകയും ശരിയായതിനാല്‍ ഈട്ട്പൂട്ട്‌ പ്രദര്‍ശിപ്പിക്കുകയും ചെയ്യുന്നു.

Tand 1 7 GRAD 1,1 യുടെ വിലയും രങ്ങാ
1 and 2 മത്തെ 1, j യുടെ വിലയുമാണ്‌.
1 and 3

പരിശോധന പ്രയോഗം J<=3 തെറ്റാവുമ്പോള്‍ പഫ്രോഠ്രഗാമിന്റെ നിയ്യന്തണം ആന്തരിക ലൂപ്പില്‍
നിന്നും പുറത്തു കടക്കുന്നു. ഇപ്പോള്‍ ബാഹ്യ ലൂപ്പിന്റെ പുതുക്കല്‍ പ്രസ്താവന പ്രവര്‍ത്തിച്ച്‌
1-2 ആക്കുന്നു. പരിശോധന പ്രയോഗമായ 1<=2 പരിശോധിച്ച്‌ ശരിയായതിനാല്‍ ലൂപ്പിന്റെ ചട്ട
ക്കൂട്‌ ഒന്നുകൂടി പ്രവര്‍ത്തിക്കുന്നു. J “1, 3-2, 3-3 ആയി ആന്തരിക ലൂപ്പ്‌ വീണ്ടും മുന്നു തവണ
പ്രവര്‍ത്തിച്ച്‌ ഓട്ട്‌ പുട്ട്‌ ,്രദര്‍ശിപ്പിക്കുന്നു.

2 and 1
2 and 2
2 and 3

ആന്തരിക ലൂപ്പിന്റെ പ്രവര്‍ത്തനം പൂര്‍ത്തിയാക്കിയതിനുശേഷം നിയ്രന്തണം പുറത്തെ ലൂപ്പിന്റെ
വില പുതുക്കല്‍ പ്രയോഗത്തില്‍ തിരിച്ചെത്തുന്നു. 1 യുടെ വില 1 വെച്ച്‌ വര്‍ദ്ധിപ്പിക്കുന്നു. (ഇപ്പോള്‍
2-3) പരിശോധന പ്രയോഗം 1<=2 വിലയിരുത്തുമ്പോള്‍ തെറ്റാവുന്നു. ആയതിനാല്‍ ലൂപ്പ്‌ അതിന്റെ
പ്രവര്‍ത്തനം അവസാനിപ്പിക്കുന്നു. പട്ടിക 7.3 മുകളില്‍ കൊടുത്ത പ്രോഗ്രാം ശകലത്തിന്റെ

പ്രവര്‍ത്തനം വിവരിക്കുന്നു.

പട്ടിക 7.3: മെമ്ലുദ്‌ചുഷിമ്റെ പ്രവരിത്തനം

നെസ്റ്റഡ്‌ ലൂപ്പുകളില്‍ പ്രവര്‍ത്തിക്കുന്ന സമയത്ത്‌ ബാഹ്യലൂപ്പിലെ നിയ്രന്തണ വേരിയബിളുക
ളില്‍ അവയുടെ വിലയില്‍ മാറ്റം വരുന്നത്‌ ആന്തരികലൂപ്പ്‌ പൂര്‍ത്തികരിച്ചതിനുശേഷം മാഠര്തമാണ്‌.

| eon 7. MOLOHM പ്രസ്താവനകള്‍

ഇനി താഴെ കൊടുത്തിരിക്കുന്ന രീതിയിലുള്ള ര്രികോണം പ്രദര്‍ശിപ്പിക്കാനുള്ള ഒരു പ്രോഠ്രഗാം
നമുക്കു എഴുതാം.

തിന്‌.

#include<iostream>
using namespace std;
int main()

{ int i, Jj;
char ch = '*';
for (i=l; i<=5; ++i) ബാഹ്യ ലൂപ്പ്‌

{
cout<< "\n" ;
for (j=l; ടോ; ൧) // ആന്തരിക ലൂപ്പ്‌
cout<<ch;
}

return 0;

2 . താഴെ കൊടുത്തിരിക്കുന്ന B[019[MI0 ശകലത്തിന്റെ ഒട്ട്പുട്ട്‌ പ്രവചിക്കുക.
sum = O;
for( i=l; i<3; ++i)

{
for (j=1; j<37 +43)
{

sum = sum + i * j;
}

cout<<sum ;

2. താഴെ കൊടുത്തിരിക്കുന്ന ത്രികോണങ്ങള്‍ പ്രദര്‍ശിഷിക്കുന്നതിനുള്ള ദ്പ്രാഗ്രാം എഴുതുക.

1 1

പിടി

7.2.5 നിയന്ത്രണ പ്രസ്താവനകളുടെ angled (Nesting of Control Statements)

നാം ലൂപ്പുകളുടെയും പ്രസ്താവനകളുടെയും നെസ്റ്റിങ്ങിനെകുറിച്ച്‌ ചര്‍ച്ച ചെയ്തു. നിയ്രന്തണ
പ്രസ്താവന മറ്റൊരു നിയ്രന്തണ പ്രസ്താവന ഉപയോഗിച്ച്‌ നെസ്റ്റ്‌ ചെയ്യാം. ഒരു ലൂപ്പില്‍ തിര
ഞ്ഞെടുക്കല്‍ പ്രസ്താവനകളായ if, switch എന്നിവ അടങ്ങിയിരിക്കാം. അതുപോലെ തിര
ഞ്ഞെടുക്കല്‍ പ്രസ്താവനകളില്‍ ലൂപ്പു പ്രസ്താവനകളായ while, for, do...while
എന്നിവയും അടങ്ങിയിരിക്കാം. ്്രോരഗാം 7.17 ല്‍ ലൂപ്പും അതിന്റെ ചട്ടക്കൂടും ഒരു switch പ്രസ്താ
വനയും ഉള്‍പ്പെട്ടിരിക്കുന്നു. ഇത്‌ സാധാരണയായിട്ടുള്ള ഒരു മെനു നിയ്രന്തിത ശൈലിയുള്ള ea
മാണ്‌.

താല്പര്യത്തിന്‌ അടിസ്ഥാനമായി ഗണിത ക്രിയ

#include<iostream>
using namespace std;
int main()

{

char ch;
float nl, n2;
cout<<"Enter two numbers: ";
cin>>nl>>n2;
do
{
cout<<"\nNumber 1: “<<nl<<“\tNumber 2: "<<n2;
cout<<"\n\t\tOperator Menu";
cout<<"\n\t1l. Addition (+)";
cout<<"\n\t2. Subtraction (-)";
cout<<"\n\t3. Multiplication (*)";
cout<<"\n\t4. Division (/)";
cout<<"\n\t5. Exit (E)";
cout<<"\nEnter Option number or operator: "7
cin>>ch;
switch (ch)
{

case 'l'

case '+' : cout<<nl<<" + "<<n2<<" = "<<nl+n2;
break;

case '2!'

case '-' : cout<<nl<<" - "<<n2<<" = "<<nil-n2;
break;

case '3!'

case '*' ; cout<<nl<<" * "<<n2<<" = "<<nl*n2;
break;
| eon 7. MOLOHM പ്രസ്താവനകള്‍

case '4'

case '/' : cout<<nl<<" / "<<n2<<" = "<<nl/n2;
break;

case '5!'

case 'E!

case "൭ : cout<<"Thank You for using the program";
break;

default : cout<<"Invalid Choice!!";

}
} while (ch!='"5' && ch!='E' && ch!="'e');
return 0;

}
പ്രോഗ്രാം 7.17 ന്റെ മാതൃക ഓട്ട്പുട്ട്‌ താഴെ കൊടുക്കുന്നു:

Enter two numbers: 25 4

Number 1: 25 Number 2: 4
Operator Menu

Addition (+)

Subtraction (-)

Multiplication (*)

Division (/)

Exit (E)

Enter Option number or operator: 1.

25 + 4 = 29

Or WN FE

ഉപയോക്താവ്‌
നല്‍കുന്ന ഉന്‍പുട്ട്‌

Number 1: 25 Number 2: 4
Operator Menu

Addition (+)

Subtraction (-)

Multiplication (*)

Division (/)

Exit (EB)

Enter Option number or operator: /

25 / 4 = 6.25

OO ®W NM

ഉപയോക്താവ്‌
നല്‍കുന്ന ഉന്‍പുട്ട്‌

Number 1: 25 Number 2: 4
Operator Menu
1. Addition (+)
2. Subtraction (-)
3. Multiplication (*)
പിടി

4. Division (/)
5. Exit (E)
Enter Option number or operator: 5

ഉപയോക്താവ്‌
നല്‍കുന്ന ഉന്‍പുട്ട്‌

കണ്‍ട്രോള്‍ പ്രസ്താവനകളുടെ നെസ്റ്റിങ്ങിന്റെ വിവിധ സംയോഗങ്ങള്‍ ഉപയോഗിക്കുന്ന കൂടുതല്‍
പ്രോഗ്രാമുകള്‍ പ്രോഗ്രാം ഗ്യാലറി വിഭാഗത്തില്‍ നാം ചര്‍ച്ച ചെയ്യും.

7,3 ജമ്പ്പ്രസ്താവനകള്‍ (Jump Statements)

Thank You for using the program

പ്രോ്രഗാമിന്റെ നിയ്രന്തണം ഒരു ഭാഗത്തുനിന്നും മറ്റൊരു ഭാഗത്തേക്ക്‌ മാറ്റാന്‍ ഉപയോഗിക്കുന്ന
പ്രസ്താവനകളെ ജമ്പ്‌ പ്രസ്താവനകള്‍ 3d Jump statements) എന്നു പറയുന്നു. C++ ല്‍ പ്രത്യേക
നിബന്ധനകളില്ലാതെ പ്രവര്‍ത്തിക്കുന്ന നാലുതരം ജമ്പ്‌ പ്രസ്താവനകള്‍ ഉണ്ട്‌. അവ return,
goto, break, continue എന്നിവയാണ്‌ ഇതിനുപുറമെ, C++ ലെ exit () എന്ന സ്റ്റാന്‍ഡേര്‍ഡ്‌
ലൈബ്രറി ഫങ്ഷന്‍ പ്രോഗാമിന്റെ പ്രവര്‍ത്തനം അവസാഠനിപ്പിക്കുന്നതിനും ഉപയോഗിക്കുന്നുണ്ട്‌.

TELUIN പ്രസ്താവന ഫങ്ഷനില്‍ നിന്ന്‌ പുറത്ത്‌ വരുന്നതിനും നിയ്രന്തണം, വിളിച്ച പ്രോ്ഗാമി
ലേക്ക്‌ തിരിച്ചു കൊണ്ടു പോകുന്നതിനും ഉപയോഗിക്കുന്നു. അധ്യായം 10 ല്‍ ഇതിനെക്കുറിച്ച്‌ പിന്നീട്‌
വിശദീകരിച്ചിട്ടുണ്ട്‌. ഇനി നമുക്ക്‌ മറ്റു ജബ്‌ പ്രസ്താവനകളെക്കുറിച്ച്‌ ചര്‍ച്ച ചെയ്യാം.

7.3.1 goto പ്രസ്താവന

9൭0൦1൦ പ്രസ്താവന ഉപയോഗിച്ച്‌ പ്രോഗ്ഗോം നിയ്രന്തണത്തെ ഫങ്ഷനിലെ ഏതു സ്ഥലത്തേക്കും
മാറ്റാന്‍ സാധിക്കും. ഒരു ൭ഠ1ഠ പ്രസ്താവനയുടെ ലക്ഷ്യസ്ഥാനം ലേബല്‍ (ഒരു ഐഡന്റിഫ
യര്‍) ഉപയോഗിച്ച്‌ അടയാളപ്പെടുത്തുന്നു.

GOLO പ്രസ്താവനയുടെ വാകൃഘടന താഴെ കൊടുക്കുന്നു.

goto ലേബല്‍ ;

GOto പ്രസ്താവനക്ക്‌ മുമ്പോ പിന്‍പോ ഒരു പ്രോ്ഗാമില്‍ കാണപ്പെടുന്നു. ലേബലിനുശേഷം
ഒരു അപൂര്‍ണവിരാമം ( :) ചിഹ്നം ആവശ്യമാണ്‌. ഉദാഹരണത്തിന്‌ 1 മുതല്‍ 50 വരെ പ്രിന്റ്‌ ചെയ്യാ
നുള്ള കോഡ്‌ ശകലം പരിഗണിക്കുക.
| eon 7. MOLOHM പ്രസ്താവനകള്‍

int i=1;

cout<<i;

++i;

if (i<=50)

goto start;

ഇവിടെ cout, പ്രസ്താവന 1 എന്ന വില പ്രിന്റ്‌ ചെയ്യുന്നു. അതിനുശേഷം 1 യുടെ വില 1
വര്‍ദ്ധിപ്പിക്കുന്നു. (ഇപ്പോള്‍ 1-2), ഇപ്പോള്‍ പരിശോധന പ്രയോഗം 1<=50 വിലയിരുത്തുന്നു.
നിബന്ധന ശരിയായതിനാല്‍ start എന്ന ലേബലിലേക്ക്‌ പ്രോഗ്രാം നിയ്രന്തണത്തെ മാറ്റുന്നു.
നിബന്ധന തെറ്റാവുമ്പോള്‍ പ്രവര്‍ത്തനം അവസാനിപ്പിച്ച്‌ പ്രോ്രഗാം നിയ്രന്തണം if പ്രസ്താവ
നക്കു ശേഷം എത്തുന്നു.
നമുക്കു മറ്റൊരു ഉദാഹരണം നോക്കാം. ഇവിടെ ഒരു സംഖ്യ സ്വീകരിക്കുകയും മുന്‍കൂട്ടി നിശ്ച
Da] വിലയുമായി താരതമ്യം ചെയ്യുകയും ചെയ്യുന്നു. തുല്യമാണെങ്കില്‍ പ്രോഗ്രാം തുടരും അല്ലെ
ങ്കില്‍ അത്‌ അവസാനിക്കുന്നു.

int p;
cout<<"Enter the Code: ";
cin>>p;
if (p!=7755)
goto end;
cout<<"Enter the details";

end:
cout<<"Sorry, the code number is wrong. Try again!";

ഇവിടെ ഉപയോക്താവ്‌ ഇന്‍പുട്ടിന്റെ സാധ്യത പരിശോധിക്കുന്നു. കോഡ്‌ സാധുവായതാണെങ്കില്‍
പ്രോഗ്രാം മറ്റു വിശദാംശങ്ങള്‍ സ്വീകരിക്കുന്നു. ഇല്ലെങ്കില്‍ നിയ്രന്തണം end എന്ന ലേബലി
ലേക്ക്‌ പോകുന്നു. സ്ര്രക്ചേര്‍ഡ്‌ പ്രോഗ്രാമിങ്‌ GOLO ന്റെ ഉപയോഗം പ്രോത്സാഹിപ്പിക്കുന്നില്ല

7.3.2 break (ബ്രേക്കി പ്രസ്താവന

ഒരു പ്രോഗ്രാമില്‍ break പ്രസ്താവന കാണപ്പെട്ടാല്‍ പ്രോഗ്രാമിന്റെ നിയ്രന്തണം തൊട്ടടുത്ത
ലൂപ്പിനോ (for, while, do...while), switch പ്രസ്താവനയ്ക്കോ പുറത്തേക്ക്‌ മാറ്റുന്നു.
കണ്‍ട്രോള്‍ ചട്ടക്കൂടിന്‌ ശേഷമുള്ള പ്രസ്താവന മുതല്‍ പ്രവര്‍ത്തനം തുടരുന്നു. switch പ്രസ്താ
വനയില്‍ break ന്റെ പ്രവാഹത്തെ കുറിച്ച്‌ നാം ഇതിനോടകം ചര്‍ച്ച ചെയ്തു കഴിഞ്ഞു. ഇത്‌
ലൂപ്പുകളുടെ പ്രവര്‍ത്തനത്തെ എങ്ങനെ സ്വാധീനിക്കുന്നു എന്ന്‌ നമുക്ക്‌ നോക്കാം. താഴെ കൊടു
ത്തിരിക്കുന്ന രണ്ട്‌ പ്രോ്രഗാം ശകലങ്ങള്‍ പരിഗണിക്കുക.
പിടി

കോഡ്‌ ശകലം 7
i=1;
while (i<=10)
{

cin>>num;
1£ (num==0)
break;
cout<<"Entered number is: "<<num;
cout<<"\nInside the loop";
++i;

}

cout<<"\nComes out of the loop";

മുകളിലെ പ്രോഗ്രാം 10 സംഖ്യകളെ ഇന്‍പുട്ട്‌ ചെയ്യാന്‍ അനുവദിക്കുന്നു. ഇന്‍പുട്ട്‌ ചെയ്യുമ്പോള്‍
ഏതെങ്കിലും ഒരു സംഖ്യ 0 ആണെങ്കില്‍ ലൂപ്പ്‌ ചട്ടക്കൂടിലെ ബാക്കി പ്രസ്താവനകളെ ഒഴിവാക്കി
പ്രോഗ്രാമിന്റെ നിയ്രന്തണം ലൂപ്പിനു പുറത്ത്‌ വരികയും “Comes out of the loop”
എന്ന സന്ദേശം സ്ക്രീനില്‍ പ്രദര്‍ശിപ്പിക്കുകയും ചെയ്യുന്നു. ഒരു നെസ്റ്റഡ്‌ ലൂപ്പില്‍ break പ്രസ്താ
വനഉപയോഗിക്കുന്ന മറ്റൊരു കോഡ്‌ ശകലം നമുക്കു പരിഗണിക്കാം.

കോഡ്‌ ശകഷ്ം 2

for(i=1; i<=5; 552) //outer loop
{
cout<<"\n";
for(j=1; j<=i; ൮) //inner loop
{
cout<<"* "5
if (j==3)
break;

}

ഈ കോഡ്‌ ശകലം താഴെ കൊടുത്തിരിക്കുന്ന മാതൃക പ്രദര്‍ശിപ്പിക്കുന്നു.

യുടെ വില എഷോര്‍ മൂന്ന്‌
ആകുന്നുവോ അകഷോര്‍ Game
ലൂരിന്റെ പ്രവര്‍ത്തനം അവസാനി

[ല്‍
ഹം

നെസ്റ്റഡ്‌ ലൂപ്പ്‌ സാധാരണയായി 1-1, 1-2, 1-3 എന്നീ വിലകള്‍ക്ക്‌ അനുസരിച്ച്‌ പ്രവര്‍ത്തിക്കു
ന്നു. യുടെ ഓരോ വിലക്കനുസരിച്ച്‌ J, 1 മുതല്‍ 2. വരെയുള്ള വിലകള്‍ സ്വീകരിക്കും. 1 യുടെ
വില 4 ഓ 5 ഓ ആകുമ്പോള്‍ ഉള്ളിലുള്ള ലൂപ്പ്‌ j = 1, 3-2, 1-3 എന്നീ വിലകള്‍ക്കനുസരിച്ച്‌
പ്രവര്‍ത്തിച്ച്‌ break നു ശേഷം ലൂപ്പില്‍ നിന്നും പുറത്ത്‌ പോകുന്നു.
| eon 7. MOLOHM പ്രസ്താവനകള്‍

7.3.3 continue (കണ്‍ഡിന്യു) പ്രസ്താവന

Continue പ്രസ്താവന മറ്റൊരു ജംമ്പ്‌ പ്രസ്താവനയാണ്‌ അത്‌ ലൂപ്പ്‌ ചട്ടക്കൂടിന്റെ ഒരു ഭാഗം ഒഴി
വാക്കി അടുത്ത ആവര്‍ത്തനത്തിലേക്ക്‌ എത്തിക്കുന്നതിനു വേണ്ടി ഉപയോഗിക്കുന്നു. break
പ്രസ്താവന ലൂപ്പിന്റെ പ്രവര്‍ത്തനം നിര്‍ത്തി വെയ്ക്കുമ്പോള്‍ continue പ്രസ്താവന ചില
ഭാഗങ്ങള്‍ ഒഴിവാക്കി അടുത്ത ആവര്‍ത്തനം നടത്താന്‍ നിര്‍ബന്ധിക്കുന്നു. താഴെ കൊടുത്തിരി
ക്കുന്ന പ്രോഗ്രാം ശകലം CONTINUE പ്രസ്താവനയുടെ പ്രവര്‍ത്തനം വിവരിക്കുന്നു.

for (i=1; i<=10; ++i)
{
if (i==6)
continue;
cout<<i<<"\t";

}
ഈ കോഡ്‌ താഴെ പറയുന്ന ഓട്ട്പുട്ട്‌ തരുന്നു.
1 2 3 4 5 7 8 9 10

6 ലിസ്റ്റില്‍ ഇല്ല എന്നത്‌ (്ശദ്ധിക്കുക. 1 യുടെ വില 6 ആകുമ്പോഴാണ്‌ continue പ്രസ്താവന
പ്രവര്‍ത്തിക്കുന്നത്‌. അതിന്റെ ഫലമായി ഓട്ട്‌ പുട്ട്‌ പ്രസ്താവന ഒഴിവാക്കി പ്രോ്രഗാം നിയ്രന്തണം
അടുത്ത ആവര്‍ത്തനത്തിലെ പുതുക്കല്‍ പ്രസ്താവനയില്‍ എത്തിച്ചേരുന്നു.

ഒരു ലൂപ്പിനകത്തെ break പ്രസ്താവന ലൂപ്പിനെ അവസാനിപ്പിക്കുകയും ലൂപ്പിനു ശേഷമുള്ള
പ്രസ്താവനകളിലേക്ക്‌ പ്രോഗാം നിയ്രന്തണത്തെ എത്തിക്കുകയും ചെയ്യുന്നു. continue പ്രസ്താ
വന നിലവിലുള്ള ആവര്‍ത്തനത്തിലെ ശേഷിച്ച ഭാഗം ഉപേക്ഷിച്ച്‌ ലൂപ്പിന്റെ അടുത്ത ആവര്‍ത്തനം
ആരംഭിക്കുന്നു. While ലൂപ്പിലും, do. ..while ലൂപ്പിലും continue പ്രസ്താവന ഉപയോ
ഗിക്കുമ്പോള്‍ ലൂപ്പ്‌ അനന്തമാകുന്നത്‌ ഒഴിവാക്കണം എന്നത്‌ ശ്രദ്ധിക്കണം. പട്ടിക 7.4 break,
CONCINUE എന്നീ പ്രസ്താവനകള്‍ തമ്മിലുള്ള താരതമ്യം കാണിക്കുന്നു.

Switch ന്റെയും ലുകിന്റെയും കുടെ ഉപയോഗിക്കാം. ലൂഷിന്റെ കൂടെ മാത്രം ഉപയോശിക്കുന്നു.

ബ്ലോക്കിലെ അവശേഷിക്കുന്ന പ്രസ്താവനകള്‍ ഒഴി | ബ്ലോക്കിലെ അവരേഷിക്കുന്ന പ്രസ്താവനകള്‍ ഒഴി
വാക്കി പ്രോ്രാമിന്റെ നിയന്ത്രണം സ്വിച്ചിനോ ലൂരിനോ | വാക്കി പ്രോഗ്രാമിന്റെ നിയന്ത്രണം ലുകിന്റെ ആരംഭത്തി
പുറത്തേക്കു കൊണ്ടു വരുന്നു. ലേക്ക്‌ കൊണ്ടു വരുന്നു.

പരിശോധന പ്രസ്താവന ശരിയാണങ്കിലും പ്രോ(്രാ പരിശോധന പ്രസ്താവനയുടെ വില തെറ്റാകുമ്പോര്‍
മിന്റെ നിയ്രന്രണം ലുകിനു പുറത്തു പോകുന്നു. മാത്രം പ്രോഗ്രാമിന്റെ നിയന്ത്രണം acid പുറത്തു
കൊണ്ടു പോകുന്നു.

പട്ടിക 7.4 break, continue എന്നീ പ്രസ്താവനകള്‍ തമ്മിലുള്ള താരതമ്യം

ഒരു പ്രേഠ്രഗാം അതിന്റെ തന്നെ പ്രവര്‍ത്തനം നിര്‍ത്തുന്നതിന്‌ exit () എന്ന ഒരു ബില്‍ട്ട്‌-ഇന്‍
ഫങ്ഷന്‍ C++ ല്‍ ഉപയോഗിക്കുന്നു. estdlib എന്ന ഹെഡര്‍ ഫയല്‍ (ടര്‍ബോ C++ ല്‍ process
ch) പ്രോരഗാമില്‍ ഉള്‍പ്പെടുത്തിയാല്‍ മാത്രമേ. exit () എന്ന ഫങ്ഷന്‍ ഉപയോഗിക്കാന്‍ കഴി
യും. പ്രോ്ഗാം 7.18 ഈ ഫങ്ഷന്റെ പ്രവര്‍ത്തനം വിശദീകരിക്കുന്നു.
Ooo

#include <iostream>
#include <cstdlib>
using namespace std;
int main()

{

എന്ന്‌ പരിരോധിക്കുന്നതിന്‌.

int i, num;
cout<<"Enter the number: ";
cin>>num;
for(i=2; i<=num/2; ++i)
{
if (num%i == 0)
{
cout<<"Not a Prime Number";
exit(0);

}

cout<<"Prime Number";

return 0;

പ്രോരഗാം 7.18 ലെ For ലൂപ്പിലെ പരിശോധന പ്രസ്താവന
i<=sqrt (num) ഉപയോഗിച്ച്‌ മാറ്റി എഴുതാം. ഇവിടെ sqrt () എന്നത്‌
തന്നിരിക്കുന്ന സംഖ്യയുടെ വര്‍ഗ്ഗമുലം കണ്ടുപിടിക്കുനന്നതിനുള്ള ഒരു
ഫങ്ഷനാണ്‌. ഒരു സാഖ്യക്ക്‌ 2 മുതല്‍ അതിന്റെ വര്‍ഗ്ഗമുലം വരെ ഘട
കങ്ങള്‍ ഇല്ലെങ്കില്‍ അത്‌ ഒരു അവിഭാജ്യ (prime) സംഖ്യയാണ്‌. sqrt ()
ഉപയോഗിക്കുന്നതിന്‌ #include<cmath> എന്ന പ്രസ്താവന ഉള്‍പ്പെടുത്തണം.

പ്രോ്രഗാം 7.18 ന്റെ മാതൃക ഓട്ട്പുട്ടുകള്‍ താഴെ കാണിച്ചിരിക്കുന്നു.
ജഈട്ട്പുട്ട്‌ 1

Enter the number: 17

Prime Number
ഓട്ട്പുട്ട്‌ 2

Enter the number: 18

Not a Prime Number

| eon 7. MOLOHM പ്രസ്താവനകള്‍

നമുക്ക്‌ പരിശോധിക്കാം

1. goto പ്രസ്താവന താഴെ പറയുന്ന ഏതിലേക്ക്‌ നിയ്രത്രണം
പോകുന്നതിന്‌ കാരണമാകുന്നു.
(a) ഒരു ഓപ്പറേറ്റര്‍ (2) ഒരു ലേബല്‍ (Cc) ഒരു വേരിയബിള്‍
(9) ഒരു ഫങ്ഷന്‍
2. break പ്രസ്താവന ഏതില്‍ നിന്ന്‌ പുറത്തുപോകാന്‍ കാരണമാകു
ന്നു.
(൪) ഏറ്റവും അകത്തുള്ള ലൂപ്പില്‍ നിന്ന്‌ മാത്രം
(b) ഏറ്റവും ഉള്ളിലുള്ള switch ല്‍ നിന്ന്‌ മാത്രം
(൦) എല്ലാ ലൂപ്പില്‍ നിന്നും, switch ല്‍ നിന്നും
(9) ഏറ്റവും അകത്തുള്ള ലൂപ്പില്‍ നിന്നോ സ്വിച്ചില്‍ നിന്നോ
3. exit() ഫങ്ഷന്‍ ഏതില്‍ നിന്ന്‌ പുറത്തേക്ക്‌ എത്തിക്കുന്നു.
(a) അത്‌ കാണപ്പെടുന്ന ഫങ്ഷനില്‍ നിന്നും
(b) അത്‌ കാണപ്പെടുന്ന ലൂപ്പില്‍ നിന്നും
(൭) അത്‌ കാണപ്പെടുന്ന ബ്ലോക്കില്‍ നിന്നും
(9) അത്‌ കാണപ്പെടുന്ന പ്രോഗ്രാമില്‍ നിന്നും
4. exit() ഫങ്ഷന്‍ ഉപയോഗിക്കുന്നതിന്‌ ഉള്‍പ്പെടുത്തത്തേണ്ട ഹെഡര്‍
ഫയലിന്റെ പേരെഴുതുക.

പ്രോഗ്രാം ഗാലറി

ഈ പാഠഭാഗത്ത്‌ പ്രശ്ന പരിഹാരത്തിനായി വിവിധ നിയ്യന്തണ പ്രസ്താവനകള്‍ ഉപയോഗിച്ചുള്ള
പ്രോഗ്രാമുകളുടെ ശേഖരമാണ്‌ ഉള്ളത്‌. പ്രോ്രഗാമുകളുടെ മാതൃക ഓട്ട്പുട്ടുകള്‍ ഓരോ പ്രോ്രഗാ
മിനും ശേഷവും കൊടുത്തിട്ടുണ്ട്‌.

പ്രോ്രഗാം 7.19 aX” + DX 0 എന്ന രൂപത്തിലുള്ള ഒരു ദ്ധിമാന സമവാകൃത്തിന്റെ മുന്ന്‌ കോയി
ഫിഷന്റുകള്‍ സ്വീകരിക്കുകയും അതിന്റെ മൂല്യസംഖ്യ കണക്കാക്കുകയും ചെയ്യുന്നു. ൭ യുടെ
വില 0 (പൂജ്യം) ആകരുത്‌. ഈ പ്രശ്നം നിര്‍ദ്ധാരണം ചെയ്യുന്നതിന്‌ (൪ - 4ac) എന്ന Myo
വാക്യം ഉപയോഗിച്ച്‌ ദ്വിമാന സമവാകൃത്തിന്റെ ഡിസ്ര്രിമിനിനെന്റ്‌ മൂല്യം കണ്ടുപിടിക്കണം. മൂല്യ
സംഖ്യയുടെ തരം കണ്ടുപിടിക്കുന്നതിന്‌ വര്‍ഗമൂലം കണ്ടുപിടിക്കുന്നതിനുള്ള സുരതവാകൃവും
ലഭ്യമാണ്‌. ഈ പ്രോ്രഗാമില്‍ sqrt () എന്ന ഫങ്ഷനാണ്‌ സംഖ്യയുടെ വര്‍ഗമൂലം കണ്ടുപിടി
ക്കാന്‍ ഉപയോഗിക്കുന്നത്‌. ഈ ഫങ്ഷന്‍ ഉപയോഗിക്കുന്നതിന്‌ cmath (ടര്‍ബോ C++ ല്‍൬൭൦൨.൩)
എന്ന ഹെഡര്‍ ഫയല്‍ പ്രോ്രഗാമില്‍ ഉള്‍പ്പെടുത്തേണ്ടതാണ്‌.

adratic equation

#include <iostream>

#include <cmath>// to use sqgrt()function
using namespace std;

int main()
ലി

float a, b, c, rootl, root2, d;

cout<< "Enter the three coefficients: ";

cin >> a>>b>>c;

if (!a) // equivalent to if (a == 0)
cout<<"Value of \'a \' should not be zero\n"

<"Aborting!!!!!\n";
else
{
d =b*b-4*a*c; //oeginning of else block
if (d > 0)
{
rootl = (-b + sqrt(d))/(2*a);
root2 = (-b - sqrt(d))/(2*a);
cout<<"Roots are REAL and UNEQUAL\n";
cout<<"Rootl = "<<rootl<<"\tRoot2 = "<<root2;
}
else if (d == 0)
{
rootl = -b/(2*a);
cout<<"Roots are REAL and EQUAL\n";
cout<<"Rootl =" <<rootl;

}

else
cout<<"Roots are COMPLEX and IMAGINARY";
}// end of else block of outer if

return 0;
}
avgang 1:
Enter the three coefficients: 2 3 4

Roots are COMPLEX and IMAGINARY

BDSG ang 2:
Enter the three coefficients: 3 5 1
Roots are REAL and UNEQUAL
Rootl = -0.232408 Root2 = -1.434259

പ്രേഠ്രഗാം 7.20 ഒരു ഫിബിനോസി ശ്രേണിയിലെ ട്‌ പദങ്ങള്‍ പ്രദര്‍ശിപ്പിക്കുന്നതിനുള്ളതാണ്‌.
ശ്രേണി തുടങ്ങുന്നത്‌ 0, 1 എന്ന പദങ്ങളില്‍ നിന്നാണ്‌ അടുത്ത പദം വരുന്നത്‌ തൊട്ടു മുമ്പുള്ള
രണ്ടു പദങ്ങളുടെ തുകയായാണ്‌. ശ്രേണി ഇപ്രകാരമാണ്‌ 0, 1, 1, 2, 3, 5, 8, 13, ...
| പി

7. നിയ്ര്രണ പ്രസ്താവനകള്‍

#include <iostream>
using namespace std;
int main()

{

int first=0, second=1, third,

Cine sn,
cout<<first<<"\t"<<second;
fon (aint 1—3 7 ++i)

{

i<=n;

third = first + second;
Couto tt <<a idly

first = second;
second = third;
}
ലി Op

}

ഓട്ട്‌ പൂട്ട്‌

Enter number of terms in the series:
0 1 1 2 3 5 8 13

n;
cout<<"\nEnter number of terms in the series: ";

7

first, second എന്നീ വേരിയബിളുകളുടെ
പ്രാരംഭ വിലകള്‍ യഥാക്രമം -1, +1 എന്ന്‌ nobel

യാല്‍ നമുക്ക്‌ ദ്ര്രണിയിലെ ആദ്യത്തെ രണ്ട്‌ പദ
ങ്ങള്‍ പ്രദര്‍ശിരിക്കാനുള്ള cout പ്രസ്താവന
ഒഴിവാക്കാം.

10
21 34

പ്രോ്രഗാം 7.21 ഒരു സംഖ്യ സ്വീകരിക്കുകയും അത്‌ പാലിന്‍ഡ്രരോം ആണോ അല്ലയോ എന്ന്‌ പരി
ശോധിക്കുകയും ചെയ്യുന്നു. ഒരു സംഖ്യ പാലിന്‍ഡ്രോം എന്ന്‌ പറയണമെങ്കില്‍ ആ സംഖ്യയും
അതിന്റെ പ്രിതിബിംബവും തുല്യമായിരിക്കണം. പ്രതിബിംബം എന്നത്‌ കൊണ്ട്‌ അര്‍ത്ഥമാക്കി
യത്‌ ഒരു സംഖ്യ തിരിച്ചെഴുതിയാലും അതേ സംഖ്യ കിട്ടുന്നു എന്നതാണ്‌.

അതായത്‌ 163 ന്റെ പ്രതിബിംബം 361 ആണ്‌. ഈ രണ്ടു സംഖ്യകളും തുല്യമല്ലാത്തതിനാല്‍ 163
എന്ന സംഖ്യ പഠലിന്‍ഡ്രോം അല്ല. എന്നാല്‍ 232 എന്നത്‌ ഒരു പാലിഡ്രോം സംഖ്യയാണ്‌.

#include <iostream>

using namespace std;
int main()
{

Int num, Copy, Gigi,
രിന ത്ന 0. ioibiilesne 9g WA

rev=0;

cin>>num;
copy=num;
while (num != 0)

രല്ലദയാ എന്ന്‌ പരിരോധിക്കുന്നതിന്‌.

ലൂകിന്റെ പ്രവര്‍ത്തനം പൂര്‍ത്തിയാ
കുമ്പോള്‍ num എന്ന വേരിയബിളിന്റെ
വില പൂജ്യമാകുന്നു. അതുകൊണ്ടാണ്‌
അതിന്റെ ആദ്യത്തെ വില മറ്റൊരു
വേരിയബിളിലേക്ക്‌
പകര്‍ത്തിയത്‌

ലി

digit = num % 10;
rev = (rev * 10)+ digit;
num = num/10;

}

cout<<"The reverse of the number is: "<<rev;
if (rev == copy)

cout<<"\nThe given number is a palindrome.";
else

cout<<"\nThe given number is not a palindrome.";
return 0;

}
avgang 1:

Enter the number: 363

The reverse of the number is: 363

The given number is a palindrome.
ഓട്ട്പൂട്ട്‌ 2:

Enter the number: 257

The reverse of the number is: 752

The given number is not a palindrome.

വും വലിയ Moay പ്രിന്റ്‌ ചെയ്യുന്നതിന്‌

#include <iostream>
using namespace std;
int main()

{

int num, big, count;

cout<<"How many Numbers in the list? ";
cin >> count;

cout<<"\nEnter first number: ";

cin >> num;

big = num;

for(int i=2; i<=count; i++)

{

cout<<"\nEnter next number: ";

cin >> num;
if(num > big) big = num;

}

cout<<"\nThe largest number is " << big;
return 0;
| eon

ഓട്ട്പുട്ട്‌;

How many Numbers in the list? 5
Enter first number:

Enter next
Enter next
Enter next
Enter next

The largest number

number:
number:
number:
number:

നമുക്ക്‌ സംഗ്രഹിക്കാം

23
12
-18
35
18

7. നിയ്ര്രണ പ്രസ്താവനകള്‍

തീരുമാനങ്ങള്‍ എടുക്കുന്നതിനോ ആവര്‍ത്തന പ്രവര്‍ത്തനങ്ങള്‍ നടപ്പാക്കുന്നതിനോ
ഉള്ള സൌകര്യങ്ങള്‍ ഉള്ള പ്രസ്താവനകളെ നിയ്രന്തണ പ്രസ്താവനകള്‍ എന്ന്‌ അറി
യപ്പെടുന്നു. നിയ്രന്തണ പ്രസ്താവനകള്‍ ഒരു കമ്പ്യൂട്ടര്‍ പ്രോഗ്രാമിന്റെ നട്ടെല്ലാണ്‌.
ഈ അധ്യായത്തില്‍ വിവിധ തരം നിയ്ര്ത്രണ പ്രസ്താവനകളായ തിരഞ്ഞെടുക്കല്‍
പ്രസ്താവനകള്‍ (if, if..else,if..else if, switch), ആവര്‍ത്തന പ്രസ്താവ
നകള്‍ (for, while, do..while) ജമ്പ്‌ പ്രസ്താവനകള്‍ (goto, break,
continue, exit) എന്നിവ നാം പഠിച്ചു. ഈ MIOWMeM പ്രസ്താവനകള്‍ കാര്യ
ക്ഷമമായ C++ പ്രോ്രഗാമുകള്‍ എഴുതുന്നതിന്‌ നമ്മെ സഹായിക്കും.

പറനനേട്ടങ്ങള്‍

ഈ അധ്യായം പൂര്‍ത്തിയാകുമ്പോള്‍ പഠിതാവ്‌

പ്രശ്നങ്ങള്‍ നിര്‍ദ്ധാരണം ചെയ്യുന്നതിന്‌ C++ ലെ നിയ്രന്തണ പ്രസ്താവനകള്‍ ഉപയോഗി

ക്കുന്നു.

നിയ്രന്രണ പ്രസ്താവനകള്‍ ഒരു പ്രോഗ്രാമില്‍ ഏതു സാഹചര്യത്തിലാണ്‌ ഉപയോഗിക്കേ

ണ്ടത്‌ എന്ന്‌ തിരിച്ചറിയുന്നു.

സാഹചര്യത്തിന്‌ അനുയോജ്യമായ ശരിയായ നിയ്രന്തണ പ്രസ്താവനകള്‍ ഉപയോഗിക്കുന്നു.

വിവിധ തരം നിയ്രന്തണ പ്രസ്താവനകളെ തരം തിരിക്കുന്നു.

C++ ലെ വിവിധ തരം ജമ്പ്‌ പ്രസ്താവനകളെ തിരിച്ചറിയുന്നു.

നിയ്രന്തണ പ്രസ്താവനകള്‍ ഉപയോഗിച്ച്‌ C++ പ്രോ്രഗാം എഴുതുന്നു.
Qoe

അ TTT നന്തി

ര്രസ്വോത്തര ചോദ്യങ്ങള്‍

1

7.

switch പ്രസ്താവനയില്‍ break- പ്രസ്താവനയുടെ പ്രാധാന്യം എഴുതുക. Switch പ്രസ്താ
വനയില്‍ break-ac3 അഭാവം എന്ത്‌ ഫലം ഉളവാക്കും?

താഴെ കൊടുത്തിരിക്കുന്ന കോഡ്‌ ശകലത്തിന്റെ ഓട്ട്പുട്ട എന്തായിരിക്കും?
for (i=1;i<=10;++1i) ;
cout<<it5;
താഴെ പറയുന്ന പ്രസ്താവനയെ while, do while ലൂപ്പുകള്‍ ഉപയോഗിച്ച്‌ മാറ്റി എഴുതുക.
for (i=1; i<=10; i++) cout<<i;
താഴെ കൊടുത്തിരിക്കുന്ന ലൂപ്പ്‌ എത്ര തവണ പ്രവര്‍ത്തിക്കും.
int s=0, i=0;
while (i++<5)
st=i;
eXit() ഫങ്ഷന്‍ അടങ്ങിയിരിക്കുന്ന ഹെഡര്‍ ഫയലിന്റെ പേരെഴുതുക.
പ്രോഗ്രാമിന്റെ നിയ്രന്തണം ഒരു ലേബലിലേക്ക്‌ കൈമാറാന്‍ സാധിക്കുന്ന C++ ലെ പ്രന്താ
വന ഏത്‌?

switch പ്രസ്താവനയില്‍ default പ്രസ്താവനയുടെ ആവശ്യകത എന്ത്‌?

ലഘു ഉപന്യാസ ചോദ്യങ്ങള്‍

1

താഴെ കൊടുത്തിരിക്കുന്ന രണ്ട്‌ കോഡ്‌ ശകലങ്ങള്‍ പരിഗണിക്കുക.

// version 1 //version 2

cin>>mark; cin>>mark;

if (mark > = 90) if (mark>=90)

cout<<“ A+”; cout<<“ A+”;

if (mark > = 80 && mark <90) else if (mark>=80 && mark <90)
cout<<“ A”; cout<<“ A”;

if (mark > = 70 && mark <80) else if (mark>=70 && mark <80)
cout<<“ B+”; cout<<“ B+”;

if (mark > = 60 && mark <70) else if (mark>=60 && mark <70)
cout<<“ B”; cout<<“ B”;

വേര്‍ഷന്‍ 2 ന്‌ വേര്‍ഷന്‍ 1 നെ അപേക്ഷിച്ചുള്ള മേന്മകള്‍ ചര്‍ച്ച ചെയ്യുക.
| eon 7. MOLOHM പ്രസ്താവനകള്‍

2. ഒരു for ലൂപ്പിന്റെ പ്രവര്‍ത്തനം അതിന്റെ വാകൃഘടന (Syntax) യോടുകൂടി ചുരുക്കി വിവ
രിക്കുക. നിങ്ങളുടെ ഉത്തരം സാധൂകരിക്കുന്നതിന്‌ for ലൂപ്പിന്റെ ഒരു ഉദാഹരണം നല്‍കുക.
3. വിവിധ സാഹചര്യങ്ങളില്‍ മൂന്നു ലൂപ്പുകളുടെ അനുയോജ്യത താരതമ്യം ചെയ്ത്‌ ചര്‍ച്ച ചെയ്യുക.
4. താഴെ കൊടുത്തിരിക്കുന്ന if.. else if പ്രസ്താവന പരിഗണിക്കുക. switch
പ്രസ്താവന കൊണ്ട്‌ അത്‌ മാറ്റി എഴുതുക.
if (a==1)

cout << “One”;
else if (a==0)
cout << “Zero”;
else
cout << “Not a binary digit”;
5. Z=3 ആണെങ്കില്‍ താഴെ കൊടുത്തിരിക്കുന്ന while പ്രസ്താവനയിലെ തെറ്റ്‌ എന്താണ്‌?

while(z>=0)

sumt=z}
6. താഴെ കൊടുത്തിരിക്കുന്ന കോഡ്‌ ശകലത്തിന്റെ ഓട്ടപുട്ട്‌ എന്തായിരിക്കും?
for (outer=10; outer > 5; --outer)

for (inner=1; inner<4; ++inner)
cout<<outer <<"\t"<<inner <<endl;

7. താഴെ കൊടുത്തിരിക്കുന്ന കോഡ്‌ ശകലത്തിന്റെ ഓട്ട്പുട്ട്‌ എന്തായിരിക്കും? വിശദീകരിക്കുക.
for (n = 1; n <= 10; 4൩)
for ( m=1; m <= 5 ; ++m)

num = n*m;
cout<<num <<endl;

8. ഒരു ലൂപ്പ്‌ MM AHEM വേരിയബിളിന്റെ പ്രാധാന്യം എഴുതുക. ഒരു ലൂപ്പിന്റെ വിവിധ ഭാഗ
ങ്ങളെക്കുറിച്ച്‌ ചുരുക്കി വിവരിക്കുക.

ഉപന്യസിക്കുക

1 താഴെ കൊടുത്തിരിക്കുന്ന കോഡ്‌ ശകലം ഓട്ട്പൂട്ട്‌ എന്ത്‌?

int val, res, n=1000;

cin>>val;

res = ntval > 1750 ? 400 : 200;
(a) ഇന്‍പുട്ട്‌ 2000 ആണെങ്കില്‍

൯) ഇന്‍പുട്ട്‌ 500 ആണെങ്കില്‍
2. താഴെ പറയുന്നവ ഉപയോഗിച്ച്‌ ഒരു സംഖ്യയിലെ അക്കങ്ങളുടെ തുക കണ്ടുപിടിക്കുന്നതി
നുള്ള ഒരു പ്രോഠ്രഗാം എഴുതുക.

(a) ആഗമന നിയന്ത്രണ ലൂപ്പ്‌
(൪) ബഹിര്‍ഗമന നിയ്യന്തണ ലൂപ്പ്‌

3. 1000 ല്‍ താഴെയുള്ള ആംസ്ട്രോങ്ങ്‌ സംഖ്യ പ്രിന്റ്‌ ചെയ്യുന്നതിനുള്ള ഒരു പ്രോ്രഗാം എഴുതു
ക. (ഒരു ആംസ്ട്രോങ്ങ്‌ സംഖ്യ എന്നാല്‍ അതിലെ ഓരോ അക്കത്തിന്റെയും ക്യൂബുകളുടെ
തുകയ്ക്ക്‌ തുല്യമായിരിക്കും. ഉദാഹരണത്തിന്‌ 153 = 17455433)

4. C++ ലെ ലഭ്യമായ വിവിധ Romi പ്രസ്താവനകള്‍ വിശദീകരിക്കുക.
5. നെസ്റ്റഡ്‌ ലൂപ്പ്‌ ഉപയോഗിച്ച്‌ താഴെ കൊടുത്തിരിക്കുന്ന ഓട്ട്പൂട്ട്‌ സൃഷ്ടിക്കുന്നതിനുള്ള ഒരു

പ്രോ്രഗാം എഴുതുക.

B

BC

BOC D

BOC DE

6. if..else പ്രസ്താവനയില്‍ Else എന്ന വാക്ക്‌ നിങ്ങള്‍ എഴുതാന്‍ മറന്നുപോയി എന്ന്‌
വിചാരിക്കുക. നിങ്ങളുടെ പ്രോ്രഗാമിന്റെ ഓട്ടപുട്ടിനെ ഇത്‌ എങ്ങനെ ബാധിക്കുമെന്ന്‌ ചര്‍ച്ച
ചെയ്യുക.

a a
അറെകള്‍

പ്രോ്ഗാമുകളില്‍ ഡാറ്റ സംഭരിക്കുന്നതിനായി നാം
വേരിയബളുകള്‍ ഉപയോഗിക്കുന്നു. എന്നാല്‍ ഡാറ്റയുടെ
എണ്ണം കൂടുതലാണെങ്കില്‍ കൂടുതല്‍ വേരിയബളുകള്‍

പ്രധാന ആശയങ്ങള്‍

© അറെയും ആവശ്യകതയും ഉപയോഗിക്കേണ്ടതായി വരും. ഈ സാഹചര്യത്തില്‍
ഠ അറെ പ്രഖ്യാപനം ഡാറ്റ ഉപയോഗിക്കുന്ന രീതി വളരെ ബുദ്ധിമുട്ടുള്ളതായി
ഠ അറെയുടെ മെമറി നീക്കി വയ്ദല്‍ അനുഭവപ്പെടും. ഇതു മറികടക്കാന്‍ ഈ അദ്ധ്യായത്തില്‍

അറെ (Array) എന്ന പേരിലുള്ള C++ ല്‍ നിന്നും ഉരു
ത്തിരിഞ്ഞ ഡാറ്റ ഇനം പരിചയപ്പെടുത്തുന്നു. അറെ
എന്നത്‌ കേവലമൊരു ഡാറ്റ ഇനത്തിന്റെ നാമം മാ്രതമല്ല,
മറിച്ച്‌ ഇത്‌ വളരെ കൂടുതല്‍ ഡാറ്റ എളുപ്പത്തില്‍ കൈ
കാര്യം ചെയ്യുന്നതിന്‌ വേണ്ടി അടിസ്ഥാനപരമായ ഡാറ്റ

ഠ അറെയും പ്രാരംഭ വില നല്‍കലും

O അറെയിലെ അംഗങ്ങളെ ഉപയോഗിക്കല്‍
© അറെയുടെ പ്രവര്‍ത്തനങ്ങള്‍

ഠ കടന്നുപോകല്‍

ഠ ക്രഥക്ടുത്തല്‍ ഇനങ്ങളില്‍ നിന്നും നിര്‍മിച്ചെടുത്ത മറ്റൊരു തരം ഡാറ്റ
ഠ സെലക്ഷന്‍ സോര്‍ട്ട്‌ ഇനമാണ്‌. അറെയുടെ പ്രഖ്യാപനം പ്രാഥമിക വിലയി
ഠ ബബിര്‍ സോര്‍ട്ട്‌ രുത്തല്‍ (Initialization), കടന്നുപോകല്‍ (Traversal), ക്രമ
ഠ തിരയല്‍ പ്പെടുത്തല്‍ (Sorting), തിരയല്‍ (Searching) പോലുള്ള
0 രേഖീയ തിരയല്‍ പ്രവര്‍ത്തനങ്ങളെപ്പറ്റി നമുക്ക്‌ ചര്‍ച്ച ചെയ്യാം.
ഠ ബൈനറി തിരയല്‍ 8.1 അറെയും അവയുടെ ആവശ്യകതയും
൭ ദ്വിമാന അറെകള്‍ (Array and its need)
© ദ്വിമാന അറെ പ്രഖ്യാപനം അറെ എന്നാല്‍ തുടര്‍ച്ചയായ മെമ്മറി സ്ഥാനങ്ങളില്‍
ഠ ഒ്രട്രിക്‌സായി ദ്വിമാന Grane ശേഖരിച്ചു വച്ചിട്ടുള്ള ഒരേ ഇനത്തിലുള്ള ഡാറ്റകളുടെ
ഭ ബഹുമുഖ Gana സമൂഹമാണ്‌. ഒരു പേരില്‍ ഒരേ ഇനത്തിലുള്ള ഒരു കൂട്ടം

വിലകള്‍ ശേഖരിക്കുന്നതിനായി അറെകള്‍ ഉപ
യോഗിക്കുന്നു. ഒരു അറെയിലെ ഓരോ അംഗങ്ങളേയും
അതിന്റേതായ സൂചിക വ്യക്തമാക്കിക്കൊണ്ട്‌ ഉപയോ
ഗിക്കുവാന്‍ സാധിക്കും.

എന്തുകൊണ്ടാണ്‌ പ്രോഗ്രാമുകളില്‍ അറെ ആവശ്യമാ
യിവരുന്നത്‌. ഒരു ഉദാഹരണത്തിന്റെ സഹായത്തോടെ
ഇത്‌ നമുക്ക്‌ പരിശോധിക്കാം. ഒരു ക്ലാസിലെ 20 വിദ്യാര്‍
ത്ഥികളുടെ മാര്‍ക്കുകളുടെ ശരാശരിയെ കണ്ടെത്തണം
എന്ന്‌ കരുതുക. ഈ സാഹചര്യത്തില്‍ സാധാരണ
വേരിയബിളുകള്‍ ഉപയോഗിച്ചാല്‍ 20 വിദ്യാര്‍ത്ഥികളുടെ
മാര്‍ക്കുകള്‍ ശേഖരിക്കുവാന്‍ 20 വേരിയബിളുകള്‍
ആവശ്യമായി വരും.

(5) ഒന്നാം വര്‍ഷ കമ്പ്യൂട്ടര്‍ സയന്‍സ്‌

int a,b,c,d,e,f,9g,h,i,j,k,1,m,n,0,p,q,r,S8,t;

float avg;
cin>>a>>b>>c>>d>>e>>f>>g>>h>>i>>j>>k>>1>>m>>n>>0>>p>>gq>>r>>s>>t;
avg = (atbt+ctdtet+ftgth+itjtk+l+mtnt+otptqtrt+stt) /20.0;

ഒരു പരിധിവരെ മുകളില്‍ കൊടുത്തിരിക്കുന്ന കോഡ്‌ ഉപയോഗിച്ച്‌ 20 കുട്ടികളുടെ മാര്‍ക്കു
കളുടെ ശരാശരി കണ്ടുപിടിക്കുവാന്‍ കഴിയും. എന്നാല്‍ 1000 കുട്ടികളുടെ ശരാശരി മാര്‍
ക്ക്‌ കണ്ടുപിടിക്കേണ്ട ഒരു സാഹചര്യം ഉണ്ടായാല്‍ ഈ രീതിയിലുള്ള പ്രവര്‍ത്തനം സാ
ധ്യമല്ല. അതായത്‌ ഒരു പ്രോഗ്രാമില്‍ 1000 വേരിയബിളുകള്‍ ഉപയോഗിക്കുന്നതും അവ
ഉപയോഗിച്ച്‌ പ്രോഗ്രാം ചെയ്യുന്നതും എളുപ്പമുള്ള കാര്യമല്ല, മാര്രമല്ല ഇങ്ങനെ നിര്‍മി
ക്കുന്ന പ്രോ്രഗാം വളരെ സങ്കീര്‍ണവും മനസ്സിലാക്കുന്നതിന്‌ ബുദ്ധിമുട്ടുള്ളതും ആയിരി
ക്കും. ഇത്തരം സാഹചര്യങ്ങളില്‍ അറെ എന്ന ആശയം നമുക്ക്‌ ഉപകരിക്കും. അറെയിലെ
ഓരോ അംഗങ്ങള്‍ക്കും മെമ്മറി സ്ഥാനങ്ങള്‍ അനുവദിക്കേണ്ടതുണ്ട്‌. മെമ്മറി നീക്കിവെയ്‌
ക്കുന്നതിന്‌ പ്രഖ്യാപന പ്രസ്താവനകള്‍ ആവശ്യമാണെന്നും നമുക്കറിയാം. എങ്ങനെ
യാണ്‌ അറെകള്‍ പ്രഖ്യാപനം നടത്തി അവ ഉപയോഗിക്കുന്നത്‌ എന്ന്‌ നമുക്ക്‌ നോക്കാം.

8.1.1 അറെകളുടെ പ്രഖ്യാപനം (Array Declaration)

സാധാരണ വേരിയബിളിനെ പോലെ അറെ ഉപയോഗിക്കുന്നതിന്‌ മുമ്പായി പ്രഖ്യാ
പനം നടത്തേണ്ടതുണ്ട്‌. C+ ല്‍ അറെ പ്രഖ്യാപനം ചെയ്യുന്നതിനുള്ള വാകൃഘടന താഴെ
പറഞ്ഞിരിക്കുന്നു.

datatype array_name[size];

വാകൃഘടനയില്‍ datatype എന്നത്‌ അറെയിലെ അംഗങ്ങളുടെ ഡേറ്റയുടെ ഇനമാണ്‌
സൂചിപ്പിക്കുന്നത്‌. ൭൧൧൭ ൨൭൩൦ എന്നത്‌ അറെയുടെ പേരും size എന്നത്‌ അറെ
യിലെ ആകെ അംഗങ്ങളുടെ എണ്ണം വ്യക്തമാക്കുന്ന ഒരു പോസിറ്റീവ്‌ സംഖ്യയും ആകു
ന്നു. താഴെ പറയുന്നത്‌ ഒരു അറെ നിര്‍മാണത്തിന്റെ ഉദാഹരണമാണ്‌.

int num[10];

മുകളിലുള്ള പ്രസ്താവന Num എന്ന്‌ വിളിക്കുന്ന 10 പൂര്‍ണ്ണസംഖ്യകള്‍ സൂക്ഷിക്കാവുന്ന
ഒരു അറെയെ നിര്‍മിക്കുന്നു. ചിത്രം 8.1 കാണിച്ചിരിക്കുന്നതു പോലെ അറെയിലെ അംഗ
ങ്ങള്‍ മെമ്മറിയില്‍ തുടര്‍ച്ചയായി സൂക്ഷിക്കുന്നു.

num[0] num[1] num[2] num[3] num[4] num[5] num[6] num[7] സ്മ] സ്മ]

Index 0 1 2 3 4 5 6 7 8 9

ചിത്തം 8.1 BO} അറെയിലെ CoN6UBBIAS (A278 (6M

അറെയിലെ അംഗങ്ങള്‍ ക്രമാനുഗതമായി സൂക്ഷിക്കുന്നതുകൊണ്ട്‌, ഏത്‌ അംഗത്തേയും
അറെയുടെ പേരും അംഗത്തിന്റെ സ്ഥാനവും നല്‍കി ഉപയോഗിക്കുവാന്‍ കഴിയും. ഓരോ
അംഗത്തെയും സൂചിപ്പിക്കുന്ന സ്ഥാനത്തിന്‌ സൂചിക (index or subscript) എന്നു പറയുന്നു.
C+t+@ അറെയുടെ സൂചിക പൂജ്യത്തില്‍ ആരംഭിക്കുന്നു. int num[10] എന്ന്‌ ഒരു
അറെ നിര്‍മ്മിച്ചാല്‍ അതില്‍ സാധ്യമായ സൂചിക വിലകള്‍ 0 മുതല്‍ 9 വരെയാകും. ഈ
അറെയിലെ ഒന്നാമത്തെ അംഗം num [0] ഉം അവസാനത്തെ അംഗം num [9] ഉം
ആകുന്നു. num [0] എന്നത്‌ ‘Mo ഓഫ്‌ സീറോ. എന്ന്‌ വായിക്കുന്നു. ആയിരം
വിദ്യാര്‍ത്ഥികളുടെ മാര്‍ക്കുകള്‍ സംഭരിക്കുന്ന പ്രശ്നം താഴെപ്പറയുന്ന പ്രസ്താവന
ഉപയോഗിച്ച്‌ പരിഹരിക്കാനാകും.

int ടഠഠ [1000];

SCOLFE എന്നു പേരുള്ള അറെയില്‍ 1000 വിദ്യാര്‍ഥികളുടെ മാര്‍ക്കുകള്‍ സംഭരിക്കാം.
ആദ്യ വിദ്യാര്‍ത്ഥിയുടെ മാര്‍ക്ക്‌ score [ 0] ലും അവസാനത്തെ വിദ്യാര്‍ത്ഥിയുടെ മാര്‍ക്ക്‌
score[999] ലും സംഭരിക്കും.

8.1.2 അറെയുടെ മെമ്മറി നിക്കിവെയ്ക്കല്‍ (Memory Allocation for Arrays)

ഒരു അറെയില്‍ അംഗങ്ങളെ സംഭരിക്കുന്നതിന്‌ ആവശ്യമായ മെമ്മറിയുടെ അളവ്‌ അതിന്റെ
ഇനവും അംഗങ്ങളുടെ എണ്ണവുമായി ബന്ധപ്പെട്ടിരിക്കുന്നു. ചിത്രം 8.2638 num എന്ന ഒരു
അറെയുടെ മെമ്മറി നീക്കിവെയ്ക്കല്‍ കാണിച്ചിരിക്കുന്നു, ഇതില്‍ ആദ്യ അംഗത്തിന്റെ
വിലാസമായി 1000 എന്ന്‌ കാണിച്ചിരിക്കുന്നു. nuM ഒരു പൂര്‍ണ്ണസംഖ്യകളുടെ GOO ആയ
തിനാല്‍, ഓരോ അംഗത്തിന്റെയും വ്യാപ്തി 4 ബൈറ്റുകള്‍ ആണ്‌ (16 ബിറ്റ്‌ പ്രതിനി
ധീകരിക്കുന്ന ഒരു സിസ്റ്റത്തില്‍). താഴെക്കൊടുത്തിരിക്കുന്ന ചിത്രം 8.208 num[0] og
വിലാസം 1000, num[1] ന്റെ വിലാസം 1004, അവസാന അംഗമായ num[4] വിലാസം
വിലാസം 101 6 എന്നിങ്ങനെ ആയിരിക്കും.

num [0] [1] num[2] nun[3] num[4]

1000 1001 1002 1003 1004 1005 1006 1007 1008 1009 1010 1011 1012 1013 1014 1015 1016 1017 1018 1019

ചിത്രം 8.2 ഒരു പുര്‍) സംഖ അഥെയുടെ 02220) അഥ്േോക്കെഷ൯
ഒരു ഏകമാന അറെക്ക്‌ (single dimensional array) ആവശ്യമായ മെമ്മറിയുടെ അളവ്‌
താഴെ പറയുന്ന സൂധ്രവാക്യം ഉപയോഗിച്ച്‌ കണ്ടുപിടിക്കാം.
ആകെ ബൈറ്റുകള്‍ = 52൦ വ്‌ (അറെയുടെ ഇനം) X അറെയിലെ അംഗങ്ങളുടെ എണ്ണം

ഉദാഹരണത്തിന്‌, int num [10]; Num അറെക്കായി നീക്കിവെച്ചിട്ടുള്ള ആകെ
ബൈറ്റുകള്‍ 4 x 10 = 40 ബൈറ്റുകള്‍ ആയിരിക്കും.

8.1.3 അറെയുടെ പ്രാരംഭ വില MGde,.08 (Array Initialization)

സാധാരണ വേരിയബിള്‍ പോലെ തന്നെ അറെയുടെ പ്രഖ്യാപന പ്രസ്താവനകളോ
ടൊപ്പം അവയുടെ പ്രാരംഭ വിലകള്‍ നല്‍കുവാന്‍ കഴിയും. താഴെപ്പറയുന്ന ഉദാഹരണ
ങ്ങളില്‍ കാണിച്ചിരിക്കുന്നതുപോലെ അറെയിലെ അംഗങ്ങളെ ബ്രാക്കറ്റിനുള്ളില്‍ എഴു
തണം.

int score[5] = (98, 87, 92, 79, 85};
char code[6] = {*‘s’, ‘a’, “ന, ‘p’, ‘1’, ട്‌);
float wgpa[7] = {9.60, 6.43, 8.50, 8.65, 5.89, 7.56, 8.22};
ഒന്നാം വര്‍ഷ കമ്പ്യൂട്ടര്‍ സയന്‍സ്‌

അറെയിലെ അംഗങ്ങളെ അവ എഴുതപ്പെട്ട ക്രമത്തില്‍ സൂക്ഷിക്കുന്നു. ഒന്നാമത്തെ അംഗം
സൂചിക 0 ലും, രണ്ടാമത്തെ അംഗം സൂചിക 1ലും പ്രാരംഭ വിലകളായി സൂക്ഷിക്കുന്നു.
ആദ്യത്തെ ഉദാഹരണത്തില്‍, score [0] ലേക്ക്‌ 98, score[1] ലേക്ക്‌ 87, score[2]
ലേക്ക്‌ 92, score[3] ലേക്ക്‌ 79, score[4] ലേക്ക്‌ 85 ഉം പ്രാരംഭ വിലകളായി സൂ
ക്ഷിക്കുന്നു. ഒരു അറെയ്ക്ക്‌ അനുവദിക്കപ്പെട്ട അംഗങ്ങളുടെ എണ്ണത്തെക്കാള്‍ പ്രാരംഭ
മൂല്യങ്ങളുടെ എണ്ണം കുറവാണെങ്കില്‍, ആദ്യ സ്ഥാനങ്ങളില്‍ അംഗങ്ങള്‍ സംഭരിക്കും,
ശേഷിക്കുന്ന സ്ഥാനങ്ങള്‍ സാഖ്യാ ഡാറ്റകളുടെ കാര്യത്തില്‍ പൂജ്യവും അക്ഷരഡാറ്റ
കളുടെ കാര്യത്തില്‍ '' (സ്പെയിസും) സംഭരിക്കും. ഒരു അറെയിലെ അംഗങ്ങളുടെ പ്രാ
രംഭ വിലകള്‍ നല്‍കുമ്പോള്‍ അംഗങ്ങളുടെ എണ്ണം ഒഴിവാക്കാവുന്നതാണ്‌. ഉദാഹരണ
ത്തിന്‌, താഴെ പറയുന്ന പ്രാരംഭ വില നല്‍കല്‍ പ്രസ്താവന അഞ്ച്‌ അംഗങ്ങളുള്ള ഒരു
അറെ നിര്‍മ്മിക്കുന്നു.
int num[] = (16, 12, 10, 14, 11};

8.1.4 അറെയിലെ അംഗങ്ങളെ ഉപയോഗിക്കല്‍ (Accessing elements of arrays)

ഒരു അറെയിലെ അംഗങ്ങളെ പ്രോ്രഗാമില്‍ എവിടെയും ഉപയോഗിക്കാം. ഒരു സമയം
ഒരു അംഗത്തിനെ മാത്രമേ ഉപയോഗിക്കാന്‍ കഴിയു. ഓരോ അംഗത്തേയും അറെയുടെ
പേരും അവയുടെ സൂചികയും നല്കി ഉപയോഗിക്കുന്നു. Score എന്ന അറെയിലെ
അംഗങ്ങളെ ഉപയോഗിക്കുന്ന ചില ഉദാഹരണങ്ങള്‍ താഴെ കൊടുത്തിരിക്കുന്നു.
score[0] = 95;

score[1l] = score[0] - 11;

cin >> score[2];

score[3] = 79;

cout << score[2];

sum = score[0] + score[1] + score[2] + score[3] + score[4];
്രാക്കറ്റിനുള്ളിലെ സൂചിക ഒരു വേരിയബിളോ, ഒരു പൂര്‍ണ്ണസംഖ്യയോ, പൂര്‍ണ്ണസംഖ്യ
നിര്‍ദ്ധാരണം ചെയ്യുന്ന ഒരു പ്രസ്താവനയോ ആകാം. ഓരോ സന്ദര്‍ഭത്തിലും പ്രസ്താ
വനയുടെ മൂല്യം അറെയുടെ സൂചികയുടെ സാധുവായ പരിധിക്കുള്ളില്‍ ആയിരിക്കണം.
ഈ രീതിയില്‍ വേരിയബിളോ പ്രസ്താവനയോ ഉപയോഗിക്കുന്നതിന്റെ ഗുണം, അറെ
യിലുള്ള അംഗങ്ങളെ ഉപയോഗിക്കുന്നതിന്‌ വേണ്ടി ലൂപ്പിന്റെ നിയ്രന്തണ വേരിയബിള്‍
ഉപയോഗിക്കാം എന്നുള്ളതാണ്‌. ഇത്‌ പ്രസ്താവനകളെ താഴെപ്പറയുന്ന രീതിയില്‍ അനു
ചിതമായി ഉപയോഗിക്കുന്നതില്‍ നിന്നും നമ്മെ പിന്തിരിപ്പിക്കുന്നു.

sum = score[0] + score[1] + score[2] + score[3] + score[4];
മുകളിലുള്ള പ്രസ്താവനയിലെ സൂചികയുടെ മൂല്യങ്ങള്‍ക്കു പകരം ലൂപ്പിന്റെ നിയ്ര്രണ
വേരിയബിള്‍ ഉപയോഗിച്ചുകൊണ്ട്‌ അറെയിലെ അംഗങ്ങളെ ഉപയോഗിക്കാം. താഴെപ്പ
റയുന്ന പ്രസ്താവനകള്‍ ഈ ആശയം വിശദമാക്കുന്നു.

sum = 0;

for (i=0; i<5; i++)

sum = sum + score[i];
(5 ഒന്നാം വര്‍ഷ കമ്പ്യൂട്ടര്‍ സയന്‍സ്‌

താഴെ കാണിച്ചിരിക്കുന്നത്‌ പോലെ ഒരു ഇന്‍പുട്ട്‌ പ്രസ്താവന ഉപയോഗിച്ചുകൊണ്ടും
അറെയിലെ അംഗത്തിന്‌ മൂല്യം നല്‍കാം.

for(int 150; i<5; i++)
cin>>score[i];
ഈ ലൂപ്പ്‌ പ്രവര്‍ത്തിച്ചു കഴിയുമ്പോള്‍ ആദ്യം സ്വീകരിക്കുന്ന വില അറെയുടെ ഒന്നാമത്തെ
അംഗമായ score [0] ലും, രണ്ടാമത്തെ aileiscore [1] ലും, അവസാന വില score [4]
ലും സൂക്ഷിക്കുന്നു.

പ്രോഗ്രാം 8.1 ഒരു അറെയില്‍ എങ്ങനെ അഞ്ച്‌ വിലകള്‍ സ്വീകരിക്കാമെന്നും അവയെ
വിപരീത ക്രമത്തില്‍ പ്രദര്‍ശിപ്പിക്കാമെന്നും കാണിക്കുന്നു. ഈ പ്രോ്രഗാമില്‍ ഉള്‍പ്പെടു
ത്തിയിട്ടുള്ള രണ്ട്‌ ലൂപ്പുകളില്‍ ആദ്യത്തേത്‌ അറെയുടെ അംഗങ്ങളുടെ വിലകള്‍ സ്വീകരി
ക്കുന്നു. അഞ്ച്‌ വിലകള്‍ സ്വീകരിച്ച്‌ കഴിഞ്ഞാല്‍ രണ്ടാമത്തെ ലൂപ്പ്‌ സംഭരിച്ച വിലകളെ
അവസാനം മുതല്‍ ആദ്യം വരെ പ്രദര്‍ശിപ്പിക്കുന്നു.

ആത്ത ........... = “a

#include <iostream>
using namespace std;
int main()
{
int i, score[5];
for(i=0; i<5; i++) // Reads the’ scores
{
cout<<"Enter a score: ";
cin>>score[i];
}
for (152 i>=0; 15) // Prints the scores
cout<<"score[" << i << "] is " << score[i]<<endl;

return 0;

}

ഓട്ടപുട്ടിന്റെ മാതൃക:

Enter a score: 55
Enter a score: 80
Enter a score: 78
Enter a score: 75

Enter a score: 92
score[4] is 92

score[3] is 75
ഒന്നാം വര്‍ഷ കമ്പ്യൂട്ടര്‍ സയന്‍സ്‌

score[2] is 78
score[1l] is 80

score[0] is 55

1. താഴെ പറയുന്നവ സംഭരിക്കുന്നതിനുള്ള GOO പ്രഖ്യാപന പ്രസ്താ
വനകള്‍ എഴുതുക

i. 100 വിദ്യാര്‍ത്ഥികളുടെ മാര്‍ക്ക്‌
ii, ഇംഗ്ലീഷ്‌ അക്ഷരമാല

iii. 10 വര്‍ഷങ്ങളുടെ പട്ടിക

iv. 30 ദശാംശ സംഖ്യകളുടെ പട്ടിക

2. താഴെ പറയുന്ന അറെയില്‍ പ്രാരംഭ വിലകള്‍ നല്കുന്നതിനുള്ള പ്രസ്‌
താവനകള്‍ എഴുതുക

1. 10 സ്‌കോറുകളുടെ പട്ടിക 89, 75, 82, 93, 78, 95, 81, 88, 77, 82
2. അഞ്ചി അളവുകളുടെ പട്ടിക: 10.62, 13.98, 18.45, 12.68, 14.76 എന്നിവ

ii, 100 പലിശ നിരക്കുകളുടെ പട്ടിക, ആദ്യ ആറ്‌ പലിശ നിരക്കുകള്‍
6.29, 6.95, 7.25, 7.35, 7.40, 7.42.

iv. മുല്യം 0 ഉപയോഗിച്ച്‌ 10 മാര്‍ക്കിനുള്ള ഒരു GRAD.
൮. VIBGYOR അക്ഷരങ്ങളുള്ള ഒരു GRAD.
Vi. ഓരോ മാസത്തിലുമുള്ള ദിവസങ്ങളുള്ള ഒരു അറെ.

3. int ar[50]; എന്ന അറെയിലേക്ക്‌ വിലകള്‍ ഇന്‍പുട്ട്‌ ചെയ്യുന്നതി
നുള്ള C++ കോഡ്‌ ശകലങ്ങള്‍ എഴുതുക.

4. float val [100]; val അറെയുടെ ഇരട്ട സ്ഥാനങ്ങളിലുള്ള അം
ഗങ്ങള്‍ പ്രദര്‍ശിപ്പിക്കുന്നതിന്‌ C++ കോഡ്‌ ശകലം എഴുതുക:

8.2 അഥെയുടെ പ്രവര്‍ത്തനങ്ങള്‍ (Array Operations)

കടന്നുപോകല്‍ (Traversal), ക്രമപ്പെടുത്തല്‍ (Sorting), തിരയല്‍ (Searching), ഇടയില്‍
ചേര്‍ക്കല്‍ (Insertion), നീക്കം ചെയ്യല്‍ (Deletion), ലയിപ്പിക്കല്‍ (Merging) തുടങ്ങിയവ
അറെയുടെ പ്രവര്‍ത്തനങ്ങളില്‍ ഉള്‍പ്പെടുന്നു. ഈ പ്രവര്‍ത്തനങ്ങള്‍ നടത്താന്‍ വ്യത്യസ്ത
യുക്തികള്‍ പ്രയോഗിക്കുന്നു. അവയില്‍ ചിലത്‌ നമുക്ക്‌ ചര്‍ച്ചചെയ്യാം.

8.2.1 കടന്നുപോകല്‍ (Traversal)

കുറഞ്ഞത്‌ ഒരിക്കലെങ്കിലും അറെയിലെ ഓരോ അംഗത്തേയും ഉപയോഗിക്കുക എന്ന
താണ്‌ കടന്നുപോകല്‍ എന്നതുകൊണ്ട്‌ ഉദ്ദേശിക്കുന്നത്‌. ഇടയില്‍ ചേര്‍ക്കല്‍, നീക്കം
ചെയ്യല്‍ തുടങ്ങിയ പ്രവര്‍ത്തനങ്ങളുടെ കൃത്യത പരിശോധിക്കുവാന്‍ കടന്നുപോകല്‍
പ്രവര്‍ത്തനം നമുക്ക്‌ ഉപയോഗിക്കാം. അറെയിലെ എല്ലാ അംഗങ്ങളേയും പ്രദര്‍ശിപ്പിക്കു
ന്നത്‌ കടന്നുപോകലിന്‌ ഒരു ഉദാഹരണമാണ്‌. ഏതെങ്കിലുമൊരു പ്രവര്‍ത്തനം അറെയിലെ
എല്ലാ അംഗങ്ങളിലും നടക്കുന്നു എങ്കില്‍ അതിനെ കടന്നുപോകല്‍ എന്നു പറയുന്നു .
ന്നാം വര്‍ഷ കമ്പ്യൂട്ടര്‍ സയന്‍സ്‌ 8. അറെകള്‍

ഒരു പ്രോഗ്രാമില്‍ എങ്ങനെയാണ്‌ കടന്നുപോകല്‍ നടത്തുന്നത്‌ എന്നത്‌ താഴെ
കൊടുത്തിരിക്കുന്നു

#include <iostream>

using namespace std;

int main()

{

int a[10], i;

cout<<"Enter the elements of the array :";

for(i=0; i<10; i++)
for(i=0; i<10; i++)
ati] = ali] കടന്നുപോകല്‍ |

cout<<"\nEntered elements of the array are...\n";
for(i=0; i<10; i++)

return 0;
}

8.2.2 ക്രമപെടുത്തല്‍ (Sorting)

ചില യുക്തിപരമായ ക്രമത്തില്‍ അറെയിലെ അംഗങ്ങള്‍ ക്രമീകരിക്കുന്ന പ്രവര്‍ത്തനമാണ്‌
ക്രമപ്പെടുത്തല്‍. വാക്കുകളുടെ കാര്യത്തില്‍ നിഘണ്ടു ക്രമവും സംഖ്യകളുടെ കാര്യത്തില്‍
അവയുടെ മൂല്യങ്ങളുടെ ആരോഹണ ക്രമമോ അവരോഹണ ക്രമമോ ആകാം യുക്തി
പരമായ ക്രമം. ഈ പ്രവര്‍ത്തനം ഫലപ്രദമായി ചെയ്യാന്‍ പല അല്‍ഗോരിതങ്ങളുമുണ്ട്‌
ഇവയില്‍ സെലക്ഷന്‍ സോര്‍ട്ട്‌, ബബിള്‍ സോര്‍ട്ട്‌ എന്നീ അല്‍ഗോരിതങ്ങള്‍ നമുക്ക്‌
ഇവിടെ ചര്‍ച്ചചെയ്യാം.

ഒ. സെലക്ഷന്‍ സോര്‍ട്ട്‌ (Selection sort)

ഏറ്റവും ലളിതമായ ക്രമപ്പെടുത്തല്‍ രീതികളിലൊന്നാണ്‌ സെലക്ഷന്‍ സോര്‍ട്ട്‌. ആരോ
ഹണ്രക്രമത്തില്‍ ഒരു അറെ ക്രമീകരിക്കുന്നതിനായി അറെയിലെ ഏറ്റവും കുറഞ്ഞ
മൂല്യമുള്ള അംഗത്തെ കണ്ടെത്തി ആദ്യ സ്ഥാനത്തേക്ക്‌ മാറ്റിക്കൊണ്ടാണ്‌ സെലക്ഷന്‍
സോര്‍ട്ട്‌ ആരംഭിക്കുന്നത്‌. അതേസമയം ആദ്യ സ്ഥാനത്തെ അംഗത്തെ ചെറിയ മൂല്യമുള്ള
അംഗത്തിന്റെ സ്ഥാനത്തേക്കും മാറ്റുന്നു. അതിനുശേഷം രണ്ടാമത്തെ കുറഞ്ഞ മൂല്യമുള്ള
അംഗത്തെ കണ്ടെത്തി രണ്ടാം സ്ഥാനത്തുള്ള അംഗവുമായി പരസ്പരം മാറ്റം ചെയ്യുന്നു.
അങ്ങനെ എല്ലാ അംഗങ്ങളെയും ക്രമീകരിക്കപ്പെടുന്നതുവരെ ഈ പ്രവര്‍ത്തനം തുടരുന്നു.
ഒരു അറെയിലെ കുറഞ്ഞ മൂല്യമുള്ള അംഗത്തെ കണ്ടെത്തി അനുയോജ്യമായ
സ്ഥാനത്തെ അംഗവുമായി മാറ്റം ചെയ്യുന്ന പ്രക്രിയയെ സ്ഥാനമാറ്റം എന്ന്‌ പറയുന്നു. N
അംഗങ്ങളുള്ള ഒരു സെലക്ഷന്‍ സോര്‍ട്ടില്‍ 4-1 സ്ഥാനമാറ്റങ്ങള്‍ ഉണ്ടായിരിക്കും.
ഉദാഹരണത്തിന്‌ താഴെ നല്‍കിയിരിക്കുന്ന സംഖ്യകളുടെ പട്ടിക നോക്കുക.
©) 5 ഒന്നാം വര്‍ഷ കമ്പ്യൂട്ടര്‍ സയന്‍സ്‌ 8. അറെകള്‍

പ്രാരം8 പട്ടിക 32 | 23 | 10 | 2 | 30 |

സ്ഥാനമാറ്റം 1

സ്ഥാനമാറ്റം 1: പട്ടികയില്‍ നിന്നും ഏറ്റവും ചെറിയ
അംഗമായ 2 തിരഞ്ങെടുക്കുന്നു, അത്‌ ആദ്യത്തെ
അംഗവുമായി സ്ഥാനമാറ്റം ചെയ്യകെടുന്നു.

സ്ഥാനമാറ്റം 1

നുശേഷം

സ്ഥാനമാറ്റം 2
സ്ഥാനമാറ്റം 2: പട്ടികയില്‍ നിന്നും 2 ഒഴികെയുള്ള
തില്‍ ചെറിയ അംഗമായ 10 തിരങ്ങെടുക്കുന്നു,
അത്‌ രണ്ടാമത്തെ അംഗവുമായി സ്ഥാനമാറ്റം
ചെയ്യകെടുന്നു.

നുശേഷം

സ്ഥാനമാറ്റം 3

സ്ഥാനമാറ്റം 3: പട്ടികയില്‍ നിന്നും 2, 10 എന്നിവ ഒഴി
കെയുളളതില്‍ ചെറിയ അംഗമായ 23 തിരഞ്ഞെടു
ക്കുന്നു, അത്‌ മുന്നാമത്തെ അംഗവുമായി
സ്ഥാനമാറ്റം ചെയ്യകെടുന്നു.

സ്മ

നുശേഷം

സ്ഥാനമാറ്റം 4
സ്ഥാനമാറ്റം 4: പട്ടികയില്‍ നിന്നും 2, 10, 23 എന്നിവ
ഒഴികെയുളളതില്‍ ചെറിയ അംഗമായ 30 തിരഞ്ഞെടു
ക്കുന്നു, അത്‌ നാലാമത്തെ അംഗവുമായി സ്ഥാന
മാറ്റം ചെയ്യകരെടുന്നു.

നുശേഷം
ഓരോ തവണയും ഒരു സ്ഥാനമാറ്റം ഉദ്ദേശിച്ചിട്ടുണ്ടെങ്കിലും, ഏറ്റവും കുറഞ്ഞ മൂല്യം

ശരിയായ സ്ഥലത്ത്‌ ആണെങ്കില്‍ സ്ഥാനമാറ്റം സംഭവിക്കുന്നില്ല. സ്ഥാനമാറ്റം മുന്നില്‍
ഇത്‌ നിങ്ങള്‍ക്ക്‌ കാണുവാന്‍ സാധിക്കും
(5 ഒന്നാം വര്‍ഷ കമ്പ്യൂട്ടര്‍ സയന്‍സ്‌ 8. അറെകള്‍

സെലക്ഷന്‍ സോര്‍ട്ടിന്റെ അല്‍ഗോരിതം

1. ആരംഭിക്കുക

2. 4 ന്റെ വില സ്വീകരിക്കുക

3 1-0

4. ഘട്ടങ്ങള്‍ 5,6 എന്നിവ I <— N-1 ആകുന്നതുവരെ ആവര്‍ത്തിക്കുക
5. AR[I] ലേയ്ക്ക്‌ ഡാറ്റ സ്വീകരിക്കുക

6 1൦1൨

7 1൦0

8. ഘട്ടങ്ങള്‍ 9 മുതല്‍ 14 വരെ 1 ൦-1 ആകുന്നതുവരെ ആവര്‍ത്തിക്കുക
9. MIN ൦ AR[I], POS ൦1

10. 1 ൦11 മുതല്‍ [4-1 ആകുന്നതുവരെ ഘട്ടം 11, 12 ആവര്‍ത്തിക്കുക
1. IF AR[J] < MIN ആണെങ്കില്‍ MIN ൦ AR[J], POS ൦

12. 1 പ

13. IF POS <>I ആണെങ്കില്‍ AR[POS] ൦ AR[I], AR[I] പാങ്ങ്‌

14. 1൦1൨

15. 1൦0

16. ഘട്ടങ്ങള്‍ 15, 16 എന്നിവ I <— N-1 ആകുന്നതുവരെ ആവര്‍ത്തിക്കുക
17. ARI] പ്രദര്‍ശിപ്പിക്കുക.

18. I ൦151

19. അവസാനിപ്പിക്കുക

#include <iostream>

using namespace std;

int main()

{ int AR[25], N, I, J, MIN, POS;
cout<<"How many elements? ";
cin>>N;
cout<<"Enter the array elements: ";
for(I=0; I<N; I++)
cin>>AR[I];
for (1=0; < N-1; I++)
{

MIN=AR[I];
POS=I;
©) 5 ഒന്നാം വര്‍ഷ കമ്പ്യൂട്ടര്‍ സയന്‍സ്‌

for(J = 11% J < N; J++)
if (AR[J]<MIN)
{
MIN=AR[J];
POS=J;
}
if(POS != T)
{
AR[POS]=AR[I];
AR[I]=MIN;

}

cout<<"Sorted array is: B

for(I=0; I<N; I++)
cout<<AR[I]<<"\t";

return 0;

}

ഓട്ട്പുട്ടിന്റെ മാതൃക:
How many elements? 5

Enter the array elements: 12 3 6 1 8
Sorted array is: 1 3 6 8 12

b. ബബിള്‍ സോര്‍ട്ട്‌ (Bubble sort)

ബബിള്‍ സോര്‍ട്ട്‌ അല്‍ഗോരിതം ക്രമീകരിക്കേണ്ട അറെയിലെ അടുത്തടുത്ത ഓരോ
ജോഡി അംഗങ്ങളെ താരതമ്യം ചെയ്യുകയും അവ തെറ്റായ ക്രമത്തിലാണെങ്കില്‍ പര
സ്പരം സ്ഥാനമാറ്റം നടത്തുകയും ചെയ്യുന്നു. ഒരു സ്ഥാനമാറ്റവും ആവശ്യമില്ലാത്തതു
വരെ ഈ ല്ര്രകിയ ആവര്‍ത്തിക്കപ്പെടുന്നു, ഈ അവസ്ഥയില്‍ അറെ ക്രമീകരിക്കപ്പെട്ട
തായി കരുതാം. ഒരു ഉദാഹരണത്തിന്റെ സഹായത്തോടെ ഈ ല്ര്രകിയ പരിശോധിക്കാം.

പ്രാരം പട്ടിക

നി 4 |

സ്ഥാനമാറ്റം 1

ആദ്യത്തെ ആദ്യ രണ്ട്‌ അംഗങ്ങളായ 23, 12 എന്നിവ
(3) (12) 7 11 4 താരതമ്യം ചെയ്ത ശേഷം പരസ്പരം സ്ഥാനമാറ്റം

ചെയ്യുന്നു.
*) ഒന്നാം വര്‍ഷ കമ്പ്യൂട്ടര്‍ സയന്‍സ്‌

12 7 11 (23) |(4)

12 7 11 4

സ്ഥാനമാറ്റം 2 ax

es

(2)|(7)} 1

പരിഷ്കരിച്ച പട്ടികയിലെ രണ്ടാമത്തെയും
മൂന്നാമത്തെയും അംഗങ്ങളായ 23, 7 എ
ന്നിവ താരതല്യം ചെയ്ത ശേഷം പരസ്പരം
സ്ഥാനമാറ്റം ചെയ്യുന്നു.

പരിഷ്കരിച്ച പട്ടികയിലെ മൂന്നാമത്തെയും
നാലാമത്തെയും അംഗങ്ങളായ 23, 11
എന്നിവ താരതമ്യം ചെയ്ത ശേഷം പരസ്പരം
സ്ഥാനമാറ്റം ചെയ്യുന്നു.

പരിഷ്കരിച്ച പട്ടികയിലെ നാലാമത്തെയും
അഞ്ചാമത്തെയും അംഗങ്ങളായ 23, 4
എന്നിവ താരതമ്യം ചെയ്ത ശേഷം പരസ്‌
പരം സ്ഥാനമാറ്റം ചെയ്യുന്നു.

ആദ്യത്തെ സ്ഥാനമാറ്റം കഴിയുമ്പോള്‍ അറെ
യിലെ ഏറ്റവും വലിയ അംഗമായ 23 അറെ
യുടെ അവസാന സ്ഥാനത്ത്‌ എത്തുന്നു.

രങ്ങമത്തെ സ്ഥാനമാറ്റത്തില്‍ ആദ്യത്തെ
നാല്‌ അംഗങ്ങളെ മാത്രം പരിഗണിക്കുന്നു.
ഒന്നാമത്തെ സ്ഥാനമാറ്റത്തിലെ അതേ
പ്രക്രിയ തുടരുന്നു, അതിന്റെ ഫലമായി
രണ്ടാമത്തെ സ്ഥാനമാറ്റത്തിന്‍റെ അവസാനം
രണ്ടാമത്തെ വലിയ സംഖ്യയായ 12 അറെ
യുടെ നാലാം സ്ഥാനത്ത്‌ എത്തുന്നു.
©) 5 ഒന്നാം വര്‍ഷ കമ്പ്യൂട്ടര്‍ സയന്‍സ്‌

സ്ഥാനമാറ്റം 3

സ്ഥാനാറ്റം 4 ax

ax

ecm
rN

മുന്നാമത്തെ സ്ഥാനമാറ്റത്തില്‍, 23 ഉം 12 ഉം
ഒഴികെ പട്ടികയിലെ മുന്ന്‌ അംഗങ്ങളെ
മാത്രമേ പരിഗണിക്കുന്നുള്ളു. മേല്‍ഷറഞ്ഞ
സ്ഥാനമാറ്റത്തിലെ അതേ പ്രക്രിയ തുട
രൂന്നു, അതിന്റെ ഫലമായി മുന്നാമത്തെ
സ്ഥാനമാറ്റത്തിന്റെ അവസാനം 11 എന്ന
അംഗം അറെയുടെ മുന്നാം സ്ഥാനത്ത്‌
എത്തുന്നു.

നാലാമത്തെ MNIMA OMG, 23, 12, 11
എന്നിവ ഒഴികെ പട്ടികയിലെ രണ്ട്‌ അംഗങ്ങ
ളെ മാത്രമേ പരിഗണിക്കുന്നുള്ളൂു. മേല്‍ച
റഞ്ഞ സ്ഥാനമാറ്റത്തിലെ അതേ പ്രക്രീയ
തുടരുന്നു, അതിന്റെ ഫലമായി നാലാമത്തെ
സ്ഥാനമാറ്റത്തിന്റെ A അവസാനം 7 എന്ന
അംഗം അറെയുടെ രണ്ടാം സ്ഥാനത്തെ
ത്തുന്നു. 4 ഒന്നാം സ്ഥാനത്തും എത്തുന്നു

N അംഗങ്ങളുള്ള ഒരു ബബിള്‍ സോര്‍ട്ടില്‍ 4-1 സ്ഥാനമാറ്റങ്ങള്‍ ഉണ്ടായിരിക്കും. ഓരോ
സ്ഥാനമാറ്റത്തിലും പരിഷ്കരിച്ച അറെയിലെ പരിഗണിക്കപ്പെടുന്ന അംഗങ്ങളുടെ എണ്ണം

ഒന്നു വീതം കുറയും.

ബബിള്‍ സോര്‍ട്ടിന്റെ അല്‍ഗോരിതം

1.
2.

ആരംഭിക്കുക
N ന്റെ വില സ്വീകരിക്കുക
1൦0

ഘട്ടങ്ങള്‍ 5,6 എന്നിവ I <— N-1 ആകുന്നതുവരെ ആവര്‍ത്തിക്കുക

ARI] ലേയ്ക്ക്‌ ഡാറ്റ സ്വീകരിക്കുക
1൦11

Ie 1

ഘട്ടങ്ങള്‍ 9, 12 എന്നിവ I< N-1 ആകുന്നതുവരെ ആവര്‍ത്തിക്കുക

4 ൦0 മുതല്‍ N-2 ആകുന്നതുവരെ ഘട്ടം 10, 11 എന്നിവ ആവര്‍ത്തിക്കുക

MIN

. IFAR[J] > AR[J+1] ആണെങ്കില്‍ TEMP AR[J], AR[J] CAR[J+1], ശ്വ €
ക ഒന്നാം വര്‍ഷ കമ്പ്യൂട്ടര്‍ സയന്‍സ്‌ 8. അറെകള്‍

11. 46൦ +1
12. 1൦1
13. 1൦0

14. ഘട്ടങ്ങള്‍ 14, 15 എന്നിവ 1 ൦-1 ആകുന്നതുവരെ ആവര്‍ത്തിക്കുക
15. AR[I] പ്രദര്‍ശിപ്പിക്കുക.
16. [൦1൨

17. അവസാനിപ്പിക്കുക

#include <iostream>
using namespace std;
int main()
{ int AR[25],N;
int I, J, TEMP;
cout<<"How many elements? ";
cin>>N;
cout<<"Enter the array elements: ";
for(I=0; I<N; I++)
cin>>AR[I];
for(I=1; I<N; I++)
for(J=0; J<N-I; J++)
if(AR[J] > AR[J+1])
{
TEMP = AR[J];
AR[J] = AR[J+1];
AR[J+1] = TEMP;
}
cout<<"Sorted array is: ";
for(I=0; I<N; I++)
cout<<AR[I]<<"\t";

}
ഓട്ട്പുട്ടിന്റെ മാതൃക:

How many elements? 5
Enter the array elements: 23 10 -3 7 11

Sorted array is: -3 7 10 11 23
8.2.3 തിരയല്‍ (Searching)
അറെയിലെ ഒരു അംഗത്തിന്റെ സ്ഥാനം കണ്ടുപിടിക്കുന്ന പ്രക്രിയയെ തിരയല്‍ (Search-
INE) എന്നു പറയുന്നു. തന്നിരിക്കുന്ന ഡാറ്റയെ അറെയില്‍ കണ്ടെത്തിയാല്‍ ആ തിരയല്‍

വിജയിച്ചു എന്നു പറയാം, അതായത്‌ തന്നിരിക്കുന്ന ഡാറ്റ അറെയിലെ ഒരു അംഗമാണ്‌.
അല്ലെങ്കില്‍ തിരയല്‍ പരാജയപ്പെട്ടു. തിരയലിന്‌ രേഖീയ തിരയല്‍, ബൈനറി തിരയല്‍
ഒന്നാം വര്‍ഷ കമ്പ്യൂട്ടര്‍ സയന്‍സ്‌

എന്നിങ്ങനെ രണ്ട്‌ സമീപന രീതികള്‍ ഉണ്ട്‌. തിരയലിന്‌ തിരഞ്ഞെടുക്കുന്ന അല്‍ഗോരിതം
അറെയിലെ അംഗങ്ങളുടെ ക്രമീകരണത്തെ ആശ്രയിച്ചിരിക്കുന്നു ക്രമരഹിതമായി
അംഗങ്ങളെ ക്രമീകരിച്ചിരിക്കുന്ന അറെയില്‍ രേഖീയ തിരയല്‍ രീതി ഉപയോഗിക്കുന്നു,
എന്നാല്‍ അംഗങ്ങളെ ആരോഹണ ക്രമത്തിലോ അവരോഹണ ക്രമത്തിലോ
വിനൃസിച്ചിരിക്കുന്ന അറെയില്‍ ബൈനറി തിരയല്‍ രീതി ഉപയോഗിക്കുന്നതാണ്‌
അഭികാമ്യം. ഈ തിരയല്‍ രീതികള്‍ താഴെ വിവരിക്കുന്നു.

ഒ. രേഖീയ തിരയല്‍ (Linear search)

അറെയില്‍ ഒരു പ്രത്യേക ഡാറ്റ കണ്ടെത്തുവാനുള്ള ഒരു രീതിയാണ്‌ രേഖീയ തിരയല്‍.
രേഖീയ തിരയല്‍ പട്ടികയിലെ ഒന്നാമത്തെ അംഗത്തില്‍ നിന്നും ആരംഭിച്ച്‌ ക്രമമനു
സരിച്ച്‌, ഓരോ അംഗത്തേയും പരിശോധിക്കുന്നു. ഈ പരിശോധന ഒന്നുകില്‍ അംഗത്തെ
കണ്ടെത്തുന്നതു വരെ അല്ലെങ്കില്‍ പട്ടികയുടെ അവസാനം വരെ തുടരുന്നു.

50, 18, 48, 35, 45, 26, 12 എന്നീ അംഗങ്ങളുള്ള ഒരു അറെയില്‍ നിന്ന്‌ “45” എന്ന അംഗത്തെ
തിരയണമെന്ന്‌ കരുതുക. ആദ്യ അംഗമായ 50 ല്‍ നിന്നും രേഖീയ തിരയല്‍ ആരംഭിക്കുന്നു,
അത്‌ ഓരോ അംഗത്തെയും താരതമ്യം ചെയ്യുന്നു അഞ്ചാം സ്ഥാനത്ത്‌ എത്തുമ്പോള്‍
ചിത്രം 8.3 ല്‍ കാണിച്ചിരിക്കുന്നത്‌ പോലെ 45 കണ്ടെത്തുന്നു.

ഉന്‍ഡക്സ്‌ പട്ടിക താരതമ്യം

50 50 == 45 : തെറ്റ്‌
18 18 == 45 : തെറ്റ്‌
48 48 == 45 : തെറ്റ്‌
35 35 5545 : തെറ്റ്‌
45 45 ==45 : ശരി

26

12

ചിത്രം 8.3 ദലിത തിദതത്‌
രേഖീയ തിരയലിന്റെ അല്‍ഗോരിതം
1. ആരംഭിക്കുക
2. 14൦ ന്റെ വില സ്വീകരിക്കുക
3 1൦0
4. ഘട്ടങ്ങള്‍ 5, 6 എന്നിവ I <— N-1 ആകുന്നതുവരെ ആവര്‍ത്തിക്കുക
5. AR[I] ലേയ്ക്ക്‌ ഡാറ്റ സ്വീകരിക്കുക
6 1൦1൨
7. ITEM ന്റെ വില സ്വീകരിക്കുക
8. 1൦0, 10൦൦0
ക ഒന്നാം വര്‍ഷ കമ്പ്യൂട്ടര്‍ സയന്‍സ്‌ 8. അറെകള്‍

9. ഘട്ടങ്ങള്‍ 10, 11 എന്നിവ I< N-1 ആകുന്നതുവരെ ആവര്‍ത്തിക്കുക
10. 1 ചിയ] = ITEM ആണെങ്കില്‍ LOC <1, ഘട്ടം 12 ല്‍ പോകുക
11. 1൦15

12. IFLOC=1 ആണെങ്കില്‍ തിരയല്‍ വിജയിച്ചു എന്ന്‌ പ്രദര്‍ശിപ്പിക്കുക അല്ലെങ്കില്‍
തിരയല്‍ പരാജയപ്പെട്ടു എന്നും പ്രദര്‍ശിപ്പിക്കുക.

13. അവസാനിപ്പിക്കുക

#include <iostream>
using namespace std;
int main()
{
int AR[25], N;
int I, ITEM, LOC=-1;
cout<<"How many elements? ";
cin>>N;
cout<<"Enter the array elements: ";
for(I=0; I<n; I++)
cin>>AR[I];
cout<<"Enter the item you are searching for: "

cin>>ITEM;
for(I=0; I<N; I++)
if (AR[I] == ITEM)
{
2,051;
break;
}
if (LOC!=-1)

cout<<"The item is found at position "<<LOC+1;
else

cout<<"The item is not found in the array";
return 0;

}
ഓട്ട്പുട്ടിന്റെ മാതൃക:

How many Elements? 7

Enter the array elements: 12 18 26 35 45 48 50
Enter the item you are searching for: 35

The item is found at position 4
ഒന്നാം വര്‍ഷ കമ്പ്യൂട്ടര്‍ സയന്‍സ്‌

How many Elements? 7
Enter the array elements: 12 18 26 35 45 48 50
Enter the item you are searching for: 25

The item is not found in the array

പട്ടികയുടെ മുന്‍പന്തിയിലാണ്‌ തിരയേണ്ട അംഗമെങ്കില്‍ ഏതാനും താരതമ്യങ്ങള്‍
കൊണ്ട്‌ രേഖീയ തിരയല്‍ പ്രകിയ അവസാനിക്കും. പട്ടികയുടെ അവസാന ഭാഗത്താണ്‌
തിരയേണ്ട അംഗമെങ്കില്‍ തിരയല്‍ പ്രക്രിയയിലെ താരതമ്യങ്ങളുടെ എണ്ണം വളരെ വലു
തായിരിക്കും, ഉദാഹരണത്തിന്‌ 10000 അംഗങ്ങളുള്ള ഒരു പട്ടികയില്‍ പരമാവധി താരത
മ്ൃങ്ങളുടെ എണ്ണം 10000 ആയിരിക്കും.

0. ബൈനറി തിരയല്‍ (Binary Search)

നമ്മള്‍ വിശകലനം ചെയ്ത രേഖീയ തിരയല്‍ അല്‍ഗോരിതം ലളിതവും കുറച്ച്‌ അംഗ
ങ്ങളുളള അറെകള്‍ക്ക്‌ യോജിച്ചതുമാണ്‌. എന്നാല്‍ അറെയില്‍ നിരവധി അംഗങ്ങള്‍ ഉണ്ടെ
ങ്കില്‍ ധാരാളം തിരയലുകള്‍ ആവശ്യമായി വരും. ഈ സാഹചര്യത്തില്‍ കൂടുതല്‍ കാര്യ
ക്ഷമമായ ഒരു അല്‍ഗോരിതം ഉപയോഗിക്കേണ്ടതുണ്ട്‌. അറെയിലെ അംഗങ്ങളെ ആരോ
ഹണ ക്രമത്തിലോ അവരോഹണ ക്രമത്തിലോ ക്രമീകരിച്ചിട്ടുണ്ടെങ്കില്‍ തിരച്ചില്‍ സമയം
കുറയ്ക്കാന്‍ കഴിയുന്ന കൂടുതല്‍ മെച്ചപ്പെട്ട ബൈനറി തിരയല്‍ അല്‍ഗോരിതം നമുക്ക്‌
ഉപയോഗിക്കാന്‍ കഴിയും

ഉദാഹരണത്തിന്‌, ഒരു നിഘണ്ടുവില്‍ “മോഡം” എന്ന പദത്തിന്റെ അര്‍ത്ഥം കണ്ടെത്തണ
മെന്ന്‌ കരുതുക. തീര്‍ച്ചയായും നമ്മള്‍ ഒന്നാമത്തെ പേജിന്റെ ആദ്യ വാക്കു മുതല്‍ തിരച്ചില്‍
ആരംഭിക്കുകയില്ല, മറിച്ച്‌ നമ്മള്‍ തിരയുന്ന വാക്ക്‌ ഏതാണ്ട്‌ ഉദ്ദേശം വെച്ച്‌ നിഘണ്ടു
തുറക്കുന്നു. നമുക്ക്‌ തിരയേണ്ട വാക്ക്‌ ആ പുറത്ത്‌ ഇല്ലെങ്കില്‍ പിന്നീടുള്ള തിരച്ചില്‍ ഒരു
പകുതി അവഗണിച്ച്‌ മറ്റെ പകുതിയില്‍ തിരയുന്നു. തിരച്ചില്‍ നടത്തി ആവശ്യമായ പദം
കണ്ടെത്തുവരെ അല്ലെങ്കില്‍ നിഘണ്ടുവില്‍ ഈ പദം ഇല്ല എന്ന്‌ ഉറപ്പാക്കുക്കുന്നതു
വരെ ഈ പ്രകിയ തുടര്‍ന്നുകൊണ്ടേയിരിക്കും. ഈ തിരച്ചില്‍ രീതി ഒരു നിഘണ്ടുവില്‍
സാധ്യമാണ്‌, കാരണം വാക്കുകള്‍ അക്ഷരമാലയുടെ ആരോഹണ്ക്രമത്തിലാണ്‌ അവിടെ
ക്രമീകരിച്ചിരിക്കുന്നത്‌.

ബൈനറി തിരയല്‍ അല്‍ഗോരിതം കുറഞ്ഞ തിരച്ചിലുകള്‍ കൊണ്ട്‌ പട്ടികയില്‍നിന്നും
ഒരു അംഗത്തിന്‍റെ സ്ഥാനം കണ്ടെത്തുന്നു.

ബൈനറി തിരയലിന്റെ അല്‍ഗോരിതം
1. ആരംഭിക്കുക
2. MAX ന്റെ വില സ്വീകരിക്കുക
3. 1-0
4. ഘട്ടങ്ങള്‍ 5, 6 agama: I = MAX -1 ആകുന്നതുവരെ ആവര്‍ത്തിക്കുക
5. LIST [I] ലേയ്ക്ക്‌ ഡാറ്റ സ്വീകരിക്കുക

6. 111

7. ITEM ന്റെ വില സ്വീകരിക്കുക
(5 ഒന്നാം വര്‍ഷ കമ്പ്യൂട്ടര്‍ സയന്‍സ്‌ 8. അറെകള്‍

8. FIRST ൦ 0, LAST — MAX -1

9. FIRST = LAST ആകുന്നതുവരെ ഘട്ടങ്ങള്‍ 10 മുതല്‍ 12 വരെ ആവര്‍ത്തിക്കുക
10. MIDDLE ൦ (FIRST + LAST) / 2

11. IF LIST [MIDDLE] = ITEM ആണെങ്കില്‍ LOC < 1, ഘട്ടം 13 ല്‍ പോകുക

12. IF ITEM < LIST [MIDDLE] ആണെങ്കില്‍ LAST <— MIDDLE-1 അല്ലെങ്കില്‍ FIRST
< MIDDLE+1

13. 111,00൦ = 1 ആണെങ്കില്‍ തിരയല്‍ വിജയിച്ചു എന്ന്‌ പ്രദര്‍ശിപ്പിക്കുക അല്ലെങ്കില്‍
തിരയല്‍ പരാജയപ്പെട്ടു എന്നും പ്രദര്‍ശിപ്പിക്കുക.

14. അവസാനിപ്പിക്കുക

#include <iostream>
using namespace std;
int main()
{ int LIST[25],MAX;
int FIRST, LAST, MIDDLE, I, ITEM, LOC=-1;
cout<<"How many elements? ";
cin>>MAX;
cout<<"Enter array elements in ascending order: ";
for (1=0; <MAX; I++)
cin>>LIST[I];
cout<<"Enter the item to be searched: ";
cin>>ITEM;
FIRST=0;
LAST=MAX-1;
while (FIRST<=LAST)
{

MIDDLE= (FIRST+LAST) /2;
if(ITEM == LIST[MIDDLE])
{

LOC = MIDDLE;
break;

if (ITEM < LIST[MIDDLE])
LAST = MIDDLE-1;
else
FIRST = MIDDLE+1;
}
if (LOC != -1)
ഒന്നാം വര്‍ഷ കമ്പ്യൂട്ടര്‍ സയന്‍സ്‌

cout<<"The item is found at position "<<LOC+1;
else

cout<<"The item is not found in the array";
return 0;

}
ഓട്ട്പുട്ടിന്റെ മാതൃക:

How many elements? 7
Enter array elements in ascending order: 21 28 33 35 45 58 61
Enter the item to be searched: 35

The item is found at position 4
ബൈനറി തിരയല്‍ പ്രവര്‍ത്തനം വ്യക്തമാക്കുന്നതിന്‌ താഴെപ്പറയുന്ന 7 (MAX=7) അംഗ
ങ്ങളുള്ള അറെ പരിഗണിക്കാം, തിരയേണ്ടുന്ന അംഗം 45 ആണെന്നും കരുതുക.

0 1 2 3 4 5 6

MAX 7

FIRST=0
LAST =6

FIRST<=LAST,

ആയതിനാല്‍ നമുക്ക്‌ പ്രവര്‍ത്തനം ആരംഭിക്കാം

0 1 > 3 4 5 g __ MIDDLE= (FIRST+LAST)/2 = (0+6)/2=3

ഉവിടെ LIST[MIDDLE] അതായത്‌, LIST[3]
21; 28) 33) 35 | 45 | 58 | 61 ന്റെ വിലയും 45 ഉം തുല്യമല്ല, എന്നാല്‍ LIST[3]
ന്റെ വില തിരയല്‍ വിലയേക്കാള്‍ കുറവാണ്‌.
അതിനാല്‍

FIRST = MIDDLE - 1-3 1-4, LAST=6

FIRST<=LAST,

ആയതിനാല്‍ അടുത്ത തിരച്ചില്‍ ആരംഭിക്കാം MIDDLE = (FIRST+LAST)/2 = (4+6)/2=5

0 1 2 3 4 5 6 ഉവിടെ LIST[MIDDLE] അതായത്‌, LIST[5]
ന്റെ വിലയും 45 ഉം തുല്യമല്ല, എന്നാല്‍ LIST[5]
ന്റെ വില തിരയല്‍ വിലയേക്കാര്‍ വലുതാണ്‌.

അതിനാല്‍
FIRST = 4, LAST = MIDDLE - 1-5 -1-4,

FIRST<=LAST,
ആയതിനാല്‍ അടുത്ത തിരച്ചില്‍ ആരംഭിക്കാം

oi 2 3 4 MIDDLE = (FIRST+LAST)/2 = (4+4)/2 =4

5 6
21 28 33 35 45 58 61 ഉവിടെ LIST[MIDDLE] അതായത്‌, LIST[4]
ന്റെ വിലയും 45 ഉം തുല്യമാണ്‌, കൂടാതെ തിര

യല്‍ വിജയകരമായി അവസാനിച്ചിരിക്കുന്നു.
ബൈനറി സെര്‍ച്ചില്‍, 100,00,00,000 (100 കോടി) അംഗങ്ങളുള്ള ഒരു അറെയില്‍ ഒരു
അംഗം തിരയാന്‍ പരമാവധി 30 താരതമ്യങ്ങള്‍ ആവശ്യമാണ്‌. അറെയിലെ അംഗങ്ങളുടെ
എണ്ണം ഇരട്ടിയായെങ്കില്‍, ഒരു താരതമ്യം മാത്രമേ കൂടുതലായി ആവശ്യമുള്ളു.

പട്ടിക 8.1 ബൈനറി തിരയലും രേഖീയ തിരയലും തമ്മിലുളള വൃത്യാസം കാണിച്ചിരിക്കുന്നു:

രേഖീയ തിരയല്‍ ബൈനറി തിരയല്‍

© FMM ഏതെങ്കിലും രീതിയില്‍ ക്രമികരിക്കേ © അംഗങ്ങളെ ആരോഹണ ക്രമത്തിലോ അവ

ങരില്ല രോഹണ ക്രമത്തിലോ ക്രഥീകരിച്ചിരിക്കണം
© MEW പ്രവര്‍ത്തനത്തിന്‌ കൂടു തല്‍ സഥയം © MEWS പ്രവര്‍ത്തനത്തിന്‌ വളരെ കുറച്ച്‌
എടുക്കുന്നു സമയമേ ആവശ്യമുള്ളു

© എല്ലാ അംഗങ്ങളേയും സന്ദര്‍ശിക്കേണ്‍തായി വരാം| © എല്ലാ അംഗങ്ങളേയും സന്ദര്‍ശിക്കേണ്ടതില്ല
© £309) അംഗങ്ങളുള്ള അറെകള്‍ക്ക്‌ അനുയോജ്യം. | © കുടുതല്‍ അംഗങ്ങളുള്ള അറെകര്‍ക്ക്‌

അനുയോജ്യം

പട്ടിക 8.1 ബൈനറി ര്വെരച്ചും ഖിയ ദ്വെരീച്ചും തമ്മിലുള്ള താരതമ്യ
8.3 ദ്വിമാന അറെകള്‍ (Two dimensional Arrays)

50 വിദ്യാര്‍ത്ഥികളുടെ ആറു വൃത്യസ്ത വിഷയങ്ങളിലെ മാര്‍ക്കുകള്‍ നമുക്ക്‌ സൂക്ഷിക്കേ
ണ്ടതുണ്ട്‌ എന്ന്‌ കരുതുക. ഇവിടെ നമുക്ക്‌ 50 അംഗങ്ങള്‍ ഉള്ള 6 ഏകമാന അറെകള്‍
ഉപയോഗിക്കാം. എന്നാല്‍ ഈ ക്രമീകരണം കൈകാര്യം ചെയ്യുന്നത്‌ എളുപ്പമുള്ള കാര്യമല്ല.
ഈ സാഹചര്യത്തില്‍ നമുക്ക്‌ അറെകളുടെ അറെ അല്ലെങ്കില്‍ ദ്വിമാന അറെ ഉപയോ
ഗിക്കാം.

ഒരു ദ്വിമാന അറെയിലെ ഓരോ അംഗവും ഒരു അറെയാണ്‌. ഉദാഹരണമായി, AR[m][n]
എന്ന ദ്വിമാന അറെയില്‍ ൧ അംഗങ്ങളുള്ള ൩ അറെകള്‍ ഉണ്ട്‌. അല്ലെങ്കില്‍ ൩ വരികളും n
നിരകളും അടങ്ങുന്ന ഒരു പട്ടികയാണ്‌ AR [m][n] എന്ന ദ്വിമാന അറെ.

8.3.1 ദ്വിമാന അറെകളുടെ പ്രഖ്യാപനം (Declaring 2D Array)
C ++ ലെ ദ്വിമാന GRAD നീക്കിവെയ്ക്കലിന്റെ വാകൃഘടന താഴെ കൊടുക്കുന്നു
data_type array_name[rows] [columns];

വാകൃഘടനയില്‍ data_type എന്നത്‌ അറെയിലെ അംഗങ്ങളുടെ ഡേറ്റയുടെ ഇനമാണ്‌
സൂചിപ്പിക്കുന്നത്‌. array_name എന്നത്‌ അറെയുടെ പേരും rows എന്നത്‌ ദ്വിമാന
അറെയിലെ വരികളുടെ എണ്ണവും columns എന്നത്‌ ദ്വിമാന അറെയിലെ നിരകളുടെ
എണ്ണവും സൂചിപ്പിക്കുന്നു. വരികളുടെയും നിരകളുടെയും സൂചിക 0-ല്‍ ആരംഭിച്ച്‌ യഥാ
ക്രമം വരികള്‍ rows -1 ലും നിരകള്‍ coulmns- 1 ലും അവസാനിക്കും. 5 വരികളും 4
നിരകളും ഉള്ള ഒരു ദ്വിമാന അറെ പ്രഖ്യാപനത്തിന്റെ ഉദാഹരണം താഴെ കൊടുക്കുന്നു.

int marks[5][4];

ചിത്രം 8.4 ല്‍ കാണിച്ചിരിക്കുന്നത്‌ പോലെ. ഈ അറെയിലെ അംഗങ്ങള്‍ marks [0] [0],
marks[0] [1], marks[0] [2], marks[0] [3], marks[1] [0], marks[1] [1],
wy marks[4] [3] എന്നിവയാകുന്നു.
ഒന്നാം വര്‍ഷ കമ്പ്യൂട്ടര്‍ സയന്‍സ്‌

വരികള്‍

0 ഇന്ന്ന്ന്ന്ന്ന
marks [1][2]
1 eI
Ss
g 2
€ marks [4] [1]
3
4

allo 8.4 ഒരു BNGIM തഅറെയുടെ ഘെ

ഒരു ദ്വിമാന അറെക്ക്‌ ആവശ്യമായ മെമ്മറിയുടെ അളവ്‌ അതിന്റെ ഡാറ്റ ഇനം, വരികളുടെ
എണ്ണം, നിരകളുടെ എണ്ണം എന്നിവയുടെ അടിസ്ഥാനത്തിലാണ്‌ കണക്കാക്കുന്നത്‌. ദ്വിമാന
അറെക്ക്‌ ആവശ്യമായ ആകെ ബൈറ്റുകളുടെ എണ്ണം കണക്കുകൂട്ടുന്നതിനുള്ള സൂധരതവാ
ASO താഴെ കൊടുത്തിരിക്കുന്നു.

ആകെ ബൈറ്റുകള്‍ = Sizeof(ALOQ ഇനം) X വരികളുടെ എണ്ണം X നിരകളുടെ എണ്ണം

ഉദാഹരണത്തിന്‌, മുകളില്‍ പറഞ്ഞിരിക്കുന്ന marks [5] [4] ന്‌ 4x5xX4=80 ബൈറ്റ്‌
മെമ്മറി ആവശ്യമാണ്‌.

8.3.2 മ്െട്രിക്‌സായി ദ്വിമാന അറെകള്‍ (Matrices as 2D arrays)

ഗണിതശാസ്ത്രത്തിലെ ഉപയോഗപ്രദമായ ഒരു ആശയമാണ്‌ മ്മെടിക്സ്‌. ഒരു മ്മെടിക്സ്‌
എന്നത്‌ M വരികളിലും ൩ നിരകളിലുമായി ഒരു പട്ടികയുടെ രൂപത്തില്‍ ക്രമീകരിച്ചിരിക്കുന്ന
MXN സംഖ്യകളുടെ ഒരു ഗണമാണെന്ന്‌ നമുക്കറിയാം. ദ്വിമാന അറെയുടെ സഹായ
ത്തോടെ മ്മെടിക്സ്‌ പ്രതിനിധീകരിക്കാനാകും. ഒരു ദ്വിമാന അറെ പ്രോസസ്‌ ചെയ്യുന്നതിന്‌
നിങ്ങള്‍ നെസ്റ്റഡ്‌ ലൂപ്പ്‌ ഉപയോഗിക്കണം. ഒരു ലൂപ്പ്‌ വരികളേയും അടുത്തത്‌ നിരകളേയും
പ്രോസസ്സുചെയ്യുന്നു. സാധാരണയായി പുറത്തെ ലൂപ്പ്‌ വരികള്‍ക്കും അകത്തെ ലൂപ്പ്‌
നിരകള്‍ക്കും വേണ്ടിയുള്ളതാണ്‌. പ്രോഗ്രാം 8.7 ഉപയോഗിച്ച്‌ ൩ വരികളും n നിരകളും ഉള്ള
ഒരു മ്മെടിക്സ്‌ പ്രോസസ്സ്‌ ചെയ്യുന്നു.

#include <iostream>

using namespace std;

int main()

{ int m, n, row, col, mat[10] [10];
ക ഒന്നാം വര്‍ഷ കമ്പ്യൂട്ടര്‍ സയന്‍സ്‌ 8. അറെകള്‍

cout<< "Enter the order of matrix: ";
cin>> m >> n;
cout<<"Enter the elements of matrix\n";
for (row=0; row<m; rowt+)
for (col=0; col<n; 01) ഒ്രട്രിക്സ്‌
cin>>mat [row] [col]; = oe |
cout<<"The given matrix is:";
for (row=0; row<m; rowt+)
{ =
cout<<endl; >
for (col=0; col<n; 01)
cout<<mat [row] [col] <<"\t";

അംഗങ്ങളെ ഒ്ര്രിക്‌സ്‌

മാതുകയില്‍ പ്രദര്‍ശിഭിക്കല്‍

}

return 0;

ഓട്ട്പുട്ടിന്റെ മാതൃക:

Enter the order of matrix: 3 4
Enter the elements of matrix

1 2 3 4 2 3 4 5 3 4 5 6
The given matrix is:
1 2 3 4 മ്രെ്രിക്സിലെ അംഗങ്ങളെ നല്‍കുന്നത്‌
2 3 4 5 തുടര്‍ച്ചയായും അവയെ [nIKOWlaagmoy

ഒരു മ്ര്രിക്സിന്റെ മാതൃകയിലുമാണെന്നത്‌
ശ്രദ്ധിക്കുക.

3 4 5 6

രണ്ടു മ്മെടിക്സുകളുടെ ക്രമവും അംഗങ്ങളേയും സ്വീകരിച്ച്‌ അവയുടെ തുക കണ്ടു
പിടിക്കുന്നതിനുള്ള ഒരു പ്രോഗ്രാം നമുക്ക്‌ ചര്‍ച്ച ചെയ്യാം.

#include <iostream>
#include <cstdlib>
using namespace std;
int main()
{ int ml, nl, m2, n2, row, col;
int A[10][10], B[10][10], C[10] [10];
cout<<"Enter the order of first matrix: "
cin>>ml1>>n1;
cout<<"Enter the order of second matrix: "

exit()
ഫംഗ്ഷന്‍ ഉപയോഥി
ക്കുന്നതിനായി

©) 5 ഒന്നാം വര്‍ഷ കമ്പ്യൂട്ടര്‍ സയന്‍സ്‌ 8. അറെകള്‍

cin>>m2>>n2;
if(ml!=m2 || nl!=n2)
{

cout<<"Addition is not possible
exit (0);

2 മ്രെ്രിക്സുകളുടെ ഓര്‍ഡര്‍
വൃത്യാസ്മാണെങ്കില്‍ പ്രോഗ്രാം
അവസാനിരിക്കുന്നു.
cout<<"Enter the elements of first matrix\n";

for (row=0; row<ml; rowtt) -
ആദ്യ മ്്രിക്‌സിന്റെ
for (col=0; col<nl; col++) ടെ നിര്‍മാണം
cin>>A[row] [col];

cout<<"Enter the elements of second matrix\n";
for (row=0; row<m2; rowtt+)
രണ്ടാം മ്ര്രിക്‌സിന്റെ
for (col=0; col<n2; col+tt) നിര്‍മാണം
cin>>B[row] [col]; മ്ഭ്രിക്സിന്റെ
7 തുക കണ്ടുപിടിക്കുന്നു
for (col=0; col<nl; 01)

for (row=0; row<ml; rowtt)

C[row] [col] = A[row] [col] + B[row] [col];
cout<<"Sum of the matrices:\n";
for (row=0; row<ml; rowtt+)
{
cout<<endl;
for (col=0; col<nl; 01)
cout<<C [row] [col]<<"\t";

}
ഓട്ട്പുട്ടിന്റെ മാതൃക:

Enter the order of first matrix: 3 4
Enter the order of second matrix: 3 4
Enter the elements of first matrix

2 5 -3 7 ഉവിടെ അംഗങ്ങളെ നല്‍കിയിരി
5 12 4 9 ക്കുന്നത്‌ മ്്രിക്‌സ്‌ മാതൃകയിലാണ്‌,
ദ 0 6 പട പക്ഷെ ഉങ്ങനെ നല്‍കല്‍
Enter the elements of second matrix നി

1 4 3 5

4 -5 7 13

3 -4 7 9

Sum of the matrices:

3 9 0 12

9 7 11 22

0 -4 13 4
| ഒന്നാം വര്‍ഷ കമ്പ്യൂട്ടര്‍ സയന്‍സ്‌

പ്രോഗ്രാം 8.8 ല്‍ 14] = ൧൮] + 1111] എന്നതിനു പകരം [14] = ൧ - 111]
ഉപയോഗിച്ചാല്‍ രണ്ട്‌ മ്മെടിക്സുകള്‍ തമ്മിലുള്ള വൃത്യാസം കണ്ടുപിടിക്കാന്‍ കഴിയും.
ഇനി നമുക്ക്‌ സമചതുര മ്മെടിക്സിന്റെ വികര്‍ണ്ണ അംഗങ്ങളുടെ തുക കണ്ടുപിടിക്കാന്‍
ഒരു പ്രോ്രഗാം എഴുതാം. ഒരു മ്മെടിക്സിലെ വരികളുടേയും നിരകളുടേയും എണ്ണം ഒരേ
പോലെയാണെങ്കില്‍ അത്തരം മ്മെടിക്സ്‌ ഒരു സമചതുര മ്മെടിക്സ്‌ ആയിരിക്കും. ഒരു
സമചതുര മ്രെടിക്സിന്‌ രണ്ടു വികര്‍ണ്ണങ്ങള്‍ ഉണ്ട്‌. mat [0] [0], mat[1] [1],
mat[2][2],...,mat[n-1] [൩-1], അംഗങ്ങളെ മുന്‍നിര അല്ലെങ്കില്‍ മുഖ്യ,
വികര്‍ണ്ണ അംഗങ്ങള്‍ എന്ന്‌ വിളിക്കുന്നു. മുഖ്യ വികര്‍ണ അംഗങ്ങളുടെ തുക കണ്ടുപിടി
ക്കുന്നതിന്‌ പ്രോഗ്രാം 8.9 ഉപയോഗിക്കാം.

#include <iostream>

using namespace std;

int main()

{ int mat[10][10], n, i, j, s=0;
cout<<"Enter the rows/columns of square matrix: ";
cin>>n;
cout<<"Enter the elements\n";
for(i=0; i<n; itt)

for(j=0; 12% jtt)
cin>>mat [i] [jl];
cout<<"Major diagonal elements are\n";
for(i=0; i<n; itt)

{

തുക
കാണുന്നതിന്‌ വികിര്‍ണ
അംഗങ്ങളെ മാത്രം ഉപയോ

cout<<mat [i] [i] <<"\t"; രിക്കുന്നു

s = s + mat[i] [il];
}
cout<<"\nSum of major diagonal elements is: ";
cout<<s;

return 0;

}

ഓട്ട്പുട്ടിന്റെ മാതൃക:
Enter the rows/columns of square matrix: 3
Enter the elements

3 5 -2

7 4 0

2 8 -1

Major diagonal elements are
3 4 -1

Sum of major diagonal elements is: 6
ക ന്നാം വര്‍ഷ കമ്പ്യൂട്ടര്‍ സയന്‍സ്‌ 8. അറെകള്‍

ഓരോ മ്മെടിക്സിനും ഒരു ദ്രാന്‍സ്പോസ്‌ ഉണ്ട്‌. വരിയിലെ അംഗങ്ങള്‍ നിരയായും
അല്ലെങ്കില്‍ തിരിച്ചും മാറ്റം വരുത്തിയാണ്‌ ഇത്‌ ലഭിക്കുന്നത്‌. പ്രോഗ്രാം 8.10 ഈ ല്രരകിയ
വ്യക്തമാക്കുന്നു.

#include <iostream>
using namespace std;
int main()
{ int ar[10][10], m, n, row, col;
cout<<"Enter the order of matrix: ";
cin>>m>>n;
cout<<"Enter the elements\n";
for (row=0; row<m; rowt++)
for(col=0; col<n; col+t)
cin>>ar [row] [col];
cout<<"Original matrix is\n";
for (row=0; row<m; rowt++)
{
cout<<"\n";
for(col=0; col<n; col+t)
cout<<ar [row] [col] <<"\t";
}
cout<<"\nTranspose of the entered matrix is\n";
for (row=0; row<n;

{

row++)

വരികളുടെയും നിരകളു
ടെയും എണ്ണം പരസ്പരം

cout<<"\n"; a
DMO ശ്രദ്ധിക്കുക

for(col=0; col<m; coltt)
cout<<ar[col] [row]<<"\t";

}

return 0; സുചികകളും പരസ്പരം

} മാറിയത്‌ ശ്രദ്ധിക്കുക.

ഓട്ട്പുട്ടിന്റെ മാതൃക:

Enter the order of matrix: 4 3
Enter the elements
3 5 -1

2 12 0 ഈ അംഗങ്ങളെ ഒരു
6 8 4 വരിയിലായും നല്‍കാ
7 പട 6 വുന്നതാണ്‌.
Original matrix is

3 5 -1
ക ഒന്നാം വര്‍ഷ കമ്പ്യൂട്ടര്‍ സയന്‍സ്‌ 8. അറെകള്‍

2 12 0

6 8 4

7 -5 6

Transpose of the entered matrix is
3 2 6 7

5 12 8 -5

-1 0 4 6

ഡാറ്റ പട്ടിക രൂപത്തില്‍ ക്രമീകരിക്കപ്പെടുമ്പോള്‍, ചില സാഹചര്യങ്ങളില്‍ നമുക്ക്‌ ഓരോ
വരിയിലേയും, നിരയിലേയും അംഗങ്ങളുടെ ആകെത്തുക ആവശ്യമായി വരും. പ്രോഗ്രാം
8.11 ഈ ചുമതല നിര്‍വ്വഹിക്കാന്‍ കമ്പ്യൂട്ടറിനെ സഹായിക്കുന്നു.

#include <iostream>

using namespace std;

int main()

{

int ar[10][10], rsum[10]={0}, csum[10]={0};

int m, n, row, col;

cout<<"Enter the number of rows & columns in the array: ";

cin>>m>>n;

cout<<"Enter the elements\n";

for (row=0; row<m; row++)
for(col=0; col<n; col+t)

cin>>ar[row] [col];
for (row=0; row<m; row++)

for(col=0; col<n; col+t)

{

വരിയിലെയും നിരയിലെയും
അംഗങ്ങളെ പ്രത്യേകം കൂട്ടു
കയും, ഓരോ തുകയും
പ്രസ്തുത അറെയിലെ അനുസൃത
മായ സ്ഥാനങ്ങളില്‍ സുക്ഷിക്കു
കയും ചെയ്യുന്നു.

rsum[row] += ar[row] [col];
csum[col] += ar[row] [col];
}
cout<<"Row sum of the 2D array is\n";
for (row=0; row<m; row++)
cout<<rsum[row] <<"\t";
cout<<"\nColumn sum of the 2D array is\n";
for(col=0; col<n; col+t)
cout<<csum[col]<<"\t";
return 0;
}
ഓട്ട്പുട്ടിന്റെ മാതൃക:
Enter the number of rows & columns in the array: 3 4
Enter the elements

3 12 5 0

4 -6 2 1

5 7 -6 2

Row sum of the 2D array is
20 1 8

Column sum of 2D array is
12 13 1 3

8.4 ബഹുമുഖ അറെകള്‍ (Multi dimensional arrays)

ഒരു ദ്വിമാന അറെയുടെ ഓരോ അംഗവും മറ്റൊരു അറെയായിരിക്കാം. അത്തരത്തിലുള്ള
ഒരു അറെയെ 3D (ര്രിമാന അറെ) അറെ എന്ന്‌ പറയുന്നു.

data_type array_name[size_1] [size_2] [size_3];

എന്ന പ്രസ്താവന ഉപയോഗിച്ച്‌ ഒരു ്രിമാന അറെയുടെ പ്രഖ്യാപനം നടത്താം. മൂന്നു
സൂചിക ഉപയോഗിച്ച്‌ ഒരു 3D അറെയുടെ അംഗങ്ങളെ ഉപയോഗിക്കുകകയും ചെയ്യാം.
൧൮11015113] ഒരു 3D Grad ആണെങ്കില്‍ ആദ്യത്തെ അംഗം Ar [0110][0] അവസാന
അംഗം Ar [9][4][2] ആയിരിക്കും. ഈ അറെയില്‍ 150 (10:൭൪) അംഗങ്ങള്‍ അടങ്ങി
യിരിക്കാം.

¢ നമുക്ക്‌ സംഗ്രഹിക്കാം

GON എന്നാല്‍ തുടര്‍ച്ചയായ മെമ്മറി സ്ഥാനങ്ങളില്‍ ശേഖരിച്ചു വച്ചിട്ടുള്ള ഒരേ തരത്തിലുള്ള
ഡാറ്റകളുടെ സമൂഹമാണ്‌. ഒരു പേരില്‍ ഒരേ തരത്തിലുള്ള ഒരു കുട്ടം വിലകള്‍ ശേഖരിക്കുന്നതിനായി
അറെകര്‍ ഉപയോഗിക്കുന്നു. ഒരു അറെയിലെ എല്ലാ അംഗങ്ങളേയും സൂചികയുടെ സഹായത്താല്‍
ഉപയോഗിക്കുവാന്‍ കഴിയും. for ലൂഭിന്റെ സഹായത്തോടെ അറെയിലെ അംഗങ്ങളെ എളുകത്തില്‍
ഉപയോഗിക്കുന്നു. കടന്നുപോകല്‍, ക്രമക്െടുത്തല്‍, തിരയല്‍ തുടങ്ങിയ പ്രവര്‍ത്തനങ്ങള്‍
അറെകളില്‍ നടത്തകെടുന്നു. അറെയിലെ അംഗങ്ങളെ ക്രമികരിക്കുന്നതിന്‌ ബബിള്‍ സോര്‍ട്ട്‌,
സെലക്ഷന്‍ സോര്‍ട്ട്‌ എന്നീ രീതികള്‍ ഉപയോഗിക്കുന്നു. ഒരു അറെയില്‍ ഒരു അംഗത്തെ തിരയാന്‍
രേഖീയ തിരയല്‍, ബൈനറി തിരയല്‍ എന്നി വിദ്യകള്‍ ഉപയോഗിക്കുന്നു. മ്ര്്രിക്സ്‌ സംബന്ധമായ
കാര്യങ്ങള്‍ ചെയ്യുന്നതിന്‌ ദ്വിമാന CHONG ഉപയോഗിക്കുന്നു. ദ്വിമാന അറെയിലുള്ള ഒരു അംഭത്തെ
പരാമര്‍രിക്കുന്നതിന്‌ നമുക്ക്‌ രണ്ട്‌ സൂചികകള്‍ ഉങ്ങാകും. ദ്വിമാന അറെകള്‍ കൂടാതെ, ബഹുമുഖ
അറെകളും സൃഷ്ടിക്കാന്‍ കഴിയും.
ശു wonensens

ഈ അധ്യായത്തിന്റെ പൂര്‍ത്തികരണത്തിനുശേഷം പഠിതാവിന്‌ താഴെ പറയുന്നവ ആര്‍ജിക്കാന്‍ കഴിയും.

© അറെ ഉപയോഗിക്കേണ്ട സാഹചര്യങ്ങളുടെ തിരിച്ചറിവ്‌

൭ ഏകമാന, ദ്വിമാന അറെകളുടെ പ്രഖ്യാപനവും പ്രാരംഭവില നല്‍കലും

൭ തിരയല്‍, ക്രമകെടുത്തല്‍ തുടങ്ങി വിവിധങ്ങളായ അറെ പ്രവര്‍ത്തനങ്ങളുടെ യുക്തി നിര്‍മ്മാണം
൭ ദ്വിമാന അറെയുടെ സഹായത്തോടെ മഒ്രട്രിക്സുമായി ബന്ധകെട്ട പ്രശ്ന പരിഹാരങ്ങള്‍

ലാബ്‌ പ്രവര്‍ത്തനങ്ങള്‍

1. 12 മാസത്തെ വില്‍പ്പനയുടെ തുക SalesAmt എന്ന അറെയിലേക്ക്‌ ഇന്‍പുട്ട്‌ ചെയ്‌
തതിനുശേഷം വില്‍പനയുടെ ആകെത്തുകയും ശരാശരിയും കണ്ടെത്തുന്നതിനുള്ള
ഒരു C++ പ്രോഗ്രാം എഴുതുക.

2. N സംഖ്യകളുടെ ഒരു അറെ നിര്‍മ്മിച്ചതിന്‌ ശേഷം സംഖ്യകളുടെ ശരാശരി കണ്ടെത്തു
കയും ശരാശരിക്ക്‌ മുകളില്‍ ഉള്ളു സംഖ്യകള്‍ പ്രദര്‍ശിപ്പിക്കുകയും ചെയ്യുന്നതിന്‌
ഒരു C++ പ്രോഗ്രാം എഴുതുക.

3. വില, അളവ്‌, തുക്കം എന്നിവ ശേഖരിക്കുന്നതിനായി price, quanttiy, amount എന്നി
ങ്ങനെ 3 അറെകള്‍ നിര്‍മ്മിക്കുക. ഓരോ അറെയും 10 അംഗങ്ങളെ ഉള്‍ക്കൊള്ളാന്‍
കഴിയുന്നവയായിരിക്കണം. price, quanttiy എന്നീ അറകളിലേക്ക്‌ വിലകള്‍ നല്‍കുക.
amount അറെയുടെ മൂല്യം ബ്ബ = price[i] x quanttiy[i] എന്നായിരിക്കണം. എല്ലാ
ഡാറ്റയും നല്‍കിയ ശേഷം, താഴെ കൊടുത്തിരിക്കുന്ന രീതിയില്‍ ഓട്ട്പൂട്ട്‌ ്രദര്‍ശി
പ്പിക്കുന്നതിനു വേണ്ടിയുള്ള ഒരു C++ പ്രോഗ്രാം എഴുതുക

4. ഒരു അറെയിലേക്ക്‌ 10 സംഖ്യകള്‍ നല്‍കിയതിന്‌ ശേഷം, അവയിലെ ഏറ്റവും വലിയ
സംഖ്യയും ചെറിയ സംഖ്യയും കണ്ടുപിടിക്കുന്നതിനുള്ള ഒരു C++ പ്രോഗ്രാം എഴു
തുക.

5. ഓര്‍ഡര്‍ ൨ ആയിട്ടുള്ള ഒരു സമചതുര മ്മെടിക്സിന്റെ വികര്‍ണ്ണത്തിനു മുകളിലുള്ള
അംഗങ്ങളെ പ്രദര്‍ശിപ്പിക്കുന്നതിനുള്ള C++ പ്രോഗ്രാം എഴുതുക. ഉദാഹരണത്തിന്‌
താഴെ കാണുന്ന മ്മെടിക്സ്‌ പരിഗണിക്കുക.
ഒന്നാം വര്‍ഷ കമ്പ്യൂട്ടര്‍ സയന്‍സ്‌

2 3 1

7 1 5

2 5 1
ഉത്തരം ഇവിടെ കാണുന്ന വിധമായിരിക്കും 2 3 1
1 5
1

ട. ഓര്‍ഡര്‍ N ആയിട്ടുള്ള ഒരു സമചതുര മ്മെടിക്സിന്റെ വികര്‍ണ്ണത്തിനു താഴെയുള്ള
അംഗങ്ങളെ പ്രദര്‍ശിപ്പിക്കുന്നതിനുള്ള C++ പ്രോ്രഗാം എഴുതുക. ഉദാഹരണത്തിന്‌
താഴെ കാണുന്ന OA(SIA A പരിഗണിക്കുക.

2 3 1
7 1 5
2 5 1
ഉത്തരം ഇവിടെ കാണുന്ന വിധമായിരിക്കും 2
7 1
2 5 7

7. താഴെ കാണിച്ചിരിക്കുന്നതുപോലെ പാസ്‌കല്‍സ്‌ ത്രികോണം (Pascal's Triangle)
പ്രദര്‍ശിപ്പിക്കുന്നതിനുള്ള ഒരു C++ പ്രോഗ്രാം എഴുതുക

1

1 2 1

1 3 3 1

1 4 6 4 1

മാതക ചാണ ॥॥॥॥॥!॥॥!॥॥॥॥॥॥॥॥॥॥॥॥॥!॥

ഒരു അറെയിലെ എല്ലാ അംഗങ്ങളും ഡാറ്റ ഇനം ആയിരിക്കണം.

2. പത്തു അംഗങ്ങളുള്ള ഒരു അറെയുടെ സൂചിക മുതല്‍ വരെയുള്ള
സംഖ്യകള്‍ ആയിരിക്കും.

3. ഒരു അറെയിലെ അംഗത്തെ ഉപയോഗിച്ച്‌ ഉപയോഗിക്കാം.

4. AR ഒരു അറെയാണെങ്കില്‍, AR[7] എത്‌ അംഗത്തെ പ്രതിനിധാനം ചെയ്യുന്നു?
5. int a[3]={2,3,4}; എന്ന അറെയില്‍ all] ന്റെ വില എന്ത്‌?

6. int a[J={1,2,3,4}; എന്ന അറെയില്‍ ല[2] ന്റെ വില എന്ത്‌?

7. int a[5]={1,2,3,4}; എന്ന അറെയില്‍ al4] ന്റെ വില എന്ത്‌?

8. 89, 75, 82, 93, 78, 95. എന്നീ സ്‌കോറുകള്‍ SCOre എന്ന അറെയിലേക്ക്‌ പ്രാരംഭ വില
യായി നല്കുന്നതിനുള്ള പ്രസ്താവന എഴുതുക

9. ഒരു അറെയിലെ എല്ലാ അംഗങ്ങളേയും പ്രദര്‍ശിപ്പിക്കുന്നത്‌ പ്രവര്‍ത്ത
നത്തിന്‌ ഒരു ഉദാഹരണമാണ്‌.
ന്നാം വര്‍ഷ കമ്പ്യൂട്ടര്‍ സയന്‍സ്‌

int a[2][3]; എന്ന അറെ നിര്‍മിക്കുന്നതിന്‌ എത്ര ബൈറ്റുകള്‍ ആവശ്യമാണ്‌.

M അംഗങ്ങളുള്ള അറെയില്‍, ബൈനറി തിരയലില്‍ ഒരു അംഗത്തെ കണ്ടെത്തുന്ന
തിന്‌ പരമാവധി തിരയല്‍ ആവശ്യമാണ്‌. എന്നാല്‍ അംഗങ്ങളുടെ എണ്ണം ഇരട്ടിയെ
ങ്കില്‍ എത്ര തിരയല്‍ ആവശ്യമായി വരും?

Mark എന്ന അറെയിലേക്ക്‌ പുജ്യം പ്രാരംഭ വിലയായി നല്കുന്നതിനുള്ള
പ്രസ്താവന എഴുതുക.

പ്രസ്താവന ശരിയോ തെറ്റോ: 10 അംഗങ്ങളുള്ള അറെയിലെ പതിനാറാമത്തെ
അംഗത്തെ ഉപയോഗിക്കുവാന്‍ നിങ്ങള്‍ ശ്രമിക്കുകയാണെങ്കില്‍ കമ്പൈലർ തെറ്റ്‌
രേഖപ്പെടുത്തും.

ലഘു ഉപന്യാസ ചോദ്യങ്ങള്‍

1.

2.

3.

അറെ നിര്‍വൃചിക്കുക.
int studlist[1000]; എന്ന പ്രഖ്യാപന പ്രസ്താവന അര്‍ത്ഥമാക്കുന്നത്‌ എന്ത്‌?
ഒരു ഏകമാന അറെയ്ക്കായി മെമ്മറി അനുവദിക്കുന്നത്‌ എങ്ങനെ?

10 അംഗങ്ങളുള്ള അറെയിലേക്ക്‌ സംഖ്യകളെ സ്വീകരിച്ച്‌ അവയിലെ ഒറ്റ സംഖ്യയു
ടെയും ഇരട്ട സംഖ്യയുടെയും എണ്ണം പ്രദര്‍ശിപ്പിക്കുന്നതിനുള്ള C++ കോഡ്‌ ശകല
ങ്ങള്‍ എഴുതുക.

2, 3, 4, 5 എന്നീ സംഖ്യകള്‍ ഒരു അറെയില്‍ ശേഖരിക്കുന്നതിനുള്ള (പ്രാരംഭ
വിലനല്‍കല്‍ പ്രസ്താവന എഴുതുക.

കടന്നുപോകല്‍ എന്നാല്‍ എന്ത്‌?
ക്രമപ്പെടുത്തല്‍ MQ» Mana.
തിരയല്‍എന്നാല്‍ എന്ത്‌?

ബബിള്‍ സോര്‍ട്ട്‌ എന്നാല്‍ എന്ത്‌?
ബൈനറി തിരയല്‍ എന്നാല്‍ എന്ത്‌?
ഒരു ദ്വിമാന GRAD നിര്‍വ്ൃവചിക്കുക

ഒരു ദ്വിമാന അറെയ്ക്കായി മെമ്മറി അനുവദിക്കുന്നത്‌ എങ്ങനെ?

ഉപന്യാസ ചോദ്യങ്ങള്‍

1.

അറെ AR 25, 81, 36, 15, 45, 58, 70 എന്നീ അംഗങ്ങള്‍ ഉള്‍ക്കൊള്ളുന്നു. 45 എന്ന വില
തിരയുന്നതിനായുള്ള ബൈനറി തിരയല്‍ രീതിയുടെ പ്രവര്‍ത്തനം വിശദമാക്കുക.

തുല്യ വലിപ്പത്തിലുള്ള രണ്ടു അറെയില്‍ അംഗങ്ങളെ സ്വീകരിച്ച്‌ അതത്‌ സ്ഥാന
ങ്ങളിലെ അംഗങ്ങള്‍ തമ്മിലുള്ള വ്യത്യാസം കണ്ടെത്തുന്നതിനുള്ള C++ പ്രോഗ്രാം

എഴുതുക.
= © ഒന്നാം വര്‍ഷ കമ്പ്യൂട്ടര്‍ സയന്‍സ്‌

3, 32, 25, 44, 16, 37, 12 എന്നീ അംഗങ്ങളെ ക്രമീകരിക്കുന്നതിനുളള ബബിള്‍ സോര്‍ട്ടിന്റെ
പ്രവര്‍ത്തനരീതി വിശദീകരിക്കുക.

24, 45, 98, 56, 76, 24, 15 എന്നീ അംഗങ്ങളെ ക്രമീകരിക്കുന്നതിനുള്ള രേഖീയ തിരയ
ലിന്റെ പ്രവര്‍ത്തനരീതി വിശദീകരിക്കുക.

രണ്ട്‌ മ്രെടിക്സുകള്‍ തമ്മില്‍ വ്യവകലനം ചെയ്യുന്നതിനുള്ള ഒരു പ്രോഗ്രാം എഴുതുക.

ഒരു ദ്വിമാന അറെയില്‍ അംഗങ്ങളുടെ തുകയും ശരാശരിയും കണ്ടെത്താനായി
പ്രോഗ്രാം എഴുതുക.

ഒരു ദ്വിമാന അറെയിലെ ഏറ്റവും വലിയ സംഖ്യ കണ്ടെത്തുന്നതിനുള്ള പ്രോഗ്രാം
എഴുതുക.

FESO GSAS IGRI IK
സ്ട്രിങ്‌ കൈകാര്യം ചെയ്യലും
(_ ഇന്‍പൂട്ട്‌ /ഓട്ട്പൂട്ട്‌ ഫങ്ഘനുകളും

പ്രധാന ആശയങ്ങള്‍ ഒരേ തരത്തിലുള്ള അനേകം ഡാറ്റയെ കൈകാര്യം
ചെയ്യുന്നതിനുള്ള ഫലപ്രദമായ ഉപാധിയാണ്‌ അറെ
കള്‍ (Arrays) എന്ന്‌ നാം പഠിച്ചു കഴിഞ്ഞു. ഇതിനു
മുമ്പ്‌ ചര്‍ച്ച ചെയ്ത മിക്കവാറും പ്രോഗ്രാമുകളിലും

© GRAN ഉപയോഗിച്ചുള്ള സ്്രിങ്‌
കൈകാര്യം ചെയ്യല്‍

* സ്ട്രിങ്ങിനു വേണ്ടിയുള്ള മെമറി അറേകള്‍ ഉപയോഗിച്ചിരിക്കുന്നത്‌ ന്യൂമെറിക്‌ ഡാറ്റ
CRESTS ഇനങ്ങളെ പ്രോസസ്സ്‌ ചെയ്യുന്നതിനാണ്‌. എന്നാല്‍
* സ്്രിങ്ങിനു മേലുള്ള ഉന്‍പുട്ട്‌ /ടടടപുട്ട്‌ സ്ര്രിങ്‌ ടൈപ്പ്‌ ഡാറ്റയും ഉണ്ടെന്നത്‌ നമുക്കറിയാവുന്ന
പ്രവര്‍ത്തനങ്ങള്‍ ഒരു വസ്തുതയുമാണ്‌. അത്തരം ഡാറ്റയെ മെമ്മ

റിയില്‍ ശേഖരിക്കുന്നതും പ്രോസസ്സ്‌ ചെയ്യുന്നതും
നാം ഇവിടെ ചര്‍ച്ചചെയ്യുന്നു. കൂടാതെ സ്ട്രിങ്ങുക
ളെയും കാരക്റ്ററുകളെയും കൈകാര്യം ചെയ്യുന്നതി
നുള്ള ചില ഇന്‍പുട്ട്‌ /ഓട്ട്പുട്ട്‌ അന്തര്‍നിര്‍മിത anes
O getchar() ഷനുകളും (Built in functions) ഇവിടെ പ്രതിപാദിക്ക

O putchar() പ്പെടുന്നുണ്ട്‌.
9.1. GRAN ഉപയോഗിച്ചുള്ള സ്ട്രിങ്‌ കൈകാര്യം
ചെയ്യല്‍ (String handling using arrays)

© കാരക്റുര്‍ ഉന്‍പുട്ട്‌ //ഓട്ട്പുട്ട്‌
പ്രവര്‍ത്തനങ്ങക്ക്‌ വേണ്ടിയുള്ള
കണ്‍സോര്‍ ഫങ്ഷനുകള്‍

© Midas /ഒട്ട്പുട്ട്‌
പ്രവര്‍ത്തനങ്ങള്‍ക്കുള്ള
സ്ട്രീം ഫങ്ഷനുകള്‍ C++ ലെ ഒരുതരം ലിറ്ററലാണ്‌ സ്ര്രിങ്‌. പ്രോഗ്രാമു
കളില്‍ ഇവ കാണപ്പെടുന്നത്‌ ഉദ്ധരണിക്കുള്ളില്‍
(Double quotes) തുടര്‍ച്ചയായുള്ള കാരക്റ്ററുകളാ
യാണ്‌. നിങ്ങളോട്‌ പേര്‍ ശേഖരിക്കുവാനും പ്രദര്‍ശി
O ഒട്ട്പുട്ട്‌ ഫങ്ഷനുകള്‍ പ്പിക്കുന്നതിനുമുള്ള ഒരു പ്രോഗ്രാം എഴുതുവാന്‍
put(), write() ആവശ്യപ്പെട്ടുവെന്നിരിക്കട്ടെ. ഡാറ്റ ശേഖരിക്കുവാന്‍
വേരിയബിള്‍ ആവശ്യമാണെന്ന്‌ ഇതിനു മുമ്പ്‌ നാം
പഠിചിട്ടുണ്ട്‌. my_name എന്ന വേരിയബിള്‍ ഒരു ഐ
ഡന്റിഫയര്‍ ആയി ഇവിടെ നമുക്ക്‌ ഉപയോഗിക്കാം.
ഒരു വേരിയബിള്‍ ഉപയോഗിക്കുന്നതിനു മുമ്പ്‌ അത്‌
പ്രഖ്യാപിക്ക ണമെന്നുള്ളത്‌ ഈ അവസരത്തില്‍
തീര്‍ച്ചയായും ഓര്‍മിക്കേണ്ടതാണ്‌. സ്ര്രിങ്‌ ഡാറ്റയെ
oor സൂചിപ്പിക്കാനുള്ള അടിസ്ഥാന ഡാറ്റ ഇനം നിലവിലി
79720 ല്ലാത്തതിനാല്‍ ഏതു തരം ഡാറ്റയാണ്‌ സ്ര്രിങ്‌ ഡാറ്റ
ശേഖരിക്കുന്ന വേരിയബിള്‍ പ്രഖ്യാപനത്തിന്‌ ഉപ
യോഗിക്കാനാവുക എന്ന്‌ പറയാന്‍ സാധിക്കില്ല? അതു

O ഉന്‍പുട്ട്‌ ഫങ്ഷനുകള്‍
get(), getline()

(5 ഒന്നാം വര്‍ഷ കമ്പ്യൂട്ടര്‍ സയന്‍സ്‌

കൊണ്ട്‌ നമുക്ക്‌ char ഡാറ്റ ഇനത്തെക്കുക്കുറിച്ച്‌ ആലോചിക്കാം. എന്നാല്‍ അവിടെയും
ഒരു പ്രശ്നമുണ്ട്‌. char ഡാറ്റ ഇനത്തിന്‌ ഒരു കാരക്റ്റര്‍ മാത്രമേ ശേഖരിക്കുവാന്‍ കഴിയു
കയുള്ളു. അതുകൊണ്ടുതന്നെയാണ്‌ സ്ര്രിങ്‌ എന്നത്‌ തുടര്‍ച്ചയായ കാരക്റ്ററുകളുടെ
ഇന്‍പുട്ട്‌ ആയി സ്വീകരിക്കേണ്ടി വരുന്നത്‌ .

"Niketh" എന്ന പേര്‍ പരിഗണിക്കുക. ഇത്‌ ആറ്‌ കാരക്റ്ററുകള്‍ ഉള്‍ക്കൊള്ളുന്ന ഒരു
സ്ര്രിങ്‌ ആണ്‌. എന്നാല്‍ ഒരു കാരക്റ്റര്‍ അറെയ്ക്ക്‌ ഒന്നിലധികം കാ൪ക്റ്ററുകളെ
ശേഖരിക്കുവാന്‍ കഴിയുമെന്ന്‌ നമുക്കറിയാം. അതുകൊണ്ടു ഒരു അറേയെ താഴെ
കാണുന്നവിധം പ്രഖ്യാപിക്കാവുന്നതാണ്‌.

char my_name[10];

My_Name എന്ന്‌ പേരുള്ള അറേയില്‍ ഒരു ബൈറ്റ്‌ വീതം വലിപ്പമുള്ള തുടര്‍ച്ചയായ
പത്ത്‌ മെമ്മറി സ്ഥാനങ്ങള്‍ നിക്കിവച്ചിട്ടുണ്ട്‌. ഈ അറേയിലേക്ക്‌ താഴെ കാണുന്നത്‌
പോലെ പ്രാരംഭ വിലകള്‍ നല്‍കാവുന്നതാണ്‌.

char my_name[10] = { 'N','i','k','e','t','h'};
ചിധ്രം 9.108 മേല്‍ സൂചിപ്പിച്ച 90296 അറേയുടെ മെമ്മറി നീക്കിവെയ്പ്‌
ചിത്രീകരിച്ചിട്ടുണ്ട്‌. സ്ര്രിങ്ങിലെ കാരക്റ്ററുകള്‍ കോമായുപയോഗിച്ച്‌ വേര്‍തിരിച്ചാണ്‌

ശേഖരിക്കുന്നത്‌ എന്ന്‌ പ്രത്യേകം (്രദ്ധിക്കേണ്ടതാണ്‌ . ഇതേ ഡാറ്റ ഇന്‍പുട്ട്‌
ചെയ്യണമെങ്കില്‍ താഴെ പറഞ്ഞിരിക്കുന്ന C++ പ്രസ്താവന ഉപയോഗിക്കാം .

for (int i=0;i<6;it+)
cin>>my_name[i];

ഈ കോഡ്‌ പ്രവര്‍ത്തിക്കുന്ന സമയത്ത്‌ നാം "Niketh" എന്ന സ്ട്രിങ്ങിനകത്തെ ആറ്‌
കാരക്റ്ററുകള്‍ ഒന്നിന്‌ പുറകെ ഒന്നായി സ്പേസ്‌ ബാര്‍, ടാബ്‌ കീ അല്ലെങ്കില്‍ എന്റര്‍
കീ എന്നിവയില്‍ ഏതെങ്കിലും ഒന്നുപയോഗിച്ച്‌ വേര്‍തിരിച്ച്‌ വേണം ഇന്‍പുട്ട്‌ ചെയ്യേണ്ടത്‌.
മേല്‍ സൂചിപ്പിച്ച രണ്ടു രീതിയിലുമുള്ള മെമ്മറി നീക്കിവയ്ക്കലുകള്‍ താഴെ തന്നിരിക്കുന്ന

വിധത്തിലാണ്‌.
അറെയുടെ
പേര്‌
my_name
sfitetet ete? | | TL |e
സ്ക്രിപ്റ്റുകള്‍
0 1 2 3 4 5 6 7 8 9

ചിത്രം 9.1 AI0A0G അഥെയുടെ മെമറി നിക്കിവെയ്പ്‌

സ്്രിങ്ങുകള്‍ തുടര്‍ച്ചയായുള്ള കാരക്റ്ററുകള്‍ ആയതിനാല്‍ കാരക്റ്റര്‍ അറേയെ സ്ര്‍്ടി
ങ്ങുകള്‍ ശേഖരിക്കുന്നതിന്‌ ഉപയോഗിക്കാവുന്നതാണ്‌. എന്നിരുന്നാലും ഒരു സ്ട്രിങ്‌
നേരിട്ട്‌ ഇന്‍പുട്ട ചെയ്യുന്നതായി നമുക്ക്‌ തോന്നുകയേ ഇല്ല എന്നത്‌ ഒരു വസ്തുതയാണ്‌.
പകരം നാം ഒന്നിന്‌ പുറകെ ഒന്നായി കാരക്റ്ററുകള്‍ ഇന്‍പുട്ട്‌ ചെയ്ത്‌ അതിനെ ഒരു
സ്ട്രിങ്‌ ആക്കി മാറ്റുകയാണ്‌ ചെയ്യേണ്ടത്‌.
9. MISES കൈകാര്യം ചെയ്യലും ഇന്‍പുട്ട്‌ //ഒട്ട്പുട്ട്‌ ഫങ്ക്ഷനുകളും

C++ ല്‍ കാരക്റ്റര്‍ അറേകള്‍ക്ക്‌ ചില പ്രത്യേക സവിശേഷതകള്‍ ഉണ്ട്‌. ഒരിക്കല്‍ ഒരു
കാരക്റ്റര്‍ അറെ പ്രഖ്യാപിച്ചാല്‍, അറെയുടെ പേര്‍ സ്ര്രിങ്‌ ഡാറ്റ സൂക്ഷിക്കാനുള്ള സാ
ധാരണ വേരിയബിളായിത്തന്നെ പരിഗണിക്കപ്പെടുന്നു. അതുകൊണ്ടു തന്നെ കാരക്റ്റര്‍
അറേയുടെ പേര്‍ സ്ര്രിങ്‌ വേരിയബിളിന്‌ സമാനമാണ്‌ എന്ന്‌ പറയാം. അതിനാല്‍ നിങ്ങ
BOS പേര്‍ MY_NaMe (അറെയുടെ പേര്‍) ല്‍ താഴെ കൊടുത്തിട്ടുള്ള പ്രസ്താവന ഉപയോ
ഗിച്ച്‌ സംഭരിക്കാവുന്നതാണ്‌.

cin>>my_name;

മറ്റുള്ള ഡാറ്റ ഇനങ്ങളുടെ കാര്യത്തില്‍ മേല്‍ സൂചിപ്പിക്കപ്പെട്ട ര്രയോഗം തെറ്റാണെന്ന്‌
പ്രത്യേകം ശ്രദ്ധിക്കേണ്ടതാണ്‌. ഇനി നമുക്ക്‌ ഒരു സ്ര്രിങ്‌ ഇന്‍പുട്ട്‌ ചെയ്തു പ്രദര്‍ശിപ്പി
ക്കുന്നതിനുള്ള പ്രോഗ്രാം പൂര്‍ത്തിയാക്കാം. പ്രോ്രഗാം 9.1 ല്‍ പറഞ്ഞിരിക്കുന്നത്‌ പോലെ
ഇത്‌ ചെയ്യാവുന്നതാണ്‌ .

#include<iostream>

using namespace std;
int main()
{
char my_name[10];
cout << "Enter your name: ";
cin >> my_name;
cout << "Hello " << my_name;

}

ഈ പ്രോഗ്രാം പ്രവര്‍ത്തിപ്പിക്കുമ്പോള്‍ താഴെ കാണുന്നവിധം ഓട്ടപുട്ട്‌ ലഭിക്കുന്നതാണ്‌.
Enter your name: Niketh
Hello Niketh

പ്രത്യേകം ശ്രദ്ധിക്കേണ്ടത്‌ ഇവിടെ സ്ര്രിങ്‌ കോണ്‍സ്റ്റന്റ്‌ "Hello" അല്ല "Hello " ആണ്‌

എന്നുള്ളത്‌. ('0' എന്ന അക്ഷരത്തിനു ശേഷം ഒരു സ്പേസ്‌ നല്‍കിയിട്ടുണ്ട്‌).

പ്രോഗ്രാം 9.1 (്രവര്ത്തിച്ഛിച്ച്‌ നിങ്ങളുടെ ചേരിന്റെ കുടെ ഇനിഷ്യഥും
DBAYF ചെയ്ത്‌ BOGaAYF ശരിയോ തെറ്റോ എന്ന്‌ പരിശോധിക്കുക.

\ ചേരി 10 കാരക്റ്ററുകളിലും കൂടുതതി QDONZBNIO അറെയുടെ വലിച്ച
ആവശ്യത്തിനനുസ്പരിച്ച്‌ വരദ്ധിച്ഛിക്കുക .

9.2 സ്6്രിങ്ങിനു വേണ്ടിയുള്ള മെമ്മറി നിക്കിവെയ്പ്‌ (Memory allocation for strings)

ഒരു അറെയിലുള്ള കാരക്റ്ററുകള്‍ക്ക്‌ എങ്ങനെയാണ്‌ മെമ്മറി അനുവദിക്കുന്നതെന്നു
നാം കണ്ടു കഴിഞ്ഞു. ചിത്രം 9.1 ല്‍ കാണിച്ചിരിക്കുന്നത്‌ പോലെ മെമ്മറി ആവശ്യകത
കണക്കാക്കുന്നത്‌ ഇന്‍പൂുട്ട ചെയ്ത കാരക്റ്ററുകളുടെ എണ്ണമനുസരിച്ചാണ്‌. എന്നാല്‍ ഒരു
ഒന്നാം വര്‍ഷ കമ്പ്യുട്ടര്‍ സയന്‍സ്‌

കാരക്റ്റര്‍ അറെയില്‍ സ്ര്രിങ്‌ ഇന്‍പുട്ട്‌ ചെയ്യുമ്പോള്‍ ചിത്രം മറ്റൊന്നാകുന്നു. നമ്മള്‍
പ്രോഗ്രാം 9.1 പ്രവര്‍ത്തിപ്പിച്ച്‌ "Niketh" എന്ന സ്ട്രിങ്‌ ഇന്‍പുട്ട്‌ ചെയ്താല്‍ മെമ്മറി
നീക്കിവെയ്പ്‌ താഴെ കാണുന്ന വിധമായിരിക്കും.

അറേയുടെ
പേര്‌

സ്ട്രിങ്ങിന്റെ അവസാനദാരത്ത്‌
കൂട്ടിച്ചേര്‍ക്കകെടുന്ന നർ കാരക്ടര്‍ '\0'

0 1 2 3 4 5 6 7 8 9
ചിത്ര 9.2: &I0ADG അയുടെ മെമറി നിക്കിവെയ്പ്‌

ഇവിടെ NB £90496 (\0') സ്ര്രിങ്ങിന്റെ അവസാനഭാഗത്ത്‌ കൂട്ടിച്ചേര്‍ക്കപ്പെടുന്നു. ഇത്‌
കാരക്റ്റര്‍ സ്ര്രിങ്ങിന്റെ ടെര്‍മിനേറ്റര്‍ ആയി ഉപയോഗിക്കുന്നു. അതിനാല്‍ ഒരു സ്ര്രിങ്‌
സംഭരിക്കാനാവശ്യമായ മെമ്മറി എന്നത്‌ സ്ര്രിങ്ങിലെ ആകെ കാരക്റ്ററുകളുടെ എണ്ണവും
MB കാരക്റ്ററിനു വേണ്ട ഒരു ബൈറ്റും ചേര്‍ന്നതാണ്‌. മേല്പറഞ്ഞ "Niketh" എന്ന
സ്ര്രിങ്‌ ശേഖരിക്കുവാന്‍ ഏഴ ബൈറ്റ്‌ ആവശ്യമാണ്‌. (അതായത്‌ 6 കാ൪ക്റ്ററുകള്‍ക്കുള്ള
6 ബൈറ്റ്‌ + MB കാരക്റ്ററിനുള്ള 1 ബൈറ്റ്‌).

താഴെ കാണിച്ചിരിക്കുന്നവിധത്തില്‍ നമുക്ക്‌ 00498 അറെയ്ക്ക്‌ പ്രാരംഭവില നല്‍കാം.
char my_name[10] = "Niketh";
char str[] ="Hello world";

ആദ്യത്തെ പ്രസ്താവനയില്‍ പത്ത്‌ മെമ്മറി സ്ഥാനങ്ങള്‍ നീക്കി വെക്കുകയും അതില്‍
പ്രാരംഭ വിലയും MB കാരക്റ്ററും സംഭരിക്കുകയും ചെയ്യുന്നു. ഇവിടെ അവസാന മൂന്ന്‌
ബൈറ്റുകള്‍ ഉപയോഗിക്കുനന്നില്ല. എന്നാല്‍ രണ്ടാമത്തെ സ്റ്റേറ്റ്മെന്റില്‍ അറെയുടെ വലിപ്പം
ഉള്‍പ്പെടുത്തിയിട്ടില്ല. അതുകൊണ്ട്‌ 11 ബൈറ്റ്‌ സ്ര്രിങ്ങിനും 1 ബൈറ്റ്‌ '\0' നും അടക്കം
ആകെ 12 ബൈറ്റ്‌ നീക്കിവെയ്ക്കപ്പെടുന്നു .
9.3 സ്ട്രിങ്ങിനു മേലുള്ള ഇന്‍പുട്ട്‌ /ഒഓട്ട്പുട്ട്‌ പ്രവര്‍ത്തനങ്ങള്‍
(Input/Output operations on strings)
പ്രോഗ്രാം 9.108 സ്ര്രിങ്‌ ഡാറ്റ ഇന്‍പുട്ട/ഓട്ട്പുട്ട്‌ ചെയ്യുന്നതിനുള്ള പ്രസ്താവനകള്‍
ഉള്‍പെടുത്തിയിട്ടുണ്ട്‌. അറെയുടെ വലിപ്പം 20 ആക്കി പ്രഖ്യാപന പ്രസ്താവനയില്‍ ഒരു
ചെറിയ മാറ്റം വരുത്തുക. "Maya Mohan" എന്ന പേര്‍ ഇന്‍പുട്ട്‌ ചെയ്ത്‌ പ്രോഗ്രാം പ്രവര്‍
ത്തിപ്പിക്കുകയാണെങ്കില്‍ താഴെ കാണുന്ന വിധത്തിലുള്ള ഓട്ടപൂട്ട്‌ ലഭിക്കുന്നതാണ്‌.
Enter your name: Maya Mohan
Hello Maya
സ്ര്രിങ്‌ ശേഖരിക്കുന്നതിന്‌ ആവശ്യമായ വലിപ്പം അറെയ്ക്‌ ഉണ്ടെങ്കിലും നമുക്ക്‌
ഓട്ട്പുട്ടായി "Maya" എന്ന്‌ മാത്രമാണ്‌ ലഭിക്കുന്നത്‌. ഇതെന്തുകൊണ്ട്‌ സംഭവിച്ചു?
നമുക്ക്‌ Cin>>my_name; എന്ന പ്രസ്താവന സൂക്ഷ്മമായൊന്നു പരിശോധിക്കാം. ഒരു
ഡാറ്റ ഇനത്തെ AIMED ഈ പ്രസ്താവന ഉപയോഗിച്ചു ഇന്‍പുട്ട്‌ ചെയ്യാന്‍ കഴിയു എന്ന്‌
9. MISES കൈകാര്യം ചെയ്യലും ഇന്‍പുട്ട്‌ //ഒട്ട്പുട്ട്‌ ഫങ്ക്ഷനുകളും

നമുക്കറിയാം. ഒരു ഡാറ്റയെ മറ്റൊന്നില്‍ നിന്ന്‌ വേര്‍തിരിക്കുവാന്‍ ഉപയോഗിക്കുന്നതാണ്‌
വൈറ്റ്‌ സ്പേസ്‌. അതുകൊണ്ട്‌ "Maya Mohan" എന്നത്‌ രണ്ട്‌ ഡാറ്റയായി പരിഗണിക്കപ്പെ
ടുന്നു. (Maya, Mohan എന്നിവയ്ക്കിടയ്ക്ക്‌ വൈറ്റ്‌ സ്പേസ്‌ ഉള്ളതുകൊണ്ട്‌). my_named
മുമ്പ്‌ ഒരു ഇന്‍പുട്ട ഓപ്പറേറ്റര്‍ (>>) മാത്രമേയുള്ളു. അതിനാല്‍ ആദ്യത്തെ ഡാറ്റയായ
"Maya" മാത്രം സംഭരിക്കപ്പെടുന്നു. അതിന്‌ ശേഷമുള്ള വൈറ്റ്‌ സ്പേസ്‌ ഡിലിമിറ്റര്‍
ആയി വര്‍ത്തിക്കുകയും ചെയ്യുന്നു. അതിനാല്‍ ഈ പ്രസ്താവന സംവിധാനം ഉപയോഗിച്ച്‌
വൈറ്റ്‌ സ്പേസ്‌ അടങ്ങിയ സ്ദ്രിങ്ങുകള്‍ മുഴുവനായും ഇന്‍പുട്ട്‌ ചെയ്യുവാന്‍ കഴിയുകയില്ല.
ഇതിനു പരിഹാരമായി gets () എന്ന ഫങ്ഷന്‍ ഉപയോഗിക്കാവുന്നതാണ്‌. സ്റ്റാന്‍ഡേര്‍ഡ്‌
ഇന്‍പുട്ട ഉപകരണങ്ങളില്‍ (keyboard) നിന്ന്‌ വൈറ്റ്‌ സ്പേസ്‌ അടങ്ങിയ സ്ര്രിങ്ങുകളെ
സ്വീകരിക്കുകയും അതിനെ ഒരു കാരക്റ്റര്‍ അറെയില്‍ സംഭരിക്കുന്നതിനുമുള്ള കണ്‍
സോള്‍ ഇന്‍പുട്ട്‌ ഫങ്ഷനാണ്‌ gets(). ഈ ഫങ്ഷനിലേക്ക്‌ സ്ര്രിങ്‌ വേരിയബിള്‍
(കാരക്റ്റര്‍ അറെയുടെ പേര്‍) താഴെ കാണുന്നവിധത്തില്‍ നല്‍കാവുന്നതാണ്‌.

gets (character_array_name) ;

ഈ ഫങ്ഷന്‍ ഉപയോഗിക്കുമ്പോള്‍ cstdio(stdio.h എന്നത്‌ Turbo ല്‍) എന്ന
ലൈപ്രറി ഹെഡര്‍ ഫയല്‍ പ്രോഗ്രാമില്‍ ഉള്‍പ്പെടുത്തേണ്ടതാണ്‌. പ്രോഗ്രാം 9.1 ല്‍
include <cstdio> ഉള്‍പ്പെടുത്തുകയും കൂടാതെ cin>>my_name; എന്ന പ്രസ്താവ
നയ്ക്ക്‌ പകരം gets (my_name) ; ഉപയോഗിച്ച്‌ പ്രോഗ്രാം വീണ്ടും പ്രവര്‍ത്തിപ്പിച്ചാല്‍
താഴെ കാണുന്ന ഓട്ട്പുട്ട്‌ ലഭിക്കുന്നതാണ്‌.

Enter your name : Maya Mohan
Hello Maya Mohan

ഇപ്പോള്‍ നാം ഇന്‍പുട്ട്‌ ചെയ്ത മുഴുവന്‍ MV(SlessBJo ഓട്ട്പുട്ട്‌ ആയി കാണപ്പെടുന്നുണ്ട്‌.
ഇനി നമുക്ക്‌ gets () ഫങ്ഷനും cin ഉം തമ്മിലുള്ള വ്ൃത്യാസം എന്താണെന്നു നോക്കാം.

സ്്രിങ്ങിന്റെ ഇന്‍പുട്ട്‌ /ഈട്ട്പുട്ട പ്രവര്‍ത്തനങ്ങളില്‍ സബ്സ്ക്രിപ്റ്റഡ്‌ വേരിയബിള്‍ എന്ന
ആശയം ഉപയോഗിക്കുന്നില്ലെങ്കിലും, അറെയിലെ ഏതൊരു അംഗത്തെയും അറെയുടെ
പേരും സബ്സ്ക്രിപ്റ്റും ഉപയോഗിച്ചു വേര്‍തിരിച്ചുപയോഗിക്കാവുന്നതാണ്‌. സ്്രിങ്ങിലെ
ആദ്യത്തെ കാരക്റ്ററിനെ ഉപയോഗിക്കണമെങ്കില്‍ my_name [0] എന്നും, അഞ്ചാമത്തെ
കാരക്റ്റര്‍ എടുത്തുപയോഗിക്കണമെങ്കില്‍ സ൨൭൬൭ [ 4] എന്നിങ്ങനെ എന്നും പ്രയോ
ഗിക്കാവുന്നതാണ്‌. നള്‍ കാരക്റ്ററും ('\0') നമുക്ക്‌ സബ്സ്ക്രിപ്ട ഉപയോഗിച്ചു
തെരഞ്ഞെടുക്കാം. താഴെ കൊടുത്തിട്ടുള്ള പ്രോഗ്രാം ഈ ആശയം വ്യക്തമാക്കുന്നതാണ്‌.

sai 82 Hea dee കള (ond) എള amen

#include <iostream>
#include <cstdio>
using namespace std;
int main ()

{

char str[20];

gets()
ഫങ്ഷന്‌ വേണ്ടിയുള്ള
ഹെഡര്‍ ഫയല്‍
ഒന്നാം വര്‍ഷ കമ്പ്യുട്ടര്‍ സയന്‍സ്‌

int vow=0;

cout<<"Enter a string: "; നർ കാരക്ടര്‍ എത്തുന്നതുവരെ
gets (str); തുടര്‍ന്നു കൊണ്ടിരിക്കുന്നു.
for(int 1-0; str[iJ!='\O'; i++)

switch(str[i])

{

case ‘al: അറേയിലെ ഓരോ കാരക്ടറും
case "ലന; കാരക്ടര്‍ കോണ്‍നസ്റ്ന്റുമായി
Cage VAlg താരതമ്യം ചെയ്യുന്നു
case 'o':

case ‘'u': ഡായ;

}
cout<<"No. of vowels in the string "<<str<<" is "<<vow;
return 0;

}

"Hello guys" എന്ന സ്ര്രിങ്‌ ഇന്‍പുട്ട്‌ ചെയ്ത്‌ പ്രോഗ്രാം 9.2 പ്രവര്‍ത്തിപ്പിക്കുകയാണെങ്കില്‍
ചുവടെ കൊടുത്തിരിക്കുന്ന ഓട്ട്പുട്ട്‌ കാണാവുന്നതാണ്‌ .
Enter a string : Hello guys
No.of vowels in the string Hello guys is 3
ഈ പ്രോഗ്രാം പ്രവര്‍ത്തിച്ച്‌ ഫലം ലഭ്യമാകുന്നത്‌ എങ്ങനെയെന്ന്‌ നമുക്ക്‌ വിശകലനം
ചെയ്യാം.
ഭ തുടക്കത്തില്‍ തന്നെ gets () ഫങ്ഷന്‍ ഉപയോഗിച്ച്‌ "Hello guys"agm സ്ര്‍്രിങ്‌
ഇന്‍പുട്ട്‌ ചെയ്യുന്നു .
€ 1 എന്ന സബ്സ്ക്രിപ്റ്റ്‌ ഉപയോഗിച്ചു സൂചിപ്പിക്കുന്ന അറെയിലെ ഓരോ കാരക്റ്ററും,
MB കാരക്റ്റര്‍ (൨) അല്ലാത്തിടത്തോളം ഫോര്‍ ലൂപ്പിന്റെ ചട്ടക്കൂട തുടര്‍ച്ചയായി
പ്രവര്‍ത്തിച്ചുകൊണ്ടിരിക്കുന്നു. അതായത്‌ NB 90498 എത്തുന്നതുവരെ ലൂപ്പിന്റെ
ചട്ടക്കൂട്‌ പ്രവര്‍ത്തിച്ചുകൊണ്ടിരിക്കും.

൦ ലൂപ്പ്‌ ചട്ടക്കൂടിനകത്ത്‌ ഒരേയൊരു സ്വിച്ച്‌ പ്രസ്താവന (switch statement) മാത്രമേ
ഉള്ളു. ആദ്യത്തെ നാലു കേസുകളിലും ഒരു പ്രസ്താവന പോലും നല്‍കിയിട്ടില്ല.
അവസാനത്തെ കേസിന്‌ vow എന്ന വേരിയബിളിന്റെ വില ഒന്ന്‌ വര്‍ദ്ധിക്കുന്നു (vow++).
എല്ലാ കേസുകള്‍ക്കും ഇതാവശ്യമാണെന്നു ഒരു പക്ഷെ നിങ്ങള്‍ ചിന്തിക്കുന്നുണ്ടാവും.
അത്‌ തികച്ചും ശരിയാണ്‌. എന്നാല്‍ അങ്ങനെയാണെങ്കില്‍ ഓരോ കേസിനും
വെവ്വേറെ ബ്രേക്ക്‌ പ്രസ്താവനകള്‍ ഉപയോഗിക്കേണ്ടതായി വരും. ഈ പ്രോഗ്രാമില്‍
എല്ലാ കേസുകളുടെയും പ്രവര്‍ത്തനം ഒരേ പോലെയായതിനാലാണ്‌ ഈ രീതിയിലുള്ള
പ്രസ്താവന ഉപയോഗിച്ചിരിക്കുന്നത്‌.

© ഫോര്‍ ലൂപ്പ്‌ തുടര്‍ച്ചയായി പ്രവര്‍ത്തിക്കുമ്പോള്‍ ഓരോ കാരക്റ്ററും ഒന്നിന്‌ പുറകെ
ഒന്നായി ലഭ്യമാകുന്നു. അവയെ കേസിലെ ഓരോ കാരക്റ്റര്‍ കോണ്‍സ്റ്റന്റുമായി താര
തമ്യം ചെയ്യുന്നു. ഏതെങ്കിലും ഒരു തവണ സമാനത കൈവരിച്ചാല്‍ vow എന്ന
വേരിയബിളിന്റെ വില ഒന്ന്‌ കൂടുന്നു (vow ++).
9. MISES കൈകാര്യം ചെയ്യലും ഇന്‍പുട്ട്‌ //ഒട്ട്പുട്ട്‌ ഫങ്ക്ഷനുകളും

wan

© നല്‍കിയിട്ടുള്ള ഇന്‍പുട്ട സ്ര്രിങ്ങിന്റെ കാര്യത്തില്‍ സമാനത കൈവരിക്കുന്നത്‌ "i
യുടെ വില 1, 4, 7 എന്നിങ്ങനെ ആകുമ്പോഴാണ്‌. അതുകൊണ്ട്‌ തന്നെ vow ന്റെ വില
മൂന്നു തവണ ഓരോന്ന്‌ വെച്ച്‌ വര്‍ധിക്കുകയും നമുക്ക്‌ ശരിയായ ഉത്തരം ലഭിക്കുകയും
ചെയ്യുന്നു.

സ്ര്രിങ്ങുകള്‍ ഇന്‍പുട്ട്‌ ചെയ്യുന്നതിനു gets () ഫങ്ഷന്‍ എങ്ങനെ ഉപയോഗിക്കുന്നുവെന്ന്‌
നാം മനസ്സിലാക്കി. അതുപോലെ സ്ട്രിങ്‌ ഓട്ട്പുട്ട്‌ ചെയ്യുന്നതിന്‌ C++ ല്‍ puts ()
എന്ന ഫങ്ഷന്‍ ലഭ്യമാണ്‌. സ്ര്രിങ്‌ ഡാറ്റയെ സ്റ്റാന്‍ഡേര്‍ഡ്‌ ജട്ട്പുട്ട്‌ ഉപകരണ
(മോണിറ്റര്‍) ത്തില്‍ പ്രദര്‍ശിപ്പിക്കുവാന്‍ വേണ്ടിയുള്ള കണ്‍സോള്‍ ഓട്ടപുട്ട ഫങ്ഷനാണ്‌
put (). ഇതിന്റെ വാകൃഘടന (syntax) താഴെ കൊടുത്തിരിക്കുന്നു .

puts(string data);

ഈ ഫങ്ഷനിലേക്ക്‌ സ്ര്രിങ്്‌ കോണ്‍സ്റ്റന്റ്‌ അഥവാ വേരിയബിള്‍ (400498 അറെയുടെ
പേര്‍) ആണ്‌ നല്‍കേണ്ടത്‌. താഴെ കാണുന്ന C++ കോഡ്‌ നിരീക്ഷിക്കുക .

char str[10] ="friends";
puts ("hello");
puts (str);
മേല്‍ സൂചിപ്പിച്ച കോഡിന്റെ ഓട്ട്പുട്ട താഴെ കാണും വിധത്തിലാണ്‌ .
hello
friends

£00498 അറെ str[10] ലെ "friends" എന്ന സ്ര്രിങ്‌ അടുത്ത ലൈനിലാണ്‌ പ്രദര്‍
ശിപ്പിച്ചിരിക്കുന്നത്‌. puts () ഫങ്ഷനുകള്‍ക്ക്‌ പകരം cout<<"hello";, cout<<
SELF എന്നീ പ്രസ്താവനകള്‍ ഉപയോഗിക്കുമ്പോഴുള്ള വൃത്യാസം ശ്രദ്ധിക്കുക. cout
ഉപയോഗിക്കുമ്പോള്‍ സ്ര്രിങ്ങുകള്‍ക്കിടയില്‍ ഒരു സ്പേസ്‌ പോലും ഇല്ലാതെ ഒട്ട്പുട്ട്‌
അതേ വരിയില്‍ തന്നെ പ്രദര്‍ശിപ്പിക്കപ്പെടുന്നു.

പ്രോഗ്രാം 9.2 ല്‍ "HELLO GUYS" എന്ന ഇന്‍പുട്ട്‌ നല്‍കി ഓട്ട്പുട്ട്‌
പ്രവചിക്കുക. പ്രോഗ്രാം പ്രവര്‍ത്തിപ്പിച്ചു ഈ ഇന്‍പുട്ടിന്‌ ശരിയായ ഓട്ട്‌
ANS ലഭിക്കുന്നുണ്ടോ എന്ന്‌ പരിശോധിക്കുക. ഓട്പുട്ടിലുണ്ടായിരിക്കുന്ന

വൃത്യാസത്തിന്‌ കാരണം കണ്ടെത്തുക. തന്നിരിക്കുന്ന ഏതൊരു സ്ട്രി
ങ്ങിനും അനുസരിച്ച്‌ കൃത്യമായ ഓട്ട്പുട്ട്‌ ലഭിക്കുന്നതിന്‌ പ്രോഗ്രാമില്‍
ആവശ്യമായ മാറ്റങ്ങള്‍ വരുത്തുക.

9.4 കാരക്റ്റര്‍ ഇന്‍ചപുട്ട്‌/ഓട്ട്പുട്ട്‌ നുവേണ്ടിയുള്ള കണ്‍സോള്‍ ഫങ്ഷനുകള്‍

(More console functions)
സ്്രിങ്ങിന്‌ മേലുള്ള ഇന്‍പുട്ട്‌ /ഓട്ട്പുട്ട്‌ പ്രവര്‍ത്തനങ്ങള്‍ നാം ചര്‍ച്ച ചെയ്ത്‌ കഴിഞ്ഞു.
കാരക്റ്ററുകള്‍ക്ക്‌ മേല്‍ പ്രയോഗിക്കുവാനുള്ള ചില ഇന്‍പുട്ട/ഓട്ട്പുട്ട്‌ ഫങ്ഷനുകളും
4 ല്‍ ഉള്‍പ്പെടുത്തിയിട്ടുണ്ട്‌. ഇത്തരം ഫങ്ഷനുകള്‍ ഉപയോഗിക്കുന്നതിന്‌ cstdio
ഒന്നാം വര്‍ഷ കമ്പ്യുട്ടര്‍ സയന്‍സ്‌

(stdio.h എന്നത്‌ Turbo C++ ല്‍) എന്ന ഹെഡര്‍ ഫയല്‍ പ്രോ്രഗാമില്‍ ഉള്‍പ്പെടുത്തേ
ണ്ടത്‌ അത്യാവശ്യമാണ്‌ .

getchar ()

ഈ ഫങ്ഷന്‍ കീബോര്‍ഡിലൂടെ ഇന്‍പുട്ട്‌ ചെയ്ത കാരക്റ്ററിനെ തിരികെ തരികയാണ്‌
ചെയ്യുന്നത്‌. താഴെ കൊടുത്തിട്ടുള്ള ഉദാഹരണത്തില്‍ കാണുന്ന പോലെ ഒരു കാരക്റ്റ
റിനെ വേരിയബിലിളിലേക്ക്‌ സംഭരിക്കാവുന്നതാണ്‌.

char ch=getchar();

സ്ട്രിങ്‌ ഓട്ടപുട്ടില്‍ puts () ഫങ്ഷന്റെ മേന്മകള്‍ നാം കണ്ടു കഴിഞ്ഞു. ഇനി നമുക്ക്‌
കാരക്റ്റര്‍ ഡാറ്റ ഓട്ടപുട്ടായി ലഭിക്കുവാനുള്ള ഫങ്ഷനെക്കുറിച്ച്‌ പഠിക്കാം.
putchar ()

തന്നിരിക്കുന്ന കാരക്റ്റര്‍ ആര്‍ഗ്യുമെന്റിനെ സ്റ്റാന്‍ഡേര്‍ഡ്‌ ഓട്ട്പുട്ട്‌ ഉപകരണ (മോണിറ്റര്‍)
ത്തില്‍ പ്രദര്‍ശിപ്പിക്കുകയാണ്‌ ഈ ഫങ്ഷന്‍ ചെയ്യുന്നത്‌. ഇവിടെ ആര്‍ഗ്യുമെന്റ്‌ ഒരു
കാരക്റ്റര്‍ കോണ്‍സ്റ്റന്റോ അല്ലെങ്കില്‍ ഒരു വേരിയബിളോ ആവാം. ആര്‍ഗ്യുമെന്റായി
ഒരു പൂര്‍ണ സംഖ്യയാണ്‌ (integer) നല്‍കുന്നതെങ്കില്‍ അതിനെ ഒരു ASCII വിലയായി
പരിഗണിക്കുകയും അതിനുനസൃതമായ കാരക്റ്റര്‍ പ്രദര്‍ശിപ്പിക്കുകയും ചെയ്യുന്നു. താഴെ
കൊടുത്തിട്ടുള്ള കോഡ്‌ putchar() ഫങ്ഷന്റെ ഉപയോഗം വ്യക്തമാക്കുന്നു.

char ch='B'; // വേരിയബിള്‍ ch നകത്ത്‌ 'B' ശേഖരിക്കപ്പെടുന്നു

putchar(ch); //'B' സ്ക്രീനില്‍ പ്രദര്‍ശിപ്പിക്കപ്പെടുന്നു

ptchar('c'); // 'c' സ്ക്രീനില്‍ പ്രദര്‍ശിപ്പിക്കപ്പെടുന്നു
putchar (97); // 97 എന്ന ASCII വിലയ്ക്കനുസൃതമായ 'a' സ്ക്രീനില്‍
പ്രദര്‍ശിപ്പിക്കപ്പെടുന്നു.

പോഗ്രാം 9 .3 ഈ ഫങ്ഷനുകളുടെ പ്രവര്‍ത്തനം വ്യക്തമാക്കുന്നതാണ്‌. ഒരു സ്ട്രിങ്‌
ഇന്‍പുട്ട്‌ ചെയ്ത്‌ ഒരു കാരക്റ്റര്‍ കണ്ടെത്തുവാന്‍ ഈ പ്രോഗ്രാമിലൂടെ സാധിക്കുന്നു.
ഒരു കാരക്റ്റര്‍ എത്ര തവണ ആവര്‍ത്തിക്കുന്നുവെന്നു പ്രദര്‍ശിപ്പിക്കുകയാണ്‌ ഈ
പ്രോഗ്രാം ചെയ്യുന്നത്‌ .

| പട്ന “> |”

#include <iostream>
#include <cstdio>
using namespace std;
int main ()
{
char str[20], ch;
int i, num=0;

puts("Enter a string:"); //To print '\n' after the string
9. MISES കൈകാര്യം ചെയ്യലും ഇന്‍പുട്ട്‌ //ഒട്ട്പുട്ട്‌ ഫങ്ക്ഷനുകളും

gets(str);//To accept a string with white spaces
cout<<"Enter the character to be searched: ";
ch=getchar();//To input the character to be searched
/* A loop to search for the character and count its
occurrences in the string. Search will be

terminated when a null character is found */
for(i=0; str[i]!='\0O'; i++)
if (str[i]==ch)
num++;

cout<<"The string \'"<<str<<"\' uses the character \'";
putchar (ch);

cout<<"\' ")<<num<<" times";

return 0;

}

ഇതുവരെ ചര്‍ച്ച ചെയ്ത എല്ലാ കണ്‍സോള്‍ ഫങ്ഷനുകളും പ്രോഗ്രാം 9.3 യില്‍ ഉപ
യോഗിചിച്ചിട്ടുണ്ട്‌. ഈ പ്രോഗ്രാമിന്റെ ഒരു മാതൃക ഓട്ട്പുട്ട താഴെ കൊടുത്തിരിക്കുന്നു.

Enter the string :

I have a dream

Enter the character to be searched : a

The string "I have a dream" uses the character 'a' 3 times

സ്വയം പരിശോധിക്കാം

1. ഒരു സ്ട്രിങ്ങിന്റെ അവസാനം സൂചിഭിക്കാന്‍ മെമ്മറിയില്‍ ഉപയോഗിക്കുന്ന 90408 ഏത്‌?

2. ‘Save earth’ എന്ന സ്ട്രിങ്ങ്‌ ശേഖരിക്കുന്നതിനുള്ള വേരിയബിര്‍ പ്രഖ്യാപന പ്രസ്താവന
എഴുതുക?

3. കണ്‍സോള്‍ ഉന്‍പുട്ട്‌ / ഓട്ട്പുട്ട്‌ ഉപയോഗിക്കുന്നതിനാവശ്യമായ ഹെഡര്‍ ഫയലിന്റെ പേരെ
ഴൂത്തുക?

4. ‘Be Positive’ എന്ന സ്ട്രിങ്ങ്‌ ശേഖരിക്കുന്നതിനു എത്ര ബൈറ്റുകള്‍ ആവശ്യമാണ്‌?

5. puts ("hello"); cout<<"hello"; എന്നിവ എങ്ങനെ വ്ൃത്യാസകെട്ടിരിക്കുന്നു?

9.5 ഉന്‍ചുട്ട്‌ / ഓട്ട്പുട്ട്‌ പ്രക്രിയകള്‍ക്ക്‌ വേണ്ടിയുള്ള സ്ഭ്രീം ഫങ്ഷനുകള്‍
(Stream functions for I/O operations)

കാരക്റ്ററുകളിലും സ്ര്രിങ്ങുകളിലും ഇന്‍പുട്ട്‌ /ഓട്ട്പുട്ട്‌ പ്രക്രിയകള്‍ ചെയ്യുവാനുള്ള
മറ്റൊരു സൌകര്യം C++ ല്‍ ലഭ്യമാക്കിയിട്ടുണ്ട്‌. iostreaM എന്ന ഹെഡര്‍ ഫയലില്‍ ഉള്‍പ്പെടു
ത്തിയിട്ടുള്ള ഫങ്ഷനുകളാണിവ. മെമ്മറിക്കും ഒബ്ജക്റ്റുകള്‍ക്കുമിടയില്‍ പ്രവഹിക്കു
വാന്‍ ബൈറ്റുകളെ (ഡാറ്റ) (stream of bytes) യെ കൈകാര്യം ചെയ്യുന്നതിനാല്‍ ഇവയെ
പൊതുവെ സ്ര്രീം ഫങ്ഷനുകള്‍ എന്നാണ്‌ വിളിക്കുന്നത്‌. C++@8 കീബോര്‍ഡ്‌, മോണിറ്റര്‍

ഒന്നാം വര്‍ഷ കമ്പ്യൂട്ടര്‍ സയന്‍സ്‌

എന്നിവയെയാണ്‌ സാധാരണയായി ഒബ്ജക്റ്റുകളായി സൂചിപ്പിച്ചിരിക്കുന്നത്‌. ഇവയില്‍
ഏതാനും ചില ഫങ്ഷനുകള്‍ നമുക്ക്‌ പരിശോധിക്കാം .

A. ഇന്‍പുട്ട്‌ ഫങ്ഷനുകള്‍

കാരക്റ്റര്‍ /സ്ര്രിങ്‌ ഡാറ്റയെ ഇന്‍പുട്ട്‌ ചെയ്യുന്നതിന്‌ ഉപയോഗിക്കുന്ന ഫങ്ഷനുകളാണിവ.
ഒബ്ജക്റ്റുകള്‍ക്കും മെമ്മറിക്കുമിടയില്‍ ബൈറ്റുകളെ പ്രവഹിക്കുവാന്‍ സഹായിക്കുന്ന
ഫങ്ഷനുകളാണ്‌ get () , getline () എന്നിവ. കീ ബോര്‍ഡ്‌ ഉപയോഗിച്ച്‌ ഡാറ്റ ഇന്‍പുട്ട്‌
ചെയ്യുമ്പോള്‍ കീബോര്‍ഡിനെ സൂചിപ്പിക്കാന്‍ cin എന്ന ഓബ്ജക്ട്‌ ഉപയോഗിക്കുകയും
മേല്‍പ്പറഞ്ഞ ഫങ്ഷനുകള്‍ ൦൩. 9൭ () , ൭൪൨൩. 9൭14൩൦ () എന്നീ രീതികളില്‍ വിളിക്കു
കയോ പ്രയോഗക്ഷമമാക്കുകയോ ചെയ്യുന്നു. ഇവിടെ ഡോട്ട്‌ ഓപ്പറേറ്റര്‍ എന്ന്‌ വിളിക്കുന്ന
പീരിയേഡ്‌ (period) ചിഹ്നം (.) ആണ്‌ cin എന്ന ഒബ്ജെക്ടിനും ഫങ്ഷനുമിടയില്‍
ഉപയോഗിച്ചിരിക്കുന്നത്‌.

3. 9൭൦ ()

കീബോര്‍ഡിലൂടെ ഒരു കാരക്റ്ററിനെയോ ഒന്നിലധികം കാരക്റ്ററുകളെയോ സ്വീകരി
ക്കുവാന്‍ ഈ ഫങ്ഷന്‍ ഉപയോഗിക്കുന്നു. ഒരു സ്ര്രിങ്ങിനെ സ്വീകരിക്കുന്നതിന്‌ anes
ഷന്റെ ആര്‍ഗ്യുമെന്റായി അറേയുടെ പേരും വലിപ്പവും നല്‍കേണ്ടതാണ്‌. താഴെ കൊടുത്തി
രിക്കുന്ന കോഡ്‌ ഈ ഫങ്ഷന്റെ ഉപയോഗം വ്ൃക്തമാക്കുന്നതാണ്‌.

char ch,str[10];

ch = cin.get(ch);// ഒരു £00496 സ്വീകരിച്ച്‌ 'ch' ല്‍ ശേഖരിക്കുന്നു.
cin.get (ch); // മേല്‍ സൂചിപ്പിച്ച പ്രസ്താവനയ്ക്‌ സമാനം.

4൩. 9൭ (൭2, 10); // പരമാവധി 10 കാരക്റ്ററുകളുള്ള സ്ര്രിങ്ങിനെ സ്വീകരിക്കുന്നു.

ii. 9൭12൩൦൫0)

കീബോര്‍ഡിലൂടെ ഒരു സ്ട്രിങ്ങിനെ സ്വീകരിക്കുവാനുള്ള ഫങ്ഷനാണിത്‌. എന്റര്‍ കീ,
കാരക്റ്ററുകളുടെ എണ്ണം അല്ലെങ്കില്‍ ഏതെങ്കിലും പ്രത്യേക കാരക്റ്റര്‍, ഇവയില്‍ ഏതെ
ങ്കിലും ഉപയോഗിച്ചാണ്‌ സ്ര്രിങ്ങിന്റെ അവസാനം സൂചിപ്പിക്കുന്നത്‌. ഈ ഫങ്ഷന്‍
ഉപയോഗിക്കുന്നതിനുള്ള രണ്ടുതരം വാകൃഘടന താഴെ കൊടുക്കുന്നു.

char ch,str[10];

int len;

cin.getline(str,len); // 2 ആര്‍ഗ്യുമെന്റുകള്‍ സഹിതം.
cin.getline(str,len,ch); // 3 ആര്‍ഗ്യുമെന്റുകള്‍ സഹിതം .

ആദ്യത്തേതില്‍ getline () ഫങ്ഷന്‍ രണ്ട്‌ ആര്‍ഗ്യുമെന്റുകളായ കാരക്റ്റര്‍ അറേയും
(ഇവിടെ Str) കൂടാതെ ആകെ എത്ര കാരക്റ്ററുകള്‍ ശേഖരിക്കാമെന്നു സൂചിപ്പിക്കുന്ന
ഇന്റിജര്‍ വിലയും (len) ഉണ്ട്‌. രണ്ടാമത്തേതില്‍ സ്്രിങ്ങിന്റെ അവസാനം (Delimiter)
സൂചിപ്പിക്കുന്ന കാരക്റ്ററും (ch വേരിയബിളിന്റെ വില) കൂടി ആകെ കാര൪ക്റ്ററുകളുടെ
എണ്ണത്തിനൊപ്പം നല്‍കിയിരിക്കുന്നു. സ്ര്രിങ്‌ ഇന്‍പുട്ട്‌ ചെയ്യുമ്പോള്‍ ഒന്നുകില്‍ കാരക്റ്റ
റുകള്‍ മാത്രം (len-1) അല്ലെങ്കില്‍ സ്ട്രിങ്ങിന്റെ അവസാനം സൂചിപ്പിക്കുന്ന കാരക്റ്റര്‍
വരെ, ഇവയിലേതാണോ ആദ്യം സംഭവിക്കുന്നത്‌ എന്നതിനെ ആശ്രയിച്ചായിരിക്കും
സ്ട്രിങ്‌ സംഭരിക്കപ്പെടുന്നത്‌.
9. MISES കൈകാര്യം ചെയ്യലും ഇന്‍പുട്ട്‌ //ഒട്ട്പുട്ട്‌ ഫങ്ക്ഷനുകളും

B. ഓട്ട്പുട്ട്‌ ഫങ്ഷനുകള്‍

മെമ്മറിയ്ക്കും ഒബ്ജെക്റ്റിനുമിടയില്‍ ഡാറ്റ ബൈറ്റുകള്‍ തുടര്‍ച്ചയായി പ്രവഹിക്കുവാന്‍
സഹായിക്കുന്ന ഓട്ട്പുട്ട്‌ ഫങ്ഷനുകളാണ്‌ put(), write() എന്നിവ. ഓട്ട്പുട്ട്‌ ലഭിക്കുവാന്‍
വേണ്ടി മോണിറ്റര്‍ ഉപയോഗിക്കുന്നതിനാല്‍ cout എന്ന ഒബ്ജക്റ്റ്‌ ആണ്‌ ഈ ഫങ്‌
ഷനുകളുടെ കൂടെ ഉപയോഗിക്കുന്നത്‌ .

i. put ()

ഒരു £00498 കോണ്‍സ്റ്റന്റോ അല്ലെങ്കില്‍ വേരിയബിളോ ആര്‍ഗ്യുമെന്റായി സ്വീകരിച്ചു
പ്രദര്‍ശിപ്പിക്കുവാന്‍ ഉപയോഗിക്കുന്ന ഫങ്ഷനാണിത്‌.

char ch='c';

cout.put(ch); // 'c' പ്രദര്‍ശിപ്പിക്കപ്പെടുന്നു.

cout.put('B'); // 'B" പ്രദര്‍ശിപ്പിക്കപ്പെടുന്നു.

cout.put(65); // ASCII വില ടെ നു പകരമായി 'A' പ്രദര്‍ശിപ്പിക്കപ്പെടുന്നു.
ii. write ()

ആള്‍ഗ്യുമെന്റായി നല്‍കിയിട്ടുള്ള സ്്രിങ്ങിനെ പ്രദര്‍ശിപ്പിക്കുവാനാണ്‌ ഇത്‌ ഉപയോ
ഗിക്കുന്നത്‌. വ്യക്തതയ്ക്ക്‌ വേണ്ടി താഴെ കൊടുത്തിരിക്കുന്ന ഉദാഹരണം കാണുക.

char str[10] ="hello";
cout.write(str,10);

മേല്‍പ്പറഞ്ഞ കോഡ്‌ പ്രവര്‍ത്തിപ്പിക്കുമ്പോള്‍ "hello"agan സ്ട്രിങ്ങിന്‌ ശേഷം 5 വൈറ്റ്‌
സ്പേസോടു കൂടിയാണ്‌ പ്രദര്‍ശിപ്പിക്കപ്പെടുന്നത്‌. കാരണം രണ്ടാമത്തെ ആര്‍ഗ്യുമെ
ന്റിന്റെ വില 10 ഉം കൂടാതെ സ്ര്രിങ്ങിലെ ആകെ കാരക്റ്ററുകളുടെ എണ്ണം 5 ഉം ആയതിനാ
ലാണ്‌.

#include <iostream>

#include <cstring> //To use strlen() function

using namespace std;

int main()

{
char ch, str[20];
cout<<"Enter a character: ";
cin.get(ch); //To input a character to the variable ch
cout<<"Enter a string: ";
cin.getline(str,10,'.'); //To input the string
cout<<"Entered character is:\t";
cout .put (ch); //To display the character
cout.write("\nEntered string is:",20);
cout.write(str,strlen(str) );
return 0;
ഒന്നാം വര്‍ഷ കമ്പ്യുട്ടര്‍ സയന്‍സ്‌

പ്രോ്രഗാം 9.4 പ്രവര്‍ത്തിപ്പിക്കുമ്പോള്‍ താഴെ കാണുന്ന തരത്തിലുള്ള ഓട്ട്പുട്ട്‌ ലഭ്യമാ
വുന്നതാണ്‌.

Enter a character: p

Enter a string: hello world

Entered character is: p

Entered string is:

hello wo
ഈ പ്രോഗ്രാം പ്രവര്‍ത്തിപ്പിക്കുമ്പോള്‍ എന്താണ്‌ സംഭവിക്കുന്നത്‌ എന്ന്‌ നോക്കാം. തുട
ക്കത്തില്‍ തന്നെ get () ഫങ്ഷന്‍ 'p' എന്ന കാരക്റ്ററിനെ സ്വീകരിക്കുന്നു. തുടര്‍ന്ന്‌
getline () ഫങ്ഷന്‍ ഉപയോഗിച്ച്‌ "hello world" എന്ന സ്ര്രിങ്‌ ഇന്‍പുട്ട്‌ ചെയ്യുന്നു.
അതിന്‌ ശേഷം put () ഫങ്ഷനുപയോഗിച്ച്‌ 'p' എന്ന കാരക്റ്റര്‍ പ്രദര്‍ശിപ്പിക്കുന്നു.
write () ഫങ്ഷന്‍ "hello wo" എന്ന്‌ മാത്രമാണ്‌ പ്രദര്‍ശിപ്പിക്കുന്നത്‌. str എന്ന
അറേയില്‍ ശേഖരിക്കാവുന്ന പാമാവധി കാരക്റ്ററുകളുടെ എണ്ണം 10 ആണെന്ന്‌ aes
ഷനില്‍ സൂചിപ്പിച്ചിട്ടുമുണ്ട്‌. ഒരു ബൈറ്റ്‌ നള്‍ കാരക്റ്ററിന്‌ ('\0'- സ്ര്രിങ്ങിന്റെ അവസാന
കാരക്റ്റര്‍) വേണ്ടി മാറ്റിവെക്കപ്പെട്ടതിനാല്‍ സാധാരണ 9 കാരക്റ്ററുകള്‍ മാത്രമേ ശേഖരി
ക്കുവാന്‍ കഴിയുകയുള്ളു. എന്നാല്‍ ഇവിടെ ഓട്ട്പുട്ട്‌ ആയി വൈറ്റ്‌ സ്പേസ്‌ ഉള്‍പ്പെടെ
8 കാരക്റ്ററുകള്‍ മാത്രമാണ്‌ കാണപ്പെടുന്നത്‌. ഇതിനു കാരണം "p" എന്ന കാ൪ക്റ്ററിന്‌
ശേഷം എന്റര്‍ കീ ഉപയോഗിക്കുമ്പോള്‍ '\n', SCL എന്ന അറേയുടെ ആദ്യത്തെ അംഗ
മായി ശേഖരിക്കപ്പെടുന്നതിനാലാണ്‌. അതുകൊണ്ട്‌ "hello ൭൦" എന്ന സ്ര്രിങ്‌ പുതിയ
വരിയിലാണ്‌ പ്രദര്‍ശിപ്പിക്കപ്പെടുന്നത്‌.

ഈ പ്രോഗ്രാമില്‍ "hello.world" എന്ന്‌ ഇന്‍പുട്ട്‌ ചെയ്ത്‌ പ്രവര്‍ത്തിപ്പിച്ചാല്‍ താഴെ
കാണുന്ന വിധത്തിലുള്ള ഓട്ട്പുട്ട്‌ ലഭിക്കുന്നതാണ്‌.

Enter a character : a (.) ഡോട്ട്‌ കാര
Enter a string : hello.world — 206 ശ്രദ്ധിക്കുക.
Entered character string is : a

Entered string is
hello

ഈ മാറ്റം ഓട്പൂട്ടില്‍ ഉണ്ടായതിന്‌ കാരണം get Line () എന്ന ഫങ്ഷന്‍ ഡോട്ട്‌ aflam
ത്തിന്‌ (dot operator) മുമ്പുള്ള കാരക്റ്ററുകളെ മാത്രം സ്വീകരിച്ചതിനാലാണ്‌.

കീബോര്‍ഡിലെ കീകള്‍ ഉപയോഗിച്ച്‌ ഇന്‍പുട്ട്‌ ചെയ്യുമ്പോള്‍ ഒരുപാടു
കാര്യങ്ങള്‍ സംഭവിക്കുന്നതിനാല്‍ ഇത്തരം ഫങ്ഷനുകള്‍ ഉപയോഗി
ക്കുമ്പോള്‍ ജാഗ്രത പുലര്‍ത്തേണ്ടതാണ്‌. അതുകൊണ്ടു തന്നെ നിങ്ങള്‍
ആഗ്രഹിക്കുന്ന ഓട്ട്പുട്ട്‌ തന്നെ ലഭിക്കണമെന്നില്ല. മറ്റൊരു കാര്യം
ശ്രദ്ധിക്കേണ്ടത്‌ write () ഫങ്ഷനകത്ത്‌ strlen () എന്ന ഫങ്ഷന്‍ ഉപയോഗിച്ചിരി

9. MISES കൈകാര്യം ചെയ്യലും ഇന്‍പുട്ട്‌ //ഒട്ട്പുട്ട്‌ ഫങ്ക്ഷനുകളും

ക്കുന്നുവെന്നതാണ്‌. ഈ ഫങ്ഷന്‍ ഉപയോഗിക്കുന്നതിനു പകരം നേരിട്ട്‌ 10 അല്ലെ
ങ്കില്‍ 20 എന്നീ സംഖ്യകള്‍ നല്‍കാവുന്നതാണ്‌. കൊടുത്തിരിക്കുന്ന സംഖ്യയെക്കാളും
കുറവാണ്‌ കാരക്റ്ററുകളുടെ എണ്ണമെങ്കില്‍ ഇന്‍പുട്ട്‌ ചെയ്യപ്പെട്ട സ്ര്രിങ്ങിന്റെ തുടര്‍ച്ചയായി
ചില ASCII കാരക്റ്ററുകളും ചേര്‍ന്നാണ്‌ ജട്ട്പുട്ട്‌ ലഭിക്കുക. നിങ്ങള്‍ strlen ()
ഉപയോഗിക്കുമ്പോള്‍ സ്്രിങ്ങിനകത്തെ കാരക്റ്ററുകളുടെ കൃത്യമായ എണ്ണം സൂചിപ്പി
ക്കപ്പെടുന്നുണ്ട്‌. ഈ ഫങ്ഷനുകളെ കുറിച്ചുള്ള കൂടുതല്‍ വിവരങ്ങള്‍ പത്താമത്തെ
അധ്യായത്തില്‍ ചര്‍ച്ച ചെയ്യാം. string-h എന്ന ഹെഡര്‍ ഫയല്‍ ഉള്‍പ്പെടുത്തിയാല്‍
മാധ്രമേ ഈ ഫങ്ഷന്‍ ഉപയോഗിക്കുവാന്‍ കഴിയുകയുള്ളു.

താമെ കൊടുത്തിരിക്കുന്ന പചട്ടികയിതി ANF ഭാഗം പുരിച്ഛിച്ച്‌ സ്രീ ഫങ്‌
AUN}ADB താരതമ്യം ചെയ്യുക.

കഞമ്ധോശ്‌ ഫമ്ഷനുകഥ്‌ 6൧ ഫങഷനുകള്‍

ഉപയോഗ C10) (്ഥകഴറ്റിനകത്ത്‌ ആവശഥാമ ദു | ബ്‌ജകറ്റിമ്റി തുടര്‍ച്ചയാതി ്ധോട്‌|
മോ ലേരിമബിളിന്റെ പേരോ ചേര്‍ | ഓഷറേറും, ആവശഥാത WINEWI
ത്ത്‌ ഫങ്ഷമ്റി പേര്‌ ന്ധുചിഷിക്കുക | വേരിയബിളിന്റെ പേരോ ചേര്ത്തി)

8B DBA ഉപമോഗിക്കുക.

ഉപകരണങ്ങള്‍ ക7ബോര്ദ്ധോ മാണോ എന്ന്‌
ദ്ധുചിഷിക്കകെട്ടില്ലെരിത്‌

ത്തു

സ്വയം പരിശോധിക്കാം

=

. £0096 ഡാറ്റ ഇന്‍പുട്ട്‌ ചെയ്യുന്നതിനുള്ള ഒരു സ്ര്രീം ഫജംഷന്റെ പേരെ
ഴുതുക?

SS

write () ഫങ്ഷന്‍ ഉപയോഗിച്ച്‌ "Smoking is injurious to health" എന്ന
MSE പ്രദര്‍ശിപ്പിക്കുവാനുള്ള C++ പ്രസ്താവന എഴുതുക?

നി

സ്ര്രീം ഇന്‍പുട്ട്‌ /ഓട്ട്പുട്ട്‌ ഫജ്:ഷനുകള്‍ ഉപയോഗിക്കുന്നതിനാവശ്യമായ
ഹെഡര്‍ ഫയലിന്റെ പേരെഴുതുക?

റി

. getline () ഫങ്ഷന്റെ വാകൃഘടന (syntax) എഴുതുക?

ഒന്നാം വര്‍ഷ കമ്പ്യുട്ടര്‍ സയന്‍സ്‌

¢ നമുക്ക്‌ സംഗ്രഹിക്കാം

സ്്രിങ്ങുകളെ കൈകാര്യം ചെയ്യുന്നതിനാണ്‌ C++ പ്രോഗ്രാമുകളില്‍ കാരക്റ്റര്‍ അറേ
ഉപയോഗിക്കുന്നത്‌. ഒരു സ്ര്രിങ്ങിനു മെമ്മറി അനുവദിക്കപ്പെടുമ്പോള്‍ സ്ര്രിങ്ങിന്റെ
അവസാന ഭാഗത്താണ്‌ NB കാരക്റ്റര്‍ (൮) കൂട്ടിച്ചേര്‍ക്കപ്പെടുന്നത്‌. സ്ര്രിങ്ങുകള്‍ ഇന്‍പുട്ട്‌ /
ഓട്ട്പുട്ട്‌ ചെയ്യുന്നതിന്‌ വിവിധ തരം കണ്‍സോള്‍ ഫങ്ഷനുകള്‍ ലഭ്യമാണ്‌. ഇവ cstdio,
എന്ന ഹെഡര്‍ ഫയലിലാണ്‌ ഉള്‍പ്പെട്ടിട്ടുള്ളത്‌. iostream എന്ന ഹെഡര്‍ ഫയലും സ്ര്ടരി
ങ്ങുകളുടെ ഇന്‍പുട്ട്‌ /ഓട്ട്പുട്ട്‌ പ്രയോഗങ്ങള്‍ക്കുള്ള ചില സ്ട്രീം ഫങ്ഷനുകള്‍ ലഭ്യമാ
ക്കുന്നുണ്ട്‌ .

ag, പഠന ഗേട്ടങ്ങള്‍

ഈ പാഠഭാഗത്തിന്റെ പൂർത്തീകരണത്തിനു ശേഷം പഠിതാവ്‌

© ASI കൈകാര്യം ചെയ്യുന്നതിന്‌ കാരക്റ്റര്‍ GOO ഉപയോഗിക്കുന്നതിനുള്ള ശേഷി
ആര്‍ജിക്കുന്നു.

© £00496, സ്ര്രിങ്‌ എന്നിവ ഇന്‍പുട്ട്‌ /ഓട്ട്പുട്ട്‌ ചെയ്യുന്നതിനുള്ള വിവിധ തരം ബില്‍റ്റ്‌
ഇന്‍ ഫങ്ഷനുകള്‍ (Built in function) ഉപയോഗിക്കുന്നതിനുള്ള കഴിവ്‌ നേടുന്നു.

© കണ്‍സോള്‍ ഫങ്ഷനുകളും സ്ട്രീം ഫങ്ഷനുകളും താരതമ്യം ചെയ്യാനുള്ള പ്രാവീണ്യം
നേടുന്നു.

ലാബ്‌ പ്രവര്‍ത്തനങ്ങള്‍

1 ഒരു സ്ര്രിങ്‌ ഇന്‍പുട്ട്‌ ചെയ്ത്‌ അതിലെ വലിയ അക്ഷരങ്ങള്‍, ചെറിയ അക്ഷരങ്ങള്‍,
സംഖ്യകള്‍, പ്രത്യേക കാരക്റ്ററുകള്‍, വൈറ്റ്‌ സ്പേസുകള്‍ എന്നിവയുടെ എണ്ണം
കണ്ടുപിടിക്കുന്നതിനുള്ള C++ പ്രോഗ്രാം എഴുതുക.

2. ഒരു വാചകത്തിലെ വാക്കുകളുടെ എണ്ണം കണ്ടെത്തുന്നതിനുള്ള C++ പ്രോ്രഗാം
എഴുതുക.

3. ഒരു സ്ര്രിങ്‌ ഇന്‍പുട്ട്‌ ചെയ്ത്‌ അതിലെ എല്ലാ ചെറിയ സ്വരാക്ഷരങ്ങളും (vowels)

വലിയ സ്വരാക്ഷരങ്ങളാക്കി മാറ്റുന്നതിനുള്ള C++ പ്രോഗ്രാം എഴുതുക.

4. തന്നിരിക്കുന്ന സ്ര്രിങ്ങിനെ തിരിച്ചെഴുതുന്നതിനുള്ള പ്രോഗ്രാം എഴുതുക. ഉദാഹ
രണത്തിന്‌ "AND" ആണ്‌ ഇന്‍പുട്ട്‌ ചെയ്തതെങ്കില്‍ ഓട്ട്പുട്ടായി "DNA" എന്ന്‌
ലഭിക്കണം.

5. ഇന്‍പുട്ട്‌ ചെയ്ത വാക്ക്‌ ഉപയോഗിച്ച്‌ (ഉദാഹരണത്തിന്‌ COMPUTER) താഴെ
കാണുന്നവിധം ഒരു ധ്രികോണം നിര്‍മ്മിക്കുന്നതിനുള്ള പ്രോഗ്രാം എഴുതുക.
9. MISES കൈകാര്യം ചെയ്യലും ഇന്‍പുട്ട്‌ //ഒട്ട്പുട്ട്‌ ഫങ്ക്ഷനുകളും

Cc

Cc ഠ

Cc oO M

Cc oO M P

Cc oO M P U

Cc oO M P U T

Cc oO M P U T E

Cc oO M P U T E R

6 തന്നിരിക്കുന്ന വാചകത്തിലെ ഓരോ വാക്കിന്റെയും ആദ്യ കാരക്റ്റര്‍ DIM പ്രദര്‍ശി
പ്പിക്കുവാനുള്ള പ്രോ്രഗാം എഴുതുക. ഇവിടെ കണ്‍സോള്‍ ഇന്‍പുട്ട്‌ /ഓട്ട്പുട്ട anes
ഷനുകള്‍ മാത്രമേ ഉപയോഗിക്കാവൂ. ഉദാഹരണത്തിന്‌ "Save Water Save Nature"
എന്ന സ്ര്രിങ്‌ ഇന്‍പുട്ട്‌ ചെയ്താല്‍ ജട്ട്പുട്ട്‌ "SWSN" എന്നായിരിക്കണം.

7. ഒരു സ്ര്രിങ്‌ പാലിന്‍ഡ്രോം ആണോ അല്ലയോ എന്ന്‌ പരിശോധിക്കുന്നതിനുള്ള
പ്രോ്ഗാം എഴുതുക. (ഒരു സ്ര്രിങും അതിന്റെ തിരിച്ചെഴുതിയ രൂപവും ഒരേ പോലെ
യാണെങ്കില്‍ ആ സ്ര്‍്രിങ്‌ പാലിന്‍ഡ്രോം ആണ്‌. ഉദാഹരണം "MALAYALAM").

മാതൃക ചോദ്യങ്ങള്‍ ]]॥॥॥॥॥॥॥॥॥॥॥॥॥॥॥॥॥

ഹ്രസ്വോത്തര ചോദ്യങ്ങള്‍
1. putchar(97); എന്ന പ്രസ്താവനയുടെ ഓട്ട്പുട്ട്‌ എന്തായിരിക്കും?

2. കണ്‍സോള്‍ ഫങ്ഷന്റെയും സ്ര്രിങ്‌ ഫങ്ഷന്റെയും വ്ൃത്യാസം എഴുതുക.

von

3. get() ഫങ്ഷനുപയോഗിച്ച്‌
പ്രസ്താവന എഴുതുക.

computer" എന്ന സ്ര്രിങ്‌ ഇന്‍പുട്ട്‌ ചെയ്യുവാനുള്ള C++

4. താഴെ കൊടുത്തിട്ടുള്ള കോഡിന്റെ ഓട്ട്പുട്ട്‌ എഴുതുക.

puts (“hello”);

puts (“friends”);
ലഘു ഉപന്യാസം

1. താഴെ കൊടുത്തിരിക്കുന്ന C++ കോഡിന്റെ ഓട്ട്പുട്ട്‌ എഴുതുക
char str[] = "Program";
for(int i=0; str[i]!='\0O'; ++)
{
putchar(str[i]);
putchar('_');
}
൫5 ഒന്നാം വര്‍ഷ കമ്പ്യൂട്ടര്‍ സയന്‍സ്‌

2. താഴെ കൊടുത്തിരിക്കുന്ന C++ പ്രോഗ്രാമിലെ തെറ്റുകള്‍ കണ്ടെത്തി കാരണം വ്യക്ത
മാക്കുക .

#include<iostream.h>

using namespace std;

int main()
{
char ch, str{[10];
write("Enter a character ");
ch=getchar()j;
puts("Enter a string");
cin.getline(str);
cout<<"The data entered are " <<ch;
putchar(str);
}

3. താഴെ കൊടുത്തിട്ടുള്ള ഫങ്ഷനുകള്‍ നിരീക്ഷിക്കുക. അവ സാധുവാണെങ്കില്‍, പ്രവര്‍
ത്തിക്കുമ്പോള്‍ എന്ത്‌ സംഭവിക്കുന്നുവെന്ന്‌ വിവരിക്കുക. അവ അസാധുവാണെങ്കില്‍
കാരണം എഴുതുക (വേരിയബിള്‍ സാധുവാണെന്ന്‌ സങ്കല്‍പ്പിക്കുക).

a) getchar(ch); b) gets(str[5]);
c) putchar ("hello"); d) cin.getline(name,20,'.');
e) cout.write("hello world",10);
4. താഴെ കൊടുത്തിരിക്കുന്ന പ്രസ്താവനകള്‍ വായിച്ച്‌ ചോദ്യങ്ങള്‍ക്ക്‌ ഉത്തരമെഴുതുക.
char name[20];
cin>>name;
cout<<name;
© ഇന്‍പുട്ട്‌ സ്ര്രിങ്ങ്‌ "Sachin Tendulkar" എന്നാണെങ്കില്‍ ജട്ട്പുട്ട്‌ എന്തായിരിക്കും?
ന്യായീകരിക്കുക.

© തന്നിരിക്കുന്ന ഇന്‍പുട്ട്‌ സ്്രിങ്‌ തന്നെ ഓട്ട്പുട്ടായി ലഭിക്കുന്നതിന്‌ പ്രസ്താവനയില്‍
ആവശ്യമായ മാറ്റം വരുത്തുക .

ഉപന്യാസം
1. കണ്‍സോള്‍ ഇന്‍പുട്ട്‌ /ഓട്ട്പുട്ട്‌ ഫങ്ഷനുകള്‍ ഉദാഹരണസഹിതം വിവരിക്കുക.

2. സ്ര്രീം ഇന്‍പുട്ട്‌ /ഓഈട്ട്പുട്ട ഫങ്ഷനുകള്‍ ഉദാഹരണസഹിതം വിവരിക്കുക.
കഴിഞ്ഞ അധ്യായങ്ങളില്‍ ലളിതമായ ചില പ്രോഗ്രാമു
കള്‍ നാം ചര്‍ച്ച ചെയ്തു. എന്നാല്‍ സങ്കീര്‍ണമായ പ്രശ്ന

പ്രധാന ആരയങ്ങള്‍ ങ്ങള്‍ പരിഹരിക്കുന്നതിന്‌ ആയിരക്കണക്കിന്‌ വരികളുള്ള
വലിയ പ്രോഗ്രാമുകള്‍ ആവശ്യമുണ്ട്‌. അധ്യായം 4 ല്‍

ട മോഡുലാര്‍ പ്രോ്രോമിങ്ങിന്റെ ആയം ചര്‍ച്ച ചെയ്തതുപോലെ സങ്കീര്‍ണമായ പ്രശ്‌നങ്ങള്‍
൭ CH ലെ ഫങ്ഷനുകള്‍ ചെറിയ പ്രശ്നങ്ങളായി വിഭജിക്കുകയും അവ ഓരോന്നും
2 മുന്‍നിര്‍വചിത ഫങ്ഷനുകള്‍ പരിഹരിക്കുന്നതിന്‌ വേണ്ട പ്രോഗ്രാമുകള്‍ എഴുതുകയും
ഠ സ്ട്രിങ്‌ ഫങ്ഷനുകള്‍ ചെയ്യുന്നു. മറ്റൊരു രീതിയില്‍ പറഞ്ഞാല്‍ നാം വലിയ

പ്രോഗ്രാമുകളെ ചെറിയ ഉപപ്രോഗ്രാമുകളായി വിഭജി
ക്കുന്നു. C++ ല്‍ ഫങ്ഷന്‍ എന്നത്‌ വലിയ പ്രോഗ്രാമു
കളെ ചെറിയ ഉപപ്രോഗ്രാമുകളായി വിഭജിക്കുന്നതിനുള്ള

ഠ ഗണിത ഫങ്ഷനുകള്‍
ഠ ക്യാരക്ടര്‍ ഫങ്ഷനുകള്‍
© MO കണ്‍വേര്‍ഷന്‍ ക്രൈകാര്യം

ഒരു മാര്‍ഗ്ഗമാണ്‌. main(), sqrt(), gets(),
ഫങ്ഷനുകള്‍ getchar() തുടങ്ങിയ ഫങ്ഷനുകള്‍ ഇതിനോടകം

© ഉപയോക്തു നിര്‍മിത ഫങ്ഷനുകള്‍ തന്നെ നാം പഠിച്ചിട്ടുണ്ട്‌ ഇതില്‍ main () ഫങ്ഷന്‍ ഒഴി
ഠ ഉപയോക്രു നിര്‍മിത ഫങ്ഷനുകള്‍ കെ ബാക്കിയെല്ലാം പ്രത്യേക ഉദ്യമത്തിനു വേണ്ടി തയാ
നിര്‍മിക്കുന്നു. റാക്കിയതും ഉടനെ തന്നെ ഉപയോഗത്തിന്‌ ലഭ്യമാകുന്ന

ഠ ഫങ്ഷനുകളുടെ പ്രോട്ടോ ടൈക്‌ വയുമാണ്‌. അതുകൊണ്ട്‌ ഇത്തരം ഫങ്ഷനുകള്‍ ബില്‍ട്ട്‌--

© ഫങ്ഷനുകളുടെ ആര്‍ധ്യുമെന്റ്‌ ഇന്‍-ഫങ്ങീഷന്‍ അല്ലെങ്കില്‍ മുന്‍നിര്‍വചിത ഫങ്ഷനുകള്‍

ഠ ഡിഫാര്‍ട്ട്‌ ആര്‍ധ്യുമെന്റുകളുള്ള എന്ന്‌ അറിയപ്പെടുന്നു. ഇത്തരം ഫങ്ഷനുകള്‍ക്ക്‌ പുറമേ
ഫങ്ഷനുകള്‍ പ്രത്യേക ഉദ്യമത്തിനായി ഫങ്ഷനുകള്‍ നമുക്ക്‌ നിര്‍വ

ഠ ഫങ്ഷനുകര്‍ വിളിക്കുന്നതിനുള്ള ചിക്കാൻ കഴിയും. ഇവയെ യൂസര്‍ ഡിഫൈന്‍ഡ്‌ അഥവാ
മാറ്റങ്ങള്‍ ഉപയോക്ത്യ നിര്‍വചിത ഫങ്ഷന്‍ എന്ന്‌ വിളിക്കുന്നു.

© വേരിയബിളുകര്‍, ഫങ്ഷനുകര്‍ എന്നിവ ഈ അധ്യായത്തില്‍ മുന്‍ നിര്‍വചിത ഫങ്ഷനുകളെ
യുടെ വ്യാപ്തിയും ജീവനവും കുറിച്ച്‌ നാം വിപുലമായി ചര്‍ച്ച ചെയ്യുകയും നമ്മുടെ

സ്വന്തം ഫങ്ഷനുകള്‍ നിര്‍വ്വചിക്കുന്നത്‌ എങ്ങനെ എന്ന്‌
പഠിക്കുകയും ചെയ്യും. ഇതിലേക്ക്‌ പോകുന്നതിന്‌ മുന്‍പേ
മോഡുലാര്‍ പ്രോഗ്രാമിങ്‌ എന്ന പ്രോ്രഗാമിങ്‌ ശൈ
ലിയെക്കുറിച്ച്‌ നമുക്ക്‌ സ്വയം പരിചയപ്പെടാം.

© സ്വയം ആവര്‍ത്തിക്കുന്ന ഫങ്ഷനുകള്‍
© ഹെഡര്‍ ഫയലുകളുടെ നിര്‍മാണം

10.1 മോഡുലാര്‍ പ്രോഗ്രാമിങ്ങിന്റെ ആശയം

(Concept of Modular programming)
ഒരു സ്‌കൂളിന്‌ ആവശ്യമായ സോഫ്റ്റ്വെയറിന്റെ കാര്യം
നമുക്ക്‌ പരിഗണിക്കാം. വൃത്യസ്ത ഉദ്യമങ്ങള്‍ക്ക്‌ വേണ്ട
ധാരാളം പ്രോഗ്രാമുകള്‍ അടങ്ങിയ വളരെ വലുതും
സങ്കീര്‍ണ്ണവുമായ ഒരു സോഫ്റ്റ്വെയര്‍ ആണിത്‌. ചിത്രം
10.1 കാണിച്ചിരിക്കുന്നത്‌ പോലെ സങ്കീര്‍ണമായ സ്കുള്‍

PST6F3

ര io
വലിയ cone - ര്‍
~ സോഫ്റ്റ്‌ വെയ;
ടം =

1
[ | T ഉന്‍പുട്‌
1 ജീവനക്കാരെ
പ്രവേഭനം വിലയിരുത്തല്‍ fF കണക്കാക്കുക. rem >
നിയന്തിക്കല്‍

1111 | മോഡ്യൂളുകള്‍

— mormon’ dona ജഡ്ക: aaa) സോഫ്വേള്‍ര്‍
allo 10. 1 22030196 പ്രോഗ്രാമിങ്ങ്‌ മ്മി maaan.
പ്രവര്‍ത്തനങ്ങളെ ചെറിയ ഉദ്യമങ്ങളോ മോഡ്യൂളുകളോ ആയി വിഭജിച്ച്‌ സമാന്തരമായി
നിര്‍മ്മിച്ചതിന്‌ ശേഷം ഒരുമിച്ച്‌ കൂട്ടി പൂര്‍ണ്ണമായ ഒരു സോഫ്റ്റ്വെയര്‍ നിര്‍മിക്കുവാന്‍
കഴിയും. പ്രോഗ്രാമിങ്ങില്‍ മുഴുവന്‍ പ്രശ്നത്തേയും ചെറിയ പ്രശ്നങ്ങളാക്കി വിഭജിച്ച്‌
പ്രത്യേകം പ്രോഗ്രാമുകള്‍ എഴുതി അവ പരിഹരിക്കുകയും ചെയ്യും. ഈ തരത്തിലുള്ള
സമീപനം മോഡുലാര്‍ പ്രോ്ഗാമിങ്‌ എന്നറിയപ്പെടുന്നു. ഓരോ ഉപളദ്യമത്തേയും ഒരു
മോഡ്യ്യൂളായി പരിഗണിക്കുകയും ഓരോ മോഡ്യ്യുളുകളിലും നാം പ്രോഗ്രാം എഴുതുകയും
ചെയ്യുന്നു. വലിയ പ്രോഗ്രാമുകളെ ചെറിയ ഉപപ്രോഠ്രഗാമാക്കി വിഭജിക്കുന്ന പ്രവര്‍ത്തനത്തെ
മോഡുലറൈസേഷന്‍ എന്ന്‌ വിളിക്കുന്നു.
മോഡുലറൈസേഷന്‍ നടപ്പിലാക്കുന്നതിന്‌ കമ്പ്യൂട്ടര്‍ പ്രോഗ്രാമിങ്ങ്‌ ഭാഷകള്‍ക്ക്‌ വിവിധ
മാര്‍ഗ്ഗങ്ങള്‍ ഉണ്ട്‌. ഉപപ്രോ്രഗാമുകളെ (sub program) സാധാരണയായി ഫങ്ഷനുകള്‍
എന്നാണ്‌ വിളിക്കുന്നത്‌. C++ ഉം ഫങ്ഷനുകള്‍ കൊണ്ട്‌ മോഡ്യുലാര്‍ പ്രോഗാമിങ്ങ്‌
നടപ്പിലാക്കുന്നു.
മോഡ്യുലാര്‍ പ്രോ്രഗാമിങ്ങിന്റെ മേന്‍മകള്‍
മോഡ്യുലാര്‍ ശൈലിയില്‍ ഉള്ള പ്രോഗ്രാമിങ്ങിന്‌ നിരവധി ഗുണങ്ങള്‍ ഉണ്ട്‌. ഇത്‌ പ്രോഗ്രാ
മിന്റെ വലിപ്പവും സങ്കീര്‍ണ്ണതയും കുറച്ച്‌ പ്രോഗ്രാം കൂടുതല്‍ വായനാ സുഖമുള്ളതും വീണ്ടും
ഉപയോഗിക്കാന്‍ സാധിക്കുന്നതും, തെറ്റുകള്‍ കണ്ടുപിടിച്ച്‌ അവ മാറ്റുന്ന പ്രവര്‍ത്തനം
എളുപ്പത്തിലാക്കുകയും ചെയ്യുന്നു. ഈ പ്രത്യേകതകള്‍ വിശദമായി നമുക്ക്‌ ചര്‍ച്ച ചെയ്യാം.
ദുപഠ്ഗഗാമിന്റെ വിച്ച കുഠക്കുമ്നു: ചില സന്ദര്‍ഭങ്ങളില്‍ ഒരു പ്രോഗ്രാമിലെ ചില
xy’
നിര്‍ദേശങ്ങള്‍ പ്രോഗ്രാമിന്റെ വിവിധ ഭാഗങ്ങളില്‍ ആവര്‍ത്തിച്ചേക്കാം. പ + Jy ; എന്ന
പദ്രപയോഗം പരിഗണിക്കുക. X ന്റെയും Y യുടേയും വിലകള്‍ ഉപയോഗിച്ച്‌ ഈ പദ്ര്ര
യോഗത്തിന്റെ വില കണ്ടുപിടിക്കുന്നതിന്‌ താഴെകൊടുത്തിരിക്കുന്ന നിര്‍ദേശങ്ങള്‍ നമുക്ക്‌
ഉപയോഗിക്കണ്ടേതുണ്ട്‌.
1. X ന്റെ അഞ്ചാമത്തെ വര്‍ഗ്ഗം കണ്ടുപിടിക്കുക.
2. Y യുടെ ഏഴാമത്തെ വര്‍ഗ്ഗം കണ്ടുപിടിക്കുക.
3. ഘട്ടം ഒന്നിലും രണ്ടിലും ലഭിച്ചു ഫലങ്ങള്‍ കൂട്ടുക.
4. X ന്റെ വർഗ്ഗമൂലം കണ്ടുപിടിക്കുക.
5. Y യുടെ വർഗ്ഗമൂലം കണ്ടുപിടിക്കുക.
6. ഘട്ടം 4 ലും 5 ലും ലഭിച്ച ഫലങ്ങള്‍ കൂട്ടുക.
7. ഘട്ടം 3 ല്‍ ലഭിച്ച ഫലത്തെ ഘട്ടം 6 ല്‍ ലഭിച്ചു ഫലം കൊണ്ട്‌ ഭാഗിക്കുക.
ഘട്ടം 1 ന്റെയും ഘട്ടം 2 ന്റെയും ഉത്തരങ്ങള്‍ കണ്ടുപിടിക്കുന്നതിന്‌ പ്രത്യേകം ലൂപ്പുകള്‍
| eon 10. ഫങ്ഷനുകള്‍

ആവശ്യമാണെന്ന്‌ നമുക്ക്‌ അറിയാം. ഒരു സംഖ്യയുടെ വർഗ്ഗമൂലം കാണുന്നതിനാവ
ശ്യമായ യുക്തിയുടെ സങ്കീര്‍ണ്ണത നിങ്ങള്‍ക്ക്‌ സങ്കല്‍പ്പിക്കാന്‍ കഴിയുമോ?
വ്യത്യസ്ത ഇടങ്ങളില്‍ വ്യത്യസ്ത ഡാറ്റ പ്രവര്‍ത്തിപ്പിക്കുന്നതിന്‌ ഒരേ നിര്‍ദേശങ്ങള്‍
പ്രോഗ്രാമിന്‌ ആവ്ൃശ്യമാണ്‌ എന്നത്‌ ഇതില്‍ നിന്ന്‌ വ്യക്തമാണ്‌. ആവര്‍ത്തിക്കുന്ന ഉദ്യമ
ങ്ങള്‍ വേര്‍തിരിക്കുന്നതിനും ഇതിന്‌ വേണ്ട നിര്‍ദേശങ്ങള്‍ എഴുതാനും മോഡുലാര്‍
സമീപനം സഹായിക്കുന്നു. ഇത്തരം നിര്‍ദേശങ്ങളുടെ കൂട്ടത്തിന്‌ പേര്‍ നിര്‍ദേശിക്കുവാനും
ആ പേര്‍ ഉപയോഗിച്ച്‌ ഇവയെ പ്രവര്‍ത്തിപ്പിക്കുന്നതിനും നമുക്ക്‌ കഴിയും അങ്ങനെ
പ്രോഗ്രാമിന്റെ വലിപ്പം കുറക്കുന്നു.

തെറ്റിനുള്ള സാധ്ൃത: ദ്രപഗാമിന്റെ വലച്ച കുറയുമ്വോള്‍ സ്ഥാഭാവികമായും വാക്യ
ഘടനയിലെ തെറ്റുകളും കുറയും. യുക്തിപരമായ തെറ്റുകള്‍ ഉണ്ടാവാനുള്ള സാധ്യത
പരിമിതപ്പെടും. സങ്കീര്‍ണ്ണമായ പ്രശ്നങ്ങള്‍ പരിഹരിക്കപ്പെടുമ്പോള്‍ പ്രശ്നത്തിന്റെ
എല്ലാവശങ്ങളും നമുക്ക്‌ പരിഗണിക്കേണ്ടതായി വരും. അതിനാല്‍ പ്രശ്‌ന പരിഹാരത്തിന്‌
വേണ്ട യുക്തിയും സങ്കീര്‍ണമാകും. എന്നാല്‍ മോഡ്യുലറൈസ്‌ ചെയ്യപ്പെട്ട ഒരു പ്രോ
ഗ്രാമില്‍ ഒരു സമയം ഒരു മോഡ്യൂളില്‍ മാര്തം നാം (്രദ്ധിച്ചാല്‍ മതിയാകും. ഓട്ട്പൂട്ടില്‍
എന്തെങ്കിലും തെറ്റ്‌ കണ്ടുപിടിക്കപ്പെട്ടാല്‍ ബന്ധപ്പെട്ട മോഡ്യൂള്‍ കണ്ടെത്തി അവിടെ
വച്ച്‌ തന്നെ തെറ്റ്‌ തിരുത്തുവാനും നമുക്ക്‌ കഴിയും.

പ്രോ്രഗാമിങ്ങിന്റെ സങ്കീര്‍ണ്ണത കുറക്കുന്നു: മുകളില്‍ കണ്ടെത്തിയ രണ്ട്‌ ഗുണങ്ങളുടേ
യും മുഴുവന്‍ ഫലം പ്രോ്ഗാമിങ്ങിന്റെ സങ്കീര്‍ണത കുറയ്ക്കുന്നു എന്നതാകുന്നു. നാം
പ്രശ്നത്തെ ചെറിയ ഭാഗങ്ങളായി കൃത്യമായി ഭാഗിക്കുകയാണെങ്കില്‍ പ്രശ്ന പരിഹാര
ത്തിനു വേണ്ട യുക്തിവികസനം ലളിതമാകും. അങ്ങനെ മോഡുലറൈസേഷന്‍ ഒരു
സമയത്ത്‌ ലഘൂകരിക്കപ്പെട്ട ഒരു ഉദ്യമം നമ്മുടെ മനസ്സിലേക്ക്‌ കൊണ്ട്‌ വന്ന്‌ പ്രോഗ്രാമി
ങ്ങിന്റെ വലിപ്പം കുറക്കുകയും അവയിലുള്ള തെറ്റുകള്‍ കണ്ടുപിടിച്ച്‌ തിരുത്തുന്ന
പ്രവര്‍ത്തനം എളുപ്പത്തിലാക്കി പ്രോഗ്രാമിന്റെ സങ്കീര്‍ണ്ണത കുറക്കുകയും ചെയ്യുന്നു.

പുനരുപയോഗം മെച്ചപ്പെടുത്തുന്നു; ഓരോ തവണയും പുതിയതായി ഒരു ഫങ്ഷന്‍
എഴുതുന്നതിന്‌ പകരം ഒരിക്കല്‍ എഴുതപ്പെട്ട ഒരു ഫങ്ഷന്‍ മറ്റനവധി പ്രോഗ്രാമുകളില്‍
പിന്നീട്‌ ഉപയോഗിക്കച്ചേക്കാം. ഇത്‌ പ്രോ്രാം വികസനത്തിന്‌ വേണ്ട സമയം കുറക്കുന്നു.

മോഡ്യുലാര്‍ പ്രോ്രഗാമിന്റെ ന്യൂനതകള്‍; മോഡ്യുലാര്‍ പ്രോഠ്രഗാമിങ്ങിന്‌ പ്രബലമായ
മേന്‍മകള്‍ ഉണ്ടെങ്കിലും പ്രശ്നത്തെ ശരിയായ രീതിയില്‍ വിഭജിക്കുക എന്നത്‌ ഒരു
വെല്ലുവിളി ആണ്‌. ഓരോ ഉപ പ്രശ്നങ്ങളും മറ്റുള്ളവയില്‍ നിന്ന്‌ സ്വത്ര്രമായിരിക്കണം.
മോഡ്യൂളുകളുടെ പ്രവര്‍ത്തന ശ്രേണി തയാറാക്കുമ്പോള്‍ അങ്ങേയറ്റം ശ്രദ്ധപുലര്‍ത്തണം.
10.2 C++ ലെഫങ്ഷനുകള്‍ (1സ്അഥഗഥടന C++) ന

വെള്ളം കാഷിഷൊടി
കോഫി ഉണ്ടാക്കുന്ന യ്ര്്രത്തിന്റെ കാര്യം നമുക്ക്‌ പരിഗണിക്കാം.

allo 10.2 നെ അടിസ്ഥാനമാക്കി അതിന്റെ പ്രവര്‍ത്തനങ്ങള്‍
ചര്‍ച്ച ചെയ്യാം. യ്രന്രത്തിലേക്ക്‌ വെള്ളം, പാല്‍, പഞ്ചസാര, കാപ്പി
പ്പൊടി എന്നിവ കൊടുക്കുന്നു. യന്ത്രം മുന്‍കൂട്ടി സൂക്ഷിച്ചിട്ടുള്ള
നിര്‍ദേശങ്ങള്‍ക്ക്‌ അനുസരിച്ച്‌ പ്രവര്‍ത്തിപ്പിക്കുകയും ഇവ ഉപ
യോഗിച്ച്‌ തയ്യാറാക്കുന്ന കോഫി ഒരു കപ്പില്‍ ശേഖരിക്കുകയും
ചെയ്യുന്നു. അതിനുവേണ്ട നിര്‍ദ്ദേശങ്ങള്‍ താഴെ കൊടുത്തി

രിക്കുന്നതു പോലെ ആയിരിക്കും. ചിത്രം 70. 2 കോഫി എങ്ക്കു
യ്ര്തത്തിമ്റി ്രവരീത്തനം.

60 മില്ലി പാല്‍, 120 മില്ലി വെള്ളം 5 (ഗാം കാപ്പിപ്പൊടി 20 ഗ്രാം പഞ്ചസാര
എന്നിവ യ്രന്രത്തിന്റെ സംഭരണ സ്ഥലത്ത്‌ നിന്ന്‌ എടുക്കുക.

മിശ്രിതം തിളപ്പിക്കുക.
അവയെ നിര്‍ഗമന മാര്‍ഗ്ഗത്തിലേക്ക്‌ കൈമാറുക.

ഈ പ്രവര്‍ത്തനങ്ങള്‍ തുടങ്ങുവാന്‍ യന്ത്രത്തില്‍ ഒരു ബട്ടണ്‍ സാധാരണയായി ഉണ്ടാ
കും. ഈ ബട്ടണിന്‌ make coffee എന്ന പേര്‍ ഉപയോഗിച്ച്‌ നമുക്ക്‌ നാമകരണം ചെയ്യാം.
ഈ പ്രവര്‍ത്തനം പ്രതീകാത്മമായി താഴെ പറയുന്ന രീതിയില്‍ രേഖപ്പെടുത്താന്‍ കഴിയും.
കപ്പ്‌ = കാപ്പി ഉണ്ടാക്കുക (വെള്ളം, പാല്‍, പഞ്ചസാര, കാപ്പിപൊടി). ഇവയെല്ലാം
പ്രോഗ്രാമിലെ ഫങ്ഷനുകളുമായി നമുക്ക്‌ താരതമ്യം ചെയ്യാം. കാപ്പി ഉണ്ടാക്കുക എന്ന
പദം ഫങ്ഷന്റെ പേര്‍ ആയും (വെള്ളം, പാല്‍, പഞ്ചസാര, കാപ്പിപൊടി) ഛന്നിവ ഫങ്ഷന്‍
വേണ്ട പാരാമീറ്ററുകളായും "Coffee" തിരിച്ച്‌ കിട്ടുന്ന ഫലവുമാണ്‌.
ഇത്‌ കപ്പില്‍ സംഭരിക്കുന്നു. കപ്പിന്‌ പകരം ഗ്ലാസ്സോ, ടംബ്ലറോ അല്ലെ
ങ്കില്‍ മറ്റേതെങ്കിലും പാഠരതമോ നമുക്ക്‌ ഉപയോഗിക്കാം. അതുപോലെ
തന്നെ ഒരു C++ ഫങ്ങ്ഷന്‍ പാരാമീറ്ററുകള്‍ സ്വീകരിക്കുകയും അതില്‍
പ്രവര്‍ത്തിച്ച്‌ ഫലം തിരിച്ച്‌ നല്‍കുകയും ചെയ്യുന്നു. ചി്രം 10.3 ഒരു
ഫങ്ഷനായി കണക്കാക്കാം. അതിന്‌ 3,5 2,6 എനാ? വിലകള്‍ പാരാ
മദ്ററുകളായി സ്ഥികതിച്ച' GHA തമ്മില്‍ കുട്ടുകയും തുക € എന്ന
വേരിയബിളില്‍ ശേഖരിക്കുകയും ചെയ്യുന്നു. അത്‌ താഴെ പറയുന്ന .
ചിത്രം 10.2: കുൂട്ടനാതിന്‌ ഉള്ള
രീതിയില്‍ എഴുതാം. ഫങ്ഘല്‍

C = Add (3, 5, 2, 6)

ഒരു പ്രോധ്രഗാമില്‍ പ്രശ്നപരിഹാരത്തിന്റെ ഭാഗമായി ഒരു പ്രത്യേക ഉദ്യമം നിര്‍വ
ഹിക്കുന്നതിന്‌ നാമകരണം ചെയ്യപ്പെട്ട ഒരു കൂട്ടം നിര്‍ദ്ദേശങ്ങളുടെ ഘടകമാണ്‌ ഫങ്ഷന്‍
എന്ന്‌ നമുക്ക്‌ പറയാം. എല്ലാ ഫങ്ഷനുകള്‍ക്കും പരാമീറ്ററുകള്‍ ആവശ്യമാണ്‌ എന്നതും
അവയെല്ലാം ചില വില തിരിച്ചു നല്‍കണമെന്നതും നിര്‍ബന്ധമില്ല വിവിധ ഉദ്യമങ്ങള്‍ക്ക്‌
എപ്പോഴും ഉപയോഗിക്കാന്‍ കഴിയുന്ന ഫങ്ഷനുകളുടെ വിലപ്പെട്ട ശേഖരം C++ നല്‍കു
ന്നു. (ഇവി, pow() sqrt) തുടങ്ങിയ ഫങ്ഷനുകളില്‍ അവ ചെയ്യേണ്ട ഉദ്യമങ്ങള്‍ നേരത്തെ
തന്നെ എഴുതപ്പെട്ടതും തെറ്റുകള്‍ തിരുത്തി കമ്പയില്‍ ചെയ്ത്‌ അവയുടെ നിര്‍വ്വചനങ്ങള്‍
ഹെഡര്‍ ഫയലുകള്‍ എന്ന്‌ വിളിക്കുന്ന ഫയലുകളില്‍ സൂക്ഷിച്ചിരിക്കുകയും ചെയ്യുന്നു.
ഉപയോഗത്തിന്‌ തയ്യാറായ ഇത്തരം ഉപപ്രോഠ്രഗാമുകളെ മുന്‍നിര്‍വുചിത ഫങ്ഷനുകള്‍
അല്ലെങ്കില്‍ അന്തര്‍നിര്‍മിത ഫങ്ഷനുകള്‍ (built-in functions) എന്ന്‌ വിളിക്കുന്നു.

വലിയ പ്രോഗ്രാമുകള്‍ എഴുതുമ്പോള്‍ മോഡ്യൂലറൈസേഷന്‍ നടത്തുന്നതിന്‌ ഇത്തരം
മുന്‍നിര്‍വചിത ഫങ്ങ്ഷനുകള്‍ മതിയാവില്ല. ചില പ്രത്യേക ഉദ്യമങ്ങള്‍ നിര്‍വഹിക്കുന്നതിന്‌
നമ്മുടെ സ്വന്തം ഫങ്ഷനുകള്‍ നിര്‍വചിക്കുന്നതിന്‌ വേണ്ട സ്വാകര്യം C++ നല്‍കുന്നു.
നിര്‍വഹിക്കേണ്ട ഉദ്യമം, പേര്‍, ആവശ്യമുള്ള ഡാറ്റ എന്നിങ്ങനെ ഒരു ഫങ്ഷനുമായി
ബന്ധപ്പെട്ട സകലതും ഉപയോക്താവിനാല്‍ തീരുമാനിക്കപ്പെടുന്നതിനാല്‍ അവ ഉപ
യോക്ത്യ നിര്‍വചിത ഫങ്ഷനുകള്‍ (user defined function) എന്ന്‌ അറിയപ്പെടുന്നു. അപ്പോള്‍
(main () ) ഫങ്ങ്ഷന്റെ ആവശ്യം എന്താണ്‌? ഉപയോക്താവ്‌ ഉദ്യമം തീരുമാനിക്കുന്നു
എന്ന അര്‍ത്ഥത്തില്‍ ഇവ ഉപയോക്തൃ നിര്‍മിത ഫങ്ഷന്‍ ആയി പരിഗണിക്കാവുന്നതാണ്‌.
പ്രോഗ്രാമിന്റെ പ്രവര്‍ത്തനം main () ഫങ്ഷനില്‍ നിന്ന്‌ ആരാഭിക്കുന്നതിനാല്‍ ഇത്‌ C++
| ക്ര 10. ഫങ്ഷനുകള്‍

ലെ ഒഴിച്ചു കൂടാന്‍ സാധിക്കാത്ത ഫങ്ഷനാണ്‌. main () ഫങ്ഷനില്ലാതെ C++ പ്രോഗ്രാം
പ്രവര്‍ത്തിക്കില്ല. എല്ലാ ഫങ്ഷനുകളും ഒരു സ്റ്റേറ്റ്മെന്റില്‍ നിന്ന്‌ അവ വിളിക്കുമ്പോഴാണ്‌
പ്രവര്‍ത്തിക്കുന്നത്‌.

10.3 മുന്‍കുട്ടി നിര്‍വചിച്ച്‌ ഫങ്ഷനുകള്‍ (Predefind Functions)

വിവിധ ഉദ്യമങ്ങള്‍ക്ക്‌ വേണ്ടി ധാരാളം ഫങ്ഷനുകള്‍ ലഭ്യമാക്കുന്നു. ഏറ്റവും സാധാര
ണയായി ഉപയോഗിക്കുന്ന ഫങ്ഷനുകള്‍ മാര്തം നാം ചര്‍ച്ചചെയ്യുന്നു. ഇത്തരം ഫങ്ഷ
MAB ഉപയോഗിക്കുമ്പോള്‍ അവയില്‍ ചിലതിന്‌ നിശ്ചയിച്ചിട്ടുള്ള ഉദ്യമം നിര്‍വഹി
ക്കുന്നതിന്‌, ഡാറ്റ ആവശ്യമാണ്‌. ഫങ്ഷന്റെ പേരിന്‌ ശേഷം പാരന്തസീസ്‌ എന്ന ഒരു
ജോഡി ബ്രാക്കറ്റുകള്‍ക്കുള്ളില്‍ ഉപയോഗിക്കുന്ന ഈ ഡാറ്റയെ പരാമീറ്ററുകള്‍ അല്ലെങ്കില്‍
ആര്‍ഗ്യുമെന്റുകള്‍ എന്ന്‌ നാം വിളിക്കുന്നു.

ഉദ്യമങ്ങള്‍ നിര്‍വഹിച്ചതിനു ശേഷം ഫലങ്ങള്‍ നല്‍കുന്ന ചില ഫങ്ഷനുകള്‍ ഉണ്ട്‌. ഈ
ഫലം ഫങ്ഷന്‍ തിരിച്ചു നല്‍കുന്ന വില എന്നറിയപ്പെടുന്നു. ചില ഫങ്ഷനുകള്‍ ഒരു
വിലയും തിരിച്ചു തരുന്നില്ല. പകരം അവയുടെ പ്രത്യേക ഉദ്യമം നിര്‍വ്വഹിക്കുന്നു. തുടര്‍
ന്നുള്ള ഭാഗങ്ങളില്‍ സ്ട്രിങ്ങുകള്‍ കൈകാര്യം ചെയ്യുന്നതിനും ഗണിത പ്രക്രിയകള്‍ നട
ത്തുന്നതിനും ക്യാരക്ടര്‍ ഡാറ്റയില്‍ പ്രവര്‍ത്തിക്കുന്നതിനുമുള്ള ഫങ്ഷനുകള്‍ നാം
ചര്‍ച്ചചെയ്യും. ഇത്തരം ഫങ്ഷനുകള്‍ ഉപയോഗിക്കുമ്പോള്‍ അതുമായി ബന്ധപ്പെട്ട
ഹെഡര്‍ ഫയലുകള്‍ ച്രോഠ്രഗാമില്‍ ഉള്‍പ്പെടുത്തേണ്ടതാണ്‌.

10.3.1 സ്ഭ്രിങ്‌ ഫങ്ഷനുകള്‍ (String Functions)

സ്ട്രിങ്ങുകള്‍ കൈകാര്യം ചെയ്യുന്നതിന്‌ ധാരാളം സ്ട്രിങ്‌ ഫങ്ഷനുകള്‍ C++ ല്‍ ലഭ്യ
മാണ്‌. അധ്യായം 9 ല്‍ ചര്‍ച്ചചെയ്തത്‌ പോലെ C++@8 സ്ര്ടിങ്‌ ഡാറ്റാടൈപ്പ്‌ ഇല്ലാത്തതി
നാല്‍ സ്ര്രിങ്‌ കൈകാര്യം ചെയ്യുന്നതിന്‌ ക്യാരക്ടറുകളുടെ അറെ ആണ്‌ ഉപയോഗിക്കു
ന്നത്‌ അതുകൊണ്ട്‌ തുടര്‍ന്നു വരുന്ന ചര്‍ച്ചകളില്‍ സ്ട്രിങ്‌ എന്ന പദം വരുമ്പോഴെല്ലാം
അത്‌ ഒരു ക്യാരക്ടര്‍ GOO ആണെന്ന്‌ അനുമാനിക്കുക. സാധാരണയായി ഉപയോഗി
ക്കുന്ന സ്ര്രിങ്‌ ഫങ്ഷനുകള്‍ താഴെ കൊടുക്കുന്നവയാണ്‌. ഈ ഫങ്ഷനുകള്‍ ഉപയോഗി
ക്കുന്നതിന്‌ നമ്മുടെ C++ പ്രോഗ്രാമില്‍ cstring (ടര്‍ബോ C++8 string.h) എന്ന
ഹെഡര്‍ഫയല്‍ ഉള്‍പ്പെടുത്തേണ്ടതുണ്ട്‌.
a. strlen()
ഒരു സ്ര്രിങ്ങിന്റെ നീളം കണ്ടുപിടിക്കുന്നതിന്‌ ഈ ഫങ്ഷന്‍ ഉപയോഗിക്കുന്നു. സ്ട്രി
ങ്ങിന്റെ നീളം കൊണ്ട്‌ അര്‍ത്ഥമാക്കുന്നത്‌ സ്ട്രിങ്ങിലെ അക്ഷരങ്ങളുടെ എണ്ണമാണ്‌
അതിന്റെ വാകൃഘടന താഴെ കൊടുക്കുന്നു.

int strlen(string);
ഈ ഫങ്ഷന്‍ ഒരു സ്ര്രിങ്‌ ആര്‍ഗ്യുമെന്റായി സ്വീകരിക്കുകയും സ്ര്‍്രിങ്ങിന്റെ നീളം തിരിച്ചു
നല്‍കുകയും ചെയ്യുന്നു. താഴെ കൊടുത്തിരിക്കുന്ന കോഡ്‌ ശകലം ഇത്‌ വിവരിക്കുന്നു.

char str[] = "Welcome";

int n;

n = strlen(str);

cout << n;

ഇവിടെ strlen()aMM ഫങ്ഷന്‍ ഒരു സ്ട്രിങ്‌ വേരിയബിളിനെ ആര്‍ഗ്യുമെന്റായി
സ്വീകരിക്കുകയും അതില്‍ അടങ്ങിയിരിക്കുന്ന സ്്രിങ്ങിലെ ക്യാരക്ടറുകളുടെ എണ്ണം,
പി

അതായത്‌ 7 എന്ന വില ൩ എന്ന വേരിയബിളിലേക്ക്‌ തിരിച്ച്‌ നല്‍കുന്നു. അതുകൊണ്ട്‌
൩ എന്ന വേരിയബിളിന്റെ വിലയായി പ്രോഗ്രാം കോഡ്‌ 7 പ്രദര്‍ശിപ്പിക്കുന്നു. അറെ
ഡിക്ലറേഷന്‍ താഴെ കൊടുത്തിരിക്കുന്നത്‌ പോലെ ആണെങ്കിലും ഓട്ട്പൂട്ട്‌ ഇത്‌ തന്നെ
ആയിരിക്കും.
char str [10]= “Welcome”;
ഡിക്ലറേഷനില്‍ അറെയുടെ വലിപ്പം കൊടുത്തിരിക്കുന്നത്‌ ശ്രദ്ധിക്കുക. താഴെ കാണി
ച്ചിരിക്കുന്നത്‌ പോലെ ആര്‍ഗ്യുമെന്റ്‌ ഒരു സ്ട്രിങ്ങ്‌ സ്ഥിര വിലയും ആയേക്കാം.
n= strlen (“computer”);

മുകളിലത്തെ നിര്‍ദേശം 8 എന്ന വില തിരിച്ച്‌ നല്‍കുകയും അത്‌ NG സംഭരിക്കുകയും
ചെയ്യുന്നു.
0. strepy()
ഒരു സ്ട്രിങ്ങിനെ മറ്റൊരു സ്ര്രിങ്ങിലേക്ക്‌ പകര്‍ത്തുന്നതിന്‌ ഈ ഫങ്ങ്ഷന്‍ ഉപയോഗി
ക്കുന്നു. ഇതിന്റെ വാക്യ ഘടന താഴെ നല്‍കുന്നു.

strepy(stringl, string2);
ഈ ഫങ്ഷന്‍ ട22൩ഠ 2 നെ string 1 ലേക്ക്‌ പകര്‍ത്തുന്നു. ഇവിടെ സ്ര്രിങ്ങ്‌ 1 ഉം
MSG 2 ഉം ക്യാരക്ടറുകളുടെ അറെ അല്ലെങ്കില്‍ സ്ര്രിങ്‌ സ്ഥിരാങ്കങ്ങള്‍ ആണ്‌.
ഫങ്ങ്ഷന്റെ പ്രവര്‍ത്തനത്തിന്‌ ആവശ്യമായ ആര്‍ഗ്യുമെന്റുകളാണ്‌ ഇവ. താഴെ
കൊടുക്കുന്ന കോഡ്‌ ഇവയുടെ പ്രവര്‍ത്തനം വിശദമാക്കുന്നു.

char s1[10]. s2[10] = "Welcome";

strepy (sl, s2);

cout << sl;
സ്ര്രിങ്ങ്‌ വേരിയബിള്‍ 31 ല്‍ അടങ്ങിയിരിക്കുന്ന "Welcome" എന്ന am sled
സ്ക്രീനില്‍ പ്രദര്‍ശിപ്പിക്കപ്പെടും. രണ്ടാമത്തെ ആര്‍ഗ്യുമെന്റ്‌ ഒരു സ്ര്രിങ്‌ സ്ഥിരാംഗ
മായി താഴെകൊടുക്കുന്നു.

char str [10];

strcepy (str. "Welcome");
ഇവിടെ "Welcome" എന്ന സ്ര്രിങ്‌ സ്ഥിരാങ്കം വേരിയബിള്‍ str ല്‍ സംഭരിക്കും.
str="Welcome" എന്ന അസൈന്‍മെന്റ്‌ പ്രസ്താവന തെറ്റാണ്‌. എന്നാല്‍ ഒരു
ക്യാരക്ടര്‍ അറെയിലേക്ക്‌ പ്രഖ്യാപന സമയത്ത്‌. വില നമുക്ക്‌ നേരിട്ട്‌ നല്‍കാവുന്നതാണ്‌.

char str [10] = "Welcome"
൦. streat()
ഒരു സ്ര്രിങ്ങിലേക്ക്‌ മറ്റൊരു സ്ട്രിങ്‌ കൂട്ടിച്ചേര്‍ക്കുന്നതിന്‌ ഈ ഫങ്ഷന്‍ ഉപയോഗി
ക്കുന്നു. തത്ഫലമായി ലഭിക്കുന്ന സ്ര്രിങ്ങിന്റെ നീളം രണ്ട്‌ സ്ദ്രിങ്ങിന്റെയും നീളത്തിന്റെ
ആകെ തുക ആകുന്നു. ഫങ്ങ്ഷന്റെ വാക്യ ഘടന താഴെകൊടുത്തിരിക്കുന്നു.

streat(stringl, string2);
ഇവിടെ stringl, string2 എന്നിവ ക്യാരക്ടറുകളുടെ Groocwo M(sless സ്ഥി
രാങ്കങ്ങളോ ആയിരിക്കും. string2, string] ലേക്ക്‌ കൂട്ടിച്ചേര്‍ക്കുന്നു അതുകൊണ്ട്‌
ആദ്യത്തെ ആര്‍ഗ്യുമെന്റിന്റെ വലിപ്പം രണ്ട്‌ സ്ര്രിങ്ങുകള്‍ ഒരുമിച്ച്‌ ഉള്‍ക്കൊള്ളാന്‍ കഴിയു
ന്നതായിരിക്കണം. ഈ ഫങ്ഷന്റെ പ്രയോഗം കാണിക്കുന്ന ഒരു ഉദാഹരണം നമുക്ക്‌
കാണാം. താഴെ കൊടുത്തിരിക്കുന്ന ഉദാഹരണം ശ്രദ്ധിക്കുക.
| ക്ര 10. ഫങ്ഷനുകള്‍

char ൭1120) = "Welcome", s2[10] = " to C+t";
strcat(sl,s2);
cout << sl;
മുകളില്‍ കൊടുത്തിരിക്കുന്ന C++ കോഡ്‌ പ്രവര്‍ത്തിക്കുമ്പോള്‍ 51 ന്റെ വിലയായ
"Welcome to C++" എന്ന ഓട്ട്പുട്ട്‌ ലഭിക്കും. 52 എന്ന string വൈറ്റ്‌ സ്പേസോഡു
കൂടിയാണ്‌ ആരംഭിച്ചിരിക്കുന്നത്‌ എന്നത്‌ ശ്രദ്ധിക്കുക.
d. stremp ()
രണ്ട്‌ സ്ട്രിങ്ങുകള്‍ തമ്മില്‍ താരതമ്യം ചെയ്യുന്നതിന്‌ ഈ ഫങ്ഷന്‍ ഉപയോഗിക്കുന്നു.
ഈ COOMA GOING സ്ട്രിങ്ങുകളിലെ ക്യാരക്ടറുകളുടെ അക്ഷരമാലാക്രമം (ASCII വില)
പരിഗണിക്കപ്പെടുന്നു. ഫങ്ഷന്റെ വാക്യ ഘടന താഴെ കൊടുത്തിരിക്കുന്നു.
stremp(stringl, string2)
മൂന്ന്‌ വൃത്യസ്ത സന്ദര്‍ഭങ്ങളില്‍ ഫങ്ഷന്‍ താഴെ കൊടുത്തിരിക്കുന്ന ഏതെങ്കിലും
വിലകള്‍ തിരിച്ച്‌ നല്‍കുന്നു.
* stringl, string2 എന്നിവ ഒരേ പോലെ ആണെങ്കില്‍ 0 തിരിച്ചു നല്‍കും.
* string] അക്ഷരമാലാക്രമത്തില്‍ string2 നേക്കാള്‍ ചെറുതാണെങ്കില്‍ ഒരു
നെഗറ്റീവ്‌ വില തിരിച്ച്‌ നല്‍കും.
© string] അക്ഷരമാലക്രമത്തില്‍ string2 നേക്കാള്‍ വലുതാണെങ്കില്‍ ഒരു പോ
സിറ്റീവ്‌ വില തിരികെ നല്‍കും.
താഴകൊടുത്തിരിക്കുന്ന കോഡ്‌ ശകലം ഈ ഫങ്ഷന്റെ പ്രവര്‍ത്തനം കാണിക്കുന്നു.

char sl[]="Deepthi", s2[]="Divya";
int n;

n = stremp(s1,s2);

if (n==0)

cout<<"Both the strings are same";
else if(n < 0)

cout<<"sl < s2";
else

cout<<"sl > s2";

മുകളില്‍ കൊടുത്തിരിക്കുന്ന കോഡ്‌ ശകലം പ്രവര്‍ത്തിക്കുമ്പോള്‍ sl < s2 എന്ന
ഓട്ട്പുട്ട്‌ പ്രദര്‍ശിപ്പിക്കുമെന്ന്‌ വ്യക്തമാണ്‌.

€. strompi ()

വലിയ അക്ഷരങ്ങളോ ചെറിയ അക്ഷരങ്ങളോ പരിഗണിക്കാതെ രണ്ട്‌ സ്ര്രിങ്ങുകള്‍
താരതമ്യം ചെയ്യുന്നതിന്‌ ഈ ഫങ്ഷന്‍ ഉപയോഗിക്കുന്നു. അതായത്‌ ഈ ഫങ്ഷന്‍
അപ്പര്‍കേയ്സ്‌ ലോവര്‍കേയ്സ്‌ അക്ഷരങ്ങള്‍ താരതമ്യത്തിന്‌ ഒരേപോലെ പരിഗണിക്കും.
ഈ ഫങ്ഷന്റെ വാകൃഘടനയും പ്രവര്‍ത്തനരീതിയും സ്പാ ( ) പോലെ ആണെങ്കിലും
ഇത്‌ കെയ്സ്‌ സെന്‍സിറ്റീവല്ല. ഈ ഫങ്ഷനും stremp ( ) യെ പോലെ വിലകള്‍ തിരിച്ചു
നല്‍കുന്നു താഴെ കൊടുത്തിരിക്കുന്ന കോഡ്‌ ശകലം പരിഗണിക്കുക.

char si[]="SANIL", s2[]="sanil";

int n;
eon

n = strempi(sl,s2);
if (n==0)
cout<<"strings are same";
else if(n < 0)
cout<<"sl < s2";
else
cout<<"sl > s2";

മുകളില്‍ കൊടുത്തിരിക്കുന്ന കോഡ്‌ ശകലം ഒരു C++ പ്രോഠ്രഗാമില്‍ പ്രവര്‍ത്തിക്കുമ്പോള്‍
ലഭിക്കുന്ന ഓട്ട്പൂട്ട്‌ "strings are same" എന്നായിരിക്കും, എന്തുകൊണ്ടെന്നാല്‍
strempi() ലോവര്‍കേയ്സ്‌ അക്ഷരങ്ങളേയും അപ്പര്‍കേയ്സ്‌ അക്ഷരങ്ങളേയും ഒരേ
പോലെ കരുതുന്നു പ്രോഗ്രാം 10.1. രണ്ട്‌ സ്ട്രിങ്ങുകള്‍ താരതമ്യം ചെയ്യുകയും കൂട്ടി
ച്ചേര്‍ക്കുകയും ചെയ്യുന്നു. പുതിയതായി രൂപപ്പെട്ട സ്ര്രിങ്ങിന്റെ നീളവും പ്രദര്‍ശിപ്പിക്കുന്നു.

വ രണ്ടും കൂട്ടിച്ചേര്‍ക്കുന്നതിനും അതിന്റെ

#include <iostream>
#include <cstring>
using namespace std;
int main()

{

char s1[20], s2[20], s3[20];

cout<<"Enter two strings: ";

സ്ട്രിങ്‌ കൈകാര്യം
ചെയ്യുന്നതിനുള്ള ഫങ്ഷനുകള്‍
അടങ്ങിയ ഹെഡര്‍ ഫയല്‍

cin>>s1>>s2;
int n=stremp(sl, s2);
if (n==0)
cout<<"\nThe input strings are same";
else

{
cout<<"\nThe input strings are not same";
strepy(s3, s1);//Copies the string in sl into s3
strceat(s3, s2); //Appends the string in s2 to that in s3
cout<<"\nString after concatenation is: "<<s3;
cout<<"\nLength of the new string is: "<<strlen(s3);

}

return 0;

}

10.3.2 ഗണിത ഫങ്ഷനുകള്‍ (Mathametical Functions)

ഇനി നമുക്ക്‌ C+4G8 ലഭ്യമായ ഗണിത ഫങ്ഷനുകളെക്കുറിച്ച്‌ ചര്‍ച്ച ചെയ്യാം. പ്രോഗ്രാമില്‍
ഈ ഫങ്ഷനുകള്‍ ഉപയോഗിക്കുന്നതിന്‌ Cmath (ടര്‍ബോ C++ ല്‍ math.h) എന്ന
ഹെഡര്‍ ഫയല്‍ നാം ഉപയോഗിക്കണം.
| ക്ര 10. ഫങ്ഷനുകള്‍

a. abs()
ഒരു പൂര്‍ണ്ണ സംഖ്യയുടെ (integer) അഖണ്ഡവില കണ്ടുപിടിക്കുന്നതിന്‌ ഈ ഫങ്ഷന്‍
ഉപയോഗിക്കുന്നു. ഇത്‌ ഒരു പൂര്‍ണ്ണ സംഖ്യ (integer) ആര്‍ഗ്യുമെന്റ്‌ ആയി എടുത്ത്‌
അതിന്റെ അഖണ്ഡവില തിരിച്ച്‌ നല്‍കുന്നു. ഇതിന്റെ വാകൃഘടനയാണ്‌,

int ചാട (2൩൧)
ഈ ഫങ്ഷന്‍ ഉപയോഗിക്കുന്ന രീതി ഉദാഹരണമായി താഴെ നല്‍കുന്നു.

int n = -25;

cout << abs(n);
മുകളില്‍ കൊടുത്തിരിക്കുന്ന പ്രോ്ഗാം കോഡ്‌ 25 എന്ന്‌ പ്രദര്‍ശിപ്പിക്കും. ഒരു ദശാംശ
സംഖ്യയുടെ കേവലവില (absolute value) കണ്ടുപിടിക്കണമെങ്കില്‍ fabs () എന്ന ഫങ്‌
ഷന്‍ മുകളില്‍ കൊടുത്തിരിക്കുന്നത്‌ പോലെ നമുക്ക്‌ ഉപയോഗിക്കാം. അത്‌ ദശാംശ
സാംഖ്യ തിരികെ നല്‍കുന്നു.
12. sqrt()
SALE () ഒരു സംഖ്യയുടെ വർഗ്ഗമൂലം കണ്ടുപിടിക്കുന്നതിന്‌ ഉപയോഗിക്കുന്നു. ഈ anes
ഷന്റെ ആര്‍ഗ്യൂമെന്റിന്റെ ഡാറ്റ ഇനം int, float or double എന്നിവ ആകാം.
പോസിറ്റീവ്‌ ആര്‍ഗ്യുമെന്റിന്റെ വർഗ്ഗമൂലം ഈ ഫങ്ഷന്‍ തിരിച്ച്‌ നല്‍കുന്നു. ഇതിന്റെ
വാകൃഘടനയാണ്‌.

double sqrt (double)
താഴെ കൊടുത്തിരിക്കുന്ന ഉദാഹരണം പരിശോധിക്കുക. ഇത്‌ 5 എന്ന വില പ്രദര്‍ശി
പ്പിക്കും.

int n = 25;

float b = sqrt(n);

cout << b;
c. pow()
ഒരു സംഖ്യയുടെ പവര്‍ കണ്ടുപിടിക്കുന്നതിന്‌ ഈ ഫങ്ഷന്‍ ഉപയോഗിക്കുന്നു. X,Y
എന്നീ രണ്ട്‌ ആര്‍ഗ്യുമെന്റ്‌ കള്‍ ഇത്‌ ഉപയോഗിക്കുന്നു xX, Y എന്നിവയുടെ ഡാറ്റാ ഇനം
int, float അല്ലെങ്കില്‍ double ആകുന്നു. ഈ ഫങ്ഷന്‍ x” യുടെ ഫലം തിരിച്ചു
നല്‍കുന്നു. ഇതിന്റെ വാകൃഘടനയാണ്‌.

double pow(double, int)
താഴെ കൊടുത്തിരിക്കുന്ന ഉദാഹരണം ഇതിന്റെ പ്രവര്‍ത്തനം വിവരിക്കുന്നു.

ഉദാഹരണം:
int x = 5, y= 4, മ?
Z = pow(x, y)?

cout << Z;
POW (X,Y) രണ്ട്‌ ആര്‍ഗ്യുമെന്റുകള്‍ ഉപയോഗിക്കുന്നു. മുകളില്‍ കൊടുത്തിരിക്കുന്ന
ഉദാഹരണത്തില്‍ 625 എന്ന്‌ പ്രദര്‍ശിപ്പിക്കും.
9. sin()
ഒരു രതികോണമിതിയായ ഈ ഫങ്ഷന്‍ ഒരു കോണിന്റെ സൈന്‍ (Sine) വില കണ്ടുപി
ടിക്കുന്നു. ഈ ഫങ്ഷന്‍ ഡബിള്‍ തരത്തിലുള്ള ആര്‍ഗ്യുമെന്റ്‌ സ്വീകരിച്ച്‌ അതിന്റെ സൈന്‍
വില തിരിച്ച്‌ നല്‍കും. ആര്‍ഗ്യുമെന്റ്‌ റേഡിയന്‍ അളവിലാണ്‌ നല്‍കേണ്ടത്‌. ഇതിന്റെ
പി

വാകൃഘടന ആണ്‌
double sin(double)
230° (കോണ്‍ 30°) യൂടെ സൈന്‍ (Sin ഫങ്ഷന്‍ ഉപയോഗിച്ച്‌) വില താഴെപറയുന്ന
രീതിയില്‍ കണ്ടുപിടിക്കാം.
float x = 303. 14180 //To convert angle into raidant
cout << sin(x);
മുകളില്‍ കൊടുത്തിരിക്കുന്ന പ്രോ്രഗാം കോഡ്‌ 4999770 എന്ന്‌ പ്രദര്‍ശിപ്പിക്കും.

€. cos ()
ഈ ഫങ്ഷന്‍ ഒരു കോണിന്റെ കൊസൈന്‍ വില കണ്ടുപിടിക്കാന്‍ ഉപയോഗിക്കുന്നു.
ഈ ഫങ്ഷന്‍ ഒരു ഡബിള്‍ (double) ഇനത്തിലുള്ള ആര്‍ഗ്യുമെന്‍ന്റ്‌ സ്വീകരിച്ച്‌ കൊ
സൈന്‍ വില തിരിച്ച്‌ നല്‍കുന്നു. ഇവിടെയും കോണിന്റെ അളവ്‌ റേഡിയനില്‍ നല്‍കണം
ഇതിന്റെ വാകൃഘടന ആണ്‌

double ഠഠട (double)
൧ 30° യുടെ കൊസൈന്‍ വില കണ്ടുപിടിക്കുന്നതിന്‌ താഴെ കൊടുത്തിരിക്കുന്ന കോഡ്‌
ഉപയോഗിക്കാം.

double x = cos(30*3.14/180);

cout << x;
ഇവിടെ cos() ന്‌ നല്‍കിയിരിക്കുന്ന ആര്‍ഗ്യുമെന്റ്‌ ഡിഗ്രി അളവിലുള്ള കോണിനെ
റേഡിയനിലേക്ക്‌ മാറ്റുന്ന പദ്രപയോഗമാണ്‌. മുകളിലുള്ള കോഡ്‌ വില 0.866158 എന്ന്‌
പ്രദര്‍ശിപ്പിക്കും.
ഒരു ധ്രികോണത്തിന്റെ ഒരു കോണും ഒരു വശവും തന്നിരുന്നാല്‍ ആ മട്ടര്രികോണ
ത്തിന്റെ വശങ്ങളുടെ അളവ്‌ കണ്ടുപിടിക്കുന്നതിനു വേണ്ട പ്രോഗ്രാം 10.2 ല്‍ കൊടുത്തിരി
ക്കുന്നു. വിവിധ ഗണിത ഫങ്ഷനുകള്‍ ഇതില്‍ ഉപയോഗിച്ചിരിക്കുന്നു. അതിന്‌ വേണ്ട
സ്ൂതവാക്യങ്ങള്‍ താഴെ കൊടുക്കുന്നു.

എതിര്‍ വശം സമീപ വശം എതിര്‍ വശം
= കര്‍ വച രി
ണ്ണം സമീപ വശം

(കര്‍ണ്ണം)മ = (പാദം2 + (ലംബം)2

ഒരു മട്ടത്രികോണത്തിന്റെ വശങ്ങളുടെ നീളം

#include<iostream>

ഗണിത ഫങ്ഷനുകള്‍
ഉപർയോറിക്കുനന്നതിന്‌
ആവശ്യമായ ഹെഡര്‍ ഫയല്‍

#include<cmath>
using namespace std;
int main()

|

const float pi=22.0/7;
int angle, side;

float radians, length, opp side, adj side, hyp;
cout<<"Enter the angle in degree: ";

| Ces 10. ഫങ്ഷനുകള്‍

cin>>angle;

ഡി്രിയിലുള്ള
കോണ്‍

റേഡിയനിലേക്ക്‌

മാറ്റുന്നു

radians=angle*pi/180; -

cout <<"\nl. Opposite Side"
<<"\n2. Adjacent Side"
<<"\n3. Hypotenuse";

cout <<"\nInput 1, 2 or 3 to specify the side: ";

cin>>side;

cout<<"Enter the length: ";

cin>>length;

switch (side)

{

case 1: opp_side=length;
adj_side=opp_ side / tan(radians);
hyp= sqrt (pow(opp_side,2) + pow(adj_side,2));
break;

case 2: adj side=length;
hyp=adj_side / cos(radians);
opp side=sqrt(pow(hyp,2) - pow(adj side, 2));
break;

case 3: hyp=length;
opp side=hyp * sin(radians);

adj_side=sqrt(pow(hyp,2) - pow(opp_side,2));
}
cout<<"Angle in degree = "<<angle;
cout<<"\nOpposite Side = "<<opp_side;
cout<<"\nAdjacent Side = "<<adj_side;
cout<<"\nHypotenuse = "<<hyp;

return 0;

}
മുകളിലുള്ള പ്രോഗ്രാമിന്റെ മാതൃക ഓട്ട്പുട്ട്‌ താഴെ കൊടുത്തിരിക്കുന്നു.
Enter the angle in degree: 30
1. Opposite Side
2. Adjacent Side
3. Hypotenuse
Input 1, 2 or 3 to specify the side: 1
Enter the length: 6
Angle in degree = 30

Opposite Side = 6
Adjacent Side = 10.38725
Hypotenuse = 11.995623
പി

10.3.3 ക്യാരക്ടര്‍ ഫങ്ഷനുകള്‍ (Character functions)
ക്യാരക്ടറുകളില്‍ വിവിധ പ്രവര്‍ത്തനങ്ങള്‍ നടത്തുവാന്‍ C++ ല്‍ ലഭ്യമായ വിവിധ
ക്യാരക്ടര്‍ ഫങ്ഷനുകള്‍ താഴെ കൊടുത്തിരിക്കുന്നു. ഈ ഫങ്ഷനുകള്‍ ഉപയോഗി
ക്കുന്നതിന്‌ cctype (ടര്‍ബോ c++ ല്‍ ഠയനഇാട . ൨) എന്ന ഹെഡര്‍ ഫയല്‍ പ്രോ്രഗാമില്‍
കൂട്ടിച്ചേര്‍ക്കേണ്ടതുണ്ട്‌.
a. isupper ()
തന്നിരിക്കുന്ന ക്യാരക്ടര്‍ വലിയ അക്ഷരത്തില്‍ (upper case) ഉള്ളതാണോ, അല്ലയോ
എന്ന്‌ പരിശോധിക്കുന്നതിന്‌ ഈ ഫങ്ഷന്‍ ഉപയോഗിക്കുന്നു. ഈ ഫങ്ഷന്റെ വാകൃഘടന
ആണ,

int isupper(char c)
തന്നിരിക്കുന്ന ക്യാരക്ടര്‍ വലിയ അക്ഷരത്തില്‍ (upper case) ആണെങ്കില്‍ 190 അല്ലങ്കില്‍
പൂജ്യവും ഈ ഫങ്ഷന്‍ തിരിച്ച്‌ നല്‍കുന്നു. താഴെ കൊടുത്തിരിക്കുന്ന പ്രസ്താവന
പുജ്യം എന്ന വില ൩ ലേക്ക്‌ നല്‍കുന്നു.

ഉദാഹരണം:
int ൩ = isupper('x');

താഴെ കൊടുത്തിരിക്കുന്ന പ്രസ്താവനകള്‍ പരിഗണിക്കുക.
char c = 'A';
int n = isupper(c);

മുകളിലുള്ള പ്രസ്താവനകളുടെ പ്രവര്‍ത്തനത്തിന്‌ ശേഷം n ന്റെ വില 1 ആയിരിക്കും

എന്തുകൊണ്ടെന്നാല്‍ തന്നിരിക്കുന്ന ക്യാരക്ടര്‍ വലിയ അക്ഷരത്തില്‍ ഉള്ളതാണ്‌.

b. islower()

തന്നിരിക്കുന്ന ഒരു ക്യാരക്ടര്‍ ചെറിയ അക്ഷരത്തില്‍ (lower case) ഉള്ളതാണോ അല്ലയോ

എന്ന്‌ പരിശോധിക്കുന്നതിന്‌ ഈ ഫങ്ഷന്‍ ഉപയോഗിക്കുന്നു. ഇതിന്റെ വാകൃഘടനയാണ്‌.
int islower(char c)

തന്നിരിക്കുന്ന ക്യാരക്ടര്‍ ചെറിയ അക്ഷരത്തിലാണെങ്കില്‍ 1 ഉം അല്ലെങ്കില്‍ പൂജ്യവും

ഈ ഫങ്ഷന്‍ തിരിച്ച്‌ നല്‍കുന്നു. താഴെ കൊടുത്തിരിക്കുന്ന പ്രസ്താവനകള്‍ പ്രവര്‍ത്തി

ച്ചതിന്‌ ശേഷം വേരിയബിള്‍ nod വില 1 ആയിരിക്കും. എന്തുകൊണ്ടെന്നാല്‍ തന്നിരി

ക്കുന്ന ക്യാരക്ടര്‍ ചെറിയ അക്ഷരത്തിലുള്ളതാണ്‌.

ഉദാഹരണം:
char ch = !x';
int n = islower(ch);

എന്നാല്‍ താഴെകൊടുത്തിരിക്കുന്ന പ്രസ്താവനയില്‍ n ന്റെവില പൂജ്യമായിരിക്കും.
കാരണം തന്നിരിക്കുന്ന ക്യാരക്ടര്‍ അപ്പര്‍ കേയ്സിലുള്ളതാണ്‌.

int n = islower('A');
c. isalpha ()

തന്നിരിക്കുന്ന ക്യാരക്ടര്‍ ഒരു അക്ഷരമാണോ അല്ലയോ എന്ന്‌ പരിശോധിക്കുന്നതിന്‌ ഈ
ഫങ്ഷന്‍ ഉപയോഗിക്കുന്നു. ഇതിന്റെ വാകൃഘടന താഴെ കൊടുക്കുന്നു.

int isalpha(char c);
തന്നിരിക്കുന്ന ക്യാരക്ടര്‍ ഒരു അക്ഷരമാണെങ്കില്‍ 1 ഉം അല്ലെങ്കില്‍ പൂജ്യവും ഈ
ഫങ്ഷന്‍ തിരിച്ചു നല്‍കുന്നു.
| ക്ര 10. ഫങ്ഷനുകള്‍

താഴെ കൊടുത്തിരിക്കുന്ന പ്രസ്താവന N ലേക്ക്‌ പൂജ്യം എന്ന വില നല്‍കുന്നു. കാരണം
തന്നിരിക്കുന്ന ക്യാരക്ടര്‍ ഒരു അക്ഷരം അല്ല

int n = isalpha('3');
എന്നാല്‍ താഴെകൊടുത്തിരിക്കുന്ന പ്രസ്താവന 1 പ്രദര്‍ശിപ്പിക്കുന്നു കാരണം തന്നിരി
ക്കുന്ന ക്യാരക്ടര്‍ ഒരു അക്ഷരമാണ്‌.

cout << isalpha('a');
d. isdigit()
തന്നിരിക്കുന്ന ക്യാരക്ടര്‍ ഒരു അക്കം ആണോ അല്ലയോ എന്ന്‌ പരിശോധിക്കുന്നതിന്‌
ഈ ഫങ്ഷന്‍ ഉപയോഗിക്കുന്നു. ഇതിന്റെ വാക്യ ഘടന ആണ്‌

int isdigit(char c);
തന്നിരിക്കുന്ന ക്യാരക്ടര്‍ അക്കമാണെങ്കില്‍ ഈ ഫങ്ഷന്‍ 1 ഉം അല്ലെങ്കില്‍ പൂജ്യവും
തിരിച്ച്‌ നല്‍കുന്നു. താഴെ കൊടുത്തിരിക്കുന്ന പ്രസ്താവനകള്‍ പ്രവര്‍ത്തിക്കുമ്പോള്‍ ൩
എന്ന വേരിയബിളിന്റെ വില 1 ഉം ആയിരിക്കും. കാരണം തന്നിരിക്കുന്ന ക്യാരക്ടര്‍ ഒരു
അക്കം ആണ്‌.

n = isdigit('3');
താഴെ നല്‍കിയിരിക്കുന്ന പ്രസ്താവനകള്‍ പ്രവര്‍ത്തിക്കുമ്പോള്‍ ൩ എന്ന വേരിയബിളിന്റെ
വില പൂജ്യം ആയിരിക്കും കാരണം തന്നിരിക്കുന്ന ക്യാരക്ടര്‍ ഒരു അക്കം അല്ല.

char c = 'b';

int n = isdigit(c);
e. isalnum()

തന്നിരിക്കുന്ന ക്യാരക്ടര്‍ ഒരു അക്ഷരമോ അക്കമോ ആണോയെന്ന്‌ ഈ ഫങ്ഷന്‍ പരി
ശോധിക്കുന്നു. ഇതിന്റെ വാകൃഘടനയാണ്‌

int isalnum (char c)
തന്നിരിക്കുന്ന ക്യാരക്ടര്‍ അക്ഷരമോ അക്കമോ ആണെങ്കില്‍ 1 ഉം അല്ലെങ്കില്‍ പൂജ്യവും
തിരിച്ചു നല്‍കുന്നു.
താഴെ കൊടുത്തിരിക്കുന്ന ഓരോ പ്രസ്താവനയും പ്രവര്‍ത്തിക്കുമ്പോള്‍ 1 തിരിച്ച്‌
നല്‍കുന്നു.

n = isalnum('3');

cout << isalnum('A');

എന്നാല്‍ താഴെ കൊടുത്തിരിക്കുന്ന പ്രസ്താവനകള്‍ പ്രവര്‍ത്തിപ്പിക്കുമ്പോള്‍ പൂജ്യം
എന്ന വില ൩ ലേക്ക്‌ നല്‍കുന്നു കാരണം തന്നിരിക്കുന്ന ക്യാരക്ടര്‍ ഒരു അക്കമോ അക്ഷര
മോ അല്ല.

char c = '-';
int n = isalnum(c);
f. toupper ()

തന്നിരിക്കുന്ന ക്യാരക്ടര്‍ വലിയ അക്ഷരത്തിലേക്ക്‌ മാറ്റുന്നതിന്‌ ഈ ഫങ്ഷന്‍ ഉപയോ
ഗിക്കുന്നു ഇതിന്റെ വാകൃഘടന ആണ്‌
char toupper(char c)

തന്നിരിക്കുന്ന ക്യാരക്ടറിന്റെ വലിയ അക്ഷരം ഈ ഫങ്ഷന്‍ തിരിച്ച്‌ നല്‍കുന്നു. തന്നിരി
ക്കുന്ന ക്യാരക്ടര്‍ വലിയ അക്ഷരത്തില്‍ ഉള്ളതാണെങ്കില്‍ BDF പുട്ടും അതുതന്നെ
ആയിരിക്കും.

താഴെ കൊടുത്തിരിക്കുന്ന പ്രസ്താവന 2" യെ വേരിയബിള്‍ ഠ യിലേക്ക്‌ നല്‍കുന്നു.

char c = toupper('a');
എന്നാല്‍ താഴെ തന്നിരിക്കുന്ന പ്രസ്താവനയുടെ ജട്ട്പുട്ട്‌ മ" തന്നെ ആയിരിക്കും.
cout (൦൩3൧) ഠാ (മ)

ഈ പ്രസ്താവനയിലെ (char) ഉപയോഗിച്ച്‌ ഡാറ്റാ തരം മാറ്റിയിരിക്കുന്നത്‌ ശ്രദ്ധിക്കുക.
ഈ രീതി ഉപയോഗിച്ചില്ലെങ്കില്‍ ഓട്ട്പൂട്ട്‌ A യുടെ ASCIT വിലയായ 65 ആയിരിക്കും.
g. tolower ()
തന്നിരിക്കുന്ന ക്യാരക്ട്റിനെ ചെറിയ അക്ഷരത്തിലേക്ക്‌ മാറ്റുന്നതിന്‌ ഈ ഫങ്ങ്ഷന്‍
ഉപയോഗിക്കുന്നു. ഇതിന്റെ വാകൃഘടനയാണ്‌.

char tolower(char c)
തന്നിരിക്കുന്ന ക്യാരക്ടറിന്റെ ചെറിയ അക്ഷരം ഫങ്ഷന്‍ തിരിച്ചു നല്‍കുന്നു. തന്നിരി
ക്കുന്ന ക്യാരക്ടര്‍ ചെറിയ അക്ഷരത്തിലുള്ളതാണെങ്കില്‍ ജട്ട്പുട്ടും അതുതന്നെ
ആയിരിക്കും. ഈ പ്രസ്താവന പരിഗണിക്കുക.

c = tolower('A');
മുകളിലത്തെ സ്റ്റേറ്റ്മെന്റ്‌ പ്രവര്‍ത്തിച്ചതിന്ശേഷം വേരിയബിള്‍ c യുടെ വില ta’

ആയിരിക്കും. എന്നാല്‍ താഴെ കൊടുത്തിരിക്കുന്ന സ്റ്റേറ്റ്മെന്റുകള്‍ പ്രവര്‍ത്തിക്കുമ്പോള്‍
വേരിയബിള്‍ 'c' യൂടെ വില "ദ" ആയിരിക്കും.

char x = ‘al;

char c = tolower(x) ;
tolower(), toupper () എന്നീ ഫങ്ഷനുകളുടെ കാര്യത്തില്‍ ആര്‍ഗ്യുമെന്റ്‌ ഒരു
അക്ഷരമല്ലെങ്കില്‍ തന്നിരിക്കുന്ന ക്യാരക്ടര്‍ തന്നെ തിരിച്ചു നല്‍കും.

പ്രോഗ്രാം 10.3 ല്‍ ക്യാരക്ടര്‍ ഫങ്ഷനുകളുടെ ഉപയോഗം വിവരിച്ചിരിക്കുന്നു. ഈ പ്രോ
ഗ്രാം ഒരു വാചകം സ്വീകരിക്കുകയും സ്ര്രിങ്ങിലെ ചെറിയ അക്ഷരങ്ങള്‍, വലിയ
അക്ഷരങ്ങള്‍, അക്കങ്ങള്‍ എന്നിവയുടെ എണ്ണം കണ്ടുപിടിക്കുകയും ചെയ്യുന്നു. ഇത്‌ മൊത്തം
സ്്രിങ്ങിനെ വലിയ അക്ഷരത്തിലും ചെറിയ അക്ഷരത്തിലും പ്രദര്‍ശിപ്പിക്കുകയും ചെയ്യുന്നു.

ത്തിലുള്ള ക്യാരക്ടറുകള്‍ എണ്ണുന്നതിന്‌.

#include <iostream>
#include <cstdio>
#include <cctype>
using namespace std;
int main()
| eon 10. ഫങ്ഷനുകള്‍

{
char text[80];
int Ucase=0, Lcase=0, Digit=0, i;

cout << "Enter a line of text: ";

i യുടെ വില
ക്യാരക്ടറിലേക്ക്‌ പോയിന്റ്‌

gets (text); ചെയ്യുമ്പോള്‍ algal
for(i=0; text[iJ!="\0O'; i++) അവസാനിക്കും
if (isupper(text[i])) Ucaset++;
else if (islower(text[i])) Lcase++;
else if (isdigit(text[i])) Digit++;
cout << "\nNo. of uppercase letters = " << Ucase;
cout << "\nNo. of lowercase letters = " << Lease;
cout << "\nNo. of digits = " << Digit;
cout << "\nThe string in uppercase form is\n";
i=0;
while (text[i]!='\0')

{
putchar (toupper (text [i]));
it+;

}

cout << "\nThe string in lowercase form is\n";

i=0;
do
{

putchar()@
പകരം cout<<

. . ഉപയോശിക്കു മ്പോള്‍
utchar (tolower (text [2 [2
aon പി ക്യാരക്ടറിന്റെ ASCII വില
} while (text [i]!="\0"'); പ്രദര്‍രിരിക്കും

return 0;

}
ഒരു മാതൃകാ ഓട്ട്പുട്ട താഴെ നല്‍കുന്നു.

Enter a line of text : The vehicle ID is KLO1 AB101
No. of uppercase letters = 7
No. of lowercase letters 11
No. of digits = 5

The string in uppercase form is
THE VEHICLE ID IS KLO1 AB101
The string in lowercase form is
the vehicle id is 1:101 ab101

ഉപയോക്താവ്‌ നല്‍കുന്ന
ഉന്‍പുട്ട്‌

10.3.4: പരിവര്‍ത്തന ഫങ്ഷനുകള്‍ (Conversion functions)

ഒരു സ്ട്രിങ്ങിനെ പൂര്‍ണ്ണസംഖ്യയായും പൂര്‍ണ്ണസംഖ്യയെ സ്ര്രിങ്ങ്‌ ആയും പരിവര്‍ത്തനം
ചെയ്യുന്നതിന്‌ ഇത്തരം ഫങ്ഷനുകള്‍ ഉപയോഗിക്കുന്നു. C++ ല്‍ ലഭ്യമായ വിവിധ
പരിവര്‍ത്തന ഫങ്ഷനുകള്‍ താഴെ കൊടുത്തിരിക്കുന്നു. ഒരു പ്രോ്രഗാമില്‍ ഇത്തരം
പി

ഫങ്ഷനുകള്‍ ഉപയോഗിക്കുന്നതിന്‌ estdlib (ടര്‍ബോ C++ ല്‍ stdlib.h) എന്ന
ഹെഡര്‍ ഫയല്‍ ഉള്‍പ്പെടുത്തേണ്ടതാണ്‌.
a. itoa ()
ഒരു പൂര്‍ണ സംഖ്യയെ സ്ര്ടിങ്‌ ഇനത്തിലേക്ക്‌ മാറ്റുന്നതിന്‌ ഈ ഫങ്ഷന്‍ ഉപയോ
ഗിക്കുന്നു. ഫങ്ഷന്റെ വാകൃഘടനയാണ്‌,

itoa(int ൩, char c[], int len)
ഈ ഫങ്ഷന്‍ മുന്ന്‌ ആര്‍ഗ്യുമെന്റുകള്‍ ആവശ്യമെന്ന്‌ വാകൃഘടനയില്‍ നിന്ന്‌ നമുക്ക്‌
കാണാവുന്നതാണ്‌. ഇതില്‍ ആദ്യത്തേത്‌ പരിവര്‍ത്തനം ചെയ്യേണ്ട സംഖ്യയാണ്‌. രണ്ടാ
മത്തേത്‌ പരിവര്‍ത്തനം ചെയ്ത്‌ ലഭിക്കുന്ന സ്ട്രിങ്‌ സംഭരിക്കുന്ന ക്യാരക്ടര്‍ അറെയും
അവസാനത്തേത്‌ ക്യാരക്ടര്‍ അറെയുടെ വലിപ്പവും ആകുന്നു. താഴെ കൊടുത്തിരിക്കുന്ന
കോഡ്‌ ശകലം ഈ ഫങ്ഷന്‍ വിശദമാക്കുന്നു.

int n = 2345;

char c[10];

itoa(n, c, 10);

cout << c;
മുകളില്‍ കൊടുത്തിരിക്കുന്ന പ്രോഗ്രാം കോഡ്‌ "2345" എന്ന്‌ സ്ക്രീനില്‍
പ്രദര്‍ശിപ്പിക്കും.

10. atoi ()
ഒരു സ്ദ്രിങ്‌ വിലയെ പൂര്‍ണസാഖ്യയാക്കി മാറ്റുന്നതിന്‌ ഈ ഫങ്ഷന്‍ ഉപയോ
ഗിക്കുന്നു.
ഫങ്ഷന്റെ വാകൃഘടനയാണ്‌
int atoi(char c[]);

ഈ ഫങ്ഷന്‍ ഒരു സ്ര്രിങ്ങിനെ ആര്‍ഗ്യുമെന്റായി സ്വീകരിച്ച്‌ സ്ര്രിങ്ങിന്റെ പൂര്‍ണ്ണ
സാഖ്യ രൂപത്തില്‍ തിരിച്ചു നല്‍കുകയും ചെയ്യുന്നു. താഴെ കൊടുത്തിരിക്കുന്ന കോഡ്‌
"2345" എന്ന സ്്രിങ്ങിനെ 2345 എന്ന പൂര്‍ണ്ണ സംഖ്യയാക്കി മാറ്റുന്നു.

int n;

char c[10] = "2345";

n = atoi(c);

cout << nj;
സ്ദ്രിങ്ങില്‍ അക്കങ്ങള്‍ അല്ലാത്ത ക്യാരക്ടറുകള്‍ ഉള്‍ക്കൊണ്ടിട്ടുണ്ടെങ്കില്‍, ഓട്ട്പുട്ട്‌
പൂജ്യം (I) ആയിരിക്കും. എന്നാല്‍ സ്ര്രിങ്‌ അക്കങ്ങളില്‍ ആരംഭിക്കുകയാണെങ്കില്‍
ആ ഭാഗം മാത്രമേ പൂര്‍ണ്ണ സംഖ്യയായി മാറ്റുകയുള്ളൂ. ഈ ഫങ്ഷന്റെ ചില
ഉപയോഗങ്ങളും അവയുടെ ഓട്ട്പുട്ടും താഴെ കൊടുത്തിരിക്കുന്നു.

൫ atoi("Computer") - പൂജ്യം (0) തിരിച്ചു നല്‍കും.
(i) ദ൭൦4 (൩12. 56) -12 തിരിച്ചു നല്‍കും.

(iti) atoi("a2b") - പൂജ്യം (0) തിരിച്ചു നല്‍കും.

(tv) atoi("2ab") - 2 തിരിച്ചു നല്‍കും.
| ക്ര 10. ഫങ്ഷനുകള്‍

(൬ atoi(™.25") - പൂജ്യം (0) തിരിച്ചു നല്‍കും.
(vi) atoi("54+3")-5 തിരിച്ചു നല്‍കും.

ഈ ഫങ്ഷനുകള്‍ ഉപയോഗിച്ച്‌ പ്രശ്നങ്ങള്‍ നിര്‍ദ്ധാരണം ചെയ്യുന്നത്‌ പ്രോഗ്രാം 10.4
ല്‍ വിവരിക്കുന്നു. ഈ പ്രോഗ്രാമില്‍ ജനനതീയ്യതിയുടെ മുന്ന്‌ ഭാഗങ്ങള്‍ (ദിവസം, മാസം,
വര്‍ഷം) സ്വീകരിച്ച്‌ അതിനെ തീയതി രൂപത്തില്‍ പ്രദര്‍ശിപ്പിക്കുന്നു.

#include <iostream>

#include <cstring>

#include <cstdlib>

using namespace std;

int main()

{

char dd[10], mm[10], yy[10], dob[30];

int ഠി, m, y;

cout<<"Enter day, month and year in your Date of Birth: ";
cin>>d>>m>>y;
itoa(d, dd, 10
itoa(m, mm, 10
itoa(y, yy, 10

strcpy(dob, dd);
strceat(dob, "-");
strcat (dob, mm);
strceat(dob, "-");

strcat (dob, yy);
cout<<"Your Date of Birth is "<<dob;
return 0;

}

പ്രോഗ്രാം 10.4 ന്റെ ഒരു മാതൃക ഓട്ട്പുട്ട്‌ താഴെ കൊടുത്തിരിക്കുന്നു.

Enter day, month and year in your Date of Birth: 26 11 1999
Your Date of Birth is 26-11-1999

10.3.5 ഇന്‍പുട്ട്‌/ഒട്ട്പുട്ട്‌ കൈകാര്യം ചെയ്യുന്ന ഫങ്ഷന്‍ (1/0 Manipulating functions)
C++ ലെ ഇന്‍പുട്ട്‌, ഓട്ട്പൂട്ട്‌ പ്രവര്‍ത്തനങ്ങള്‍ കൈകാര്യം ചെയ്യുവാന്‍ ഇത്തരം ഫങ്ഷനു
കള്‍ ഉപയോഗിക്കുന്നു. ഒരു പ്രോഗ്രാമില്‍ ഇത്തരം ഫങ്ഷനുകള്‍ ഉപയോഗിക്കുവാന്‍
Ciomanip ഹെഡര്‍ ഫയല്‍ ഉള്‍പ്പെടുത്തേണ്ടതുണ്ട്‌.

ടല ()

ഒരു സ്്രിങ്ങ്‌ പ്രദര്‍ശിപ്പിക്കുവാന്‍ അനുവദിക്കപ്പെട്ട സ്ഥലം ഈ ഫങ്ഷന്‍ വ്ൃക്തമാക്കുന്നു.
താഴെ കൊടുത്തിരിക്കുന്ന കോഡ്‌ ഇതിന്റെ അനന്തരഫലം കാണിക്കുന്നു.
char s[J="hello";
cout<<setw(10)<<s<<setw(10)<<"friends";
മുകളിലത്തെ കോഡിന്റെ ഓട്ട്പുട്ട്‌ താഴെ കൊടുത്തിരിക്കുന്നു.

hello friends
hello, Friends എന്നീ സ്ര്രിങ്ങുകള്‍ പ്രദര്‍ശിപ്പിക്കുന്നതിന്‌ 10 ക്യാരക്ടര്‍ സ്ഥാന
ങ്ങള്‍ അനുവദിച്ചിരിക്കുന്നു. സ്ദ്രിങ്ങിന്റെ വലുപ്പം ഇതിനേക്കാള്‍ കുറവാണെങ്കില്‍ ബാക്കി
സ്ഥലം ശുന്യസ്ഥലങ്ങളായി നിലനില്‍ക്കും.

താഴെ കൊടുത്തിരിക്കുന്ന രീതിയില്‍ ഒരു ചാര്‍ട്ട്‌ തയാറാക്കി അതിലെ നിരക
& ളില്‍ നാം ഇതുവരെ ചാര്‍ട്ട്‌ ചെയ്ത എല്ലാ മുന്‍ നിര്‍വചിത ഫങ്ഷനുകളും

ഉപയോഗിക്കാം

Funetion

— P| ff

സ്വയം പരിശോധിക്കാം

മോഡ്യുളാര്‍ പ്രോഗ്രാമിങ്‌ എന്നാല്‍ എന്ന്‌?
. C++ ലെ 803 ഫങ്ഷന്‍ എന്നാലെന്ത്‌?
3. ക്യാരക്ടര്‍ ഫങ്ഷനുകള്‍ ഉപയോരിക്കുന്നതിന്‌ ആവശ്യമായ ഹെഡര്‍ ഫയലിന്റെ പേര്‍
എഴുതുക.
അനുവദിച്ച സ്ഥലത്ത്‌ ഡാറ്റ പ്രദര്‍രിഭിക്കുന്നതിനുള്ള ഫങ്ഷന്റെ പേര്‌ എഴുതുക.
കൂട്ടത്തില്‍ ചേരാത്തത്‌ എടുത്തെഴുതി അതിനുള്ള കാരണം നല്‍കുക.
(a)strlen() (b)itoa() (c)strepy() (d) strcat ()

10.4 ഉപയോക്ക്യ നിര്‍വചിത ഫങ്ഷനുകള്‍ (User defind functions)

നമ്മള്‍ ഇതുവരെ ചര്‍ച്ച ചെയ്ത എല്ലാ പ്രോഗ്രാമിലും main () എന്ന പേരിലുള്ള ഫങ്ഷന്‍
ഉണ്ട്‌. പ്രോഗ്രാമിന്റെ ആദ്യത്തെ വരി പ്രീ-പ്രോസസറിന്‌ നിര്‍ദേശം നല്‍കുന്ന പ്രസ്താവ
നയാണ്‌ എന്ന്‌ നമുക്കറിയാം. യഥാര്‍ത്ഥത്തില്‍ അതിന്‌ ശേഷമുള്ളത്‌ ഫങ്ഷന്റെ നിര്‍വ
ചനമാണ്‌. പ്രോഗ്രാമുകളിലെ void മദന൩()നെ ഫങ്ഷന്റെ ഫങ്ഷന്‍ ഹെഡര്‍ (അല്ലെ
ങ്കില്‍ ഫങ്ഷന്‍ ഹെഡിഞ്ങ എന്ന്‌ വിളിക്കുന്നു. ഇതിനെ തുടര്‍ന്ന്‌ { ) എന്ന ആവരണങ്ങള്‍
ക്കുള്ളില്‍ കൊടുത്തിരിക്കുന്ന പ്രസ്താവനകളെ ബോഡി എന്നു വിളിക്കുന്നു.

ഫങ്ഷന്‍ നിര്‍വചനത്തിന്റെ വാകൃഘടന താഴെ കൊടുത്തിരിക്കുന്നതാണ്‌.

data_type function_name(argument_list)

{
statements in the body;
| ക്ര 10. ഫങ്ഷനുകള്‍

ഡാറ്റ ഇനം എന്നത്‌ C++ ലെ ഏതെങ്കിലും സാധുതയുള്ള ഡാറ്റ ഇനമാണ്‌. ഒരു ഉപ
യോക്തൃ നിര്‍വഹിത പദം (ഐഡന്റിഫയര്‍) ആണ്‌. function_name ഐശ്ചിക
മായ പരാമീറ്ററുക്ളുടെ കൂട്ടമാണ്‌ ആര്‍ഗ്യുമെന്റ്‌ ലിസ്റ്റ്‌. ഡാറ്റ ഇനങ്ങളോട്‌ കൂടിയ ഒരു
കൂട്ടം വേരിയബിളുകളെ കോമ ഉപയോഗിച്ച്‌ വേര്‍തിരിക്കുന്നു. ഫങ്ഷന്റെ ചട്ടകൂട്ടില്‍
ഉള്‍ക്കൊള്ളിച്ചിരിക്കുന്ന C++ സ്റ്റേറ്റ്മെന്റുകള്‍ ഫങ്ഷന്റെ നിര്‍വഹണത്തിന്‌ ആവശ്യമാണ്‌.
ഒരിക്കല്‍ ഒരു ഫങ്ഷന്‍ നിര്‍മ്മിക്കാന്‍ നാം തീരുമാനിച്ചാല്‍ താഴെ കൊടുത്തിരിക്കുന്ന
ചോദ്യങ്ങള്‍ക്ക്‌ ഉത്തരം നല്‍കേണ്ടതുണ്ട്‌.
(൫) ഫങ്ഷന്‍ ഹെഡറില്‍ ഏത്‌ ഡാറ്റ ഇനം ഉപയോഗിക്കും?
(2) എത്ര ആര്‍ഗ്യുമെന്റുകള്‍ ആവശ്യമുണ്ട്‌? അവ ഓരോന്നിന്റെയും ഡാറ്റ ഇനം എന്താ
യിരിക്കും?
getchar(), strepy(), sqrt () എന്നീ മുന്‍ നിര്‍വചിത ഫങ്ഷനുകള്‍ എങ്ങനെ
യാണ്‌ ഉപയോഗിച്ചതെന്ന്‌ നമുക്ക്‌ അറിയാമല്ലോ. ഒരു C++ പ്രസ്താവനയില്‍ ഈ
ഫങ്ഷനുകള്‍ വിളിക്കുമ്പോള്‍ (ഉപയോഗിക്കുമ്പോള്‍) അവ പ്രവര്‍ത്തിക്കുമെന്ന്‌ നാം
കണ്ടിട്ടുണ്ട്‌.
getchar () എന്ന ഫങ്ഷന്‍ ഒരു ആര്‍ഗ, ുമെന്റും ഉപയോഗിക്കുന്നില്ല. എന്നാല്‍ strepy ()
പ്രവര്‍ത്തിക്കുന്നതിന്‌ രണ്ട്‌ സ്ര്രിങ്‌ ആര്‍ഗ്യുമെന്റുകള്‍ വേണം ഈ ആര്‍ഗ്യുമെന്റുകള്‍
ഇല്ലാതെ ഈ ഫങ്ഷന്‍ പ്രവര്‍ത്തിക്കില്ല. അതിന്‌ കാരണം ഇത്‌ നിര്‍വചിച്ചിരിക്കുന്നത്‌,
രണ്ട്‌ സ്്രിങ്‌ (ക്യാരക്ടര്‍ അറെ) ആര്‍ഗ്യുമെന്റ്‌ ഉപയോഗിച്ചാണ്‌. എന്നാല്‍ sqrt ()
യ്ക്ക്‌ ആര്‍ഗ്യുമെന്റായി ഒരു സംഖ്യ ആവശ്യമാണ്‌. അതിനോടൊപ്പം തന്നിരിക്കുന്ന
ആര്‍ഗ്യുമെന്റില്‍ മുന്‍കൂട്ടി തയ്യാറാക്കിയ പ്രവര്‍ത്തനം നടത്തിയ ശേഷം ഒരു ഫലം (AD
ബിള്‍ ഡാഠറ്റാടൈപ്പ) തിരികെ നല്‍കുന്നു. മുകളില്‍ പരാമര്‍ശിച്ച ഫലത്തെ ഫങ്ഷന്റെ
റിട്ടേണ്‍ വാല്യൂ (return value) എന്ന്‌ വിളിക്കുന്നു. ഈ വില ഫങ്ഷന്റെ റിട്ടേണ്‍ വിലയെ
ആശ്രയിച്ചിരിക്കുന്നു. മറ്റൊരു രീതിയില്‍ പറഞ്ഞാല്‍ ഫങ്ഷന്റെ ഡാറ്റ ഇനത്തിന്‌
അനുസരിച്ചുള്ള വില ആയിരിക്കണം ഫങ്ഷന്‍ തിരികെ നല്‍കേണ്ടത്‌.
അതുകൊണ്ട്‌ ഫങ്ഷന്റെ ഡാറ്റ ഇനത്തെ ഫങ്ഷന്റെ റിട്ടേണ്‍ ഇനം എന്നും പറയാറുണ്ട്‌.
നാം main () ഫങ്ഷനില്‍ 26൧൧൩ 0; എന്ന സ്റ്റേറ്റ്മെന്റ്‌ ഉപയോഗിക്കുന്നത്‌, GCC യുടെ
ആവശ്യാനുസരണം main() ന്റെ തിരികെ നല്‍കുന്ന വില int ഡാറ്റ ഇനം ആയി
നിര്‍വചിച്ചിരിക്കുന്നതിനാലാണ്‌.
ആള്‍ര്‍ഗ്യുമെന്റുകളുടെ എണ്ണവും ഇനവും (data type) ഫങ്ഷന്റെ പ്രവര്‍ത്തനത്തിന്‌
ആവശ്യമായ ഡാറ്റയെ ആശ്രയിച്ചിരിക്കുന്നു. എന്നാല്‍ 5൦൭ () , gets () തുടങ്ങിയ
ഫങ്ഷനുകള്‍ വിലകള്‍ ഒന്നും തിരിച്ച്‌ നല്‍കുന്നില്ല. ഇത്തരം ഫങ്ഷനുകളുടെ ഹെഡ
റില്‍ VOId എന്ന്‌ റിട്ടേണ്‍ ഇനമായി ഉപയോഗിക്കുന്നു. ഒരു ഫങ്ഷന്‍ ഒന്നുകില്‍ ഒരു
വില തിരിച്ചു നല്‍കും, അല്ലെങ്കില്‍ ഒരു വിലയും തിരിച്ചു നല്‍കുന്നില്ല.

10.4.1. ഉപയോക്ഷ്യ നിര്‍മിത ഫങ്ഷനുകള്‍ നിര്‍മിക്കുന്നു
(Creating user defined functions)

മുകളില്‍ ചര്‍ച്ചചെയ്ത വാകൃഘടനയെ അടിസ്ഥാനമാക്കി നമുക്ക്‌ ഫങ്ഷനുകള്‍
നിര്‍മിക്കാം. ഒരു സന്ദേശം പ്രദര്‍ശിപ്പിക്കാനുള്ള ഫങ്ഷന്‍ ആണ്‌ താഴെ കൊടു
ത്തിരിക്കുന്നത്‌.
void saywelcome ()
{
cout<<"Welcome to the world of functions";

}
ഫങ്ഷന്റെ പേര്‍ saywelcome () എന്നാണ്‌. ഇതിന്റെ ഡാറ്റ ഇനം (റിട്ടേണ്‍ ടൈപ്പ്‌)
വോയിഡ്‌ (Void) ആണ്‌. ഇതിന്‌ ആര്‍ഗ്യുമെന്റുകള്‍ ഇല്ല, ഫങ്ഷന്‍ ചട്ടക്കൂട്ടില്‍ ഒരു
പ്രസ്താവന മാത്രമേ ഉള്ളൂ.
ഇപ്പോള്‍ നമുക്ക്‌ രണ്ട്‌ സംഖ്യകളുടെ തുക കണ്ടുപിടിക്കുന്നതിനുള്ള ഒരു ഫങ്ഷന്‍
നിര്‍വ്വചിക്കാം. ഒരേ ഉദ്യമത്തിനായി നാല്‍ വിവിധ തരത്തിലുള്ള ഫങ്ഷന്‍ നിര്‍വചനങ്ങള്‍
നല്‍കുന്നു. എന്നാല്‍ അവയുടെ നിര്‍വചന ശൈലികള്‍ വൃത്യാസപ്പെട്ടിരിക്കുന്നതിനാല്‍
അവയിലോരോന്നിന്റെയും ഉപയോഗം മറ്റൊന്നില്‍ നിന്നും വ്ൃത്യാസപ്പെട്ടിരിക്കുന്നു.

void suml() int sum2()

| {
int a, b, ഭട int a, b, ഭട
cout<<"Enter 2 numbers: "; cout<<"Enter 2 numbers:
cin>>a>>b; cin>>a>>b;
s=atb; s=atb;
cout<<"Sum="<<s; return s;

void sum3(int a, int b) int sum4(int a, int b)
{ {
int s; int s;
s=atb; s=atb;
cout<<"Sum="<<s; return

നമുക്ക്‌ ഈ ഫങ്ഷനുകള്‍ വിശകലനം ചെയ്ത്‌ അവ എങ്ങനെ വ്യത്യാസപ്പെട്ടിരിക്കുന്നു
എന്ന്‌ നോക്കാം. എല്ലാ ഫങ്ഷനുകളുടേയും ഉദ്യമം ഒന്നു തന്നെയാണ്‌. എന്നാല്‍ പരാമീ
റ്ററുകളുടെ എണ്ണത്തിലും റിട്ടേണ്‍ ഇനത്തിലും അവ വൃത്യാസപ്പെട്ടിരിക്കുന്നു. ടേബിള്‍
10.1 ല്‍ കാണിച്ചിരിക്കുന്നത്‌ പോലെ വോയിഡ്‌ അല്ലാത്ത ഡാറ്റ ഇനം ഉപയോഗിച്ച്‌
നിര്‍വചിച്ചിരിക്കുന്ന ഫങ്ഷനുകള്‍ അതിന്‌ ചേര്‍ന്ന തരത്തിലുള്ള വില തിരിച്ചു നല്‍കും.
ഇതിന്‌ വേണ്ടിയാണ്‌ റിട്ടേണ്‍ പ്രസ്താവന ഉപയോഗിച്ചിരിക്കുന്നത്‌. (ഫങ്ഷന്‍ 2ഉം, ഫ
ങ്ഷന്‍ 4ഉം പരിശോധിക്കുക). റിട്ടേണ്‍ (return statement) പ്രസ്താവന വിളിച്ചിരിക്കുന്ന
ഫങ്ഷനിലേക്ക്‌ ഒരു വില തിരിച്ച്‌ നല്‍കുന്നതിനേടൊപ്പം പ്രോഗ്രാം നിയ്ര്രണം തിരിച്ച്‌
കൈമാറുകയും ചെയ്യുന്നു. അതുകൊണ്ട്‌ ഒരു റിട്ടേണ്‍ സ്റ്റേറ്റ്മെന്റ്‌ പ്രവര്‍ത്തിച്ചു കഴിഞ്ഞാല്‍
ഫങ്ഷനിലെ പിന്നീട്‌ വരുന്ന (പ്രസ്താവനകള്‍ പ്രവര്‍ത്തിക്കുകയില്ല എന്നത്‌ ഓര്‍ക്കുക.
10. ഫങ്ഷനുകള്‍

ആര്‍ധ്യുമെന്റുകള്‍ തിരിച്ച്‌ നല്‍കുന്ന വില

ആര്‍ധ്യുമെന്റുകള്‍ ഉല്ല ഒരു വിലയും തിരിച്ച്‌ നല്‍കുന്നില്ല
ആര്‍ധ്വുമെന്റുകള്‍ ഇല്ല പൂര്‍ണ്ണ സംഖ്യ തിരിച്ച്‌ നല്‍കുന്നു

രണ്ട്‌ പൂര്‍ണ്ണ സംഖ്യകള്‍ ഒരു വിലയും തിരിച്ച്‌ നല്‍കുന്നില്ല

രണ്ട്‌ പൂര്‍ണ്ണ സംഖ്യകള്‍ പൂര്‍ണ്ണ സംഖ്യ തിരിച്ച്‌ നല്‍കുന്നു

ചടി 70. 7: ഫങ്ഷനുക്ളുടെ വിശക്ഷമം

ഒട്ടുമിക്ക ഫങ്ഷനുകളിലും റിട്ടേണ്‍ പ്രസ്താവന ഫങ്ഷന്റെ അവസാനമാണ്‌ നല്‍കുന്നത്‌.
Void ഡാറ്റ ഇനം ഉപയോഗിച്ച്‌ നിര്‍വചിച്ച ഫങ്ഷനുകളുടെ ചട്ടക്കൂടിനുള്ളില്‍ റിട്ടേണ്‍
പ്രസ്താവന ഉണ്ടായേക്കാം. എന്നാല്‍ അതിന്‌ നമുക്ക്‌ ഒരു വിലയും നല്‍കാന്‍ കഴിയില്ല.
main () ഫങ്ഷന്റെ റിട്ടേണ്‍ ഇനം ഒന്നുകില്‍ void അല്ലെങ്കില്‍ int ആണ്‌.
ഇനി നമുക്ക്‌ ഈ ഫങ്ഷനുകള്‍ എങ്ങനെ വിളിക്കണമെന്നും അവ എങ്ങനെ പ്രവര്‍ത്തി
ക്കുമെന്നും നോക്കാം. main () ഫങ്ഷന്‍ ഒഴികെ മറ്റൊരു ഫങ്ഷനും സ്വയം പ്രവര്‍ത്തി
ക്കുക ഇല്ല എന്ന്‌ നമുക്ക്‌ അറിയാം. മുന്‍ നിര്‍വചിതമോ ഉപയോക്തൃ നിര്‍വചിതമോ
ആയ മറ്റ്‌ ഉപ ഫങ്ഷനുകള്‍ main () ഫങ്ഷനിലോ മറ്റ്‌ ഉപയോക്ത്യ നിര്‍വചിത ഫങ്ഷ
നിലോ വിളിക്കുമ്പോള്‍ മാത്രമേ പ്രവര്‍ത്തിക്കൂ. താഴെ കൊടുത്തിരിക്കുന്ന പ്രോഗ്രാമില്‍
ചതുരത്തിനുള്ളില്‍ നല്‍കിയിരിക്കുന്ന കോഡ്‌, ഫങ്ഷന്‍ വിളിക്കുന്നതിനെ സൂചിപ്പിക്കുന്നു.
ഇവിടെ main() വിളിക്കുന്നു ഫങ്ഷനും suml(),sum2(),sum3(), sum4()
എന്നിവ വിളിക്കപ്പെട്ട ഫങ്ഷനുകളുമാണ്‌.
int main()
{

int x, y, z=5, result;

cout << "\nCalling the first function\n";

suml ();

cout << "\nCalling the second function\n";

result =]sum2();

cout << "Sum given by function 2 is " << result;

cout << "\nEnter values for x and y: ന

cin >> x >> y;

cout << "\nCalling the third function\n";

sum3 (X,Y);

cout << "\nCalling the fourth function\n";

result = |jsum4(z,12);

cout << "Sum given by function 4 is " << result;

cout << "\nEnd of main function"
ലി

പ്രോഗ്രാമിന്റെ ഓട്ട്പുട്ട്‌ ചുവടെ ചേര്‍ക്കുന്നു.

sum1()
ഫങ്ഷനില്‍ ക്കും
യുടേയും ഉന്‍പുട്ട്‌

Calling the first function
Enter 2 numbers: 10 25

Sum=35
Calling the second function
Enter 2 numbers: 5 _— sum 2()

ഫങ്ഷനില്‍ 2. b
യുടേയും ഉന്‍പുട്ട്‌

Sum given by function 2 is 12
Enter values for x and y: 8
Calling the third function
Sum=21
Calling the fourth function
Sum given by function 4 is 17
End of main function

main() ഫങ്ഷനില്‍
X, ൮ എന്നിവയുടേയും
വേണ ഉന്‍പുട്ട്‌

ഫങ്ഷന്‍ 4 ന്‌ നല്‍കിയിരിക്കുന്ന ഉദ്യമത്തിന്‌ രണ്ട്‌ സംഖ്യകള്‍ ആവശ്യമായതിനാല്‍
രണ്ട്‌ ആര്‍ഗ്യുമെന്റുകള്‍ നാം നല്‍കുന്നു. ഫങ്ഷന്‍ ചില കണക്കുകൂട്ടലുകള്‍ നിര്‍വ്വഹിച്ച്‌
ഒരു ഉത്തരം നല്‍കുന്നു. ഒരേ ഒരു ഉത്തരം മാതം ഉള്ളതിനാല്‍ അത്‌ തിരിച്ച്‌ നല്‍കാന്‍
കഴിയും. രണ്ട്‌ സംഖ്യകളുടെ തുക കണ്ടുപിടിക്കുന്നതിന്‌ ഈ ഫങ്ഷന്‍ താരതമ്യേന
നല്ലതാണ്‌.

ഇനി നമുക്ക്‌ തന്നിരിക്കുന്ന ഒരു സംഖ്യ പെര്‍ഫക്ട്‌ ആണോ അല്ലയോ എന്ന്‌ പരിശോ
ധിക്കുന്നതിനുള്ള C++ പ്രോഗ്രാം നമുക്ക്‌ എഴുതാം. ആ സാഖ്യ ഒഴികെ അതിന്റെ ബാക്കി
ഘടകങ്ങളുടെയെല്ലാം തുക ആ സ്യ തന്നെ ആണെങ്കില്‍ അതിനെ പെര്‍ഫക്ട്‌ സാംഖ്യ
എന്ന്‌ പറയുന്നു. ഉദാഹരണത്തിന്‌ 28 ഒരു പെര്‍ഫക്ട്‌ സംഖ്യ ആകുന്നു. എന്തുകൊണ്ടെ
ന്നാല്‍ 28 അല്ലാതെയുള്ള ഘടകങ്ങള്‍ 1,2,4,7,14 എന്നിവ ആകുന്നു. ഈ ഘടകങ്ങളുടെ
തുക 28 ആണ്‌. ഈ പ്രശ്നം പരിഹരിക്കുന്നതിനായി നമുക്ക്‌ ഒരു സംഖ്യ ആര്‍ഗ്യുമെന്റ്‌
ആയി സ്വീകരിക്കുകയും അതിന്റെ ഘടകങ്ങളുടെ തുക തിരിച്ചു നല്‍കുന്നതിനുള്ള ഒരു
ഫങ്ഷന്‍ നിര്‍വചിക്കുകയും ചെയ്യാം. ഈ ഫങ്ഷന്‍ ഉപയോഗിച്ച്‌ നമുക്ക്‌ ഒരു പ്രോഗ്രാം
എഴുതാം. എന്നാല്‍ C++ പ്രോഗ്രാമില്‍ നാം എവിടെയാണ്‌ ഉപയോക്തൃ നിര്‍വചിത
ഫങ്ഷന്‍ എഴുതുന്നത്‌? താഴെ കൊടുത്തിരിക്കുന്ന പട്ടിക ഉപയോക്തൃ നിര്‍വചിത
ഫങ്ഷന്‍ എഴുതുന്നതിന്‌ വേണ്ട രണ്ട്‌ ശൈലികള്‍ കാണിക്കുന്നു.

Y പരിശോധിക്കുന്നു. പ്രോഗ്രാം 10.6

#include<iostream> #include<iostream>
using namespace std; using namespace std;
int sumfact (int N) int main()

{ int i, s = 0; {

for(i=1; i<=N/2; itt) int num;
if (N%i == 0) cout<<"Enter the Number: ";
cin>>num;

| Ce 10. ഫങ്ഷനുകള്‍

പട്ട; 17 (num==sumfact (num) )

return s; cout<<"Perfect number";
} else

//Definition above main() cout<<"Not Perfect";
int main() return 0;
{ }
int num; //Definition below main()
cout<<"Enter the Number: ന int sumfact (int N)
cin>>num; { int i, s = 0;
if (num==sumfact (num) ) for(i=1; i<=N/2; itt)
cout<<"Perfect number"; if (N%i == 0)
else s=s +i;
cout<<"Not Perfect";
return 0; return s;

പട്ടിക 10.2 : ഫംങ്ഷനുകളുടെ വിശകലനം.

പ്രോഗ്രാം 10.5 കംപൈയില്‍ ചെയ്യുമ്പോള്‍ അവിടെ ഒരു തെറ്റും ഉണ്ടാവില്ല പ്രോഗ്രാം
പ്രവര്‍ത്തിക്കുമ്പോള്‍ നമുക്ക്‌ താഴെ കൊടുത്തിരിക്കുന്ന ഓട്ട്പുട്ട്‌ ലഭിക്കും.

Enter the Number: 28

Perfect number
നാം പ്രോഗ്രാം 10.6 കംപൈയില്‍ ചെയ്യുമ്പോള്‍ അവിടെ ഒരു തെറ്റ്‌ ഉണ്ടാകും ‘sumfact
() was not declared in this scope’ എന്താണ്‌ ഈ പിശക്‌ അര്‍ത്ഥമാക്കു
ന്നത്‌ എന്ന്‌ നമുക്ക്‌ നോക്കാം.
10.4.2 ഫങ്ഷനുകളുടെ പ്രോട്ടോടൈച്‌ (Prototype of functions)
ഒരു C++ പ്രോ്ഗാമില്‍ എത്ര ഫങ്ഷനുകള്‍ വേണമെങ്കിലും ഉള്‍പ്പെടുത്താം എന്ന്‌ നാം
കണ്ടു കഴിഞ്ഞു. എന്നാല്‍ അതിന്റെ പ്രവര്‍ത്തനം തുടങ്ങുവാന്‍ ഒരു main () ഫങ്ഷന്‍
ഉണ്ടായിരിക്കണം. ഫങ്ഷനുകളുടെ നിര്‍വചനങ്ങള്‍ നാം ആഗ്രഹിക്കുന്ന രീതിയില്‍
ഏത്‌ ക്രമത്തിലും എഴുതാം. നമുക്ക്‌ ആദ്യം തന്നെ main () ഫങ്ഷന്‍ നിര്‍വചിക്കുകയും
മറ്റെല്ലാം ഫങ്ഷനുകളും അതിന്‌ ശേഷമോ മുമ്പോ നല്‍കാവുന്നതാണ്‌. പ്രോഗ്രാം 10.5
ല്‍ main () ഫങ്ഷന്‍ മറ്റ്‌ എല്ലാ ഉപയോക്തൃ നിര്‍മ്മിത ഫങ്ഷനുകള്‍ക്ക്‌ ശേഷമാണ്‌
നല്‍കിയിരിക്കുന്നത്‌. എന്നാല്‍ പ്രോ്രഗാം 10.6 ല്‍ main () ഫങ്ഷന്‍ മറ്റ്‌ എല്ലാ ഫങ്ഷനു
കള്‍ക്കും മുമ്പാണ്‌ നിര്‍വചിച്ചിരിക്കുന്നത്‌. നാം ഈ പ്രോഗ്രാം കംപൈല്‍ ചെയ്യുമ്പോള്‍
അത്‌ ഒരു തെറ്റ്‌ ചൂണ്ടിക്കാണിക്കും. “sumfact was not declared in this
scope” ഇത്‌ എന്തുകൊണ്ടെന്നാല്‍ sumfact () എന്ന ഫങ്ഷന്‍ വിളിച്ചിരിക്കുന്നത്‌
അതിന്റെ നിര്‍വചനത്തിന്‌ മുന്‍പേ ആണ്‌. main ( ) ഫങ്ഷന്റെ കംപൈലേഷന്‍ സമയത്ത്‌
കംപൈലര്‍ ടധ്സ്‌ദഠ () എന്ന ഫങ്ഷന്‍ വിളി (7൧൩൦൧൪൦൩ call) എത്തുമ്പോള്‍ അതിന്‌
അങ്ങനെ ഒരു ഫങ്ഷനെ കുറിച്ച്‌ അറിവില്ല. അങ്ങനെ ഒരു ഫങ്ഷന്‍ ഉണ്ടോ എന്നും
അതിന്റെ പ്രയോഗരീതി ശരിയാണോ അല്ലയോ എന്നും കംപൈലറിന്‌ പരിശോധിക്കാന്‍
പി

സാധിക്കില്ല. അങ്ങനെ അത്‌ ഫങ്ഷന്‍ പ്രോട്ടോടൈപ്പിന്റെ അഭാവം മൂലമുള്ള ഒരു തെറ്റ്‌
ചൂണ്ടിക്കാണിക്കുന്നു. ഒരു ഫങ്ഷന്‍ പ്രോട്ടോടൈപ്പ്‌ എന്നത്‌ ഒരു ഫങ്ഷന്റെ പ്രഖ്യാ
പനം ആണെന്നും അതിലൂടെ ഫങ്ഷന്റെ പേര്‍, അതിന്റെ റിട്ടേണ്‍ ഇനം, ആര്‍ഗ്യുമെന്റു
കളുടെ എണ്ണവും ഇനവും അതിന്റെ പ്രാപ്യത എന്നിവ കമ്പയിലറിന്‌ ലഭ്യമാകുന്നു. ഈ
വിവരങ്ങള്‍ പ്രോഗ്രാമിലെ ഫങ്ഷന്‍ കാള്‍ ശരിയാണോ എന്ന്‌ പരിശോധിക്കുന്നതിന്‌
അത്യാവശ്യമാണ്‌. ഈ വിവരങ്ങള്‍ ഫങ്ഷന്‍ ഹെഡറില്‍ ലഭ്യമാണ്‌. അതിനാല്‍ ഫങ്ഷന്‍
ഹെഡര്‍ (ഫങ്ഷന്‍ പ്രോട്ടോടൈപ്പ്‌) ഫങ്ഷനെ വിളിയ്ക്കുന്നതിന്‌ മുമ്പായി പ്രസ്താവ
നയായി എഴുതാം. ഇതിന്റെ ഘടന താഴെ കൊടുത്തിരിക്കുന്നു.

data_type function name(argument list);

പ്രോട്ടോടൈപ്പില്‍ ആര്‍ഗ്യുമെന്റിന്റെ പേരുകള്‍ നല്‍കേണ്ടതില്ല. അതുകൊണ്ട്‌ താഴെ
കൊടുത്തിരിക്കുന്ന പ്രസ്താവന main () ഫങ്ഷനിലെ ഫങ്ഷന്‍ വിളിയ്ക്ക്‌ മുന്‍പ്‌ കൂട്ടി
ച്ചേര്‍ത്ത്‌ പ്രോഗ്രാം 10.6 ലെ തെറ്റ്‌ തിരുത്തണം.

int ടധ്സ്ദഠ (int);

ഒരു വേരിയബിള്‍ പ്രഖ്യാപിക്കുന്നത്‌ പോലെ ഫങ്ഷനും അത്‌ പ്രോഗ്രാമില്‍ ഉപയോഗി
ക്കുന്നതിന്‌ മുന്‍പേ പ്രഖ്യാപിച്ചിരിക്കണം. പ്രോഗ്രാമില്‍ ഒരു ഫങ്ഷന്‍ അത്‌ ഉപയോഗി
ക്കുന്നതിന്‌ മുന്‍പേ നിര്‍വൃചിച്ചിട്ടുണ്ടെങ്കില്‍ ഫങ്ഷന്‍ പ്രഖ്യാപനം പ്രത്യേകമായി നട
ത്തേണ്ടതില്ല. പ്രഖ്യാപന പ്രസ്താവന main () ഫങ്ഷന്‍ പുറത്തും നല്‍കാവുന്നതാണ്‌.
പ്രോട്ടോടൈപ്പിന്റെ സഥാനം ഫങ്ഷന്റെ പ്രാപ്യതക്കനുസരിച്ച്‌ വൃത്യസപ്പെട്ടിരിക്കുന്നു.
നമുക്ക്‌ ഇത്‌ ഈ അധ്യായത്തില്‍ പിന്നീടുള്ള ഭാഗത്ത്‌ ചര്‍ച്ച ചെയ്യാം. ഫങ്ഷന്‍ നിര്‍വ
ചനത്തിന്റെ സ്ഥാനം എവിടെ ആയിരുന്നാലും പ്രോഗ്ഗാമിന്റെ പ്രവര്‍ത്തനം ൬൭1൩ ()
ഫങ്ഷനില്‍ നിന്ന്‌ ആരംഭിക്കും.

10.4.3 ഫങ്ഷനുകളുടെ ആര്‍ഗ്യുമെന്റുകള്‍ (Arguments of functions)

ഫങ്ഷനിലേക്ക്‌ ഡാറ്റാ ലഭിക്കുന്നതിനായി ആര്‍ഗ്യുമെന്റുകള്‍ അല്ലെങ്കില്‍ പാരാമീറ്ററു
കള്‍ ഉപയോഗിക്കാമെന്ന്‌ നാം കണ്ടു. ഫങ്ഷന്‍ കാളില്‍ ആര്‍ഗ്യുമെന്റുകളുടെ പ്രാധാന്യം
എന്താണെന്ന്‌ നമുക്ക്‌ നോക്കാം. താഴെ കൊടുത്തിരിക്കുന്ന ഫങ്ഷന്‍ പരിഗണിക്കുക.

float SimpleInterest(long P, int N, float മ)
{
float amt;
amt = P * N * R / 100;
return amt;
}
ഈ ഫങ്ഷന്‍ തന്നിരിക്കുന്ന മുതല്‍ പലിശനിരക്ക്‌, കാലം എന്നിവ ഉപയോഗിച്ച്‌ സാധാ

രണ പലിശ കണക്കാക്കുന്നു.

താഴെ കൊടുത്തിരിക്കുന്ന കോഡ്‌ ഭാഗം വിവിധ ഫങ്ഷന്‍ വിളികള്‍ വിവരിക്കുന്നു.
cout << SimpleInterest (1000,3,2);//Function call 1
int x, y; float z=3.5, a;
cin >> x >> y;
| ers) 10. ഫങ്ഷനുകള്‍

a = SimpleInterest(x, y, മ) //Function call 2

ആദ്യത്തെ പ്രസ്താവന പ്രവര്‍ത്തിക്കുമ്പോള്‍ 1000, 3, 2 എന്നീ വിലകള്‍ ഫങ്ഷന്‍
നിര്‍വചനത്തിലെ ആര്‍ഗ്യുമെന്റ്‌ ലിസ്റ്റിലേക്ക്‌ അയക്കുന്നു. ആര്‍ഗ്യുമെന്റുകളായ P,N, 2.
എന്നിവയ്ക്ക്‌ യഥാക്രമം 1000, 3, 2 എന്നീ വിലകള്‍ ലഭിക്കുന്നു. അതേപോലെ അവസാ
നത്തെ പ്രസ്താവന പ്രവര്‍ത്തിക്കുമ്പോള്‍ 2, 2 എന്നീ വേരിയബിളുകളുടെ വിലകള്‍
യഥാക്രമം ആര്‍ഗ്യുമെന്റുകളായ P,N, R എന്നിവയിലേക്ക്‌ അയക്കുന്നു.

EX, Vr മ എന്നീ വേരിയബിളുകളെ ആക്ച്ചല്‍ ആര്‍ഗ്യുമെന്റുകള്‍ അല്ലെങ്കില്‍ യഥാര്‍ത്ഥ
പരാമീറ്ററുകള്‍ എന്ന്‌ വിളിക്കുന്നു. കാരണം പ്രവര്‍ത്തനത്തിനായി ഫങ്ഷനിലേക്ക്‌
അയക്കുന്ന യഥാര്‍ത്ഥ ഡാറ്റയാണിവ. ഫങ്ഷന്‍ ഹെഡറില്‍ ഉപയോഗിക്കുന്ന P,N,R
എന്നീ വേരിയബിളുകള്‍ ഫോര്‍മല്‍ ആര്‍ഗ്യൂമെന്റുകള്‍ അല്ലെങ്കില്‍ ഫോര്‍മല്‍ പാരാമീറ്റ
റുകള്‍ എന്ന്‌ അറിയപ്പെടുന്നു. വിളിക്കുന്ന ഫങ്ഷനില്‍ നിന്നും അയക്കുന്ന ഡാറ്റ സ്വീക
രിക്കാന്‍ വേണ്ടിയാണ്‌ ഈ ആര്‍ഗ്യുമെന്റുകള്‍ ഉപയോഗിച്ചിരിക്കുന്നത്‌. വിളിച്ച ഫങ്ഷ
നില്‍ നിന്നും വിളിക്കപ്പെട്ട ഫങ്ഷനിലേക്ക്‌ വിലകള്‍ അയക്കുന്നതിനുള്ള ഉപാധിയാണ്‌
ആര്‍ഗ്യുമെന്റുകള്‍ അല്ലെങ്കില്‍ പരാമീറ്ററുകള്‍. ഫങ്ഷന്‍ നിര്‍വചനത്തില്‍ ആര്‍ഗ്യൂ
മെന്റുകളായി ഉപയോഗിച്ച വേരിയബിളുകള്‍ ഫോര്‍മല്‍ ആര്‍ഗ്യുമെന്റുകള്‍ എന്നറിയപ്പെ
ടുന്നു. ഫങ്ഷന്‍ കോളില്‍ ഉപയോഗിച്ച സ്ഥിരവിലകള്‍, വേരിയബിളുകള്‍ അല്ലെങ്കില്‍
പദ്രപയോഗങ്ങള്‍ എന്നിവ യഥാര്‍ത്ഥ ആര്‍ഗ്യുമെന്റുകള്‍ എന്ന്‌ അറിയപ്പെടുന്നു. ഫങ്ഷന്‍
പ്രോട്ടോടൈപ്പില്‍ വേരിയബിളുകള്‍ ഉപയോഗിക്കുകയാണെങ്കില്‍ അവ ഡമ്മി ആര്‍ഗ്യൂ
മെന്നുകള്‍ എന്ന പേരില്‍ അറിയപ്പെടുന്നു.

ഇപ്പോള്‍ നമുക്ക്‌ fact () എന്ന ഫങ്ഷന്‍ ഉപയോഗിച്ച്‌ ഒരു സംഖ്യയുടെ ഫാക്ടോറിയല്‍
കണ്ടുപിടിക്കുകയും അത്‌ ൨൦൦ ന്റെ വില കാണുന്നതിനായി ഉപയോഗിക്കുകയും ചെയ്യാം
(പ്രോഗ്രാം 10.7) നമുക്ക്‌ അറിയാവുന്നതു പോലെ 1? എന്ന സംഖ്യയുടെ ഫാക്ടോറിയല്‍
ആദ്യത്തെ N എണ്ണല്‍ സാഖ്യകളുടെ ഗുൂണനഫലമാകുന്നു. ൩൦ ന്റെ വില

277
7] എന്ന സൂധ്രവാക്ൃയം ഉപയോഗിച്ച്‌ കണ്ടുപിടിക്കുന്നു. ഇവിടെ ല്‌
സൂചിപ്പിക്കുന്നത്‌ ൩ എന്ന സംഖ്യയുടെ ഫാക്ടോറിയലാണ്‌.

തിന്‌

#include<iostream> നി
wsimg MEMES PASE std; = ലം
int fact(int);

int main() യഥാര്‍ത്ഥ ആര്‍ധ്യു
{ മെന്റുകള്‍
int n,x;
int ner;

cout<<"Enter/ the values of\n andr: "j

സൂത്രവാകൃത്തിന്‌
അനുസൃതമായ ഫങ്ഷന്‍
വിളി

cin>>n>>r; | 7 റ
ncer=fact (മ) (fact (2) *fact (n-r));
cout<<n<<"CN<<r<<c" = "<<ner;
return 0

: 1 ഹെഡര്‍

int fact(int 1) യഥാക്രമ

:
int f;

for(f=1; N>O; N--)
f=f£*N;
return £;

താഴെ കൊടുത്തിരിക്കുന്നത്‌ ഒരു മാതൃക ഓട്ട്പുട്ട്‌ ആണ്‌.

Enter the values of n and r: 5 20 _ ഉപയോക്താവ്‌ maazm
5c2 = 10 18 01353008

10.4.4. തനതു GHGjZH29836.6898 കൂടിയ ഫങ്ഷനുകള്‍ (Functions with default arguments)
നമുക്ക്‌ താഴെ പറയുന്ന ആര്‍ഗ്യൂമെന്റ്‌ പട്ടികയോട്‌ കൂടിയ TimeSec () എന്ന ഒരു ഫങ്ഷന്‍
പരിഗണിക്കാം. ഈ ഫങ്ഷന്‍ സമയത്തെ പ്രതിനിധീകരിക്കുന്ന മണിക്കുറുകള്‍, മിനിട്ട്‌,
സെക്കന്റ്‌ എന്നിവക്കുള്ള മൂന്ന്‌ സംഖ്യകള്‍ സ്വീകരിക്കുന്നു.
long TimeSec(int H, int M=0, int S=0)
{
long sec = H * 3600 + M * 60 + S;
return sec;
}
SecTime ()
തന്നിരിക്കുന്ന സമയത്തെ ഫങ്ഷന്‍ സെക്കന്റുകളിലേക്ക്‌ മാറ്റുന്നു. 12, S എന്നീ ആര്‍ഗ്യൂ
മെന്റുകള്‍ക്ക്‌ തനതു വിലയായി പൂജ്യം നല്‍കിയിരിക്കുന്നത്‌ ശ്രദ്ധിക്കുക. അതുകൊണ്ട്‌
ഈ ഫങ്ഷന്‍ താഴെ പറയുന്ന രീതികളില്‍ വിളിക്കാം.
long sl = TimeSec(2,10,40);
long s2 = TimeSec(1,30);
long s3 = TimeSec(3);

ആര്‍ഗ്യുമെന്റുകളുടെ പട്ടികയിലെ തനതുവില നല്‍കുന്ന എല്ലാ ആര്‍ഗ്യുമെന്നുകളും
വലത്തു നിന്ന്‌ ഇടത്തോട്ട്‌ നല്‍കണം എന്നത്‌ പ്രധാനമായും ശ്രദ്ധിക്കേണ്ടതാണ്‌. ഒരു
ഫങ്ഷന്‍ വിളിക്കുമ്പോള്‍ യഥാര്‍ത്ഥ ആര്‍ഗ്യുമെന്റുകള്‍ (actual arguments) ഫോര്‍മല്‍
ആര്‍ഗ്യുമെന്റുകളിലേക്ക്‌ ഇടത്‌ ഭാഗം മുതല്‍ നല്‍കുന്നു.

ആദ്യത്തെ പ്രസ്താവന പ്രവര്‍ത്തിച്ചപ്പോള്‍ 2,10,40 എന്നീ വിലകള്‍ യഥാക്രമം ഫോര്‍മല്‍
പരാമീറ്ററുകളായ H, M, ട എന്നിവയിലേക്ക്‌ ഫങ്ഷന്‍ വിളിയോടൊലപ്പം അയക്കുന്നു. M,
ട എന്നിവയുടെ തനതു വിലകളെ യഥാര്‍ത്ഥ ആര്‍ഗ്യുമെന്റുകള്‍ തിരുത്തി എഴുതുന്നു.
രണ്ടാമത്തെ പ്രസ്താവനയിലുള്ള ഫങ്ഷന്‍ വിളിക്കുമ്പോള്‍ H നും 1 നും യഥാര്‍ത്ഥ
ആര്‍ഗ്യുമെന്റുകളുടെ വിലകള്‍ കിട്ടുമ്പോള്‍ S അതിന്റെ തനതു വിലയായ പൂജ്യത്തില്‍
(0) പ്രവര്‍ത്തിക്കുന്നു. അതുപോലെ മൂന്നാമത്തെ പ്രസ്താവന പ്രവര്‍ത്തിക്കുമ്പോള്‍ H

ന്‌ വിളിച്ചിരിക്കുന്ന ഫങ്ഷനില്‍ നിന്നു വിലകിട്ടുന്നു, എന്നാല്‍ M ഉം S ഉം അവയുടെ
| ക്ര 10. ഫങ്ഷനുകള്‍

തനത്‌ വില ഉപയോഗിക്കുന്നു. അതുകൊണ്ട്‌ ഫങ്ഷന്‍ വിളികള്‍ക്ക്‌ ശേഷം sl, 52, s3
എന്നിവയുടെ വിലകള്‍ യഥാക്രമം 7840, 5400, 10800 എന്നിങ്ങനെ ആയിരിക്കും.

ഫങ്ഷനുകളുടെ ആര്‍ഗ്യുമെന്റുകള്‍ക്ക്‌ തനത്‌ വില നല്‍കി നിര്‍വ്വചിക്കാന്‍ സാധിക്കും
എന്ന്‌ നാം കണ്ടു കഴിഞ്ഞു. തനത്‌ വില നല്‍കിയ ആര്‍ഗ്യുമെന്റുകളെ തനത്‌ (ഡിഫാള്‍ട്ട്‌)
ആര്‍ഗ്യുമെന്റുകള്‍ എന്നു വിളിക്കുന്നു. ഇത്‌ ഒരു ഫങ്ഷന്‌ വ്യത്യസ്ത എണ്ണം GHGS}
മെമ്ത്രകശീ AINE വിളിക്കുന്നതിന്‌ ഒരു ClasLNIDOO അനുവദിക്കുന്നു. അതായത്‌ തനത്‌
ആര്‍ഗ്യുമെന്റുകള്‍ക്ക്‌ വിലകള്‍ നല്‍കിയോ നല്‍കാതെയോ ഫങ്ഷനെ വിളിക്കാന്‍ കഴിയും.

10.4.5 ഫങ്ഷൻ വിളിക്കുന്നതിനുള്ള വിവിധ രീതികള്‍ (Methods of calling Functions)

നിങ്ങളുടെ ടീച്ചര്‍ ക്ലാസിലെ എല്ലാ വിദ്യാര്‍ത്ഥികളുടേയും രക്ഷകര്‍ത്താക്കളെ നിങ്ങ
ളൂടെ വിദ്യാലയത്തില്‍ ഒരു പരിപാടിയിലേക്ക്‌ ക്ഷണിക്കുന്നതിനുള്ള ഒരു കത്ത്‌ തയ്യാറാ
ക്കുവാന്‍ നിങ്ങളോട്‌ ആവശ്യപ്പെട്ടു എന്ന്‌ കരുതുക. കത്തിന്റെ മാതൃകയും രക്ഷാകര്‍ത്താ
ക്കളുടെ പേര്‍ അടങ്ങുന്ന പട്ടികയും നല്‍കാന്‍ ടീച്ചര്‍ക്ക്‌ കഴിയും. പേരുകളുടെ പട്ടിക
രണ്ട്‌ വിധത്തില്‍ നല്‍കാവുന്നതാണ്‌. ഒന്നുകില്‍ യഥാര്‍ത്ഥ പട്ടിക അല്ലെങ്കില്‍ അതിന്റെ
ഫോട്ടോകോപ്പി. ഈ രണ്ട്‌ രീതികളില്‍ പേരിന്റെ പട്ടിക വൃത്യാസം എന്താണ്‌? ടീച്ചര്‍
യഥാര്‍ത്ഥ പട്ടികയാണ്‌ നിങ്ങള്‍ക്ക്‌ നല്‍കുന്നതെങ്കില്‍, അതില്‍ മറ്റൊന്നും എഴുതാതെയും
രേഖപ്പെടുത്താതെയും ശ്രദ്ധാപൂര്‍വ്വം ഉപയോഗിക്കണം. എന്തുകൊണ്ടെന്നാല്‍ ടീച്ചര്‍ക്ക്‌
അതേ പട്ടിക തന്നെ ഭാവിയില്‍ ആവശ്യമായി വരാം. എന്നാല്‍ ഫോട്ടോകോപ്പിയാണ്‌
നിങ്ങള്‍ക്ക്‌ ലഭിക്കുന്നതെങ്കില്‍ അതില്‍ എഴുതുവാനോ രേഖപ്പെടുത്തുവാനോ നിങ്ങള്‍ക്ക്‌
സാധിക്കും. എന്തുകൊണ്ടെന്നാല്‍ ഫോട്ടോകോപ്പിയില്‍ വരുത്തുന്ന വ്യത്യാസങ്ങള്‍
യഥാര്‍ത്ഥ പട്ടികയെ ബാധിക്കുന്നില്ല.

ക്ഷണക്കത്ത്‌ തയ്യാറാക്കുന്ന ജോലി ഒരു ഫങ്ഷനായി നമുക്ക്‌ പരിഗണിക്കാം. പേര്‍ അട
ങ്ങുന്ന പട്ടിക ഫങ്ഷന്‍ ആര്‍ഗ്യുമെന്റ്‌ ആണ്‌. ആര്‍ഗ്യുമെന്റ്‌ ഫങ്ഷനിലേക്ക്‌ രണ്ട്‌ രീതി
യില്‍ അയയ്ക്കാന്‍ സാധിക്കും. ആദ്യത്തേത്‌ പേര്‍ അടങ്ങുന്ന പട്ടികയുടെ കോപ്പി കൈമാ
Yk, മറ്റേത്‌, യഥാര്‍ത്ഥ പട്ടികതന്നെ കൈമാറുക. ക്ഷണക്കത്ത്‌ തയ്യാറാക്കുമ്പോള്‍
യഥാര്‍ത്ഥ പട്ടിക തന്നെയാണ്‌ കൈമാറുന്നതെങ്കില്‍ പട്ടികയില്‍ ഉണ്ടാക്കുന്ന ഏത്‌ മാറ്റവും
യഥാര്‍ത്ഥ പട്ടികയെ തന്നെ ബാധിക്കും. അതുപോലെ, C++ ലും രണ്ട്‌ രീതിയില്‍ ഫങ്ങ്ഷ
നിലേക്ക്‌ ആര്‍ഗ്യൂമെന്റുകള്‍ അയയ്ക്കാം. ആര്‍ഗ്യുമെന്റുകള്‍ അയയ്ക്കുന്ന രീതിയെ
അവലംബമാക്കി ഫങ്ങ്ഷന്‍ വിളിക്കുന്ന രീതിയെ കാള്‍-ബൈ-വാല്യൂ രീതിയെന്നും
കാള്‍ ബൈ റഫറന്‍സ്‌ രീതിയെന്നും തരംതിരിക്കാം. ആര്‍ഗ്യൂമെന്റ്‌ കൈമാറ്റ രീതികള്‍
വിശദമായി താഴെ വിവരിച്ചിരിക്കുന്നു

മ. കാള്‍-ബൈ-വാല്യൂ (പാസ്‌ ബൈ വാല്യൂ) രീതി (Call by value Method)

ഈ രീതിയില്‍, ആക്ച്ചല്‍ ആര്‍ഗ്യുമെന്റുകളില്‍ അടങ്ങിയ വിലകള്‍ ഫോര്‍മല്‍ ആര്‍ഗ്യു
മെന്റുകളിലേക്ക്‌ (Formal argument) അയയ്ക്കുന്നു. മറ്റൊരു വിധത്തില്‍ പറഞ്ഞാല്‍
ആക്ച്ചല്‍ ആര്‍ഗ്യുമെന്റിന്റെ ഒരു പകര്‍പ്പ്‌ ഫങ്ഷനിലേക്ക്‌ അയയ്ക്കുന്നു. അതിനാല്‍
ഫങ്ഷനകത്ത്‌ യഥാക്രമ ആര്‍ഗ്യുമെന്റ്‌ പുതുക്കപ്പെട്ടാലും, വിളിക്കുന്ന ഫങ്ഷനിലെ
ആക്ച്ചല്‍ ആര്‍ഗ്യൂമെന്റില്‍ വ്യത്യാസം പ്രതിഫലിക്കുന്നില്ല. മുന്‍പ്‌ ചര്‍ച്ച ചെയ്ത എല്ലാ
ഫങ്ഷനുകളിലും ആര്‍ഗ്യൂമെന്റുകളുടെ വിലയാണ്‌ അയച്ചത്‌. താഴെ കൊടുത്തിരിക്കുന്ന
ഉദാഹരണം കാണുക:
പി

change () ഫങ്ഷനിഥെ
2 പരാമീറ്ററിന്‌ 20 എന്ന വില
ശേഖരിക്കാന്‍ അതിന്റെ സ്വന്തം
മെമറി സ്ഥലം ഉണ്ട്‌.

void change(int n)

{

n=n+4+1;
cout << "n = " << n << '\n';

}

int main()
|
int x = 20;
change (x); _
cout << "x = " << x;

}

മുകളിലത്തെ പ്രോഗ്രാം ഭാഗത്ത്‌ പരാമര്‍ശിച്ചിരിക്കുന്നതു പോലെ, നാം ഒരു ആര്‍ഗ്യു
മെന്റ്‌ കൈമാറ്റം ചെയ്യുമ്പോള്‍ വേരിയബിള്‍ x ന്റെ ഒരു പകര്‍പ്പ്‌ ഫങ്ഷനിലേക്ക്‌ കൈമാറ്റം
ചെയ്യപ്പെടുന്നു.

മറ്റൊരു വിധത്തില്‍ പറഞ്ഞാല്‍ x എന്ന വേരിയബിളിന്റെ വിലമാത്രമേ ഫങ്ഷനിലേക്ക്‌
അയയ്ക്കുന്നുള്ളു. അതിനാല്‍ ഫങ്ഷനിലെ ഫോര്‍മല്‍ പരാമീറ്ററിന്‌ 20 എന്ന വില ലഭി
ക്കും. നാം N ന്റെ വില കൂട്ടുകയാണെങ്കില്‍, അത്‌ x എന്ന വേരിയബിളിന്റെ വിലയെ
ബാധിക്കുന്നില്ല. ഈ കോഡിന്റെ ഓട്ടപുട്ട താഴെ കൊടുത്തിരിക്കുന്നു.

x ന്റെ വില change ()
ഫങ്ഷനിലെ ൩ ലേക്ക്‌
ക്രൈറ്റം ചെയ്യഷെടുന്നു.

n= 21
x = 20

ഒരു ഫങ്ഷന്‍, കാള്‍-ബൈ-വാല്യൂ രീതിയില്‍ വിളിച്ചാല്‍ ആര്‍ഗ്യൂമെന്റുകള്‍ക്ക്‌ എന്ത്‌
സംഭവിക്കുമെന്ന്‌ പട്ടിക 10.2 ല്‍ കാണിക്കുന്നു.

ഫങഷ വിളിക്ക്‌ ഥുര്പ്‌ DBE വിളിക്ക്‌ ശേഷ ADBHOG ച്രവര്ത്തനത്തിന്‌ Bleak

പട്ടിക 10.2 908 ബൈ വാലു പ്രവരീത്തനം.
| Cer 10. ഫങ്ഷനുകള്‍

10. കാള്‍ ബൈ റഫറന്‍സ്‌ (പാസ്സ്‌ ബൈ റഫറന്‍സ്‌) രീതി
(Call by reference (Pass by reference) Method)

ഒരു ആര്‍ഗ്യൂമെന്റ്‌ റഫറന്‍സായി അയക്കുമ്പോള്‍ യഥാര്‍ത്ഥ ആര്‍ഗ്യുമെന്റിന്റെ റഫറന്‍സ്‌,
(അഡ്രസ്സ്‌) ഫങ്ഷനിലേക്ക്‌ അയക്കുന്നു. ഇതിന്റെ ഫലമായി യഥാര്‍ത്ഥ ആര്‍ഗ്യുമെന്റിന്‌
അനുവദിച്ച മെമ്മറിസ്ഥലം യഥാക്രമ ആര്‍ഗ്യൂമെന്റും കൂടി പങ്കിടും. അതുകൊണ്ട്‌ വിളിച്ച
ഫങ്ഷനിലെ യഥാക്രമ ആര്‍ഗ്യുമെന്റിന്‌ എന്തെങ്കിലും മാറ്റം സംഭവിച്ചാല്‍ ആ മാറ്റം
ഫങ്ഷനിലെ യഥാര്‍ത്ഥ ആര്‍ഗ്യുമെന്റിലും പ്രതിഫലിപ്പിക്കും. C++ ല്‍ ആര്‍ഗ്യുമെന്റുകള്‍
റഫറന്‍സായി അയക്കുന്നതിന്‌ യഥാക്രമ പരാമീറ്ററായി റഫറന്‍സ്‌ വേരിയബിള്‍ ഉപ
യോഗിക്കുന്നു. ഒരു റഫറന്‍സ്‌ വേരിയബിള്‍ മറ്റൊരു വേരിയബിളിന്റെ അപരനാമമാണ്‌.
ഫങ്ഷന്‍ ഹെഡറിലെ ഡാറ്റ ഇനത്തിനും വേരിയബിളിനും ഇടയില്‍ ഒരു ആമ്പര്‍സാന്റ്‌
ചിഹ്നം (&) ഉപയോഗിക്കുന്നു. മറ്റ്‌ വേരിയബിളുകളെപ്പോലെ റഫറന്‍സ്‌ വേരിയബി
ളുകള്‍ക്ക്‌ പ്രത്യേകമായ മെമ്മറിസ്ഥലം അനുവദിക്കുന്നില്ല. പകരം യഥാര്‍ത്ഥ ആര്‍ഗ്യുമെ
ന്റിന്‌ അനുവദിച്ച മെമ്മറി സ്ഥലം പങ്കിടും. താഴെ കൊടുത്തിരിക്കുന്ന ഫങ്ഷന്റെ യഥാ
ക്രമം പരാമീറ്ററായി റഫറന്‍സ്‌ വേരിയബിള്‍ ഉപയോഗിക്കുന്നു. അതുകൊണ്ട്‌ ഫങ്ഷന്‍
വിളിക്കായി കാള്‍ബൈ റഫറന്‍സ്‌ രീതി പ്രാവര്‍ത്തികമാക്കുന്നു.

void change(int & ൬)

{

2 എന്ന പരാമീറ്റര്‍ ഒരു
0ഫറന്‍സ്‌ വേരിയബിര്‍ ആകുന്നു.
അതിനാല്‍ അതിന്‌ പ്രത്യേകമായ
മെമ്മറി അനുവദിക്കുന്നില്ല.

൩5൩൮1:

cout << "n= " << n << "\n';
}
int main()

{

X OR റഫറന്‍സ്‌ change 0)

int x=20; ഫഞ്്ഷനിലെ N ലേക്ക്‌ 0642900 ചെയ്യ
change (9)? — കെടും. തല്‍ഫലമായി മെമറി പങ്കുവ
cout << "x = " << x;

യ്ക്കുന്നു.
}
change () ലെ ഫങ്ഷന്‍ ഹെഡറിന്‌ മാത്രമേ മാറ്റം ഉള്ളു എന്നത്‌ ശ്രദ്ധിക്കുക. പരാമീ
QE ൩ ന്റെ പ്രഖ്യാപനത്തിലെ & ചിഹ്നം അര്‍ത്ഥമാക്കുന്നത്‌ ഒരു റഫറന്‍സ്‌ വേരിബിളാണ്‌
അത്‌ എന്നാണ്‌. അതുകൊണ്ട്‌ റഫറന്‍സ്‌ അയച്ചു കൊണ്ട്‌ ഫങ്ഷന്‍ വിളിക്കപ്പെടും.
തന്മൂലം X എന്ന നെ change () ഫങ്ഷനിലേക്ക്‌ അയക്കുമ്പോള്‍ ൩ ന്‌ x ന്റെ അധ്ഡസ്‌
കിട്ടുന്നതിനാല്‍ അവ മെമ്മറിസ്ഥലം പങ്കിടും. മറ്റൊരു തരത്തില്‍ പറഞ്ഞാല്‍ വേരിയ
ബിളുകളായ ൨ ഉം 2 ഉം ഒരേ മെമ്മറിസ്ഥലം പരാമര്‍ശിക്കുന്നു. നാം main() ഫങ്ഷ
നില്‍ X എന്ന പേരും change () ഫങ്ഷനില്‍ ൩ എന്ന പേരും ഉപയോഗിച്ച്‌ ഒരേ മെമ്മ
റിസ്ഥലം പരാമര്‍ശിക്കുന്നു. അതുകൊണ്ട്‌ ൩ ന്റെ വിലയില്‍ വ്യത്യാസം വരുത്തുമ്പോള്‍
യഥാര്‍ത്ഥത്തില്‍ x വിലയിലാണ്‌ മാറ്റം ഉണ്ടാകുന്നത്‌. മുകളിലുള്ള പ്രോ്രഗാം പ്രവര്‍ത്തി
ക്കുമ്പോള്‍ നമുക്ക്‌ താഴെ കൊടുത്തിരിക്കുന്ന ഓട്ട്പൂട്ട്‌ ലഭിക്കും.

n= 21

x = 21
ഫങ്ഷന്‍ വിളിക്ക്‌ വേണ്ടി കാള്‍-ബൈ-റഫറന്‍സ്‌ ഉപയോഗിക്കുമ്പോള്‍ ആര്‍ഗ്യുമെന്റു
കള്‍ക്ക്‌ ഉണ്ടാകുന്ന മാറ്റങ്ങള്‍ ടേബിള്‍ 10.3 ല്‍ വര്‍ണ്ണിക്കുന്നു.
പട്ടിക 10.3. കാശ്‌ ബൈ ഫര്‍ദ്‌ പ്രവര്‍ത്തനം

ഫങ്ഷന്‍ വിളിയുടെ ഈ രണ്ട്‌ രീതികള്‍ പട്ടിക 10.4 ല്‍ കാണിച്ചിരിക്കുന്നതു പോലെ
വൃത്യാസപ്പെട്ടിരിക്കുന്നു.

യഥാക്രമ പരാമീറ്ററുകളായി സാധാരണ വേരി
യബിളുകള്‍ ഉപയോരിക്കുന്നു.
സ്ഥിരവിലകള്‍, വേരിയബിളുകള്‍, അല്ലെ
BIG പദപ്രയോഗങ്ങള്‍ എന്നിവ യഥാര്‍ത്ഥ
പരാമീറ്ററുകള്‍ ആയി ഉപയോഗിക്കാം.
യഥാക്രമ പരാമീറററുകളില്‍ ഉണ്ടാക്കുന്ന
വ്യത്യാസങ്ങള്‍ യഥാര്‍ത്ഥ പരാമീറ്ററുകളില്‍
പ്രതിഫലിക്കുന്നില്ല.

യഥാക്രമ ആര്‍ധ്യുമെന്റുകള്‍ക്ക്‌ പ്രത്യേകം
മെമ്മറി ആവശ്യമുണ്ട്‌.

യഥാ്രമ പരാമീറ്ററുകളില്‍ റഫറന്‍സ്‌ cada
ബിളുകള്‍ ഉപയോരിക്കുന്നു.
വേരിയബിളുകള്‍ മാത്രമേ യഥാര്‍ത്ഥ പരാമീ
റുകള്‍ ആകൂ.

യഥാക്രമ പരാമീറ്ററിന്‌ ഉണ്ടാക്കുന്ന വൃത്യാസ
ങ്ങള്‍ യഥാര്‍ത്ഥ പരാമീറ്ററുകളില്‍ പ്രതിഫലി
ക്കും.

യഥാര്‍ത്ഥ ആര്‍ധ്യുമെന്റുകളുടെ മെമ്മറി യഥാ
ക്രമ ആര്‍ധ്യുമെന്റുകള്‍ പങ്കിടുന്നു.

ചിക 70.4. കാശ്‌ ബൈ ലാലു കാള്‍ ബൈ ഫര്‌

കാള്‍ ബൈ റഫറന്‍സ്‌ രീതി വിശദമാക്കുന്നതിന്‌ അനുയോജ്യമായ ഒരു ഉദാഹരണം
നമുക്ക്‌ ചര്‍ച്ച ചെയ്യാം. ഈ പ്രോഗ്രാം main() ഫങ്ഷനിലെ രണ്ട്‌ വേരിയബിളുകളുടെ
വിലകള്‍ പരസ്പരം കൈമാറുന്നതിന്‌ കാള്‍ ബൈ റഫറന്‍സ്‌ രീതിയില്‍ വിളിക്കാന്‍
കഴിയുന്ന ഒരു ഫങ്ഷന്‍ ഉപയോഗിക്കുന്നു. രണ്ട്‌ വേരിയബിളുകളുടെ വിലകള്‍ പര
സ്പരം കൈമാറുന്ന പ്രക്രിയയെ സ്വാപ്പിങ്ങ്‌ എന്ന്‌ പറയുന്നു.

#include <iostream>

using namespace std;

void swap(int & x, int & y)
int t = x;
X= yi
y= t;

ടെ വിലകള്‍ പരസ്പരം കൈമാറുന്നതിന്‌.
| Oe

10. ഫങ്ഷനുകള്‍

}
int main()
{
int m, n;
m = 10;
n = 20;
cout<<"Before swapping m= "<< m <<" and n= "<<n;
swap(m, n);
cout<<"\nAfter swapping m= "<< m <<" and n= "<<n;
return 0;

}

നമുക്ക്‌ പ്രോഗ്രാം 10.8 ലെ സ്റ്റ്റേറ്റ്മെന്റുകളിലൂടെ കടന്നു പോകാം. ആക്ച്ചല്‍ ആര്‍ഗ്യൂ
മെന്റുകളായന ഉം ൩ ഉം ഫങ്ഷനിലേക്ക്‌ റഫന്‍സ്‌ ആയി അയക്കുന്നു. swap () ഫങ്ഷന്‍
ഉള്ളില്‍ : ന്റെയും y യുടേയും വിലകള്‍ പരസ്പരം കൈമാറ്റം ചെയ്യപ്പെടുന്നു. അപ്പോള്‍
യഥാര്‍ത്ഥത്തില്‍ M ലും ൩ ലുമാണ്‌ മാറ്റം നടക്കുന്നത്‌. അതിനാല്‍ മുകളിലത്തെ പ്രോഗ്രാം
കോഡിന്റെ ഓട്ട്പുട്ട്‌,

Before swapping m = 10 and n= 20

After swapping m = 20 and n= 10

യഥാക്രമ ആര്‍ഗ്യുമെന്റിന്‌ പകരം സാധാരണ വേരിയബിള്‍ ഉപയോഗിച്ച്‌ മുകളിലെ
പ്രോഗ്രാമില്‍ മാറ്റം വരുത്തി അതിന്റെ ഓട്ട്പുട്ട്‌ പവചിക്കുക. കമ്പ്യൂട്ടര്‍ ലാബില്‍ ഈ
കോഡ്‌ പ്രവര്‍ത്തിപ്പിച്ച്‌ നിങ്ങളുടെ ഉത്തരം പരിശോധിക്കുക.

സ്വയം പരിശോധിക്കാം

1. CHF പ്രോ്രാമുകളിലെ ഏറ്റവും ഒഴിച്ചു കൂടാനാവാത്ത ഫങ്ഷന്‍ ഏതെന്ന്‌ തിരിച്ചറി
യുക.
ഒരു ഫങ്ഷന്‍ ഹെഡിന്റെ മുന്ന്‌ ഘടകങ്ങള്‍ പട്ടികക്ചെടുത്തുക.
ഫങ്ഷന്‍ ദ്പ്രോട്ടോടൈര്‍്‌ എന്നാല്‍ എന്ത്‌?
വിളിക്കുന്ന ഫങ്ഷനില്‍ നിന്നും വിളിച്ച ഫങ്ഷനിലേക്ക്‌ ഡാറ്റാ അയക്കുന്നതിന്‌ ഏത്‌
ഘടകമാണ്‌ ഉപയോരിക്കുന്നത്‌.

5. CH++ ല്‍ ഉപയോശിക്കുന്ന രണ്ട്‌ പരാമീറ്റര്‍ ക്രമാറ്റരീതികള്‍ ഏതൊക്കെയാണ്‌?

10.5 വേരിയബിളുകളുടദേയും ഫങ്ഷനുകളുടേയും വ്യാപ്തിയും ജീവനവും
(Scope and life of variables and functions)

ഒന്നിലധികം ഫങ്ഷനുകള്‍ അടങ്ങിയ C++ പ്രോഗ്രാം നാം ചര്‍ച്ച ചെയ്തു. മുന്‍ നിര്‍വചിത
ഫങ്ഷനുകള്‍ അതിന്‌ അനുബന്ധമായ ഹെഡര്‍ ഫയലുകള്‍ ഉള്‍പ്പെടുത്തിയാണ്‌ പ്രോഗ്രാ
മില്‍ ഉപയോഗിക്കുന്നത്‌. ഉപയോക്തൃ നിര്‍മ്മിത ഫങ്ഷനുകള്‍ main () ഫങ്ഷന്‍ മുമ്പോ
ശേഷമോ നിര്‍വ്വചിക്കപ്പെടുന്നു. ഫങ്ഷനുകള്‍ നിര്‍വ്വചിക്കുമ്പോള്‍ ഫങ്ഷന്‍ പ്രോട്ടോ
ടൈപ്പിനുള്ള പ്രസക്തി നാം കണ്ടു കഴിഞ്ഞു. വേരിയബിളുകള്‍ ഫങ്ഷന്‍ ചകട്ടക്കൂടിലും
ആര്‍ഗ്യൂമെന്റുകളായും നാം ഉപയോഗിച്ചു. ഇനി നമുക്ക്‌ വേരിയബിളുകളുടേയും ഫങ്ഷ
നുകളുടേയും പ്രോഗ്രാമിലുള്ള ലഭൃതയും പ്രാപൃതയും ചര്‍ച്ച ചെയ്യാം. ഒരു പ്രോഗ്രാ
മില്‍ ലോക്കല്‍ വേരിയബിളുകളുടെ പ്രാപ്യത പ്രോഗ്രാം 10.9 വിവരിക്കുന്നു.
Yo ജീവനവും വിവരിക്കുന്നതിന്‌.

#include <iostream>
using namespace std;
int cube(int n)

{

ഉത്‌ തെറ്റ്‌ ആകുന്നു.
എന്തുകൊണ്ടെന്നാല്‍ വേരിയബിള്‍
X, Iain() ഫങ്ഷനിലാണ്‌ പ്രഖ്യാപിച്ചത്‌. അതു
കൊണ്ട്‌ AF ഫങ്ഷനില്‍ അത്‌
ഉപയോഗിക്കാന്‍ Ale).

int cb;
cout<< "The value of x passed to n is " << x;
ch =n* n* nj;

return cb;

}
int main()

{

int x, result;
cout << "Enter a number

ഉത്‌ തെറ്റ്‌ ആകുന്നു
എന്തുകൊണ്ടെന്നാല്‍ ch എന്ന

We
7

cin >> x; വേരിയബിള്‍ cube () എന്ന ഫങ്ഷനിലാണ്‌
result = cube(x); പ്രഖ്യാപിച്ചത്‌. അതുകൊണ്്‌ മറ്റ്‌ ഫങ്ഷനില്‍
cout << "Cube = " << result; അത്‌ ഉപയോഗിക്കാന്‍ കഴിയില്ല.
cout << "\nCube = "<<cb; ന

}

നാം പ്രോഗ്രാം കമ്പയില്‍ ചെയ്യുമ്പോള്‍, കോളാട്ടില്‍ കാണിച്ചിരിക്കുന്ന കാരണങ്ങ
ളാല്‍ രണ്ട്‌ തെറ്റുകള്‍ ഉണ്ടാകും. വേരിയബിളുകളുടേയും ഫങ്ഷനുകളുടേയും ലഭ്യത,
പ്രാപ്യത എന്നീ ആശയത്തെ വ്യാപ്തി, ജീവനം, എന്നീ പദങ്ങള്‍ കൊണ്ട്‌ സൂചിപ്പിക്കു
ന്നു. പ്രോഗ്രാമിന്റെ ഏത്‌ ഭാഗത്താണോ ഒരു വേരിയബിള്‍ ഉപയോഗിക്കുന്നത്‌ അതാണ്‌
അതിന്റെ വ്യാപ്തി (Scope) മുകളിലത്തെ പ്രോഗ്രാമില്‍ വേരിയബിള്‍ cb യുടെ വ്യാപ്തി
ഫങ്ഷന്‍ Cube () ല്‍ ആകുന്നു എന്തുകൊണ്ടെന്നാല്‍ അത്‌ ആ ഫങ്ഷനിലാണ്‌ പ്രഖ്യാ
പിച്ചത്‌. അതിനാല്‍ ഈ വേരിയബിള്‍ ആ ഫങ്ഷന്‍ പുറത്ത്‌ ഉപയോഗിക്കാന്‍ കഴിയില്ല.
ഈ വ്യാപ്തി ലോക്കല്‍ വ്യാപ്തി എന്ന്‌ അറിയപ്പെടുന്നു. ഒരു ഫങ്ഷന്റെ പ്രവര്‍ത്തനം
പൂര്‍ത്തീകരിക്കുമ്പോള്‍ ആ ഫങ്ഷന്റെ ഉള്ളിലെ എല്ലാ വേരിയബിളുകള്‍ക്കും അനുവ
ദിച്ച മെമ്മറി സ്വതന്ത്രമാക്കുന്നു. മറ്റൊരു തരത്തില്‍ പറയുമ്പോള്‍ ഒരു ഫങ്ഷന്‌ ഉള്ളില്‍
പ്രഖ്യാപിച്ച വേരിയബിളുകളുടെ സമയം ആ ഫങ്ഷനിലെ അവസാനത്തെ നിര്‍ദേശം
പ്രവര്‍ത്തിക്കുന്നതോട്‌ കൂടി അവസാനിക്കുന്നു. അതുകൊണ്ട്‌ main() ഫങ്ഷനില്‍ n
എന്ന വേരിയബിള്‍ ഉപയോഗിക്കുമ്പോള്‍ അതില്‍ നിന്നും വിളിക്കുന്ന ഫങ്ഷനിലെ n
എന്ന ആര്‍ഗ്യുമെന്റില്‍ നിന്നും വിളിക്കപ്പെട്ട ഫങ്ഷനിലെ വേരിയബിള്‍ നല്‍ നിന്നും
അത്‌ വ്ൃത്യസ്തമായിരിക്കും. ഒരു ഫങ്ഷന്‍ ഉള്ളില്‍ പ്രഖ്യാപിച്ച വേരിയബിളുകള്‍ക്കും
യഥാക്രമ പരാമീറ്ററുകള്‍ക്കും ലോക്കല്‍ വ്യാപ്തി ഉണ്ടായിരിക്കും.

വേരിയബിളിനെ പോലെ തന്നെ ഫങ്ഷനുകള്‍ക്കും വ്യാപ്തി ഉണ്ട്‌. എവിടെ ആണോ
ഒരു ഫങ്ഷന്‍ പ്രഖ്യാപിച്ചിരിക്കുന്നത്‌ അവിടെയാണ്‌ ആ ഫങ്ഷന്‍ ഉപയോഗിക്കാന്‍ കഴി
യുക. അതായത്‌ ഫങ്ഷന്‍ ലോക്കല്‍ വ്യാപ്തി ഉണ്ടെന്ന്‌ പറയാം. അത്‌ main () ഫങ്ഷന്‍
മുമ്പേ മറ്റ്‌ ഫങ്ഷനുകള്‍ക്ക്‌ പുറമെയോ പ്രഖ്യാപിച്ചാല്‍ ആ ഫങ്ഷന്റെ വ്യാപ്തി പ്രോഗ്ഗാം
മുഴുവന്‍ ആയിരിക്കും. അതായത്‌ പ്രോഗ്രാമിലെ ഏത്‌ സ്ഥലത്തും ഫങ്ങ്ഷന്‍ ഉപയോഗി
ക്കാന്‍ കഴിയും. ഈ വ്യാപ്തി ഗ്ലോബല്‍ വ്യാപ്തി എന്ന്‌ അറിയപ്പെടുന്നു. വേരിയബിളു
കളും ഇപ്രകാരം ഗ്ലോബല്‍ വ്യാപ്തിയില്‍ പ്രഖ്യാപിക്കാന്‍ കഴിയും. അങ്ങനെയുള്ള പ്രഖ്യാ
10. ഫങ്ഷനുകള്‍

പനങ്ങള്‍ പ്രോഗ്രാമിലെ എല്ലാ ഫങ്ഷനുകള്‍ക്കും പുറത്ത്‌ ആയിരിക്കും. ഒരു പ്രോഗാമിലെ
വേരിയബിളുകളുടേയും ഫങ്ഷനുകളുടേയും വ്യാപ്തിയും, ജീവനവും സംബന്ധിച്ച്‌ കൂടു
തല്‍ വ്ൃക്തത കിട്ടുവാന്‍ പ്രോ്രഗാം 10.10 നോക്കുക.

വ്യാപ്തിയും ജീവനവും വിവരിക്കുന്നതിന്‌

#include <iostream>
using namespace std;

int ch; //global variable

void test()//global function since defined above other functions

{
int cube(int n);
cbh=cube (x); //Invalid call.
cout<<cb;

}

int main()

{

// beginning of main()

int x=5; //local variable

test(); //valid call since test()
cbh=cube(x); //Invalid call. cube()
cout<<cb;

}

//Tt is a local function
x is local to main()

function

is a global function
is local to test()

int cube(int n)//Argument n is local variable

int val= n*n*n;
return val;

വ്യാപ്തിയും
ജീവനും
© ഒരു ഫങ്ഷന്‍ അല്ലെങ്കില്‍ പ്രസ്താവനക
ളുടെ കൂട്ടത്തിന്‌ ഉള്ളില്‍ പ്രഖ്യാപിക്കുന്നു.
© ൫൫ ഫങ്ഷന്‍ അല്ലെങ്കില്‍ ബ്ലോക്കില്‍
മാത്രമേ ലഭ്യമാകൂ.
ഫിങ്ഷന്‍ അല്ലെങ്കില്‍ ബ്ലോക്ക്‌ പ്രവര്‍ത്തി
ക്കുമ്പോള്‍ മെമറി അനുവദിക്കുകയും
BOIS MRE WI

വേരിയബിളുകള്‍

ഫങ്ഷന്റെയോ
പ്രവര്‍ത്തനം പൂര്‍ത്തിയാകുമ്പോള്‍ അവ
സ്വത്ന്ത്രമാക്കുക്യും ചെയ്യുന്നു.

ഒരു കൂട്ടം പ്രസ്താവനകര്‍ക്ക്‌ ഉള്ളിലോ
പിങ്ഷന്‌ ഉള്ളിലോ പ്രഖ്യാപിക്കുകയും
വിളിക്കുന്ന ഫങ്ഷന്‌ ശേഷം നിര്‍വ്വചിക്കു
കയും ചെയ്യുന്നു.

© ആ ഫങ്ഷന്‍ അല്ലെങ്കില്‍ ബ്ലോക്കിന്‌
ഉള്ളില്‍ മാത്രേ പ്രാപ്യമാകൂ.

//val is local variable

© AMA) ഫങ്ഷന്റെയും പുറമെ പ്രഖ്യാപിക്കു
ന്നു.
പ്രോഗ്രാമിലെ എല്ലാ ഫങ്ഷനുകര്‍ക്കും
ലഭ്യമാണ്‌.
പ്രോഗ്രാമിന്റെ പ്രവര്‍ത്തനം തുടങ്ങുന്ന
തിന്‌ തൊട്ട്‌ മുന്‍പേ മെറി അനുവദിക്കു
കയും Galo അവസാനിക്കുമ്പോള്‍
അവ സ്ൃത്ര്ത്രമാവുകയും ചെയ്യുന്നു.
AT എല്ലാ ഫങ്ഷനുകളുടേയും വെളി
യില്‍ പ്രഖ്യാപിക്കുകയോ നിര്‍വൃവചിക്കു
കയോ ചെയ്യുന്നു.

© &(്രാസ്രാമിലെ എല്ലാ ഫങ്ഷനുകള്‍ക്കും
പ്രാപ്യമാണ്‌.

CSM 10. 5 : വേരിധബിളുക്കുടേയും ഫങ്ങ്ഷനുക്ളുമ്മും ല്പ്തിയും ജീവനും

പി

തന്നിരിക്കുന്ന കാള്‍ ഓട്ടുകള്‍ ഫങ്ഷനുകളുടെ വ്യാപ്തിയും ജീവനവും വിശദമാമഴുന്നു.
ഒരു ഫങ്ഷന്‍ മറ്റൊരു ഫങ്ഷന്റെ ചട്ടക്കുടിനുള്ളില്‍ പ്രഖ്യാപിക്കുകയാണെങ്കില്‍ അതിനെ
ലോക്കല്‍ ഫങ്ഷന്‍ എന്ന്‌ വിളിക്കുന്നു. അത്‌ ആ ഫങ്ഷന്‍ ഉള്ളില്‍ മാത്രമേ ഉപയോഗി
ക്കാന്‍ കഴിയൂ. ഒരു ഫങ്ഷന്‍ മറ്റെല്ലാ ഫങ്ഷനുകളുടേയും ചട്ടക്കൂടിന്‌ പുറമെ പ്രഖ്യാപി
ച്ചാല്‍ അതിനെ ഗ്ലോബല്‍ ഫങ്ഷന്‍ എന്ന്‌ വിളിക്കുന്നു. ഒരു ഗ്ലോബല്‍ ഫങ്ഷന്‍ പ്രോഗ്രാ
മില്‍ ഉടനീളം ഉപയോഗിക്കാന്‍ കഴിയും. മറ്റൊരു തരത്തില്‍ പറഞ്ഞാല്‍ ഒരു ഗ്ലോബല്‍
ഫങ്ഷന്റെ വ്യാപ്തി പ്രോ്രഗാം മുഴുവനാകുമ്പോള്‍ ലോക്കല്‍ ഫങ്ഷന്റെ വ്യാപ്തി അത്‌
പ്രഖ്യാപിച്ചിരിക്കുന്ന ഫങ്ഷനില്‍ മാത്രം ആയിരിക്കും. വേരിയബിളുകളുടേയും ഫങ്ഷ
നുകളുടേയും വ്യാപ്തിയും ജീവനവും ടേബിള്‍ 10.6 ല്‍ സംഗ്രഹിച്ചിരിക്കുന്നു.

10.6 സ്വയം ആവര്‍ത്തിക്കുന്ന ഫങ്ഷനുകള്‍ (1%൦-ബട്ഴം Function)

സാധാരണയായി ഒരു ഫങ്ഷന്‍ മറ്റൊരു ഫങ്ഷനെയാണ്‌ വിളിക്കുന്നത്‌. ഇനി നമുക്ക്‌
അതിനെ തന്നെ വിളിക്കുന്ന ഒരു ഫങ്ഷന്‍ നിര്‍വചിക്കാം. ഒരു ഫങ്ഷന്‍ ആ ഫങ്ഷനെ
തന്നെ വിളിക്കുന്ന പ്രവര്‍ത്തനത്തെ സ്വയം ആവര്‍ത്തനം എന്ന്‌ അറിയപ്പെടുന്നു. ആ
ഫങ്ഷനെ സ്വയം ആവര്‍ത്തിക്കുന്ന ഫങ്ഷന്‍ എന്നും പറയുന്നു. സങ്കീര്‍ണ്ണമായ ചില
അല്‍ഗോരിതങ്ങള്‍ സ്വയം ആവര്‍ത്തന രീതി ഉപയോഗിച്ച്‌ വളരെ എളുപ്പത്തില്‍ ലഘുക
രിക്കാം.

int functionl()

int n = functionl(); //calling itself

ഒരു സ്വയം ആവര്‍ത്തി ഫങ്ഷന്റെ മാതൃക താഴെ പറയുന്നത്‌ പോലെ ആകും.
സ്വയം ആവര്‍ത്തിത ഫങ്ഷനുകളില്‍ സാധാരണയായി ചില ഉപാധിയെ അടിസ്ഥാനമാ
ക്കിയായിരിക്കും ഫങ്ഷന്‍ വിളിക്കുന്നത്‌. താഴെ കൊടുത്തിരിക്കുന്ന സ്വയം ആവര്‍ത്തിത
ഫങ്ഷനിലൂടെ ഒരു സംഖ്യയുടെ ഫാക്ടോറിയല്‍ കണ്ടുപിടിക്കാം. നെഗറ്റീവ്‌ സംഖ്യ
യുടെ ഫാക്ടോറിയല്‍ നിര്‍വ്വചിച്ചിട്ടില്ല എന്നത്‌ ശ്രദ്ധിക്കുക. അതുകൊണ്ട്‌ n ന്‌ പൂജ്യമോ
പോസിറ്റീവ്‌ സംഖ്യയോ കൊടുക്കാന്‍ കഴിയും.
int factorial(int n)
{
if((n==1) | | (n==0))
return 1;
else if (n>1)
return (n * factorial(n-1));
else
return 0;
| ക്ര 10. ഫങ്ഷനുകള്‍

ഉപയോക്താവ്‌ ഈ ഫങ്ഷന്‍ വിളിക്കുമ്പോള്‍ അത്‌ എങ്ങനെ പ്രവര്‍ത്തിക്കുമെന്ന്‌ നമുക്ക്‌
ചര്‍ച്ച ചെയ്യാം.

£ = factorial (3):

ഫങ്ഷന്‍ ആദ്യത്തെ തവണ വിളിക്കുമ്പോള്‍, n വില 3 ആകുന്നു. if പ്രസ്താവനയിലെ
വ്യവസ്ഥ വിലയിരുത്തുമ്പോള്‍ വില തെറ്റ്‌ എന്ന്‌ കണക്കാക്കുന്നു. അതുകൊണ്ട്‌ else
ചട്ടക്കൂട്‌ പ്രവര്‍ത്തിക്കും. ൨ ന്റെ വില 3 ആകുമ്പോള്‍ else ബ്ലോക്കിലെ നിര്‍ദ്ദേശം

return (3 * factorial (3-1) ) ൦ എന്ന്‌ ആകും.

അത്‌ ലഘൂകരിക്കുമ്പോള്‍ return (3 * factorial(2));......... (), 3 *
factorial (2), കണ്ടുപിടിക്കുന്നതിന്‌ വേണ്ടി factorial (2) ന്റെ വില കണ്ടുപിടി
ക്കേണ്ടതാവശ്യമാണ്‌. Factorial () എന്ന ഫങ്ഷന്‍ വീണ്ടും 2 എന്ന ആര്‍ഗ്യുമെന്റ്‌
ഉപയോഗിച്ച്‌ വിളിക്കുന്നു. ഫങ്ഷന്‍ അതേ ഫങ്ഷനുള്ളില്‍ തന്നെ വിളിക്കുന്നു. ൩
എന്ന പരാമീറ്ററിന്റെ വിലയായ 2 കൊണ്ട്‌ factorial () ഫങ്ഷന്‍ പ്രവര്‍ത്തിക്കുമ്പോള്‍
if ബ്ലോക്കിലെ വ്യവസ്ഥ തെറ്റ്‌ ആയി കണക്കാക്കുന്നു. അതുകൊണ്ട്‌ else ബ്ലോക്ക്‌ മാ
ത്രമേ പ്രവര്‍ത്തിക്കൂ. else ബ്ലോക്കിലെ നിര്‍ദ്ദേശം retum (2 * factorial(2-1)); എന്നാകുന്നു.

ഇത്‌ ലഘൂകരിക്കുമ്പോള്‍ return (2 * ടിപി (1)... (it)

ഇതിന്റെ തിരിച്ചു നല്‍കുന്ന വില കണ്ടുപിടിക്കുന്നതിനായി അത്‌ ൩ എന്ന പരാമീറ്ററിന്റെ
വിലയായി 1 നല്‍കിക്കൊണ്ട്‌ വീണ്ടും Factorial () ഫങ്ഷന്‍ വിളിക്കുന്നു. ഇപ്പോള്‍
17 സ്റ്റേറ്റ്മെന്റിന്റെ വ്യവസ്ഥ ശരി (true) ആയി കണക്കാക്കുന്നതിനാല്‍ facto-
219 (1) എന്ന ഫങ്ഷന്‍ കാളിന്റെ വില ആയി 1 എന്ന്‌ തിരിച്ചു നല്‍കും. ഇപ്പോള്‍
പ്രോഗ്രാമിന്‌ (ii) എന്ന്‌ രേഖപ്പെടുത്തിയ നിര്‍ദ്ദേശത്തിന്റെ തിരിച്ചു നല്‍കുന്ന വില
കണ്ടുപിടിക്കാന്‍ കഴിയും. നിര്‍ദ്ദേശം (ii). return 2*1 എന്ന്‌ ആകും. അത്‌ return
2 ന്‌ തുല്യമായിരിക്കും.

അതായത്‌ factorial (2) എന്ന ഫങ്ഷന്‍ തിരിച്ചു നല്‍കിയ 2 എന്ന വില (i) എന്ന്‌
രേഖപ്പെടുത്തിയ നിര്‍ദ്ദേശത്തിലേക്ക്‌ നല്‍കുന്നു. അതിനാല്‍ നിര്‍ദ്ദേശം (i) return
3 2 2 എന്ന്‌ ആകുന്നു. അതിന്‌ സമമാണ്‌ return 6;

ഇപ്പോള്‍ factorial (3) എന്ന ഫങ്ഷന്‍ വിളിയുടെ തിരിച്ചു നല്‍കുന്ന വിലയായി 6
ലഭിക്കുന്നു.

£ = factorial (3) എന്ന നിര്‍ദ്ദേശത്തിന്റെ പ്രവര്‍ത്തനം ചിത്രം 10.4 ല്‍ സംഗ്രഹി
ക്കുന്നു.

factorial (3) എന്ന ഫങ്ഷന്‍ വിളിയുടെ പ്രവര്‍ത്തനം 23൦൦2൧4൭. (2) എന്ന ഫങ്‌
ഷന്റെ വില ലഭിക്കുന്നത്‌ വരെ താമസിക്കുന്നു. ഫങ്ഷന്റെ പ്രവര്‍ത്തനം factorial
(1) ന്റെ വില കിട്ടുന്നത്‌ വരെ താമസിക്കും. ഒരിക്കല്‍ ഈ ഫങ്ഷന്‍ കാളിന്‌ 1 എന്ന
തിരിച്ച്‌ നല്‍കുന്ന വിലയായി ലഭിച്ചാല്‍ അത്‌ വിലയെ മുന്‍പ്‌ നടന്ന ഫങ്ഷന്‍ വിളികളി
ലേക്ക്‌ തിരികെ നല്‍കും. ഫങ്ഷന്റെ ഓരോ വിളിയിലും ആര്‍ഗ്യുമെന്റുകള്‍ക്കും തിരിച്ച്‌
നല്‍കുന്ന വിലകള്‍ക്കും എന്ത്‌ സംഭവിക്കുന്നു എന്നത്‌ ചിത്രം 10.4 ല്‍ കാണിക്കുന്നു.
eon

factorial (3) factorial (2) factorial (1)

int factorial(int n) int factorial(int n) int factorial(int n)
/ Shere value of ‘n’is 3 / Shere value of ‘nis 2 / Chere value of ‘n’is 1

{ { {

if (3 <= 1) if (2 <= 1) if (1 <= 1)

return (1); return (1)7 return (27
else else
return (3*factorial 3-2): return (2*factorial (2-1));

} }

ചിത്രം 10. 4; ഒരു RY ആവരീത്തിത ഫങ്ങാഷത വിളിയുടെ നിയ്യത്തണ owl

ഒരു ന്യൂനസംഖ്യ ആര്‍ഗ്യുമെന്റ്‌ ആയി factorial () എന്ന ഫങ്ഷന്‍ വിളിക്കുമ്പോള്‍
ഫങ്ങ്ഷന്‍ പൂജ്യം തിരികെ നല്‍കും എന്നത്‌ ശ്രദ്ധിക്കുക. ഒരു നെഗറ്റീവ്‌ സംഖ്യയുടെ
ഫാക്ടോറിയല്‍ പൂജ്യം ആണെന്ന്‌ ഇതിന്‌ അര്‍ത്ഥമില്ല. ഗണിതത്തില്‍ ഒരു ന്യൂനസംഖ്യ
യുടെ ഫാക്ടോറിയല്‍ നിര്‍വച്ചിച്ചിട്ടില്ല. ഉദാഹരണത്തിന്‌ Factorial (-3) എന്ന ഫങ്ഷന്‍
വിളി അസാധുവായ വിളിയാണെന്നത്‌ വിളിക്കുന്ന ഫങ്ഷനില്‍ രേഖപ്പെടുത്തും.

factorial () എന്ന ഫങ്ഷന്‍ 5 എന്ന വില ഉപയോഗിച്ച്‌ വിളിക്കുമ്പോള്‍ ഉണ്ടാകുന്ന
പ്രവര്‍ത്തനം ചിത്രം 10.5 ൪ കാണിക്കുന്നു.

factorial (5)=5 * factorial (4)
4 * factorial (3)
3 * factorial (2)

2 * factorial (1)

L. 1 * factorial (0)

ചിത്രം 10.5: factorial (5) മ്മി mywo ആവര്‍ത്മര പ്രവര്‍ത്തനം

ഒരു സംഖ്യയുടെ ഫാക്ടോറിയല്‍ കണ്ടുപിടിക്കുന്നതിനായി സ്വയം ആവര്‍ത്തിത ഫങ്ഷ
നല്ലാതെ താഴെ കൊടുക്കുന്ന ഫങ്ഷനും ഉപയോഗിക്കാം.
int factorial(int n)

{
int f=1;
/* The formula nx(n-1)x(n-2)x ... x2x1 is appliled
instead of 1 x 2 x 3x...x(n-1)xn to find the factorial
*
/
for(int i=n; i>1; i--)
f *= i;
return f;
}

ഈ രണ്ട്‌ ഫങ്ഷനുകള്‍ തമ്മിലുള്ള വ്യത്യാസം നമുക്ക്‌ താരതമ്യം ചെയ്യാം.
| ers) 10. ഫങ്ഷനുകള്‍

റിക്കര്‍ഷന്‍ ഉപയോഗിക്കുന്ന എല്ലാ ഫങ്ഷനുകളും റിക്കര്‍ഷന്‍ ഉപയോഗിക്കാതെയും
എഴുതാം. പിന്നെ എന്തിന്‌ വേണ്ടിയാണ്‌ നാം ആവര്‍ത്തനം ഉപയോഗിക്കുന്നത്‌? ചില
ച്രോഠ്രഗാമര്‍മാര്‍ക്ക്‌ ആവര്‍ത്തനം ഉപയോഗിക്കുന്നതാണ്‌ മറ്റെതിനേക്കാള്‍ വളരെ
ലളിതമാണ്‌. എല്ലാ ഫങ്ഷനുകളിലും സ്വയം ആവര്‍ത്തന രീതി ഉപയോഗിക്കാന്‍ കഴിയില്ല.
ഒരു ഫങ്ഷനില്‍ സ്വയം ആവര്‍ത്തനം നടത്തുവാന്‍ കഴിയുമോ ഇല്ലയോ എന്ന്‌ എങ്ങനെ
നമുക്ക്‌ മനസ്സിലാക്കാം. ഒരു ഫങ്ഷനകത്ത്‌ അതേ ഫങ്ഷന്റെ തന്നെ ഓട്ട്പൂട്ടില്‍ ചില
പ്രവര്‍ത്തനങ്ങള്‍ നടത്തുവാന്‍ നമുക്ക്‌ കഴിയുമെങ്കില്‍ അത്തരം ഫങ്ഷനില്‍ സ്വയം
ആവര്‍ത്തനം ഉപയോഗിക്കാം. ഉദാഹരണത്തിന്‌ ആദ്യത്തെ ൩ എണ്ണല്‍ സംഖ്യകളുടെ
തുക കാണുന്നതിന്‌ നമുക്ക്‌ SuM (൩) എന്ന ഫങ്ഷന്‍ താഴെ കൊടുത്തിരിക്കുന്നതു പോലെ
എഴുതുവാന്‍ കഴിയും.
sum(n) = n + sum(n-1)

തന്നിരിക്കുന്ന ഒരു ദശ സംഖ്യയെ അതിന്‌ തുല്യമായ ബൈനറി സംഖ്യയാക്കി മാറ്റുന്ന
പ്രോ്രഗാം നമുക്ക്‌ ചര്‍ച്ച ചെയ്യാം. അധ്യായം 2 ല്‍ പരിവര്‍ത്തന രീതി നാം ചര്‍ച്ച ചെയ്തു.

ഒ തുല്യമായ ബൈനറി സംഖ്യ പ്രദര്‍രിഷിക്കുന്നതിന്‌

#include<iostream>
using namespace std;
void Binary(int);
int main()

{

int decimal;

cout<<"Enter an integer number: ";
cin>>decimal;

cout<<"Binary equivalent of "<<decimal<<" is "7
Binary (decimal) ;

return 0;
}
void Binary(int n) //Definition of a recursive function
{
if (n>1)
Binary (൩/2)?
cout<<n%2;

}
പ്രോഗ്രാം 10.11 ന്റെ ഒരു മാതൃക ഓട്ട്പുട്ട്‌ താഴെ കൊടുത്തിരിക്കുന്നു.

Enter an integer number: 19 ചെറിയ സംഖ്യ input നല്‍കി കൊണ്ട്‌
പ്രോഗ്രാമിന്റെ പ്രവര്‍ത്തനം വിശദീകരിക്കുക.
Binary equivalent of 19 is 10011

10.7 ഹെഡര്‍ ഫയലുകളുടെ നിര്‍മ്മാണം

ഇതുവരെ നാം ചര്‍ച്ച ചെയ്ത എല്ലാ പ്രോഗാമുകളുടേയും തുടക്കത്തില്‍ #include
<iostream> എന്നത്‌ എല്ലായ്പ്പോഴും ഉപയോഗിക്കുന്നു എന്ന്‌ നമുക്കറിയാം. നാം
ഈ പ്രസ്താവന ഉപയോഗിക്കുന്നത്‌ എന്തിന്‌ വേണ്ടിയാണ്‌?
പി

യഥാര്‍ത്ഥത്തില്‍ C++ പ്രോ്രഗാമുകളില്‍ നാം ഉപയോഗിക്കുന്ന ധാരാളം വേരിയബിളുക
ളുടേയും ഒബ്ജക്ടുകളുടേയും പ്രഖ്യാപനങ്ങളും നിര്‍വചനങ്ങളും iostream എന്ന
ഹെഡര്‍ ഫയലില്‍ അടങ്ങിയിരിക്കുന്നു. പ്രോഗ്രാമില്‍ ഉപയോഗിക്കുന്ന cin, cout
എന്നി ഒബ്ജക്ടുകള്‍ ഈ ഹെഡല്‍ ഫയലിലാണ്‌ പ്രഖ്യാപിച്ചിരിക്കുന്നത്‌. അതിനാല്‍
ഒരു പ്രോ്രഗാമില്‍ ഈ ഹെഡര്‍ ഫയല്‍ ഉള്‍പ്പെടുത്തുമ്പോള്‍ ഒബ്ജക്ടുകളുടെയും anes
ഷനുകളുടെയും നിര്‍വ്വചനങ്ങളും പ്രഖ്യാപനങ്ങളും കമ്പയിലറിന്‌ കമ്പയിലേഷന്‍ സമ
യത്ത്‌ ലഭ്യമാകും. ഈ ഫങ്ഷനുകകുട്ടെയും ഒബ്ജക്ടുകളുക്ടയും (്രവര്ത്തിക്കാവുനാ
കോഡ്‌ പ്രോുഗ്രാമുമായ? ബന്ധിച്ചിക്കുകയും അവ എപ്പോശി എവിടെ വച്ച്‌ വിളിക്കുമ്വോളും
അവ പ്രവരിത്തിക്കും. നമ്മുടെ സ്വന്തം വേരിയബിളുകളും ഫങ്ഷനുകളും ഉള്‍ക്കൊള്ളുന്ന
ഹെഡല്‍ ഫയലുകള്‍ ഇതുപോലെ നമുക്ക്‌ നിര്‍മ്മിക്കാന്‍ കഴിയും. ഒരു സംഖ്യയുടെ
ഫാക്ടോറിയല്‍ കാണുന്നതിനുള്ള ഒരു ഫങ്ഷന്‍ എഴുതി, ആ ഫങ്ഷന്‍ പല പ്രോഗ്രാ
മിലും ഉപയോഗിക്കണം എന്ന്‌ കരുതുക. എല്ലാ പ്രോഗ്രാമുകളിലും ഫാക്ടോറിയല്‍
ഫങ്ഷന്‍ നിര്‍വചിക്കുന്നതിന്‌ പകരം ആ ഫങ്ഷനെ ഒരു ഹെഡര്‍ ഫയലില്‍ സ്ഥാപി
ക്കുകയും ഈ ഹെഡര്‍ ഫയല്‍ എല്ലാ പ്രോഗ്രാമിലും ഉള്‍പ്പെടുത്തുകയും ചെയ്യാം.

നമുക്ക്‌ ഒരു ഹെഡര്‍ ഫയല്‍ എങ്ങനെ നിര്‍മ്മിക്കാന്‍ കഴിയും എന്നത്‌ താഴെ കൊടുത്തി
രിക്കുന്ന ഉദാഹരണം കാണിക്കുന്നു. ഏതെങ്കിലും IDE എഡിറ്ററില്‍ താഴെ കൊടുത്തി
രിക്കുന്ന പ്രോഗ്രാം കൊടുക്കുക.

int factorial(int n)
{
int f=1;
for (int i=l; i<=n; i++)
f *= i7
return 27
}

ഈ ഫയല്‍ factorial .൨ എന്ന പേരില്‍ സേവ്‌ ചെയ്യുകയും അതിനുശേഷം താഴെ
കൊടുത്തിരിക്കുന്നത്‌ പോലെ ഒരു C++ പ്രോഗ്രാം നിര്‍മിക്കുകയും ചെയ്യുക.

#include <iostream>
#include "factorial.h"//includes user-defined headerfile
using namespace std;

int main()
10. ഫങ്ഷനുകള്‍

int n;

cout<<"Enter a number : ";

cin >> n;

cout<<"Factorial : " << factorial(n);

}
നമുക്ക്‌ പ്രോ്രഗാം വിജയകരമായി കമ്പയില്‍ ചെയ്യുവാനും പ്രവര്‍ത്തിക്കുവാനും കഴിയും.

#include “factorial.” എന്ന നിര്‍ദ്ദേശം ആന്‍ഗുലാര്‍ ബ്രാക്കറ്റുകള്‍ക്ക്‌ (<, >) പകരം
ഡബിള്‍ ക്വോട്ട്സ്‌ ആണ്‌ ഉപയോഗിച്ചത്‌ എന്നത്‌ ശ്രദ്ധിക്കുക. ഇത്‌ എന്തുകൊണ്ടെന്നാല്‍
ഒരു ഫയല്‍ ഉള്‍പ്പെടുത്തുന്നതിനായി നാം ആന്‍കുലാര്‍ ബ്രാക്കറ്റുകള്‍ (< >) ഉപയോഗി
ക്കുമ്പോള്‍ കമ്പയില്‍ അതിനെ include ഡയറക്ടറിയില്‍ പരതും. എന്നാല്‍ നാം ഡബിള്‍
ക്വോട്സ്‌ ഉയോഗിക്കുമ്പോള്‍ അതിനെ ഇപ്പോള്‍ പ്രവര്‍ത്തിക്കുന്ന ഡയറക്ടറിയില്‍ മാത്രമേ
പരതുകയുള്ളു. സാധാരണയായി factorial-h എന്ന ഫയല്‍ സേവ്‌ ചെയ്യുന്നത്‌ C++
പ്രോഗ്രാം സേവ്‌ ചെയ്യപ്പെട്ട അതേ ഡയറക്ടറിയിലായിരിക്കും. അതുകൊണ്ട്‌ ഫയല്‍ ഉള്‍
പ്പെടുത്താന്‍ നാം ഉദ്ധരണി ഉപയോഗിക്കണം. ഏതെങ്കിലും ഒരു C++ പ്രോ്രഗാമിന്‌ ഫാക്ടോ
റിയല്‍ ഫങ്ങീഷന്‍ ഉപയോഗിക്കേണ്ട ആവശ്യം ഉണ്ടെങ്കില്‍ #include’ factorial.h”
എന്ന സ്റ്റേറ്റ്മെന്റ്‌ പ്രോഗ്രാമില്‍ ഉള്‍പ്പെടുത്തേണ്ട ആവശ്യം മാത്രമേ ഉള്ളൂ. ഇതേ രീതി
യില്‍ ഒരു ഹെഡര്‍ ഫയലില്‍ aH ഫങ്ഷനുകള്‍ വേണമെങ്കിലും ഉള്‍പ്പെടുത്തുകയും
ഏത്‌ പ്രോഗ്രാമിലും ഈ ഫങ്ഷനുകള്‍ ഉപയോഗിക്കുകയും ചെയ്യാം.

സ്വയം പരിശോധിക്കാം

1. ഒരു ഫങ്ഷന്റെ ്രോട്ടോടൈവഷ്‌ പ്രി. പ്രോസസര്‍ ഡിറക്ടീവിന്‌ ശേഷം നല്‍കുമ്പോള്‍
അവയുടെ വ്യാപ്തി ................ ആയിരിക്കും.

2. സ്വയം ആവര്‍ത്തനം എന്നാല്‍ എന്ത്‌?

3. C++ ലെ മുന്‍ നിര്‍വൃചിത ഫങ്ഷനുകളുടെ വ്യാപ്തി എന്ത്‌ ആകുന്നു.

4. ഒരു ഫങ്ഷന്റെ ആര്‍ധ്യുമെന്റുകള്‍ക്ക്‌ ..................... വ്യാപ്തി ഉണ്ട്‌.

( നമുക്ക്‌ സംഗ്രഹിക്കാം

പ്രോഗ്രാമിങ്ങ്‌ എഏളുഷത്തില്‍ ആക്കുന്ന ഒരു സമീപനമാണ്‌ മോഡുലാര്‍ പ്രോര്രാമിങ്‌. C++ ഫങ്ഷനിലൂടെ
മോഡുലറൈസേഷന്‌ സാകര്യം ഒരുക്കുന്നു. ഒരു പ്രത്യേക ഉദ്യമം നടത്തുന്നതിന്‌ ്രോദ്രാമില്‍ ഉള്‍ക്കൊ
ള്ളിച്ചിരിക്കുന്ന പേരോടു കൂടിയ ഒരു ഘടക്മഷാണ്‌ ഫങ്ഷന്‍. C++ @ മുന്‍ നിര്‍വചിത ഉപയോക്തു
നിര്‍വചിത എന്നി രണ്‌ തരം ഫങ്ഷനുകള്‍ ഉണ്ട്‌. മുന്‍ നിര്‍വചിത ഫങ്ഷനുകള്‍ ഉപയോഥിക്കണമെങ്കില്‍
അതുമായി ബന്ധഷെട്ട ഹെഡല്‍ ഫയല്‍ നാം പ്രോന്രാമില്‍ ഉര്‍കഷെടുത്തണം. വിളിക്കുന്ന ഫങ്ഷന്‌ ശേഷ
മാണ്‌ നിര്‍വൃചിച്ചിരിക്കുന്നതെങ്കില്‍ അത്തരം ഫങ്ഷന്‍ പ്രഖ്യാപിക്കേണ്ത്്‌ ആവശ്യമാണ്‌. ഫങ്ഷന്‍ വിളിക്കു
മ്പോ വിളിക്കുന്ന ഫങ്ഷനില്‍ നിന്നും വിളിച്ച ഫങ്ഷനിലേക്ക്‌ ഡാറ്റ ആര്‍ധ്വയുമെന്റിലൂടെ അയച്ചേക്കാം.
ആര്‍ല്യുമെന്റുകളെ യഥാക്രമ (ഫോര്‍മല്‍) പരാമീറ്റര്‍, ആച്ചവല്‍ (യഥാര്‍ത്ഥ) പരാമീറ്റര്‍ എന്നിങ്ങനെ രണ്ടായി
തരംതിരിക്കാം. ഫങ്ഷനിലേക്ക്‌ പരാമീറ്റര്‍ അയയ്ക്കുന്നതിന്‌ കാര്‍- ബൈ. വാല്യു രീതിയോ അല്ലെങ്കില്‍
കാര്‍ ബൈ റഫറന്‍സ്‌ രീതിയോ ഉപയോഗിക്കാം. ഒരു പ്രോഗ്രാമിലെ വേരിയബിളുകള്‍ക്കും ഫങ്ഷനു
കള്‍ക്കും അവ പ്രഖ്യാപിച്ചിരിക്കുന്ന സ്ഥലത്തിനനുസരിച്ച്‌ വ്യാപ്തിയും ജീവനവും ഉണ്ട്‌. ഒരു ഫങ്ഷന്‍,
മറ്റൊരു ഫങ്ഷനെ വിളിക്കാമെന്നതു പോലെ, ഒരു ഫങ്ഷന്‍ അതിനെ തന്നെ വിളിക്കുന്ന പ്രവര്‍ത്തനമായ
സ്വയം ആവര്‍ത്തനവും C++ അനുവദിക്കുന്നു. ഉപയോക്തു നിര്‍വചിത ഫങ്ഷനുകള്‍ രേഖരിക്കാന്‍
പുതിയ ഹെഡര്‍ഫയലുകളും നമുക്ക്‌ നിര്‍മിക്കാന്‍ കഴിയും. അതിലൂടെ ഈ ഫങ്ഷനുകർ മറ്റ്‌ പ്രോഗ്രാമു
കളിലും ഉപയോഗിക്കാം.

നത പഠന നേട്ടങ്ങള്‍

ഈ അധ്യായം പൂര്‍ത്തിയാക്കിയതിന്‌ ശേഷം പഠിതാവിന്‌ പ്രാപ്തമാകുന്നത്‌

© മോഡുലാര്‍ പ്രോഠ്രഗാമിങ്ങ്‌ ശൈലിയും അവയുടെ മേന്മകളും തിരിച്ചറിയുന്നു.
€ പ്രശ്നപരിഹാരത്തിനായി മുന്‍ നിര്‍വചിത ഫങ്ങ്ഷനുകള്‍ ഉപയോഗിക്കുന്നു.

€ പ്രശ്നപരിഹാരത്തില്‍ ഏര്‍പ്പെട്ടിരിക്കുന്ന പ്രത്യേക ഉദ്യമങ്ങള്‍ പ്രവര്‍ത്തിക്കുന്നതി
നായി ഉപഫങ്ഷനുകള്‍ നിര്‍വചിക്കുന്നു.

* ഉപയോക്താവ്‌ നിര്‍വ്വചിച്ച ഉപഫങ്ഷനുകള്‍ ഉപയോഗിക്കുന്നു.

© സ്വയം ആവര്‍ത്തന ഫങ്ഷനുകള്‍ നിര്‍വ്വചിക്കുകയും പ്രശ്ന പരിഹാരത്തിന്‌ അവ
ഉപയോഗിക്കുകയും ചെയ്യുന്നു.
| eo 10. ഫങ്ഷനുകള്‍

ലാബ്‌ പ്രവര്‍ത്തനങ്ങള്‍

1. ഒരു MAS സ്വീകരിച്ച്‌ അത്‌ അഭിഭാജ്യം ആണെങ്കില്‍ 1 ഉം അല്ലെങ്കില്‍ 0 ഉം തിരിച്ച്‌
നല്‍കുന്നതിനുള്ള ഒരു ഫങ്ഷന്‍ നിര്‍വ്ൃചിക്കുക. ഈ ഫങ്ഷന്‍ ഉപയോഗിച്ച്‌ 100 നും
200 നും ഇടക്കുള്ള എല്ലാ അഭാജ്യ സംഖ്യകളും പ്രദര്‍ശിപ്പിക്കുന്നതിനുള്ള ഒരു
പ്രോഗ്രാം എഴുതുക.

2. ഒരു ഫങ്ഷന്‍ ഉപയോഗിച്ച്‌ തന്നിരിക്കുന്ന മൂന്ന്‌ അല്ലെങ്കില്‍ രണ്ട്‌ സംഖ്യകളില്‍
ഏറ്റവും ചെറിയ സാംഖ്യ കണ്ടുപിടിക്കുന്നതിനുള്ള ഒരു പ്രോ്ഗാം എഴുതുക (തനത്‌
ആര്‍ഗ്യുമെന്റുകളുടെ ആശയം ഉപയോഗിക്കുക).

3. ഒരു ഉപയോക്തൃ നിര്‍വചിത ഫങ്ഷന്റെ സഹായത്തോടെ ഒരു സംഖ്യയിലെ അക്ക
ങ്ങളുടെ തുക കണ്ടുപിടിക്കുക. (അതായത്‌ സംഖ്യ 3245 ആണെങ്കില്‍, ഉത്തരം 3+2+445
= 14 ആയിരിക്കണം).

4. ഒരു ഫങ്ഷന്‍ ഉപയോഗിച്ച്‌ തന്നിരിക്കുന്ന രണ്ട്‌ സംഖ്യകളുടെ LCM കണ്ടുപിടിക്കു
ന്നതിനുള്ള ഒരു പ്രോ്ഗാം എഴുതുക.

5. ഒരു ഫങ്ഷന്‍ ഉപയോഗിച്ച്‌ തന്നിരിക്കുന്ന പരിധിയില്‍പ്പെട്ട എല്ലാ പാലിന്‍ഡ്രോം
നമ്പറുകളും പ്രദര്‍ശിപ്പിക്കുന്നതിനുള്ള ഒരു പ്രോഗ്രാം എഴുതുക. ഫങ്ഷന്‍ സാഖ്യ
സ്വീകരിക്കുകയും പാലിന്‍ഡ്രോം ആണെങ്കില്‍ 1 ഉം അല്ലെങ്കില്‍ പൂജ്യവും തിരിച്ചു

നല്‍കണം.
Paes canyon’ TIMMINS
ലഘുചോല്യോത്തരങ്ങള്‍
1. പ്രോഗ്രാമിങ്ങില്‍ ടോപ്‌-ഡൌണ്‍, ബോട്ടം-അപ്പ്‌ രൂപകല്‍പ്പനകള്‍ എങ്ങനെ വൃത്യാ
സപ്പെട്ടിരിക്കുന്നു?
2. C++ ലെ ഒരു ഫങ്ഷന്‍ എന്താണ്‌?
3. ഒരു ഫങ്ഷന്‍ അതിനെ തന്നെ വിളിക്കാനുള്ള കഴിവിനെ .................. എന്ന്‌ പറയുന്നു.
4. CHt പ്രോഗ്രാമുകളില്‍ ഹെഡര്‍ ഫയലുകളുടെ കര്‍ത്തവ്യം എഴുതുക.
5. ഫങ്ഷന്‍ നിര്‍വചനത്തിനായി വോയിഡ്‌ (void) ഡാറ്റ തരം ഉപയോഗിക്കുന്നത്‌ എപ്പോ

ഴാണ്‌?

ലഘു ഉപന്യാസതരം :

1. ആക്ചല്‍ (യഥാര്‍ത്ഥ) ഫോര്‍മല്‍ (യഥാക്രമം) എന്നീ ആര്‍ഗ്യുമെന്റുകള്‍ തമ്മിലുള്ള
വ്യത്യാസങ്ങള്‍ കണ്ടെത്തുക.

2. താഴെ കൊടുത്തിരിക്കുന്ന ഫങ്ഷനുകള്‍ക്ക്‌ വേണ്ട ഫങ്ഷന്‍ പ്രോട്ടോടൈപ്പുകള്‍
നിര്‍മിക്കുക.

a) Total () - രണ്ട്‌ ഡബിള്‍ ആര്‍ഗ്യുമെന്റുകള്‍ സ്വീകരിച്ച്‌ ഒരു ഡബിള്‍ ഡാറ്റതരം
തിരിച്ച്‌ നല്‍കുന്നു
7.

b) Math () - ഒരു വിലയും സ്വീകരിക്കുകയോ തിരിച്ചു നല്‍കുകയോ ചെയ്യുന്നില്ല.
റിട്ടേണ്‍ പ്രസ്താവന, exit() ഫങ്ഷന്‍ എന്നിവ വേര്‍തിരിച്ച്‌ എഴുതുക.

ലോക്കല്‍, ഗ്ലോബല്‍ എന്നീ വേരിയബിളുകളുടെ വ്യാപ്തി ഉദാഹരണ സഹിതം
ചര്‍ച്ച ചെയ്യുക.

ഫങ്ഷനെ വിളിക്കുന്നതിന്‌ ഉപയോഗിക്കുന്ന കാള്‍-ബൈ-വാല്ല്യൂ രീതിയും കാള്‍-
ബൈ-റഫറന്‍സ്‌ രീതിയും തമ്മിലുള്ള വ്യത്യാസങ്ങള്‍ കണ്ടെത്തുക.

Ct+t ല്‍ എല്ലാം ആര്‍ഗ്യുമെന്റുകളും ഉപയോഗിക്കാതെ ഫങ്ഷന്‍ വിളിക്കുവാന്‍
കുഴിയും. എങ്ങനെ?

സ്വയം ആവര്‍ത്തനത്തില്‍പ്പെട്ടിരിക്കുന്ന പ്രവര്‍ത്തനം എഴുതുക.

ദീര്‍ഘ ചോദ്യോത്തരം

1. താഴെ കൊടുത്തിരിക്കുന്ന ഫങ്ഷന്‍ നോക്കുക

int sum(int a,int b=o,int (=o)
{relarn (atb+t+c) }
൭ പരാമീറ്റര്‍ ലിസ്റ്റിനെ സംബന്ധിച്ച്‌ ഫങ്ഷന്റെ പ്രത്യേകതകള്‍ എന്താണ്‌?

12 താഴെകൊടുത്തിരിക്കുന്ന ഫങ്ഷനുകളുടെ ഓട്ട്പുട്ട്‌ എഴുതി അതിന്റെ പ്രവര്‍
ത്തനം വിശദമാക്കുക ഫങ്ഷന്‍ കാള്‍ തെറ്റാണങ്കില്‍ അതിന്റെ കാരണം എഴുതുക.

(i) cont<<sum (1,2,3): (ii)cont <<sum (5,2);
(222) cout<<sun(); (lv) cout <<sum(o);

int fun (in, inl); എന്നത്‌ ഒരു ഫങ്ഷന്റെ പ്രോട്ടോടൈപ്പ്‌ ആണ്‌. താഴെ
കൊടുത്തിരിക്കുന്ന ഫങ്ഷന്‍ വിളികള്‍ അസാധുവാണ്‌ ഓരോന്നിന്റെയും കാരണം
എഴുതുക.

a)fun(2,4); 12) cout<<fun(); c) val=fun(2.5,3.3);
d)cin>>fun(a,b); ൭) 2=fun(3);
പ്രധാന ആശയങ്ങള്‍

കമ്പൂട്ടര്‍ മ്ൃംഖലകര്‍ (Computer Networks)
൪ ദ്ൃംഖലയുടെ ആവര്യദത
€ ചില പ്രധാന പദങ്ങള്‍
wa വിനിമയ സംവിധാനം (Data Communication System)
വിനിമയ മാധ്യമം (Communication Medium)
€ ദ്രൈഡഡ്‌ മീഡിയം (Guided Medium)
€ അണ്‍ ഗ്രൈഡഡ്‌ മീഡിയം (Unguided Medium)
ഡിയോ തരംഗങ്ങള്‍ ഉപയോിച്ചുള്ള വയര്‍ ലെസ്സ്‌
വിനിമയ സാഃ്കതികവിദയുകള്‍
(wa വിനിമയ ഉപകരണങ്ങള്‍ (Data Communication Devices)
€ of. Oagy.mi. (NIC), anenf (HUB), സിക്‌ SWITCH), dafigd
(Repeater), ബ്രിഡ്ജ്‌ (Birdge), റൂട്ടര്‍ (Router), ഗവ
(Gagteway)
ഡാുടടര്‍മിനല്‍ ഉപകരണങ്ങള്‍ (Data Terminal Equipments)
 €29Wo (Modem), 2ർട്ടിപ്പെദ്സര്‍ (Multiplexer) /wlaws)
പ്ലെദ്സര്‍ (Demultiplexer)
© മ്ൃംഖല ക്രമീകരണ രീതികള്‍ (Network Topologies)
ബസ്‌ (Bus), qyod (Star), റിങ്‌ (Ring), ഷ്‌ (Mesh)
വിവിധ തരം BMA
e പാന്‍ (PAN), ലാന്‍ (LAN), മാന്‍ (MAN), വാന്‍ (WAN)
രൃംഖലയുടെ യുക്ത്യാധിഷ്ഠിത തരംതിരിവുകള്‍/വിദജനം
e പീര്‍-ടു- പീര്‍ (Peer -10 - peer)
© ക്ലയന്റ്‌ സര്‍വര്‍ (Client - Server)
രൂംഖലാ പെരുമാറ്റ ചട്ടങ്ങള്‍/നിയാങ്ങള്‍ (Network Protocol)
e TCP/IP (HTTP, FTP, DNS)

ഉപയോക്താവിനെയും AMYJSNAOBWJo MLM രിരിച്ഛിയല്‍
e MAC വിലാസം (MAC Address)
€ ഐപി വിലാസം (IP Address)
& യൂണിഫോം റിസോഴ്‌സ്‌ ലൊദക്ക്റൂര്‍ (Uniform Resoure
Locator)

കമ്പ്യൂട്ടര്‍ ശൃംഖലകള്‍

പത്താം ക്ലാസ്‌ പരീക്ഷയുടെ ഫലം അറിയു
വാനോ പതിനൊന്നാം ക്ലാസ്സില്‍ പ്രവേശനം
കിട്ടിയോ എന്ന്‌ പരിശോധിക്കുന്നതിനോ
നിങ്ങള്‍ ഇന്റര്‍നെറ്റ്‌ ഉപയോഗിച്ചിട്ടുണ്ടോ? പണം
പിന്‍ വലിക്കുന്നതിനായി നിങ്ങള്‍ എടി എം
സന്ദര്‍ശിച്ചിട്ടുണ്ടോ? കമ്പ്യൂട്ടറില്‍ നിന്ന്‌ പാട്ടുകള്‍,
ചിത്രങ്ങള്‍, സിനിമാശകലങ്ങള്‍ എന്നിവ സെല്‍
ഫോണിലേക്ക്‌ മാറ്റുവാനോ, ഇന്റര്‍നെറ്റ്‌ ഉപ
യോഗിച്ച്‌ ട്രെയിന്‍ ടിക്കറ്റ്‌ ബുക്ക്‌ ചെയ്യുവാനോ
നിങ്ങള്‍ ശ്രമിച്ചിട്ടുണ്ടോ? ഈ ചോദ്യങ്ങളില്‍
ഏതെങ്കിലും ഒന്നിന്‌ നിങ്ങളുടെ ഉത്തരം ‘GROG’
എന്നാണെങ്കില്‍, നിങ്ങള്‍ കമ്പ്യൂട്ടര്‍ ശൃംഖലയുടെ
സേവനം ഉപയോഗപ്പെടുത്തിയിട്ടുണ്ട്‌ എന്ന്‌
അനുമാനിക്കാം. കമ്പ്യൂട്ടര്‍ ശൃംഖലയുടെ പ്രവര്‍
ത്തനങ്ങളെക്കുറിച്ചും അവയുടെ ഗുണങ്ങളെക്കു
റിച്ചുമാണ്‌ ഈ അദ്ധ്യായത്തില്‍ പഠിക്കുന്നത്‌.
ഇതോടൊപ്പം ഈ മേഖലയില്‍ ഉപയോഗിക്കുന്ന
വിവിധ ഉപക രണങ്ങളെക്കുറിച്ചും മാധ്യമങ്ങ
ളെക്കുറിച്ചും നമുക്ക്‌ ചര്‍ച്ച ചെയ്യാം. കൂടാതെ
വിവിധതരം കമ്പ്യൂട്ടര്‍ ശൃംഖലകളെക്കുറിച്ചും
ശ്യംഖലകളിലൂടെ വിനിമയം നടത്തുവാനാവശ്യ
മായ നിയമങ്ങളെക്കുറിച്ചും ചര്‍ച്ച ചെയ്യാം.

11.1 കമ്പ്യൂട്ടര്‍ wjooe! (Computer network)

ഒരു വിനിമയ MeIG HIME മാധ്യമത്തിലൂടെ
പരസ്പരം ബന്ധിപ്പിച്ചിട്ടുള്ള കമ്പ്യൂട്ടറുകളുടെ
യും മറ്റു കമ്പ്യൂട്ടിങ്‌ ഹാര്‍ഡ്വയര്‍ ഉപകരണങ്ങ
(5) ഒന്നാം വര്‍ഷ കമ്പ്യൂട്ടര്‍ സയന്‍സ്‌ 11. കമ്പ്യുട്ടര്‍ ശൃംഖലകള്‍

ളുടെയും ((പിന്ററുകള്‍, സ്‌കാനറുകൾ, മോഡം, CD ഡ്രൈവുകള്‍ തുടങ്ങിയവ) ഒരു
കൂട്ടമാണ്‌ കമ്പ്യൂട്ടര്‍ ശൃംഖല. ഈ ഉപകരണങ്ങള്‍ക്ക്‌ പരസ്പരം വിവരങ്ങള്‍ വിനിമയം
നടത്തുവാനും, നിര്‍ദ്ദേശങ്ങള്‍ കൈമാറുവാനും, ഡാറ്റയും ഉപകരണങ്ങളും പരസ്പരം
പങ്കിടുവാനും സാധിക്കുന്നു. ഒരു ശൃംഖലയില്‍ ഉള്ള കമ്പ്യൂട്ടറുകളെ കേബിളുകള്‍,
ടെലിഫോണ്‍ ലൈനുകള്‍, റേഡിയോ തരംഗങ്ങള്‍, ഇന്‍ഫ്രാറെഡ്‌ തരംഗങ്ങള്‍, Dall
ഹങ്ങള്‍ ഇവയിലേതെങ്കിലും ഉപയോഗിച്ച്‌ പരസ്പരം ബന്ധിപ്പിക്കാം.

11.1.1 ശൃംഖലയുടെ ആവശ്യകത (Need for network)

ഒരു കമ്പ്യൂട്ടര്‍ ശൃംഖലയ്ക്ക്‌ ഉത്തമ ഉദാഹരണമാണ്‌ ഇന്റര്‍നെറ്റ്‌. ഇമെയില്‍, ഓണ്‍
ലൈന്‍ പ്രതങ്ങള്‍, ബ്ലോഗുകള്‍, ചാറ്റിങ്‌ ഇന്റര്‍നെറ്റ്‌ അധിഷ്ഠിത സേവനങ്ങള്‍ തുടങ്ങി
യവ ഇല്ലാത്ത ഒരു ലോകത്തെ കുറിച്ച്‌ നമുക്ക്‌ ചിന്തിക്കുവാന്‍ കഴിയില്ല. പരസ്പരം
ബന്ധിപ്പിച്ചിട്ടില്ലഠത്ത കമ്പ്യൂട്ടറുകള്‍ ഉപയോഗിക്കുന്നതിനേക്കാള്‍ പലമേന്മകളും പരസ്‌
പരം ബന്ധിപ്പിച്ച കമ്പ്യൂട്ടറുകള്‍ക്ക്‌ ഉണ്ട്‌. അവയില്‍ ചിലത്‌ ചുവടെ ചേര്‍ക്കുന്നു.

e വിഭവം പങ്കുവെയ്ക്കല്‍ (Resource sharing)

e വില പ്രകടന അനുപാതം (Price preformance ratio)
e വിവര വിനിമയം (Communication)

e വിശ്വാസ്യത (Reliability)

൭൫ വിപുലീകരിക്കുവാനുള്ള സാധ്യത (Scalability)

വിഭവം പങ്കുവെയ്ക്കല്‍: കമ്പ്യൂട്ടര്‍ ശൃംഖലയില്‍ ലഭ്യമായ ഹാര്‍ഡ്വെയറും സോഫ്റ്റ്‌
വെയറും പങ്കിടുന്നതിനെയാണ്‌ വിഭവങ്ങളുടെ പങ്കുവെയ്ക്കല്‍ എന്നതുകൊണ്ട്‌ ഉദ്ദേശി
ക്കുന്നത്‌. ഉദാഹരണത്തിന്‌ ഒരു കമ്പ്യൂട്ടറിന്റെ ഡിവിഡി ഡ്രൈവില്‍ നിന്നാണ്‌ ഒരു
ഡിവിഡി യുടെ ഉള്ളടക്കം മറ്റൊരു കമ്പ്യൂട്ടറില്‍ ഉപയോഗിക്കുന്നത്‌. അതുപോലെ,
മറ്റ്‌ ഹാര്‍ഡ്വെയര്‍ ഉപകരണങ്ങളായ ഹാര്‍ഡ്‌ ഡിസ്‌ക്‌, പ്രിന്റര്‍, സ്കാനര്‍, തുടങ്ങിയ
വയും സോഫ്റ്റ്വെയറുകളായ അപ്ലിക്കേഷന്‍ സോഫ്റ്റ്വെയര്‍, ആന്റി വൈറസുകള്‍
തുടങ്ങിയവയും കമ്പ്യൂട്ടര്‍ ശൃംഖല വഴി പരസ്പരം പങ്കിടാം.

വില പ്രകടന അനുപാതം: ഒരു കമ്പ്യൂട്ടറില്‍ ലഭ്യമായ വിഭവങ്ങള്‍ ശൃംഖലയിലുള്ള
മറ്റ്‌ കമ്പ്യൂട്ടറുകളുമായി എളുപ്പത്തില്‍ പങ്കിടുവാന്‍ കഴിയുന്നു. ലൈസന്‍സുള്ള സോഫ്റ്റ്‌
വെയര്‍ ഓരോ കമ്പ്യൂട്ടറിനും വാങ്ങുന്നതിനുള്ള ചെലവ്‌ അത്തരം സോഫ്‌റ്റ്വെയറിന്റെ
ശൃംഖല പതിപ്പുകള്‍ വാങ്ങിക്കൊണ്ടു കുറയ്ക്കുവാന്‍ കഴിയും. വിഭവങ്ങളുടെ ഇത്തര
ത്തിലുള്ള ഉപയോഗം കമ്പ്യൂട്ടറിന്റെ പ്രകടനത്തെ ബാധിക്കാത്ത വിധത്തിലും, കൂടാതെ
കുറഞ്ഞ ചിലവില്‍, ഗണ്യമായ ലാഭത്തിലേക്കു നയിക്കുന്ന തരത്തിലും ആയിരിക്കും.

വിവര വിനിമയം: ഇമെയില്‍, ചാറ്റിങ്‌, വീഡിയോ കോണ്‍ഫെറന്‍സിങ്‌ തുടങ്ങിയ
സേവനങ്ങളിലൂടെ ശൃംഖലയിലുള്ള മറ്റേതെങ്കിലും ഉപഭോക്താവുമായി വിവര വിനി
മയം നടത്തുവാന്‍ കമ്പ്യൂട്ടര്‍ ശൃംഖല സഹായിക്കുന്നു. ഉദാഹരണമായി ലക്ഷ്യസ്ഥാന
11. കമ്പ്യൂട്ടര്‍ ശൃംഖലകള്‍

ത്തിലേക്കുള്ള ദൂരം കണക്കിലെടുക്കാതെ വളരെ വേഗത്തില്‍ സന്ദേശങ്ങള്‍ അയക്കു
വാനും സ്വീകരിക്കുവാനും കഴിയുന്നു.

വിശ്വാസ്യത : കമ്പ്യൂട്ടര്‍ ശൃംഖല ഉപയോഗിച്ച്‌ ഒന്നിലധികം കമ്പ്യൂട്ടറുകളില്‍ ആവശ്യ
മായ വിവരങ്ങളുടെ നിരവധി പകര്‍പ്പുകള്‍ സൂക്ഷിക്കുവാന്‍ കഴിയുന്നു. ഉദാഹരണ
ത്തിന്‌, ഒരു കമ്പ്യൂട്ടറില്‍ സംരക്ഷിച്ചിട്ടുള്ള C++ ഫയലുകള്‍, ചിത്രങ്ങള്‍ അല്ലെങ്കില്‍
പാട്ടുകള്‍ എന്നിവ ഇതേ ശൃംഖലയിലെ മറ്റു കമ്പ്യൂട്ടറുകളില്‍ സൂക്ഷിക്കാവുന്നതാണ്‌.
ഇങ്ങനെ സൂക്ഷിക്കുന്നത്‌ കൊണ്ട്‌, ഏതെങ്കിലും കമ്പ്യൂട്ടറിന്‌ തകരാറുണ്ടായാല്‍
(ശരിയായി പ്രവര്‍ത്തിക്കാതിരിക്കുക, യാദൃശ്ചികമായി ഫയലുകള്‍ നഷ്ടപ്പെട്ട്‌ പോ
കുക) ഈ ഫയലുകളെ കമ്പ്യൂട്ടര്‍ ശൃംഖലയില്‍ നിന്നും വീണ്ടെടുക്കുവാന്‍ സാധിക്കുന്നു.

വിപുലീകരിക്കുവാനുള്ള സാധ്യത: കമ്പ്യൂട്ടര്‍ ശ്ൃംഖലയിലേയ്ക്ക്‌ കമ്പ്യൂട്ടറുകളുടെ
എണ്ണം കൂട്ടിയും കുറച്ചും ശൃംഖലയുടെ പ്രവര്‍ത്തന ക്ഷമത ഉയര്‍ത്തുകയും താഴത്തു
കയും ചെയ്യാം. ഇതിനുപുറമെ ശ്ൃംഖലയിലേയ്ക്ക്‌ കൂടുതല്‍ സംഭരണ ഉപകരണങ്ങള്‍
ഉള്‍പ്പെടുത്തി ശൃംഖലയുടെ സംഭരണ ശേഷി വര്‍ദ്ധിപ്പിക്കാം

11.1.2 ചില പ്രധാന പദങ്ങള്‍ (Some key terms)
കമ്പ്യൂട്ടര്‍ ശൃംഖലയുമായി ബന്ധപ്പെട്ട ചില പ്രധാന പദങ്ങള്‍ ചുവടെ വിശദമാക്കുന്നു.

ബാന്‍ഡ്വിഡ്ത്ത്‌ (Bandwidth): ബാന്‍ഡ്‌ വിഡ്ത്‌ എന്നാല്‍ നിശ്ചിത സമയത്ത്‌ നിശ്ചിത
മാധ്യമത്തിലൂടെ അയയ്ക്കാവുന്ന ഡാറ്റയുടെ അളവാണ്‌. നിങ്ങള്‍ ഒരു ഹൈവേയിലൂ
ടെയോ അല്ലെങ്കില്‍ ഒരു പൊതുറോഡിലൂടെയോ സഞ്ചരിക്കുകയാണ്‌ എന്ന്‌ വിചാരി
ക്കുക. റോഡിന്റെ വീതി കൂടുന്തോറും അതിലൂടെ കടന്നു പോകുവാന്‍ കഴിയുന്ന
വാഹനങ്ങളുടെ എണ്ണം കൂടുന്നതായി കാണാം. മാത്രമല്ല ഇവിടെ ഇടുങ്ങിയ റോഡി
നേക്കാള്‍ വേഗത്തില്‍ വാഹനങ്ങള്‍ക്ക്‌ സഞ്ചരിക്കാം. അതുകൊണ്ടു ഒരു വീതിയുള്ള
റോഡിന്‌, ഇടുങ്ങിയ റോഡിനേക്കാള്‍ ബാന്‍ഡ്‌ വിഡ്ത്‌ കൂടുതലാണ്‌ എന്ന്‌ നമുക്ക്‌
മനസിലാക്കാം.

ഒരുശ്യംഖലയില്‍ കമ്പ്യൂട്ടറുകള്‍ക്കിടയില്‍ പരമാവധി കൈമാറ്റം ചെയ്യുവാന്‍ കഴിയുന്ന
ഡാറ്റയുടെ അളവിനെ ബാന്‍ഡ്വിഡ്ത്ത്‌ എന്ന്‌ പറയാം. ബിറ്റ്സ്‌ പെര്‍ സെക്കന്റ്‌ (പ്രതി
നിമിഷമാര്രകള്‍?) (ബിപിഎസ്‌; എന്ന രീതിയില്‍ ഡിജിറ്റല്‍ സ്രമ്പദായത്തില്‍ ഇതിനെ
അളക്കുന്നു. ബാൻഡ്‌വിഡ്ത്‌ കൂടുതലാവുമ്പോള്‍ ഡാറ്റയ്ക്കു വേഗത്തില്‍ സഞ്ചരി
ക്കുവാന്‍ കഴിയുന്നു, ആയതിനാല്‍ ഒരു പ്രത്യേക സമയപരിധിക്കുള്ളില്‍ ശ്ൃയംഖലയി
ലൂടെ വലിയ അളവില്‍ ഡാറ്റ കൈമാറ്റം ചെയ്യാവുന്നതാണ്‌. ഉദാഹരണത്തിന്‌ കേബിള്‍
മോഡം വഴിയുള്ള ഇന്റര്‍നെറ്റ്‌ കണക്ഷന്‍ 25 Mbps ബാന്‍ഡ്‌ വിഡ്ത്‌ നല്‍കുന്നു.

നോയ്സ്‌ Noise): ഡാറ്റ സിഗ്നലിന്റെ ഗുണനിലവാരം കുറയ്ക്കുന്നതോ, സിഗ്നലുക
ളുടെയോ ഡാറ്റയുടെ നീക്കത്തെ തടസപ്പെടുത്തുന്നതോ ആയ മറ്റൊരു അനഭിമത
മായ തരംഗമാണ്‌ “നോയ്സ്‌” (Noise). സമീപത്തുള്ള സംപ്രേക്ഷണ ഉപകരണങ്ങളില്‍
ഒന്നാം വര്‍ഷ കമ്പ്യൂട്ടര്‍ സയന്‍സ്‌ 11. കമ്പ്യുട്ടര്‍ ശൃംഖലകള്‍

നിന്നും, മറ്റു യ്രന്തങ്ങളില്‍ നിന്നും കേബിളുകളില്‍ നിന്നും, പുറത്തു വരുന്ന സിഗ്നലു
കളാണ്‌ ഇതിനു കാരണം. ഒരു ശൃംഖലയില്‍ (Network) കൈമാറ്റം ചെയ്യപ്പെടുന്ന
ടെക്സ്റ്റുകള്‍, പ്രോരഗാമുകള്‍, ചിര്രങ്ങള്‍, ഓഡിയോ തുടങ്ങിയ എല്ലാ ഡാറ്റയേയും
നോയ്സ്‌ പ്രതികൂലമായി ബാധിക്കുന്നു.

നോഡ്‌ (Node): കമ്പ്യൂട്ടര്‍ ശ്ൃംഖലയിലേക്കു നേരിട്ട്‌ ബന്ധിപ്പിച്ചിട്ടുള്ള ഏത്‌ ഉപകര
ണത്തെയും (കമ്പ്യൂട്ടര്‍, സ്കാനര്‍, പ്രിന്‍റര്‍ മുതലായവ) നോഡ്‌ എന്ന്‌ പറയുന്നു. ഉദാ
ഹരണമായി, സ്‌കൂളില്‍ കമ്പ്യൂട്ടര്‍ ശൃംഖലയിലേക്ക്‌ ബന്ധിപ്പിച്ചിരിക്കുന്ന കമ്പ്യൂട്ടറുകളെ
നോഡ്‌ എന്നാണ്‌ അറിയപ്പെടുന്നത്‌. നമ്മുടെ കമ്പ്യൂട്ടറിനെ ഇന്റര്‍നെറ്റുമായി ബന്ധി
പ്പിക്കുമ്പോള്‍, ആ കമ്പ്യൂട്ടര്‍ ഇന്റര്‍നെറ്റിലെ ഒരു നോഡ്‌ ആയി മാറുന്നു.

നിങ്ങളുടെ സ്‌കൂളിലെ കമ്പ്യൂട്ടര്‍ ശൃംഖലയില്‍ ഉപയോഗിച്ചിട്ടുള്ള
ഹാര്‍ഡ്വെയറിന്റെയും സോഫ്റ്റ്വെയറിന്റെയും പട്ടിക തയ്യാറാക്കുക.

നമുക്ക്‌ ചെയ്യാം

11.2 ഡാറ്റയുടെ വിനിമയ സ്യ്രദായം (Data communication system)

വിവരവിനിമയത്തിനും പങ്കുവെയ്ക്കലിനും വേണ്ടി ഒരു കമ്പ്യൂട്ടര്‍ ശൃംഖലയിലെ
ഉപകരണങ്ങളെ വിവിധ രീതിയില്‍ ബന്ധിപ്പിച്ചിരിക്കുന്നു. ഒരു സംപ്രേക്ഷണ മാധ്യ
മത്തിലൂടെ രണ്ടു ഉപകരണങ്ങള്‍ തമ്മില്‍ നടത്തുന്ന ഡിജിറ്റല്‍ വിവരങ്ങളുടെ കൈമാ
QOTM ഡാറ്റയുടെ വിനിമയം അഥവാ ഡാറ്റ കമ്മ്യൂണിക്കേഷന്‍ (Data Communication)
എന്ന്‌ പറയുന്നു. ചിരം 8.1 ല്‍ ഡാറ്റയുടെ വിനിമയ സംവിധാനത്തിന്റെ പൊതു പ്രാ
തിനിധ്യം കാണിക്കുന്നു.

മാധ്യമം
പ്രേക്ഷക, സ്വീകരണ പ്രേക്ഷക, സ്വീകരണ
ഉപകരണം ഉപകരണം

ചി(ത 8.1: WIQ വിനിമയ സംവിധാനം
ഒരു ഡാറ്റയുടെ വിനിമയ സംവിധാനം നിര്‍മ്മിക്കുന്നതിന്‌ താഴെപ്പറയുന്ന അഞ്ച്‌
അടിസ്ഥാന ഘടകങ്ങള്‍ ആവശ്യമാണ്‌.

സന്ദേശം (Message) : വിനിമയം ചെയ്യേണ്ട പ്രധാന വിവരങ്ങള്‍ ആണ്‌ ഇത്‌. ഇതില്‍
ടെക്സ്റ്റുകള്‍, ചിത്രങ്ങള്‍, ഓഡിയോ, വീഡിയോ തുടങ്ങിയവ ഉള്‍പ്പെടുന്നു.

11. കമ്പ്യൂട്ടര്‍ ശൃംഖലകള്‍

പ്രേക്ഷകന്‍ (Sender): സന്ദേശം അയയ്ക്കുവാന്‍ ഉപയോഗിക്കുന്ന കമ്പ്യൂട്ടറിനെയും,
ഉപകരണങ്ങളെയും, പ്രേക്ഷകനെന്നോ, ഉറവിടം എന്നോ, സംപ്രേക്ഷണ Moa
എന്നോ വിളിക്കാം.

സ്വീകര്‍ത്താവ്‌ (Receiver): സ്വീകര്‍ത്താവ്‌ എന്നത്‌ സന്ദേശങ്ങള്‍ സ്വീകരിക്കുന്ന
കമ്പ്യൂട്ടറോ അനുബന്ധ ഉപകരണങ്ങളോ ആകാം.

മാധ്യമം (Medium):- പ്രേക്ഷകനില്‍ നിന്ന്‌ സ്വീകര്‍ത്താവിലേയ്ക്ക്‌ സന്ദേശം സഞ്ചരി
ക്കുന്ന ഭാതിക പാതയാണ്‌ ഇത്‌. നോഡുകള്‍ തമ്മില്‍ പരസ്പരം ബന്ധിപ്പിച്ചിരിക്കുന്ന
രീതിയെ ഇത്‌ സൂചിപ്പിക്കുന്നു.

പ്രൊട്ടോക്കോള്‍ (Protocol):- പ്രേക്ഷകനും സ്വീകര്‍ത്താവും സന്ദേശങ്ങള്‍ കൈമാറ്റം
ചെയ്യുമ്പോള്‍ പാലിക്കേണ്ട നിയമങ്ങളെ പ്രോട്ടോകോള്‍ (protocol) എന്ന്‌ വിളിക്കാം.

11.3 വിവര വിനിമയ മാധ്യമം (Communication medium)

ഒരു ഉപകരണത്തില്‍ നിന്ന്‌ മറ്റൊന്നിലേക്കു സന്ദേശം വഹിക്കുവാന്‍ കഴിയുന്ന ഒരു
മാധ്യമം ഉണ്ടെങ്കില്‍ മാത്രമേ ഡാറ്റയുടെ വിനിമയ പ്രക്രിയ പൂര്‍ണ്ണമാകുകയുള്ളൂ.
ഒരു കമ്പ്യൂട്ടര്‍ ശൃംഖലയില്‍ ഡാറ്റ കൈമാറ്റം ചെയ്യുവാന്‍ ഉപയോഗിക്കുന്ന മാധ്യമത്തെ
വിവരവിനിമയ പാത അല്ലെങ്കില്‍ വിനിമയ മാധ്യമം എന്ന്‌ വിളിക്കാം. ഒരു കമ്പ്യൂട്ടര്‍
ശൃംഖലയില്‍ വിവരവിനിമയത്തിനായി രണ്ടു തരത്തിലുള്ള മാധ്യമങ്ങളെ ഉപയോ
ഗിക്കാം. ഗൈഡഡ്‌ മാധ്യമവും അണ്‍ഗൈഡഡ്‌ മാധ്യമവും ഗൈഡഡ്‌ മാധ്യമത്തില്‍
കേബിളുകള്‍ ഉപയോഗിക്കുന്നു. അതെ സമയം അണ്‍ഗൈഡഡ്‌ മാധ്യമത്തില്‍
റേഡിയോ തരംഗങ്ങള്‍, മൈക്രോവേവ്‌ തരംഗങ്ങള്‍ അല്ലങ്കില്‍ ഇന്‍ഫ്രാറെഡ്‌
തരംഗങ്ങള്‍ എന്നിവയാണ്‌ ഡാറ്റ അയയ്ക്കുവാനായി ഉപയോഗിക്കുന്നത്‌.

11.3.1 ഗൈഡഡ്‌ മാധ്യമം (Guided Medium (wired))

കോയാക്സില്‍ കേബിള്‍ (Coaxial cable), ട്വിസ്റ്റഡ്‌ പെയര്‍ കേബിള്‍ (Twisted pair cable),
ഒപ്റ്റിക്കല്‍ ഫൈബര്‍ കേബിള്‍ (Optical fibre cable) എന്നിവ കമ്പ്യൂട്ടര്‍ ശൃംഖലയില്‍
ഡാറ്റ കൈമാറുവാനായി ഉപയോഗിക്കുന്ന ഗൈഡഡ്‌ മാധ്യമങ്ങളാണ്‌.

a. ട്വിസ്റഡ്‌ പെയര്‍ കേബിള്‍ (ഈതര്‍നെറ്റ്‌ കേബിള്‍? (Twisted pair cable (Ethernet calbe)

ചെറിയ കമ്പ്യൂട്ടര്‍ ശൃംഖലയ്ക്ക്‌ അനുയോജ്യവും, ഏറ്റവും വ്യാപകമായി ഉപയോഗി
യ്ക്കുന്നതുമാണ്‌ ഈ മാധ്യമം. വ്യത്യസ്ത നിറങ്ങള്‍ കൊണ്ട്‌ തിരിച്ചറിയുവാന്‍ കഴി
യുന്ന നാല്‍ ജോഡി വയറുകളെ ഒരു കവചം കൊണ്ട്‌ സംരക്ഷിച്ചു കൊണ്ടുള്ള രൂപക
ല്പനയാണിത്‌. ട്വിസ്റ്റഡ്പെയര്‍ രണ്ടു തരത്തിലാണ്‌ ഉള്ളത്‌ 1) അണ്‍ഷീര്‍സ്തറ്‌ സ്റ്റഡ്‌
പെയര്‍ ((Unshielded Twisted Pair (UTP )), 2) 0X 185 ട്വിസ്റ്റഡ്‌ പെയര്‍ (Shielded Twisted
Pair) (STP) എന്നും
(5) © ഒന്നാം വര്‍ഷ കമ്പ്യൂട്ടര്‍ സയന്‍സ്‌ 11. കമ്പൂട്ടര്‍ ശൃംഖലകള്‍

അണ്‍ഷില്‍ഡഡ്‌ ട്വിസ്ററഡ്‌ പെയര്‍ (Unshielded Twisted Pair (UTP)): പേരു പോലെ
തന്നെ കവചം ഇല്ലാത്ത തരം കേബിള്‍ ആണിത്‌.

ചാലകം

ഉന്‍സുലേറ്റര്‍

COMING കവചം |

ജോഡികള്‍

alOo 8.2: UTP കേബിളിമ്റി (പഥാന ഭാഗങ്ങ കാണിച്ചിരിക്കുന്നു.

ഇതിന്റെ പ്രധാന സവിശേഷതകശ്‌

© വളരെ കുറഞ്ഞ ചെലവില്‍ ചെറിയ ശൃംഖലകള്‍ നിര്‍മ്മിക്കാം.

© കനം കുറഞ്ഞതും വഴക്കമുള്ളതും ആയ കേബിളാണ്‌.

൭ വളരെ എളുപ്പത്തില്‍ ശൃംഖലാ ഉപകരണങ്ങളെ ബന്ധിപ്പിക്കാം.

© 100൩ ദൂരത്തില്‍ വരെ ഡാറ്റയെ വഹിച്ചു കൊണ്ട്‌ പോകുവാനുള്ള കഴിവ്‌ ഉണ്ട്‌

ഷീല്‍ഡഡ്‌ ട്വിസ്ററഡ്‌ പെയര്‍ (Shielded Twisted Pair (5112): UTP കേബിളിനെ
പ്പോലെ തന്നെയാണ്‌ എങ്കിലും STP യില്‍ ജോഡികളായ വയറുകളെ പൊതിഞ്ഞു
സൂക്ഷിക്കുന്നു. UTP കേബിളിനെ പോലെ പിന്നീട്‌ എല്ലാറ്റിനെയും പൊതിഞ്ഞു കൊണ്ട്‌
ഒരു കവചവും ഉണ്ടാകും.

ഇതിന്റെ ശപഥാന സവിശേഷതകള്‍

൦ നോയിസ്‌ (Noise) ന്‌ എതിരെ ശക്തമായ
പ്രതിരോധ സംവിധാനമാണ്‌ ഈ കേ
ബിളിന്‌ ഉള്ളത്‌.

൦ ഇതിന്‌ UTP കേബിളിനേക്കാള്‍ വില
കൂടുതല്‍ ആണ്‌.

൭ UTP കേബിളുമായി താരതമ്യം ചെയ്യു

മ്പോള്‍ STP കേബിള്‍ സ്ഥാപിക്കുവാന്‍ ചി([തം 8.3: എമ്പടിപി കേബിളും
പ്രയാസമാണ്‌. RJ-45 കണക്ടറും
ന്നാം വര്‍ഷ കമ്പ്യൂട്ടര്‍ സയന്‍സ്‌ 11. കമ്പ്യുട്ടര്‍ ശൃംഖലകള്‍

1൮45 എന്ന കണക്ടര്‍ ഉപയോഗിച്ചാണ്‌ UTP/STP കേബിളുകള്‍ കമ്പ്യൂട്ടറുമായി
ബന്ധിപ്പിച്ചിരിക്കുന്നത്‌.

b. കൊയാക്സിയല്‍ കേബിള്‍ (Coaxial cable)

ഒരു കൊയാക്സിയല്‍ കേബിളിന്റെ ഉള്‍ഭാഗത്ത്‌ ഒരു ചാലകത്തെ പൊതിഞ്ഞു കൊണ്ട്‌
ഒരു ഇന്‍സുലേറ്റര്‍ ട്യൂബും വീണ്ടും അതിനെ പൊതിഞ്ഞു കൊണ്ട്‌ ഒരു ചാലകവും
(ഷില്‍ഡ്‌) ഉണ്ടായിരിക്കും. ഇതിനു പുറമെ ഒരു പ്രതിരോധ കവചവും കൂടി കാണും.
ചിത്രം 8.4 കൊയാക്സിയല്‍ കേബിളിന്റെ ഘടന ചിത്രീകരിച്ചിരിക്കുന്നു.

കൊയാക്‌സ്സിയത്‌ കേങിളിന്റെ സവിശേഷത്തകശി.

© ദീര്‍ഘ ദൂരത്തേക്ക്‌ (ഏകദേശം 185 ൩
മൂതല്‍ 500 M വരെ) ഒറ്റയടിക്ക്‌ ഡാറ്റയെ
വഹിച്ചു കൊണ്ട്‌ പോകുവാന്‍ കഴിയും.

© വളരെ ഉയര്‍ന്ന ബാന്‍ഡ്വിഡ്ത്‌ ആണ്‌ കോകര്‍വയര്‍

[) ഇന്‍സുലേഷന്‍
ള്ളുത.
2 കോഷര്‍വയര്‍ മെഷ്‌

© പുറചചട്ട (കവചം) ഉള്ളതുകൊണ്ട്‌
വളരെ കുറഞ്ഞ തോതിലുള്ള വൈദ്യു

പുറം കവചം

ചിതം 8.4. കൊമാക്‌നസിയത്‌ കേബിശ്‌
തകാന്തിക തരംഗങ്ങളുടെ തടസ്സപ്പെടു

ത്തല്‍ മാത്രമേ ഉണ്ടാകുന്നുള്ളൂ.
൭ ട്വിസ്റ്റഡ്‌ പെയര്‍ കേബിളിനേക്കാള്‍ കനം കൂടിയ രൂപകല്പനയാണ്‌.
൭ ട്വിസ്റ്റഡ്‌ പെയര്‍ കേബിളിനേക്കാള്‍ വഴക്കം വളരെ കുറവാണ്‌.
൭ ട്വിസ്റ്റഡ്പെയറുമായി താരതമ്യം ചെയ്യുമ്പോള്‍ സ്ഥാപിക്കുവാന്‍ പ്രയാസമാണ്‌.
Cc. ഒപ്റ്റിക്കല്‍ ഫൈബര്‍ കേബിള്‍ (Optical fibre cable)

ഡാറ്റയെ പ്രകാശ കണികാ രൂപത്തില്‍ ഒരു നീളം കൂടിയ കനം കുറഞ്ഞ ഗ്ലാസ്‌ ട്യൂബി
ലൂടെ കടത്തിവിടുന്ന രൂപകല്പനയാണ്‌ ഒപ്റ്റിക്കല്‍ ഫൈബറുകള്‍ക്കുള്ളത്‌. പ്രകാശ
ത്തിന്റെ വേഗതയില്‍ ഡാറ്റയെ വളരെ ദൂരത്തേക്ക്‌ സംപ്രേക്ഷണം ചെയ്യുവാന്‍
കഴിയുന്നു. ചിത്രം 8.5 ഒപ്റ്റിക്കല്‍ ഫൈബറിന്റെ പ്രധാന ഭാഗങ്ങള്‍ കാണിച്ചിരിക്കുന്നു.

t t tf

കോര്‍ . കേബിള്‍ കവചം
ഡിംഗ്‌ കവചം ഫൈബറിന്‌ ബലം
നല്‍കുന്നവ

ചിതം 8.5: BiG ഫൈബര്‍
- ഒന്നാം വര്‍ഷ കമ്പ്യൂട്ടര്‍ സയന്‍സ്‌ 11. കമ്പ്യുട്ടര്‍ ശൃംഖലകള്‍

ഒപ്റ്റിക്കല്‍ ഫൈബറിന്‌ താഴെപ്പറയുന്ന ഭാഗങ്ങള്‍ ഉണ്ട്‌.

© കോര്‍: മധ്യഭാഗത്തു കൂടി പ്രകാശം കടന്നു പോകുന്ന കനം കുറഞ്ഞ ഗ്ലാസിന്റെ
കുഴലാണ്‌ ഇത്‌.

© ക്ലാഡിങ്‌ : കോര്‍ ഭാഗത്തെ പൊതിഞ്ഞു കൊണ്ട്‌ പ്രകാശത്തെ കോറിനുള്ളിലേക്കു
തന്നെ പ്രതിഫലിപ്പിക്കുന്ന പുറം ഭാഗമാണ്‌ ഇത്‌.

© കോട്ടിങ്‌ : ഈര്‍പ്പത്തില്‍ നിന്നും, തകരാറില്‍ നിന്നും സംരക്ഷിക്കുന്നതിനായിട്ടുള്ള
കേബിളിന്റെ പ്ലാസ്റ്റിക്‌ കവചമാണ്‌ ഇത്‌.

നൂറുകണക്കിനോ ആയിരക്കണക്കിനോ ആയ ഒപ്റ്റിക്കല്‍ ഫൈബര്‍ കേബിളുകളെ
പൊതിഞ്ഞിരിക്കുന്ന കവചത്തെ ജാക്കറ്റ്‌ എന്ന്‌ വിളിക്കുന്നു.

അര്‍ദ്ധചാലക ഉപകരണങ്ങളായ ലൈറ്റ്‌ എമിറ്റിങ്‌ ഡയോഡുകള്‍ (LED) ലേസര്‍
ഡയോഡുകള്‍ എന്നിവ ഉപയോഗിച്ച്‌ ഉത്ഭവ സ്ഥാനത്തുവെച്ചു ഒപ്റ്റിക്കല്‍ ട്രാന്‍സ്മിറ്റര്‍,
വൈദ്യുത തരംഗങ്ങളെ പ്രകാശ തരംഗങ്ങള്‍ ആക്കി മാറ്റുന്നു (മോഡുലേഷന്‍.
മറുഭാഗത്ത്‌, ഫോട്ടോ WQS അടങ്ങിയ ഒപ്റ്റിക്കല്‍ റിസീവര്‍, പ്രകാശ തരംഗങ്ങളെ
ഫോട്ടോ ഇല്രക്ടിക്ക്‌ പ്രഭാവം ഉപയോഗിച്ച്‌ തിരികെ വൈദ്യുത തരംഗങ്ങള്‍ ആക്കി
മാറ്റുന്നു (ഡീമോഡുലേഷന്‍). ലേസര്‍ ഡയോഡുകള്‍ക്കു ദൂരപരിധിയും, കൈമാറ്റ
വേഗതയും LED ഡയോഡുകളേക്കാള്‍ കൂടുതല്‍ ആണ്‌ .

8001910908 ഫൈബ്ചര്‍ കേബിളിന്റെ സവിശേഷതകശ്‌
© ഉയര്‍ന്ന ബാന്‍ഡ്‌ വിഡ്ത്തില്‍ ശബ്ദവും, വീഡിയോയും ഡാറ്റയും കൈമാറുന്നു
൭ ഒറ്റയടിക്ക്‌ ഡാറ്റയെ ദീര്‍ഘ ദൂരത്തേയ്ക്ക്‌ എത്തിക്കുന്നു.

൭ ഡാറ്റ കൈമാറ്റം ചെയ്യുവാന്‍ പ്രകാശ കണികകള്‍ ഉപയോഗിക്കുന്നതിനാല്‍ വൈ
ദ്യൂത കാന്തിക തരംഗങ്ങളുമായി ഒരു കൂടിച്ചേരലും നടക്കുന്നില്ല.

൭ കമ്പ്യൂട്ടര്‍ ശൃംഖലയ്ക്കു ലഭ്യമായതില്‍ വെച്ച്‌ ഏറ്റവും ചെലവേറിയതും കാര്യ
ക്ഷമത കൂടിയതുമായ മാദ്ധ്യമമാണിത്‌.

൭ പരിപാലനവും സ്ഥാപിക്കലും (Maintenance and installation) പ്രയാസകരവും

സങ്കീര്‍ണവുമാണ്‌.
11.3.2 അണ്‍ ഗൈഡഡ്‌ മീഡിയം (വയര്‍രഹിതം) (Unguided medium (Wireless))

വൈദ്യുതകാന്തിക തരംഗങ്ങള്‍ ആണ്‌ വയര്‍ലെസ്സ്‌ വിവരവിനിമയത്തിനായി കമ്പ്യൂട്ടര്‍
ശൃംഖലയില്‍ ഉപയോഗിക്കുന്നത്‌. തരംഗദൈര്‍ഘ്യത്തെ ഹേര്‍ട്സ്‌ (Hetrz (Hz) )ല്‍
ആണ്‌ കണക്കാക്കുന്നത്‌. ചിത്രം 8.6 ല്‍ ആവ്ൃത്തിയെ അടിസ്ഥാനമാക്കി വിവിധ തരം
വൈദ്യുതകാന്തികതരംഗങ്ങള്‍ കാണിച്ചിരിക്കുന്നു. ഈ വിഭാഗത്തില്‍ വയര്‍ലസ്‌ വിവര
വിനിമയത്തിനായി, റേഡിയോ തരംഗങ്ങളും മൈക്രോ തരംഗങ്ങളും ഇന്‍ഫ്രാറെഡ്‌
തരംഗങ്ങളുമാണ്‌ ഉപയോഗിക്കുന്നത്‌ എന്ന്‌ നമുക്ക്‌ മനസ്സിലാക്കാം.
ന്നാം വര്‍ഷ കമ്പ്യൂട്ടര്‍ സയന്‍സ്‌ 11. കമ്പ്യുട്ടര്‍ ശൃംഖലകള്‍

ഭൂമിയുടെ അനുരിക്ഷ
ത്തിലൂടെ കടന്നു
പോകുന്നവ

ക്വണാ

വികിരണ Meo റേഡിയോ മൈക്രോവേവ്‌ ഉന്‍ഫ്രാ യ്‌, ഴിയുന്നത്‌ അര്‍ര്‍്രാവൈലറ്റ്‌ എക്സറേ 2060
ദൈര്‍ഘ്യം (൬) 10 10? 19° osx10* 19° 105 10%
ആവുത്തി (Hz) |

10* 10° 1d? 105 10° 10$ 10

ചിത്രാ 8.6: വൈ&ദ)ത കാന്തിക വരീല്റദാജി (ന്വപെക്‌(ട)

a. റേഡിയോ തരംഗങ്ങള്‍ (Radio waves)

റേഡിയോ തരംഗങ്ങളുടെ ആവൃത്തി 3 KHz മുതല്‍ 3 GHz വരെയാണ്‌. റേഡിയോ
തരംഗങ്ങള്‍ (ALOT / ദീര്‍ഘ ദൂര സംപ്രേക്ഷണത്തിനു ഉപയോഗിക്കുന്നു. ഇത്തരം
തരംഗങ്ങളെ വളരെ എളുപ്പത്തില്‍ ഉല്‍പ്പാദിപ്പിക്കാം എന്നതിന്‌ പുറമെ അവയ്ക്കു
തടസ്സങ്ങള്‍ മറികടക്കുവാനുള്ള കഴിവും ഉണ്ട്‌. ഇക്കാരണത്താല്‍ വിവരവിനിമയ
ത്തിനായി എല്ലാ മേഖലയിലും (കെട്ടിടങ്ങള്‍ക്ക്‌ ഉള്ളിലും പുറത്തും) റേഡിയോ തരം
ഗങ്ങള്‍ ഉപയോഗിക്കുന്നു. കോഡ്ലസ്‌ ഫോണ്‍, AM, FM റേഡിയോ സംപ്രേക്ഷണം,
മൊബൈല്‍ ഫോണ്‍ തുടങ്ങിയവയില്‍ റേഡിയോ തരംഗങ്ങള്‍ ആണ്‌ ഉപയോഗി
ക്കുന്നത്‌.

റേഡിയോ തരംഗം —

ചിതം 8.7 : COWICOI MGM (alT@EMo

റേഡിയോ തരംഗങ്ങളുടെ വിവരവിനിമയ സവിശേഷതകള്‍

© എല്ലാ ദിശയിലേക്കും റേഡിയോ തരംഗങ്ങള്‍ക്ക്‌ സഞ്ചരിക്കാന്‍ കഴിവുള്ളതിനാല്‍,
സ്വീകരിക്കുവാനും പ്രസാരണം ചെയ്യുവാനും ഉപയോഗിക്കുന്ന ഉപകരണങ്ങള്‍
നേര്‍ക്കുനേര്‍ വരണമെന്നില്ല.

© വയര്‍ അധിഷ്ഠിത മാധ്യമവുമായി താരതമ്യം ചെയ്യുമ്പോള്‍ ഇതിന്‌ ചെലവ്‌
കുറവാണ്‌.
ഒന്നാം വര്‍ഷ കമ്പ്യൂട്ടര്‍ സയന്‍സ്‌ 11. കമ്പ്യുട്ടര്‍ ശൃംഖലകള്‍

൭ മിക്ക വസ്തുക്കള്‍ക്കുള്ളിലൂടെയും കടന്നു പോകുവാനുള്ള കഴിവുണ്ട്‌.

൭ പ്രസാരണത്തെ മോട്ടോറുകളും ഇല്രക്ടിക്ക്‌ ഉപകരണങ്ങളും സ്വാധീനിക്കാന്‍ സാധ്യ
തയുണ്ട്‌.

൭ സുരക്ഷിതത്വം കുറഞ്ഞ വിനിമയ രീതിയാണ്‌.

© റേഡിയോ തരംഗങ്ങളുടെ ഉപയോഗത്തിന്‌ ബന്ധപ്പെട്ട അധികാരികളുടെ അനു
വാദം ആവശ്യമാണ്‌.

അവുത്തിയ 10 10 10 WwW iW 10 10” 10

തരംഗദൈര്‍ഘ്യം 10° 10° 10° 107 310 1 10 10 10

ടെലിഫോണ്‍ ലൈന്‍ AM റേഡിയോ ത്ത

ഉപ്ര്രഹ ഡൌണ്‍ലിങ്ക്‌
ചി(തം 8.8: COWIED വിവരവിനിമയ MO1e(So

b. മൈക്രോ തരംഗങ്ങള്‍ (സുക്ഷമതരംഗം) (Micro waves)

മൈക്രോ രരംഗങ്ങളു പ്രസരണ സ്വീകരണ ആന്റിന പ്രസരണ/ സ്വീകരണ ആന്റിന
ടെ ആവൃത്തി 300 MHz
(0.3GHz) മുതല്‍ 300
GHz വരെയാണ്‌. മൈ
ക്രോ തരംഗങ്ങള്‍ നേര്‍
രത്ഖേയില്‍ സഞ്ചരിക്കു
ന്നതും ഖരപദാര്‍ഥ

ങ്ങള്‍ക്കുള്ളിലൂടെ ക

ടന്നു പോകാത്തതും
ആണ്‌. ആയതിനാല്‍ ട്രാന്‍സിവര്‍

വളരെ ഉയരം കൂടിയ ചിത്രം 8.9: മൈക്രോമവവ്‌ പ്രദ്ധരണം
ടവറുകള്‍ ഉണ്ടാക്കി

ട്രാന്‍സിവര്‍

അതിനു മുകളില്‍ മൈക്രോവേവ്‌ ആന്റിനകള്‍ ഉറപ്പിച്ചാണു ദീര്‍ഘ ദൂര പ്രസരണം
സാധ്യമാക്കുന്നത്‌. തരംഗങ്ങള്‍ നേര്‍രേഖയില്‍ സഞ്ചരിക്കുന്നതിനാല്‍ പ്രസരണം
ചെയ്യുന്നതിനും സ്വീകരിക്കുന്നതിനും ഉള്ള ആന്റിനകള്‍ പരസ്പരം അഭിമുഖമായാണ്‌
സ്ഥാപിച്ചിരിക്കുന്നത്‌. രണ്ടു മൈക്രോവേവ്‌ ടവറുകള്‍ തമ്മിലുള്ള അകലം നിശ്ചയി
ക്കുന്നത്‌ തരംഗങ്ങളുടെ ആവൃത്തിയും ടവറുകളുടെ ഉയരവും അനുസരിച്ചു്‌ ആണ്‌.
ചിത്രം 8.9 യില്‍ ഒരു മൈക്രോവേവ്‌ പ്രസരണ സംവിധാനത്തിന്റെ ഭാഗങ്ങള്‍ ചിത്രീകരി
ച്ചിരിക്കുന്നു.

ന്നാം വര്‍ഷ കമ്പ്യൂട്ടര്‍ സയന്‍സ്‌ 11. കമ്പ്യുട്ടര്‍ ശൃംഖലകള്‍

മ്ൈമമ്രകാവേവ്‌ സ്ംപ്രേക്ഷശണത്താസ്റെ്‌ സവിശേഷതകള്‍
© വയേര്‍ഡ്‌ മാധ്യവുമായി താരതമ്യം ചെയ്യുമ്പോള്‍ ഇതിന്‌ ചെലവ്‌ കുറവാണ്‌
൭ ദുഷ്കരമായ ഭൂപ്രദേശങ്ങളില്‍ സുഗമമായ വിവര വിനിമയം സാധ്യമാകുന്നു

© പ്രസാരണം നേര്‍രേഖയില്‍ ആയതിനാല്‍ പ്രസരണ ഉപകരണവും സ്വീകരണ
ഉപകരണവും അഭിമുഖമായിത്തന്നെ സ്ഥാപിക്കണം.

൦ ഇന്‍ഫ്രാറെഡ്‌ തരംഗങ്ങള്‍ (Infrared waves)

ഇന്‍ഫ്രാറെഡ്‌ തരംഗങ്ങള്‍ 300 | ~

GHz മുതല്‍ 400 THz വരെ é <y

ആവ്ൃത്തിയുള്ളവയാണ്‌ ഫ്രസ്വ [

ദൂര സംപ്രേക്ഷണത്തിനാണ്‌ ടി] ക
പ്‌

ഇത്‌ ഉപയോഗിക്കുന്നത്‌ (ഏക >

ദേശം Sm). ആപ്ലിക്കേഷനുകളെ ജം
നിയന്ത്രിക്കുവാനും വിലയിരു NG

ത്തുവാനും കൂടാതെ വിവിധ
തരത്തിലുള്ള വയര്‍ലെസ്സ്‌ വിവ

ചിത്രം 8.10 > ഉന്രാഥെഥ്‌ പ്രന്ധരണം
രവിനിമയത്തിനും ഇത്‌ ഉപയോ

ഗിക്കുന്നു.

വിവിധ ഗാര്‍ഹിക വിനോദ ഉപകരണങ്ങളിലെ റിമോട്ടുകള്‍, കോര്‍ഡ്ലെസ്‌ മൌസ്‌,
അനധികൃതമായി കടന്നുകയറുന്നത്‌ ്രദ്ധയില്‍പ്പെടുത്തുന്ന ഉപകരണങ്ങള്‍ തുട
ങ്ങിയവയില്‍ ഇന്‍ഫ്രാറെഡ്‌ തരംഗങ്ങള്‍ ഉപയോഗിക്കുന്നു. (ചിധ്രം 8.10 പരിശോ
ധിക്കുക)

ഇനി/;ഫാറെഡ്‌ തരംഗങ്ങളുടെ സവിശേഷതകശ്‌

൭ നേര്‍രേഖയിലുള്ള വിവര വിനിമയം നടക്കുന്നതിനാല്‍, വിവരങ്ങള്‍ ചോര്‍ത്ത
പ്പെടുന്നില്ല.

൭ രണ്ടു ഉപകരണങ്ങള്‍ക്ക്‌ മാത്രമേ ഒരു സമയത്തു വിവര വിനിമയം നടത്തുവാന്‍
സാധിക്കു.

© ഖര പദാര്‍ത്ഥങ്ങളെ മറികടക്കുവാനുള്ള കഴിവില്ല (റിമോട്ട്‌ കണ്‍ട്രോളിനും
ടീവിയ്ക്കും ഇടയില്‍നിന്നു കൊണ്ട്‌ റിമോട്ട്‌ കണ്‍ട്രോള്‍ പ്രവര്‍ത്തിക്കുന്നുണ്ടോ
എന്ന്‌ പരിശോധിക്കാവുന്നതാണ്‌).

© എത്തിപ്പെടാവുന്ന ദൂരം കൂടുന്തോറും തരംഗശേഷി കുറയുന്നു.
- ഒന്നാം വര്‍ഷ കമ്പ്യൂട്ടര്‍ സയന്‍സ്‌ 11. കമ്പ്യുട്ടര്‍ ശൃംഖലകള്‍

11.3.3 റേഡിയോ തരംഗങ്ങള്‍ ഉപയോഗിച്ചുള്ള വയര്‍രഹിത വിനിമയ സംവിധാനം
(Wireless communication technologies using radio waves)

a. 138300) (Bluetooth)
ee;

റേഡിയോ തരംഗങ്ങള്‍ ആണ ബ്ലൂടൂത്ത്‌ സം

വിധാനത്തില്‍ ഉപയോഗിക്കുന്നത്‌. ഇതിന്റെ 6.

ആവൃത്തി 2.402 GHz മുതല്‍ 2.480 GHz വരെ

യാണ്‌. ഫ്രസ്വ ദൂര വിവര വിനിമയത്തിന്‌ ഉപ

യോഗിക്കുന്ന വയര്‍ലസ്‌ ഉപകരണങ്ങളില്‍ 4

(ഏകദേശം 10൩) ഇത്‌ ഉപയോഗിക്കുന്നു. g ക്യു
സെല്‍ഫോണ്‍, ലാപ്ടോപ്‌, മൌസ്‌, കീബോര്‍ഡ്‌,

ടാബ്ലെറ്റുകള്‍, ഹെഡ്സെറ്റ്‌, ക്യാമറ, എന്നിവ *
ബ്ലൂടൂത്ത്‌ ഉപയോഗിക്കുന്ന ചില ഉപകരണ ] Bluetooth
ങ്ങള്‍ ആണ്‌. (ചിര്രം 8.11 പരിശോധിക്കുക.) ചിത്രം 87: ഖലു. ടുത്ത്‌ പ്രമം

്ലലുടുത്തിമ്റെ വിനിമയ സവിശേഷതകള്‍

© വിവരവിനിമയം നടത്തുവാന്‍ നേര്‍രേഖയില്‍ പ്രസരണ ഉപകരണങ്ങള്‍ സ്ഥാപി
ക്കേണ്ട ആവശ്യമില്ല.

© ബ്ലൂടൂത്ത്‌ ഉപയോഗിച്ച്‌ ഒരേ സമയം എട്ടു ഉപകരണങ്ങളേവരെ ബന്ധിപ്പിക്കാം.
© വേഗതകുറഞ്ഞ വിനിമയ മാര്‍ഗമാണ്‌ ഇത്‌ (1 Mbps വരെ).

b. വൈ-ഫൈ (Wi-Fi)

റേഡിയോ തരംഗങ്ങള്‍ ഉപയോഗിച്ച്‌ ആണ്‌ വൈ-ഫൈ ശൃംഖല പ്രവര്‍ത്തിക്കുന്നത്‌.
സെല്‍ഫോണ്‍, ടെലിവിഷന്‍, റേഡിയോ തുടങ്ങിയ ഉപകരണങ്ങളില്‍ വിവരങ്ങള്‍
കൈമാറ്റം ചെയ്യുവാന്‍ വൈ-ഫൈ ഉപയോഗിക്കുന്നു. വൈ-ഫൈ ശൃംഖലയില്‍ ഉപ
യോഗിക്കുന്ന റേഡിയോ തരംഗങ്ങളുടെ ആവൃത്തി 2.4GHz മുതല്‍ 5 5 GHz വരെയാണ്‌.
വയര്‍ലെസ്സ്‌ ശൃംഖലയില്‍ ഇരുദിശകളിലേക്കും ഉള്ള വിവരവിനിമയമാണ്‌ നടക്കുന്നത്‌.

കമ്പ്യൂട്ടറില്‍ ഉള്ള വയര്‍ലെസ്സ്‌ അഡാപ്റ്റര്‍ ഡാറ്റയെ റേഡിയോ തരംഗങ്ങള്‍ ആക്കി
മാറ്റുകയും അവയെ ഒരു ആന്റിന ഉപയോഗിച്ച്‌ സംപ്രേക്ഷണം ചെയ്യുകയും ചെയ്യുന്നു.
വയര്‍ലെസ്‌ റൂട്ടര്‍ ഇവയെ സ്വീകരിച്ച്‌ പരിവര്‍ത്തനം ചെയ്യുന്നു. പരിവര്‍ത്തനം ചെയു
പ്പെട്ട ഡാറ്റയെ ഇന്റര്‍നെറ്റിലേക്കോ, ശൃംഖലയിലേക്കോ ഒരു വയേര്‍ഡ്‌ ഈതര്‍നെറ്റ്‌
(ethernet) /വയര്‍ലെസ്സറ്‌ കണക്ഷന്‍ വഴി അയയ്ക്കപ്പെടുന്നു. ഇതുപോലെ ഇന്റര്‍നെറ്റ്‌
വഴി ലഭിക്കുന്ന ഡാറ്റ റൂട്ടര്‍ വഴികടന്നു പോകുകയും, അവയെ റേഡിയോ തരംഗങ്ങള്‍
ആക്കി ഒരു കമ്പൂട്ടറില്‍ ഉള്ള വയര്‍ലസ്സ്‌ ആഡാപ്റ്റര്‍ സ്വീകരിക്കുന്നത്‌ ചിത്രം 11.12 ല്‍
സൂചിപ്പിച്ചിരിക്കുന്നു. ഇപ്പോള്‍ ഈ സാങ്കേതികവിദ്യ ലാപ്ടോപ്പിലും ഡെസ്‌ക്ലോപ്പിലും
ഇന്റര്‍നെറ്റ്‌ കണക്ഷന്‍ പങ്കിടുവാന്‍ വ്യാപകമായി ഉപയോഗിക്കുന്നു.
ന്നാം വര്‍ഷ കമ്പ്യൂട്ടര്‍ സയന്‍സ്‌ 11. കമ്പ്യുട്ടര്‍ ശൃംഖലകള്‍

പി സി ഡെസ്‌ക്ടോഷ്‌ വൈഫൈ സംഭരണ
വൈഫൈ ഫോണ്‍ ഉപകരണം

നോട്ട്ബുക്ക്‌

ചിത്രം 8.12: ലൈ- ഫൈ പ്രദ്ധരണം

ഥറൈ-ഫൈ പ്രസ്രണത്താന്റെ്‌ സവിശേഷതകള്‍

ഭ ഉപകരണങ്ങള്‍ തമ്മിലുള്ള നേര്‍കാഴ്ച ഇവിടെ ആവശ്യമില്ല.

൭ സംപ്രേക്ഷണത്തിന്റെ വേഗത 54Mbps വരെയാണ്‌.

© ഒരേ സമയം കൂടുതല്‍ ഉപകരണങ്ങളെ വൈ ഫൈ ഉപയോഗിച്ച്‌ ബന്ധിപ്പിക്കാം.

e 114൩ (375 അടി) വരെയുള്ള വിനിമയത്തിന്‌ ഉപയോഗിക്കുന്നു.
c. വൈ-മാക്സ്‌ (Wi-MAX)

വേള്‍ഡ്‌ വൈഡ്‌ ഇന്ററോപ്പറബിളിറ്റി ഫോര്‍ മൈക്രോവേവ്‌ അക്സസ്‌ (വൈ-മാക്‌സിന്റെ
അടിസ്ഥാനം 802. 16൦ ആണ്‌. ബ്രോഡ്ബാന്‍ഡിന്റെയും വയര്‍ലെസ്സിന്റെയും സവി
ശേഷതകള്‍ സംയോജിപ്പിച്ചാണ്‌ വൈ-മാക്സിനു രൂപം കൊടുത്തിരിക്കുന്നത്‌. വൈ-
മാക്‌സിന്റെ ആവൃത്തി 20112 മുതല്‍ 11 GHz വരെയാണ്‌. വൈ-മാക്സ്‌ അതിവേഗ
ത്തിലും ദീര്‍ഘ ദൂരത്തിലും ഇന്റര്‍നെറ്റ്‌ ഉപയോഗം സാധ്യമാക്കുന്നു (നഗരത്തിലൂുട
നീളം). അടിസ്ഥാനതലത്തില്‍ വൈ AIA MIM) രണ്ട്‌ തരത്തിലുള്ള സജ്ജീകരണങ്ങള്‍
ആണ ഉള്ളത്‌. സേവനദാതാവ്‌ സാങ്കേതികവിദ്യ വിന്യസിക്കുവാന്‍ ആയി ഒരു പ്രത്യേക
മേഖലയില്‍ ഉപയോഗിച്ചിരിക്കുന്ന ഉപകരണങ്ങളും, ഉപഭോക്താവ്‌ സ്ഥാപിച്ചിരിക്കുന്ന
സ്വീകരണ ഉപകരണങ്ങളും ചേര്‍ന്നതാണ്‌ ബെയ്സ്‌ സ്റ്റേഷന്‍. വൈ-മാക്‌സ്‌ പ്രസര
ണത്തിന്‌ ഉപയോഗിക്കുന്ന അടിസ്ഥാന ഉപകരണങ്ങള്‍ ചുവടെ ചിത്രം 8.13 ചിര്രീകരി
ച്ചിരിക്കുന്നു.
ഒന്നാം വര്‍ഷ കമ്പ്യൂട്ടര്‍ സയന്‍സ്‌ 11. കമ്പ്യുട്ടര്‍ ശൃംഖലകള്‍

ഉന്റര്‍നെറ്റ്‌ ബാക്ക്‌ ബോണ്‍ ഉന്റര്‍നെറ്റ്‌

ഒപ്റ്റിക്കല്‍ കേബിര്‍

ഫോര്‍ട്ടബില്‍ ka റ (

[]

വ്യവസായശാല

ഹോംധ്യംഖല

ചിത്രം 6.72. ലൈ-മാക്ന്ധ്‌ ൯ംഭ്പ്രഷ്ണം
റൈഥമാക്സ്‌ സ്ംപ്രേക്ഷശണത്താ?ന്റെ സവിശേഷതകള്‍

© 100 കണക്കിന്‌ ഉപഭോക്താക്കള്‍ക്ക്‌ ഒരു സംപ്രേക്ഷണ നിലയവുമായി ബന്ധപ്പെ
ടുവാന്‍ കഴിയുന്നു.

൭ 45 KM പരിധിയില്‍ 70 Mbps വരെ വേഗത്തില്‍ വിവരവിനിമയം നടക്കുന്നു.

൭ ഉപകരണങ്ങള്‍ തമ്മില്‍ നേര്‍രേഖയില്‍ ഉള്ള വിനിമയം ഇവിടെ ആവശ്യമില്ല.
൭ സംപ്രേക്ഷണത്തെ മഴ, കാറ്റ്‌ തുടങ്ങിയ പ്രതികൂല കാലാവസ്ഥ തടസ്സപ്പെടുത്തുന്നു.
© അമിതമായി ഈര്‍ജം ഉപയോഗിക്കുന്നു.

൦ സ്ഥാപിക്കുവാനും പ്രവര്‍ത്തിപ്പിക്കുവാനും ഉള്ള ഉയര്‍ന്ന ചെലവ്‌.

0. ഉപഗ്രഹ സംപ്രേക്ഷണം (Satellite link)

ദീര്‍ഘദൂര വിനിമയത്തിന്‌ ഉപ്രഗഹശൃംഖല ഉപയോഗിച്ച്‌ ഡാറ്റാ കൈമാറ്റം ചെയ്യപ്പെ
ടുന്നു. സാധാരണയായി ഡാറ്റ നേര്‍രേഖയില്‍ ആണ്‌ സഞ്ചരിക്കുന്നത്‌, ആയതിനാല്‍
ഭൂമിയെ വലം വെച്ച്‌ വിദൂരതയില്‍ ഉള്ള ഉദ്ദേശ്യ ലക്ഷ്യത്തില്‍ എത്തുവാനുള്ള കഴിവ്‌
ഡാറ്റയ്ക്ക്‌ ഉണ്ടാവില്ല. ഇങ്ങനെയുള്ള സന്ദര്‍ഭങ്ങളില്‍ ഡാറ്റയെ ഭൂസ്ഥിര ഉപ്രഗഹങ്ങ
ളിലേക്ക്‌ അയയ്ക്കുകയും, ഉപ്ര്ഹം അടുത്ത ഉപ്ധ്രഹങ്ങളിലേക്കോ, വിദുരതയിലുള്ള
ലക്ഷ്യത്തിലേക്കോ എത്തിക്കുകയും ചെയ്യുന്നു. ഭൂമിയുടെ ഭ്രമണപഥത്തില്‍ അതേ
ദിശയിലും ഭ്രമണ വേഗതയിലും സഞ്ചരിക്കുന്ന ഉപ്രഗഹങ്ങളെ ഭൂസ്ഥിര ഉപ്രഗഹങ്ങള്‍
എന്ന്‌ പറയുന്നു. ഇത്തരത്തിലുള്ള ഉപ്രഗഹങ്ങള്‍ ഭൂമിക്ക്‌ മുകളില്‍ നിശ്ചിത സ്ഥാന
ത്തുതന്നെ സ്ഥിരമായി കാണപ്പെടുന്നു. ഈ ഉപ്രഗഹങ്ങളിലെ ഇലക്ര്രോണിക്‌ ഉപകര
ണങ്ങള്‍ ആയ ടദ്രാന്‍സ്പോണ്ടറുകള്‍ ഉപയോഗിച്ച്‌ ഡാറ്റ സ്വീകരിക്കുകയും, തരംഗങ്ങ
ളുടെ ശക്തി വര്‍ദ്ധിപ്പിച്ച്‌ (ആംപ്ലിഫൈയിങ്‌?), ഭൂമിയിലേക്ക്‌ പുനഃ സംപ്രേക്ഷണം
നടത്തുകയും ചെയ്യുന്നു.
ASS ന്നൊം വര്‍ഷ കമ്പ്യൂട്ടര്‍ സയന്‍സ്‌ 11. കമ്പൂട്ടര്‍ ശൃംഖലകള്‍

ഉപ്ര്രഹം
ഡാണ്‍ലിങ്ക്‌
അപ്ലിങ്ക്‌
AGHZ
6GHZ
സംപ്രേക്ഷണ സ്വീകരണ CARO
ക്രന്ദ്രം

ചിത്രം 8.14 : Dal(OaN നംഭ്പ്രഷ്ണം

ഭൂമിയില്‍ നിന്നും ഉപ്ധ്രഹത്തിലേക്കു തരംഗങ്ങളെ അയയ്ക്കുന്നതിനെ അപ്‌ ലിങ്ക;
എന്നും. ഉപ്രഗഹത്തില്‍ നിന്ന്‌ ഭൂമിയിലേക്ക്‌ സംപ്രേക്ഷണം ചെയ്യുന്നതിനെ ഡണ്‍
ENB, എന്നും പറയുന്നു. ഒന്നില്‍ കൂടുതല്‍ മൈക്രോ വേവ്‌ ആവര്‍ത്തി തരംഗങ്ങള്‍
ഉപ്രഗഹസംപ്രേക്ഷണത്തിനായി ഉപയോഗിക്കുന്നു. അപ്‌ ലിങ്കിനു വേണ്ടി
ഉപയോഗിക്കുന്ന ആവൃത്തി 1.6GHz മുതല്‍ 30.0 GHz വരെയും ഡൌണ്‍ ലിങ്കിനു
വേണ്ടിയുള്ളത്‌ 1.5 GHz മുതല്‍ 20 GHz വരെയുമാണ്‌. ഡൌണ്‍ ലിങ്കിന്റെ ആവൃത്തി
അപ്ലിങ്കിനേക്കാള്‍ കുറവായിരിക്കും.

ഉപ്രഗഹ സംവിധാനം ചെലവേറിയതാണ്‌, പക്ഷെ വളരെ കൂടിയ വ്യാപ്തിയില്‍ സേവ
നം ലഭ്യമാക്കുവാന്‍ കഴിയും. പല രാജ്യങ്ങളിലും സാധാരണ, സര്‍ക്കാരുകളുടെയോ,
സര്‍ക്കാര്‍ അംഗീകരിച്ചസ്ഥാപനങ്ങളുടെയോ നിയ്ന്ത്രണത്തിലായിരിക്കും വാര്‍ത്താ
വിനിമയ ഉപ്രഗഹങ്ങള്‍.

ഉപ്രഗഹ സംദ്പ്രക/ണെത്ത?മ്റെ സവിശേഷതകള്‍

൭ വളരെ വലിയ വ്യാപ്തിയില്‍ ഉപ്ര്രഹങ്ങള്‍ ഉപയോഗിച്ച്‌ വിവര വിനിമയം നടത്തു
വാന്‍ സാധിക്കുന്നു.

© ഈ സംവിധാനം ചെലവേറിയതാണ്‌.

© നിയമപരമായ അംഗീകാരവും അനുമതിയും ആവശ്യമാണ്‌.
- ഒന്നാം വര്‍ഷ കമ്പ്യൂട്ടര്‍ സയന്‍സ്‌ 11. കമ്പ്യുട്ടര്‍ ശൃംഖലകള്‍

ഇന്‍സ്റിറ്റ്യൂട്ട്‌ ഓഫ്‌ ഇല്രക്ടിക്കല്‍ ആന്‍ഡ്‌ ഇലക്ര്രോണിക്സ്‌ എഞ്ചിനീ

യേഴ്സ്‌ എന്ന സംഘടന നിര്‍വചിച്ച വയര്‍ലെസ്‌ ബ്രോഡ്ബാന്‍ഡ്‌
സാങ്കേതികതയുടെ അടിസ്ഥാന നിര്‍വചനമാണ്‌ IEEE 802.16൦ എന്നത്‌.
വയര്‍ലെസ്‌ മെട്രോപൊളിറ്റില്‍ ഏരിയ ശൃംഖലയുടെ അടിസ്ഥാന
നിര്‍വചനം നല്‍കുവാനാണ്‌ 1999 ല്‍ ഈ സംഘടന രൂപീകൃതമായത്‌.

സ്വയം പരിശോധിക്കാം

1. ഡാറ്റയുടെ വിനിമയ വ്യവസ്ഥയ്ക്ക്‌ ആവശ്യമായ ഘടകങ്ങള്‍ ഏവ?
2. വിദവങ്ങളുടെ പങ്കിടല്‍ (resource sharing) നിര്‍വചിക്കുക.

3. കമ്പ്യൂട്ടര്‍ ശൃംഖലയില്‍ ഉപയോഗിക്കുന്ന രണ്ടു വ്യത്യസ്ത വിനിമയ മാധ്യമങ്ങള്‍
ഏതൊക്കെ?

4. UTP/STP േബിളിനെ കമ്പ്യൂട്ടറുമായി ബന്ധിഭിക്കുവാന്‍ ഉപയോഗിക്കുന്ന കണക്ടര്‍
ഏത്‌?

5. വളരെ ദൂരത്തേക്ക്‌ പ്രകാശ തരംഗങ്ങള്‍ ഉപയോഗിച്ച്‌ ഡാറ്റ തരംഗങ്ങള്‍ അയക്കുവാ
നുള്ള ഗൈഡ്‌ മാധ്യമമാണ്‌

6. AM/FM റേഡിയോ സംപ്രേക്ഷണത്തിനും മൊബൈലിലും വിനിമയത്തിനായി
ഉപയോഗിക്കുന്ന മാധ്യമമാണ്‌

T ടീവിയിലെ റിമോട്ട്‌ കണ്‍ട്രോള്‍, മാസ്‌ തുടങ്ങിയവയില്‍ ഉപയോഗിക്കുന്ന മാധ്യമമാണ്‌

8. സംപ്പ്രേക്ഷണ ഉപകരണങ്ങള്‍ തമ്മില്‍ നേര്‍രേഖ കാഴ്ച ആവശ്യമില്ലാത്ത ഹ്രസ്വദൂര
വിനിമയ സാങ്കേതികവിദ്യയാണ്‌

9 ചെലവേറിയതും എന്നാല്‍ 203 വയര്‍ലെസ്സ്‌ സാങ്കേതികവിദ്യയേക്കാള്‍ കൂടുതല്‍
വ്യാപ്തിയില്‍ സേവനം നടത്തുവാന്‍ കഴിയുന്നതുമായ വിവരവിനിമയ
സാങ്കേതികവിദ്യയാണ്‌

|
11.4 ഡാറ്റ വിനിമയ ഉപകരണങ്ങള്‍ (Data communication devices)

കമ്പ്യൂട്ടറും വിനിമയ മാധ്യമവും തമ്മിലുള്ള സമ്പര്‍ക്കമുഖ (interface) മായി ഒരു
ഡാറ്റ വിനിമയ ഉപകരണം പ്രവര്‍ത്തിക്കുന്നു. ഈ ഉപകരണങ്ങള്‍ ഉപയോഗിച്ച്‌ ഡാറ്റ
തരംഗങ്ങളെ സംപ്രേക്ഷണം ചെയ്യുവാനും, സ്വീകരിക്കുവാനും, ശക്തി കൂട്ടുവാനും
വിവിധ വിനിമയ മാധ്യമ ശൃംഖലകള്‍ ഉപയോഗിച്ച്‌ വഴിതിരിച്ചു വിടുവാനും കഴിയുന്നു

11.4.1 നെറ്റ്വര്‍ക്ക്‌ ഇന്റര്‍ഫേസ്‌ കാര്‍ഡ്‌ (Network Interface Card (NIC))

കമ്പ്യൂട്ടര്‍ ശൃംഖലയിലേക്ക്‌ ഒരു കമ്പ്യൂട്ടറിനെ ബന്ധിപ്പിക്കുവാനും വിവര വിനിമയം
നടത്തുവാനും പ്രാപ്തമാക്കുന്ന ഉപകരണമാണ്‌ NIC. കമ്പ്യൂട്ടറിനും ശൃംഖലയ്ക്കും
11. കമ്പ്യൂട്ടര്‍ ശൃംഖലകള്‍

ഇടയിലുള്ള ഹാര്‍ഡ്വെയര്‍ ഇന്റര്‍ഫേസ്‌ ഉപകരണമായി ഇത്‌ പ്രവര്‍ത്തിക്കുന്നു. ഇത്‌
കമ്പ്യൂട്ടറിലെ പ്രത്യേക ഭാഗമായോ മദര്‍ബോര്‍ഡിന്റെ ഭാഗമായോ സ്ഥാപിച്ചിരിക്കുന്നു.
കമ്പ്യൂട്ടര്‍ ശൃംഖലയിലേക്കു ഡാറ്റയെ സജ്ജമാക്കുവാനും അയയ്ക്കുവാനും, സ്വീകരി
ക്കുവാനും നിയ്യ്ത്രിക്കുവാനും NIC യ്ക്കു കഴിയും. ഡാറ്റയെ നിയ്രന്രിത രൂപത്തിലുള്ള
ഘടകങ്ങളാക്കി മാറ്റുകയും, പ്രൊട്ടോക്കോളിനു വിധേയമായി പരിവര്‍ത്തനപ്പെടുത്തി,
അയയ്ക്കേണ്ട മാധ്യമത്തിലേക്ക്‌, മേല്‍വിലാസം തിരിച്ചറിയുവാനുള്ള കഴിവുണ്ടാക്കി
നല്‍കുകയും ചെയ്യുന്നു.

ചിത്രം. 8.15 (a) : NIC കാര്‌ ചിത്രം. 8.15 (b) : aogagy’ NIC കാര്‍ഡ്‌

ചിത്രം 8.15(a), 8.5(b) എന്നിവയില്‍ യഥാക്രമം ഒരു NIC കാര്‍ഡിന്റെയും ഒരു വയര്‍
ലെസ്സ്‌ NIC കാര്‍ഡിന്റെയും ചിത്രങ്ങള്‍ കൊടുത്തിരിക്കുന്നു. ചില NIC കാര്‍ഡുകള്‍
കേബിള്‍ ഉപയോഗിച്ചും (Ethernet), ചിലതു കേബിള്‍ ഇല്ലാതെയും (Wi-Fi) പ്രവര്‍
ത്തിക്കുന്നു. കേബിള്‍ ശൃംഖലയിലേക്കുള്ള ജാക്കുകള്‍ ആണ്‌ ഈതര്‍നെറ്റ്‌ NIC യില്‍
ഉള്ളത്‌. എന്നാല്‍ വയര്‍രഹിതമായ വിനിമയത്തിനുള്ള ബില്‍റ്റ്‌-ഇന്‍-(്രാന്‍സ്മിറ്ററുകളും
റീസിവറുകളും ആന്റിനയുമാണ്‌ വൈ-ഫൈ NIC യില്‍ ഉള്ളത്‌. NIC യ്ക്ക്‌ 10105
വേഗതയില്‍ ഡാറ്റ കൈമാറ്റം ചെയ്യുവാന്‍ കഴിയുന്നു.

11.4.2 ഹബ്‌ (Hub)

ഒരു വയേര്‍ഡ്‌ ശ്യഖലയില്‍ ഉള്‍പ്പെട്ടിരിക്കുന്ന
കമ്പ്യൂട്ടറുകളെയും ഉപകരണങ്ങളെയും പരസ്പരം
ബന്ധിപ്പിക്കുവാന്‍ ഉപയോഗിക്കുന്ന ഉപകരണമാണ്‌
ഹബ്‌. ചെറുതും ലളിതവും നിഷ്ക്രിയവും വിലകുറ

ഞ്ഞതുമായ ഉപകരണമാണ്‌ ഇത്‌. ചിത്രം 8.16 പരി
ശോധിക്കുക. കമ്പ്യൂട്ടറുകളെ ഹബിലെ പോര്‍ട്ട്‌ വഴി
ഈതര്‍നെറ്റ്‌ കേബിള്‍ ഉപയോഗിച്ച്‌ ബന്ധിപ്പിക്കുന്നു. ഹബിലേക്കു വരുന്ന വിവരങ്ങ
ളുടെ പകര്‍പ്പുകള്‍ പ്രസ്തുത ശൃംഖലയില്‍ ഉള്‍പ്പെട്ടിരിക്കുന്ന എല്ലാ കമ്പ്യൂട്ടറുകളി
ലേക്കും കൈമാറുകയാണ്‌ ഹബ്‌ ചെയ്യുന്നത്‌. ഓരോ കമ്പ്യൂട്ടറിനും അവരവരുടെ

ചിതം 8.16 : ഹബ്‌

ഡാറ്റ പാക്കറ്റുകള്‍ തിരിച്ചറിയുവാനുള്ള ബാധ്യതയുണ്ട്‌. ഒരു കമ്പ്യൂട്ടറിനെ ഉദ്ദേശിച്ച്‌
അയച്ച പാക്കറ്റുകള്‍ അവ തന്നെ സ്വീകരിക്കേണ്ടതും മറ്റു കമ്പ്യൂട്ടറുകള്‍ അത്‌ തിരസ്‌
കരിക്കേണ്ടതും ആണ്‌. കമ്പ്യൂട്ടര്‍ ശൃംഖലയിലെ എല്ലാ ഉപകരണങ്ങളിലേക്കും എല്ലാ
ഡാറ്റയും അയയ്ക്കുന്നതിനാല്‍ ശൃംഖല തിരക്കേറിയതായിത്തീരുകയും ഡാറ്റ കൈമാ
ഒന്നാം വര്‍ഷ കമ്പ്യൂട്ടര്‍ സയന്‍സ്‌ 11. കമ്പ്യുട്ടര്‍ ശൃംഖലകള്‍

റുവാനുള്ള ബാൻഡ്‌വിഡ്ത്‌ കുറയുകയും ചെയ്യുന്നു എന്നതാണ്‌ ഹബിന്റെ പ്രധാന
പോരായ്മ.

11.4.3 സ്വിച്ച്‌ (Switch)

നിരവധി കമ്പ്യൂട്ടറുകളെ പരസ്പരം ബന്ധിപ്പിച്ചു ഒരു ശൃംഖല രൂപീകരിക്കുവാന്‍

ശേഷിയുള്ള നിര്‍മ്മിത ബുദ്ധിയോടുകൂടിയ ഉപകരണമാണ്‌ സ്വിച്ച്‌. ഹബിനെക്കാള്‍
ഉയര്‍ന്ന പ്രവര്‍ത്ത ശേഷിയുള്ള ഉപകരണമാണ്‌ സ്പിച്ച്‌. കാഴ്ചയില്‍ ഹബിനോട്‌
അടുത്ത സാമ്യമുണ്ട്‌. എന്നാല്‍ സ്വിച്ച്‌ ഡാറ്റയ്ക്ക്‌ എത്തിച്ചേരേണ്ട ലക്ഷ്യ സ്ഥാനം
കൃത്യമായി ഉറപ്പു വരുത്തുകയും, ഡാറ്റ പാക്കറ്റുകള്‍ ഉദ്ദേശിച്ച സ്ഥാനത്തേയ്ക്ക്‌ മാത്രം
അയയ്ക്കുകയും ചെയ്യുന്നു. ശൃംഖലയില്‍ ബന്ധിപ്പിച്ചിട്ടുള്ള എല്ലാ ഉപകരണങ്ങളു
ടെയും വിലാസം പട്ടികയായി സംഭരിച്ചു വെയ്ക്കുന്നതിനാലാണ്‌ സ്വിച്ചിനു ഇങ്ങനെ
പ്രവര്‍ത്തിക്കുവാന്‍ കഴിയുന്നത്‌. ശൃംഖലയിലെ ഒരു ഉപകരണത്തിലേക്കു ഡാറ്റ അയ
യ്ക്കുവാനായി, സ്വിച്ച്‌ ഈ പാക്കറ്റിലെ വിലാസം മുന്‍കൂട്ടി ശേഖരിച്ച വിലാസങ്ങ
ളുമായി താരതമ്യം ചെയ്യുന്നു, വിലാസം കണ്ടെത്തിയാല്‍ ലക്ഷ്യ സ്ഥാനത്തുള്ള
ഉപകരണത്തിലേക്കു മാര്രം ഡാറ്റ അയയ്ക്കുന്നു. വളരെ തിരക്ക്‌ കൂടിയ കമ്പ്യൂട്ടര്‍
ശൃംഖലയില്‍ ഫബ്ബിനെക്കാള്‍ നന്നായി സ്വിച്ച്‌ പ്രവര്‍ത്തിക്കുന്നു. കാരണം വളരെ
കുറഞ്ഞ അളവില്‍ സന്ദേശങ്ങള്‍ അയയ്ക്കുന്നതിനാല്‍ ശൃംഖലയില്‍ തിരക്ക്‌
ഉണ്ടാകുന്നില്ല.

11.4.4 റിചീറ്റര്‍ (Repeater) i

വിനിമയമാധ്യമത്തിലൂടെ വരുന്ന വൈദ്യുത കാന്തിക പ്രകാശ
തരംഗങ്ങളെ ശക്തിപ്പെടുത്തുന്ന ഉപകരണമാണ്‌ റിപീറ്റര്‍.
(allo 8.17) വയേര്‍ഡ്‌ മാധ്യമത്തിലൂടെയോ വയര്‍ലെസ്സിലൂ
ടെയോ ഡാറ്റയ്ക്കു പരിമിതമായ ദൂരത്തേക്ക്‌ മാത്രമേ ശക്തി
ക്ഷയിക്കാതെ സഞ്ചരിക്കുവാന്‍ കഴിയു. ഇതിനു കാരണം നോ

GBA ആണ്‌. റിപീറ്റര്‍ ഇങ്ങനെ വരുന്ന തരംഗങ്ങളെ സ്വീകരിച്ചു ചിത്രം 8.17:
ശക്തി കൂട്ടി ലക്ഷ്യ സ്ഥാനത്തേയ്ക്ക്‌ പുനഃസംപ്രേക്ഷണം വമരലത്ത്‌ chef
നടത്തുന്നു.

11.4.5 ബ്രിഡ്ജ്‌ (Bridge)

ഒരു കമ്പ്യൂട്ടര്‍ ശൃംഖലയെ പല വിഭാഗങ്ങളാക്കി വേര്‍തിരിക്കുവാന്‍ ഉപയോഗിക്കുന്ന
ഉപകരണമാണ്‌ ബ്രിഡ്ജ്‌. നിലവിലുള്ള ശൃംഖലയെ പല വിഭാഗങ്ങളായി തരംതിരി
ക്കുകയും ഇവയെ ബ്രിഡ്ജ്‌ ഉപയോഗിച്ച്‌ ബന്ധിപ്പിക്കുകയും ചെയ്യുന്നു. ശൃംഖലയി
ലുള്ള ്രാഫിക്‌ കുറയ്ക്കുവാന്‍ ഇത്‌ സഹായിക്കുന്നു. ഒരു (MMHG ഡാറ്റ പാക്ക
റ്റുകള്‍ എത്തുമ്പോള്‍, അതിലെ മേല്‍വിലാസം പരിശോധിച്ചു (്രിഡ്ജിന്റെ ഏതു
ഭാഗത്തെ ഇവ പ്രതിനിധാനം ചെയ്യുന്നു എന്ന്‌ കണ്ടുപിടിക്കുന്ന (ഇതേ ഭാഗത്തേക്കുള്ള
നോഡുകളിലേക്കോ അതോ മറുഭാഗത്തേയ്ക്കോ എന്ന്‌). ഒരു മേഖലയെ പ്രതിനിധാനം

(5 ഒന്നാം വര്‍ഷ കമ്പ്യൂട്ടര്‍ സയന്‍സ്‌ 11. കമ്പ്യൂട്ടര്‍ ശ്യംഖലകള്‍

ചെയ്യുന്ന ഡാറ്റ പാക്കറ്റുകളെ മാത്രം ആ ഭാഗത്തേയ്ക്ക്‌ ്രിഡ്ജ്‌ കടത്തി വിടുന്നു.
ബാക്കി ഉള്ളവ ഒഴിവാക്കുന്നു. (ബ്രിഡ്ജ്‌ വഴി കടന്നു പോകുന്ന പാക്കറ്റുകള്‍ മറു ഭാഗ
ത്തുള്ള എല്ലാ നോഡുകളിലേക്കും പ്രക്ഷേപണം ചെയ്യുകയും, ലക്ഷ്യത്തിലുള്ള നോ
ഡുകള്‍ മാ്രതം അവ സ്വീകരിക്കുകയും ചെയ്യുന്നു. ചിര്രം 8.18 പ്രിഡ്ജിന്റെ ധര്‍മ്മ
ങ്ങള്‍ വിശദമാക്കുന്നു.

4503608 കേബിര്‍ ഉപ | നെറ്റ്വര്‍ക്ക്‌ വയര്‍ലസ്‌
CMI a! സ്വിച്ചിലേക്ക്‌ ബന്ധി ബ്രിഡ്ജ്‌ ആക്സസ്‌ പോയിന്റ്‌

ഷിക്കുന്നു.

ചിതം 8.18: (ബ്രിഡ്ജ്‌

11.4.6 റൂട്ടര്‍ (Router)

ഒരേ വിഭാഗത്തില്‍പ്പെട്ടതും ഒരേ പോലുള്ള പെരുമാറ്റ ചട്ടങ്ങള്‍ ഉള്ളതുമായ രണ്ടു
ശൃംഖലകളെ ബന്ധിപ്പിക്കുന്ന ഉപകരണമാണ്‌ റൂട്ടര്‍. ഡാറ്റയ്ക്ക്‌ സഞ്ചരിക്കുവാനാവ
ശ്യമായ ഉചിതമായ പാത കണ്ടെത്തുന്നതിനും അങ്ങനെ ശൃംഖലയിലെ ട്രാഫിക്കിന്റെ
അളവ്‌ കുറയ്ക്കുന്നതിനും ഇവയ്ക്കു കഴിയുന്നു. ര്രിഡ്ജിന്റെ പ്രവര്‍ത്തന രീതികളോട്‌
ഇവയ്ക്കു സാമ്യം ഉണ്ടെങ്കിലും അവയേക്കാള്‍ കഴിവ്‌ ഇതിനുണ്ട്‌. റൂട്ടറിനു ഉപകര
ണത്തിന്റെ വിലാസവും, ശൃംഖലയുടെ വിലാസവും പരിശോധിക്കുവാനുള്ള കഴിവു
ള്ളതോടൊപ്പം അല്‍ഗോരിതം ഉപയോഗിച്ച്‌ ഏറ്റവും ഉചിതമായ പാതയിലൂടെ പാക്ക
റ്റുകളെ ലക്ഷ്യ സ്ഥാനത്ത്‌ എത്തിക്കുവാനും സാധിക്കുന്നു. ചിത്രം 8.19 റൂട്ടറിന്റെ ധര്‍മം
വിശദമാക്കുന്നു.
ഒന്നാം വര്‍ഷ കമ്പ്യൂട്ടര്‍ സയന്‍സ്‌ 11. കമ്പ്യുട്ടര്‍ ശൃംഖലകള്‍

റ
ഇന്റര്‍നെറ്റ്‌

2൧൭1./ കേബിള്‍
മോഡം
102185
Ow.192.166.1.1
നെറ്റ്വര്‍ക്ക്‌ നെറ്റ്വര്‍ക്ക്‌
സ്വിച്ച്‌ സ്വിച്ച്‌

10.10.10.2 192,168.20.100
10.10,10,24% 111111] മോ 1522462228

alo 8.19: 0356
11.4.7 ഗേറ്റ്വേ (Gateway)

വിവിധ തരത്തിലും പ്രൊട്ടോക്കോളിലും പ്രവര്‍ത്തിക്കുന്ന ശൃംഖലകളെ ബന്ധിപ്പിക്കു
വാന്‍ ഗേറ്റ്വേ ഉപയോഗിക്കുന്നു. ചിത്രം 8.20 പരിശോധിക്കുക. ഒരു തരത്തിലുള്ള
പ്രൊട്ടോക്കോളിനെ മറ്റൊരു തരത്തിലേക്ക്‌ വിവര്‍ത്തനം ചെയ്യുവാനും ഇവയ്ക്കു
കഴിയുന്നു. ഒരു ശൃംഖലയില്‍ നിന്ന്‌ മറ്റൊരു ശൃംഖലയിലേക്കുള്ള പ്രവേശന കവാ
SAID ഇത്‌ പ്രവര്‍ത്തിക്കുന്നു. റൂട്ടറിനു സമാനമായ പ്രവര്‍ത്തനരീതിയാണ്‌ ഇവയ്ക്കും
ഉള്ളത്‌. ഉപകരണത്തിന്റെയും ശൃംഖലയുടെയും വിലാസം പരിശോധിക്കുകയും അല്‍
ഗോരിതത്തിന്റെ സഹായത്താല്‍ ഉചിതമായ പാത സ്വീകരിച്ചു പാക്കറ്റുകളെ ലക്ഷ്യ
സ്ഥാനത്തു എത്തിക്കുകയും ചെയ്യുന്നു. വ്യത്യ
സ്തമായ പ്രൊട്ടോക്കോളുള്ള ശൃംഖലകള്‍
തമ്മില്‍ ഒരു പരസ്പരധാരണ ഉണ്ടായിരിക്ക
ണം. ഒരു ഗേറ്റ്വേയ്ക്ക്‌ ശൃംഖലയുടെ വിലാസ
ഘടനയെ കുറിച്ച്‌ ശരിയായ ധാരണ ഉള്ളതി
നാല്‍ തടസ്സം ഇല്ലാതെ തുടര്‍ച്ചയായി പാക്കറ്റു
കളെ ശൃംഖലയിലെ നോഡുകള്‍ക്കിടയില്‍
കൈമാറ്റം ചെയ്യുവാനുള്ള കഴിവുണ്ട്‌.

ചിത്രം 620 . ഗേറ്റ്‌ വേ

11.5 ഡാറ്റ ടെര്‍മിനല്‍ ഉപകരണങ്ങള്‍ (Data Terminal Equipments (DTE))

കമ്പ്യൂട്ടറിലേക്കും പുറത്തേയ്ക്കും ഉള്ള ഡാറ്റയുടെ ഒഴുക്കിനെ നിയന്ത്രിക്കുന്ന ഉപകര
ണമാണ്‌ ഡാറ്റ ടെര്‍മിനല്‍ ഉപകരണങ്ങള്‍ (Data Terminal Equipments (DTE)). ഈ ഉപകര
ണങ്ങള്‍ ടെലികമ്മ്യൂണിക്കേഷന്‍ ലിങ്കുമായി സംപ്രേക്ഷണ മാധ്യമത്തിന്റെ അഗ്ര
ഭാഗത്തു ബന്ധിപ്പിച്ചിരിക്കുന്നു. പൊതുവായി ഉപയോഗിക്കുന്ന 211: ഉപകരണങ്ങളായ
മോഡം, മള്‍ട്ടിപ്പെക്സര്‍ എന്നിവയെ കുറിച്ച്‌ ഇവിടെ ചര്‍ച്ച ചെയ്യുന്നു.
ന്നാം വര്‍ഷ കമ്പ്യൂട്ടര്‍ സയന്‍സ്‌ 11. കമ്പ്യുട്ടര്‍ ശൃംഖലകള്‍

11.51. മോഡം (Modem)

ടെലിഫോണ്‍ ലൈന്‍ ഉപയോഗിച്ച്‌ കമ്പ്യൂട്ടറുകള്‍ തമ്മില്‍ വിനിമയം നടത്തുവാന്‍
സഹായിക്കുന്ന ഇലക്ട്രോണിക്‌ ഉപകരണമാണ്‌ മോഡം. (ചിത്രം 8.21). മോഡുലേറ്റര്‍
(Modulator) Ww] മോഡുലേറ്റര്‍ (Demodulator) എന്നതിന്റെ ചുരുക്കമാണ്‌ മോഡം (Modem).
കമ്പ്യൂട്ടറില്‍ നിന്ന്‌ സ്വീകരിക്കുന്ന ഡിജിറ്റല്‍ സിഗ്നലിനെ ടെലിഫോണ്‍ ലൈനിലൂടെ
കടന്നുപോകുവാനായി അനലോഗ്‌ സിഗ്നലാക്കി മാറ്റുന്നു (Modulation). അതോടൊപ്പം
ടെലിഫോണ്‍ ലൈന്‍ വഴിവരുന്ന അനലോഗ്‌ സിഗ്നലിനെ ഡിജിറ്റിലായി പരിവര്‍
ത്തനം ചെയ്തത്‌ കംപ്യൂട്ടറിലേക്കു നല്‍കുന്നു (Demodulation). ടെലിഫോണ്‍ ലൈന്‍
വഴി വിവരങ്ങള്‍ അയയ്ക്കുകയും സ്വീകരിക്കുകയും ചെയ്യുന്നതിന്റെ വേഗതയെ അടി
സ്ഥാനമാക്കിയാണ്‌ മോഡത്തിന്റെ വേഗത നിര്‍ണ്ണയിക്കുന്നത്‌. മോഡത്തിന്റെ വേഗത
അളക്കുന്നത്‌ ബിറ്റ്സ്‌/സെക്കന്റ്‌ (bits / second) ആണ്‌.

T

അനലോഗ്‌

അനലോഗ്‌

ചിത്രം 8.21 : C2IWo ഉപതോഗിച്ചുള്ള ആശയവിനിമയം

11.5.2 മള്‍ട്ടിപ്പെക്സര്‍,/ഡി മള്‍ട്ടിപ്പെക്സര്‍ (Multiplexer/Demultiplexer)

ഒറ്റ കേബിള്‍ ഉപയോഗിച്ച്‌ 200 ഓ അതിലധികമോ ചാനലുകളെ കൈകാര്യം ചെയ്യു
ന്നത്‌ നിങ്ങളെ എപ്പോഴെങ്കിലും അതിശയിപ്പിച്ചിട്ടുണ്ടോ? ഇതിനെയാണ്‌ മള്‍ട്ടിപ്പെക്‌
സിങ്‌ എന്ന്‌ പറയുന്നത്‌. ഇതേ രീതിയിലാണ്‌ ശൃംഖലയിലുള്ള ഡാറ്റ കൈമാറ്റവും.
ഭാതിക മാധ്യമത്തിലൂടെ ഒന്നിലേറെ തരംഗങ്ങളെ സംയോജിപ്പിച്ച്‌ സങ്കീര്‍ണതയേറിയ
ഒറ്റ തരംഗമാക്കി മാറ്റി ഒരേ സമയം വിടുന്നതിനെ മള്‍ട്ടിപ്ളെക്സിങ്‌ എന്നും, മറുഭാഗത്ത്‌
ഈ തരംഗത്തെ വിഘടിപ്പിച്ചു പ്രത്യേക തരംഗങ്ങളാക്കി മാറ്റുന്നതിനെ ഡി-മള്‍ട്ടിപ്ല
ക്സിങ്‌ എന്നും പറയുന്നു. ഭാഭതിക മാധ്യമത്തെ മള്‍ട്ടിപ്ളെക്സിങ്‌ വിവിധ ഭാഗങ്ങ
ളാക്കി മാറ്റുന്നു. ഇതിനെ ഫ്രീക്വന്‍സി ചാനല്‍ എന്ന്‌ പറയുന്നു.

മള്‍ട്ടിപ്പെക്സര്‍ വിവിധ ഉറവിടത്തില്‍ നിന്നുള്ള തരംഗങ്ങളെ സംയോജിപ്പിച്ച്‌, മാധ്യ
മത്തിന്റെ വിവിധ ചാനലുകള്‍ വഴി അയയ്ക്കുന്നു. സംയോജിപ്പിച്ച തരംഗങ്ങള്‍ മാധ്യ
മത്തിലൂടെ ഒരേ സമയത്തു സഞ്ചരിക്കുന്നു. ലക്ഷ്യ സ്ഥാനത്തു ഇവയെ വിഭജിച്ച്‌ വെ
വ്വേറെ തരംഗങ്ങളാക്കി, ഓരോ തരംഗത്തിനും എത്തേണ്ട സ്ഥലത്തേയ്ക്ക്‌ അയയ്‌
ക്കുന്നു. ചിത്രം 8.22 മള്‍ട്ടിപ്ലെക്സറിന്റെയും ഡി-മള്‍ട്ടിപ്പെക്സറിന്റെയും പ്രവര്‍ത്തനം
വിവരിക്കുന്നു.
അ © ഒന്നാം വര്‍ഷ കമ്പ്യൂട്ടര്‍ സയന്‍സ്‌ 11. കമ്പ്യൂട്ടര്‍ Monee

അതിവേഗ ആശയവിനിമയ പാത

> ഉള്‍ട്ടിപ്പക്സര്‍;/ഡിമള്‍ട്ടിപ്പക്സര്‍ ഉള്‍ട്ടിപ്പക്സര്‍;ഡിമള്‍ട്ടിപ്പക്സര്‍

ചിത്രം 8.22 : 200S)g J MC/W1- ഥശ്ടിപ്ലക്‌സ്ധര്‍

പത്തു നോഡുകള്‍ ഉള്ള ഒരു ചെറിയ കമ്പ്യൂട്ടര്‍ ശൃംഖല നിര്‍മിക്കുവാന്‍
ആവശ്യമായ ഉപകരണങ്ങളുടെയും മാധ്യമങ്ങളുടെയും പട്ടിക

തയ്യാറാക്കുക .

സ്വയം പരിശോധിക്കാം

1. ഹബും സ്വിച്ചും തമ്മില്‍ താരതമ്യം ചെയ്യുക.
2. റിപീറുററിന്റെ ആവശ്യകത എന്ത്‌?
3. ഒരേപോലുള്ള രണ്ടു ശൃംഖലകളെ തമില്‍ ബന്ധിരിക്കുന്ന ഉപകരണമാണ്‌.

4. റൂട്ടറും ബ്രിഡ്ജും തമ്മിലുള്ള വൃത്യാസം എന്താണ്‌?

5. വ്ൃത്വസ്ത പ്രൊട്ടോക്കോള്‍ ഉള്ള രണ്ടു വ്യത്യസ്ത ശൃംഖലകളെ പരസ്പരം ബന്ധി
ഷിക്കുന്ന ഉപകരണമാണ്‌

6. ടെലിഫോണ്‍ ലൈനിലൂടെ രണ്ടു കമ്പ്യൂട്ടറുകള്‍ തമില്‍ വിവരവിനിമയം നടത്തുവാന്‍
ഉപയോഗിക്കുന്ന ഉലക്രോണിക്‌ ഉപകരണമാണ്‌

11.6 നെറ്റ്വര്‍ക്ക്‌ ടോഷോളജികള്‍ (Network topologies)

പത്തു കമ്പ്യൂട്ടറുകള്‍ അടങ്ങിയ ഒരു ശൃംഖല രൂപകല്‍പ്പന ചെയ്യണമെന്ന്‌ കരുതുക.
ഏതൊക്കെ വിധത്തില്‍ നമുക്ക്‌ ഇവയെ പരസ്പരം ബന്ധിപ്പിക്കാം? ലഭ്യമായ മാദ്ധ്യ
മങ്ങളും ചില നിബന്ധനകളും വഴി നമുക്ക്‌ ഇവയെ പല വിധത്തില്‍ ബന്ധിപ്പിക്കാം
ഭാതികമായി കമ്പ്യൂട്ടറുകളെ പരസ്പരം ബന്ധിപ്പിച്ചു ശൃംഖല രൂപ കല്‍പ്പന ചെയ്യുന്ന
രീതിയെ ടോപ്പോളജി എന്ന്‌ പറയുന്നു. ബസ്‌, റിങ്‌, സ്റ്റാര്‍, മെഷ്‌ എന്നിവയാണ്‌
പ്രധാന ടോപ്പോളജികള്‍.
(5 ഒന്നാം വര്‍ഷ കമ്പ്യൂട്ടര്‍ സയന്‍സ്‌ 11. കമ്പ്യൂട്ടര്‍ ശ്യംഖലകള്‍

11.6.1 ബസ്‌ ടോച്പോളജി (Bus topology)

ബസ്‌ ടോപ്പോളജിയില്‍ (ചിത്രം 11.23) പ്രധാന കേബിള്‍ ആയ ബസിലേയ്ക്ക്‌ നോ
ഡുകളെ ബന്ധിപ്പിച്ചിരിക്കുന്നു. ഒരു നോഡിനു ഡാറ്റ അയയ്ക്കണമെങ്കില്‍, അത്‌
ബസിലേയ്ക്ക്‌ അയയ്ക്കുന്നു. ബസിന്റെ എല്ലാ ഭാഗത്തും ഈ ഡാറ്റ എത്തിച്ചേരുന്നു.
എല്ലാ നോഡുകളും ബസില്‍ വരുന്ന ഡാറ്റയെ പരിശോധിക്കുന്നു. ഏതു നോഡിലേ
ക്കാണോ ഡാറ്റ അയച്ചിരിക്കുന്നത്‌ അത്‌ ഡാറ്റയെ സ്വീകരിക്കുന്നു. ബസിന്റെ അഗ്രഭാ
ഗങ്ങളില്‍ ഒരു ചെറിയ ഉപകരണമായ ടെര്‍മിനേറ്റര്‍ ഘടിപ്പിച്ചിരിക്കുന്നു. തരംഗങ്ങള്‍
ബസിന്റെ അഗ്രഭാഗത്തു എത്തിയാല്‍ അവയെ ടെര്‍മിനേറ്റര്‍ ആഗിരണം ചെയ്തു
നീക്കം ചെയ്യുന്നു. ഈ അവസരത്തില്‍ ബസ്‌ അടുത്ത തരംഗങ്ങളെ വഹിക്കുവാന്‍
പൂര്‍ണ സജ്ജമായിത്തീരുന്നു. കേബിളിലേക്കുള്ള തരംഗങ്ങളുടെ പ്രതിഫലനം ഒഴി
വാക്കുവാനും, തരംഗങ്ങള്‍ തമ്മില്‍ കൂടിച്ചേരുന്ന സാഹചര്യം ഒഴിവാക്കുവാനും
ഇതിനാല്‍ സാധിക്കുന്നു. ഒരു നോഡില്‍ നിന്ന്‌ മറ്റെല്ലാ നോഡുകളിലേക്കും തരംഗ
ങ്ങളെ അയയ്ക്കുന്നതിനെ ബ്രോഡ്കാസ്റ്റിംഗ്‌ എന്ന്‌ പറയുന്നു.

൫൫ ൭൭

ടെര്‍മിനേറ്റര്‍ |

ടെര്‍മിനേറ്റര്‍

൫ ൫൭

ചിതം 8.23: MIN" കേഷോളജി

ബസ്സ്‌ ടോച്ഛോളജിയുടെ സവിശേക്ഷതകള്‍
© അനായാസമായി സ്ഥാപിക്കാം.

൭ ഇവ നിര്‍മ്മിക്കുവാന്‍ വളരെ കുറച്ച്‌ കേബിളുകള്‍ ഉപയോഗിക്കുന്നതിനാല്‍ ചെലവ്‌
കുറവാണ്‌.

© ഒരു നോഡിന്റെ തകരാറ്‌ ശൃംഖലയെ ബാധിക്കുന്നില്ല.

© ബസിന്റെയോ ടെര്‍മിനേറ്ററിന്റെയോ തകരാറ്‌ ശൃംഖലയെ മൊത്തമായി ബാധി
ക്കുന്നു.

൭ തകരാറ്‌ കണ്ടെത്തുക എന്നത്‌ ശ്രമകരമാണ്‌.

© ഒരു നോഡിനു മാര്രമേ ഒരു സമയത്തു ഡാറ്റ അയയ്ക്കുവാന്‍ കഴിയു.
ഒന്നാം വര്‍ഷ കമ്പ്യൂട്ടര്‍ സയന്‍സ്‌ 11. കമ്പ്യുട്ടര്‍ ശൃംഖലകള്‍

11.6.2 quod ടോച്പോളജി (Star topology)

ചിത്രം 8.24 ചിര്രീകരിച്ചിരിക്കുന്നതു ങ്ക

പോലെ സ്റ്റാര്‍ ടോപ്പോളജിയില്‍ ഓ ഹബ്‌, സ്വിച്ച്‌

രോ നോഡും ഹബ്ബിലേക്കോ അല്ലെ ചലം
ങ്കില്‍ സ്വിച്ചിലേക്കോ നേരിട്ട്‌ ബന്ധി SJ ZV
പ്പിച്ചിരിക്കുന്നു. ഇതില്‍ ഏതെങ്കിലും

ഒരു നോഡിനു ഡാറ്റ അയയ്ക്കണ

മെങ്കില്‍ അത്‌ സ്വിച്ചിലേക്കോ ഹബി

ലേക്കോ അയയ്ക്കുന്നു. ഹബിന്റെ SVs Ss
കാര്യത്തില്‍ ഈ തരംഗങ്ങളെ എല്ലാ
നോഡുകളിലേക്കും സംപ്രേക്ഷണം
ചെയ്യുകയും, ഉദ്ദേശിച്ച നോഡുകള്‍ മാത്രം അവയെ സ്വീകരിക്കുകയും ചെയ്യുന്നു.
സ്വിച്ചിന്റെ കാര്യത്തിലാണെങ്കില്‍ ഈ തരംഗങ്ങളെ ഉദ്ദേശിച്ച നോഡിലേക്ക്‌ മാത്രം
അയയ്ക്കുന്നു.

ചിത്രം 8.24 : GyIG 65960282)

TWIG ടോപ്പേോകൂജിയുടെ സവിശേഷതകള്‍

© ബസ്‌ ടോപ്പോളജിയെ അപേക്ഷിച്ചു പ്രായോഗിക ക്ഷമത കൂടുതലാണ്‌.

© അനായാസമായി സ്ഥാപിക്കാം.

© തകരാറ്‌ കണ്ടെത്തുക എളുപ്പമാണ്‌.

൭ കേന്ദ്രസ്ഥാനത്തുള്ള ഹബ്‌/സ്വിച്ച്‌ ന്റെയും ബന്ധിപ്പിക്കുവാനുള്ള കഴിവ്‌ അനുസരിച്ചു
ശൃംഖലയില്‍ നോഡുകളെ കൂട്ടിച്ചേര്‍ത്തു ശൃംഖല വിപുലീകരിക്കാം.

© ഹബ്ബിനോ/സ്വിച്ചിനോ തകരാറുണ്ടായാല്‍ ശൃംഖലയെ മൊത്തത്തില്‍ ബാധിക്കുന്നു

൦ ബസ്‌ ടോപ്പോളജിയെ അപേക്ഷിച്ച്‌ ശൃംഖല നിര്‍മ്മിക്കുവാന്‍ കൂടുതല്‍ കേബിള്‍
ആവശ്യമാണ്‌.

11.6.3 റിങ്‌ ടോചോളജി (1൩2 topology)

റിങ്‌ ടോപ്പോളജിയില്‍ നോഡുകളെ കേബിള്‍
ഉപയോഗിച്ച്‌ വൃത്താകൃതിയില്‍ ബന്ധിപ്പിച്ചിരി
ക്കുന്നു. തുടക്കമോ അവസാനമോ ഇല്ലാത്ത ഒരു
വൃത്താകൃതിയാണ്‌ റിങ്‌ ടോപ്പോളജിക്കുള്ളത്‌
(ചിധ്രം 8.25). ടെര്‍മിനേറ്ററിന്റെ ആവശ്യം റിങ്‌
ടോപ്പോളജിക്ക്‌ ഇല്ല. ഒരു ദിശയിലേക്കു മാത്ര
മാണ്‌ ഡാറ്റ സഞ്ചരിക്കുന്നത്‌. ഒരു നോഡില്‍

നിന്ന്‌ മറ്റൊരു നോഡില്‍ എത്തുന്ന തരംഗങ്ങളെ
പുനരുജ്ജീവിപ്പിച്ച്‌ അടുത്തതിലേക്ക്‌ അയയ്‌

<

ക്കുന്നു. ഉദ്ദേശിച്ച നോഡില്‍ എത്തുന്നതുവരെ ഈ ചിത്രം 6൧25. റിങ്‌ 6596198821
ന്നാം വര്‍ഷ കമ്പ്യൂട്ടര്‍ സയന്‍സ്‌ 11. കമ്പ്യുട്ടര്‍ ശൃംഖലകള്‍

പ്രക്രിയ തുടരുന്നു. എല്ലാ നോഡുകളിലൂടെയും സഞ്ചരിക്കുന്ന തരംഗങ്ങള്‍ അവസാനം

സംപ്രേക്ഷണം ചെയ്ത നോഡില്‍ തിരിച്ചെത്തുകയും, അവിടെ നിന്നു ഇവയെ നീക്കം

ചെയ്യുകയും ചെയ്യുന്നു.

റിങ്‌ ടോപച്ഛോളജിയുടെ സവിശേഷതകള്‍

© ഓരോ നോഡും തരംഗങ്ങളുടെ ശക്തി വര്‍ധിപ്പിക്കുന്നതിനാല്‍, തരംഗങ്ങളുടെ
ശക്തി വര്‍ധിപ്പിക്കേണ്ടി വരുന്നില്ല.

© വളരെ കുറച്ച്‌ (Mo കേബിള്‍ ഉപയോഗിക്കുന്നതിനാല്‍ ചെലവ്‌ കുറവാണ്‌.

© ഒരു നോഡ്‌ തകരാറിലായാല്‍ അത്‌ ശൃംഖലയെ മുഴുവനായി ബാധിക്കുന്നു.

൭ ശ്ൃംഖലയിലേക്ക്‌ പുതിയ നോഡുകളെ കൂട്ടിച്ചേര്‍ക്കുക പ്രയാസകരമാണ്‌

11.6.4 മെഷ്‌ ടോലോളജി (651 topology)

മെഷ്‌ ടോപ്പോളജിയില്‍ എല്ലാ നോഡുകളെയും പരസ്‌
പരം ബന്ധിപ്പിച്ചിരിക്കുന്നു. ചിത്രം 8.26 കാണിച്ചിരി
ക്കുന്നത്‌ പോലെ രണ്ടു നോഡുകള്‍ക്കിടയില്‍ ഒന്നി
ലേറെ പാതകള്‍ ഉണ്ടായിരിക്കും. ഒരു പാതയില്‍
തടസ്സമുണ്ടായാലും മറ്റൊരു പാതയിലൂടെ ഡാറ്റ ലക്ഷ്യ
സ്ഥാനത്തു എത്തിച്ചേരുന്നു.

മെഷ്‌ ടോച്ചോളുജിയുടെ സവിശേഷതകശി

© രണ്ടു നോഡുകള്‍ക്കിടയില്‍ ഉള്ള പാത തകരാ ച്ചും 626: മെഷ്‌ 6596019802)
റായാലും ശൃംഖലയ്ക്കു തകരാറ്‌ ഉണ്ടാകുന്നില്ല.

൫ കൂടുതല്‍ കേബിള്‍ വേണ്ടതിനാല്‍ ചെലവ്‌ കുടുതലാണ്‌.

© വളരെ സങ്കീര്‍ണവും കൈകാര്യം ചെയ്യുവാന്‍ പ്രയാസവുമാണ്‌.

നിങ്ങളുടെ സ്‌കൂള്‍ ലാബിലെ ശൃംഖലയുടെ ക്രമീകരണരീതി എന്താണ്‌

എന്ന്‌ മനസിലാക്കുക.

11.7 വിവിധതരം ശ്യംഖലകള്‍ (Type of networks)

ഒരു കമ്പ്യൂട്ടര്‍ ശൃംഖല ഭാമ വിസ്തൃതിയില്‍ പല അളവുകളിലായി വ്യാപിച്ചു കിട
ക്കുന്നു. ഇത്‌ വേണമെങ്കില്‍ ഒരു മേശയുടെ മുകളിലോ ഒരു റൂമിലോ ഒരു കെട്ടിടത്തിലോ
ഒരു നഗരത്തിലോ, ഒരു രാജ്യത്തിനുള്ളിലോ ഭൂഖണ്ഡങ്ങളിലോ ലോകം മുഴുവനുമോ
വ്യാപിച്ചു കിടക്കാം. കമ്പ്യൂട്ടര്‍ ശൃംഖലയെ അവയുടെ വ്യാപനത്തെ അടിസ്ഥാനമാക്കി
ചുവടെ ചേര്‍ത്ത രീതിയില്‍ വേര്‍തിരിക്കാം.

ഒന്നാം വര്‍ഷ കമ്പ്യൂട്ടര്‍ സയന്‍സ്‌ 11. കമ്പ്യുട്ടര്‍ ശൃംഖലകള്‍

e PAN - പേര്‍സണല്‍ ഏരിയ നെറ്റവര്‍ക്ക്‌
e LAN - ലോക്കല്‍ ഏരിയ നെറ്റ്വര്‍ക്ക്‌

൦ MAN - മെട്രോപൊളിറ്റന്‍ ഏരിയ നെറ്റ്വര്‍ക്ക്‌

e WAN - വൈഡ്‌ ഏരിയ നെറ്റ്വര്‍ക്ക്‌

11.7.1 പേര്‍സണല്‍ ഏരിയ നെറ്റ്വര്‍ക്ക്‌ (Personal Area Network)

ഒരു വ്യക്തിയുടെ പരിധിയിലുള്ള വിനിമയ ] 1
ഉപകരണങ്ങളുടെ (കമ്പ്യൂട്ടര്‍, മൊബൈല്‍, ളം [ >) ray
ടാബ്ലെറ്റ്‌, ര്പിന്‍റര്‍ എന്നിവ) ശൃംഖലയാണ്‌ — >) [

PAN. ഏതാനും മീറ്റര്‍ വൃത്ത പരിധിക്കുള്ളില്‍ , 3)

ഇവ വ്യാപിച്ചു കിടക്കുന്നു. ചിത്രം 8.27 ഒരു [ ക്ക്‌? മു

പാട്ട ഒരു മൊബൈലില്‍ നിന്ന്‌ മറ്റൊന്നിലേ = Be
ക്കോ, ഒരു കമ്പ്യൂട്ടറില്‍ നിന്ന്‌ MP3 പ്ലെയറി 7 ചിത്രം 8.27: പാല്‍

ലേക്കോ അയയ്ക്കുവാന്‍ നാം PAN ശൃംഖല

ഉണ്ടാക്കാറുണ്ട്‌. PAN ശൃംഖല ഉണ്ടാക്കുവാന്‍ ഗൈഡഡ്‌ മാധ്യമവും (USB), അണ്‍

ഗൈഡഡ്‌ മാധ്യമവും (ബ്ലൂടൂത്ത്‌, ഇന്‍ഫ്രാറെഡ്‌) ഉപയോഗിക്കാം.

11.7.2 ലോക്കല്‍ ഏരിയ നെറ്റ്വര്‍ക്ക്‌ (Local Area Network)

ഒരു LAN ശൃംഖലയിലെ വിവര വിനിമയത്തിനും കമ്പ്യൂട്ടിങ്ങിനുമുള്ള ഉപകരണങ്ങള്‍
ഒരു മുറിയ്ക്കുള്ളിലോ, ഒരു കെട്ടിടത്തിനുള്ളിലോ ഒരു സ്ഥാപന പരിധിയ്ക്ക്‌ ഉള്ളിലോ
ആയിരിക്കും പരസ്പരം ബന്ധിപ്പിച്ചിരിക്കുന്നത്‌. ഏതാനും മീറ്ററോ ഏതാനും കിലോ
മീറ്ററോ വൃത്ത പരിധിയ്ക്കുള്ളില്‍ ആയിരിക്കും ഇവയുടെ പ്രവര്‍ത്തനം. സാധാര
ണയായി ഓഫീസിലും സ്‌കൂളിലും റൂമിലും ഒരു LAN ശ്ൃംഖലമാത്രമാണ്‌ ഉണ്ടാകാറു

ചി(ത 8.28 : ലോക്ക്‌ ഏരിയ മെറ്റ്വരിക്ക്‌

(5 ഒന്നാം വര്‍ഷ കമ്പ്യൂട്ടര്‍ സയന്‍സ്‌ 11. കമ്പ്യൂട്ടര്‍ ശ്യംഖലകള്‍

ള്ളത്‌, എന്നാല്‍ ഒരു കെട്ടിടത്തില്‍ തന്നെ ഒന്നില്‍ കൂടുതല്‍ LAN ചിലപ്പോള്‍ ഉണ്ടാ
യെന്നു വരാം. (ചില സ്കൂളുകളില്‍ ഓരോ ലാബിലും ഓരോ 1.്പ്ട്‌ ശൃംഖല ഉള്ളതു
പോലെ). ചിലപ്പോള്‍ LAN അടുത്തടുത്ത കെട്ടിടത്തിലേക്കും വ്യാപിച്ചിരിക്കും

LAN ശൃംഖലയുടെ നിയ്രന്രണവും പരിപാലനവും, ഒരു വ്യക്തിയുടെയോ, ഒരു സ്ഥാ
പനത്തിന്റെയോ ഉടമസ്ഥതയിലായിരിക്കും.

ഗൈഡഡ്‌ മാധ്യമം (വയേര്‍ഡ്‌ മീഡിയ) (UTP കേബിളുകള്‍ കോയാക്സില്‍ കേബിളു
കള്‍ തുടങ്ങിയവ) ഉപയോഗിച്ചും വയര്‍ലെസ്സ്‌ മാധ്യമം (ഇന്‍ഫ്രാറെഡ്‌, റേഡിയോ
തരംഗങ്ങള്‍ തുടങ്ങിയവ) ഉപയോഗിച്ചും ലാന്‍ സ്ഥാപിക്കാവുന്നതാണ്‌. അണ്‍
ഗൈഡഡ്‌ മാധ്യമം (Unguided Media) ഉപയോഗിച്ചാണ്‌ LAN സ്ഥാപിക്കുന്നതെങ്കില്‍
അതിനെ വയര്‍ലെസ്സ്‌ LAN (WLAN (Wireless LAN )) എന്ന്‌ വിളിക്കാം.

11.7.3 മെട്രോപൊളിറ്റന്‍ ഏരിയ നെറ്റ്വര്‍ക്ക്‌ (Metropolitan Area Network (MAN))

MAN GLoMUAID}OS കമ്പ്യൂട്ടിങ്ങും പ്രവര്‍ത്തനവും വിനിമയ ഉപകരണങ്ങളുടെ വ്യാപ
നവും ഒരു നഗര പരിധിക്കുള്ളില്‍ നില്‍ക്കുന്നു. ഇതിന്റെ വൃത്ത പരിധി നൂറു കിലോ
മീറ്റര്‍ വരെ വ്യാപിച്ചു കിടക്കും. ലാന്‍ (LAN) ശൃംഖലകളെയും, സ്വകാര്യ കമ്പ്യൂട്ടറുക
ളെയും പരസ്പരം ബന്ധിപ്പിച്ചാണ്‌ 14൧ സ്ഥാപിക്കുന്നത്‌. എല്ലാവിധ മാധ്യമങ്ങളും
(ഗൈഡഡും അണ്‍.-ഗൈഡഡും) ഇതിനായി ഉപയോഗിക്കുന്നു. 14. ന്റെ ഉടമസ്ഥ
തയും നിയ്രന്രണവും ഗവണ്‍മെന്റിനോ, ഒരു വലിയ സ്ഥാപനത്തിനോ ആയിരിക്കും
(ചിരം 8.29)

ക്രന്ദ്ര മുഖ്യകാര്യാലയം

ഉപകേന്ദ്രം

വ്യവസായശാല

ഉപ ആഫീസ്‌

ചിത്രം 8.29 : മെട്ര്രാപൊള്്റന്‌ ഏരിയ ang വരിക്ക്‌
5) അ 5) ഒന്നാം വര്‍ഷ കമ്പ്യൂട്ടര്‍ സയന്‍സ്‌ 11. കമ്പ്യൂട്ടര്‍ Monee

11.7.4 വൈഡ്‌ ഏരിയ നെറ്റ്വര്‍ക്ക്‌ (Wide Area Network (WAN))

പല നഗരങ്ങളിലും രാജ്യങ്ങളിലും ഭൂഖണ്ഡങ്ങളിലുമായി വ്യാപിച്ചു കിടക്കുന്ന വിവര
വിനിമയ കമ്പ്യൂട്ടിങ്‌ ഉപകരണങ്ങള്‍ WAN ശൃംഖലയില്‍ ഉള്‍പ്പെടുന്നു. നൂറു കിലോ
മീറ്റര്‍ വൃത്തപരിധിയ്ക്കും അപ്പുറത്തേയ്ക്ക്‌ ഇവയുടെ പ്രവര്‍ത്തനം വ്യാപിച്ചിരിക്കുന്നു.
സ്വകാര്യ കമ്പ്യൂട്ടറുകള്‍, LAN, MAN കൂടാതെ മറ്റു WANABJo ഇതില്‍ അംഗങ്ങള്‍
ആയിരിക്കും. എല്ലാ തരത്തിലും ഉള്ള വിനിമയ മാധ്യമങ്ങള്‍ (ഗൈഡഡും അണ്‍
ഗൈഡഡും) ഇവിടെ ഉപ

യോഗിക്കുന്നു ചിത്രം 8.30.

WAND ഉത്തമ ഉദാഹരണ a By

മാണ്‌ ഇന്റര്‍നെറ്റു. ലോക
ത്തിലെ ഏറ്റവും വലിയ
WAN ആയിട്ടാണ്‌ ഇന്റര്‍

Va"

1

നെറ്റിനെ കണക്കാക്കുന്ന
ത്‌. രാജ്യത്തിനുള്ളിലും,
വിവിധ ഭുഖണ്ഡങ്ങളിലു
മായി വ്യാപിച്ചു കിടക്കുന്ന

ATM ശൃംഖല, ബാങ്ക്‌ യ

ATM.

[5] ee)

നങ്ങളുടെയും ശൃംഖല ചിത്രം 11.30: ധൈ ഏരിയ മെറ്റ്വരിക്ക്‌
കള്‍ എന്നിവ "നു ഉദാ

ശൃംഖല, ഗവണ്‍മെന്റിന്റെ
യും, അന്താരാഷ്ട്ര സ്ഥാപ

ഹരണങ്ങളാണ്‌.

അളവുകോല്‍

വ്യാപ്തി ചെറിയ വിസ്തീര്‍ണ | ഏതാനും മീറ്റര്‍ മുതല്‍ | നഗര പരിധിയില്‍ | രാജ്യങ്ങളിലും ദുഖ
ത്തില്‍ (10൩ വൃത്ത | കിലോമീറ്റര്‍ വരെ (101൩ | (100 km വൃത്ത | ബ്ബങ്ങളിലും ലോ
പരിധി) വൃത്ത പരിധി) പരിധി) കമാക്മാനവും

വിനിമയ വേഗത അതിവേഗം അതിവേഗം സാമാന്യ വേഗത വേഗത കുറവ്‌

സ്ഥാപിക്കുവാനുളള തീരെ കുറവ്‌ ചിലവ്‌ കുറവ്‌ സാമാന്യം ചിലവ്‌ ചിലവേറിയ
ചിലവ്‌

പട്ടിക 8.1 PAN, LAN, MAN, WAN സവിശേഷതകളുടെ സം/ഗഫം

11.8 ശ്യംഖലയുടെ യുക്ത്യാധിഷ്ഠിത തരംതിരിവ്‌ (Logical classification of networks)

ശൃംഖലയിലെ കമ്പ്യൂട്ടറുകളുടെ ചുമതലകളെ അടിസ്ഥാനമാക്കി രണ്ടായി തരംതിരി
ക്കാം. പീര്‍ ടു പീര്‍ (Peer - to - peer), ക്ലയന്റ്‌ സെര്‍വര്‍ (Client - Server).
11. കമ്പ്യൂട്ടര്‍ ശൃംഖലകള്‍

11.8.1 പീര്‍ ടു പീര്‍ (Peer to peer)

പിര്‍ ടു പിര്‍ ശൃംഖലയില്‍ ഒരു കമ്പ്യൂട്ടറിനും ശൃംഖലയുടെ മുഴുവന്‍ ചുമതല ഉണ്ടാ
യിരിക്കില്ല. ഇവിടെ വിവരങ്ങള്‍ കൈമാറുന്നതിനും ഉപകരണങ്ങള്‍ പങ്കിടുന്നതിനും
കമ്പ്യൂട്ടറുകളെ തമ്മില്‍ പരസ്പരം ബന്ധിപ്പിക്കുകയാണ്‌ ചെയ്യുന്നത്‌. എല്ലാ HMI)
ട്ടറുകള്‍ക്കും തുല്യ പരിഗണനയാണ്‌ ഉള്ളത്‌. ഏതു കമ്പ്യൂട്ടറിനും ഏതു സമയത്തും
ക്ലയന്റ്‌ ആയിട്ടും സെര്‍വര്‍ ആയിട്ടും പ്രവര്‍ത്തിക്കാം.

ചെറിയ കമ്പ്യൂട്ടര്‍ ശൃംഖലകള്‍ ആവശ്യമുള്ളതും, എന്നാല്‍ പൂര്‍ണ്ണ ചുമതല ഉള്ള

സെര്‍വറുകളുടെ ആവശ്യമില്ലാത്തതുമായ സ്ഥലങ്ങളില്‍ (വീടുകള്‍, ചെറിയ വ്യാപാര
സ്ഥാപനങ്ങള്‍) ഇവ അനുയോജ്യമാണ്‌.

11.8.2 ക്ലയന്റ്‌ സെര്‍വര്‍ (Client-Server)

ഭൂരിഭാഗം ശൃംഖലകളും ക്ലയന്റ്‌ -സെൈര്‍വര്‍ രീതിയില്‍ അധിഷ്ഠിതമാണ്‌. ഒരു ഭക്ഷണ
ശാലയില്‍ ചെന്ന്‌, ആഹാര സാധനങ്ങളുടെ പട്ടിക നോക്കി, അതില്‍ നിന്ന്‌ ഇഷ്ടമുള്ളത്‌
കടയിലെ ജോലിക്കാരനോട്‌ (സെര്‍വര്‍) ആവശ്യ gory gout

പ്പെടുന്നതിന്‌ തുല്യമാണ്‌ ഇവയുടെ പ്രവര്‍ത്തനം.
ഭക്ഷണശാലയില്‍ അത്‌ ലഭ്യമാണെങ്കില്‍ ആവശ്യ
ക്കാരന്‍ (ക്ലൈന്റ്‌ ) അത്‌ വിതരണം ചെയ്യുകയും, അപേക്ഷ പേക്ഷ
ലഭ്യമല്ലെങ്കില്‍ ആവശ്യം നിരാകരിക്കപ്പെടുകയും പ്രതികരണം പ്രതികരണം

ചെയ്യുന്നു.

ക്ലയന്റ്‌ -സെര്‍വറിന്റെ ഘടനയില്‍ ശൃംഖലയിലെ

യ
ശക്തി കൂടിയ കമ്പ്യൂട്ടര്‍ (സെര്‍വര്‍), ശക്തി കു ഉറ്റ്‌ ന്റ്‌

4/൫. 8.31: ന
റഞ്ഞ കമ്പ്യൂട്ടറിനു (ക്ലയന്റ്‌ ) സേവനങ്ങള്‍ ലഭ്യമാ ചിതം 7 കയറ്‌ - medals

ക്കുന്നു. ക്ലയന്റിന്റെ അഭ്യര്‍ത്ഥന അനുസരിച്ചു ഒരു സെര്‍വര്‍ നിര്‍ദിഷ്ട സേവനങ്ങള്‍
(Response) ലഭ്യമാക്കുന്നു. ഈ സേവനങ്ങളില്‍ ഡാറ്റയുടെയും സോഫ്റ്റ്വെയറിന്റെയും
ഹാര്‍ഡ്വെയറിന്റെയും പങ്കിടല്‍ ഉള്‍പ്പെടുന്നു. ചിത്രം 8.31 ക്ലയന്റ്‌ സെര്‍വറിന്റെ ഘടന
ചിര്രീകരിച്ചിരിക്കുന്നു.

ക്ലയന്റ്‌ സെര്‍വറിന്റെ ഘടന ക്രേനദ്രീകൃത സോഫ്റ്റ്വെയര്‍ മാനേജ്മെന്റിന്‌ ഉദാഹ
രണമാണ്‌. സെര്‍വറില്‍ സോഫ്റ്റ്വയര്‍ ലോഡ്‌ ചെയ്യുമ്പോള്‍ അവ ക്ലയന്റുകള്‍ക്കിട
യില്‍ പങ്കുവെയ്ക്കുപ്പെടുകയും, സെര്‍വര്‍ സോഫ്റ്റവയറില്‍ ഉണ്ടാകുന്ന ഏതു മാറ്റവും
ക്ലയന്റില്‍ പ്രതിഫലിക്കുകയും ചെയ്യുന്നു. ഓരോ കമ്പ്യൂട്ടറിലും പുതിയ ഫയലും
അതിന്റെ പരിവര്‍ത്തന ഫയലും ഇടുവാനുള്ള അധിക ഈര്‍ജവും സമയവും ഇതിനാല്‍
ലാഭിക്കാം.

സ്വെരീവറുകകുടെ തരംതിരിക്കത്‌

a) ഫയല്‍ സെര്‍വര്‍: ഒന്നിലധികം ഉപഭോക്താക്കളുടെ ഫയലുകള്‍ സൂക്ഷി
ക്കാനും കൈകാര്യം ചെയ്യുവാനും ഉള്ള കമ്പ്യൂട്ടര്‍ ആണിത്‌.
ഒന്നാം വര്‍ഷ കമ്പ്യൂട്ടര്‍ സയന്‍സ്‌ 11. കമ്പ്യുട്ടര്‍ ശൃംഖലകള്‍

b) വെബ്‌ സെര്‍വര്‍ : വെബ്‌ പേജിനുള്ള അഭ്യര്‍ഥന കൈകാര്യം ചെയ്യുന്ന
കമ്പ്യൂട്ടറാണിത്‌.

c) പ്രിന്റ്‌ സെര്‍വര്‍ : ക്ലയന്റുകളില്‍ നിന്നും (പ്രിന്ററുകളിലേക്കുള്ള പ്രിന്റിങ്‌ ജോ
ലികളെ മുന്‍ഗണനയ്ക്ക്‌ അനുസരിച്ചു പൂര്‍ത്തീകരിക്കുന്ന കമ്പ്യൂട്ടര്‍ ആണിത്‌.

d ഡാറ്റാബേസ്‌ സെര്‍വര്‍: പൊതുവായി സൂക്ഷിച്ചിരിക്കുന്ന ഡാറ്റായെ കാണാനും
മാറ്റങ്ങള്‍ വരുത്താനും നീക്കം ചെയ്യുവാനും അംഗീകൃത ഉപഭോക്താവിനെ
(ക്ലയന്റ്‌ ) സഹായിക്കുന്ന കമ്പ്യൂട്ടര്‍ ആണിത്‌.

സ്വയം പരിശോധിക്കാം

1. ബസ്‌ ടോകഷോളജിയില്‍ ബസിന്റെ അഗ്രദാഗത്തു എത്തുന്ന തരംഗങ്ങളെ
ആഗിരണം ചെയ്യുകയും ബസില്‍ നിന്ന്‌ നീക്കം ചെയ്യുകയും ചെയ്യുന്നു.

ടോശഷോളജിയില്‍ ഓരോ നോഡും ഹബ്‌ / സ്വിച്ച്‌ ലേക്ക്‌ നേരിട്ട്‌ ബന്ധിരിച്ചി

രിക്കുന്നു

ടോശോളജിയില്‍ ഓരോ നോഡും മറ്റു നോഡുകളുമായി നേരിട്ടു ബന്ധിഭി
ച്ചിരിക്കുന്നു.

4. താഴെകറയുന്ന വിവിധ ശൃംഖലകളെ തരം തിരിക്കുക.
ATM ന്റെ ശൃംഖല, കേബിള്‍ ടെലിവിഷന്‍ ശൃംഖല, ഒരു സ്‌കുളിനുള്ളിലെ ശൃംഖല,

ബ്ലൂടൂത്ത്‌ ഉപയോഗിച്ചുള്ള വീടിനുള്ളിലെ ശൃംഖല, ടെലിഫോണ്‍ ശൃംഖല, റെയില്‍വേ
ര്യംഖല

5 എന്താണ്‌ PAN?
6 എന്നാണ്‌ പീര്‍ ടു പീര്‍ ശൃംഖല ?

11.9 ശ്യംഖലയില്‍ കമ്പ്യൂട്ടറുകളുടെ തിരിച്ചറിയല്‍
(Identification of computers over a network)

അമേരിക്കയില്‍ ഉള്ള ഒരു കൂട്ടുകാരന്‍ ഇന്ത്യയില്‍ ഉള്ള നിങ്ങള്‍ ഒരു കത്ത്‌ എഴുതുന്നു
എന്ന്‌ സങ്കല്‍പ്പിക്കുക. നിങ്ങള്‍ ഒരു കത്ത്‌ എഴുതി, കവറില്‍ ഇട്ടു, കവറിനു പുറത്ത്‌
കൂട്ടുകാരന്റെ മേല്‍വിലാസവും എഴുതി, പുറകില്‍ നിങ്ങളുടെയും മേല്‍വിലാസവും
എഴുതുന്നു. ഈ കത്ത്‌ ഇന്ത്യയിലെ പോസ്റ്റോഫീസില്‍ ഇടുമ്പോള്‍ അതിനു മുകളില്‍
ഇന്ത്യന്‍ തപാല്‍ വകുപ്പിന്റെ സീലും തീയതിയും അതില്‍ പതിപ്പിക്കുന്നു. വിവിധ
മാര്‍ഗങ്ങളിലൂടെ സഞ്ചരിച്ച കത്ത്‌ അമേരിക്കയിലെ തപാല്‍ വകുപ്പില്‍ എത്തുന്നു.
അവിടെ വെച്ച്‌ അമേരിക്കന്‍ തപാല്‍ വകുപ്പിന്റെ സീലും തീയതിയും പതിക്കുന്നു.
അവസാനം പോസ്റ്റുമാന്‍ കത്ത്‌ മേല്‍ വിലാസക്കാരന്‍ കൈമാറുന്നു. കമ്പ്യൂട്ടര്‍ ശൃംഖ
ലയിലും ഡാറ്റയെ പാക്കറ്റുകളാക്കി ഇതേ രീതിയില്‍ ആണ്‌ കൈമാറ്റം ചെയ്യുന്നത്‌.

ഒരു ശൃംഖല സജ്ജീകരിച്ചു കഴിഞ്ഞാല്‍, നോഡുകള്‍ തമ്മില്‍ പരസ്പരം വിവര
വിനിമയം നടത്താം. ശരിയായ വിവരവിനിമയത്തിന്‌ നോഡുകളെ അന്യോന്യം
11. കമ്പ്യൂട്ടര്‍ ശൃംഖലകള്‍

തിരിച്ചറിയേണ്ടത്‌ ആവശ്യമാണ്‌. X എന്ന നോഡ്‌ എന്ന നോഡിലേക്കു വിവരങ്ങള്‍
കൈമാറണമെങ്കില്‍, X ഉം Y ഉം ശൃംഖലയില്‍ അന്യോന്യം തനതായി തിരിച്ചറിയ
ത്തക്ക ആയിരിക്കണം. ഇത്‌ എങ്ങനെ സാധിക്കുന്നു എന്ന്‌ പരിശോധിക്കാം.

11.9.1 മിഡിയ അക്സസ്‌ കണ്‍ട്രോള്‍ വിലാസം (Media Access Control (MAC) address)

ഓരോ NIC ( Network Interface Card) യിലും അത്‌ നിര്‍മിച്ച കമ്പനിക്കാര്‍ നല്‍കുന്ന
വ്യത്യസ്തവും സ്ഥിരമായതും ആഗോളപരമായി അംഗീകരിച്ചിട്ടുള്ളതുമായ (പ്രന്ത
ണ്ടക്ക ഹെക്സാ ഡെസിമല്‍ നമ്പറുകള്‍) മേല്‍വിലാസമാണ്‌ MAC അഡ്ധസ്‌. ഒരു NIC
ഉള്ള മെഷീനെ അതിന്റെ MAC വിലാസം ഉപയോഗിച്ച്‌ തിരിച്ചറിയുന്നു. NIC യിലെ
MAC വിലാസം സ്ഥിരമായിരിക്കും.

MAC വിലാസം എന്നത്‌ 12 അക്ക ഹെക്സ ഡെസിമല്‍ അല്ലെങ്കില്‍ 48 ബിറ്റ്‌ ബൈന
ADIN). താഴെ കാണിച്ചിരിക്കുന്ന ഏതെങ്കിലും ഒരു രീതിയില്‍ ആണ്‌ MAC വിലാസം
എഴുതാറുള്ളത്‌

214:1/4:1/:55:55:55 @eoegse103 MM-MM-MM-SS-SS-SS

MAC വിലാസത്തിന്റെ ആദ്യഭാഗം (MM:MM:MM) അത്‌ നിര്‍മിച്ച കമ്പനിയുടെ തിരിച്ച
റിയല്‍ അക്കവും രണ്ടാമത്തെ പകുതി (SS:SS:SS) NIC യ്ക്ക്‌ ആയി കമ്പനി നല്‍കി
യിരിക്കുന്ന ക്രമ നമ്പറുമാണ്‌. 1440 വിലാസത്തിനു ഉദാഹരണമാണ്‌. താഴെ കൊടു
ത്തിരിക്കുന്നത്‌.

(040൧ | | 14:c8:35 |
alo. 8.32: MAC Id

ആദ്യ പകുതി 00:AO:CI എന്നത്‌ ഇത്‌ നിര്‍മിച്ചത്‌ ഇന്റല്‍ കോര്‍പറേഷന്‍ ആണ്‌ എന്ന്‌
സൂചിപ്പിക്കുന്നു. അവസാന മൂന്നക്ക നമ്പര്‍ ഇന്റല്‍ കോര്‍പറേഷന്‍ NIC യ്ക്ക്‌ നല്‍കിയ
ക്രമനമ്പറാണ്‌.

11.9.2 ഇന്റര്‍നെറ്റ്‌ പ്രോട്ടോകോള്‍ (Internet Protocol (IP))

ശൃംഖലയിലെ ഓരോ നോഡിനും നല്‍കിയിട്ടുള്ള 4 ഭാഗങ്ങള്‍ ഉള്ള തനതായ MMI
റാണ്‌ IP മേല്‍വിലാസം അഥവാ IP അഡ്ധസ്‌. ശൃംഖല മേധാവി (നെറ്റ്വര്‍ക്ക്‌ അഡ്മിനി
സ്ട്രേറ്റര്‍) അല്ലെങ്കില്‍ ഇന്റര്‍നെറ്റ്‌ സര്‍വീസ്‌ പ്രൊവൈഡര്‍ ആണ്‌ ഓരോ നോഡിനു
മുള്ള IP അഡ്രസ്‌ രേഖപ്പെടുത്തുന്നത്‌. 4 ഭാഗങ്ങളാണ്‌ ഇതിനുള്ളത്‌. ഓരോ ഭാഗ
ത്തെയും ഡോട്ട്‌ ഉപയോഗിച്ച്‌ വേര്‍തിരിക്കും. ഓരോ ഭാഗത്തും 0 മുതല്‍ 255 വരെ
ഉള്ള ഒരു നമ്പറാണ്‌ ഉണ്ടാകുക. ഒരു IP അഡ്രസ്‌ 4 ബൈറ്റ്‌ (32 ബിറ്റുകള്‍) നമ്പര്‍ ഉപ
യോഗിച്ചാണ്‌ തയാറാക്കുന്നത്‌.

ഓര്‍ത്തിരിക്കുവാന്‍ എളുപ്പത്തിനായി IP അ്ധസിനെ ഡെസിമല്‍ രൂപത്തില്‍ ഡോട്ട്‌
ഉപയോഗിച്ച്‌ വേര്‍തിരിച്ച നമ്പറായി, രൂപകല്‍പ്പന ചെയ്തിരിക്കുന്ന (ചിത്രം 8.32) ല്‍
നല്‍കിയിരിക്കുന്നു.
ഒന്നാം വര്‍ഷ കമ്പ്യൂട്ടര്‍ സയന്‍സ്‌ 11. കമ്പ്യുട്ടര്‍ ശൃംഖലകള്‍

ഒരു ശൃംഖലയില്‍ ഒരു ഉപകരണ
ത്തിന്റെ IP മേല്‍വിലാസം, അതിനെ
തിരിച്ചറിയുവാനായി ഉപയോഗിക്കുന്നു.

ഉപകരണത്തിന്റെ IP മേല്‍വിലാസം
ഉപയോഗിച്ച്‌ IP പ്രോട്ടോക്കോള്‍ 148 . 78 , 250. 12
പാക്കറ്റുകളെ വഴിതിരിച്ചു വിടുന്നു. ചിത്രം. 8.33 IP മ്മേത്വിലാര്യം

IP മേല്‍വിലാസത്തിനു രണ്ടു പതിപ്പുകള്‍ ആണ്‌ ഉള്ളത്‌. പതിപ്പ്‌ 4 ( version 4 ) IPv4
പതിപ്പ്‌ 6 (Version 6) IPv6. IPv4 പ്രകാരം 32 ബിറ്റ്‌ വലുപ്പമുള്ള മേല്‍വിലാസം ആണ്‌
കംപ്യൂട്ടറിനു നല്‍കുന്നത്‌, 112:/6 പ്രകാരം 128 ബിറ്റ്‌ വലുപ്പമുള്ള മേല്‍വിലാസം ആണ്‌
കംപ്യൂട്ടറിനു നല്‍കുന്നത്‌. IPv4 ഉപയോഗിച്ച്‌ 2” (ഏകദേശം 4 ലക്ഷം കോടി) വൃത്യസ്ത
ഉപകരണങ്ങളെ പ്രതിനിധീകരിക്കുവാന്‍ കഴിയും.

ശൃംഖലയിലേക്കു ബന്ധിപ്പിക്കേണ്ട ഉപകരണങ്ങളുടെ (മൊബൈല്‍ ഫോണ്‍, വീട്ടുപക
രണങ്ങള്‍, വ്യക്തിഗത വിനിമയോപാധികള്‍?) എണ്ണം നാള്‍ക്കുനാള്‍ അതിവേഗം
വര്‍ധിച്ചു വരുന്നതിനാല്‍ 124 വിഭാഗത്തിലുള്ള വിലാസങ്ങള്‍ ഉപയോഗിച്ച്‌ തീരുന്നു.
ഈ പ്രതിസന്ധി മറികടക്കുന്നതിനായാണ്‌ 1246 വികസിപ്പിച്ച്‌ എടുത്തത്‌. അത്‌ ഇപ്പോള്‍
ഉപയോഗിച്ച്‌ തുടങ്ങിയിരിക്കുന്നു.

IPV6 ഉപയോഗിച്ച്‌ 2 “(ഏകദേശം 4 ലക്ഷം കോടി: 4 ലക്ഷം കോടി 4 ലക്ഷം
കോടി ൭2 ലക്ഷം കോടി) വിവിധതരം ഉപകരണങ്ങളെ പ്രതിനിധീകരിക്കാം.

നിങ്ങളുടെ സ്‌കൂളിലെ കമ്പ്യൂട്ടര്‍ ശൃംഖലയിലെ ഓരോ ഉപകരണങ്ങളു

ടെയും MACID യും IP അസ്ഡുസും കണ്ടുപിടിച്ചു ഒരു പട്ടിക താഴെ കാ

ണിച്ചിരിക്കുന്നത്‌ പോലെ തയാറാക്കുക (IPCONFIG/ALL എന്ന നിര്‍ദേശം,
കമാന്‍ഡ്‌ പ്രോംഠറ്റില്‍ ഉപയോഗിക്കുക)

കമ്പ്യൂട്ടറിന്റെ പേര്‌

11.10 ശ്യംഖലകളിലെ പ്രോട്ടോക്കോളുകള്‍ (Network Protocols)

ശൃംഖലയിലെ ഉപകരണങ്ങള്‍ തമ്മില്‍ വിവരങ്ങള്‍ പരസ്പരം കൈമാറുമ്പോള്‍ സ്വീക
രിക്കേണ്ട പ്രത്യേക നിയമങ്ങളാണ്‌ പ്രോട്ടോക്കോളുകള്‍. ഡാറ്റ ഫോര്‍മാറ്റിങ്‌, ഡാറ്റ
കംപ്രസ്സിങ്‌, പിശകുകളുടെ പരിശോധന, തിരിച്ചറിയല്‍, പരസ്പരം ബന്ധിപ്പിക്കല്‍,
ഡാറ്റാ ലക്ഷ്ൃസ്ഥാനത്തു എത്തിച്ചേര്‍ന്നു എന്ന്‌ ഉറപ്പുവരുത്തല്‍ എന്നിവയ്ക്കായി
ഓരോ പ്രോട്ടോക്കോളിനും അതിന്റെതായ നിയമങ്ങളുണ്ട്‌.

ന്നാം വര്‍ഷ കമ്പ്യൂട്ടര്‍ സയന്‍സ്‌ 11. കമ്പ്യുട്ടര്‍ ശൃംഖലകള്‍

പ്രത്യേക ഉദ്ദേശ്യങ്ങള്‍ക്കു വേണ്ടിയും, സാഹചര്യങ്ങള്‍ക്കു വേണ്ടിയും നിരവധി
കമ്പ്യൂട്ടര്‍ ശൃംഖല പ്രോട്ടോക്കോളുകള്‍ നിര്‍മ്മിച്ചിട്ടുണ്ട്‌. TCP/IP, SPx/IPx തുടങ്ങിയവ
യാണ്‌ പൊതുവായി ഉപയോഗിക്കുന്ന ചില പ്രോട്ടോക്കോളുകള്‍ (Protocols).

1൧1

ഇന്റര്‍നെറ്റിലും സാധാരണ ശൃംഖലകളിലും പരസ്പരം ബന്ധിപ്പിച്ചിട്ടുള്ള ഉപകരണങ്ങ
ളില്‍ ഉപയോഗിക്കുന്ന നിയമങ്ങളാണ്‌ TCP/IP (ദ്രാന്‍സ്മിഷന്‍ കണ്‍ട്രോള്‍ പ്രോട്ടോ
കോള്‍/ ഇന്റര്‍നെറ്റ്‌ പ്രോട്ടോക്കോള്‍) (TCP/IP Transmission control protocol/Internet protocol)
എന്നത്‌. ഇന്റര്‍നെറ്റില്‍ MIG IME ഉപകരണങ്ങള്‍ (കമ്പ്യൂട്ടര്‍ പോലുള്ള) എങ്ങനെ
ബന്ധിപ്പിക്കണമെന്നും അവ തമ്മില്‍ എങ്ങനെ വിവര വിനിമയം നടത്തണമെന്നും
TCP/IP നിര്‍വചിച്ചിരിക്കുന്നു

ഒരു കമ്പ്യൂട്ടറില്‍ നിന്ന്‌ മറ്റൊന്നിലേക്ക്‌ ഡാറ്റ അയയ്ക്കുമ്പോള്‍, TCP/IP ആദ്യം അവയെ
വിഭജിച്ചു ചെറിയ പാക്കറ്റുകള്‍ ആക്കുകയും പിന്നീട്‌ അയയ്ക്കുകയും ചെയ്യുന്നു.
സ്വീകരിക്കേണ്ട കമ്പ്യൂട്ടറില്‍ ഈ പാക്കറ്റുകള്‍ കിട്ടിക്കഴിഞ്ഞാല്‍, ഈ പാക്കറ്റുകളില്‍
തെറ്റുകളോ കേടുപാടുകളോ ഉണ്ടോ എന്ന്‌ പരിശോധിക്കുന്നു. തകരാറുകള്‍ കണ്ടെ
ത്തിയാല്‍, ഈ പാക്കറ്റുകള്‍ വീണ്ടും അയയ്ക്കുന്നതിനുള്ള നിര്‍ദേശം TCP സമര്‍പ്പി
ക്കുന്നു. തകരാറൊന്നും ഇല്ലെങ്കില്‍ പാക്കറ്റുകളെ TCP യില്‍ നിര്‍ദ്ദേശിച്ചിട്ടുള്ള നിയമ
ങ്ങള്‍ക്കനുസരിച്ചു സംയോജിപ്പിച്ച്‌ യഥാര്‍ഥ സന്ദേശം ആക്കി മാറ്റുകയും ചെയ്യുന്നു.
TCP/IP നിയമങ്ങളില്‍ നടക്കുന്ന വിവിധ പ്രവര്‍ത്തനങ്ങള്‍ ചിത്രം 8.32 കൊടു
ത്തിരിക്കുന്നു. ഈ പാക്കറ്റുകള്‍ ലക്ഷ്യ സ്ഥാനത്തു എത്തിച്ചേരുന്നു എന്ന്‌ ഉറപ്പാക്കു
ന്നത്‌ ഇന്റര്‍നെറ്റ്‌ പ്രോട്ടോക്കോള്‍ ആണ്‌. ഒരേ സന്ദേശത്തിന്റെ വിവിധ പാക്കറ്റുകള്‍
പല പാതകളിലൂടെയാണ്‌ സഞ്ചരിക്കുന്നതെങ്കിലും അവ ഒരേ ലക്ഷ്യസ്ഥാനത്തു
എത്തിച്ചേരുകയും അവയെ അവിടെ വെച്ച്‌ സംയോജിപ്പിക്കുകയും ചെയ്യുന്നു. HTTP,
FTP, DNS തുടങ്ങിയ പ്രോട്ടോക്കോളുകളും TCP/IP പ്രോട്ടോക്കോളിനുണ്ട്‌.

ഘട്ടം 1 ഫ്ട്ടം 2
TCP പ്രോട്ടോക്കോള്‍ IP ്പ്രോട്ടോക്കോളിനെ അനുസ
ഡാറ്റയെ പാക്കറ്റുകള്‍ രിച്ച്‌ പാക്കറ്റുകള്‍ റൂട്ടില്‍ നിന്ന്‌ ഘട്ടം 3 A
ആക്കുന്നു. റൂട്ടരിലേക്ക്‌ ഉന്റര്‍നെറ്റിലൂടെ TCP പ്രോട്ടോടക്കാര്‍
സഞ്ചരിക്കുന്നു.

പാക്കറ്റുകളെ പൂര്‍വ്വ
സ്ഥിതിയിലാക്കുന്നു.

രൂട്ടര്‍
ചിതം 6.24 1/1 യുടെ പ്രവര്‍ത്തനം

ഒന്നാം വര്‍ഷ കമ്പ്യൂട്ടര്‍ സയന്‍സ്‌ 11. കമ്പ്യുട്ടര്‍ ശൃംഖലകള്‍

ഒ. HTTP

ഹൈപ്പര്‍ ടെക്സ്റ്റ്‌ ട്രാന്‍സ്ഫര്‍ പ്രോട്ടോകോള്‍ (Hyper Text Transfer Protocol) എന്നാണ്‌
HTTP യുടെ പൂര്‍ണ രൂപം. ക്ലയന്റില്‍ നിന്നുള്ള അഭൃര്‍ഥന കൈമാറ്റം ചെയ്യുവാനും,
സെര്‍വറില്‍ നിന്ന്‌ പ്രതികരണങ്ങള്‍ സ്വീകരിക്കുവാനുമുള്ള അംഗീകൃത പെരുമാറ്റ
ചട്ടങ്ങളാണിത്‌. ക്ലൂയന്റില്‍ നിന്ന്‌ ബ്രൌസര്‍ വഴി അപേക്ഷ സ്വീകരിക്കുന്ന സര്‍വര്‍,
1110വഴി സേവനം നല്‍കുകയും

അപേക്ഷ
ചെയ്യുന്നു. ഇത്തരം അഭ്യര്‍ഥനയുടെ
യും പ്രതികരണത്തിന്റെയും ജോഡി
കള്‍ HTTP സെഷന്‍ എന്ന്‌ അറി
യപ്പെടുന്നു. (ചിരം 8.35)

പ്രതികരണം
ക്ലയന്റില്‍ നിന്നുള്ള നിര്‍ദ്ദേശത്തെ ചിതം. 6.35 :HTTP മ്വെഷത്‌

തുടര്‍ന്ന്‌ സെര്‍വര്‍ പ്രതികരിക്കുന്നത്‌

രണ്ടു രീതിയിലാണ്‌. സെര്‍വറില്‍ മുന്‍കൂട്ടി സൂക്ഷിച്ചിട്ടുള്ള ഫയല്‍ അയച്ചു കൊടുത്തോ
(Static രീതി) സെര്‍വറില്‍ സൂക്ഷിച്ചിട്ടുള്ള പ്രോഗ്രാം കോഡിന്റെ പ്രവര്‍ത്തന ഫലമാ
യിട്ടുള്ള ഫയല്‍ അയച്ചു കൊടുത്തോ (Dynamic രീതി) ആകാം അത്‌.

HTTP യുക്ട One} (പഥാന സവിശേക്ഷതകശ്‌
e 111110 യില്‍ വിവര വിനിമയ മാധ്യമത്തിന്റെ സ്വാധീനമില്ല.

൫ 11110 അസ്ഥിരമാണ്‌ (അഭ്യര്‍ഥനയുടെയും പ്രതികരണത്തിന്റെയും സമയത്തു
മാര്രം) ക്ലയന്റ്‌ സര്‍വര്‍ ബന്ധം പരസ്പരം നിലനിര്‍ത്തുകയും അതിനുശേഷം
ബന്ധം നിശേഷം വിച്ചേദിക്കുകയും ചെയ്യുന്നു.

b. FIP

എഫ്‌ ടി പി യുടെ പൂര്‍ണരൂപം ഫയല്‍ ട്രാന്‍സ്ഫര്‍ പ്രോട്ടോകോള്‍ (File Transfer
Protocol) എന്നാണ്‌. ഡാറ്റയും പ്രോഗ്രാം ഫയലുകളും ശൃംഖല വഴി പരസ്പരം കൈ
മാറ്റം ചെയ്യുവാന്‍ ഉപയോഗിക്കുന്ന അടിസ്ഥാന പ്രോട്ടോകോള്‍ ആണിത്‌. ഇന്റര്‍നെറ്റി
ലൂടെ ലളിതമായ രീതിയില്‍ കമ്പ്യൂട്ടറുകള്‍ തമ്മില്‍ ഫയലുകള്‍ കൈമാറാനുള്ള മാര്‍ഗ
മാണ്‌ HO). TCP യും യും ഉപയോഗിച്ച്‌ അയയ്ക്കുകയും സ്വീകരിക്കുകയും ചെയ്യുന്നു.

സെര്‍വറിലെ സുരക്ഷാ മാര്‍ഗങ്ങള്‍ ആയ യൂസര്‍ നാമവും പാസ്സ്‌ വേര്‍ഡും ഉപയോ
ഗിച്ച്‌ ഫയലുകള്‍ സുരക്ഷിതമായി കൈമാറ്റം ചെയ്യുന്നത്‌ ക്ലയന്റ്‌ സെര്‍വര്‍ ഘടനയായ
FTP ഉപയോഗിച്ചാണ്‌. FTP ക്ലയന്റ്‌ പ്രോഗ്രാമുകളായ FileZ-illa, CUTEFTP എന്നിവ
ഉപയോഗിച്ച്‌ ഫയലുകള്‍ വളരെ എളുപ്പത്തില്‍ അയയ്ക്കുവാനും സ്വീകരിക്കുവാനും
കഴിയുന്നു.

. DNS

ഡൊമൈന്‍ നെയിം സിസ്റ്റം (Domain Name System) എന്നാണ്‌ DNS ന്റെ പൂര്‍ണ
രൂപം. വെബ്‌ സ്രൌസറിന്റെ അഡ്രെസ്സ്‌ ബാറില്‍ നമ്മള്‍ ടൈപ്പ്‌ ചെയ്യുന്ന വെബ്‌
മേല്‍വിലാസത്തിന്റെ (ഡൊമൈന്‍ നാമം) IP മേല്‍വിലാസം DNS നമുക്ക്‌ നല്‍കുന്നു.
ന്നാം വര്‍ഷ കമ്പ്യൂട്ടര്‍ സയന്‍സ്‌ 11. കമ്പ്യുട്ടര്‍ ശൃംഖലകള്‍

(മൊബൈല്‍ ഫോണില്‍ ഒരു പേര്‍ തിരഞ്ഞെടുക്കുമ്പോള്‍ അതില്‍ ഫോണ്‍ നമ്പര്‍
ഉള്ളത്‌ പോലെ)

DNS നു അതിന്റെതായ ശൃംഖലകള്‍ ഉണ്ട്‌. ഇന്റര്‍നെറ്റില്‍ ഉള്ള എല്ലാ വെബ്സ്റ്്റു
കളുടെയും IP മേല്‍വിലാസങ്ങളും ഡൊമൈയിന്‍ നാമങ്ങളും ഒരു ഡാറ്റാബേസില്‍
ശേഖരിച്ചിട്ടുണ്ട്‌. ഇന്റര്‍നെറ്റിലെ ഓരോ നോഡിന്റെയും IP മേല്‍വിലാസം സ്ഥിരമാണ്‌
എന്നതാണ്‌ DNS ന്റെ അടിസ്ഥാനം. ഒരു DNS നു ഒരു ഡൊമൈന്‍ നാമത്തിനെ
വിവര്‍ത്തനം ചെയ്തു IP മേല്‍വിലാസമാക്കുവാന്‍ കഴിഞ്ഞില്ലെങ്കില്‍ അത്‌ അടുത്ത
DNS നോടും, അതിനും കഴിഞ്ഞില്ലെങ്കില്‍ അതിനടുത്തതിനോടും വിവരവിനിമയം
നടത്തും. ഈ പ്രക്രിയ ശരിയായ IP മേല്‍വിലാസം കിട്ടുന്നത്‌ വരെ തുടരുന്നു.

TCP/IP, HTTP, FTP, DNS എന്നിവയല്ലാതെ ഏതെങ്കിലും അഞ്ചു
പ്രോട്ടോക്കോളുകളെക്കുറിച്ച്‌ കുറിപ്പ്‌ തയാറക്കുക.

11.11 യൂണിഫോം റിസോഴ്സ്‌ ലൊക്കെറ്റര്‍ (Uniform Resource Location (URL))

യൂണിഫോം റിസോഴ്‌സ്‌ ലൊക്കേറ്റര്‍ എന്നതാണ്‌ URL- ന്റെ പൂര്‍ണ രൂപം. URL എന്നത്‌
ക്രമീകരിച്ച വാക്കുകള്‍ ഉപയോഗിച്ച്‌ വെബ്‌ പ്രൌസറുകള്‍, ഇമെയില്‍ പ്രോഗ്രാമുകള്‍,
മറ്റു സോഫ്റ്റ്വെയറുകള്‍ തുടങ്ങിയവയെ ഇന്റര്‍നെറ്റില്‍ തിരിച്ചറിയുവാന്‍ സഹായി
ക്കുന്ന ഒന്നാണ്‌. ഇന്റെര്‍നെറ്റിലുള്ള എല്ലാ വിഭവങ്ങള്‍ക്കും (resources) തനതായ URL
ഉണ്ടായിരിക്കും. ഫയലുകള്‍, അതുള്‍പ്പെടുന്ന വെബ്പേജുകള്‍ മറ്റു ഡോക്യുമെന്റു
കള്‍, ഗ്രാഫിക്സ്‌, പ്രോ്രഗാമുകള്‍ തുടങ്ങിയവയാണ്‌ ശ്യംഖല വിഭവങ്ങള്‍ (Network
resources). ഒരു URL-@8 അക്ഷരങ്ങള്‍, അക്കങ്ങള്‍, ചിഹ്നങ്ങളും ഉണ്ട്‌.

ഒരു URL മേതീവിലാസത്തെ മുമ്നായ? തരം തതിച്ചിരിക്കുന്നു
a) നെറ്റ്വര്‍ക്ക്‌ പ്രോട്ടോക്കോള്‍
b) ഡൊമൈന്‍ നാമം (ഹോസ്റ്റിന്റെ പേര്‍ അല്ലങ്കില്‍ വിലാസം?)

9 ഫയല്‍ നാമം

ഉദാഹരണത്തിന്‌ http://www.dhsekerala.gov.in/index.html എന്ന URL ന്‌ മൂന്നു ഭാഗങ്ങള്‍
ഉണ്ട്‌. ചിത്രം 8.36 ഈ URL ന്റെ വിവിധ ഘടകങ്ങള്‍ കാണിച്ചിരിക്കുന്നു.

http:// www.dhsekerala.gov.in /index.html

പ്രോട്ടോക്കോള്‍ ഡൊമൈന്‍ നാമം ഫയല്‍ നാഥം

alOo 8.36 02. ന്റെ ഘകങ്ങശ്‌

ഒന്നാം വര്‍ഷ കമ്പ്യൂട്ടര്‍ സയന്‍സ്‌ 11. കമ്പ്യുട്ടര്‍ ശൃംഖലകള്‍

മൂന്നു വിഭാഗങ്ങളുടെയും വിശദ വിവരങ്ങള്‍ ചുവടെ ചേര്‍ത്തിരിക്കുന്നു.
a) പ്രോട്ടോക്കോള്‍ (Protocol)

ഡൊമൈനില്‍ നിന്ന്‌ വിവരങ്ങള്‍ ഏതു പ്രോട്ടോകോള്‍ ഉപയോഗിച്ചാണ്‌ സ്വീകരി
ക്കേണ്ടത്‌ എന്നത്‌ ്രൌസറിനെ അറിയിക്കുന്നു.

b) ഡൊമൈന്‍ നാമം (Domain name)

ഡൊമൈന്‍ നാമം എന്നത്‌ ഡൊമൈന്‍ നെയിം സിസ്റ്റം വഴി സെര്‍വറിനു നല്‍കിയ
പേരാണ്‌. ഒരു URL ലെ ഡൊമൈന്‍ നാമം ഒരു വെബ്‌ സെര്‍വറിനെ കണ്ടെത്തുവാന്‍
സഹായിക്കുന്നു. വളരെ എളുപ്പത്തില്‍ ഓര്‍മ്മ നില്‍ക്കുന്ന വിധത്തില്‍ ഇന്റര്‍നെറ്റ്‌ ഉപ
ഭോക്താക്കള്‍ക്ക്‌ ശ്രസ്വനാമത്തില്‍ കിട്ടുന്നു. കമ്പ്യൂട്ടര്‍ ഉപയോഗിച്ച്‌ ഇന്റര്‍നെറ്റിലൂടെ
വിവരവിനിമയം നടത്താന്‍, IP അആരയ്ഡൂസ്‌ ഉപയോഗിക്കാവുന്നതാണ്‌. എന്നാല്‍ എല്ലാ
കമ്പ്യൂട്ടറുകളുടെയും IP അഡ്രസ്‌ ഓര്‍ത്തിരിക്കുക എന്നത്‌ പ്രായോഗികമല്ല. അതു
കൊണ്ട്‌ വെബ്‌ സര്‍വറിനു പേര്‍ നല്‍കുകയും, ഈ പേരിനു തുല്യമായ IP വിലാസ
ങ്ങളുടെ ഒരു പട്ടിക ഉണ്ടാക്കി സുക്ഷിക്കുക എന്ന സ്ര്രദായം കൊണ്ട്‌ വന്നു. ഇതിനെ
യാണ്‌ ഡൊമൈന്‍ നാമം എന്ന്‌ പറയുന്നത്‌. ഉദാഹരണം dhsekerala.gov.in, keralaresults.

nic.in ,google.com, gmail.com.

ഒരു ഡൊമൈന്‍ നാമത്തിനു സാധാരണ ഒന്നില്‍ കൂടുതല്‍ ഭാഗങ്ങള്‍ ഉണ്ട്‌. ടോപ്‌
ലെവല്‍ ഡൊമൈന്‍ അഥവാ പ്രാഥമിക ഡൊമൈന്‍, ഉപ ഡൊമൈന്‍ എന്നിവ.

മുകളില്‍ സൂചിപ്പിച്ച ഉദാഹരണത്തില്‍ in എന്നത്‌ പ്രാഥമിക ഡൊമൈനും, gov എന്നത്‌
in ന്റെ ഉപ ഡൊമൈനും, dhsekerala എന്നത്‌ gov യുടെ ഉപ ഡൊമൈനുമാണ്‌.

വളരെ കുറച്ചു പ്രാഥമിക ഡൊമൈനുകള്‍ ആണ്‌ ഉള്ളത്‌. അവയെ രണ്ടു വിഭാഗങ്ങള്‍
ആയി തരം തിരിച്ചിരിക്കുന്നു. പൊതുവായ ഡൊമൈന്‍ നാമങ്ങള്‍ (Generic domain
NAMES) എന്നും രാജ്യത്തിന്റെ പ്രത്യേക ഡൊമൈന്‍ നാമങ്ങള്‍ (Country specific domain
NAMES) എന്നും. പൊതുവായ /രാജ്യ ഡൊമൈന്‍ നാമങ്ങളുടെ ഉദാഹരണങ്ങള്‍ പട്ടിക
8.2 ല്‍ കൊടുത്തിരിക്കുന്നു.

Country Specific Domain Names

‘com Commercial business ൩ India

‘edu —_—_ Educational institutions ‘au Australia

‘gov Government agencies “മേ Canada

‘mil —— Military ‘ch = China

‘net Network organizations jp Japan

‘org Organizations (nonprofit) «us United States of America

പട്ടിക 8.2 - ഫൊതുലായതും രാജ്യത്തിന്റെ (പുക OLWIOAAN നാഥങ്ങളും
c.

ന്നാം വര്‍ഷ കമ്പ്യൂട്ടര്‍ സയന്‍സ്‌ 11. കമ്പ്യുട്ടര്‍ ശൃംഖലകള്‍

ഫയല്‍ നാമം ( File Name)

ഏതു ഫയല്‍ ആണോ: തുറക്കേണ്ടത്‌ അതിനെ സൂചിപ്പിക്കുന്നതാണ്‌ ഈ ഭാഗം.
ചിത്രം 8.3ടലെ ഉദാഹരണത്തില്‍ കൊടുത്തിരിക്കുന്ന ഡൊമൈന്‍ നാമം നല്‍കുമ്പോള്‍

വെബ്‌ സര്‍വര്‍ index.html എന്ന ഫയലാണ്‌ അയച്ചു തരിക.

നമുക്ക്‌ ചെയ്യാം

പൊതുവായ ഡൊമൈനും രാജ്യത്തിന്റെ ഡൊമൈന്‍ നാമവും ഉള്‍കൊള്ളുന്ന
URL ന്റെ സാധുവായ ഉദാഹരണ പട്ടിക തയ്യാറാക്കുക. തുറന്ന്‌ വന്ന ഫയലിന്റെ
പേര്‍ എന്താണ്‌ എന്ന്‌ ശ്രദ്ധിക്കുക. (തുറന്നതിനുശേഷം അ്ധസ്‌ ബാറില്‍
കാണുന്ന പേര്‍ ആകും ഫയലിന്റെ പേര)

C.. നമുക്ക്‌ സംഗ്രഹിക്കാം

ഈ നൂറ്റാണ്ടിന്റെ അവര്യഘടകമായ കമ്പ്യൂട്ടര്‍ ശൃംഖലയെ കുറിച്ച്‌ നമ്മള്‍ ഈ അധ്യായത്തില്‍ പഠിച്ചു.
ശൃംഖലയുടെ പ്രാധാന്യത്തെക്കുറിച്ചും അവ നല്‍കുന്ന നേട്ടങ്ങളെ കുറിച്ചും ചര്‍ച്ച ചെയ്തു. വിവിധ
വിവര വിനിമയ ദാതിക മാധ്യമങ്ങളുടെ നിര്‍മിതിയെക്കുറിച്ചും അവയുടെ നേട്ടങ്ങളും കോട്ടങ്ങളും
അവയുടെ പ്രവര്‍ത്തനങ്ങളെക്കുറിച്ചും നാം ചര്‍ച്ച ചെയ്തു. ശൃംഖല രൂപകല്‍ഷന ചെയ്യുമ്പോള്‍,
ഉപയോഗിക്കുന്ന വിവിധതരം ഉപകരണങ്ങളെക്കുറിച്ചും മനസ്സിലാക്കി.

വിവിധതരം ശൃംഖലയെക്കുറിച്ച്‌ ചര്‍ച്ച ചെയ്യുന്നതിന്‌ മുന്‍പ്‌, ടോഷോളജി എന്ന പദത്തിലൂടെ വിവിധ
വിധത്തിലുള്ള ശൃംഖലയുടെ ക്രമീകരണളെക്കുറിച്ചു പഠിച്ചു. TCP/IP പോലുള്ള ശൃംഖല പ്രോട്ടോ
ക്കോള്‍ ഉപയോഗിച്ച്‌ വിവരങ്ങള്‍ ക്രമൊറ്റം ചെയ്യുന്നത്‌ എങ്ങനെ എന്ന്‌ ചര്‍ച്ച ചെയ്തു.ഒരു
ശൃംഖലയിലെ നോഡിനെ കണ്ടെത്തുന്നത്‌ എങ്ങനെ എന്ന്‌ പഠിച്ചു. URL നെ കുറിച്ചുള്ള ചര്‍ച്ചയോടു
കൂടി ഈ പാഠദാഥം ഉപസംഹരിച്ചു.

ഈ അധ്യായം പുര്‍ത്തീകരണത്തോടെ പഠിതാവിന്‌

വിവരവിനിമയ മാധ്യമത്തെ തിരഞ്ഞെടുക്കുവാനും മനസ്സിലാക്കുവാനും കഴിയുന്നു.
വൃത്യസ്ത ശ്ൃംഖലകളെ താരതമ്യം ചെയ്യുന്നു.

ശൃംഖലയുടെ വിവിധ യുക്താധിഷ്ഠിത തരംതരിവുകള്‍ തിരിച്ചറിയുന്നു.
ശൃംഖലയിലൂടെ ഡാറ്റ അയയ്ക്കുന്നത്‌ മനസ്സിലാക്കുന്നു.

ലളിതമായ ഒരു ശൃംഖല നിര്‍മിക്കുന്നു.

ശൃംഖലയിലെ ഒരു നോഡ്‌ തിരിച്ചറിയുന്നു.

ഒരു URL ന്റെ വിവിധ ഭാഗങ്ങള്‍ തിരിച്ചറിയുന്നു.
ഒന്നാം വര്‍ഷ കമ്പ്യൂട്ടര്‍ സയന്‍സ്‌ 11. കമ്പ്യുട്ടര്‍ ശൃംഖലകള്‍

മാത്യകാ ചാട ॥॥॥॥॥॥॥॥॥॥॥॥॥॥॥॥॥॥॥॥॥॥

ഫ്രസ്ധോത്തര ചോദ്യങ്ങള്‍

1 പ്രകാശ തരംഗങ്ങളുടെ രൂപത്തില്‍ വിവരങ്ങള്‍ വഹിച്ചു കൊണ്ട്‌ പോകുന്ന സംപ്രേ
ക്ഷണ മാധ്യമമാണ്‌

a) കൊയാക്സിയല്‍ കേബിള്‍ b) ട്വിസ്റ്റഡ്‌ പെയര്‍
൭ വൈ-ഫൈ d) ഒപ്റ്റിക്കല്‍ ഫൈബര്‍

2. വൃത്യസ്ത പ്രോട്ടോക്കോളുള്ള വ്യത്യസ്ത ശ്ൃംഖലകളെ പരസ്പരം ബന്ധിപ്പിക്കുന്ന
ഉപകരണമാണ്‌

a) റൂട്ടര്‍ ) ബ്രിഡ്ജ്‌ 9 സ്വിച്ച്‌ ) ഗേറ്റ്വേ

3. ___ ക്രമീകരണത്തില്‍ ഒരു കമ്പ്യൂട്ടറിന്റെ തകരാര്‍ മൊത്തം ശൃംഖലയുടെ
പ്രവര്‍ത്തനത്തെയും ബാധിക്കുന്നു

൭) ബസ്‌ ) റിങ്‌ ൭ സ്റ്റാര്‍ ) ഇവയൊന്നും ഇല്ല

4. വിവിധ ഉപകരണങ്ങളില്‍ നിന്നുള്ള തരംഗങ്ങളെ ഒരൊറ്റ വിനിമയ മാധ്യമത്തിലൂടെ
ഒരേ സമയത്തു കടത്തിവിടുവാന്‍ ഉപകരണം ഉപയോഗിക്കുന്നു.

a) മോഡം ) സ്വിച്ച്‌ ൭ റൂട്ടര്‍ ) മള്‍ട്ടിപ്ളെക്സ്ര്‍
5. സാറ്റലൈറ്റ്‌ ലിങ്കുകള്‍ പൊതുവെ ഉപയോഗിക്കുന്നത്‌

a) PANS b) LANS c) MANS d) ഇവയിലെല്ലാം
ലഘു ഉപന്യാസ ചോദ്യങ്ങള്‍
1. ബാന്‍ഡ്‌ വിഡ്ത്‌ നിര്‍വ്ൃചിക്കുക.

2. ശ്യംഖലകളുമായി ബന്ധപ്പെട്ട രണ്ടു ഉപകരണങ്ങള്‍ ആണ്‌ സ്വിച്ചും ഹബ്ബും. ഇവയെ
വേര്‍തിരിക്കുക.

ദ. IP അഡ്രസ്‌ എന്നാല്‍ എന്താണ്‌? ഒരു ഉദാഹരണം എഴുതുക.

4. എന്താണ്‌ TCP/IP? ഇതിന്റെ പ്രാധാന്യം എന്ത്‌?

5. കമ്പ്യൂട്ടര്‍ ശൃംഖലയെ നിര്‍വ്വചിക്കുക.

6. എന്താണ്‌ ബ്ലൂടൂത്ത്‌?

7. എന്താണ്‌ മോഡം?

8. റുട്ടറും ഗേറ്റ്വേയും തമ്മിലുള്ള വ്യത്യാസം എന്താണ്‌?

9. കമ്പ്യൂട്ടര്‍ ശൃംഖല നിര്‍മ്മിക്കുന്നതിന്റെ ആവശ്യകത വിശദീകരിക്കുക?
10. കമ്പ്യൂട്ടര്‍ ശൃംഖലയുടെ ഉപയോഗങ്ങള്‍ എന്തൊക്കെയാണ്‌?

11. മൈക്രോവേവ്‌ സംപ്രേക്ഷണത്തിന്റെ പോരായ്മകള്‍ എന്തൊക്കെയാണ്‌? എങ്ങനെ
അതിനെ മറികടക്കാം?
ന്നാം വര്‍ഷ കമ്പ്യൂട്ടര്‍ സയന്‍സ്‌ 11. കമ്പ്യുട്ടര്‍ ശൃംഖലകള്‍

12. വൈ-ഫൈ യുടെ സവിശേഷതകള്‍ എന്തൊക്കെയാണ്‌?

13. ഒരു അന്തര്‍ദേശീയ സ്‌കൂള്‍ 45൩ ചുറ്റളവില്‍ സ്ഥാപിച്ചിരിക്കുന്ന കമ്പ്യൂട്ടറുകളെ തമ്മില്‍
ബന്ധിപ്പിക്കുവാന്‍ ആലോചിക്കുന്നു. ഇതിന്‌ ഉതകുന്ന സാമ്പത്തിക ലാഭമുള്ളതും അതി
വേഗതയുള്ളതും ആയ മാധ്യമം തെരഞ്ഞെടുക്കുക

14. എന്താണ്‌ NIC? ശൃംഖലയില്‍ അവയുടെ പ്രാധാന്യം എന്താണ്‌?

15. ഒരു സ്ഥാപനത്തിലെ കമ്പ്യൂട്ടര്‍ ശൃംഖലയുടെ മേലധികാരിയാണ്‌ നിങ്ങള്‍ എന്ന്‌ സങ്കല്‍
പ്പിക്കുക. ശൃംഖലയിലെ 10 Mbps ന്റെ Switch മാറ്റി 10 Mbps ന്റെ hub വെയ്ക്കുവാന്‍
നിങ്ങളോടു മേലധികാരി നിര്‍ദ്ദേശിക്കുന്ന? ഇതിനോട്‌ നിങ്ങള്‍ യോജിക്കുന്നുണ്ടോ?
നിങ്ങളുടെ അഭിപ്രായം സാധൂകരിക്കുക?

16. നിങ്ങളുടെ ബയോഡാറ്റ 1OKM അകലെയുള്ള കൂട്ടുകാരന്റെ കമ്പ്യൂട്ടറിലേക്കു ടെലി
ഫോണ്‍ ശൃംഖല വഴി കൈമാറ്റം ചെയ്യണമെങ്കില്‍

എ? രണ്ട്‌ ഭാഗത്തും ഉണ്ടായിരിക്കേണ്ട ഉപകരണത്തിന്റെ പേര്‍ എഴുതുക?

ബി) രണ്ടു കമ്പ്യൂട്ടറുകള്‍ തമ്മില്‍ ബന്ധം സ്ഥാപിച്ചു കഴിഞ്ഞാല്‍, ഈ ഉപകരണ
ത്തിലൂടെ ഫയലുകള്‍ അയയ്ക്കുകയും സ്വീകരിക്കുകയും ചെയ്യുന്നത്‌ എങ്ങനെയാണ്‌?

17. ഒരു കമ്പ്യൂട്ടര്‍ ശൃംഖലയില്‍ റിപ്പീറ്റര്‍ ഉപയോഗിക്കേണ്ടി വരുന്നത്‌ എപ്പോള്‍?
18. ഇന്‍പ്ഫാറെഡും, ബ്ലൂടൂത്ത്‌ സംപ്രേക്ഷണവും തമ്മില്‍ താരതമ്യം ചെയ്യുക?

19. ടെലിഫോണ്‍ ശൃംഖലയുമായി കമ്പ്യൂട്ടറുകളെ ബന്ധിപ്പിക്കുവാന്‍ ഉപയോഗിക്കുന്ന
ഉപകരണമേത്‌? ഇതിന്റെ പ്രവര്‍ത്തനം വിശദീകരിക്കുക?

20. 1.ഷ്പ്ടോപ്പോളജി വിശദീകരിക്കുക?

21. TCP/IP പ്രോട്ടോക്കോള്‍ ചുരുക്കി എഴുതുക?

22. എന്താണ്‌ MAC അഡ്രസ്‌? MAC അഡ്രസും IP അ്ധസും തമ്മിലുള്ള വൃത്യാസം
എന്താണ്‌?

ഉപന്യാസ ചോദ്യങ്ങള്‍

1. കമ്പ്യൂട്ടര്‍ ശ്ൃംഖലകളെ അവയുടെ വലുപ്പമനുസരിച്‌ എങ്ങനെ തരം തിരിച്ചിരിക്കുന്നു?

2. വ്യത്യസ്ത LAN ടോപ്പോളജികളെ താരതമ്യം ചെയ്യുക?

3. വിവിധ തരത്തിലുള്ള ഗൈഡഡ്‌ വിനിമയ ചാനലുകളെ കുറിച്ച്‌ വിശദീകരിക്കുക?

4. വ്യത്യസ്ത അണ്‍ ഗൈഡഡ്‌ മാധ്യമങ്ങള്‍ തമ്മില്‍ താരതമ്യം ചെയ്യുക?

5. പ്രോട്ടോക്കോള്‍ എന്ന പദം നിര്‍വ്ൃവചിക്കുക? ഏതെങ്കിലും രണ്ടു വിനിമയ പ്രോട്ടോ
ക്കോളുകള്‍ ചുരുക്കി വിശദീകരിക്കുക?

6. ശൃംഖലയില്‍ ഉപയോഗിക്കുന്ന വിവിധ തരത്തിലുള്ള വിവര വിനിമയ ഉപകരണങ്ങളെ
കുറിച്ച്‌ ചുരുക്കി വിശദീകരിക്കുക?
ക ന്നാം വര്‍ഷ കമ്പ്യൂട്ടര്‍ സയന്‍സ്‌ 11. കമ്പ്യുട്ടര്‍ ശൃംഖലകള്‍

7. താഴെ പറയുന്ന സന്ദര്‍ഭങ്ങളില്‍ ഏതു തരത്തിലുള്ള വിനിമയ മാധ്യമമാണ്‌ അനുയോ
ജ്യമാകുക?

a. LAN സ്ഥാപിക്കുക.
0. ലാപ്ടോപ്പില്‍ നിന്നും മൊബൈയിലേക്കു ഡാറ്റ കൈമാറുക.

൦. ഒരു മൊബൈല്‍ ഫോണില്‍ നിന്ന്‌ മറ്റൊരു മൊബൈല്‍ ഫോണിലേക്കു ഡാറ്റ
കൈമാറുക.

9. ഒന്നില്‍ കൂടുതല്‍ ഉപകരണങ്ങള്‍ നിയന്ത്രിക്കുന്ന ഒരു റിമോട്ട്‌ കണ്‍ട്രോള്‍ ഉണ്ടാ
ക്കുക.

1. രണ്ടു രാജ്യത്തുള്ള രണ്ടു സ്ഥാപനങ്ങള്‍ തമ്മിലുള്ള അതിവേഗ വിവരവിനിമയം.
ഉ. കുന്നിന്‍പ്രദേശത്തുള്ള (മലയോര മേഖലകളില്‍) വിവരവിനിമയം.

1. നഗരത്തിനുള്ളിലോ നഗര പരിധിക്കുള്ളിലോ കേബിള്‍ ഉപയോഗിച്ചുള്ള ചിലവേ
റിയ വിവരവിനിമയം.
ടെ ഒന്നാം വര്‍ഷ കമ്പ്യൂട്ടര്‍ സയന്‍സ്‌

അംഗീകൃത തത്വങ്ങള്‍
അനന്യത നിയമം

അഷ്ടസംഖ്യ

അസംബ്ലി ദാഷ

അസ്ഥിര ദശാംശ സംഖ്യ ലിറ്ററല്‍
അസ്ഥിര പ്രാഥമിക മെമറി
അറെകളുടെ പ്രഖ്യാപനം
അന്തര്‍നിര്‍മിത ഫങ്ഷനുകള്‍
ആവര്‍ത്തന പ്രസ്താവനകള്‍
ആധാരം

ആസ്കി

ഇടം നല്‍കല്‍

ഇസ്കി

ഉപയോക്തൃ നിര്‍വചിക്കുന്ന

ഉപയോക്തൃ നിര്‍വചിത ഫങ്ഷനുകള്‍

ഏക ഉദ്ധരണി (ഏക സൂചകം)
കടന്നുപോകല്‍

കമ്പ്യൂട്ടര്‍ ശൃംഖലകള്‍
ക്രമകെടുത്തല്‍

ക്രമ നിയഥം

ഗണിതം

ചിഹ്നവും മൂല്യവും

തലക്കെട്ട്‌

തനത്‌

തിരയല്‍

പദാവലി

പദാവലി

postulates

identtiy law

octal number
assembly language
floating point numeric literal/floating point literal
volatile primary memory
array declaration
built-in functions
iteration statements
base

ASCII

allocation

ISCII

user-defined

user defined function
single quote

traversal

computer networks
sort

commutative Law
arithmetic

sign and magnitude
header

default

searching
Oa കമ്പ്യൂട്ടര്‍ സയ

തീരുമാനമെടുക്കല്‍ പ്രസ്താവനകള്‍

ദരസംഖ്യാ സമ്പ്രദായം
ദ്വയസംഖ്യ

ദ്ധൈത സിദ്ധാന്തം

ദ്വിതീയ സംഭരണം

നല്‍കിയ ഇടം തിരികെ എടുക്കല്‍
നിര്‍ദ്ദേശം വ്യാഖ്യാനിക്കുക.
നിയന്ത്രണ പ്രസ്താവന
നീക്കിവെയ്പ്‌

ഡാറ്റ

ഡാറ്റ ഇനം

പദപ്രയോഗം

പരിരോധനാ പ്രയോഗം
പരിവര്‍ത്തന ഫങ്ഷനുകള്‍
പരിഷ്കരിക്കല്‍ പ്രസ്താവന
പരിവര്‍ത്തനം

പുരകം

പൂരക നിയഥം

പൂര്‍ണസംഖ്യ

പ്രഖ്യാപനം

പ്രാരംഭവില നല്‍കല്‍
പ്രയോഗം

പ്രസ്താവന

പ്രതിനിധാനം

പ്രാഥമിക സംഭരണം
പ്രൊസസ്സ്‌ കൈകാര്യം ചെയ്യുക

പ്രസ്താവന

decision making statement
decimal number system
binary number
principle of dualtiy
secondary storage
de-allocation

command interpretation
control statement
allocation

data

data type

expression

test expression
correction function
updation statement
conversion
complement
complementary law
integer

declaration
initialisation
expression

statement
representation
primary storage
process management

statement

പദാവലി

൫ © ഒന്നാം വര്‍ഷ കമ്പ്യൂട്ടര്‍ സയന്‍സ്‌

ഫങ്ഷന്‍ നാഥം

ഫയല്‍ നാഥം

ഫയല്‍ കൈകാര്യം ചെയ്യുക
ഫ്‌ളോട്ടിങ്‌ പോയിന്റ്‌ നമ്പര്‍
ബഹുമുഖ അറെ

ഭാഷ പ്രൊസസ്ത്റര്‍

ദഭാതിക ഘടകങ്ങള്‍
ബീജഗണിതം

മൂലസംഖ്യ

മെമ്മറി കൈകാര്യം ചെയ്യുക
മെമറി സ്ഥാനം

മെമ്മറി നീക്കിവെയ്ക്കല്‍
യുക്തി വിചിന്തനം (ലോജിക്കല്‍ റീസണിംഗി)
യുക്തിപരമായ നിഷേധം
യന്ത്ര ദാഷ

രേഖീയ തിരയല്‍
വര്‍ഗപുരക നിയമം
വര്‍ഗസ്മ നിയഥം

വിതരണ നിയഥം
വേരിയബിള്‍

ര്‍്രേണി

സാമൂഹിക മാധ്യമങ്ങള്‍
സംയോജന നിയഥം
സിദ്ധാന്തം

സ്ഥാന വില

സ്ഥാനീയ സംഖ്യ

സ്വയം ആവര്‍ത്തിക്കുന്ന ഫങ്ഷനുകള്‍

function name

file name

file management
floating point number
multi dimensional array
language processor
physcial component
algebra

radix

memory management
memory location
memory allocation
logical reasoning
logical negation
machine language
linear search
involution law
idempotent law
distributive law
variable

sequence

social media
associative law
theorem

weight

positional Number

recursive function

പദാവലി
സ്വാംരീകരണ നിയമം
സ്വത്ര്ത്ര ഓണ്‍ സോഴ്‌സ്‌
സുസ്ഥിര ദ്വിതീയ മെമറി
1 ന്റെ പുരകം

2 റെ പൂരകം

absorption Law

free and open source
non-volatile secondary memory
1’s Complement

2’s Complement

പദാവലി

